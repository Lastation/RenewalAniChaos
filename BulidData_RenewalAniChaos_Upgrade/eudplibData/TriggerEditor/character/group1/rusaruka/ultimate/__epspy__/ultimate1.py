## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import PluginVariables as msqcvar;
import PluginVariables as msqcvar
# (Line 2) import variable as v;
import variable as v
# (Line 3) import func.trig as trg;
from func import trig as trg
# (Line 4) import func.sound as s;
from func import sound as s
# (Line 6) function main(playerID)
# (Line 7) {
@EUDFunc
def f_main(playerID):
    # (Line 8) trg.Debuff_Slow();
    trg.Debuff_Slow()
    # (Line 9) trg.Debuff_BanReturn();
    trg.Debuff_BanReturn()
    # (Line 11) if (v.P_LoopMain[playerID] > 30)
    if EUDIf()(v.P_LoopMain[playerID] <= 30, neg=True):
        # (Line 12) {
        # (Line 13) MoveUnit(All, "80 + 1n Tom Kazansky", playerID, "Anywhere", "[Skill]HoldPosition");
        # (Line 14) MoveUnit(All, "80 + 1n Artanis", playerID, "Anywhere", "[Skill]HoldPosition");
        DoActions(MoveUnit(All, "80 + 1n Tom Kazansky", playerID, "Anywhere", "[Skill]HoldPosition"))
        # (Line 15) MoveUnit(All, "80 + 1n Mutalisk", playerID, "Anywhere", "[Skill]HoldPosition");
        DoActions(MoveUnit(All, "80 + 1n Artanis", playerID, "Anywhere", "[Skill]HoldPosition"))
        # (Line 16) }
        DoActions(MoveUnit(All, "80 + 1n Mutalisk", playerID, "Anywhere", "[Skill]HoldPosition"))
        # (Line 18) if (v.P_WaitMain[playerID] == 0)
    EUDEndIf()
    if EUDIf()(v.P_WaitMain[playerID] == 0):
        # (Line 19) {
        # (Line 20) if(v.P_CountMain[playerID] == 0)
        if EUDIf()(v.P_CountMain[playerID] == 0):
            # (Line 21) {
            # (Line 23) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 24) {
                # (Line 25) trg.Shape_Dot(playerID, 1, "40 + 1n Gantrithor", 0, 0);
                trg.Shape_Dot(playerID, 1, "40 + 1n Gantrithor", 0, 0)
                # (Line 26) trg.Shape_Dot(playerID, 8, "Protoss Dark Archon", 0, 0);
                trg.Shape_Dot(playerID, 8, "Protoss Dark Archon", 0, 0)
                # (Line 27) KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID);
                # (Line 28) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID))
                # (Line 29) trg.Main_Wait(0);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                trg.Main_Wait(0)
                # (Line 30) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 31) }
                # (Line 32) else if (v.P_LoopMain[playerID] == 1)
            if EUDElseIf()(v.P_LoopMain[playerID] == 1):
                # (Line 33) {
                # (Line 34) trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", 56, 56);
                trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", 56, 56)
                # (Line 35) trg.Shape_Square(playerID, 8, "Protoss Dark Archon", 56, 56);
                trg.Shape_Square(playerID, 8, "Protoss Dark Archon", 56, 56)
                # (Line 36) trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", 80, 0);
                trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", 80, 0)
                # (Line 37) trg.Shape_Square(playerID, 8, "Protoss Dark Archon", 80, 0);
                trg.Shape_Square(playerID, 8, "Protoss Dark Archon", 80, 0)
                # (Line 38) KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID);
                # (Line 39) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID))
                # (Line 40) trg.Main_Wait(0);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                trg.Main_Wait(0)
                # (Line 41) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 42) }
                # (Line 43) else if (v.P_LoopMain[playerID] == 2)
            if EUDElseIf()(v.P_LoopMain[playerID] == 2):
                # (Line 44) {
                # (Line 45) trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", 114, 114);
                trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", 114, 114)
                # (Line 46) trg.Shape_Square(playerID, 8, "Protoss Dark Archon", 114, 114);
                trg.Shape_Square(playerID, 8, "Protoss Dark Archon", 114, 114)
                # (Line 47) trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", 160, 0);
                trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", 160, 0)
                # (Line 48) trg.Shape_Square(playerID, 8, "Protoss Dark Archon", 160, 0);
                trg.Shape_Square(playerID, 8, "Protoss Dark Archon", 160, 0)
                # (Line 49) KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID);
                # (Line 50) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID))
                # (Line 51) trg.Main_Wait(0);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                trg.Main_Wait(0)
                # (Line 52) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 53) }
                # (Line 54) else if (v.P_LoopMain[playerID] >= 3 && v.P_LoopMain[playerID] <= 20)
            if EUDElseIf()(EUDSCAnd()(v.P_LoopMain[playerID] >= 3)(v.P_LoopMain[playerID] <= 20)()):
                # (Line 55) {
                # (Line 56) trg.Table_Cos(playerID, 9 * v.P_LoopMain[playerID], 288);
                trg.Table_Cos(playerID, 9 * v.P_LoopMain[playerID], 288)
                # (Line 57) trg.Table_Sin(playerID, 9 * v.P_LoopMain[playerID], 288);
                trg.Table_Sin(playerID, 9 * v.P_LoopMain[playerID], 288)
                # (Line 58) trg.Shape_Square(playerID, 1, "80 + 1n Tom Kazansky", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
                trg.Shape_Square(playerID, 1, "80 + 1n Tom Kazansky", v.P_AngleCos[playerID], v.P_AngleSin[playerID])
                # (Line 59) trg.Shape_Square(playerID, 8, "Torrasque", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
                trg.Shape_Square(playerID, 8, "Torrasque", v.P_AngleCos[playerID], v.P_AngleSin[playerID])
                # (Line 61) KillUnitAt(All, "Torrasque", "Anywhere", playerID);
                # (Line 62) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "Torrasque", "Anywhere", playerID))
                # (Line 63) Order("80 + 1n Tom Kazansky", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 64) trg.Main_Wait(100);
                DoActions(Order("80 + 1n Tom Kazansky", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(100)
                # (Line 65) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 66) }
                # (Line 67) else if (v.P_LoopMain[playerID] >= 21 && v.P_LoopMain[playerID] <= 38)
            if EUDElseIf()(EUDSCAnd()(v.P_LoopMain[playerID] >= 21)(v.P_LoopMain[playerID] <= 38)()):
                # (Line 68) {
                # (Line 69) trg.Table_Cos(playerID, -9 * v.P_LoopMain[playerID], 288);
                trg.Table_Cos(playerID, -9 * v.P_LoopMain[playerID], 288)
                # (Line 70) trg.Table_Sin(playerID, -9 * v.P_LoopMain[playerID], 288);
                trg.Table_Sin(playerID, -9 * v.P_LoopMain[playerID], 288)
                # (Line 71) trg.Shape_Square(playerID, 1, "80 + 1n Artanis", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
                trg.Shape_Square(playerID, 1, "80 + 1n Artanis", v.P_AngleCos[playerID], v.P_AngleSin[playerID])
                # (Line 72) trg.Shape_Square(playerID, 8, "50 + 1n Tank", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
                trg.Shape_Square(playerID, 8, "50 + 1n Tank", v.P_AngleCos[playerID], v.P_AngleSin[playerID])
                # (Line 74) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                # (Line 75) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                # (Line 76) Order("80 + 1n Artanis", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 77) trg.Main_Wait(100);
                DoActions(Order("80 + 1n Artanis", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(100)
                # (Line 78) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 79) }
                # (Line 80) else if (v.P_LoopMain[playerID] >= 39 && v.P_LoopMain[playerID] <= 50)
            if EUDElseIf()(EUDSCAnd()(v.P_LoopMain[playerID] >= 39)(v.P_LoopMain[playerID] <= 50)()):
                # (Line 81) {
                # (Line 82) trg.Table_Cos(playerID, 9 * v.P_LoopMain[playerID], 288);
                trg.Table_Cos(playerID, 9 * v.P_LoopMain[playerID], 288)
                # (Line 83) trg.Table_Sin(playerID, 9 * v.P_LoopMain[playerID], 288);
                trg.Table_Sin(playerID, 9 * v.P_LoopMain[playerID], 288)
                # (Line 84) trg.Shape_Square(playerID, 1, "80 + 1n Mutalisk", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
                trg.Shape_Square(playerID, 1, "80 + 1n Mutalisk", v.P_AngleCos[playerID], v.P_AngleSin[playerID])
                # (Line 85) trg.Shape_Square(playerID, 8, "60 + 1n Dragoon", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
                trg.Shape_Square(playerID, 8, "60 + 1n Dragoon", v.P_AngleCos[playerID], v.P_AngleSin[playerID])
                # (Line 87) KillUnitAt(All, "60 + 1n Dragoon", "Anywhere", playerID);
                # (Line 88) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "60 + 1n Dragoon", "Anywhere", playerID))
                # (Line 89) Order("80 + 1n Mutalisk", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 90) trg.Main_Wait(100);
                DoActions(Order("80 + 1n Mutalisk", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(100)
                # (Line 91) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 92) }
                # (Line 93) else if (v.P_LoopMain[playerID] == 51)
            if EUDElseIf()(v.P_LoopMain[playerID] == 51):
                # (Line 94) {
                # (Line 95) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 96) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 97) }
                # (Line 98) }
            EUDEndIf()
            # (Line 99) else if(v.P_CountMain[playerID] == 1)
        if EUDElseIf()(v.P_CountMain[playerID] == 1):
            # (Line 100) {
            # (Line 101) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 102) {
                # (Line 103) if (playerID < 3)
                if EUDIf()(playerID >= 3, neg=True):
                    # (Line 104) {
                    # (Line 105) GiveUnits(All, "80 + 1n Tom Kazansky", CurrentPlayer, "Anywhere", P7);
                    # (Line 106) GiveUnits(All, "80 + 1n Artanis", CurrentPlayer, "Anywhere", P7);
                    DoActions(GiveUnits(All, "80 + 1n Tom Kazansky", CurrentPlayer, "Anywhere", P7))
                    # (Line 107) GiveUnits(All, "80 + 1n Mutalisk", CurrentPlayer, "Anywhere", P7);
                    DoActions(GiveUnits(All, "80 + 1n Artanis", CurrentPlayer, "Anywhere", P7))
                    # (Line 108) }
                    DoActions(GiveUnits(All, "80 + 1n Mutalisk", CurrentPlayer, "Anywhere", P7))
                    # (Line 109) else
                    # (Line 110) {
                if EUDElse()():
                    # (Line 111) GiveUnits(All, "80 + 1n Tom Kazansky", CurrentPlayer, "Anywhere", P8);
                    # (Line 112) GiveUnits(All, "80 + 1n Artanis", CurrentPlayer, "Anywhere", P8);
                    DoActions(GiveUnits(All, "80 + 1n Tom Kazansky", CurrentPlayer, "Anywhere", P8))
                    # (Line 113) GiveUnits(All, "80 + 1n Mutalisk", CurrentPlayer, "Anywhere", P8);
                    DoActions(GiveUnits(All, "80 + 1n Artanis", CurrentPlayer, "Anywhere", P8))
                    # (Line 114) }
                    DoActions(GiveUnits(All, "80 + 1n Mutalisk", CurrentPlayer, "Anywhere", P8))
                    # (Line 115) trg.Main_Wait(0);
                EUDEndIf()
                trg.Main_Wait(0)
                # (Line 116) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 117) }
                # (Line 118) else if (v.P_LoopMain[playerID] == 1)
            if EUDElseIf()(v.P_LoopMain[playerID] == 1):
                # (Line 119) {
                # (Line 120) s.CharacterVoice(6);
                s.CharacterVoice(6)
                # (Line 121) SetSwitch("JunkYardDog", Set);
                # (Line 122) trg.Main_Wait(1200);
                DoActions(SetSwitch("JunkYardDog", Set))
                trg.Main_Wait(1200)
                # (Line 123) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 124) }
                # (Line 125) else if (v.P_LoopMain[playerID] == 2)
            if EUDElseIf()(v.P_LoopMain[playerID] == 2):
                # (Line 126) {
                # (Line 127) if (playerID < 3)
                if EUDIf()(playerID >= 3, neg=True):
                    # (Line 128) {
                    # (Line 129) GiveUnits(All, "80 + 1n Tom Kazansky", P7, "Anywhere", CurrentPlayer);
                    # (Line 130) GiveUnits(All, "80 + 1n Artanis", P7, "Anywhere", CurrentPlayer);
                    DoActions(GiveUnits(All, "80 + 1n Tom Kazansky", P7, "Anywhere", CurrentPlayer))
                    # (Line 131) GiveUnits(All, "80 + 1n Mutalisk", P7, "Anywhere", CurrentPlayer);
                    DoActions(GiveUnits(All, "80 + 1n Artanis", P7, "Anywhere", CurrentPlayer))
                    # (Line 132) }
                    DoActions(GiveUnits(All, "80 + 1n Mutalisk", P7, "Anywhere", CurrentPlayer))
                    # (Line 133) else
                    # (Line 134) {
                if EUDElse()():
                    # (Line 135) GiveUnits(All, "80 + 1n Tom Kazansky", P8, "Anywhere", CurrentPlayer);
                    # (Line 136) GiveUnits(All, "80 + 1n Artanis", P8, "Anywhere", CurrentPlayer);
                    DoActions(GiveUnits(All, "80 + 1n Tom Kazansky", P8, "Anywhere", CurrentPlayer))
                    # (Line 137) GiveUnits(All, "80 + 1n Mutalisk", P8, "Anywhere", CurrentPlayer);
                    DoActions(GiveUnits(All, "80 + 1n Artanis", P8, "Anywhere", CurrentPlayer))
                    # (Line 138) }
                    DoActions(GiveUnits(All, "80 + 1n Mutalisk", P8, "Anywhere", CurrentPlayer))
                    # (Line 139) SetSwitch("JunkYardDog", Clear);
                EUDEndIf()
                # (Line 140) trg.Main_Wait(0);
                DoActions(SetSwitch("JunkYardDog", Clear))
                trg.Main_Wait(0)
                # (Line 141) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 142) }
                # (Line 143) else if (v.P_LoopMain[playerID] == 3)
            if EUDElseIf()(v.P_LoopMain[playerID] == 3):
                # (Line 144) {
                # (Line 145) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 146) Order("80 + 1n Tom Kazansky", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 147) Order("80 + 1n Artanis", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(Order("80 + 1n Tom Kazansky", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 148) Order("80 + 1n Mutalisk", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(Order("80 + 1n Artanis", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 149) trg.Main_Wait(2600);
                DoActions(Order("80 + 1n Mutalisk", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(2600)
                # (Line 150) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 151) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 152) }
                # (Line 153) }
            EUDEndIf()
            # (Line 154) else if (v.P_CountMain[playerID] == 2)
        if EUDElseIf()(v.P_CountMain[playerID] == 2):
            # (Line 155) {
            # (Line 156) trg.Shape_NxNSquare(playerID, 1, "130 + 1n Norad", 5, 64);
            trg.Shape_NxNSquare(playerID, 1, "130 + 1n Norad", 5, 64)
            # (Line 157) trg.Shape_Square(playerID, 1, "130 + 1n Norad", 192, 0);
            trg.Shape_Square(playerID, 1, "130 + 1n Norad", 192, 0)
            # (Line 158) trg.Shape_Square(playerID, 1, "130 + 1n Norad", 192, 128);
            trg.Shape_Square(playerID, 1, "130 + 1n Norad", 192, 128)
            # (Line 159) trg.Shape_Square(playerID, 1, "130 + 1n Norad", 192, -128);
            trg.Shape_Square(playerID, 1, "130 + 1n Norad", 192, -128)
            # (Line 160) trg.Shape_Square(playerID, 1, "130 + 1n Norad", 256, 0);
            trg.Shape_Square(playerID, 1, "130 + 1n Norad", 256, 0)
            # (Line 161) trg.Shape_Square(playerID, 1, "130 + 1n Norad", 320, 0);
            trg.Shape_Square(playerID, 1, "130 + 1n Norad", 320, 0)
            # (Line 162) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
            # (Line 163) Order("130 + 1n Norad", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
            DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
            # (Line 164) trg.Main_Wait(1200);
            DoActions(Order("130 + 1n Norad", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
            trg.Main_Wait(1200)
            # (Line 165) v.P_CountMain[playerID] += 1;
            _ARRW(v.P_CountMain, playerID).__iadd__(1)
            # (Line 166) }
            # (Line 167) else if (v.P_CountMain[playerID] == 3)
        if EUDElseIf()(v.P_CountMain[playerID] == 3):
            # (Line 168) {
            # (Line 169) KillUnitAt(All, "130 + 1n Norad", "Anywhere", CurrentPlayer);
            # (Line 170) KillUnitAt(All, "80 + 1n Tom Kazansky", "Anywhere", CurrentPlayer);
            DoActions(KillUnitAt(All, "130 + 1n Norad", "Anywhere", CurrentPlayer))
            # (Line 171) KillUnitAt(All, "80 + 1n Artanis", "Anywhere", CurrentPlayer);
            DoActions(KillUnitAt(All, "80 + 1n Tom Kazansky", "Anywhere", CurrentPlayer))
            # (Line 172) KillUnitAt(All, "80 + 1n Mutalisk", "Anywhere", CurrentPlayer);
            DoActions(KillUnitAt(All, "80 + 1n Artanis", "Anywhere", CurrentPlayer))
            # (Line 173) SetSwitch("UiltimateSwitch", Clear);
            DoActions(KillUnitAt(All, "80 + 1n Mutalisk", "Anywhere", CurrentPlayer))
            # (Line 174) trg.SkillEnd();
            DoActions(SetSwitch("UiltimateSwitch", Clear))
            trg.SkillEnd()
            # (Line 175) }
            # (Line 176) }
        EUDEndIf()
        # (Line 177) }
    EUDEndIf()
