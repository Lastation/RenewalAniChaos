## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import variable as v;
import variable as v
# (Line 2) import func.trig as trg;
from func import trig as trg
# (Line 4) function main(playerID)
# (Line 5) {
@EUDFunc
def f_main(playerID):
    # (Line 6) if (v.P_WaitMain[playerID] == 0)
    if EUDIf()(v.P_WaitMain[playerID] == 0):
        # (Line 7) {
        # (Line 8) if(v.P_CountMain[playerID] == 0 || v.P_CountMain[playerID] == 5 || v.P_CountMain[playerID] == 10)
        if EUDIf()(EUDSCOr()(v.P_CountMain[playerID] == 0)(v.P_CountMain[playerID] == 5)(v.P_CountMain[playerID] == 10)()):
            # (Line 9) {
            # (Line 10) trg.Shape_Square(playerID, 1, "60 + 1n Danimoth", 128, 128);
            trg.Shape_Square(playerID, 1, "60 + 1n Danimoth", 128, 128)
            # (Line 11) trg.Shape_Square(playerID, 1, "40 + 1n Zergling", 64, 64);
            trg.Shape_Square(playerID, 1, "40 + 1n Zergling", 64, 64)
            # (Line 12) KillUnitAt(All, "60 + 1n Danimoth", "Anywhere", playerID);
            # (Line 13) KillUnitAt(All, "40 + 1n Zergling", "Anywhere", playerID);
            DoActions(KillUnitAt(All, "60 + 1n Danimoth", "Anywhere", playerID))
            # (Line 14) trg.Main_Wait(0);
            DoActions(KillUnitAt(All, "40 + 1n Zergling", "Anywhere", playerID))
            trg.Main_Wait(0)
            # (Line 15) v.P_CountMain[playerID] += 1;
            _ARRW(v.P_CountMain, playerID).__iadd__(1)
            # (Line 16) }
            # (Line 17) else if(v.P_CountMain[playerID] == 1 || v.P_CountMain[playerID] == 6 || v.P_CountMain[playerID] == 11)
        if EUDElseIf()(EUDSCOr()(v.P_CountMain[playerID] == 1)(v.P_CountMain[playerID] == 6)(v.P_CountMain[playerID] == 11)()):
            # (Line 18) {
            # (Line 19) trg.Shape_Square(playerID, 1, "Kakaru", 64, 0);
            trg.Shape_Square(playerID, 1, "Kakaru", 64, 0)
            # (Line 20) trg.Shape_Square(playerID, 1, "40 + 1n Zealot", 128, 0);
            trg.Shape_Square(playerID, 1, "40 + 1n Zealot", 128, 0)
            # (Line 21) KillUnitAt(All, "Kakaru", "Anywhere", playerID);
            # (Line 22) KillUnitAt(All, "40 + 1n Zealot", "Anywhere", playerID);
            DoActions(KillUnitAt(All, "Kakaru", "Anywhere", playerID))
            # (Line 23) trg.Main_Wait(0);
            DoActions(KillUnitAt(All, "40 + 1n Zealot", "Anywhere", playerID))
            trg.Main_Wait(0)
            # (Line 24) v.P_CountMain[playerID] += 1;
            _ARRW(v.P_CountMain, playerID).__iadd__(1)
            # (Line 25) }
            # (Line 26) else if(v.P_CountMain[playerID] == 2 || v.P_CountMain[playerID] == 7 || v.P_CountMain[playerID] == 12)
        if EUDElseIf()(EUDSCOr()(v.P_CountMain[playerID] == 2)(v.P_CountMain[playerID] == 7)(v.P_CountMain[playerID] == 12)()):
            # (Line 27) {
            # (Line 28) trg.Shape_Square(playerID, 1, "40 + 1n Wraith", 64, 64);
            trg.Shape_Square(playerID, 1, "40 + 1n Wraith", 64, 64)
            # (Line 29) trg.Shape_Square(playerID, 1, "50 + 1n Tank", 64, 64);
            trg.Shape_Square(playerID, 1, "50 + 1n Tank", 64, 64)
            # (Line 30) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
            # (Line 31) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
            DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
            # (Line 32) Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
            DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
            # (Line 33) trg.Main_Wait(60);
            DoActions(Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
            trg.Main_Wait(60)
            # (Line 34) v.P_CountMain[playerID] += 1;
            _ARRW(v.P_CountMain, playerID).__iadd__(1)
            # (Line 35) }
            # (Line 36) else if(v.P_CountMain[playerID] == 3 || v.P_CountMain[playerID] == 8 || v.P_CountMain[playerID] == 13)
        if EUDElseIf()(EUDSCOr()(v.P_CountMain[playerID] == 3)(v.P_CountMain[playerID] == 8)(v.P_CountMain[playerID] == 13)()):
            # (Line 37) {
            # (Line 38) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
            # (Line 40) trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 128, 0);
            DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
            trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 128, 0)
            # (Line 41) trg.Shape_Square(playerID, 1, "60 + 1n Archon", 128, 0);
            trg.Shape_Square(playerID, 1, "60 + 1n Archon", 128, 0)
            # (Line 42) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
            # (Line 43) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
            DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
            # (Line 44) Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
            DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
            # (Line 45) trg.Main_Wait(50);
            DoActions(Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
            trg.Main_Wait(50)
            # (Line 46) v.P_CountMain[playerID] += 1;
            _ARRW(v.P_CountMain, playerID).__iadd__(1)
            # (Line 47) }
            # (Line 48) else if(v.P_CountMain[playerID] == 4 || v.P_CountMain[playerID] == 9 || v.P_CountMain[playerID] == 14)
        if EUDElseIf()(EUDSCOr()(v.P_CountMain[playerID] == 4)(v.P_CountMain[playerID] == 9)(v.P_CountMain[playerID] == 14)()):
            # (Line 49) {
            # (Line 50) KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID);
            # (Line 53) trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 64, 0);
            DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID))
            trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 64, 0)
            # (Line 54) trg.Shape_Square(playerID, 1, "Torrasque", 64, 0);
            trg.Shape_Square(playerID, 1, "Torrasque", 64, 0)
            # (Line 55) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
            # (Line 56) KillUnitAt(All, "Torrasque", "Anywhere", playerID);
            DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
            # (Line 57) trg.Main_Wait(0);
            DoActions(KillUnitAt(All, "Torrasque", "Anywhere", playerID))
            trg.Main_Wait(0)
            # (Line 58) v.P_CountMain[playerID] += 1;
            _ARRW(v.P_CountMain, playerID).__iadd__(1)
            # (Line 59) }
            # (Line 60) else if(v.P_CountMain[playerID] == 15)
        if EUDElseIf()(v.P_CountMain[playerID] == 15):
            # (Line 61) {
            # (Line 62) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
            # (Line 63) trg.SkillUnit(playerID, 1, "40 + 1n Mutalisk");
            DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
            trg.SkillUnit(playerID, 1, "40 + 1n Mutalisk")
            # (Line 64) trg.Shape_Square(playerID, 1, "40 + 1n Mutalisk", 32, 0);
            trg.Shape_Square(playerID, 1, "40 + 1n Mutalisk", 32, 0)
            # (Line 65) trg.Shape_Square(playerID, 1, "40 + 1n Mutalisk", 64, 0);
            trg.Shape_Square(playerID, 1, "40 + 1n Mutalisk", 64, 0)
            # (Line 66) trg.Shape_Square(playerID, 1, "40 + 1n Mutalisk", 96, 0);
            trg.Shape_Square(playerID, 1, "40 + 1n Mutalisk", 96, 0)
            # (Line 67) trg.Shape_Square(playerID, 1, "40 + 1n Mutalisk", 128, 0);
            trg.Shape_Square(playerID, 1, "40 + 1n Mutalisk", 128, 0)
            # (Line 68) trg.Shape_Square(playerID, 1, "Torrasque", 32, 32);
            trg.Shape_Square(playerID, 1, "Torrasque", 32, 32)
            # (Line 69) trg.Shape_Square(playerID, 1, "Torrasque", 64, 64);
            trg.Shape_Square(playerID, 1, "Torrasque", 64, 64)
            # (Line 70) trg.Shape_Square(playerID, 1, "Torrasque", 96, 64);
            trg.Shape_Square(playerID, 1, "Torrasque", 96, 64)
            # (Line 71) KillUnitAt(All, "Torrasque", "Anywhere", playerID);
            # (Line 72) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
            DoActions(KillUnitAt(All, "Torrasque", "Anywhere", playerID))
            # (Line 73) Order("40 + 1n Mutalisk", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
            DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
            # (Line 74) trg.Main_Wait(300);
            DoActions(Order("40 + 1n Mutalisk", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
            trg.Main_Wait(300)
            # (Line 75) v.P_CountMain[playerID] += 1;
            _ARRW(v.P_CountMain, playerID).__iadd__(1)
            # (Line 76) }
            # (Line 77) else if(v.P_CountMain[playerID] == 16)
        if EUDElseIf()(v.P_CountMain[playerID] == 16):
            # (Line 78) {
            # (Line 79) KillUnitAt(All, "40 + 1n Mutalisk", "Anywhere", playerID);
            # (Line 80) trg.SkillEnd();
            DoActions(KillUnitAt(All, "40 + 1n Mutalisk", "Anywhere", playerID))
            trg.SkillEnd()
            # (Line 81) }
            # (Line 82) }
        EUDEndIf()
        # (Line 83) }
    EUDEndIf()
