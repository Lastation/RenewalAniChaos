## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import PluginVariables as msqcvar;
import PluginVariables as msqcvar
# (Line 2) import variable as v;
import variable as v
# (Line 3) import func.trig as trg;
from func import trig as trg
# (Line 4) import func.sound as s;
from func import sound as s
# (Line 6) function main(playerID)
# (Line 7) {
@EUDFunc
def f_main(playerID):
    # (Line 8) if (v.P_WaitMain[playerID] == 0)
    if EUDIf()(v.P_WaitMain[playerID] == 0):
        # (Line 9) {
        # (Line 10) if (playerID < 3)
        if EUDIf()(playerID >= 3, neg=True):
            # (Line 11) { MoveUnit(All, v.P_UnitID[playerID], playerID, "Anywhere", "[Unique]Position_Team1"); }
            DoActions(MoveUnit(All, v.P_UnitID[playerID], playerID, "Anywhere", "[Unique]Position_Team1"))
            # (Line 12) else
            # (Line 13) { MoveUnit(All, v.P_UnitID[playerID], playerID, "Anywhere", "[Unique]Position_Team2"); }
        if EUDElse()():
            DoActions(MoveUnit(All, v.P_UnitID[playerID], playerID, "Anywhere", "[Unique]Position_Team2"))
            # (Line 15) if (v.P_CountMain[playerID] == 0)
        EUDEndIf()
        if EUDIf()(v.P_CountMain[playerID] == 0):
            # (Line 16) {
            # (Line 17) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 18) {
                # (Line 19) SetInvincibility(Enable, v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 20) s.CharacterVoice(7);
                DoActions(SetInvincibility(Enable, v.P_UnitID[playerID], playerID, "Anywhere"))
                s.CharacterVoice(7)
                # (Line 21) trg.Main_Wait(5800);
                trg.Main_Wait(5800)
                # (Line 22) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 23) }
                # (Line 24) else if (v.P_LoopMain[playerID] == 1)
            if EUDElseIf()(v.P_LoopMain[playerID] == 1):
                # (Line 25) {
                # (Line 26) s.CharacterVoice(8);
                s.CharacterVoice(8)
                # (Line 27) trg.Main_Wait(5600);
                trg.Main_Wait(5600)
                # (Line 28) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 29) }
                # (Line 30) else if (v.P_LoopMain[playerID] == 2)
            if EUDElseIf()(v.P_LoopMain[playerID] == 2):
                # (Line 31) {
                # (Line 32) s.CharacterVoice(9);
                s.CharacterVoice(9)
                # (Line 33) trg.Main_Wait(6100);
                trg.Main_Wait(6100)
                # (Line 34) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 35) }
                # (Line 36) else if (v.P_LoopMain[playerID] == 3)
            if EUDElseIf()(v.P_LoopMain[playerID] == 3):
                # (Line 37) {
                # (Line 38) s.CharacterVoice(10);
                s.CharacterVoice(10)
                # (Line 39) trg.Main_Wait(6200);
                trg.Main_Wait(6200)
                # (Line 40) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 41) }
                # (Line 42) else if (v.P_LoopMain[playerID] == 4)
            if EUDElseIf()(v.P_LoopMain[playerID] == 4):
                # (Line 43) {
                # (Line 44) s.CharacterVoice(11);
                s.CharacterVoice(11)
                # (Line 45) trg.Main_Wait(0);
                trg.Main_Wait(0)
                # (Line 46) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 47) }
                # (Line 48) else if (v.P_LoopMain[playerID] == 5)
            if EUDElseIf()(v.P_LoopMain[playerID] == 5):
                # (Line 49) {
                # (Line 50) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 51) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 52) }
                # (Line 53) }
            EUDEndIf()
            # (Line 54) else if (v.P_CountMain[playerID] == 1)
        if EUDElseIf()(v.P_CountMain[playerID] == 1):
            # (Line 55) {
            # (Line 56) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 57) {
                # (Line 58) trg.Shape_NxNSquare(playerID, 1, "50 + 1n Battlecruiser", 1, 64);
                trg.Shape_NxNSquare(playerID, 1, "50 + 1n Battlecruiser", 1, 64)
                # (Line 59) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
                # (Line 60) trg.Main_Wait(0);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                trg.Main_Wait(0)
                # (Line 61) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 62) }
                # (Line 63) else if (v.P_LoopMain[playerID] == 1)
            if EUDElseIf()(v.P_LoopMain[playerID] == 1):
                # (Line 64) {
                # (Line 65) trg.Shape_NxNSquare(playerID, 1, "50 + 1n Battlecruiser", 3, 64);
                trg.Shape_NxNSquare(playerID, 1, "50 + 1n Battlecruiser", 3, 64)
                # (Line 66) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
                # (Line 67) trg.Main_Wait(0);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                trg.Main_Wait(0)
                # (Line 68) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 69) }
                # (Line 70) else if (v.P_LoopMain[playerID] == 2)
            if EUDElseIf()(v.P_LoopMain[playerID] == 2):
                # (Line 71) {
                # (Line 72) trg.Shape_NxNSquare(playerID, 1, "50 + 1n Battlecruiser", 5, 64);
                trg.Shape_NxNSquare(playerID, 1, "50 + 1n Battlecruiser", 5, 64)
                # (Line 73) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
                # (Line 74) trg.Main_Wait(0);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                trg.Main_Wait(0)
                # (Line 75) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 76) }
                # (Line 77) else if (v.P_LoopMain[playerID] == 3)
            if EUDElseIf()(v.P_LoopMain[playerID] == 3):
                # (Line 78) {
                # (Line 79) trg.Shape_NxNSquare(playerID, 1, "50 + 1n Battlecruiser", 7, 64);
                trg.Shape_NxNSquare(playerID, 1, "50 + 1n Battlecruiser", 7, 64)
                # (Line 80) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
                # (Line 81) trg.Main_Wait(0);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                trg.Main_Wait(0)
                # (Line 82) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 83) }
                # (Line 84) else if (v.P_LoopMain[playerID] == 4)
            if EUDElseIf()(v.P_LoopMain[playerID] == 4):
                # (Line 85) {
                # (Line 86) trg.Shape_NxNSquare(playerID, 1, "50 + 1n Battlecruiser", 9, 64);
                trg.Shape_NxNSquare(playerID, 1, "50 + 1n Battlecruiser", 9, 64)
                # (Line 87) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
                # (Line 88) trg.Main_Wait(0);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                trg.Main_Wait(0)
                # (Line 89) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 90) }
                # (Line 91) else if (v.P_LoopMain[playerID] == 5)
            if EUDElseIf()(v.P_LoopMain[playerID] == 5):
                # (Line 92) {
                # (Line 93) if (playerID < 3)
                if EUDIf()(playerID >= 3, neg=True):
                    # (Line 94) {
                    # (Line 95) CreateUnit(1, "Csejte Ungarn Nachtzehrer", "[Skill]Unit_Wait_8", P7);
                    # (Line 96) MoveUnit(1, v.P_UnitID[playerID], playerID, "Anywhere", "[Potal]Base7");
                    DoActions(CreateUnit(1, "Csejte Ungarn Nachtzehrer", "[Skill]Unit_Wait_8", P7))
                    # (Line 97) MoveUnit(1, "Csejte Ungarn Nachtzehrer", P7, "[Skill]Unit_Wait_ALL", "[Unique]Position_Team1");
                    DoActions(MoveUnit(1, v.P_UnitID[playerID], playerID, "Anywhere", "[Potal]Base7"))
                    # (Line 98) MoveUnit(1, v.P_UnitID[playerID], playerID, "Anywhere", "[Unique]Position_Team1");
                    DoActions(MoveUnit(1, "Csejte Ungarn Nachtzehrer", P7, "[Skill]Unit_Wait_ALL", "[Unique]Position_Team1"))
                    # (Line 99) }
                    DoActions(MoveUnit(1, v.P_UnitID[playerID], playerID, "Anywhere", "[Unique]Position_Team1"))
                    # (Line 100) else
                    # (Line 101) {
                if EUDElse()():
                    # (Line 102) CreateUnit(1, "Csejte Ungarn Nachtzehrer", "[Skill]Unit_Wait_8", P8);
                    # (Line 103) MoveUnit(1, v.P_UnitID[playerID], playerID, "Anywhere", "[Potal]Base8");
                    DoActions(CreateUnit(1, "Csejte Ungarn Nachtzehrer", "[Skill]Unit_Wait_8", P8))
                    # (Line 104) MoveUnit(1, "Csejte Ungarn Nachtzehrer", P8, "[Skill]Unit_Wait_ALL", "[Unique]Position_Team2");
                    DoActions(MoveUnit(1, v.P_UnitID[playerID], playerID, "Anywhere", "[Potal]Base8"))
                    # (Line 105) MoveUnit(1, v.P_UnitID[playerID], playerID, "Anywhere", "[Unique]Position_Team2");
                    DoActions(MoveUnit(1, "Csejte Ungarn Nachtzehrer", P8, "[Skill]Unit_Wait_ALL", "[Unique]Position_Team2"))
                    # (Line 106) }
                    DoActions(MoveUnit(1, v.P_UnitID[playerID], playerID, "Anywhere", "[Unique]Position_Team2"))
                    # (Line 107) trg.Main_Wait(0);
                EUDEndIf()
                trg.Main_Wait(0)
                # (Line 108) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 109) }
                # (Line 110) else if (v.P_LoopMain[playerID] == 6)
            if EUDElseIf()(v.P_LoopMain[playerID] == 6):
                # (Line 111) {
                # (Line 112) SetInvincibility(Disable, v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 113) trg.SkillEnd();
                DoActions(SetInvincibility(Disable, v.P_UnitID[playerID], playerID, "Anywhere"))
                trg.SkillEnd()
                # (Line 114) }
                # (Line 115) }
            EUDEndIf()
            # (Line 116) }
        EUDEndIf()
        # (Line 117) }
    EUDEndIf()
