## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import PluginVariables as msqcvar;
import PluginVariables as msqcvar
# (Line 2) import variable as v;
import variable as v
# (Line 3) import func.trig as trg;
from func import trig as trg
# (Line 5) function main(playerID)
# (Line 6) {
@EUDFunc
def f_main(playerID):
    # (Line 7) if (v.P_WaitMain[playerID] == 0)
    if EUDIf()(v.P_WaitMain[playerID] == 0):
        # (Line 8) {
        # (Line 9) switch(v.P_CountMain[playerID])
        EUDSwitch(v.P_CountMain[playerID])
        # (Line 10) {
        # (Line 11) case 0:
        _t2 = EUDSwitchCase()
        # (Line 12) case 11:
        if _t2(0):
            pass
        _t3 = EUDSwitchCase()
        # (Line 13) trg.Shape_Square(playerID, 1, "40 + 1n Lurker", 32, 0);
        if _t3(11):
            trg.Shape_Square(playerID, 1, "40 + 1n Lurker", 32, 0)
            # (Line 14) trg.Shape_Square(playerID, 1, "Torrasque", 24, 24);
            trg.Shape_Square(playerID, 1, "Torrasque", 24, 24)
            # (Line 15) KillUnitAt(All, "40 + 1n Lurker", "Anywhere", playerID);
            # (Line 16) KillUnitAt(All, "Torrasque", "Anywhere", playerID);
            DoActions(KillUnitAt(All, "40 + 1n Lurker", "Anywhere", playerID))
            # (Line 17) trg.Main_Wait(0);
            DoActions(KillUnitAt(All, "Torrasque", "Anywhere", playerID))
            trg.Main_Wait(0)
            # (Line 18) v.P_CountMain[playerID] += 1;
            _ARRW(v.P_CountMain, playerID).__iadd__(1)
            # (Line 19) break;
            EUDBreak()
            # (Line 20) case 1:
        _t4 = EUDSwitchCase()
        # (Line 21) trg.Shape_Square(playerID, 1, "40 + 1n Lurker", 64, 0);
        if _t4(1):
            trg.Shape_Square(playerID, 1, "40 + 1n Lurker", 64, 0)
            # (Line 22) trg.Shape_Square(playerID, 1, "Torrasque", 48, 48);
            trg.Shape_Square(playerID, 1, "Torrasque", 48, 48)
            # (Line 23) KillUnitAt(All, "40 + 1n Lurker", "Anywhere", playerID);
            # (Line 24) KillUnitAt(All, "Torrasque", "Anywhere", playerID);
            DoActions(KillUnitAt(All, "40 + 1n Lurker", "Anywhere", playerID))
            # (Line 25) trg.Main_Wait(0);
            DoActions(KillUnitAt(All, "Torrasque", "Anywhere", playerID))
            trg.Main_Wait(0)
            # (Line 26) v.P_CountMain[playerID] += 1;
            _ARRW(v.P_CountMain, playerID).__iadd__(1)
            # (Line 27) break;
            EUDBreak()
            # (Line 28) case 2:
        _t5 = EUDSwitchCase()
        # (Line 29) trg.Shape_Square(playerID, 1, "40 + 1n Lurker", 96, 0);
        if _t5(2):
            trg.Shape_Square(playerID, 1, "40 + 1n Lurker", 96, 0)
            # (Line 30) trg.Shape_Square(playerID, 1, "Torrasque", 72, 72);
            trg.Shape_Square(playerID, 1, "Torrasque", 72, 72)
            # (Line 31) KillUnitAt(All, "40 + 1n Lurker", "Anywhere", playerID);
            # (Line 32) KillUnitAt(All, "Torrasque", "Anywhere", playerID);
            DoActions(KillUnitAt(All, "40 + 1n Lurker", "Anywhere", playerID))
            # (Line 33) trg.Main_Wait(0);
            DoActions(KillUnitAt(All, "Torrasque", "Anywhere", playerID))
            trg.Main_Wait(0)
            # (Line 34) v.P_CountMain[playerID] += 1;
            _ARRW(v.P_CountMain, playerID).__iadd__(1)
            # (Line 35) break;
            EUDBreak()
            # (Line 36) case 3:
        _t6 = EUDSwitchCase()
        # (Line 37) trg.Shape_Square(playerID, 1, "40 + 1n Lurker", 128, 0);
        if _t6(3):
            trg.Shape_Square(playerID, 1, "40 + 1n Lurker", 128, 0)
            # (Line 38) trg.Shape_Square(playerID, 1, "Torrasque", 96, 96);
            trg.Shape_Square(playerID, 1, "Torrasque", 96, 96)
            # (Line 39) KillUnitAt(All, "40 + 1n Lurker", "Anywhere", playerID);
            # (Line 40) KillUnitAt(All, "Torrasque", "Anywhere", playerID);
            DoActions(KillUnitAt(All, "40 + 1n Lurker", "Anywhere", playerID))
            # (Line 41) trg.Main_Wait(0);
            DoActions(KillUnitAt(All, "Torrasque", "Anywhere", playerID))
            trg.Main_Wait(0)
            # (Line 42) v.P_CountMain[playerID] += 1;
            _ARRW(v.P_CountMain, playerID).__iadd__(1)
            # (Line 43) break;
            EUDBreak()
            # (Line 44) case 4:
        _t7 = EUDSwitchCase()
        # (Line 45) case 7:
        if _t7(4):
            pass
        _t8 = EUDSwitchCase()
        # (Line 46) trg.Shape_Square(playerID, 1, "40 + 1n Lurker", 160, 0);
        if _t8(7):
            trg.Shape_Square(playerID, 1, "40 + 1n Lurker", 160, 0)
            # (Line 47) trg.Shape_Square(playerID, 1, "Torrasque", 120, 120);
            trg.Shape_Square(playerID, 1, "Torrasque", 120, 120)
            # (Line 48) KillUnitAt(All, "40 + 1n Lurker", "Anywhere", playerID);
            # (Line 49) KillUnitAt(All, "Torrasque", "Anywhere", playerID);
            DoActions(KillUnitAt(All, "40 + 1n Lurker", "Anywhere", playerID))
            # (Line 50) trg.Main_Wait(0);
            DoActions(KillUnitAt(All, "Torrasque", "Anywhere", playerID))
            trg.Main_Wait(0)
            # (Line 51) v.P_CountMain[playerID] += 1;
            _ARRW(v.P_CountMain, playerID).__iadd__(1)
            # (Line 52) break;
            EUDBreak()
            # (Line 53) case 5:
        _t9 = EUDSwitchCase()
        # (Line 54) case 6:
        if _t9(5):
            pass
        _t10 = EUDSwitchCase()
        # (Line 55) trg.Shape_Square(playerID, 1, "40 + 1n Lurker", 192, 0);
        if _t10(6):
            trg.Shape_Square(playerID, 1, "40 + 1n Lurker", 192, 0)
            # (Line 56) trg.Shape_Square(playerID, 1, "Torrasque", 144, 144);
            trg.Shape_Square(playerID, 1, "Torrasque", 144, 144)
            # (Line 57) KillUnitAt(All, "40 + 1n Lurker", "Anywhere", playerID);
            # (Line 58) KillUnitAt(All, "Torrasque", "Anywhere", playerID);
            DoActions(KillUnitAt(All, "40 + 1n Lurker", "Anywhere", playerID))
            # (Line 59) trg.Main_Wait(0);
            DoActions(KillUnitAt(All, "Torrasque", "Anywhere", playerID))
            trg.Main_Wait(0)
            # (Line 60) v.P_CountMain[playerID] += 1;
            _ARRW(v.P_CountMain, playerID).__iadd__(1)
            # (Line 61) break;
            EUDBreak()
            # (Line 62) case 8:
        _t11 = EUDSwitchCase()
        # (Line 63) trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 128, 0);
        if _t11(8):
            trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 128, 0)
            # (Line 64) trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 96, 96);
            trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 96, 96)
            # (Line 65) trg.Shape_Square(playerID, 1, "40 + 1n Lurker", 128, 0);
            trg.Shape_Square(playerID, 1, "40 + 1n Lurker", 128, 0)
            # (Line 66) trg.Shape_Square(playerID, 1, "Torrasque", 96, 96);
            trg.Shape_Square(playerID, 1, "Torrasque", 96, 96)
            # (Line 67) KillUnitAt(All, "40 + 1n Lurker", "Anywhere", playerID);
            # (Line 68) KillUnitAt(All, "Torrasque", "Anywhere", playerID);
            DoActions(KillUnitAt(All, "40 + 1n Lurker", "Anywhere", playerID))
            # (Line 69) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
            DoActions(KillUnitAt(All, "Torrasque", "Anywhere", playerID))
            # (Line 70) Order("50 + 1n Battlecruiser", CurrentPlayer, "Anywhere", Attack, v.P_LocationID[playerID]);
            DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
            # (Line 71) trg.Main_Wait(180);
            DoActions(Order("50 + 1n Battlecruiser", CurrentPlayer, "Anywhere", Attack, v.P_LocationID[playerID]))
            trg.Main_Wait(180)
            # (Line 72) v.P_CountMain[playerID] += 1;
            _ARRW(v.P_CountMain, playerID).__iadd__(1)
            # (Line 73) break;
            EUDBreak()
            # (Line 74) case 9:
        _t12 = EUDSwitchCase()
        # (Line 75) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
        if _t12(9):
            # (Line 77) trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 96, 0);
            DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
            trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 96, 0)
            # (Line 78) trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 72, 72);
            trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 72, 72)
            # (Line 79) trg.Shape_Square(playerID, 1, "40 + 1n Lurker", 96, 0);
            trg.Shape_Square(playerID, 1, "40 + 1n Lurker", 96, 0)
            # (Line 80) trg.Shape_Square(playerID, 1, "Torrasque", 72, 72);
            trg.Shape_Square(playerID, 1, "Torrasque", 72, 72)
            # (Line 81) KillUnitAt(All, "40 + 1n Lurker", "Anywhere", playerID);
            # (Line 82) KillUnitAt(All, "Torrasque", "Anywhere", playerID);
            DoActions(KillUnitAt(All, "40 + 1n Lurker", "Anywhere", playerID))
            # (Line 83) MoveLocation( v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
            DoActions(KillUnitAt(All, "Torrasque", "Anywhere", playerID))
            # (Line 84) Order("40 + 1n Guardian", CurrentPlayer, "Anywhere", Attack, v.P_LocationID[playerID]);
            DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
            # (Line 85) trg.Main_Wait(180);
            DoActions(Order("40 + 1n Guardian", CurrentPlayer, "Anywhere", Attack, v.P_LocationID[playerID]))
            trg.Main_Wait(180)
            # (Line 86) v.P_CountMain[playerID] += 1;
            _ARRW(v.P_CountMain, playerID).__iadd__(1)
            # (Line 87) break;
            EUDBreak()
            # (Line 88) case 10:
        _t13 = EUDSwitchCase()
        # (Line 89) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
        if _t13(10):
            # (Line 91) trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 64, 0);
            DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID))
            trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 64, 0)
            # (Line 92) trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 48, 48);
            trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 48, 48)
            # (Line 93) trg.Shape_Square(playerID, 1, "40 + 1n Lurker", 64, 0);
            trg.Shape_Square(playerID, 1, "40 + 1n Lurker", 64, 0)
            # (Line 94) trg.Shape_Square(playerID, 1, "Torrasque", 48, 48);
            trg.Shape_Square(playerID, 1, "Torrasque", 48, 48)
            # (Line 95) KillUnitAt(All, "40 + 1n Lurker", "Anywhere", playerID);
            # (Line 96) KillUnitAt(All, "Torrasque", "Anywhere", playerID);
            DoActions(KillUnitAt(All, "40 + 1n Lurker", "Anywhere", playerID))
            # (Line 97) KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID);
            DoActions(KillUnitAt(All, "Torrasque", "Anywhere", playerID))
            # (Line 98) trg.Main_Wait(180);
            DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID))
            trg.Main_Wait(180)
            # (Line 99) v.P_CountMain[playerID] += 1;
            _ARRW(v.P_CountMain, playerID).__iadd__(1)
            # (Line 100) break;
            EUDBreak()
            # (Line 101) case 12:
        _t14 = EUDSwitchCase()
        # (Line 102) trg.SkillEnd();
        if _t14(12):
            trg.SkillEnd()
            # (Line 103) }
        # (Line 104) }
        EUDEndSwitch()
        # (Line 105) }
    EUDEndIf()
