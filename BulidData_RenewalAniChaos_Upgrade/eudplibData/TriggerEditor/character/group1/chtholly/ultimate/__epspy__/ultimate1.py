## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import variable as v;
import variable as v
# (Line 2) import func.trig as trg;
from func import trig as trg
# (Line 3) import func.sound as s;
from func import sound as s
# (Line 5) function main(playerID)
# (Line 6) {
@EUDFunc
def f_main(playerID):
    # (Line 7) MoveLocation("[Unique]Chtholly", v.P_UnitID[playerID], playerID, "Anywhere");
    # (Line 8) trg.Debuff_BanReturn();
    DoActions(MoveLocation("[Unique]Chtholly", v.P_UnitID[playerID], playerID, "Anywhere"))
    trg.Debuff_BanReturn()
    # (Line 9) trg.Buff_ShieldFix(10);
    trg.Buff_ShieldFix(10)
    # (Line 11) if (v.P_CountMain[playerID] > 2)
    if EUDIf()(v.P_CountMain[playerID] <= 2, neg=True):
        # (Line 12) {
        # (Line 13) s.CharacterVoice(14);
        s.CharacterVoice(14)
        # (Line 14) }
        # (Line 16) if (v.P_CountMain[playerID] < 6)
    EUDEndIf()
    if EUDIf()(v.P_CountMain[playerID] >= 6, neg=True):
        # (Line 17) {
        # (Line 18) Order("80 + 1n Artanis", playerID, "Anywhere", Move, v.P_LocationID[playerID]);
        # (Line 19) }
        DoActions(Order("80 + 1n Artanis", playerID, "Anywhere", Move, v.P_LocationID[playerID]))
        # (Line 21) if (v.P_WaitMain[playerID] == 0)
    EUDEndIf()
    if EUDIf()(v.P_WaitMain[playerID] == 0):
        # (Line 22) {
        # (Line 23) if (v.P_CountMain[playerID] == 0 && v.P_LoopMain[playerID] == 0)
        if EUDIf()(EUDSCAnd()(v.P_CountMain[playerID] == 0)(v.P_LoopMain[playerID] == 0)()):
            # (Line 24) {
            # (Line 25) trg.Main_Wait(1000);
            trg.Main_Wait(1000)
            # (Line 26) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 27) }
            # (Line 28) else if (v.P_CountMain[playerID] == 0 && v.P_LoopMain[playerID] == 1)
        if EUDElseIf()(EUDSCAnd()(v.P_CountMain[playerID] == 0)(v.P_LoopMain[playerID] == 1)()):
            # (Line 29) {
            # (Line 30) s.CharacterVoice(12);
            s.CharacterVoice(12)
            # (Line 31) trg.Main_Wait(3500);
            trg.Main_Wait(3500)
            # (Line 32) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 33) }
            # (Line 34) else if (v.P_CountMain[playerID] == 0 && v.P_LoopMain[playerID] == 2)
        if EUDElseIf()(EUDSCAnd()(v.P_CountMain[playerID] == 0)(v.P_LoopMain[playerID] == 2)()):
            # (Line 35) {
            # (Line 36) s.CharacterVoice(13);
            s.CharacterVoice(13)
            # (Line 37) trg.Main_Wait(0);
            trg.Main_Wait(0)
            # (Line 38) v.P_CountMain[playerID] += 1;
            _ARRW(v.P_CountMain, playerID).__iadd__(1)
            # (Line 39) v.P_LoopMain[playerID] = 0;
            _ARRW(v.P_LoopMain, playerID) << (0)
            # (Line 40) }
            # (Line 41) else if (v.P_CountMain[playerID] == 1 && v.P_LoopMain[playerID] <= 6)
        if EUDElseIf()(EUDSCAnd()(v.P_CountMain[playerID] == 1)(v.P_LoopMain[playerID] <= 6)()):
            # (Line 42) {
            # (Line 43) trg.Shape_NxNSquare(playerID, 1, "40 + 1n Gantrithor", (v.P_LoopMain[playerID] + 1), 64);
            trg.Shape_NxNSquare(playerID, 1, "40 + 1n Gantrithor", (v.P_LoopMain[playerID] + 1), 64)
            # (Line 44) KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID);
            # (Line 45) trg.Main_Wait(0);
            DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID))
            trg.Main_Wait(0)
            # (Line 46) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 47) }
            # (Line 48) else if (v.P_CountMain[playerID] == 1 && v.P_LoopMain[playerID] == 7)
        if EUDElseIf()(EUDSCAnd()(v.P_CountMain[playerID] == 1)(v.P_LoopMain[playerID] == 7)()):
            # (Line 49) {
            # (Line 50) trg.Main_Wait(0);
            trg.Main_Wait(0)
            # (Line 51) v.P_CountMain[playerID] += 1;
            _ARRW(v.P_CountMain, playerID).__iadd__(1)
            # (Line 52) v.P_LoopMain[playerID] = 0;
            _ARRW(v.P_LoopMain, playerID) << (0)
            # (Line 53) }
            # (Line 54) else if (v.P_CountMain[playerID] == 2)
        if EUDElseIf()(v.P_CountMain[playerID] == 2):
            # (Line 55) {
            # (Line 56) trg.Shape_Square(playerID, 6, "50 + 1n Tank", 192, 0);
            trg.Shape_Square(playerID, 6, "50 + 1n Tank", 192, 0)
            # (Line 57) trg.Shape_Square(playerID, 6, "50 + 1n Tank", 96, 192);
            trg.Shape_Square(playerID, 6, "50 + 1n Tank", 96, 192)
            # (Line 58) trg.Shape_Square(playerID, 6, "50 + 1n Tank", 192, 96);
            trg.Shape_Square(playerID, 6, "50 + 1n Tank", 192, 96)
            # (Line 59) trg.Shape_Square(playerID, 6, "50 + 1n Tank", 192, 192);
            trg.Shape_Square(playerID, 6, "50 + 1n Tank", 192, 192)
            # (Line 60) trg.Shape_Square(playerID, 4, "40 + 1n Goliath", 192, 0);
            trg.Shape_Square(playerID, 4, "40 + 1n Goliath", 192, 0)
            # (Line 61) trg.Shape_Square(playerID, 4, "40 + 1n Goliath", 192, 192);
            trg.Shape_Square(playerID, 4, "40 + 1n Goliath", 192, 192)
            # (Line 62) trg.Shape_Square(playerID, 4, "40 + 1n Marine", 96, 192);
            trg.Shape_Square(playerID, 4, "40 + 1n Marine", 96, 192)
            # (Line 63) trg.Shape_Square(playerID, 4, "40 + 1n Marine", 192, 96);
            trg.Shape_Square(playerID, 4, "40 + 1n Marine", 192, 96)
            # (Line 64) trg.Shape_Square(playerID, 4, "40 + 1n Marine", 192, 192);
            trg.Shape_Square(playerID, 4, "40 + 1n Marine", 192, 192)
            # (Line 65) trg.Shape_Dot(playerID, 12, "40 + 1n Marine", 0, 0);
            trg.Shape_Dot(playerID, 12, "40 + 1n Marine", 0, 0)
            # (Line 66) trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0);
            trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
            # (Line 67) MoveUnit(All, "(any unit)", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
            # (Line 68) Order("50 + 1n Tank", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
            DoActions(MoveUnit(All, "(any unit)", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
            # (Line 69) Order("40 + 1n Goliath", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
            DoActions(Order("50 + 1n Tank", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
            # (Line 70) Order("40 + 1n Marine", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
            DoActions(Order("40 + 1n Goliath", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
            # (Line 71) trg.Main_Wait(0);
            DoActions(Order("40 + 1n Marine", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
            trg.Main_Wait(0)
            # (Line 72) v.P_CountMain[playerID] += 1;
            _ARRW(v.P_CountMain, playerID).__iadd__(1)
            # (Line 73) }
            # (Line 74) else if (v.P_CountMain[playerID] == 3 && v.P_LoopMain[playerID] <= 27)
        if EUDElseIf()(EUDSCAnd()(v.P_CountMain[playerID] == 3)(v.P_LoopMain[playerID] <= 27)()):
            # (Line 75) {
            # (Line 76) trg.Table_Cos(playerID, 12 * v.P_LoopMain[playerID], 256);
            trg.Table_Cos(playerID, 12 * v.P_LoopMain[playerID], 256)
            # (Line 77) trg.Table_Sin(playerID, 12 * v.P_LoopMain[playerID], 256);
            trg.Table_Sin(playerID, 12 * v.P_LoopMain[playerID], 256)
            # (Line 78) trg.Shape_Square(playerID, 1, "80 + 1n Artanis", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
            trg.Shape_Square(playerID, 1, "80 + 1n Artanis", v.P_AngleCos[playerID], v.P_AngleSin[playerID])
            # (Line 79) trg.Shape_Square(playerID, 1, "Protoss Dark Archon", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
            trg.Shape_Square(playerID, 1, "Protoss Dark Archon", v.P_AngleCos[playerID], v.P_AngleSin[playerID])
            # (Line 80) trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0);
            trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
            # (Line 81) Order("80 + 1n Artanis", playerID, "Anywhere", Move, v.P_LocationID[playerID]);
            # (Line 82) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
            DoActions(Order("80 + 1n Artanis", playerID, "Anywhere", Move, v.P_LocationID[playerID]))
            # (Line 83) trg.Main_Wait(0);
            DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
            trg.Main_Wait(0)
            # (Line 84) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 85) }
            # (Line 86) else if (v.P_CountMain[playerID] == 3 && v.P_LoopMain[playerID] == 28)
        if EUDElseIf()(EUDSCAnd()(v.P_CountMain[playerID] == 3)(v.P_LoopMain[playerID] == 28)()):
            # (Line 87) {
            # (Line 88) trg.Main_Wait(0);
            trg.Main_Wait(0)
            # (Line 89) v.P_CountMain[playerID] += 1;
            _ARRW(v.P_CountMain, playerID).__iadd__(1)
            # (Line 90) v.P_LoopMain[playerID] = 0;
            _ARRW(v.P_LoopMain, playerID) << (0)
            # (Line 91) }
            # (Line 92) else if (v.P_CountMain[playerID] == 4)
        if EUDElseIf()(v.P_CountMain[playerID] == 4):
            # (Line 93) {
            # (Line 94) trg.Main_Wait(1500);
            trg.Main_Wait(1500)
            # (Line 95) v.P_CountMain[playerID] += 1;
            _ARRW(v.P_CountMain, playerID).__iadd__(1)
            # (Line 96) }
            # (Line 97) else if (v.P_CountMain[playerID] == 5)
        if EUDElseIf()(v.P_CountMain[playerID] == 5):
            # (Line 98) {
            # (Line 99) if (playerID < 3)	{ GiveUnits(All, "80 + 1n Artanis", playerID, "Anywhere", 6); }
            if EUDIf()(playerID >= 3, neg=True):
                DoActions(GiveUnits(All, "80 + 1n Artanis", playerID, "Anywhere", 6))
                # (Line 100) else 			{ GiveUnits(All, "80 + 1n Artanis", playerID, "Anywhere", 7); }
            if EUDElse()():
                DoActions(GiveUnits(All, "80 + 1n Artanis", playerID, "Anywhere", 7))
                # (Line 101) SetSwitch("JunkYardDog", Set);
            EUDEndIf()
            # (Line 102) trg.Main_Wait(250);
            DoActions(SetSwitch("JunkYardDog", Set))
            trg.Main_Wait(250)
            # (Line 103) v.P_CountMain[playerID] += 1;
            _ARRW(v.P_CountMain, playerID).__iadd__(1)
            # (Line 104) }
            # (Line 105) else if (v.P_CountMain[playerID] == 6)
        if EUDElseIf()(v.P_CountMain[playerID] == 6):
            # (Line 106) {
            # (Line 107) SetSwitch("JunkYardDog", Clear);
            # (Line 108) trg.Main_Wait(1500);
            DoActions(SetSwitch("JunkYardDog", Clear))
            trg.Main_Wait(1500)
            # (Line 109) v.P_CountMain[playerID] += 1;
            _ARRW(v.P_CountMain, playerID).__iadd__(1)
            # (Line 110) }
            # (Line 111) else if (v.P_CountMain[playerID] == 7)
        if EUDElseIf()(v.P_CountMain[playerID] == 7):
            # (Line 112) {
            # (Line 113) SetSwitch("JunkYardDog", Set);
            # (Line 114) trg.Main_Wait(250);
            DoActions(SetSwitch("JunkYardDog", Set))
            trg.Main_Wait(250)
            # (Line 115) v.P_CountMain[playerID] += 1;
            _ARRW(v.P_CountMain, playerID).__iadd__(1)
            # (Line 116) }
            # (Line 117) else if (v.P_CountMain[playerID] == 8)
        if EUDElseIf()(v.P_CountMain[playerID] == 8):
            # (Line 118) {
            # (Line 119) SetSwitch("JunkYardDog", Clear);
            # (Line 120) trg.Main_Wait(1000);
            DoActions(SetSwitch("JunkYardDog", Clear))
            trg.Main_Wait(1000)
            # (Line 121) v.P_CountMain[playerID] += 1;
            _ARRW(v.P_CountMain, playerID).__iadd__(1)
            # (Line 122) }
            # (Line 123) else if (v.P_CountMain[playerID] == 9)
        if EUDElseIf()(v.P_CountMain[playerID] == 9):
            # (Line 124) {
            # (Line 125) if (playerID < 3)	{ GiveUnits(All, "80 + 1n Artanis", 6, "Anywhere", playerID); }
            if EUDIf()(playerID >= 3, neg=True):
                DoActions(GiveUnits(All, "80 + 1n Artanis", 6, "Anywhere", playerID))
                # (Line 126) else 			{ GiveUnits(All, "80 + 1n Artanis", 7, "Anywhere", playerID); }
            if EUDElse()():
                DoActions(GiveUnits(All, "80 + 1n Artanis", 7, "Anywhere", playerID))
                # (Line 128) if (v.P_LoopSub1[playerID] == 1)
            EUDEndIf()
            if EUDIf()(v.P_LoopSub1[playerID] == 1):
                # (Line 129) {
                # (Line 130) KillUnitAt(All, "80 + 1n Artanis", "Anywhere", playerID);
                # (Line 131) KillUnitAt(All, "80 + 1n Artanis", "Anywhere", 6);
                DoActions(KillUnitAt(All, "80 + 1n Artanis", "Anywhere", playerID))
                # (Line 132) KillUnitAt(All, "80 + 1n Artanis", "Anywhere", 7);
                DoActions(KillUnitAt(All, "80 + 1n Artanis", "Anywhere", 6))
                # (Line 133) }
                DoActions(KillUnitAt(All, "80 + 1n Artanis", "Anywhere", 7))
                # (Line 135) trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0);
            EUDEndIf()
            trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
            # (Line 136) Order("80 + 1n Artanis", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
            # (Line 137) trg.Main_Wait(3500);
            DoActions(Order("80 + 1n Artanis", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
            trg.Main_Wait(3500)
            # (Line 138) v.P_CountMain[playerID] += 1;
            _ARRW(v.P_CountMain, playerID).__iadd__(1)
            # (Line 139) }
            # (Line 140) else if (v.P_CountMain[playerID] == 10)
        if EUDElseIf()(v.P_CountMain[playerID] == 10):
            # (Line 141) {
            # (Line 142) KillUnitAt(All, "40 + 1n Marine", "Anywhere", playerID);
            # (Line 143) KillUnitAt(All, "40 + 1n Goliath", "Anywhere", playerID);
            DoActions(KillUnitAt(All, "40 + 1n Marine", "Anywhere", playerID))
            # (Line 144) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
            DoActions(KillUnitAt(All, "40 + 1n Goliath", "Anywhere", playerID))
            # (Line 145) trg.Main_Wait(800);
            DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
            trg.Main_Wait(800)
            # (Line 146) v.P_CountMain[playerID] += 1;
            _ARRW(v.P_CountMain, playerID).__iadd__(1)
            # (Line 147) }
            # (Line 148) else if (v.P_CountMain[playerID] == 11)
        if EUDElseIf()(v.P_CountMain[playerID] == 11):
            # (Line 149) {
            # (Line 150) KillUnitAt(All, "80 + 1n Artanis", "Anywhere", playerID);
            # (Line 151) SetSwitch("UiltimateSwitch", Clear);
            DoActions(KillUnitAt(All, "80 + 1n Artanis", "Anywhere", playerID))
            # (Line 152) SetSwitch("Recall - Chtholly", Clear);
            DoActions(SetSwitch("UiltimateSwitch", Clear))
            # (Line 153) v.P_LoopSub1[playerID] = 0;
            DoActions(SetSwitch("Recall - Chtholly", Clear))
            _ARRW(v.P_LoopSub1, playerID) << (0)
            # (Line 154) trg.SkillEnd();
            trg.SkillEnd()
            # (Line 155) }
            # (Line 156) }
        EUDEndIf()
        # (Line 157) }
    EUDEndIf()
