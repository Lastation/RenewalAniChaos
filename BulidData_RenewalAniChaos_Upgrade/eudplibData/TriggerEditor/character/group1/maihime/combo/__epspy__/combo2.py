## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import PluginVariables as msqcvar;
import PluginVariables as msqcvar
# (Line 2) import variable as v;
import variable as v
# (Line 3) import func.trig as trg;
from func import trig as trg
# (Line 5) function main(playerID)
# (Line 6) {
@EUDFunc
def f_main(playerID):
    # (Line 7) if (v.P_WaitMain[playerID] == 0)
    if EUDIf()(v.P_WaitMain[playerID] == 0):
        # (Line 8) {
        # (Line 9) if (v.P_CountMain[playerID] == 0)
        if EUDIf()(v.P_CountMain[playerID] == 0):
            # (Line 10) {
            # (Line 11) if (v.P_LoopMain[playerID] <= 5)
            if EUDIf()(v.P_LoopMain[playerID] <= 5):
                # (Line 12) {
                # (Line 13) trg.Shape_Double(playerID, 1, "50 + 1n Battlecruiser", 144 - (48 * v.P_LoopMain[playerID]), 144);
                trg.Shape_Double(playerID, 1, "50 + 1n Battlecruiser", 144 - (48 * v.P_LoopMain[playerID]), 144)
                # (Line 14) trg.Shape_Double(playerID, 1, "Protoss Dark Archon", 144 - (48 * v.P_LoopMain[playerID]), 144);
                trg.Shape_Double(playerID, 1, "Protoss Dark Archon", 144 - (48 * v.P_LoopMain[playerID]), 144)
                # (Line 15) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
                # (Line 16) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                # (Line 17) trg.Main_Wait(0);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                trg.Main_Wait(0)
                # (Line 18) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 19) }
                # (Line 20) else if (v.P_LoopMain[playerID] == 6)
            if EUDElseIf()(v.P_LoopMain[playerID] == 6):
                # (Line 21) {
                # (Line 22) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 23) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 24) }
                # (Line 25) }
            EUDEndIf()
            # (Line 26) else if (v.P_CountMain[playerID] == 1)
        if EUDElseIf()(v.P_CountMain[playerID] == 1):
            # (Line 27) {
            # (Line 28) if (v.P_LoopMain[playerID] <= 5)
            if EUDIf()(v.P_LoopMain[playerID] <= 5):
                # (Line 29) {
                # (Line 30) trg.Shape_Double(playerID, 1, "50 + 1n Battlecruiser", 144, -144 + (48 * v.P_LoopMain[playerID]));
                trg.Shape_Double(playerID, 1, "50 + 1n Battlecruiser", 144, -144 + (48 * v.P_LoopMain[playerID]))
                # (Line 31) trg.Shape_Double(playerID, 1, "Protoss Dark Archon", 144, -144 + (48 * v.P_LoopMain[playerID]));
                trg.Shape_Double(playerID, 1, "Protoss Dark Archon", 144, -144 + (48 * v.P_LoopMain[playerID]))
                # (Line 32) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
                # (Line 33) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                # (Line 34) trg.Main_Wait(0);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                trg.Main_Wait(0)
                # (Line 35) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 36) }
                # (Line 37) else if (v.P_LoopMain[playerID] == 6)
            if EUDElseIf()(v.P_LoopMain[playerID] == 6):
                # (Line 38) {
                # (Line 39) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 40) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 41) }
                # (Line 42) }
            EUDEndIf()
            # (Line 43) else if (v.P_CountMain[playerID] == 2)
        if EUDElseIf()(v.P_CountMain[playerID] == 2):
            # (Line 44) {
            # (Line 45) KillUnitAt(All, 2, "Anywhere", playerID);
            # (Line 46) KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID);
            DoActions(KillUnitAt(All, 2, "Anywhere", playerID))
            # (Line 47) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
            DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID))
            # (Line 49) if (v.P_LoopMain[playerID] == 0)
            DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 50) {
                # (Line 51) trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 96, 96);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 96, 96)
                # (Line 52) trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 96, 96);
                trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 96, 96)
                # (Line 53) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                # (Line 55) trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 56) Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                # (Line 57) trg.Main_Wait(150);
                DoActions(Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(150)
                # (Line 58) }
                # (Line 59) else if (v.P_LoopMain[playerID] == 1 || v.P_LoopMain[playerID] == 3)
            if EUDElseIf()(EUDSCOr()(v.P_LoopMain[playerID] == 1)(v.P_LoopMain[playerID] == 3)()):
                # (Line 60) {
                # (Line 61) trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 144, 0);
                trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 144, 0)
                # (Line 62) trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 96, 0);
                trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 96, 0)
                # (Line 63) trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 48, 0);
                trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 48, 0)
                # (Line 64) trg.Shape_Square(playerID, 1, "60 + 1n Archon", 144, 0);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", 144, 0)
                # (Line 65) trg.Shape_Square(playerID, 1, "60 + 1n Archon", 96, 0);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", 96, 0)
                # (Line 66) trg.Shape_Square(playerID, 1, "60 + 1n Archon", 48, 0);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", 48, 0)
                # (Line 67) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                # (Line 69) trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 70) Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                # (Line 71) trg.Main_Wait(90);
                DoActions(Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(90)
                # (Line 72) }
                # (Line 73) else if (v.P_LoopMain[playerID] == 2 || v.P_LoopMain[playerID] == 4)
            if EUDElseIf()(EUDSCOr()(v.P_LoopMain[playerID] == 2)(v.P_LoopMain[playerID] == 4)()):
                # (Line 74) {
                # (Line 75) trg.Main_Wait(0);
                trg.Main_Wait(0)
                # (Line 76) }
                # (Line 77) else if (v.P_LoopMain[playerID] == 5)
            if EUDElseIf()(v.P_LoopMain[playerID] == 5):
                # (Line 78) {
                # (Line 79) trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 192, 192);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 192, 192)
                # (Line 80) trg.Shape_Square(playerID, 1, "60 + 1n Archon", 192, 192);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", 192, 192)
                # (Line 81) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                # (Line 83) trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 84) Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                # (Line 85) trg.Main_Wait(0);
                DoActions(Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(0)
                # (Line 86) }
                # (Line 87) else if (v.P_LoopMain[playerID] >= 6 && v.P_LoopMain[playerID] <= 8)
            if EUDElseIf()(EUDSCAnd()(v.P_LoopMain[playerID] >= 6)(v.P_LoopMain[playerID] <= 8)()):
                # (Line 88) {
                # (Line 89) var pos = 144 - (48 * (v.P_LoopMain[playerID] - 6));
                pos = EUDVariable()
                pos << (144 - (48 * (v.P_LoopMain[playerID] - 6)))
                # (Line 90) trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", pos, pos);
                trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", pos, pos)
                # (Line 91) trg.Shape_Square(playerID, 1, "60 + 1n Archon", pos, pos);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", pos, pos)
                # (Line 92) KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID);
                # (Line 93) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID))
                # (Line 94) trg.Main_Wait(0);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                trg.Main_Wait(0)
                # (Line 95) }
                # (Line 96) else if (v.P_LoopMain[playerID] == 9)
            if EUDElseIf()(v.P_LoopMain[playerID] == 9):
                # (Line 97) {
                # (Line 98) trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 192, 0);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 192, 0)
                # (Line 99) trg.Shape_Square(playerID, 1, "60 + 1n Archon", 192, 0);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", 192, 0)
                # (Line 100) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                # (Line 102) trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 103) Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                # (Line 104) trg.Main_Wait(0);
                DoActions(Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(0)
                # (Line 105) }
                # (Line 106) else if (v.P_LoopMain[playerID] >= 10 && v.P_LoopMain[playerID] <= 12)
            if EUDElseIf()(EUDSCAnd()(v.P_LoopMain[playerID] >= 10)(v.P_LoopMain[playerID] <= 12)()):
                # (Line 107) {
                # (Line 108) var pos = 144 - (48 * (v.P_LoopMain[playerID] - 10));
                pos = EUDVariable()
                pos << (144 - (48 * (v.P_LoopMain[playerID] - 10)))
                # (Line 109) trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", pos, 0);
                trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", pos, 0)
                # (Line 110) trg.Shape_Square(playerID, 1, "60 + 1n Archon", pos, 0);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", pos, 0)
                # (Line 111) KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID);
                # (Line 112) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID))
                # (Line 113) trg.Main_Wait(0);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                trg.Main_Wait(0)
                # (Line 114) }
                # (Line 115) else if (v.P_LoopMain[playerID] == 12)
            if EUDElseIf()(v.P_LoopMain[playerID] == 12):
                # (Line 116) {
                # (Line 117) trg.Shape_Square(playerID, 1, 2, 96, 96);
                trg.Shape_Square(playerID, 1, 2, 96, 96)
                # (Line 118) trg.Shape_Square(playerID, 1, 2, 48, 48);
                trg.Shape_Square(playerID, 1, 2, 48, 48)
                # (Line 119) trg.Shape_Square(playerID, 1, 2, 128, 0);
                trg.Shape_Square(playerID, 1, 2, 128, 0)
                # (Line 120) trg.Shape_Square(playerID, 1, 2, 64, 0);
                trg.Shape_Square(playerID, 1, 2, 64, 0)
                # (Line 122) trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0);
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 123) Order(2, playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                # (Line 124) trg.Main_Wait(30);
                DoActions(Order(2, playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(30)
                # (Line 125) }
                # (Line 126) else if (v.P_LoopMain[playerID] == 13)
            if EUDElseIf()(v.P_LoopMain[playerID] == 13):
                # (Line 127) {
                # (Line 128) trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 144, 144);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 144, 144)
                # (Line 129) trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 144, 144);
                trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 144, 144)
                # (Line 131) trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0);
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 132) Order(2, playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                # (Line 133) trg.Main_Wait(30);
                DoActions(Order(2, playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(30)
                # (Line 134) }
                # (Line 136) v.P_LoopMain[playerID] += 1;
            EUDEndIf()
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 138) if (v.P_LoopMain[playerID] == 13)
            if EUDIf()(v.P_LoopMain[playerID] == 13):
                # (Line 139) {
                # (Line 140) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 141) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 142) }
                # (Line 143) }
            EUDEndIf()
            # (Line 144) if (v.P_CountMain[playerID] == 3)
        EUDEndIf()
        if EUDIf()(v.P_CountMain[playerID] == 3):
            # (Line 145) {
            # (Line 146) if (v.P_LoopMain[playerID] <= 5)
            if EUDIf()(v.P_LoopMain[playerID] <= 5):
                # (Line 147) {
                # (Line 148) trg.Shape_Double(playerID, 1, "50 + 1n Battlecruiser", 144 - (48 * v.P_LoopMain[playerID]), 144);
                trg.Shape_Double(playerID, 1, "50 + 1n Battlecruiser", 144 - (48 * v.P_LoopMain[playerID]), 144)
                # (Line 149) trg.Shape_Double(playerID, 1, "Protoss Dark Archon", 144 - (48 * v.P_LoopMain[playerID]), 144);
                trg.Shape_Double(playerID, 1, "Protoss Dark Archon", 144 - (48 * v.P_LoopMain[playerID]), 144)
                # (Line 150) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
                # (Line 151) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                # (Line 152) trg.Main_Wait(0);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                trg.Main_Wait(0)
                # (Line 153) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 154) }
                # (Line 155) else if (v.P_LoopMain[playerID] == 6)
            if EUDElseIf()(v.P_LoopMain[playerID] == 6):
                # (Line 156) {
                # (Line 157) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 158) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 159) }
                # (Line 160) }
            EUDEndIf()
            # (Line 161) else if (v.P_CountMain[playerID] == 4)
        if EUDElseIf()(v.P_CountMain[playerID] == 4):
            # (Line 162) {
            # (Line 163) if (v.P_LoopMain[playerID] <= 5)
            if EUDIf()(v.P_LoopMain[playerID] <= 5):
                # (Line 164) {
                # (Line 165) trg.Shape_Double(playerID, 1, "50 + 1n Battlecruiser", 144, -144 + (48 * v.P_LoopMain[playerID]));
                trg.Shape_Double(playerID, 1, "50 + 1n Battlecruiser", 144, -144 + (48 * v.P_LoopMain[playerID]))
                # (Line 166) trg.Shape_Double(playerID, 1, "Protoss Dark Archon", 144, -144 + (48 * v.P_LoopMain[playerID]));
                trg.Shape_Double(playerID, 1, "Protoss Dark Archon", 144, -144 + (48 * v.P_LoopMain[playerID]))
                # (Line 167) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
                # (Line 168) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                # (Line 169) trg.Main_Wait(0);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                trg.Main_Wait(0)
                # (Line 170) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 171) }
                # (Line 172) else if (v.P_LoopMain[playerID] == 6)
            if EUDElseIf()(v.P_LoopMain[playerID] == 6):
                # (Line 173) {
                # (Line 174) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 175) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 176) }
                # (Line 177) }
            EUDEndIf()
            # (Line 178) else if (v.P_CountMain[playerID] == 5)
        if EUDElseIf()(v.P_CountMain[playerID] == 5):
            # (Line 179) {
            # (Line 180) KillUnitAt(All, 2, "Anywhere", playerID);
            # (Line 181) KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID);
            DoActions(KillUnitAt(All, 2, "Anywhere", playerID))
            # (Line 182) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
            DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID))
            # (Line 184) if (v.P_LoopMain[playerID] == 0)
            DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 185) {
                # (Line 186) trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 192, 192);
                trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 192, 192)
                # (Line 187) trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 144, 192);
                trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 144, 192)
                # (Line 188) trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 192, 144);
                trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 192, 144)
                # (Line 189) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
                # (Line 190) trg.Main_Wait(0);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID))
                trg.Main_Wait(0)
                # (Line 191) }
                # (Line 192) else if (v.P_LoopMain[playerID] == 1)
            if EUDElseIf()(v.P_LoopMain[playerID] == 1):
                # (Line 193) {
                # (Line 194) trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 144, 144);
                trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 144, 144)
                # (Line 195) trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 144, 96);
                trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 144, 96)
                # (Line 196) trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 96, 144);
                trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 96, 144)
                # (Line 197) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
                # (Line 198) trg.Main_Wait(0);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID))
                trg.Main_Wait(0)
                # (Line 199) }
                # (Line 200) else if (v.P_LoopMain[playerID] == 2)
            if EUDElseIf()(v.P_LoopMain[playerID] == 2):
                # (Line 201) {
                # (Line 202) trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 96, 96);
                trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 96, 96)
                # (Line 203) trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 48, 96);
                trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 48, 96)
                # (Line 204) trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 96, 48);
                trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 96, 48)
                # (Line 205) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
                # (Line 206) trg.Main_Wait(0);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID))
                trg.Main_Wait(0)
                # (Line 207) }
                # (Line 208) else if (v.P_LoopMain[playerID] == 3)
            if EUDElseIf()(v.P_LoopMain[playerID] == 3):
                # (Line 209) {
                # (Line 210) trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 48, 48);
                trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 48, 48)
                # (Line 211) trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 48, 0);
                trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 48, 0)
                # (Line 212) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
                # (Line 213) trg.Main_Wait(0);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID))
                trg.Main_Wait(0)
                # (Line 214) }
                # (Line 215) else if (v.P_LoopMain[playerID] == 4)
            if EUDElseIf()(v.P_LoopMain[playerID] == 4):
                # (Line 216) {
                # (Line 217) trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 144, 96);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 144, 96)
                # (Line 218) trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 144, 0);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 144, 0)
                # (Line 219) trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 96, 144);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 96, 144)
                # (Line 220) trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 144, 96);
                trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 144, 96)
                # (Line 221) trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 144, 0);
                trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 144, 0)
                # (Line 222) trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 96, 144);
                trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 96, 144)
                # (Line 223) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
                # (Line 224) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                # (Line 225) trg.Main_Wait(0);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                trg.Main_Wait(0)
                # (Line 226) }
                # (Line 227) else if (v.P_LoopMain[playerID] == 5)
            if EUDElseIf()(v.P_LoopMain[playerID] == 5):
                # (Line 228) {
                # (Line 229) trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 0, 48);
                trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 0, 48)
                # (Line 230) trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 0, 96);
                trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 0, 96)
                # (Line 231) trg.Shape_Square(playerID, 1, 2, 0, 48);
                trg.Shape_Square(playerID, 1, 2, 0, 48)
                # (Line 232) trg.Shape_Square(playerID, 1, 2, 0, 96);
                trg.Shape_Square(playerID, 1, 2, 0, 96)
                # (Line 234) trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0);
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 235) Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                # (Line 236) Order(2, playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 237) trg.Main_Wait(230);
                DoActions(Order(2, playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(230)
                # (Line 238) }
                # (Line 239) else if (v.P_LoopMain[playerID] == 6)
            if EUDElseIf()(v.P_LoopMain[playerID] == 6):
                # (Line 240) {
                # (Line 241) trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 48, 48);
                trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 48, 48)
                # (Line 242) trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 48, 0);
                trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 48, 0)
                # (Line 243) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
                # (Line 244) trg.Main_Wait(0);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID))
                trg.Main_Wait(0)
                # (Line 245) }
                # (Line 246) else if (v.P_LoopMain[playerID] == 7)
            if EUDElseIf()(v.P_LoopMain[playerID] == 7):
                # (Line 247) {
                # (Line 248) trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 96, 96);
                trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 96, 96)
                # (Line 249) trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 48, 96);
                trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 48, 96)
                # (Line 250) trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 96, 48);
                trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 96, 48)
                # (Line 251) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
                # (Line 252) trg.Main_Wait(0);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID))
                trg.Main_Wait(0)
                # (Line 253) }
                # (Line 254) else if (v.P_LoopMain[playerID] == 8)
            if EUDElseIf()(v.P_LoopMain[playerID] == 8):
                # (Line 255) {
                # (Line 256) trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 144, 144);
                trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 144, 144)
                # (Line 257) trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 144, 96);
                trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 144, 96)
                # (Line 258) trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 96, 144);
                trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 96, 144)
                # (Line 259) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
                # (Line 260) trg.Main_Wait(0);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID))
                trg.Main_Wait(0)
                # (Line 261) }
                # (Line 262) else if (v.P_LoopMain[playerID] == 9)
            if EUDElseIf()(v.P_LoopMain[playerID] == 9):
                # (Line 263) {
                # (Line 264) trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 192, 192);
                trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 192, 192)
                # (Line 265) trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 144, 192);
                trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 144, 192)
                # (Line 266) trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 192, 144);
                trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 192, 144)
                # (Line 267) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
                # (Line 268) trg.Main_Wait(0);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID))
                trg.Main_Wait(0)
                # (Line 269) }
                # (Line 270) else if (v.P_LoopMain[playerID] == 10)
            if EUDElseIf()(v.P_LoopMain[playerID] == 10):
                # (Line 271) {
                # (Line 272) trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 0, 48);
                trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 0, 48)
                # (Line 273) trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 0, 96);
                trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 0, 96)
                # (Line 274) trg.Shape_Square(playerID, 1, 2, 0, 48);
                trg.Shape_Square(playerID, 1, 2, 0, 48)
                # (Line 275) trg.Shape_Square(playerID, 1, 2, 0, 96);
                trg.Shape_Square(playerID, 1, 2, 0, 96)
                # (Line 277) trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0);
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 278) Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                # (Line 279) Order(2, playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 280) trg.Main_Wait(90);
                DoActions(Order(2, playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(90)
                # (Line 281) }
                # (Line 282) else if (v.P_LoopMain[playerID] == 11)
            if EUDElseIf()(v.P_LoopMain[playerID] == 11):
                # (Line 283) {
                # (Line 284) trg.SkillEnd();
                trg.SkillEnd()
                # (Line 285) }
                # (Line 287) v.P_LoopMain[playerID] += 1;
            EUDEndIf()
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 288) }
            # (Line 289) }
        EUDEndIf()
        # (Line 290) }
    EUDEndIf()
