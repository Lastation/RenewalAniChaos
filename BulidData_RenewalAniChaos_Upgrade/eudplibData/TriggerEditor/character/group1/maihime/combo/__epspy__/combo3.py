## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import variable as v;
import variable as v
# (Line 2) import func.trig as trg;
from func import trig as trg
# (Line 3) import func.sound as s;
from func import sound as s
# (Line 6) function main(playerID)
# (Line 7) {
@EUDFunc
def f_main(playerID):
    # (Line 8) trg.Buff_ShieldFix(1);
    trg.Buff_ShieldFix(1)
    # (Line 10) if (v.P_WaitMain[playerID] == 0)
    if EUDIf()(v.P_WaitMain[playerID] == 0):
        # (Line 11) {
        # (Line 12) if (v.P_CountMain[playerID] == 0)
        if EUDIf()(v.P_CountMain[playerID] == 0):
            # (Line 13) {
            # (Line 14) KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID);
            # (Line 15) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
            DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID))
            # (Line 17) if (v.P_LoopMain[playerID] == 0)
            DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 18) {
                # (Line 19) trg.Shape_Cross(playerID, 1, "40 + 1n Guardian", 0, 5, 48);
                trg.Shape_Cross(playerID, 1, "40 + 1n Guardian", 0, 5, 48)
                # (Line 20) trg.Shape_Cross(playerID, 1, "60 + 1n Archon", 0, 5, 48);
                trg.Shape_Cross(playerID, 1, "60 + 1n Archon", 0, 5, 48)
                # (Line 21) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
                # (Line 22) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID))
                # (Line 23) trg.Main_Wait(0);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                trg.Main_Wait(0)
                # (Line 24) }
                # (Line 25) else if (v.P_LoopMain[playerID] == 1)
            if EUDElseIf()(v.P_LoopMain[playerID] == 1):
                # (Line 26) {
                # (Line 27) trg.Shape_Cross(playerID, 1, "40 + 1n Mojo", 0, 5, 48);
                trg.Shape_Cross(playerID, 1, "40 + 1n Mojo", 0, 5, 48)
                # (Line 28) trg.Shape_Cross(playerID, 1, "40 + 1n Zealot", 0, 5, 48);
                trg.Shape_Cross(playerID, 1, "40 + 1n Zealot", 0, 5, 48)
                # (Line 29) KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID);
                # (Line 30) KillUnitAt(All, "40 + 1n Zealot", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID))
                # (Line 31) trg.Main_Wait(0);
                DoActions(KillUnitAt(All, "40 + 1n Zealot", "Anywhere", playerID))
                trg.Main_Wait(0)
                # (Line 32) }
                # (Line 33) else if (v.P_LoopMain[playerID] == 2 || v.P_LoopMain[playerID] == 4)
            if EUDElseIf()(EUDSCOr()(v.P_LoopMain[playerID] == 2)(v.P_LoopMain[playerID] == 4)()):
                # (Line 34) {
                # (Line 35) trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 48, 48);
                trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 48, 48)
                # (Line 36) trg.Shape_Square(playerID, 1, "40 + 1n Zealot", 48, 48);
                trg.Shape_Square(playerID, 1, "40 + 1n Zealot", 48, 48)
                # (Line 37) KillUnitAt(All, "40 + 1n Zealot", "Anywhere", playerID);
                # (Line 39) trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0);
                DoActions(KillUnitAt(All, "40 + 1n Zealot", "Anywhere", playerID))
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 40) Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                # (Line 41) trg.Main_Wait(90);
                DoActions(Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(90)
                # (Line 42) }
                # (Line 43) else if (v.P_LoopMain[playerID] == 3)
            if EUDElseIf()(v.P_LoopMain[playerID] == 3):
                # (Line 44) {
                # (Line 45) trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 96, 0);
                trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 96, 0)
                # (Line 46) trg.Shape_Square(playerID, 1, "40 + 1n Zealot", 96, 0);
                trg.Shape_Square(playerID, 1, "40 + 1n Zealot", 96, 0)
                # (Line 47) KillUnitAt(All, "40 + 1n Zealot", "Anywhere", playerID);
                # (Line 49) trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0);
                DoActions(KillUnitAt(All, "40 + 1n Zealot", "Anywhere", playerID))
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 51) trg.Main_Wait(90);
                trg.Main_Wait(90)
                # (Line 52) }
                # (Line 53) else if (v.P_LoopMain[playerID] == 5)
            if EUDElseIf()(v.P_LoopMain[playerID] == 5):
                # (Line 54) {
                # (Line 55) trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 96, 48);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 96, 48)
                # (Line 56) trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 48, 96);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 48, 96)
                # (Line 57) trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 144, 0);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 144, 0)
                # (Line 58) trg.Shape_Square(playerID, 1, "40 + 1n Zealot", 96, 48);
                trg.Shape_Square(playerID, 1, "40 + 1n Zealot", 96, 48)
                # (Line 59) trg.Shape_Square(playerID, 1, "40 + 1n Zealot", 48, 96);
                trg.Shape_Square(playerID, 1, "40 + 1n Zealot", 48, 96)
                # (Line 60) trg.Shape_Square(playerID, 1, "40 + 1n Zealot", 144, 0);
                trg.Shape_Square(playerID, 1, "40 + 1n Zealot", 144, 0)
                # (Line 61) KillUnitAt(All, "40 + 1n Zealot", "Anywhere", playerID);
                # (Line 63) trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0);
                DoActions(KillUnitAt(All, "40 + 1n Zealot", "Anywhere", playerID))
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 64) Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                # (Line 65) trg.Main_Wait(90);
                DoActions(Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(90)
                # (Line 66) }
                # (Line 68) v.P_LoopMain[playerID] += 1;
            EUDEndIf()
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 70) if (v.P_LoopMain[playerID] == 6)
            if EUDIf()(v.P_LoopMain[playerID] == 6):
                # (Line 71) {
                # (Line 72) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 73) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 74) }
                # (Line 75) }
            EUDEndIf()
            # (Line 76) else if (v.P_CountMain[playerID] == 1)
        if EUDElseIf()(v.P_CountMain[playerID] == 1):
            # (Line 77) {
            # (Line 78) KillUnitAt(All, "40 + 1n Goliath", "Anywhere", playerID);
            # (Line 79) KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID);
            DoActions(KillUnitAt(All, "40 + 1n Goliath", "Anywhere", playerID))
            # (Line 81) if (v.P_LoopMain[playerID] == 0)
            DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID))
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 82) {
                # (Line 83) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
                # (Line 85) trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 48, 0);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 48, 0)
                # (Line 86) trg.Shape_Square(playerID, 1, "40 + 1n Goliath", 48, 0);
                trg.Shape_Square(playerID, 1, "40 + 1n Goliath", 48, 0)
                # (Line 87) KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID);
                # (Line 89) trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0);
                DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID))
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 90) Order("40 + 1n Goliath", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                # (Line 91) trg.Main_Wait(60);
                DoActions(Order("40 + 1n Goliath", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(60)
                # (Line 92) }
                # (Line 93) else if (v.P_LoopMain[playerID] == 1)
            if EUDElseIf()(v.P_LoopMain[playerID] == 1):
                # (Line 94) {
                # (Line 95) trg.Shape_Square(playerID, 1, "40 + 1n Wraith", 48, 48);
                trg.Shape_Square(playerID, 1, "40 + 1n Wraith", 48, 48)
                # (Line 96) trg.Shape_Square(playerID, 1, "40 + 1n Wraith", 96, 0);
                trg.Shape_Square(playerID, 1, "40 + 1n Wraith", 96, 0)
                # (Line 97) trg.Shape_Square(playerID, 1, "40 + 1n Goliath", 48, 48);
                trg.Shape_Square(playerID, 1, "40 + 1n Goliath", 48, 48)
                # (Line 98) trg.Shape_Square(playerID, 1, "40 + 1n Goliath", 96, 0);
                trg.Shape_Square(playerID, 1, "40 + 1n Goliath", 96, 0)
                # (Line 99) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 101) trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0);
                DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 102) Order("40 + 1n Goliath", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                # (Line 103) trg.Main_Wait(60);
                DoActions(Order("40 + 1n Goliath", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(60)
                # (Line 104) }
                # (Line 105) else if (v.P_LoopMain[playerID] == 2)
            if EUDElseIf()(v.P_LoopMain[playerID] == 2):
                # (Line 106) {
                # (Line 107) trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 48, 96);
                trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 48, 96)
                # (Line 108) trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 96, 48);
                trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 96, 48)
                # (Line 109) trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 144, 0);
                trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 144, 0)
                # (Line 110) trg.Shape_Square(playerID, 1, "60 + 1n Archon", 48, 96);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", 48, 96)
                # (Line 111) trg.Shape_Square(playerID, 1, "60 + 1n Archon", 96, 48);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", 96, 48)
                # (Line 112) trg.Shape_Square(playerID, 1, "60 + 1n Archon", 144, 0);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", 144, 0)
                # (Line 113) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                # (Line 115) trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 116) Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                # (Line 117) trg.Main_Wait(60);
                DoActions(Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(60)
                # (Line 118) }
                # (Line 119) else if (v.P_LoopMain[playerID] == 3)
            if EUDElseIf()(v.P_LoopMain[playerID] == 3):
                # (Line 120) {
                # (Line 121) trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 48, 144);
                trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 48, 144)
                # (Line 122) trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 96, 96);
                trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 96, 96)
                # (Line 123) trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 144, 48);
                trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 144, 48)
                # (Line 124) trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 192, 0);
                trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 192, 0)
                # (Line 125) trg.Shape_Square(playerID, 1, "60 + 1n Archon", 48, 144);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", 48, 144)
                # (Line 126) trg.Shape_Square(playerID, 1, "60 + 1n Archon", 96, 96);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", 96, 96)
                # (Line 127) trg.Shape_Square(playerID, 1, "60 + 1n Archon", 144, 48);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", 144, 48)
                # (Line 128) trg.Shape_Square(playerID, 1, "60 + 1n Archon", 192, 0);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", 192, 0)
                # (Line 129) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                # (Line 131) trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 132) Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                # (Line 133) trg.Main_Wait(60);
                DoActions(Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(60)
                # (Line 134) }
                # (Line 135) else if (v.P_LoopMain[playerID] == 4)
            if EUDElseIf()(v.P_LoopMain[playerID] == 4):
                # (Line 136) {
                # (Line 137) trg.Shape_Square(playerID, 1, "60 + 1n Siege", 240, 0);
                trg.Shape_Square(playerID, 1, "60 + 1n Siege", 240, 0)
                # (Line 138) trg.Shape_Square(playerID, 1, "60 + 1n Siege", 192, 48);
                trg.Shape_Square(playerID, 1, "60 + 1n Siege", 192, 48)
                # (Line 139) trg.Shape_Square(playerID, 1, "60 + 1n Siege", 144, 96);
                trg.Shape_Square(playerID, 1, "60 + 1n Siege", 144, 96)
                # (Line 140) trg.Shape_Square(playerID, 1, "60 + 1n Siege", 96, 144);
                trg.Shape_Square(playerID, 1, "60 + 1n Siege", 96, 144)
                # (Line 141) trg.Shape_Square(playerID, 1, "60 + 1n Siege", 48, 192);
                trg.Shape_Square(playerID, 1, "60 + 1n Siege", 48, 192)
                # (Line 142) trg.Main_Wait(100);
                trg.Main_Wait(100)
                # (Line 143) }
                # (Line 144) else if (v.P_LoopMain[playerID] == 5)
            if EUDElseIf()(v.P_LoopMain[playerID] == 5):
                # (Line 145) {
                # (Line 146) trg.Shape_Square(playerID, 1, "40 + 1n Mutalisk", 48, 0);
                trg.Shape_Square(playerID, 1, "40 + 1n Mutalisk", 48, 0)
                # (Line 147) KillUnitAt(All, "40 + 1n Mutalisk", "Anywhere", playerID);
                # (Line 148) trg.Main_Wait(0);
                DoActions(KillUnitAt(All, "40 + 1n Mutalisk", "Anywhere", playerID))
                trg.Main_Wait(0)
                # (Line 149) }
                # (Line 150) else if (v.P_LoopMain[playerID] == 6)
            if EUDElseIf()(v.P_LoopMain[playerID] == 6):
                # (Line 151) {
                # (Line 152) trg.Shape_Square(playerID, 1, "40 + 1n Mutalisk", 48, 48);
                trg.Shape_Square(playerID, 1, "40 + 1n Mutalisk", 48, 48)
                # (Line 153) trg.Shape_Square(playerID, 1, "40 + 1n Mutalisk", 96, 0);
                trg.Shape_Square(playerID, 1, "40 + 1n Mutalisk", 96, 0)
                # (Line 154) KillUnitAt(All, "40 + 1n Mutalisk", "Anywhere", playerID);
                # (Line 155) trg.Main_Wait(0);
                DoActions(KillUnitAt(All, "40 + 1n Mutalisk", "Anywhere", playerID))
                trg.Main_Wait(0)
                # (Line 156) }
                # (Line 157) else if (v.P_LoopMain[playerID] == 7)
            if EUDElseIf()(v.P_LoopMain[playerID] == 7):
                # (Line 158) {
                # (Line 159) trg.Shape_Square(playerID, 1, "40 + 1n Mutalisk", 48, 96);
                trg.Shape_Square(playerID, 1, "40 + 1n Mutalisk", 48, 96)
                # (Line 160) trg.Shape_Square(playerID, 1, "40 + 1n Mutalisk", 96, 48);
                trg.Shape_Square(playerID, 1, "40 + 1n Mutalisk", 96, 48)
                # (Line 161) trg.Shape_Square(playerID, 1, "40 + 1n Mutalisk", 144, 0);
                trg.Shape_Square(playerID, 1, "40 + 1n Mutalisk", 144, 0)
                # (Line 162) KillUnitAt(All, "40 + 1n Mutalisk", "Anywhere", playerID);
                # (Line 163) trg.Main_Wait(0);
                DoActions(KillUnitAt(All, "40 + 1n Mutalisk", "Anywhere", playerID))
                trg.Main_Wait(0)
                # (Line 164) }
                # (Line 165) else if (v.P_LoopMain[playerID] == 8)
            if EUDElseIf()(v.P_LoopMain[playerID] == 8):
                # (Line 166) {
                # (Line 167) trg.Shape_Square(playerID, 1, "40 + 1n Mutalisk", 48, 96);
                trg.Shape_Square(playerID, 1, "40 + 1n Mutalisk", 48, 96)
                # (Line 168) trg.Shape_Square(playerID, 1, "40 + 1n Mutalisk", 96, 48);
                trg.Shape_Square(playerID, 1, "40 + 1n Mutalisk", 96, 48)
                # (Line 169) trg.Shape_Square(playerID, 1, "40 + 1n Mutalisk", 144, 0);
                trg.Shape_Square(playerID, 1, "40 + 1n Mutalisk", 144, 0)
                # (Line 170) KillUnitAt(All, "40 + 1n Mutalisk", "Anywhere", playerID);
                # (Line 171) trg.Main_Wait(0);
                DoActions(KillUnitAt(All, "40 + 1n Mutalisk", "Anywhere", playerID))
                trg.Main_Wait(0)
                # (Line 172) }
                # (Line 173) else if (v.P_LoopMain[playerID] == 8)
            if EUDElseIf()(v.P_LoopMain[playerID] == 8):
                # (Line 174) {
                # (Line 175) trg.Shape_Square(playerID, 1, "60 + 1n Archon", 96, 96);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", 96, 96)
                # (Line 176) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                # (Line 177) trg.Main_Wait(0);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                trg.Main_Wait(0)
                # (Line 178) }
                # (Line 179) else if (v.P_LoopMain[playerID] == 9)
            if EUDElseIf()(v.P_LoopMain[playerID] == 9):
                # (Line 180) {
                # (Line 181) trg.Shape_Square(playerID, 1, "60 + 1n Archon", 144, 144);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", 144, 144)
                # (Line 182) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                # (Line 183) trg.Main_Wait(0);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                trg.Main_Wait(0)
                # (Line 184) }
                # (Line 185) else if (v.P_LoopMain[playerID] == 10)
            if EUDElseIf()(v.P_LoopMain[playerID] == 10):
                # (Line 186) {
                # (Line 187) trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 160, 64);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 160, 64)
                # (Line 188) trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 64, 160);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 64, 160)
                # (Line 189) trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 128, 224);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 128, 224)
                # (Line 190) trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 224, 128);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 224, 128)
                # (Line 192) trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0);
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 193) Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                # (Line 195) trg.Main_Wait(1900);
                DoActions(Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(1900)
                # (Line 196) }
                # (Line 197) else if (v.P_LoopMain[playerID] == 11)
            if EUDElseIf()(v.P_LoopMain[playerID] == 11):
                # (Line 198) {
                # (Line 199) s.CharacterVoice(5);
                s.CharacterVoice(5)
                # (Line 200) trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", 192, 0);
                trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", 192, 0)
                # (Line 201) trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", 144, 48);
                trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", 144, 48)
                # (Line 202) trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", 96, 96);
                trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", 96, 96)
                # (Line 203) trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", 48, 144);
                trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", 48, 144)
                # (Line 204) KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID);
                # (Line 206) trg.Main_Wait(100);
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID))
                trg.Main_Wait(100)
                # (Line 207) }
                # (Line 208) else if (v.P_LoopMain[playerID] == 12)
            if EUDElseIf()(v.P_LoopMain[playerID] == 12):
                # (Line 209) {
                # (Line 210) trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", 144, 0);
                trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", 144, 0)
                # (Line 211) trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", 96, 48);
                trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", 96, 48)
                # (Line 212) trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", 48, 96);
                trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", 48, 96)
                # (Line 213) KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID);
                # (Line 215) trg.Main_Wait(100);
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID))
                trg.Main_Wait(100)
                # (Line 216) }
                # (Line 217) else if (v.P_LoopMain[playerID] == 13)
            if EUDElseIf()(v.P_LoopMain[playerID] == 13):
                # (Line 218) {
                # (Line 219) trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", 96, 0);
                trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", 96, 0)
                # (Line 220) trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", 48, 48);
                trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", 48, 48)
                # (Line 221) KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID);
                # (Line 223) trg.Main_Wait(200);
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID))
                trg.Main_Wait(200)
                # (Line 224) }
                # (Line 225) else if (v.P_LoopMain[playerID] == 14)
            if EUDElseIf()(v.P_LoopMain[playerID] == 14):
                # (Line 226) {
                # (Line 227) trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 192, 0);
                trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 192, 0)
                # (Line 228) trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 144, 48);
                trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 144, 48)
                # (Line 229) trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 96, 96);
                trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 96, 96)
                # (Line 230) trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 48, 144);
                trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 48, 144)
                # (Line 231) trg.Shape_Square(playerID, 1, "60 + 1n Archon", 192, 0);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", 192, 0)
                # (Line 232) trg.Shape_Square(playerID, 1, "60 + 1n Archon", 144, 48);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", 144, 48)
                # (Line 233) trg.Shape_Square(playerID, 1, "60 + 1n Archon", 96, 96);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", 96, 96)
                # (Line 234) trg.Shape_Square(playerID, 1, "60 + 1n Archon", 48, 144);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", 48, 144)
                # (Line 235) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                # (Line 237) trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 238) Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                # (Line 239) trg.Main_Wait(60);
                DoActions(Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(60)
                # (Line 240) }
                # (Line 241) else if (v.P_LoopMain[playerID] == 16)
            if EUDElseIf()(v.P_LoopMain[playerID] == 16):
                # (Line 242) {
                # (Line 243) trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 144, 0);
                trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 144, 0)
                # (Line 244) trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 96, 48);
                trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 96, 48)
                # (Line 245) trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 48, 96);
                trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 48, 96)
                # (Line 246) trg.Shape_Square(playerID, 1, "60 + 1n Archon", 144, 0);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", 144, 0)
                # (Line 247) trg.Shape_Square(playerID, 1, "60 + 1n Archon", 96, 48);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", 96, 48)
                # (Line 248) trg.Shape_Square(playerID, 1, "60 + 1n Archon", 48, 96);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", 48, 96)
                # (Line 249) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                # (Line 251) trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 252) Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                # (Line 253) trg.Main_Wait(60);
                DoActions(Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(60)
                # (Line 254) }
                # (Line 255) else if (v.P_LoopMain[playerID] == 18)
            if EUDElseIf()(v.P_LoopMain[playerID] == 18):
                # (Line 256) {
                # (Line 257) trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 96, 0);
                trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 96, 0)
                # (Line 258) trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 48, 48);
                trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 48, 48)
                # (Line 259) trg.Shape_Square(playerID, 1, "60 + 1n Archon", 96, 0);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", 96, 0)
                # (Line 260) trg.Shape_Square(playerID, 1, "60 + 1n Archon", 48, 48);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", 48, 48)
                # (Line 261) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                # (Line 263) trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 264) Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                # (Line 265) trg.Main_Wait(60);
                DoActions(Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(60)
                # (Line 266) }
                # (Line 267) else if (v.P_LoopMain[playerID] == 20)
            if EUDElseIf()(v.P_LoopMain[playerID] == 20):
                # (Line 268) {
                # (Line 269) trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 48, 0);
                trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 48, 0)
                # (Line 270) trg.Shape_Square(playerID, 1, "60 + 1n Archon", 48, 0);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", 48, 0)
                # (Line 271) KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID);
                # (Line 272) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID))
                # (Line 273) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                # (Line 275) trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 276) Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                # (Line 277) trg.Main_Wait(300);
                DoActions(Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(300)
                # (Line 278) }
                # (Line 279) else if (v.P_LoopMain[playerID] == 15 || v.P_LoopMain[playerID] == 17 || v.P_LoopMain[playerID] == 19)
            if EUDElseIf()(EUDSCOr()(v.P_LoopMain[playerID] == 15)(v.P_LoopMain[playerID] == 17)(v.P_LoopMain[playerID] == 19)()):
                # (Line 280) {
                # (Line 281) trg.Main_Wait(0);
                trg.Main_Wait(0)
                # (Line 282) }
                # (Line 283) else if (v.P_LoopMain[playerID] == 21)
            if EUDElseIf()(v.P_LoopMain[playerID] == 21):
                # (Line 284) {
                # (Line 285) KillUnitAt(All, "60 + 1n Siege", "Anywhere", playerID);
                # (Line 286) trg.SkillEnd();
                DoActions(KillUnitAt(All, "60 + 1n Siege", "Anywhere", playerID))
                trg.SkillEnd()
                # (Line 287) }
                # (Line 289) v.P_LoopMain[playerID] += 1;
            EUDEndIf()
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 290) }
            # (Line 291) }
        EUDEndIf()
        # (Line 292) }
    EUDEndIf()
