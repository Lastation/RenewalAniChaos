## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import variable as v;
import variable as v
# (Line 2) import func.trig as trg;
from func import trig as trg
# (Line 3) import func.sound as s;
from func import sound as s
# (Line 5) function FlowerShape(cp : TrgPlayer, count, Unit : TrgUnit, i, distance, interval);
# (Line 7) function main(playerID)
# (Line 8) {
@EUDFunc
def f_main(playerID):
    # (Line 9) MoveLocation("22.Yuuna_Bozo", v.P_UnitID[playerID], playerID, "Anywhere");
    # (Line 10) trg.Buff_ShieldFix(1);
    DoActions(MoveLocation("22.Yuuna_Bozo", v.P_UnitID[playerID], playerID, "Anywhere"))
    trg.Buff_ShieldFix(1)
    # (Line 11) trg.Debuff_BanReturn();
    trg.Debuff_BanReturn()
    # (Line 13) if (v.P_WaitMain[playerID] == 0)
    if EUDIf()(v.P_WaitMain[playerID] == 0):
        # (Line 14) {
        # (Line 15) if (v.P_CountMain[playerID] == 0)
        if EUDIf()(v.P_CountMain[playerID] == 0):
            # (Line 16) {
            # (Line 17) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 18) {
                # (Line 20) SetSwitch("Recall - Yuuna", Set);
                # (Line 22) trg.Main_Wait(2080);
                DoActions(SetSwitch("Recall - Yuuna", Set))
                trg.Main_Wait(2080)
                # (Line 24) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 25) }
                # (Line 26) else if (v.P_LoopMain[playerID] == 1)
            if EUDElseIf()(v.P_LoopMain[playerID] == 1):
                # (Line 27) {
                # (Line 28) trg.Main_Wait(80);
                trg.Main_Wait(80)
                # (Line 30) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 31) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 32) }
                # (Line 34) }
            EUDEndIf()
            # (Line 35) else if (v.P_CountMain[playerID] == 1)
        if EUDElseIf()(v.P_CountMain[playerID] == 1):
            # (Line 36) {
            # (Line 37) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 38) {
                # (Line 39) s.CharacterVoice(9);
                s.CharacterVoice(9)
                # (Line 40) trg.Main_Wait(5760);
                trg.Main_Wait(5760)
                # (Line 42) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 43) }
                # (Line 44) else if (v.P_LoopMain[playerID] == 1)
            if EUDElseIf()(v.P_LoopMain[playerID] == 1):
                # (Line 45) {
                # (Line 46) trg.Main_Wait(80);
                trg.Main_Wait(80)
                # (Line 48) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 49) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 50) v.P_LoopSub1[playerID] = 0;
                _ARRW(v.P_LoopSub1, playerID) << (0)
                # (Line 51) }
                # (Line 53) }
            EUDEndIf()
            # (Line 54) else if (v.P_CountMain[playerID] == 2)
        if EUDElseIf()(v.P_CountMain[playerID] == 2):
            # (Line 55) {
            # (Line 56) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 57) {
                # (Line 58) RemoveUnitAt(All, "80 + 1n Tom Kazansky", "Anywhere", playerID);
                # (Line 59) trg.Shape_NxNSquare(playerID, 1, "40 + 1n Wraith", 3, 75);
                DoActions(RemoveUnitAt(All, "80 + 1n Tom Kazansky", "Anywhere", playerID))
                trg.Shape_NxNSquare(playerID, 1, "40 + 1n Wraith", 3, 75)
                # (Line 60) trg.Shape_NxNSquare(playerID, 1, "50 + 1n Tank", 3, 75);
                trg.Shape_NxNSquare(playerID, 1, "50 + 1n Tank", 3, 75)
                # (Line 61) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 62) Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 63) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                DoActions(Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 65) trg.Main_Wait(480);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                trg.Main_Wait(480)
                # (Line 67) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 68) }
                # (Line 69) else if (v.P_LoopMain[playerID] == 1)
            if EUDElseIf()(v.P_LoopMain[playerID] == 1):
                # (Line 70) {
                # (Line 71) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 72) trg.Shape_NxNSquare(playerID, 1, "40 + 1n Wraith", 4, 75);
                DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                trg.Shape_NxNSquare(playerID, 1, "40 + 1n Wraith", 4, 75)
                # (Line 73) trg.Shape_NxNSquare(playerID, 1, "50 + 1n Tank", 4, 75);
                trg.Shape_NxNSquare(playerID, 1, "50 + 1n Tank", 4, 75)
                # (Line 74) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 75) Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 76) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                DoActions(Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 78) trg.Main_Wait(480);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                trg.Main_Wait(480)
                # (Line 80) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 81) }
                # (Line 82) else if (v.P_LoopMain[playerID] == 2)
            if EUDElseIf()(v.P_LoopMain[playerID] == 2):
                # (Line 83) {
                # (Line 84) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 85) trg.Shape_NxNSquare(playerID, 1, "40 + 1n Wraith", 5, 75);
                DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                trg.Shape_NxNSquare(playerID, 1, "40 + 1n Wraith", 5, 75)
                # (Line 86) trg.Shape_NxNSquare(playerID, 1, "50 + 1n Tank", 5, 75);
                trg.Shape_NxNSquare(playerID, 1, "50 + 1n Tank", 5, 75)
                # (Line 87) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 88) Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 89) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                DoActions(Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 91) trg.Main_Wait(800);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                trg.Main_Wait(800)
                # (Line 93) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 94) }
                # (Line 95) else if (v.P_LoopMain[playerID] == 3)
            if EUDElseIf()(v.P_LoopMain[playerID] == 3):
                # (Line 96) {
                # (Line 97) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 98) trg.Shape_NxNSquare(playerID, 1, "40 + 1n Wraith", 7, 75);
                DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                trg.Shape_NxNSquare(playerID, 1, "40 + 1n Wraith", 7, 75)
                # (Line 99) trg.Shape_NxNSquare(playerID, 1, "50 + 1n Tank", 7, 75);
                trg.Shape_NxNSquare(playerID, 1, "50 + 1n Tank", 7, 75)
                # (Line 100) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 101) Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 102) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                DoActions(Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 104) trg.Main_Wait(480);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                trg.Main_Wait(480)
                # (Line 106) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 107) }
                # (Line 108) else if (v.P_LoopMain[playerID] == 4)
            if EUDElseIf()(v.P_LoopMain[playerID] == 4):
                # (Line 109) {
                # (Line 110) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 111) trg.Shape_NxNSquare(playerID, 1, "40 + 1n Wraith", 9, 75);
                DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                trg.Shape_NxNSquare(playerID, 1, "40 + 1n Wraith", 9, 75)
                # (Line 112) trg.Shape_NxNSquare(playerID, 1, "50 + 1n Tank", 9, 75);
                trg.Shape_NxNSquare(playerID, 1, "50 + 1n Tank", 9, 75)
                # (Line 113) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 114) Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 115) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                DoActions(Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 117) trg.Main_Wait(480);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                trg.Main_Wait(480)
                # (Line 119) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 120) }
                # (Line 121) else if (v.P_LoopMain[playerID] == 5)
            if EUDElseIf()(v.P_LoopMain[playerID] == 5):
                # (Line 122) {
                # (Line 123) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 124) trg.Shape_NxNSquare(playerID, 1, "40 + 1n Wraith", 11, 75);
                DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                trg.Shape_NxNSquare(playerID, 1, "40 + 1n Wraith", 11, 75)
                # (Line 125) trg.Shape_NxNSquare(playerID, 1, "50 + 1n Tank", 11, 75);
                trg.Shape_NxNSquare(playerID, 1, "50 + 1n Tank", 11, 75)
                # (Line 126) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 127) Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 128) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                DoActions(Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 130) trg.Main_Wait(9040);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                trg.Main_Wait(9040)
                # (Line 132) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 133) }
                # (Line 134) else if (v.P_LoopMain[playerID] < 17)
            if EUDElseIf()(v.P_LoopMain[playerID] >= 17, neg=True):
                # (Line 135) {
                # (Line 136) KillUnitAt(11, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 138) trg.Main_Wait(80);
                DoActions(KillUnitAt(11, "40 + 1n Wraith", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 140) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 141) }
                # (Line 142) else if (v.P_LoopMain[playerID] == 17)
            if EUDElseIf()(v.P_LoopMain[playerID] == 17):
                # (Line 143) {
                # (Line 144) trg.Main_Wait(400);
                trg.Main_Wait(400)
                # (Line 146) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 147) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 148) }
                # (Line 149) }
            EUDEndIf()
            # (Line 150) else if (v.P_CountMain[playerID] == 3)
        if EUDElseIf()(v.P_CountMain[playerID] == 3):
            # (Line 151) {
            # (Line 152) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 153) {
                # (Line 154) s.CharacterVoice(10);
                s.CharacterVoice(10)
                # (Line 155) trg.Shape_Edge(playerID, 1, "Protoss Dark Archon", 0, 11, 100 + 50 * v.P_LoopMain[playerID]);
                trg.Shape_Edge(playerID, 1, "Protoss Dark Archon", 0, 11, 100 + 50 * v.P_LoopMain[playerID])
                # (Line 156) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                # (Line 158) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 160) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 161) }
                # (Line 162) else if (v.P_LoopMain[playerID] < 3)
            if EUDElseIf()(v.P_LoopMain[playerID] >= 3, neg=True):
                # (Line 163) {
                # (Line 164) trg.Shape_Edge(playerID, 1, "Protoss Dark Archon", 0, 11, 100 + 50 * v.P_LoopMain[playerID]);
                trg.Shape_Edge(playerID, 1, "Protoss Dark Archon", 0, 11, 100 + 50 * v.P_LoopMain[playerID])
                # (Line 165) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                # (Line 167) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 169) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 170) }
                # (Line 171) else if (v.P_LoopMain[playerID] == 3)
            if EUDElseIf()(v.P_LoopMain[playerID] == 3):
                # (Line 172) {
                # (Line 173) trg.Shape_Edge(playerID, 1, "50 + 1n Tank", 0, 11, 100 + 50 * v.P_LoopMain[playerID]);
                trg.Shape_Edge(playerID, 1, "50 + 1n Tank", 0, 11, 100 + 50 * v.P_LoopMain[playerID])
                # (Line 174) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                # (Line 176) trg.Main_Wait(160);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                trg.Main_Wait(160)
                # (Line 178) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 179) }
                # (Line 180) else if (v.P_LoopMain[playerID] == 4)
            if EUDElseIf()(v.P_LoopMain[playerID] == 4):
                # (Line 181) {
                # (Line 182) trg.Shape_Edge(playerID, 1, " Unit. Hoffnung 25000", 0, 5, 100 + 50 * 0);
                trg.Shape_Edge(playerID, 1, " Unit. Hoffnung 25000", 0, 5, 100 + 50 * 0)
                # (Line 183) trg.Shape_Edge(playerID, 1, " Unit. Hoffnung 25000", 0, 7, 100 + 50 * 1);
                trg.Shape_Edge(playerID, 1, " Unit. Hoffnung 25000", 0, 7, 100 + 50 * 1)
                # (Line 184) trg.Shape_Edge(playerID, 1, " Unit. Hoffnung 25000", 0, 9, 100 + 50 * 2);
                trg.Shape_Edge(playerID, 1, " Unit. Hoffnung 25000", 0, 9, 100 + 50 * 2)
                # (Line 185) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID);
                # (Line 186) trg.Shape_Edge(playerID, 1, "60 + 1n Siege", 0, 11, 100 + 50 * 3);
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID))
                trg.Shape_Edge(playerID, 1, "60 + 1n Siege", 0, 11, 100 + 50 * 3)
                # (Line 188) trg.Main_Wait(1200);
                trg.Main_Wait(1200)
                # (Line 190) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 191) }
                # (Line 192) else if (v.P_LoopMain[playerID] == 5)
            if EUDElseIf()(v.P_LoopMain[playerID] == 5):
                # (Line 193) {
                # (Line 194) trg.Main_Wait(80);
                trg.Main_Wait(80)
                # (Line 196) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 197) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 198) v.P_LoopSub1[playerID] = 0;
                _ARRW(v.P_LoopSub1, playerID) << (0)
                # (Line 199) }
                # (Line 201) }
            EUDEndIf()
            # (Line 202) else if (v.P_CountMain[playerID] == 4)
        if EUDElseIf()(v.P_CountMain[playerID] == 4):
            # (Line 203) {
            # (Line 204) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 205) {
                # (Line 206) s.CharacterVoice(11);
                s.CharacterVoice(11)
                # (Line 208) trg.Main_Wait(4240);
                trg.Main_Wait(4240)
                # (Line 210) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 211) }
                # (Line 212) else if (v.P_LoopMain[playerID] < 3)
            if EUDElseIf()(v.P_LoopMain[playerID] >= 3, neg=True):
                # (Line 213) {
                # (Line 214) KillUnitAt(All, "40 + 1n Goliath", "Anywhere", playerID);
                # (Line 215) trg.Shape_NxNSquare(playerID, 1, "50 + 1n Battlecruiser", 9, 75);
                DoActions(KillUnitAt(All, "40 + 1n Goliath", "Anywhere", playerID))
                trg.Shape_NxNSquare(playerID, 1, "50 + 1n Battlecruiser", 9, 75)
                # (Line 216) trg.Shape_NxNSquare(playerID, 1, "40 + 1n Goliath", 9, 75);
                trg.Shape_NxNSquare(playerID, 1, "40 + 1n Goliath", 9, 75)
                # (Line 217) Order("40 + 1n Goliath", playerID, "Anywhere", Attack, "Anywhere");
                # (Line 218) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
                DoActions(Order("40 + 1n Goliath", playerID, "Anywhere", Attack, "Anywhere"))
                # (Line 220) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 222) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 223) }
                # (Line 224) else if (v.P_LoopMain[playerID] == 3)
            if EUDElseIf()(v.P_LoopMain[playerID] == 3):
                # (Line 225) {
                # (Line 226) KillUnitAt(All, "40 + 1n Goliath", "Anywhere", playerID);
                # (Line 227) KillUnitAt(All, "60 + 1n Siege", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Goliath", "Anywhere", playerID))
                # (Line 229) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "60 + 1n Siege", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 231) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 232) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 233) v.P_LoopSub1[playerID] = 0;
                _ARRW(v.P_LoopSub1, playerID) << (0)
                # (Line 234) }
                # (Line 235) }
            EUDEndIf()
            # (Line 236) else if (v.P_CountMain[playerID] == 5)
        if EUDElseIf()(v.P_CountMain[playerID] == 5):
            # (Line 237) {
            # (Line 238) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
            # (Line 239) SetSwitch("Recall - Yuuna", Clear);
            DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
            # (Line 240) SetSwitch("UiltimateSwitch", Clear);
            DoActions(SetSwitch("Recall - Yuuna", Clear))
            # (Line 241) SetDeaths(playerID, SetTo, 0, " `ShieldRecharge");
            DoActions(SetSwitch("UiltimateSwitch", Clear))
            # (Line 242) trg.SkillEnd();
            DoActions(SetDeaths(playerID, SetTo, 0, " `ShieldRecharge"))
            trg.SkillEnd()
            # (Line 243) }
            # (Line 244) }
        EUDEndIf()
        # (Line 246) if (v.P_WaitSub1[playerID] == 0)
    EUDEndIf()
    if EUDIf()(v.P_WaitSub1[playerID] == 0):
        # (Line 247) {
        # (Line 248) if (v.P_CountMain[playerID] == 0)
        if EUDIf()(v.P_CountMain[playerID] == 0):
            # (Line 249) {
            # (Line 250) if (v.P_LoopSub1[playerID] < 4)
            if EUDIf()(v.P_LoopSub1[playerID] >= 4, neg=True):
                # (Line 251) {
                # (Line 252) var x = 50 * v.P_LoopSub1[playerID];
                x = EUDVariable()
                x << (50 * v.P_LoopSub1[playerID])
                # (Line 253) var y = 200 - 50 * v.P_LoopSub1[playerID];
                y = EUDVariable()
                y << (200 - 50 * v.P_LoopSub1[playerID])
                # (Line 255) trg.Shape_Dot(playerID, 1, "50 + 1n Tank", x, y);
                trg.Shape_Dot(playerID, 1, "50 + 1n Tank", x, y)
                # (Line 256) trg.Shape_Dot(playerID, 1, "50 + 1n Tank", -x, -y);
                trg.Shape_Dot(playerID, 1, "50 + 1n Tank", -x, -y)
                # (Line 257) trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", -y, x);
                trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", -y, x)
                # (Line 258) trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", y, -x);
                trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", y, -x)
                # (Line 259) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                # (Line 260) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                # (Line 262) trg.Sub1_Wait(80);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                trg.Sub1_Wait(80)
                # (Line 264) v.P_LoopSub1[playerID] += 1;
                _ARRW(v.P_LoopSub1, playerID).__iadd__(1)
                # (Line 265) }
                # (Line 266) else if (v.P_LoopSub1[playerID] < 7)
            if EUDElseIf()(v.P_LoopSub1[playerID] >= 7, neg=True):
                # (Line 267) {
                # (Line 268) var x = 200 - 50 * (v.P_LoopSub1[playerID] - 4);
                x = EUDVariable()
                x << (200 - 50 * (v.P_LoopSub1[playerID] - 4))
                # (Line 269) var y = -50 * (v.P_LoopSub1[playerID] - 4);
                y = EUDVariable()
                y << (-50 * (v.P_LoopSub1[playerID] - 4))
                # (Line 271) trg.Shape_Dot(playerID, 1, "50 + 1n Tank", x, y);
                trg.Shape_Dot(playerID, 1, "50 + 1n Tank", x, y)
                # (Line 272) trg.Shape_Dot(playerID, 1, "50 + 1n Tank", -x, -y);
                trg.Shape_Dot(playerID, 1, "50 + 1n Tank", -x, -y)
                # (Line 273) trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", -y, x);
                trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", -y, x)
                # (Line 274) trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", y, -x);
                trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", y, -x)
                # (Line 275) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                # (Line 276) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                # (Line 278) trg.Sub1_Wait(80);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                trg.Sub1_Wait(80)
                # (Line 280) v.P_LoopSub1[playerID] += 1;
                _ARRW(v.P_LoopSub1, playerID).__iadd__(1)
                # (Line 281) }
                # (Line 282) else if (v.P_LoopSub1[playerID] == 7)
            if EUDElseIf()(v.P_LoopSub1[playerID] == 7):
                # (Line 283) {
                # (Line 284) var x = 200 - 50 * (v.P_LoopSub1[playerID] - 4);
                x = EUDVariable()
                x << (200 - 50 * (v.P_LoopSub1[playerID] - 4))
                # (Line 285) var y = -50 * (v.P_LoopSub1[playerID] - 4);
                y = EUDVariable()
                y << (-50 * (v.P_LoopSub1[playerID] - 4))
                # (Line 287) trg.Shape_Dot(playerID, 1, "50 + 1n Tank", x, y);
                trg.Shape_Dot(playerID, 1, "50 + 1n Tank", x, y)
                # (Line 288) trg.Shape_Dot(playerID, 1, "50 + 1n Tank", -x, -y);
                trg.Shape_Dot(playerID, 1, "50 + 1n Tank", -x, -y)
                # (Line 289) trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", -y, x);
                trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", -y, x)
                # (Line 290) trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", y, -x);
                trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", y, -x)
                # (Line 291) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                # (Line 292) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                # (Line 294) trg.Sub1_Wait(80);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                trg.Sub1_Wait(80)
                # (Line 296) v.P_LoopSub1[playerID] = 0;
                _ARRW(v.P_LoopSub1, playerID) << (0)
                # (Line 297) }
                # (Line 298) }
            EUDEndIf()
            # (Line 299) else if (v.P_CountMain[playerID] == 1)
        if EUDElseIf()(v.P_CountMain[playerID] == 1):
            # (Line 300) {
            # (Line 301) if (v.P_LoopSub1[playerID] < 4)
            if EUDIf()(v.P_LoopSub1[playerID] >= 4, neg=True):
                # (Line 302) {
                # (Line 303) var x = 50 * v.P_LoopSub1[playerID];
                x = EUDVariable()
                x << (50 * v.P_LoopSub1[playerID])
                # (Line 304) var y = 200 - 50 * v.P_LoopSub1[playerID];
                y = EUDVariable()
                y << (200 - 50 * v.P_LoopSub1[playerID])
                # (Line 306) RemoveUnitAt(All, "80 + 1n Tom Kazansky", "Anywhere", playerID);
                # (Line 307) trg.Shape_Dot(playerID, 1, "80 + 1n Tom Kazansky", x, y);
                DoActions(RemoveUnitAt(All, "80 + 1n Tom Kazansky", "Anywhere", playerID))
                trg.Shape_Dot(playerID, 1, "80 + 1n Tom Kazansky", x, y)
                # (Line 308) trg.Shape_Dot(playerID, 1, "50 + 1n Tank", x, y);
                trg.Shape_Dot(playerID, 1, "50 + 1n Tank", x, y)
                # (Line 309) trg.Shape_Dot(playerID, 1, "80 + 1n Tom Kazansky", -x, -y);
                trg.Shape_Dot(playerID, 1, "80 + 1n Tom Kazansky", -x, -y)
                # (Line 310) trg.Shape_Dot(playerID, 1, "50 + 1n Tank", -x, -y);
                trg.Shape_Dot(playerID, 1, "50 + 1n Tank", -x, -y)
                # (Line 311) trg.Shape_Dot(playerID, 1, "80 + 1n Tom Kazansky", -y, x);
                trg.Shape_Dot(playerID, 1, "80 + 1n Tom Kazansky", -y, x)
                # (Line 312) trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", -y, x);
                trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", -y, x)
                # (Line 313) trg.Shape_Dot(playerID, 1, "80 + 1n Tom Kazansky", y, -x);
                trg.Shape_Dot(playerID, 1, "80 + 1n Tom Kazansky", y, -x)
                # (Line 314) trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", y, -x);
                trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", y, -x)
                # (Line 315) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                # (Line 316) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                # (Line 317) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                # (Line 318) Order("80 + 1n Tom Kazansky", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 320) trg.Sub1_Wait(80);
                DoActions(Order("80 + 1n Tom Kazansky", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Sub1_Wait(80)
                # (Line 322) v.P_LoopSub1[playerID] += 1;
                _ARRW(v.P_LoopSub1, playerID).__iadd__(1)
                # (Line 323) }
                # (Line 324) else if (v.P_LoopSub1[playerID] < 7)
            if EUDElseIf()(v.P_LoopSub1[playerID] >= 7, neg=True):
                # (Line 325) {
                # (Line 326) var x = 200 - 50 * (v.P_LoopSub1[playerID] - 4);
                x = EUDVariable()
                x << (200 - 50 * (v.P_LoopSub1[playerID] - 4))
                # (Line 327) var y = -50 * (v.P_LoopSub1[playerID] - 4);
                y = EUDVariable()
                y << (-50 * (v.P_LoopSub1[playerID] - 4))
                # (Line 329) RemoveUnitAt(All, "80 + 1n Tom Kazansky", "Anywhere", playerID);
                # (Line 330) trg.Shape_Dot(playerID, 1, "80 + 1n Tom Kazansky", x, y);
                DoActions(RemoveUnitAt(All, "80 + 1n Tom Kazansky", "Anywhere", playerID))
                trg.Shape_Dot(playerID, 1, "80 + 1n Tom Kazansky", x, y)
                # (Line 331) trg.Shape_Dot(playerID, 1, "50 + 1n Tank", x, y);
                trg.Shape_Dot(playerID, 1, "50 + 1n Tank", x, y)
                # (Line 332) trg.Shape_Dot(playerID, 1, "80 + 1n Tom Kazansky", -x, -y);
                trg.Shape_Dot(playerID, 1, "80 + 1n Tom Kazansky", -x, -y)
                # (Line 333) trg.Shape_Dot(playerID, 1, "50 + 1n Tank", -x, -y);
                trg.Shape_Dot(playerID, 1, "50 + 1n Tank", -x, -y)
                # (Line 334) trg.Shape_Dot(playerID, 1, "80 + 1n Tom Kazansky", -y, x);
                trg.Shape_Dot(playerID, 1, "80 + 1n Tom Kazansky", -y, x)
                # (Line 335) trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", -y, x);
                trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", -y, x)
                # (Line 336) trg.Shape_Dot(playerID, 1, "80 + 1n Tom Kazansky", y, -x);
                trg.Shape_Dot(playerID, 1, "80 + 1n Tom Kazansky", y, -x)
                # (Line 337) trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", y, -x);
                trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", y, -x)
                # (Line 338) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                # (Line 339) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                # (Line 340) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                # (Line 341) Order("80 + 1n Tom Kazansky", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 343) trg.Sub1_Wait(80);
                DoActions(Order("80 + 1n Tom Kazansky", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Sub1_Wait(80)
                # (Line 345) v.P_LoopSub1[playerID] += 1;
                _ARRW(v.P_LoopSub1, playerID).__iadd__(1)
                # (Line 346) }
                # (Line 347) else if (v.P_LoopSub1[playerID] == 7)
            if EUDElseIf()(v.P_LoopSub1[playerID] == 7):
                # (Line 348) {
                # (Line 349) var x = 200 - 50 * (v.P_LoopSub1[playerID] - 4);
                x = EUDVariable()
                x << (200 - 50 * (v.P_LoopSub1[playerID] - 4))
                # (Line 350) var y = -50 * (v.P_LoopSub1[playerID] - 4);
                y = EUDVariable()
                y << (-50 * (v.P_LoopSub1[playerID] - 4))
                # (Line 352) RemoveUnitAt(All, "80 + 1n Tom Kazansky", "Anywhere", playerID);
                # (Line 353) trg.Shape_Dot(playerID, 1, "80 + 1n Tom Kazansky", x, y);
                DoActions(RemoveUnitAt(All, "80 + 1n Tom Kazansky", "Anywhere", playerID))
                trg.Shape_Dot(playerID, 1, "80 + 1n Tom Kazansky", x, y)
                # (Line 354) trg.Shape_Dot(playerID, 1, "50 + 1n Tank", x, y);
                trg.Shape_Dot(playerID, 1, "50 + 1n Tank", x, y)
                # (Line 355) trg.Shape_Dot(playerID, 1, "80 + 1n Tom Kazansky", -x, -y);
                trg.Shape_Dot(playerID, 1, "80 + 1n Tom Kazansky", -x, -y)
                # (Line 356) trg.Shape_Dot(playerID, 1, "50 + 1n Tank", -x, -y);
                trg.Shape_Dot(playerID, 1, "50 + 1n Tank", -x, -y)
                # (Line 357) trg.Shape_Dot(playerID, 1, "80 + 1n Tom Kazansky", -y, x);
                trg.Shape_Dot(playerID, 1, "80 + 1n Tom Kazansky", -y, x)
                # (Line 358) trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", -y, x);
                trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", -y, x)
                # (Line 359) trg.Shape_Dot(playerID, 1, "80 + 1n Tom Kazansky", y, -x);
                trg.Shape_Dot(playerID, 1, "80 + 1n Tom Kazansky", y, -x)
                # (Line 360) trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", y, -x);
                trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", y, -x)
                # (Line 361) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                # (Line 362) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                # (Line 363) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                # (Line 364) Order("80 + 1n Tom Kazansky", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 366) trg.Sub1_Wait(80);
                DoActions(Order("80 + 1n Tom Kazansky", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Sub1_Wait(80)
                # (Line 368) v.P_LoopSub1[playerID] = 0;
                _ARRW(v.P_LoopSub1, playerID) << (0)
                # (Line 369) }
                # (Line 370) }
            EUDEndIf()
            # (Line 371) else if (v.P_CountMain[playerID] == 4)
        if EUDElseIf()(v.P_CountMain[playerID] == 4):
            # (Line 372) {
            # (Line 373) if (v.P_LoopSub1[playerID] < 7)
            if EUDIf()(v.P_LoopSub1[playerID] >= 7, neg=True):
                # (Line 374) {
                # (Line 375) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
                # (Line 376) trg.Shape_Line(playerID, 1, "50 + 1n Tank", 45 * 3 * v.P_LoopSub1[playerID] + 90, 11, 75, 100);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                trg.Shape_Line(playerID, 1, "50 + 1n Tank", 45 * 3 * v.P_LoopSub1[playerID] + 90, 11, 75, 100)
                # (Line 377) trg.Shape_Line(playerID, 1, "40 + 1n Guardian", 45 * 3 * v.P_LoopSub1[playerID] + 180, 11, 75, 100);
                trg.Shape_Line(playerID, 1, "40 + 1n Guardian", 45 * 3 * v.P_LoopSub1[playerID] + 180, 11, 75, 100)
                # (Line 378) trg.Shape_Line(playerID, 1, "50 + 1n Battlecruiser", 45 * 3 * v.P_LoopSub1[playerID], 11, 75, 100);
                trg.Shape_Line(playerID, 1, "50 + 1n Battlecruiser", 45 * 3 * v.P_LoopSub1[playerID], 11, 75, 100)
                # (Line 379) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                # (Line 380) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                # (Line 381) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID))
                # (Line 382) Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 384) trg.Sub1_Wait(80);
                DoActions(Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Sub1_Wait(80)
                # (Line 386) v.P_LoopSub1[playerID] += 1;
                _ARRW(v.P_LoopSub1, playerID).__iadd__(1)
                # (Line 387) }
                # (Line 388) else if (v.P_LoopSub1[playerID] == 7)
            if EUDElseIf()(v.P_LoopSub1[playerID] == 7):
                # (Line 389) {
                # (Line 390) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
                # (Line 391) trg.Shape_Line(playerID, 1, "50 + 1n Tank", 45 * 3 * v.P_LoopSub1[playerID] + 90, 11, 75, 100);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                trg.Shape_Line(playerID, 1, "50 + 1n Tank", 45 * 3 * v.P_LoopSub1[playerID] + 90, 11, 75, 100)
                # (Line 392) trg.Shape_Line(playerID, 1, "40 + 1n Guardian", 45 * 3 * v.P_LoopSub1[playerID] + 180, 11, 75, 100);
                trg.Shape_Line(playerID, 1, "40 + 1n Guardian", 45 * 3 * v.P_LoopSub1[playerID] + 180, 11, 75, 100)
                # (Line 393) trg.Shape_Line(playerID, 1, "50 + 1n Battlecruiser", 45 * 3 * v.P_LoopSub1[playerID], 11, 75, 100);
                trg.Shape_Line(playerID, 1, "50 + 1n Battlecruiser", 45 * 3 * v.P_LoopSub1[playerID], 11, 75, 100)
                # (Line 394) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                # (Line 395) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                # (Line 396) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID))
                # (Line 397) Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 399) trg.Sub1_Wait(80);
                DoActions(Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Sub1_Wait(80)
                # (Line 401) v.P_LoopSub1[playerID] = 0;
                _ARRW(v.P_LoopSub1, playerID) << (0)
                # (Line 402) }
                # (Line 403) }
            EUDEndIf()
            # (Line 404) }
        EUDEndIf()
        # (Line 405) }
    EUDEndIf()
