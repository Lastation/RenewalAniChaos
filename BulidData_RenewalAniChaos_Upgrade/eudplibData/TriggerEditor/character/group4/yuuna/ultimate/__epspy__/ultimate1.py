## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import PluginVariables as msqcvar;
import PluginVariables as msqcvar
# (Line 2) import variable as v;
import variable as v
# (Line 3) import func.trig as trg;
from func import trig as trg
# (Line 4) import func.sound as s;
from func import sound as s
# (Line 6) function FlowerShape(cp : TrgPlayer, count, Unit : TrgUnit, i, distance, interval);
# (Line 8) function main(playerID)
# (Line 9) {
@EUDFunc
def f_main(playerID):
    # (Line 10) MoveLocation("22.Yuuna_Bozo", v.P_UnitID[playerID], playerID, "Anywhere");
    # (Line 11) trg.Buff_ShieldFix(1);
    DoActions(MoveLocation("22.Yuuna_Bozo", v.P_UnitID[playerID], playerID, "Anywhere"))
    trg.Buff_ShieldFix(1)
    # (Line 12) trg.Debuff_BanReturn();
    trg.Debuff_BanReturn()
    # (Line 14) if (v.P_WaitMain[playerID] == 0)
    if EUDIf()(v.P_WaitMain[playerID] == 0):
        # (Line 15) {
        # (Line 16) if (v.P_CountMain[playerID] == 0)
        if EUDIf()(v.P_CountMain[playerID] == 0):
            # (Line 17) {
            # (Line 18) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 19) {
                # (Line 21) SetSwitch("Recall - Yuuna", Set);
                # (Line 23) trg.Main_Wait(2080);
                DoActions(SetSwitch("Recall - Yuuna", Set))
                trg.Main_Wait(2080)
                # (Line 25) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 26) }
                # (Line 27) else if (v.P_LoopMain[playerID] == 1)
            if EUDElseIf()(v.P_LoopMain[playerID] == 1):
                # (Line 28) {
                # (Line 29) trg.Main_Wait(80);
                trg.Main_Wait(80)
                # (Line 31) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 32) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 33) }
                # (Line 35) }
            EUDEndIf()
            # (Line 36) else if (v.P_CountMain[playerID] == 1)
        if EUDElseIf()(v.P_CountMain[playerID] == 1):
            # (Line 37) {
            # (Line 38) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 39) {
                # (Line 40) s.CharacterVoice(9);
                s.CharacterVoice(9)
                # (Line 41) trg.Main_Wait(5760);
                trg.Main_Wait(5760)
                # (Line 43) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 44) }
                # (Line 45) else if (v.P_LoopMain[playerID] == 1)
            if EUDElseIf()(v.P_LoopMain[playerID] == 1):
                # (Line 46) {
                # (Line 47) trg.Main_Wait(80);
                trg.Main_Wait(80)
                # (Line 49) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 50) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 51) v.P_LoopSub1[playerID] = 0;
                _ARRW(v.P_LoopSub1, playerID) << (0)
                # (Line 52) }
                # (Line 54) }
            EUDEndIf()
            # (Line 55) else if (v.P_CountMain[playerID] == 2)
        if EUDElseIf()(v.P_CountMain[playerID] == 2):
            # (Line 56) {
            # (Line 57) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 58) {
                # (Line 59) RemoveUnitAt(All, "80 + 1n Tom Kazansky", "Anywhere", playerID);
                # (Line 60) trg.Shape_NxNSquare(playerID, 1, "40 + 1n Wraith", 3, 75);
                DoActions(RemoveUnitAt(All, "80 + 1n Tom Kazansky", "Anywhere", playerID))
                trg.Shape_NxNSquare(playerID, 1, "40 + 1n Wraith", 3, 75)
                # (Line 61) trg.Shape_NxNSquare(playerID, 1, "50 + 1n Tank", 3, 75);
                trg.Shape_NxNSquare(playerID, 1, "50 + 1n Tank", 3, 75)
                # (Line 62) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 63) Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 64) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                DoActions(Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 66) trg.Main_Wait(480);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                trg.Main_Wait(480)
                # (Line 68) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 69) }
                # (Line 70) else if (v.P_LoopMain[playerID] == 1)
            if EUDElseIf()(v.P_LoopMain[playerID] == 1):
                # (Line 71) {
                # (Line 72) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 73) trg.Shape_NxNSquare(playerID, 1, "40 + 1n Wraith", 4, 75);
                DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                trg.Shape_NxNSquare(playerID, 1, "40 + 1n Wraith", 4, 75)
                # (Line 74) trg.Shape_NxNSquare(playerID, 1, "50 + 1n Tank", 4, 75);
                trg.Shape_NxNSquare(playerID, 1, "50 + 1n Tank", 4, 75)
                # (Line 75) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 76) Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 77) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                DoActions(Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 79) trg.Main_Wait(480);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                trg.Main_Wait(480)
                # (Line 81) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 82) }
                # (Line 83) else if (v.P_LoopMain[playerID] == 2)
            if EUDElseIf()(v.P_LoopMain[playerID] == 2):
                # (Line 84) {
                # (Line 85) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 86) trg.Shape_NxNSquare(playerID, 1, "40 + 1n Wraith", 5, 75);
                DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                trg.Shape_NxNSquare(playerID, 1, "40 + 1n Wraith", 5, 75)
                # (Line 87) trg.Shape_NxNSquare(playerID, 1, "50 + 1n Tank", 5, 75);
                trg.Shape_NxNSquare(playerID, 1, "50 + 1n Tank", 5, 75)
                # (Line 88) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 89) Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 90) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                DoActions(Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 92) trg.Main_Wait(800);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                trg.Main_Wait(800)
                # (Line 94) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 95) }
                # (Line 96) else if (v.P_LoopMain[playerID] == 3)
            if EUDElseIf()(v.P_LoopMain[playerID] == 3):
                # (Line 97) {
                # (Line 98) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 99) trg.Shape_NxNSquare(playerID, 1, "40 + 1n Wraith", 7, 75);
                DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                trg.Shape_NxNSquare(playerID, 1, "40 + 1n Wraith", 7, 75)
                # (Line 100) trg.Shape_NxNSquare(playerID, 1, "50 + 1n Tank", 7, 75);
                trg.Shape_NxNSquare(playerID, 1, "50 + 1n Tank", 7, 75)
                # (Line 101) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 102) Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 103) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                DoActions(Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 105) trg.Main_Wait(480);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                trg.Main_Wait(480)
                # (Line 107) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 108) }
                # (Line 109) else if (v.P_LoopMain[playerID] == 4)
            if EUDElseIf()(v.P_LoopMain[playerID] == 4):
                # (Line 110) {
                # (Line 111) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 112) trg.Shape_NxNSquare(playerID, 1, "40 + 1n Wraith", 9, 75);
                DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                trg.Shape_NxNSquare(playerID, 1, "40 + 1n Wraith", 9, 75)
                # (Line 113) trg.Shape_NxNSquare(playerID, 1, "50 + 1n Tank", 9, 75);
                trg.Shape_NxNSquare(playerID, 1, "50 + 1n Tank", 9, 75)
                # (Line 114) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 115) Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 116) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                DoActions(Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 118) trg.Main_Wait(480);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                trg.Main_Wait(480)
                # (Line 120) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 121) }
                # (Line 122) else if (v.P_LoopMain[playerID] == 5)
            if EUDElseIf()(v.P_LoopMain[playerID] == 5):
                # (Line 123) {
                # (Line 124) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 125) trg.Shape_NxNSquare(playerID, 1, "40 + 1n Wraith", 11, 75);
                DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                trg.Shape_NxNSquare(playerID, 1, "40 + 1n Wraith", 11, 75)
                # (Line 126) trg.Shape_NxNSquare(playerID, 1, "50 + 1n Tank", 11, 75);
                trg.Shape_NxNSquare(playerID, 1, "50 + 1n Tank", 11, 75)
                # (Line 127) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 128) Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 129) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                DoActions(Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 131) trg.Main_Wait(9040);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                trg.Main_Wait(9040)
                # (Line 133) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 134) }
                # (Line 135) else if (v.P_LoopMain[playerID] < 17)
            if EUDElseIf()(v.P_LoopMain[playerID] >= 17, neg=True):
                # (Line 136) {
                # (Line 137) KillUnitAt(11, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 139) trg.Main_Wait(80);
                DoActions(KillUnitAt(11, "40 + 1n Wraith", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 141) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 142) }
                # (Line 143) else if (v.P_LoopMain[playerID] == 17)
            if EUDElseIf()(v.P_LoopMain[playerID] == 17):
                # (Line 144) {
                # (Line 145) trg.Main_Wait(400);
                trg.Main_Wait(400)
                # (Line 147) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 148) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 149) }
                # (Line 150) }
            EUDEndIf()
            # (Line 151) else if (v.P_CountMain[playerID] == 3)
        if EUDElseIf()(v.P_CountMain[playerID] == 3):
            # (Line 152) {
            # (Line 153) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 154) {
                # (Line 155) s.CharacterVoice(10);
                s.CharacterVoice(10)
                # (Line 156) trg.Shape_Edge(playerID, 1, "Protoss Dark Archon", 0, 11, 100 + 50 * v.P_LoopMain[playerID]);
                trg.Shape_Edge(playerID, 1, "Protoss Dark Archon", 0, 11, 100 + 50 * v.P_LoopMain[playerID])
                # (Line 157) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                # (Line 159) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 161) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 162) }
                # (Line 163) else if (v.P_LoopMain[playerID] < 3)
            if EUDElseIf()(v.P_LoopMain[playerID] >= 3, neg=True):
                # (Line 164) {
                # (Line 165) trg.Shape_Edge(playerID, 1, "Protoss Dark Archon", 0, 11, 100 + 50 * v.P_LoopMain[playerID]);
                trg.Shape_Edge(playerID, 1, "Protoss Dark Archon", 0, 11, 100 + 50 * v.P_LoopMain[playerID])
                # (Line 166) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                # (Line 168) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 170) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 171) }
                # (Line 172) else if (v.P_LoopMain[playerID] == 3)
            if EUDElseIf()(v.P_LoopMain[playerID] == 3):
                # (Line 173) {
                # (Line 174) trg.Shape_Edge(playerID, 1, "50 + 1n Tank", 0, 11, 100 + 50 * v.P_LoopMain[playerID]);
                trg.Shape_Edge(playerID, 1, "50 + 1n Tank", 0, 11, 100 + 50 * v.P_LoopMain[playerID])
                # (Line 175) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                # (Line 177) trg.Main_Wait(160);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                trg.Main_Wait(160)
                # (Line 179) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 180) }
                # (Line 181) else if (v.P_LoopMain[playerID] == 4)
            if EUDElseIf()(v.P_LoopMain[playerID] == 4):
                # (Line 182) {
                # (Line 183) trg.Shape_Edge(playerID, 1, " Unit. Hoffnung 25000", 0, 5, 100 + 50 * 0);
                trg.Shape_Edge(playerID, 1, " Unit. Hoffnung 25000", 0, 5, 100 + 50 * 0)
                # (Line 184) trg.Shape_Edge(playerID, 1, " Unit. Hoffnung 25000", 0, 7, 100 + 50 * 1);
                trg.Shape_Edge(playerID, 1, " Unit. Hoffnung 25000", 0, 7, 100 + 50 * 1)
                # (Line 185) trg.Shape_Edge(playerID, 1, " Unit. Hoffnung 25000", 0, 9, 100 + 50 * 2);
                trg.Shape_Edge(playerID, 1, " Unit. Hoffnung 25000", 0, 9, 100 + 50 * 2)
                # (Line 186) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID);
                # (Line 187) trg.Shape_Edge(playerID, 1, "60 + 1n Siege", 0, 11, 100 + 50 * 3);
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID))
                trg.Shape_Edge(playerID, 1, "60 + 1n Siege", 0, 11, 100 + 50 * 3)
                # (Line 189) trg.Main_Wait(1200);
                trg.Main_Wait(1200)
                # (Line 191) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 192) }
                # (Line 193) else if (v.P_LoopMain[playerID] == 5)
            if EUDElseIf()(v.P_LoopMain[playerID] == 5):
                # (Line 194) {
                # (Line 195) trg.Main_Wait(80);
                trg.Main_Wait(80)
                # (Line 197) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 198) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 199) v.P_LoopSub1[playerID] = 0;
                _ARRW(v.P_LoopSub1, playerID) << (0)
                # (Line 200) }
                # (Line 202) }
            EUDEndIf()
            # (Line 203) else if (v.P_CountMain[playerID] == 4)
        if EUDElseIf()(v.P_CountMain[playerID] == 4):
            # (Line 204) {
            # (Line 205) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 206) {
                # (Line 207) s.CharacterVoice(11);
                s.CharacterVoice(11)
                # (Line 209) trg.Main_Wait(4240);
                trg.Main_Wait(4240)
                # (Line 211) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 212) }
                # (Line 213) else if (v.P_LoopMain[playerID] < 3)
            if EUDElseIf()(v.P_LoopMain[playerID] >= 3, neg=True):
                # (Line 214) {
                # (Line 215) KillUnitAt(All, "40 + 1n Goliath", "Anywhere", playerID);
                # (Line 216) trg.Shape_NxNSquare(playerID, 1, "50 + 1n Battlecruiser", 9, 75);
                DoActions(KillUnitAt(All, "40 + 1n Goliath", "Anywhere", playerID))
                trg.Shape_NxNSquare(playerID, 1, "50 + 1n Battlecruiser", 9, 75)
                # (Line 217) trg.Shape_NxNSquare(playerID, 1, "40 + 1n Goliath", 9, 75);
                trg.Shape_NxNSquare(playerID, 1, "40 + 1n Goliath", 9, 75)
                # (Line 218) Order("40 + 1n Goliath", playerID, "Anywhere", Attack, "Anywhere");
                # (Line 219) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
                DoActions(Order("40 + 1n Goliath", playerID, "Anywhere", Attack, "Anywhere"))
                # (Line 221) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 223) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 224) }
                # (Line 225) else if (v.P_LoopMain[playerID] == 3)
            if EUDElseIf()(v.P_LoopMain[playerID] == 3):
                # (Line 226) {
                # (Line 227) KillUnitAt(All, "40 + 1n Goliath", "Anywhere", playerID);
                # (Line 228) KillUnitAt(All, "60 + 1n Siege", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Goliath", "Anywhere", playerID))
                # (Line 230) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "60 + 1n Siege", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 232) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 233) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 234) v.P_LoopSub1[playerID] = 0;
                _ARRW(v.P_LoopSub1, playerID) << (0)
                # (Line 235) }
                # (Line 236) }
            EUDEndIf()
            # (Line 237) else if (v.P_CountMain[playerID] == 5)
        if EUDElseIf()(v.P_CountMain[playerID] == 5):
            # (Line 238) {
            # (Line 239) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
            # (Line 240) SetSwitch("Recall - Yuuna", Clear);
            DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
            # (Line 241) SetSwitch("UiltimateSwitch", Clear);
            DoActions(SetSwitch("Recall - Yuuna", Clear))
            # (Line 242) SetDeaths(playerID, SetTo, 0, " `ShieldRecharge");
            DoActions(SetSwitch("UiltimateSwitch", Clear))
            # (Line 243) trg.SkillEnd();
            DoActions(SetDeaths(playerID, SetTo, 0, " `ShieldRecharge"))
            trg.SkillEnd()
            # (Line 244) }
            # (Line 245) }
        EUDEndIf()
        # (Line 247) if (v.P_WaitSub1[playerID] == 0)
    EUDEndIf()
    if EUDIf()(v.P_WaitSub1[playerID] == 0):
        # (Line 248) {
        # (Line 249) if (v.P_CountMain[playerID] == 0)
        if EUDIf()(v.P_CountMain[playerID] == 0):
            # (Line 250) {
            # (Line 251) if (v.P_LoopSub1[playerID] < 4)
            if EUDIf()(v.P_LoopSub1[playerID] >= 4, neg=True):
                # (Line 252) {
                # (Line 253) var x = 50 * v.P_LoopSub1[playerID];
                x = EUDVariable()
                x << (50 * v.P_LoopSub1[playerID])
                # (Line 254) var y = 200 - 50 * v.P_LoopSub1[playerID];
                y = EUDVariable()
                y << (200 - 50 * v.P_LoopSub1[playerID])
                # (Line 256) trg.Shape_Dot(playerID, 1, "50 + 1n Tank", x, y);
                trg.Shape_Dot(playerID, 1, "50 + 1n Tank", x, y)
                # (Line 257) trg.Shape_Dot(playerID, 1, "50 + 1n Tank", -x, -y);
                trg.Shape_Dot(playerID, 1, "50 + 1n Tank", -x, -y)
                # (Line 258) trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", -y, x);
                trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", -y, x)
                # (Line 259) trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", y, -x);
                trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", y, -x)
                # (Line 260) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                # (Line 261) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                # (Line 263) trg.Sub1_Wait(80);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                trg.Sub1_Wait(80)
                # (Line 265) v.P_LoopSub1[playerID] += 1;
                _ARRW(v.P_LoopSub1, playerID).__iadd__(1)
                # (Line 266) }
                # (Line 267) else if (v.P_LoopSub1[playerID] < 7)
            if EUDElseIf()(v.P_LoopSub1[playerID] >= 7, neg=True):
                # (Line 268) {
                # (Line 269) var x = 200 - 50 * (v.P_LoopSub1[playerID] - 4);
                x = EUDVariable()
                x << (200 - 50 * (v.P_LoopSub1[playerID] - 4))
                # (Line 270) var y = -50 * (v.P_LoopSub1[playerID] - 4);
                y = EUDVariable()
                y << (-50 * (v.P_LoopSub1[playerID] - 4))
                # (Line 272) trg.Shape_Dot(playerID, 1, "50 + 1n Tank", x, y);
                trg.Shape_Dot(playerID, 1, "50 + 1n Tank", x, y)
                # (Line 273) trg.Shape_Dot(playerID, 1, "50 + 1n Tank", -x, -y);
                trg.Shape_Dot(playerID, 1, "50 + 1n Tank", -x, -y)
                # (Line 274) trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", -y, x);
                trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", -y, x)
                # (Line 275) trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", y, -x);
                trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", y, -x)
                # (Line 276) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                # (Line 277) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                # (Line 279) trg.Sub1_Wait(80);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                trg.Sub1_Wait(80)
                # (Line 281) v.P_LoopSub1[playerID] += 1;
                _ARRW(v.P_LoopSub1, playerID).__iadd__(1)
                # (Line 282) }
                # (Line 283) else if (v.P_LoopSub1[playerID] == 7)
            if EUDElseIf()(v.P_LoopSub1[playerID] == 7):
                # (Line 284) {
                # (Line 285) var x = 200 - 50 * (v.P_LoopSub1[playerID] - 4);
                x = EUDVariable()
                x << (200 - 50 * (v.P_LoopSub1[playerID] - 4))
                # (Line 286) var y = -50 * (v.P_LoopSub1[playerID] - 4);
                y = EUDVariable()
                y << (-50 * (v.P_LoopSub1[playerID] - 4))
                # (Line 288) trg.Shape_Dot(playerID, 1, "50 + 1n Tank", x, y);
                trg.Shape_Dot(playerID, 1, "50 + 1n Tank", x, y)
                # (Line 289) trg.Shape_Dot(playerID, 1, "50 + 1n Tank", -x, -y);
                trg.Shape_Dot(playerID, 1, "50 + 1n Tank", -x, -y)
                # (Line 290) trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", -y, x);
                trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", -y, x)
                # (Line 291) trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", y, -x);
                trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", y, -x)
                # (Line 292) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                # (Line 293) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                # (Line 295) trg.Sub1_Wait(80);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                trg.Sub1_Wait(80)
                # (Line 297) v.P_LoopSub1[playerID] = 0;
                _ARRW(v.P_LoopSub1, playerID) << (0)
                # (Line 298) }
                # (Line 299) }
            EUDEndIf()
            # (Line 300) else if (v.P_CountMain[playerID] == 1)
        if EUDElseIf()(v.P_CountMain[playerID] == 1):
            # (Line 301) {
            # (Line 302) if (v.P_LoopSub1[playerID] < 4)
            if EUDIf()(v.P_LoopSub1[playerID] >= 4, neg=True):
                # (Line 303) {
                # (Line 304) var x = 50 * v.P_LoopSub1[playerID];
                x = EUDVariable()
                x << (50 * v.P_LoopSub1[playerID])
                # (Line 305) var y = 200 - 50 * v.P_LoopSub1[playerID];
                y = EUDVariable()
                y << (200 - 50 * v.P_LoopSub1[playerID])
                # (Line 307) RemoveUnitAt(All, "80 + 1n Tom Kazansky", "Anywhere", playerID);
                # (Line 308) trg.Shape_Dot(playerID, 1, "80 + 1n Tom Kazansky", x, y);
                DoActions(RemoveUnitAt(All, "80 + 1n Tom Kazansky", "Anywhere", playerID))
                trg.Shape_Dot(playerID, 1, "80 + 1n Tom Kazansky", x, y)
                # (Line 309) trg.Shape_Dot(playerID, 1, "50 + 1n Tank", x, y);
                trg.Shape_Dot(playerID, 1, "50 + 1n Tank", x, y)
                # (Line 310) trg.Shape_Dot(playerID, 1, "80 + 1n Tom Kazansky", -x, -y);
                trg.Shape_Dot(playerID, 1, "80 + 1n Tom Kazansky", -x, -y)
                # (Line 311) trg.Shape_Dot(playerID, 1, "50 + 1n Tank", -x, -y);
                trg.Shape_Dot(playerID, 1, "50 + 1n Tank", -x, -y)
                # (Line 312) trg.Shape_Dot(playerID, 1, "80 + 1n Tom Kazansky", -y, x);
                trg.Shape_Dot(playerID, 1, "80 + 1n Tom Kazansky", -y, x)
                # (Line 313) trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", -y, x);
                trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", -y, x)
                # (Line 314) trg.Shape_Dot(playerID, 1, "80 + 1n Tom Kazansky", y, -x);
                trg.Shape_Dot(playerID, 1, "80 + 1n Tom Kazansky", y, -x)
                # (Line 315) trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", y, -x);
                trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", y, -x)
                # (Line 316) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                # (Line 317) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                # (Line 318) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                # (Line 319) Order("80 + 1n Tom Kazansky", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 321) trg.Sub1_Wait(80);
                DoActions(Order("80 + 1n Tom Kazansky", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Sub1_Wait(80)
                # (Line 323) v.P_LoopSub1[playerID] += 1;
                _ARRW(v.P_LoopSub1, playerID).__iadd__(1)
                # (Line 324) }
                # (Line 325) else if (v.P_LoopSub1[playerID] < 7)
            if EUDElseIf()(v.P_LoopSub1[playerID] >= 7, neg=True):
                # (Line 326) {
                # (Line 327) var x = 200 - 50 * (v.P_LoopSub1[playerID] - 4);
                x = EUDVariable()
                x << (200 - 50 * (v.P_LoopSub1[playerID] - 4))
                # (Line 328) var y = -50 * (v.P_LoopSub1[playerID] - 4);
                y = EUDVariable()
                y << (-50 * (v.P_LoopSub1[playerID] - 4))
                # (Line 330) RemoveUnitAt(All, "80 + 1n Tom Kazansky", "Anywhere", playerID);
                # (Line 331) trg.Shape_Dot(playerID, 1, "80 + 1n Tom Kazansky", x, y);
                DoActions(RemoveUnitAt(All, "80 + 1n Tom Kazansky", "Anywhere", playerID))
                trg.Shape_Dot(playerID, 1, "80 + 1n Tom Kazansky", x, y)
                # (Line 332) trg.Shape_Dot(playerID, 1, "50 + 1n Tank", x, y);
                trg.Shape_Dot(playerID, 1, "50 + 1n Tank", x, y)
                # (Line 333) trg.Shape_Dot(playerID, 1, "80 + 1n Tom Kazansky", -x, -y);
                trg.Shape_Dot(playerID, 1, "80 + 1n Tom Kazansky", -x, -y)
                # (Line 334) trg.Shape_Dot(playerID, 1, "50 + 1n Tank", -x, -y);
                trg.Shape_Dot(playerID, 1, "50 + 1n Tank", -x, -y)
                # (Line 335) trg.Shape_Dot(playerID, 1, "80 + 1n Tom Kazansky", -y, x);
                trg.Shape_Dot(playerID, 1, "80 + 1n Tom Kazansky", -y, x)
                # (Line 336) trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", -y, x);
                trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", -y, x)
                # (Line 337) trg.Shape_Dot(playerID, 1, "80 + 1n Tom Kazansky", y, -x);
                trg.Shape_Dot(playerID, 1, "80 + 1n Tom Kazansky", y, -x)
                # (Line 338) trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", y, -x);
                trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", y, -x)
                # (Line 339) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                # (Line 340) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                # (Line 341) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                # (Line 342) Order("80 + 1n Tom Kazansky", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 344) trg.Sub1_Wait(80);
                DoActions(Order("80 + 1n Tom Kazansky", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Sub1_Wait(80)
                # (Line 346) v.P_LoopSub1[playerID] += 1;
                _ARRW(v.P_LoopSub1, playerID).__iadd__(1)
                # (Line 347) }
                # (Line 348) else if (v.P_LoopSub1[playerID] == 7)
            if EUDElseIf()(v.P_LoopSub1[playerID] == 7):
                # (Line 349) {
                # (Line 350) var x = 200 - 50 * (v.P_LoopSub1[playerID] - 4);
                x = EUDVariable()
                x << (200 - 50 * (v.P_LoopSub1[playerID] - 4))
                # (Line 351) var y = -50 * (v.P_LoopSub1[playerID] - 4);
                y = EUDVariable()
                y << (-50 * (v.P_LoopSub1[playerID] - 4))
                # (Line 353) RemoveUnitAt(All, "80 + 1n Tom Kazansky", "Anywhere", playerID);
                # (Line 354) trg.Shape_Dot(playerID, 1, "80 + 1n Tom Kazansky", x, y);
                DoActions(RemoveUnitAt(All, "80 + 1n Tom Kazansky", "Anywhere", playerID))
                trg.Shape_Dot(playerID, 1, "80 + 1n Tom Kazansky", x, y)
                # (Line 355) trg.Shape_Dot(playerID, 1, "50 + 1n Tank", x, y);
                trg.Shape_Dot(playerID, 1, "50 + 1n Tank", x, y)
                # (Line 356) trg.Shape_Dot(playerID, 1, "80 + 1n Tom Kazansky", -x, -y);
                trg.Shape_Dot(playerID, 1, "80 + 1n Tom Kazansky", -x, -y)
                # (Line 357) trg.Shape_Dot(playerID, 1, "50 + 1n Tank", -x, -y);
                trg.Shape_Dot(playerID, 1, "50 + 1n Tank", -x, -y)
                # (Line 358) trg.Shape_Dot(playerID, 1, "80 + 1n Tom Kazansky", -y, x);
                trg.Shape_Dot(playerID, 1, "80 + 1n Tom Kazansky", -y, x)
                # (Line 359) trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", -y, x);
                trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", -y, x)
                # (Line 360) trg.Shape_Dot(playerID, 1, "80 + 1n Tom Kazansky", y, -x);
                trg.Shape_Dot(playerID, 1, "80 + 1n Tom Kazansky", y, -x)
                # (Line 361) trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", y, -x);
                trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", y, -x)
                # (Line 362) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                # (Line 363) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                # (Line 364) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                # (Line 365) Order("80 + 1n Tom Kazansky", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 367) trg.Sub1_Wait(80);
                DoActions(Order("80 + 1n Tom Kazansky", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Sub1_Wait(80)
                # (Line 369) v.P_LoopSub1[playerID] = 0;
                _ARRW(v.P_LoopSub1, playerID) << (0)
                # (Line 370) }
                # (Line 371) }
            EUDEndIf()
            # (Line 372) else if (v.P_CountMain[playerID] == 4)
        if EUDElseIf()(v.P_CountMain[playerID] == 4):
            # (Line 373) {
            # (Line 374) if (v.P_LoopSub1[playerID] < 7)
            if EUDIf()(v.P_LoopSub1[playerID] >= 7, neg=True):
                # (Line 375) {
                # (Line 376) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
                # (Line 377) trg.Shape_Line(playerID, 1, "50 + 1n Tank", 45 * 3 * v.P_LoopSub1[playerID] + 90, 11, 75, 100);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                trg.Shape_Line(playerID, 1, "50 + 1n Tank", 45 * 3 * v.P_LoopSub1[playerID] + 90, 11, 75, 100)
                # (Line 378) trg.Shape_Line(playerID, 1, "40 + 1n Guardian", 45 * 3 * v.P_LoopSub1[playerID] + 180, 11, 75, 100);
                trg.Shape_Line(playerID, 1, "40 + 1n Guardian", 45 * 3 * v.P_LoopSub1[playerID] + 180, 11, 75, 100)
                # (Line 379) trg.Shape_Line(playerID, 1, "50 + 1n Battlecruiser", 45 * 3 * v.P_LoopSub1[playerID], 11, 75, 100);
                trg.Shape_Line(playerID, 1, "50 + 1n Battlecruiser", 45 * 3 * v.P_LoopSub1[playerID], 11, 75, 100)
                # (Line 380) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                # (Line 381) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                # (Line 382) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID))
                # (Line 383) Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 385) trg.Sub1_Wait(80);
                DoActions(Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Sub1_Wait(80)
                # (Line 387) v.P_LoopSub1[playerID] += 1;
                _ARRW(v.P_LoopSub1, playerID).__iadd__(1)
                # (Line 388) }
                # (Line 389) else if (v.P_LoopSub1[playerID] == 7)
            if EUDElseIf()(v.P_LoopSub1[playerID] == 7):
                # (Line 390) {
                # (Line 391) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
                # (Line 392) trg.Shape_Line(playerID, 1, "50 + 1n Tank", 45 * 3 * v.P_LoopSub1[playerID] + 90, 11, 75, 100);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                trg.Shape_Line(playerID, 1, "50 + 1n Tank", 45 * 3 * v.P_LoopSub1[playerID] + 90, 11, 75, 100)
                # (Line 393) trg.Shape_Line(playerID, 1, "40 + 1n Guardian", 45 * 3 * v.P_LoopSub1[playerID] + 180, 11, 75, 100);
                trg.Shape_Line(playerID, 1, "40 + 1n Guardian", 45 * 3 * v.P_LoopSub1[playerID] + 180, 11, 75, 100)
                # (Line 394) trg.Shape_Line(playerID, 1, "50 + 1n Battlecruiser", 45 * 3 * v.P_LoopSub1[playerID], 11, 75, 100);
                trg.Shape_Line(playerID, 1, "50 + 1n Battlecruiser", 45 * 3 * v.P_LoopSub1[playerID], 11, 75, 100)
                # (Line 395) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                # (Line 396) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                # (Line 397) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID))
                # (Line 398) Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 400) trg.Sub1_Wait(80);
                DoActions(Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Sub1_Wait(80)
                # (Line 402) v.P_LoopSub1[playerID] = 0;
                _ARRW(v.P_LoopSub1, playerID) << (0)
                # (Line 403) }
                # (Line 404) }
            EUDEndIf()
            # (Line 405) }
        EUDEndIf()
        # (Line 406) }
    EUDEndIf()
