## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import variable as v;
import variable as v
# (Line 2) import func.trig as trg;
from func import trig as trg
# (Line 3) import func.sound as s;
from func import sound as s
# (Line 5) function FlowerShape(playerID : TrgPlayer, count, Unit : TrgUnit, i, distance, interval);
# (Line 7) function main(playerID)
# (Line 8) {
@EUDFunc
def f_main(playerID):
    # (Line 9) trg.Debuff_BanReturn();
    trg.Debuff_BanReturn()
    # (Line 10) trg.Debuff_Stop();
    trg.Debuff_Stop()
    # (Line 11) MoveLocation("22.Yuuna_Bozo", v.P_UnitID[playerID], playerID, "Anywhere");
    # (Line 13) if (v.P_WaitMain[playerID] == 0)
    DoActions(MoveLocation("22.Yuuna_Bozo", v.P_UnitID[playerID], playerID, "Anywhere"))
    if EUDIf()(v.P_WaitMain[playerID] == 0):
        # (Line 14) {
        # (Line 15) if (v.P_CountMain[playerID] == 0)
        if EUDIf()(v.P_CountMain[playerID] == 0):
            # (Line 16) {
            # (Line 17) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 18) {
                # (Line 19) trg.Shape_NxNSquare(playerID, 1, "40 + 1n Wraith", 7, 75);
                trg.Shape_NxNSquare(playerID, 1, "40 + 1n Wraith", 7, 75)
                # (Line 20) trg.Shape_NxNSquare(playerID, 1, "Protoss Dark Archon", 7, 75);
                trg.Shape_NxNSquare(playerID, 1, "Protoss Dark Archon", 7, 75)
                # (Line 21) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 22) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                # (Line 24) trg.Main_Wait(320);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                trg.Main_Wait(320)
                # (Line 26) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 27) }
                # (Line 28) else if (v.P_LoopMain[playerID] == 1)
            if EUDElseIf()(v.P_LoopMain[playerID] == 1):
                # (Line 29) {
                # (Line 30) trg.Shape_NxNSquare(playerID, 1, "130 + 1n Norad", 3, 75);
                trg.Shape_NxNSquare(playerID, 1, "130 + 1n Norad", 3, 75)
                # (Line 31) trg.Shape_NxNSquare(playerID, 1, "50 + 1n Tank", 3, 75);
                trg.Shape_NxNSquare(playerID, 1, "50 + 1n Tank", 3, 75)
                # (Line 32) Order("130 + 1n Norad", playerID, "Anywhere", Attack, "Anywhere");
                # (Line 33) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                DoActions(Order("130 + 1n Norad", playerID, "Anywhere", Attack, "Anywhere"))
                # (Line 35) trg.Main_Wait(320);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                trg.Main_Wait(320)
                # (Line 37) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 38) }
                # (Line 39) else if (v.P_LoopMain[playerID] < 11)
            if EUDElseIf()(v.P_LoopMain[playerID] >= 11, neg=True):
                # (Line 40) {
                # (Line 41) KillUnitAt(1, "130 + 1n Norad", "Anywhere", playerID);
                # (Line 43) trg.Main_Wait(80);
                DoActions(KillUnitAt(1, "130 + 1n Norad", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 45) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 46) }
                # (Line 47) else if (v.P_LoopMain[playerID] == 11)
            if EUDElseIf()(v.P_LoopMain[playerID] == 11):
                # (Line 48) {
                # (Line 49) SetSwitch("Recall - Yuuna", Set);
                # (Line 51) trg.Main_Wait(400);
                DoActions(SetSwitch("Recall - Yuuna", Set))
                trg.Main_Wait(400)
                # (Line 53) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 54) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 55) v.P_LoopSub1[playerID] = 0;
                _ARRW(v.P_LoopSub1, playerID) << (0)
                # (Line 56) }
                # (Line 57) }
            EUDEndIf()
            # (Line 58) else if (v.P_CountMain[playerID] == 1)
        if EUDElseIf()(v.P_CountMain[playerID] == 1):
            # (Line 59) {
            # (Line 61) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 62) {
                # (Line 63) trg.Main_Wait(1440);
                trg.Main_Wait(1440)
                # (Line 65) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 66) }
                # (Line 67) else if (v.P_LoopMain[playerID] == 1)
            if EUDElseIf()(v.P_LoopMain[playerID] == 1):
                # (Line 68) {
                # (Line 69) s.CharacterVoice(6);
                s.CharacterVoice(6)
                # (Line 70) FlowerShape(playerID, 1, "40 + 1n Mojo", 0, 50, 50);
                FlowerShape(playerID, 1, "40 + 1n Mojo", 0, 50, 50)
                # (Line 71) FlowerShape(playerID, 1, "60 + 1n Siege", 0, 50, 50);
                FlowerShape(playerID, 1, "60 + 1n Siege", 0, 50, 50)
                # (Line 72) FlowerShape(playerID, 1, "40 + 1n Mojo", 2, 50, 50);
                FlowerShape(playerID, 1, "40 + 1n Mojo", 2, 50, 50)
                # (Line 73) FlowerShape(playerID, 1, "60 + 1n Siege", 2, 50, 50);
                FlowerShape(playerID, 1, "60 + 1n Siege", 2, 50, 50)
                # (Line 74) FlowerShape(playerID, 1, "40 + 1n Mojo", 3, 50, 50);
                FlowerShape(playerID, 1, "40 + 1n Mojo", 3, 50, 50)
                # (Line 75) FlowerShape(playerID, 1, "60 + 1n Siege", 3, 50, 50);
                FlowerShape(playerID, 1, "60 + 1n Siege", 3, 50, 50)
                # (Line 76) GiveUnits(All, "60 + 1n Siege", playerID, "Anywhere", P11);
                # (Line 78) KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID);
                DoActions(GiveUnits(All, "60 + 1n Siege", playerID, "Anywhere", P11))
                # (Line 80) trg.Main_Wait(1120);
                DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID))
                trg.Main_Wait(1120)
                # (Line 82) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 83) }
                # (Line 84) else if (v.P_LoopMain[playerID] == 2)
            if EUDElseIf()(v.P_LoopMain[playerID] == 2):
                # (Line 85) {
                # (Line 86) FlowerShape(playerID, 1, "40 + 1n Mojo", 1, 50, 50);
                FlowerShape(playerID, 1, "40 + 1n Mojo", 1, 50, 50)
                # (Line 87) FlowerShape(playerID, 1, "60 + 1n Siege", 1, 50, 50);
                FlowerShape(playerID, 1, "60 + 1n Siege", 1, 50, 50)
                # (Line 88) FlowerShape(playerID, 1, "40 + 1n Mojo", 4, 50, 50);
                FlowerShape(playerID, 1, "40 + 1n Mojo", 4, 50, 50)
                # (Line 89) FlowerShape(playerID, 1, "60 + 1n Siege", 4, 50, 50);
                FlowerShape(playerID, 1, "60 + 1n Siege", 4, 50, 50)
                # (Line 90) KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID);
                # (Line 91) GiveUnits(All, "60 + 1n Siege", playerID, "Anywhere", P11);
                DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID))
                # (Line 93) trg.Main_Wait(1600);
                DoActions(GiveUnits(All, "60 + 1n Siege", playerID, "Anywhere", P11))
                trg.Main_Wait(1600)
                # (Line 95) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 96) }
                # (Line 97) else if (v.P_LoopMain[playerID] == 3)
            if EUDElseIf()(v.P_LoopMain[playerID] == 3):
                # (Line 98) {
                # (Line 99) trg.Main_Wait(560);
                trg.Main_Wait(560)
                # (Line 101) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 102) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 103) v.P_LoopSub1[playerID] = 0;
                _ARRW(v.P_LoopSub1, playerID) << (0)
                # (Line 104) }
                # (Line 105) }
            EUDEndIf()
            # (Line 106) else if (v.P_CountMain[playerID] == 2)
        if EUDElseIf()(v.P_CountMain[playerID] == 2):
            # (Line 107) {
            # (Line 108) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 109) {
                # (Line 110) RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 111) s.CharacterVoice(7);
                DoActions(RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                s.CharacterVoice(7)
                # (Line 112) GiveUnits(All, "60 + 1n Siege", P11, "Anywhere", playerID);
                # (Line 113) trg.Shape_Line(playerID, 1, "50 + 1n Battlecruiser", 135, 9, 50, 50);
                DoActions(GiveUnits(All, "60 + 1n Siege", P11, "Anywhere", playerID))
                trg.Shape_Line(playerID, 1, "50 + 1n Battlecruiser", 135, 9, 50, 50)
                # (Line 114) trg.Shape_Line(playerID, 1, "Protoss Dark Archon", 315, 9, 50, 50);
                trg.Shape_Line(playerID, 1, "Protoss Dark Archon", 315, 9, 50, 50)
                # (Line 115) trg.Shape_Line(playerID, 1, "40 + 1n Guardian", 315, 9, 50, 50);
                trg.Shape_Line(playerID, 1, "40 + 1n Guardian", 315, 9, 50, 50)
                # (Line 116) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
                # (Line 117) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID))
                # (Line 119) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 121) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 122) }
                # (Line 123) else if (v.P_LoopMain[playerID] == 1)
            if EUDElseIf()(v.P_LoopMain[playerID] == 1):
                # (Line 124) {
                # (Line 125) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
                # (Line 126) trg.Shape_Line(playerID, 1, "50 + 1n Battlecruiser", 315, 9, 50, 50);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                trg.Shape_Line(playerID, 1, "50 + 1n Battlecruiser", 315, 9, 50, 50)
                # (Line 127) trg.Shape_Line(playerID, 1, "Protoss Dark Archon", 45, 9, 50, 50);
                trg.Shape_Line(playerID, 1, "Protoss Dark Archon", 45, 9, 50, 50)
                # (Line 128) trg.Shape_Line(playerID, 1, "40 + 1n Guardian", 45, 9, 50, 50);
                trg.Shape_Line(playerID, 1, "40 + 1n Guardian", 45, 9, 50, 50)
                # (Line 129) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
                # (Line 130) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID))
                # (Line 132) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 134) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 135) }
                # (Line 136) else if (v.P_LoopMain[playerID] == 2)
            if EUDElseIf()(v.P_LoopMain[playerID] == 2):
                # (Line 137) {
                # (Line 138) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
                # (Line 139) trg.Shape_Line(playerID, 1, "50 + 1n Battlecruiser", 45, 9, 50, 50);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                trg.Shape_Line(playerID, 1, "50 + 1n Battlecruiser", 45, 9, 50, 50)
                # (Line 140) trg.Shape_Line(playerID, 1, "Protoss Dark Archon", 225, 9, 50, 50);
                trg.Shape_Line(playerID, 1, "Protoss Dark Archon", 225, 9, 50, 50)
                # (Line 141) trg.Shape_Line(playerID, 1, "40 + 1n Guardian", 225, 9, 50, 50);
                trg.Shape_Line(playerID, 1, "40 + 1n Guardian", 225, 9, 50, 50)
                # (Line 142) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
                # (Line 143) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID))
                # (Line 145) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 147) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 148) }
                # (Line 149) else if (v.P_LoopMain[playerID] == 3)
            if EUDElseIf()(v.P_LoopMain[playerID] == 3):
                # (Line 150) {
                # (Line 151) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
                # (Line 152) trg.Shape_Line(playerID, 1, "50 + 1n Battlecruiser", 225, 9, 50, 50);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                trg.Shape_Line(playerID, 1, "50 + 1n Battlecruiser", 225, 9, 50, 50)
                # (Line 153) trg.Shape_Line(playerID, 1, "Protoss Dark Archon", 135, 9, 50, 50);
                trg.Shape_Line(playerID, 1, "Protoss Dark Archon", 135, 9, 50, 50)
                # (Line 154) trg.Shape_Line(playerID, 1, "40 + 1n Guardian", 135, 9, 50, 50);
                trg.Shape_Line(playerID, 1, "40 + 1n Guardian", 135, 9, 50, 50)
                # (Line 155) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
                # (Line 156) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID))
                # (Line 158) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 160) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 161) }
                # (Line 162) else if (v.P_LoopMain[playerID] == 4)
            if EUDElseIf()(v.P_LoopMain[playerID] == 4):
                # (Line 163) {
                # (Line 164) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
                # (Line 165) trg.Shape_Line(playerID, 1, " Unit. Hoffnung 25000", 225, 9, 50, 50);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                trg.Shape_Line(playerID, 1, " Unit. Hoffnung 25000", 225, 9, 50, 50)
                # (Line 166) trg.Shape_Line(playerID, 1, " Unit. Hoffnung 25000", 135, 9, 50, 50);
                trg.Shape_Line(playerID, 1, " Unit. Hoffnung 25000", 135, 9, 50, 50)
                # (Line 167) trg.Shape_Line(playerID, 1, " Unit. Hoffnung 25000", 45, 9, 50, 50);
                trg.Shape_Line(playerID, 1, " Unit. Hoffnung 25000", 45, 9, 50, 50)
                # (Line 168) trg.Shape_Line(playerID, 1, " Unit. Hoffnung 25000", 315, 9, 50, 50);
                trg.Shape_Line(playerID, 1, " Unit. Hoffnung 25000", 315, 9, 50, 50)
                # (Line 169) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID);
                # (Line 171) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 173) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 174) }
                # (Line 175) else if (v.P_LoopMain[playerID] == 5)
            if EUDElseIf()(v.P_LoopMain[playerID] == 5):
                # (Line 176) {
                # (Line 177) trg.Shape_Line(playerID, 1, "50 + 1n Battlecruiser", 225, 9, 50, 50);
                trg.Shape_Line(playerID, 1, "50 + 1n Battlecruiser", 225, 9, 50, 50)
                # (Line 178) trg.Shape_Line(playerID, 1, "40 + 1n Guardian", 135, 9, 50, 50);
                trg.Shape_Line(playerID, 1, "40 + 1n Guardian", 135, 9, 50, 50)
                # (Line 179) trg.Shape_Line(playerID, 1, "40 + 1n Guardian", 45, 9, 50, 50);
                trg.Shape_Line(playerID, 1, "40 + 1n Guardian", 45, 9, 50, 50)
                # (Line 180) trg.Shape_Line(playerID, 1, "40 + 1n Guardian", 315, 9, 50, 50);
                trg.Shape_Line(playerID, 1, "40 + 1n Guardian", 315, 9, 50, 50)
                # (Line 181) trg.Shape_Line(playerID, 1, "50 + 1n Tank", 225, 9, 50, 50);
                trg.Shape_Line(playerID, 1, "50 + 1n Tank", 225, 9, 50, 50)
                # (Line 182) trg.Shape_Line(playerID, 1, "50 + 1n Tank", 135, 9, 50, 50);
                trg.Shape_Line(playerID, 1, "50 + 1n Tank", 135, 9, 50, 50)
                # (Line 183) trg.Shape_Line(playerID, 1, "50 + 1n Tank", 45, 9, 50, 50);
                trg.Shape_Line(playerID, 1, "50 + 1n Tank", 45, 9, 50, 50)
                # (Line 184) trg.Shape_Line(playerID, 1, "50 + 1n Tank", 315, 9, 50, 50);
                trg.Shape_Line(playerID, 1, "50 + 1n Tank", 315, 9, 50, 50)
                # (Line 185) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
                # (Line 186) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID))
                # (Line 188) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 190) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 191) }
                # (Line 192) else if (v.P_LoopMain[playerID] == 6)
            if EUDElseIf()(v.P_LoopMain[playerID] == 6):
                # (Line 193) {
                # (Line 194) trg.Shape_NxNSquare(playerID, 1, "50 + 1n Battlecruiser", 3, 75);
                trg.Shape_NxNSquare(playerID, 1, "50 + 1n Battlecruiser", 3, 75)
                # (Line 195) trg.Shape_NxNSquare(playerID, 1, "50 + 1n Tank", 3, 75);
                trg.Shape_NxNSquare(playerID, 1, "50 + 1n Tank", 3, 75)
                # (Line 196) Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, "Anywhere");
                # (Line 197) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                DoActions(Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, "Anywhere"))
                # (Line 199) trg.Main_Wait(320);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                trg.Main_Wait(320)
                # (Line 201) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 202) }
                # (Line 203) else if (v.P_LoopMain[playerID] == 7)
            if EUDElseIf()(v.P_LoopMain[playerID] == 7):
                # (Line 204) {
                # (Line 205) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
                # (Line 207) trg.Main_Wait(2320);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                trg.Main_Wait(2320)
                # (Line 209) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 210) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 211) }
                # (Line 212) }
            EUDEndIf()
            # (Line 213) else if (v.P_CountMain[playerID] == 3)
        if EUDElseIf()(v.P_CountMain[playerID] == 3):
            # (Line 214) {
            # (Line 215) if (v.P_LoopMain[playerID] < 12)
            if EUDIf()(v.P_LoopMain[playerID] >= 12, neg=True):
                # (Line 216) {
                # (Line 217) trg.Table_Sin(playerID, 10 * v.P_LoopMain[playerID], 150 - 5 * v.P_LoopMain[playerID]);
                trg.Table_Sin(playerID, 10 * v.P_LoopMain[playerID], 150 - 5 * v.P_LoopMain[playerID])
                # (Line 218) trg.Table_Cos(playerID, 10 * v.P_LoopMain[playerID], 150 - 5 * v.P_LoopMain[playerID]);
                trg.Table_Cos(playerID, 10 * v.P_LoopMain[playerID], 150 - 5 * v.P_LoopMain[playerID])
                # (Line 220) trg.Shape_Square(playerID, 8, "Rhynadon (Badlands)", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
                trg.Shape_Square(playerID, 8, "Rhynadon (Badlands)", v.P_AngleCos[playerID], v.P_AngleSin[playerID])
                # (Line 221) KillUnitAt(All, "Rhynadon (Badlands)", "Anywhere", playerID);
                # (Line 223) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "Rhynadon (Badlands)", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 225) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 226) }
                # (Line 227) else if (v.P_LoopMain[playerID] == 12)
            if EUDElseIf()(v.P_LoopMain[playerID] == 12):
                # (Line 228) {
                # (Line 229) trg.Shape_NxNSquare(playerID, 1, "40 + 1n Wraith", 5, 75);
                trg.Shape_NxNSquare(playerID, 1, "40 + 1n Wraith", 5, 75)
                # (Line 230) trg.Shape_NxNSquare(playerID, 1, "Protoss Dark Archon", 5, 75);
                trg.Shape_NxNSquare(playerID, 1, "Protoss Dark Archon", 5, 75)
                # (Line 231) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 232) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                # (Line 234) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 236) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 237) }
                # (Line 238) else if (v.P_LoopMain[playerID] == 13)
            if EUDElseIf()(v.P_LoopMain[playerID] == 13):
                # (Line 239) {
                # (Line 240) trg.Shape_NxNSquare(playerID, 1, "40 + 1n Wraith", 7, 75);
                trg.Shape_NxNSquare(playerID, 1, "40 + 1n Wraith", 7, 75)
                # (Line 241) trg.Shape_NxNSquare(playerID, 1, "Protoss Dark Archon", 7, 75);
                trg.Shape_NxNSquare(playerID, 1, "Protoss Dark Archon", 7, 75)
                # (Line 242) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 243) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                # (Line 245) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 247) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 248) }
                # (Line 249) else if (v.P_LoopMain[playerID] == 14)
            if EUDElseIf()(v.P_LoopMain[playerID] == 14):
                # (Line 250) {
                # (Line 251) trg.Shape_NxNSquare(playerID, 1, "40 + 1n Guardian", 7, 75);
                trg.Shape_NxNSquare(playerID, 1, "40 + 1n Guardian", 7, 75)
                # (Line 252) trg.Shape_NxNSquare(playerID, 1, "50 + 1n Tank", 7, 75);
                trg.Shape_NxNSquare(playerID, 1, "50 + 1n Tank", 7, 75)
                # (Line 253) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
                # (Line 254) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID))
                # (Line 256) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 258) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 259) }
                # (Line 260) else if (v.P_LoopMain[playerID] == 15)
            if EUDElseIf()(v.P_LoopMain[playerID] == 15):
                # (Line 261) {
                # (Line 262) trg.Shape_NxNSquare(playerID, 1, "50 + 1n Battlecruiser", 5, 100);
                trg.Shape_NxNSquare(playerID, 1, "50 + 1n Battlecruiser", 5, 100)
                # (Line 263) trg.Shape_NxNSquare(playerID, 1, "50 + 1n Tank", 5, 100);
                trg.Shape_NxNSquare(playerID, 1, "50 + 1n Tank", 5, 100)
                # (Line 264) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                # (Line 265) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                # (Line 266) Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 268) trg.Main_Wait(2400);
                DoActions(Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(2400)
                # (Line 270) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 271) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 272) }
                # (Line 274) }
            EUDEndIf()
            # (Line 275) else if (v.P_CountMain[playerID] == 4)
        if EUDElseIf()(v.P_CountMain[playerID] == 4):
            # (Line 276) {
            # (Line 277) SetSwitch("Recall - Yuuna", Clear);
            # (Line 278) KillUnitAt(All, "60 + 1n Siege", "Anywhere", playerID);
            DoActions(SetSwitch("Recall - Yuuna", Clear))
            # (Line 279) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
            DoActions(KillUnitAt(All, "60 + 1n Siege", "Anywhere", playerID))
            # (Line 280) trg.SkillEnd();
            DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
            trg.SkillEnd()
            # (Line 281) }
            # (Line 282) }
        EUDEndIf()
        # (Line 284) if (v.P_WaitSub1[playerID] == 0)
    EUDEndIf()
    if EUDIf()(v.P_WaitSub1[playerID] == 0):
        # (Line 285) {
        # (Line 286) if (v.P_CountMain[playerID] == 1)
        if EUDIf()(v.P_CountMain[playerID] == 1):
            # (Line 287) {
            # (Line 288) if (v.P_LoopSub1[playerID] < 4)
            if EUDIf()(v.P_LoopSub1[playerID] >= 4, neg=True):
                # (Line 289) {
                # (Line 290) var x = 50 * v.P_LoopSub1[playerID];
                x = EUDVariable()
                x << (50 * v.P_LoopSub1[playerID])
                # (Line 291) var y = 200 - 50 * v.P_LoopSub1[playerID];
                y = EUDVariable()
                y << (200 - 50 * v.P_LoopSub1[playerID])
                # (Line 293) RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 294) trg.Shape_Dot(playerID, 1, "40 + 1n Wraith", x, y);
                DoActions(RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                trg.Shape_Dot(playerID, 1, "40 + 1n Wraith", x, y)
                # (Line 295) trg.Shape_Dot(playerID, 1, "50 + 1n Tank", x, y);
                trg.Shape_Dot(playerID, 1, "50 + 1n Tank", x, y)
                # (Line 296) trg.Shape_Dot(playerID, 1, "40 + 1n Wraith", -x, -y);
                trg.Shape_Dot(playerID, 1, "40 + 1n Wraith", -x, -y)
                # (Line 297) trg.Shape_Dot(playerID, 1, "50 + 1n Tank", -x, -y);
                trg.Shape_Dot(playerID, 1, "50 + 1n Tank", -x, -y)
                # (Line 298) trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", -y, x);
                trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", -y, x)
                # (Line 299) trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", y, -x);
                trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", y, -x)
                # (Line 300) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                # (Line 301) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                # (Line 302) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                # (Line 303) Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 305) trg.Sub1_Wait(80);
                DoActions(Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Sub1_Wait(80)
                # (Line 307) v.P_LoopSub1[playerID] += 1;
                _ARRW(v.P_LoopSub1, playerID).__iadd__(1)
                # (Line 308) }
                # (Line 309) else if (v.P_LoopSub1[playerID] < 7)
            if EUDElseIf()(v.P_LoopSub1[playerID] >= 7, neg=True):
                # (Line 310) {
                # (Line 311) var x = 200 - 50 * (v.P_LoopSub1[playerID] - 4);
                x = EUDVariable()
                x << (200 - 50 * (v.P_LoopSub1[playerID] - 4))
                # (Line 312) var y = -50 * (v.P_LoopSub1[playerID] - 4);
                y = EUDVariable()
                y << (-50 * (v.P_LoopSub1[playerID] - 4))
                # (Line 314) RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 315) trg.Shape_Dot(playerID, 1, "40 + 1n Wraith", x, y);
                DoActions(RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                trg.Shape_Dot(playerID, 1, "40 + 1n Wraith", x, y)
                # (Line 316) trg.Shape_Dot(playerID, 1, "50 + 1n Tank", x, y);
                trg.Shape_Dot(playerID, 1, "50 + 1n Tank", x, y)
                # (Line 317) trg.Shape_Dot(playerID, 1, "40 + 1n Wraith", -x, -y);
                trg.Shape_Dot(playerID, 1, "40 + 1n Wraith", -x, -y)
                # (Line 318) trg.Shape_Dot(playerID, 1, "50 + 1n Tank", -x, -y);
                trg.Shape_Dot(playerID, 1, "50 + 1n Tank", -x, -y)
                # (Line 319) trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", -y, x);
                trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", -y, x)
                # (Line 320) trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", y, -x);
                trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", y, -x)
                # (Line 321) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                # (Line 322) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                # (Line 323) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                # (Line 324) Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 326) trg.Sub1_Wait(80);
                DoActions(Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Sub1_Wait(80)
                # (Line 328) v.P_LoopSub1[playerID] += 1;
                _ARRW(v.P_LoopSub1, playerID).__iadd__(1)
                # (Line 329) }
                # (Line 330) else if (v.P_LoopSub1[playerID] == 7)
            if EUDElseIf()(v.P_LoopSub1[playerID] == 7):
                # (Line 331) {
                # (Line 332) var x = 200 - 50 * (v.P_LoopSub1[playerID] - 4);
                x = EUDVariable()
                x << (200 - 50 * (v.P_LoopSub1[playerID] - 4))
                # (Line 333) var y = -50 * (v.P_LoopSub1[playerID] - 4);
                y = EUDVariable()
                y << (-50 * (v.P_LoopSub1[playerID] - 4))
                # (Line 335) RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 336) trg.Shape_Dot(playerID, 1, "40 + 1n Wraith", x, y);
                DoActions(RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                trg.Shape_Dot(playerID, 1, "40 + 1n Wraith", x, y)
                # (Line 337) trg.Shape_Dot(playerID, 1, "50 + 1n Tank", x, y);
                trg.Shape_Dot(playerID, 1, "50 + 1n Tank", x, y)
                # (Line 338) trg.Shape_Dot(playerID, 1, "40 + 1n Wraith", -x, -y);
                trg.Shape_Dot(playerID, 1, "40 + 1n Wraith", -x, -y)
                # (Line 339) trg.Shape_Dot(playerID, 1, "50 + 1n Tank", -x, -y);
                trg.Shape_Dot(playerID, 1, "50 + 1n Tank", -x, -y)
                # (Line 340) trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", -y, x);
                trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", -y, x)
                # (Line 341) trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", y, -x);
                trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", y, -x)
                # (Line 342) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                # (Line 343) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                # (Line 344) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                # (Line 345) Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 347) trg.Sub1_Wait(80);
                DoActions(Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Sub1_Wait(80)
                # (Line 349) v.P_LoopSub1[playerID] = 0;
                _ARRW(v.P_LoopSub1, playerID) << (0)
                # (Line 350) }
                # (Line 351) }
            EUDEndIf()
            # (Line 352) }
        EUDEndIf()
        # (Line 353) }
    EUDEndIf()
    # (Line 356) function FlowerShape(playerID : TrgPlayer, count, Unit : TrgUnit, i, distance, interval)

# (Line 358) {
@EUDTypedFunc([TrgPlayer, None, TrgUnit, None, None, None])
def FlowerShape(playerID, count, Unit, i, distance, interval):
    # (Line 359) trg.Table_Sin(playerID, (72 * i + 90), distance);
    trg.Table_Sin(playerID, (72 * i + 90), distance)
    # (Line 360) trg.Table_Cos(playerID, (72 * i + 90), distance);
    trg.Table_Cos(playerID, (72 * i + 90), distance)
    # (Line 362) var x_o = v.P_AngleCos[playerID];
    x_o = EUDVariable()
    x_o << (v.P_AngleCos[playerID])
    # (Line 363) var y_o = v.P_AngleSin[playerID];
    y_o = EUDVariable()
    y_o << (v.P_AngleSin[playerID])
    # (Line 365) trg.Table_Sin(playerID, ((72 * i + 90) + 30), interval);
    trg.Table_Sin(playerID, ((72 * i + 90) + 30), interval)
    # (Line 366) trg.Table_Cos(playerID, ((72 * i + 90) + 30), interval);
    trg.Table_Cos(playerID, ((72 * i + 90) + 30), interval)
    # (Line 368) var x_i1 = v.P_AngleCos[playerID];
    x_i1 = EUDVariable()
    x_i1 << (v.P_AngleCos[playerID])
    # (Line 369) var y_i1 = v.P_AngleSin[playerID];
    y_i1 = EUDVariable()
    y_i1 << (v.P_AngleSin[playerID])
    # (Line 371) trg.Table_Sin(playerID, ((72 * i + 90) - 30), interval);
    trg.Table_Sin(playerID, ((72 * i + 90) - 30), interval)
    # (Line 372) trg.Table_Cos(playerID, ((72 * i + 90) - 30), interval);
    trg.Table_Cos(playerID, ((72 * i + 90) - 30), interval)
    # (Line 374) var x_i2 = v.P_AngleCos[playerID];
    x_i2 = EUDVariable()
    x_i2 << (v.P_AngleCos[playerID])
    # (Line 375) var y_i2 = v.P_AngleSin[playerID];
    y_i2 = EUDVariable()
    y_i2 << (v.P_AngleSin[playerID])
    # (Line 377) var x = x_o;
    x = EUDVariable()
    x << (x_o)
    # (Line 378) var y = y_o;
    y = EUDVariable()
    y << (y_o)
    # (Line 380) trg.Shape_Dot(playerID, 1, Unit, x, y);
    trg.Shape_Dot(playerID, 1, Unit, x, y)
    # (Line 382) x = x + x_i1;
    x << (x + x_i1)
    # (Line 383) y = y + y_i1;
    y << (y + y_i1)
    # (Line 385) trg.Shape_Dot(playerID, 1, Unit, x, y);
    trg.Shape_Dot(playerID, 1, Unit, x, y)
    # (Line 387) x = x + x_i1;
    x << (x + x_i1)
    # (Line 388) y = y + y_i1;
    y << (y + y_i1)
    # (Line 390) trg.Shape_Dot(playerID, 1, Unit, x, y);
    trg.Shape_Dot(playerID, 1, Unit, x, y)
    # (Line 392) x = x + x_i2;
    x << (x + x_i2)
    # (Line 393) y = y + y_i2;
    y << (y + y_i2)
    # (Line 395) trg.Shape_Dot(playerID, 1, Unit, x, y);
    trg.Shape_Dot(playerID, 1, Unit, x, y)
    # (Line 397) x = x + x_i2;
    x << (x + x_i2)
    # (Line 398) y = y + y_i2;
    y << (y + y_i2)
    # (Line 400) trg.Shape_Dot(playerID, 1, Unit, x, y);
    trg.Shape_Dot(playerID, 1, Unit, x, y)
    # (Line 402) x = x_o + x_i2;
    x << (x_o + x_i2)
    # (Line 403) y = y_o + y_i2;
    y << (y_o + y_i2)
    # (Line 405) trg.Shape_Dot(playerID, 1, Unit, x, y);
    trg.Shape_Dot(playerID, 1, Unit, x, y)
    # (Line 407) x = x + x_i2;
    x << (x + x_i2)
    # (Line 408) y = y + y_i2;
    y << (y + y_i2)
    # (Line 410) trg.Shape_Dot(playerID, 1, Unit, x, y);
    trg.Shape_Dot(playerID, 1, Unit, x, y)
    # (Line 412) x = x + x_i1;
    x << (x + x_i1)
    # (Line 413) y = y + y_i1;
    y << (y + y_i1)
    # (Line 415) trg.Shape_Dot(playerID, 1, Unit, x, y);
    trg.Shape_Dot(playerID, 1, Unit, x, y)
    # (Line 416) }
