## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import PluginVariables as msqcvar;
import PluginVariables as msqcvar
# (Line 2) import variable as v;
import variable as v
# (Line 3) import func.trig as trg;
from func import trig as trg
# (Line 4) import func.sound as s;
from func import sound as s
# (Line 6) function main(playerID)
# (Line 7) {
@EUDFunc
def f_main(playerID):
    # (Line 8) trg.Debuff_BanReturn();
    trg.Debuff_BanReturn()
    # (Line 9) trg.Debuff_Stop();
    trg.Debuff_Stop()
    # (Line 11) if (v.P_WaitMain[playerID] == 0)
    if EUDIf()(v.P_WaitMain[playerID] == 0):
        # (Line 12) {
        # (Line 13) if (v.P_CountMain[playerID] == 0)
        if EUDIf()(v.P_CountMain[playerID] == 0):
            # (Line 14) {
            # (Line 15) if (v.P_LoopMain[playerID] < 4)
            if EUDIf()(v.P_LoopMain[playerID] >= 4, neg=True):
                # (Line 16) {
                # (Line 18) trg.Shape_NxNSquare(playerID, 1, "40 + 1n Wraith", 2 * v.P_LoopMain[playerID] + 1, 50);
                trg.Shape_NxNSquare(playerID, 1, "40 + 1n Wraith", 2 * v.P_LoopMain[playerID] + 1, 50)
                # (Line 19) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 21) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 23) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 24) }
                # (Line 25) else if (v.P_LoopMain[playerID] == 4)
            if EUDElseIf()(v.P_LoopMain[playerID] == 4):
                # (Line 26) {
                # (Line 27) trg.Shape_NxNSquare(playerID, 1, "40 + 1n Guardian", 6, 75);
                trg.Shape_NxNSquare(playerID, 1, "40 + 1n Guardian", 6, 75)
                # (Line 28) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
                # (Line 29) trg.Shape_NxNSquare(playerID, 1, "40 + 1n Goliath", 3, 50);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID))
                trg.Shape_NxNSquare(playerID, 1, "40 + 1n Goliath", 3, 50)
                # (Line 30) Order("40 + 1n Goliath", playerID, "Anywhere", Attack, "Anywhere");
                # (Line 32) trg.Main_Wait(80);
                DoActions(Order("40 + 1n Goliath", playerID, "Anywhere", Attack, "Anywhere"))
                trg.Main_Wait(80)
                # (Line 34) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 35) }
                # (Line 36) else if (v.P_LoopMain[playerID] == 5)
            if EUDElseIf()(v.P_LoopMain[playerID] == 5):
                # (Line 37) {
                # (Line 38) KillUnitAt(All, "40 + 1n Goliath", "Anywhere", playerID);
                # (Line 39) trg.Shape_Square(playerID, 1, "60 + 1n Siege", 114, 114);
                DoActions(KillUnitAt(All, "40 + 1n Goliath", "Anywhere", playerID))
                trg.Shape_Square(playerID, 1, "60 + 1n Siege", 114, 114)
                # (Line 40) trg.Shape_Square(playerID, 1, "60 + 1n Siege", 114, 190);
                trg.Shape_Square(playerID, 1, "60 + 1n Siege", 114, 190)
                # (Line 41) trg.Shape_Square(playerID, 1, "60 + 1n Siege", 190, 114);
                trg.Shape_Square(playerID, 1, "60 + 1n Siege", 190, 114)
                # (Line 42) trg.Shape_Square(playerID, 1, "60 + 1n Siege", 190, 190);
                trg.Shape_Square(playerID, 1, "60 + 1n Siege", 190, 190)
                # (Line 43) trg.Shape_Square(playerID, 1, "60 + 1n Siege", 38, 114);
                trg.Shape_Square(playerID, 1, "60 + 1n Siege", 38, 114)
                # (Line 44) trg.Shape_Square(playerID, 1, "60 + 1n Siege", 38, 175);
                trg.Shape_Square(playerID, 1, "60 + 1n Siege", 38, 175)
                # (Line 45) trg.Shape_Square(playerID, 1, "60 + 1n Siege", 114, 38);
                trg.Shape_Square(playerID, 1, "60 + 1n Siege", 114, 38)
                # (Line 46) trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 175, 38);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 175, 38)
                # (Line 47) trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 114, 114);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 114, 114)
                # (Line 48) trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 114, 190);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 114, 190)
                # (Line 49) trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 190, 114);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 190, 114)
                # (Line 50) trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 190, 190);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 190, 190)
                # (Line 51) trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 38, 114);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 38, 114)
                # (Line 52) trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 38, 175);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 38, 175)
                # (Line 53) trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 114, 38);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 114, 38)
                # (Line 54) trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 175, 38);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 175, 38)
                # (Line 55) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 56) Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 57) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
                DoActions(Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 58) trg.Main_Wait(720);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                trg.Main_Wait(720)
                # (Line 60) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 61) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 62) }
                # (Line 64) }
            EUDEndIf()
            # (Line 65) else if (v.P_CountMain[playerID] == 1)
        if EUDElseIf()(v.P_CountMain[playerID] == 1):
            # (Line 66) {
            # (Line 67) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 68) {
                # (Line 69) trg.Shape_NxNSquare(playerID, 1, "Kakaru (Twilight)", 3, 50);
                trg.Shape_NxNSquare(playerID, 1, "Kakaru (Twilight)", 3, 50)
                # (Line 70) trg.Shape_NxNSquare(playerID, 1, "40 + 1n Goliath", 3, 50);
                trg.Shape_NxNSquare(playerID, 1, "40 + 1n Goliath", 3, 50)
                # (Line 71) KillUnitAt(All, "40 + 1n Goliath", "Anywhere", playerID);
                # (Line 72) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Goliath", "Anywhere", playerID))
                # (Line 74) trg.Main_Wait(320);
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID))
                trg.Main_Wait(320)
                # (Line 76) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 79) }
                # (Line 80) else if (v.P_LoopMain[playerID] == 1)
            if EUDElseIf()(v.P_LoopMain[playerID] == 1):
                # (Line 81) {
                # (Line 82) trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", 100, 0);
                trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", 100, 0)
                # (Line 83) trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", 100, 50);
                trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", 100, 50)
                # (Line 84) trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", 100, 100);
                trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", 100, 100)
                # (Line 85) trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", 100, 150);
                trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", 100, 150)
                # (Line 86) trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", 100, 200);
                trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", 100, 200)
                # (Line 87) trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", 150, 0);
                trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", 150, 0)
                # (Line 88) trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", 150, 50);
                trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", 150, 50)
                # (Line 89) trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", 150, 100);
                trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", 150, 100)
                # (Line 90) trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", 150, 150);
                trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", 150, 150)
                # (Line 91) trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", 150, 200);
                trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", 150, 200)
                # (Line 92) trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", 200, 0);
                trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", 200, 0)
                # (Line 93) trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", 200, 50);
                trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", 200, 50)
                # (Line 94) trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", 200, 100);
                trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", 200, 100)
                # (Line 95) trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", 200, 150);
                trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", 200, 150)
                # (Line 96) trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", 200, 200);
                trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", 200, 200)
                # (Line 97) trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", 50, 100);
                trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", 50, 100)
                # (Line 98) trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", 50, 150);
                trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", 50, 150)
                # (Line 99) trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", 50, 200);
                trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", 50, 200)
                # (Line 100) trg.Shape_Edge(playerID, 1, "40 + 1n Goliath", 45, 3, 125);
                trg.Shape_Edge(playerID, 1, "40 + 1n Goliath", 45, 3, 125)
                # (Line 101) trg.Shape_Edge(playerID, 1, "40 + 1n Goliath", 45, 5, 175);
                trg.Shape_Edge(playerID, 1, "40 + 1n Goliath", 45, 5, 175)
                # (Line 102) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 103) MoveUnit(All, "40 + 1n Goliath", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 104) Order("40 + 1n Goliath", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveUnit(All, "40 + 1n Goliath", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                # (Line 105) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);
                DoActions(Order("40 + 1n Goliath", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 107) trg.Main_Wait(320);
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID))
                trg.Main_Wait(320)
                # (Line 109) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 110) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 111) }
                # (Line 114) }
            EUDEndIf()
            # (Line 115) else if (v.P_CountMain[playerID] == 2)
        if EUDElseIf()(v.P_CountMain[playerID] == 2):
            # (Line 116) {
            # (Line 117) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 118) {
                # (Line 119) KillUnitAt(All, "40 + 1n Goliath", "Anywhere", playerID);
                # (Line 121) s.CharacterVoice(4);
                DoActions(KillUnitAt(All, "40 + 1n Goliath", "Anywhere", playerID))
                s.CharacterVoice(4)
                # (Line 122) }
                # (Line 124) if (v.P_LoopMain[playerID] < 8)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] >= 8, neg=True):
                # (Line 125) {
                # (Line 126) RemoveUnitAt(All, "60 + 1n Danimoth", "Anywhere", playerID);
                # (Line 128) trg.MoveLoc(v.P_UnitID[playerID], playerID, 200 - 50 * (v.P_LoopMain[playerID] % 4), 50 * (v.P_LoopMain[playerID] % 4));
                DoActions(RemoveUnitAt(All, "60 + 1n Danimoth", "Anywhere", playerID))
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 200 - 50 * (v.P_LoopMain[playerID] % 4), 50 * (v.P_LoopMain[playerID] % 4))
                # (Line 129) trg.SkillUnit(playerID, 1, "50 + 1n Tank");
                trg.SkillUnit(playerID, 1, "50 + 1n Tank")
                # (Line 130) trg.SkillUnit(playerID, 1, "60 + 1n Danimoth");
                trg.SkillUnit(playerID, 1, "60 + 1n Danimoth")
                # (Line 131) trg.MoveLoc(v.P_UnitID[playerID], playerID, -200 + 50 * (v.P_LoopMain[playerID] % 4), -50 * (v.P_LoopMain[playerID] % 4));
                trg.MoveLoc(v.P_UnitID[playerID], playerID, -200 + 50 * (v.P_LoopMain[playerID] % 4), -50 * (v.P_LoopMain[playerID] % 4))
                # (Line 132) trg.SkillUnit(playerID, 1, "50 + 1n Tank");
                trg.SkillUnit(playerID, 1, "50 + 1n Tank")
                # (Line 133) trg.SkillUnit(playerID, 1, "60 + 1n Danimoth");
                trg.SkillUnit(playerID, 1, "60 + 1n Danimoth")
                # (Line 134) trg.MoveLoc(v.P_UnitID[playerID], playerID, 50 * (v.P_LoopMain[playerID] % 4), -200 + 50 * (v.P_LoopMain[playerID] % 4));
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 50 * (v.P_LoopMain[playerID] % 4), -200 + 50 * (v.P_LoopMain[playerID] % 4))
                # (Line 135) trg.SkillUnit(playerID, 1, "Protoss Dark Archon");
                trg.SkillUnit(playerID, 1, "Protoss Dark Archon")
                # (Line 136) trg.SkillUnit(playerID, 1, "60 + 1n Danimoth");
                trg.SkillUnit(playerID, 1, "60 + 1n Danimoth")
                # (Line 137) trg.MoveLoc(v.P_UnitID[playerID], playerID, -50 * (v.P_LoopMain[playerID] % 4), 200 - 50 * (v.P_LoopMain[playerID] % 4));
                trg.MoveLoc(v.P_UnitID[playerID], playerID, -50 * (v.P_LoopMain[playerID] % 4), 200 - 50 * (v.P_LoopMain[playerID] % 4))
                # (Line 138) trg.SkillUnit(playerID, 1, "Protoss Dark Archon");
                trg.SkillUnit(playerID, 1, "Protoss Dark Archon")
                # (Line 139) trg.SkillUnit(playerID, 1, "60 + 1n Danimoth");
                trg.SkillUnit(playerID, 1, "60 + 1n Danimoth")
                # (Line 141) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                # (Line 142) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                # (Line 143) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                # (Line 144) Order("60 + 1n Danimoth", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 146) trg.Main_Wait(160);
                DoActions(Order("60 + 1n Danimoth", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(160)
                # (Line 148) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 149) }
                # (Line 150) else if (v.P_LoopMain[playerID] == 8)
            if EUDElseIf()(v.P_LoopMain[playerID] == 8):
                # (Line 151) {
                # (Line 152) RemoveUnitAt(All, "60 + 1n Danimoth", "Anywhere", playerID);
                # (Line 154) trg.Main_Wait(80);
                DoActions(RemoveUnitAt(All, "60 + 1n Danimoth", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 156) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 157) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 158) }
                # (Line 159) }
            EUDEndIf()
            # (Line 160) else if (v.P_CountMain[playerID] == 3)
        if EUDElseIf()(v.P_CountMain[playerID] == 3):
            # (Line 161) {
            # (Line 162) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 163) {
                # (Line 164) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 166) trg.Shape_Square(playerID, 1, "40 + 1n Zealot", 100, 0);
                DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                trg.Shape_Square(playerID, 1, "40 + 1n Zealot", 100, 0)
                # (Line 167) trg.Shape_Square(playerID, 1, "40 + 1n Zealot", 100, 50);
                trg.Shape_Square(playerID, 1, "40 + 1n Zealot", 100, 50)
                # (Line 168) trg.Shape_Square(playerID, 1, "40 + 1n Zealot", 100, -50);
                trg.Shape_Square(playerID, 1, "40 + 1n Zealot", 100, -50)
                # (Line 169) trg.Shape_Square(playerID, 1, "40 + 1n Zealot", 150, 0);
                trg.Shape_Square(playerID, 1, "40 + 1n Zealot", 150, 0)
                # (Line 170) trg.Shape_Square(playerID, 1, "40 + 1n Zealot", 150, 50);
                trg.Shape_Square(playerID, 1, "40 + 1n Zealot", 150, 50)
                # (Line 171) trg.Shape_Square(playerID, 1, "40 + 1n Zealot", 150, -50);
                trg.Shape_Square(playerID, 1, "40 + 1n Zealot", 150, -50)
                # (Line 172) trg.Shape_Square(playerID, 1, "40 + 1n Zealot", 200, 0);
                trg.Shape_Square(playerID, 1, "40 + 1n Zealot", 200, 0)
                # (Line 173) trg.Shape_Square(playerID, 1, "40 + 1n Zealot", 200, 50);
                trg.Shape_Square(playerID, 1, "40 + 1n Zealot", 200, 50)
                # (Line 174) trg.Shape_Square(playerID, 1, "40 + 1n Zealot", 200, -50);
                trg.Shape_Square(playerID, 1, "40 + 1n Zealot", 200, -50)
                # (Line 175) trg.Shape_Square(playerID, 1, "40 + 1n Wraith", 100, 0);
                trg.Shape_Square(playerID, 1, "40 + 1n Wraith", 100, 0)
                # (Line 176) trg.Shape_Square(playerID, 1, "40 + 1n Wraith", 100, 50);
                trg.Shape_Square(playerID, 1, "40 + 1n Wraith", 100, 50)
                # (Line 177) trg.Shape_Square(playerID, 1, "40 + 1n Wraith", 100, -50);
                trg.Shape_Square(playerID, 1, "40 + 1n Wraith", 100, -50)
                # (Line 178) trg.Shape_Square(playerID, 1, "40 + 1n Wraith", 150, 0);
                trg.Shape_Square(playerID, 1, "40 + 1n Wraith", 150, 0)
                # (Line 179) trg.Shape_Square(playerID, 1, "40 + 1n Wraith", 150, 50);
                trg.Shape_Square(playerID, 1, "40 + 1n Wraith", 150, 50)
                # (Line 180) trg.Shape_Square(playerID, 1, "40 + 1n Wraith", 150, -50);
                trg.Shape_Square(playerID, 1, "40 + 1n Wraith", 150, -50)
                # (Line 181) trg.Shape_Square(playerID, 1, "40 + 1n Wraith", 200, 0);
                trg.Shape_Square(playerID, 1, "40 + 1n Wraith", 200, 0)
                # (Line 182) trg.Shape_Square(playerID, 1, "40 + 1n Wraith", 200, 50);
                trg.Shape_Square(playerID, 1, "40 + 1n Wraith", 200, 50)
                # (Line 183) trg.Shape_Square(playerID, 1, "40 + 1n Wraith", 200, -50);
                trg.Shape_Square(playerID, 1, "40 + 1n Wraith", 200, -50)
                # (Line 184) KillUnitAt(All, "40 + 1n Zealot", "Anywhere", playerID);
                # (Line 185) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "40 + 1n Zealot", "Anywhere", playerID))
                # (Line 186) Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 188) trg.Main_Wait(240);
                DoActions(Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(240)
                # (Line 190) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 191) }
                # (Line 192) else if (v.P_LoopMain[playerID] == 1)
            if EUDElseIf()(v.P_LoopMain[playerID] == 1):
                # (Line 193) {
                # (Line 194) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 196) trg.Shape_Square(playerID, 1, "40 + 1n Zealot", 100, 100);
                DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                trg.Shape_Square(playerID, 1, "40 + 1n Zealot", 100, 100)
                # (Line 197) trg.Shape_Square(playerID, 1, "40 + 1n Zealot", 100, 150);
                trg.Shape_Square(playerID, 1, "40 + 1n Zealot", 100, 150)
                # (Line 198) trg.Shape_Square(playerID, 1, "40 + 1n Zealot", 100, 200);
                trg.Shape_Square(playerID, 1, "40 + 1n Zealot", 100, 200)
                # (Line 199) trg.Shape_Square(playerID, 1, "40 + 1n Zealot", 150, 100);
                trg.Shape_Square(playerID, 1, "40 + 1n Zealot", 150, 100)
                # (Line 200) trg.Shape_Square(playerID, 1, "40 + 1n Zealot", 150, 150);
                trg.Shape_Square(playerID, 1, "40 + 1n Zealot", 150, 150)
                # (Line 201) trg.Shape_Square(playerID, 1, "40 + 1n Zealot", 150, 200);
                trg.Shape_Square(playerID, 1, "40 + 1n Zealot", 150, 200)
                # (Line 202) trg.Shape_Square(playerID, 1, "40 + 1n Zealot", 200, 100);
                trg.Shape_Square(playerID, 1, "40 + 1n Zealot", 200, 100)
                # (Line 203) trg.Shape_Square(playerID, 1, "40 + 1n Zealot", 200, 150);
                trg.Shape_Square(playerID, 1, "40 + 1n Zealot", 200, 150)
                # (Line 204) trg.Shape_Square(playerID, 1, "40 + 1n Zealot", 200, 200);
                trg.Shape_Square(playerID, 1, "40 + 1n Zealot", 200, 200)
                # (Line 205) trg.Shape_Square(playerID, 1, "40 + 1n Wraith", 100, 100);
                trg.Shape_Square(playerID, 1, "40 + 1n Wraith", 100, 100)
                # (Line 206) trg.Shape_Square(playerID, 1, "40 + 1n Wraith", 100, 150);
                trg.Shape_Square(playerID, 1, "40 + 1n Wraith", 100, 150)
                # (Line 207) trg.Shape_Square(playerID, 1, "40 + 1n Wraith", 100, 200);
                trg.Shape_Square(playerID, 1, "40 + 1n Wraith", 100, 200)
                # (Line 208) trg.Shape_Square(playerID, 1, "40 + 1n Wraith", 150, 100);
                trg.Shape_Square(playerID, 1, "40 + 1n Wraith", 150, 100)
                # (Line 209) trg.Shape_Square(playerID, 1, "40 + 1n Wraith", 150, 150);
                trg.Shape_Square(playerID, 1, "40 + 1n Wraith", 150, 150)
                # (Line 210) trg.Shape_Square(playerID, 1, "40 + 1n Wraith", 150, 200);
                trg.Shape_Square(playerID, 1, "40 + 1n Wraith", 150, 200)
                # (Line 211) trg.Shape_Square(playerID, 1, "40 + 1n Wraith", 200, 100);
                trg.Shape_Square(playerID, 1, "40 + 1n Wraith", 200, 100)
                # (Line 212) trg.Shape_Square(playerID, 1, "40 + 1n Wraith", 200, 150);
                trg.Shape_Square(playerID, 1, "40 + 1n Wraith", 200, 150)
                # (Line 213) trg.Shape_Square(playerID, 1, "40 + 1n Wraith", 200, 200);
                trg.Shape_Square(playerID, 1, "40 + 1n Wraith", 200, 200)
                # (Line 214) KillUnitAt(All, "40 + 1n Zealot", "Anywhere", playerID);
                # (Line 215) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "40 + 1n Zealot", "Anywhere", playerID))
                # (Line 216) Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 218) trg.Main_Wait(240);
                DoActions(Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(240)
                # (Line 220) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 221) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 222) }
                # (Line 224) }
            EUDEndIf()
            # (Line 225) else if (v.P_CountMain[playerID] == 4)
        if EUDElseIf()(v.P_CountMain[playerID] == 4):
            # (Line 226) {
            # (Line 228) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
            # (Line 229) KillUnitAt(All, "60 + 1n Siege", "Anywhere", playerID);
            DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
            # (Line 230) trg.SkillEnd();
            DoActions(KillUnitAt(All, "60 + 1n Siege", "Anywhere", playerID))
            trg.SkillEnd()
            # (Line 233) }
            # (Line 236) }
        EUDEndIf()
        # (Line 237) }
    EUDEndIf()
