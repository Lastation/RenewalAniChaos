import PluginVariables as msqcvar;
import variable as v;
import func.trig as trg;

import func.sound as s;

function main(playerID)
{
   MoveLocation("25.Milim_Bozo", v.P_UnitID[playerID], playerID, "Anywhere");

   trg.Debuff_BanReturn();
   trg.Debuff_Stop();

   trg.Buff_ShieldFix(1);

   if (v.P_WaitMain[playerID] == 0)
   {
      if (v.P_CountMain[playerID] == 0)
      {
         if (v.P_LoopMain[playerID] == 0)
         {
            SetSwitch("Recall - MilimUlt", Set);
            SetDeaths(playerID, SetTo, 1, " `ShieldRecharge");

            trg.Main_Wait(720);

            v.P_LoopMain[playerID] += 1;
         }
         else if (v.P_LoopMain[playerID] < 5)
         {
            trg.Shape_NxNSquare(playerID, 1, "Protoss Observer", 11, 75);
            trg.Shape_NxNSquare(playerID, 1, "60 + 1n Archon", 11, 75);

            KillUnitAt(All, "Protoss Observer", "Anywhere", playerID);
            KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);

            trg.Main_Wait(160);

            v.P_LoopMain[playerID] += 1;
         }
         else if (v.P_LoopMain[playerID] == 5)
         {
            trg.Shape_NxNSquare(playerID, 1, " Unit. Hoffnung 25000", 11, 75);
            trg.Shape_NxNSquare(playerID, 1, "40 + 1n Guardian", 11, 75);

            KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID);
            KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);

            trg.Main_Wait(480);

            v.P_LoopMain[playerID] += 1;
         }
         else if (v.P_LoopMain[playerID] == 6)
         {
            trg.Main_Wait(80);

            v.P_CountMain[playerID] += 1;
            v.P_LoopMain[playerID] = 0;
         }
      }
      else if (v.P_CountMain[playerID] == 1)
      {
         if (v.P_LoopMain[playerID] == 0)
         {         
            trg.Main_Wait(720);

            v.P_LoopMain[playerID] += 1;
         }
         else if (v.P_LoopMain[playerID] == 1)
         {         
            trg.Main_Wait(80);

            v.P_CountMain[playerID] += 1;
            v.P_LoopMain[playerID] = 0;
         }
      }
      else if (v.P_CountMain[playerID] == 2)
      {
         if (v.P_LoopMain[playerID] == 0)
         {         
            trg.Main_Wait(2160);

            v.P_LoopMain[playerID] += 1;
         }
         else if (v.P_LoopMain[playerID] == 1)
         {         
            trg.Main_Wait(80);

            v.P_CountMain[playerID] += 1;
            v.P_LoopMain[playerID] = 0;
         }
      }
      else if (v.P_CountMain[playerID] == 3)
      {
         if (v.P_LoopMain[playerID] == 0)
         {         
            trg.Main_Wait(1280);

            v.P_LoopMain[playerID] += 1;
         }
         else if (v.P_LoopMain[playerID] == 1)
         {         
            s.CharacterVoice(8);
            trg.Main_Wait(80);
            v.P_CountMain[playerID] += 1;
            v.P_LoopMain[playerID] = 0;
         }
      }
      else if (v.P_CountMain[playerID] == 4)
      {
         if (v.P_LoopMain[playerID] == 0)
         {         
            if (playerID < 3)
            {
               GiveUnits(All, "80 + 1n Artanis", playerID, "Anywhere", P7);
               GiveUnits(All, "80 + 1n Mutalisk", playerID, "Anywhere", P7);
               GiveUnits(All, "80 + 1n Tom Kazansky", playerID, "Anywhere", P7);
            }
            else if (playerID >= 3)
            {
               GiveUnits(All, "80 + 1n Artanis", playerID, "Anywhere", P8);
               GiveUnits(All, "80 + 1n Mutalisk", playerID, "Anywhere", P8);
               GiveUnits(All, "80 + 1n Tom Kazansky", playerID, "Anywhere", P8);
            }
            SetSwitch("JunkYardDog", Set);

            trg.Main_Wait(800);

            v.P_LoopMain[playerID] += 1;
         }
         else if (v.P_LoopMain[playerID] == 1)
         {         
            if (playerID < 3)
            {
               GiveUnits(All, "80 + 1n Artanis", P7, "Anywhere", playerID);
               GiveUnits(All, "80 + 1n Mutalisk", P7, "Anywhere", playerID);
               GiveUnits(All, "80 + 1n Tom Kazansky", P7, "Anywhere", playerID);
            }
            else if (playerID >= 3)
            {
               GiveUnits(All, "80 + 1n Artanis", P8, "Anywhere", playerID);
               GiveUnits(All, "80 + 1n Mutalisk", P8, "Anywhere", playerID);
               GiveUnits(All, "80 + 1n Tom Kazansky", P8, "Anywhere", playerID);
            }
            MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
            Order("80 + 1n Artanis", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
            Order("80 + 1n Tom Kazansky", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
            Order("80 + 1n Mutalisk", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);

            SetSwitch("JunkYardDog", Clear);

            trg.Main_Wait(80);

            v.P_LoopMain[playerID] += 1;
         }
         else if (v.P_LoopMain[playerID] < 12)
         {         
            if (v.P_LoopMain[playerID] % 3 == 0)
            {
               trg.Shape_Edge(playerID, 1, "40 + 1n Mojo", 0, 11, 30 * v.P_LoopMain[playerID]);
               trg.Shape_Edge(playerID, 1, "60 + 1n Archon", 0, 11, 30 * v.P_LoopMain[playerID]);
            }
            else if (v.P_LoopMain[playerID] % 3 == 1)
            {
               trg.Shape_Edge(playerID, 1, "40 + 1n Wraith", 0, 11, 30 * v.P_LoopMain[playerID]);
               trg.Shape_Edge(playerID, 1, "Protoss Dark Archon", 0, 11, 30 * v.P_LoopMain[playerID]);
            }     
            else if (v.P_LoopMain[playerID] % 3 == 2)
            {
               trg.Shape_Edge(playerID, 1, "40 + 1n Mutalisk", 0, 11, 30 * v.P_LoopMain[playerID]);
               trg.Shape_Edge(playerID, 1, " Unit. Hoffnung 25000", 0, 11, 30 * v.P_LoopMain[playerID]);
            }     
            MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
            Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
            Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
            Order("40 + 1n Mutalisk", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
            KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
            KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
            KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID);

            trg.Main_Wait(160);

            v.P_LoopMain[playerID] += 1;
         }
         else if (v.P_LoopMain[playerID] == 12)
         {         
            trg.Main_Wait(1920);

            v.P_LoopMain[playerID] += 1;
         }
         else if (v.P_LoopMain[playerID] == 13)
         {         
            trg.Main_Wait(80);

            v.P_CountMain[playerID] += 1;
            v.P_LoopMain[playerID] = 0;
         }


      }
      else if (v.P_CountMain[playerID] == 5)
      {
         if (v.P_LoopMain[playerID] < 9)
         {         
            trg.Shape_NxNSquare(playerID, 1, "50 + 1n Tank", 9, 75);
            KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);

            trg.Main_Wait(320);

            v.P_LoopMain[playerID] += 1;
         }
         else if (v.P_LoopMain[playerID] == 9)
         {         
            trg.Main_Wait(80);

            v.P_CountMain[playerID] += 1;
            v.P_LoopMain[playerID] = 0;
         }
      }
      else if (v.P_CountMain[playerID] == 6)
      {
         SetSwitch("UiltimateSwitch", Clear);
         SetSwitch("Recall - MilimUlt", Clear);
         KillUnitAt(All, "80 + 1n Artanis", "Anywhere", playerID);
         KillUnitAt(All, "80 + 1n Mutalisk", "Anywhere", playerID);
         KillUnitAt(All, "80 + 1n Tom Kazansky", "Anywhere", playerID);
         KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID);
         KillUnitAt(All, "40 + 1n Mutalisk", "Anywhere", playerID);
         KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
         

         trg.SkillEnd();
      }
   }
   if (v.P_WaitSub1[playerID] == 0)
   {
      if (v.P_CountMain[playerID] == 1)
      {
         if (v.P_CountSub1[playerID] == 9) v.P_CountSub1[playerID] = 0;
         if (v.P_CountSub1[playerID] < 9)
         {
            trg.Table_Sin(playerID, 10 * v.P_CountSub1[playerID], 300);
            trg.Table_Cos(playerID, 10 * v.P_CountSub1[playerID], 300);

            trg.Shape_Square(playerID, 1, "Protoss Dark Archon", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
            trg.Shape_Square(playerID, 1, "80 + 1n Artanis", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);

            MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
            Order("80 + 1n Artanis", playerID, "Anywhere", Move, v.P_LocationID[playerID]);

            KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);

            MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
            RemoveUnitAt(All, "80 + 1n Artanis", v.P_LocationID[playerID], playerID);
            RemoveUnitAt(All, "80 + 1n Mutalisk", v.P_LocationID[playerID], playerID);
            RemoveUnitAt(All, "80 + 1n Tom Kazansky", v.P_LocationID[playerID], playerID);

            trg.Sub1_Wait(160);

            v.P_CountSub1[playerID] += 1;
         }
      }
      else if (v.P_CountMain[playerID] <= 3)
      {
         if (v.P_CountSub1[playerID] == 9) v.P_CountSub1[playerID] = 0;
         if (v.P_CountSub1[playerID] < 9)
         {
            trg.Table_Sin(playerID, 10 * v.P_CountSub1[playerID], 300);
            trg.Table_Cos(playerID, 10 * v.P_CountSub1[playerID], 300);

            trg.Shape_Square(playerID, 1, "Protoss Dark Archon", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
            trg.Shape_Square(playerID, 1, "80 + 1n Artanis", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);

            trg.Table_Sin(playerID, 10 * v.P_CountSub1[playerID] + 30, 300);
            trg.Table_Cos(playerID, 10 * v.P_CountSub1[playerID] + 30, 300);

            trg.Shape_Square(playerID, 1, " Unit. Hoffnung 25000", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
            trg.Shape_Square(playerID, 1, "80 + 1n Tom Kazansky", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);

            trg.Table_Sin(playerID, 10 * v.P_CountSub1[playerID] + 60, 300);
            trg.Table_Cos(playerID, 10 * v.P_CountSub1[playerID] + 60, 300);

            trg.Shape_Square(playerID, 1, "50 + 1n Tank", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
            trg.Shape_Square(playerID, 1, "80 + 1n Mutalisk", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);

            MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
            Order("80 + 1n Artanis", playerID, "Anywhere", Move, v.P_LocationID[playerID]);
            Order("80 + 1n Tom Kazansky", playerID, "Anywhere", Move, v.P_LocationID[playerID]);
            Order("80 + 1n Mutalisk", playerID, "Anywhere", Move, v.P_LocationID[playerID]);

            KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
            KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID);
            KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);

            MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
            RemoveUnitAt(All, "80 + 1n Artanis", v.P_LocationID[playerID], playerID);
            RemoveUnitAt(All, "80 + 1n Mutalisk", v.P_LocationID[playerID], playerID);
            RemoveUnitAt(All, "80 + 1n Tom Kazansky", v.P_LocationID[playerID], playerID);

            trg.Sub1_Wait(160);

            v.P_CountSub1[playerID] += 1;
         }
      }
      else if (v.P_CountMain[playerID] <= 5)
      {
         MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
         RemoveUnitAt(All, "80 + 1n Artanis", v.P_LocationID[playerID], playerID);
         RemoveUnitAt(All, "80 + 1n Mutalisk", v.P_LocationID[playerID], playerID);
         RemoveUnitAt(All, "80 + 1n Tom Kazansky", v.P_LocationID[playerID], playerID);
         Order("80 + 1n Artanis", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
         Order("80 + 1n Tom Kazansky", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
         Order("80 + 1n Mutalisk", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);

         trg.Sub1_Wait(160);
      }

   }
   if (v.P_WaitSub2[playerID] == 0)
   {
      if (v.P_CountMain[playerID] == 1)
      {
         if (v.P_CountSub2[playerID] >= 3) v.P_CountSub2[playerID] = 0;
         if (v.P_CountSub2[playerID] < 3)
         {
            trg.Shape_NxNSquare(playerID, 1, "Protoss Dark Archon", 9, 75);
            KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);

            trg.Sub2_Wait(320);

            v.P_CountSub2[playerID] += 1;
         }
      }
      else if (v.P_CountMain[playerID] <= 3)
      {
         if (v.P_CountSub2[playerID] >= 2) v.P_CountSub2[playerID] = 0;
         if (v.P_CountSub2[playerID] == 0)
         {
            trg.Shape_NxNSquare(playerID, 1, "Protoss Dark Archon", 9, 75);
            KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);

            trg.Sub2_Wait(320);

            v.P_CountSub2[playerID] += 1;
         }
         else if (v.P_CountSub2[playerID] == 1)
         {
            trg.Shape_NxNSquare(playerID, 1, "50 + 1n Tank", 9, 75);
            KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);

            trg.Sub2_Wait(320);

            v.P_CountSub2[playerID] += 1;
         }
      }
   }



}