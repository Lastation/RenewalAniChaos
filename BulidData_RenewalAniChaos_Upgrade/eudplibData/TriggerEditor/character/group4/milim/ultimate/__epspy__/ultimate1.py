## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _RELIMP(path, mod_name):
    import inspect, pathlib, importlib.util
    p = pathlib.Path(inspect.getabsfile(inspect.currentframe())).parent
    for s in path.split("."):
        if s == "":  p = p.parent
        else:  p = p / s
    try:
        spec = importlib.util.spec_from_file_location(mod_name, p / (mod_name + ".py"))
        module = importlib.util.module_from_spec(spec)
        spec.loader.exec_module(module)
    except FileNotFoundError:
        loader = EPSLoader(mod_name, str(p / (mod_name + ".eps")))
        spec = importlib.util.spec_from_loader(mod_name, loader)
        module = loader.create_module(spec)
        loader.exec_module(module)
    return module

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import PluginVariables as msqcvar;
import PluginVariables as msqcvar
# (Line 2) import variable as v;
import variable as v
# (Line 3) import func.trig as trg;
from func import trig as trg
# (Line 5) import func.sound as s;
from func import sound as s
# (Line 7) function main(playerID)
# (Line 8) {
@EUDFunc
def f_main(playerID):
    # (Line 9) MoveLocation("25.Milim_Bozo", v.P_UnitID[playerID], playerID, "Anywhere");
    # (Line 11) trg.Debuff_BanReturn();
    DoActions(MoveLocation("25.Milim_Bozo", v.P_UnitID[playerID], playerID, "Anywhere"))
    trg.Debuff_BanReturn()
    # (Line 12) trg.Debuff_Stop();
    trg.Debuff_Stop()
    # (Line 14) trg.Buff_ShieldFix(1);
    trg.Buff_ShieldFix(1)
    # (Line 16) if (v.P_WaitMain[playerID] == 0)
    if EUDIf()(v.P_WaitMain[playerID] == 0):
        # (Line 17) {
        # (Line 18) if (v.P_CountMain[playerID] == 0)
        if EUDIf()(v.P_CountMain[playerID] == 0):
            # (Line 19) {
            # (Line 20) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 21) {
                # (Line 22) SetSwitch("Recall - MilimUlt", Set);
                # (Line 23) SetDeaths(playerID, SetTo, 1, " `ShieldRecharge");
                DoActions(SetSwitch("Recall - MilimUlt", Set))
                # (Line 25) trg.Main_Wait(720);
                DoActions(SetDeaths(playerID, SetTo, 1, " `ShieldRecharge"))
                trg.Main_Wait(720)
                # (Line 27) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 28) }
                # (Line 29) else if (v.P_LoopMain[playerID] < 5)
            if EUDElseIf()(v.P_LoopMain[playerID] >= 5, neg=True):
                # (Line 30) {
                # (Line 31) trg.Shape_NxNSquare(playerID, 1, "Protoss Observer", 11, 75);
                trg.Shape_NxNSquare(playerID, 1, "Protoss Observer", 11, 75)
                # (Line 32) trg.Shape_NxNSquare(playerID, 1, "60 + 1n Archon", 11, 75);
                trg.Shape_NxNSquare(playerID, 1, "60 + 1n Archon", 11, 75)
                # (Line 34) KillUnitAt(All, "Protoss Observer", "Anywhere", playerID);
                # (Line 35) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "Protoss Observer", "Anywhere", playerID))
                # (Line 37) trg.Main_Wait(160);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                trg.Main_Wait(160)
                # (Line 39) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 40) }
                # (Line 41) else if (v.P_LoopMain[playerID] == 5)
            if EUDElseIf()(v.P_LoopMain[playerID] == 5):
                # (Line 42) {
                # (Line 43) trg.Shape_NxNSquare(playerID, 1, " Unit. Hoffnung 25000", 11, 75);
                trg.Shape_NxNSquare(playerID, 1, " Unit. Hoffnung 25000", 11, 75)
                # (Line 44) trg.Shape_NxNSquare(playerID, 1, "40 + 1n Guardian", 11, 75);
                trg.Shape_NxNSquare(playerID, 1, "40 + 1n Guardian", 11, 75)
                # (Line 46) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID);
                # (Line 47) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID))
                # (Line 49) trg.Main_Wait(480);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID))
                trg.Main_Wait(480)
                # (Line 51) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 52) }
                # (Line 53) else if (v.P_LoopMain[playerID] == 6)
            if EUDElseIf()(v.P_LoopMain[playerID] == 6):
                # (Line 54) {
                # (Line 55) trg.Main_Wait(80);
                trg.Main_Wait(80)
                # (Line 57) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 58) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 59) }
                # (Line 60) }
            EUDEndIf()
            # (Line 61) else if (v.P_CountMain[playerID] == 1)
        if EUDElseIf()(v.P_CountMain[playerID] == 1):
            # (Line 62) {
            # (Line 63) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 64) {
                # (Line 65) trg.Main_Wait(720);
                trg.Main_Wait(720)
                # (Line 67) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 68) }
                # (Line 69) else if (v.P_LoopMain[playerID] == 1)
            if EUDElseIf()(v.P_LoopMain[playerID] == 1):
                # (Line 70) {
                # (Line 71) trg.Main_Wait(80);
                trg.Main_Wait(80)
                # (Line 73) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 74) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 75) }
                # (Line 76) }
            EUDEndIf()
            # (Line 77) else if (v.P_CountMain[playerID] == 2)
        if EUDElseIf()(v.P_CountMain[playerID] == 2):
            # (Line 78) {
            # (Line 79) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 80) {
                # (Line 81) trg.Main_Wait(2160);
                trg.Main_Wait(2160)
                # (Line 83) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 84) }
                # (Line 85) else if (v.P_LoopMain[playerID] == 1)
            if EUDElseIf()(v.P_LoopMain[playerID] == 1):
                # (Line 86) {
                # (Line 87) trg.Main_Wait(80);
                trg.Main_Wait(80)
                # (Line 89) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 90) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 91) }
                # (Line 92) }
            EUDEndIf()
            # (Line 93) else if (v.P_CountMain[playerID] == 3)
        if EUDElseIf()(v.P_CountMain[playerID] == 3):
            # (Line 94) {
            # (Line 95) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 96) {
                # (Line 97) trg.Main_Wait(1280);
                trg.Main_Wait(1280)
                # (Line 99) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 100) }
                # (Line 101) else if (v.P_LoopMain[playerID] == 1)
            if EUDElseIf()(v.P_LoopMain[playerID] == 1):
                # (Line 102) {
                # (Line 103) s.CharacterVoice(8);
                s.CharacterVoice(8)
                # (Line 104) trg.Main_Wait(80);
                trg.Main_Wait(80)
                # (Line 105) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 106) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 107) }
                # (Line 108) }
            EUDEndIf()
            # (Line 109) else if (v.P_CountMain[playerID] == 4)
        if EUDElseIf()(v.P_CountMain[playerID] == 4):
            # (Line 110) {
            # (Line 111) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 112) {
                # (Line 113) if (playerID < 3)
                if EUDIf()(playerID >= 3, neg=True):
                    # (Line 114) {
                    # (Line 115) GiveUnits(All, "80 + 1n Artanis", playerID, "Anywhere", P7);
                    # (Line 116) GiveUnits(All, "80 + 1n Mutalisk", playerID, "Anywhere", P7);
                    DoActions(GiveUnits(All, "80 + 1n Artanis", playerID, "Anywhere", P7))
                    # (Line 117) GiveUnits(All, "80 + 1n Tom Kazansky", playerID, "Anywhere", P7);
                    DoActions(GiveUnits(All, "80 + 1n Mutalisk", playerID, "Anywhere", P7))
                    # (Line 118) }
                    DoActions(GiveUnits(All, "80 + 1n Tom Kazansky", playerID, "Anywhere", P7))
                    # (Line 119) else if (playerID >= 3)
                if EUDElseIf()(playerID >= 3):
                    # (Line 120) {
                    # (Line 121) GiveUnits(All, "80 + 1n Artanis", playerID, "Anywhere", P8);
                    # (Line 122) GiveUnits(All, "80 + 1n Mutalisk", playerID, "Anywhere", P8);
                    DoActions(GiveUnits(All, "80 + 1n Artanis", playerID, "Anywhere", P8))
                    # (Line 123) GiveUnits(All, "80 + 1n Tom Kazansky", playerID, "Anywhere", P8);
                    DoActions(GiveUnits(All, "80 + 1n Mutalisk", playerID, "Anywhere", P8))
                    # (Line 124) }
                    DoActions(GiveUnits(All, "80 + 1n Tom Kazansky", playerID, "Anywhere", P8))
                    # (Line 125) SetSwitch("JunkYardDog", Set);
                EUDEndIf()
                # (Line 127) trg.Main_Wait(800);
                DoActions(SetSwitch("JunkYardDog", Set))
                trg.Main_Wait(800)
                # (Line 129) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 130) }
                # (Line 131) else if (v.P_LoopMain[playerID] == 1)
            if EUDElseIf()(v.P_LoopMain[playerID] == 1):
                # (Line 132) {
                # (Line 133) if (playerID < 3)
                if EUDIf()(playerID >= 3, neg=True):
                    # (Line 134) {
                    # (Line 135) GiveUnits(All, "80 + 1n Artanis", P7, "Anywhere", playerID);
                    # (Line 136) GiveUnits(All, "80 + 1n Mutalisk", P7, "Anywhere", playerID);
                    DoActions(GiveUnits(All, "80 + 1n Artanis", P7, "Anywhere", playerID))
                    # (Line 137) GiveUnits(All, "80 + 1n Tom Kazansky", P7, "Anywhere", playerID);
                    DoActions(GiveUnits(All, "80 + 1n Mutalisk", P7, "Anywhere", playerID))
                    # (Line 138) }
                    DoActions(GiveUnits(All, "80 + 1n Tom Kazansky", P7, "Anywhere", playerID))
                    # (Line 139) else if (playerID >= 3)
                if EUDElseIf()(playerID >= 3):
                    # (Line 140) {
                    # (Line 141) GiveUnits(All, "80 + 1n Artanis", P8, "Anywhere", playerID);
                    # (Line 142) GiveUnits(All, "80 + 1n Mutalisk", P8, "Anywhere", playerID);
                    DoActions(GiveUnits(All, "80 + 1n Artanis", P8, "Anywhere", playerID))
                    # (Line 143) GiveUnits(All, "80 + 1n Tom Kazansky", P8, "Anywhere", playerID);
                    DoActions(GiveUnits(All, "80 + 1n Mutalisk", P8, "Anywhere", playerID))
                    # (Line 144) }
                    DoActions(GiveUnits(All, "80 + 1n Tom Kazansky", P8, "Anywhere", playerID))
                    # (Line 145) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                EUDEndIf()
                # (Line 146) Order("80 + 1n Artanis", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 147) Order("80 + 1n Tom Kazansky", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(Order("80 + 1n Artanis", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 148) Order("80 + 1n Mutalisk", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(Order("80 + 1n Tom Kazansky", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 150) SetSwitch("JunkYardDog", Clear);
                DoActions(Order("80 + 1n Mutalisk", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 152) trg.Main_Wait(80);
                DoActions(SetSwitch("JunkYardDog", Clear))
                trg.Main_Wait(80)
                # (Line 154) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 155) }
                # (Line 156) else if (v.P_LoopMain[playerID] < 12)
            if EUDElseIf()(v.P_LoopMain[playerID] >= 12, neg=True):
                # (Line 157) {
                # (Line 158) if (v.P_LoopMain[playerID] % 3 == 0)
                if EUDIf()(v.P_LoopMain[playerID] % 3 == 0):
                    # (Line 159) {
                    # (Line 160) trg.Shape_Edge(playerID, 1, "40 + 1n Mojo", 0, 11, 30 * v.P_LoopMain[playerID]);
                    trg.Shape_Edge(playerID, 1, "40 + 1n Mojo", 0, 11, 30 * v.P_LoopMain[playerID])
                    # (Line 161) trg.Shape_Edge(playerID, 1, "60 + 1n Archon", 0, 11, 30 * v.P_LoopMain[playerID]);
                    trg.Shape_Edge(playerID, 1, "60 + 1n Archon", 0, 11, 30 * v.P_LoopMain[playerID])
                    # (Line 162) }
                    # (Line 163) else if (v.P_LoopMain[playerID] % 3 == 1)
                if EUDElseIf()(v.P_LoopMain[playerID] % 3 == 1):
                    # (Line 164) {
                    # (Line 165) trg.Shape_Edge(playerID, 1, "40 + 1n Wraith", 0, 11, 30 * v.P_LoopMain[playerID]);
                    trg.Shape_Edge(playerID, 1, "40 + 1n Wraith", 0, 11, 30 * v.P_LoopMain[playerID])
                    # (Line 166) trg.Shape_Edge(playerID, 1, "Protoss Dark Archon", 0, 11, 30 * v.P_LoopMain[playerID]);
                    trg.Shape_Edge(playerID, 1, "Protoss Dark Archon", 0, 11, 30 * v.P_LoopMain[playerID])
                    # (Line 167) }
                    # (Line 168) else if (v.P_LoopMain[playerID] % 3 == 2)
                if EUDElseIf()(v.P_LoopMain[playerID] % 3 == 2):
                    # (Line 169) {
                    # (Line 170) trg.Shape_Edge(playerID, 1, "40 + 1n Mutalisk", 0, 11, 30 * v.P_LoopMain[playerID]);
                    trg.Shape_Edge(playerID, 1, "40 + 1n Mutalisk", 0, 11, 30 * v.P_LoopMain[playerID])
                    # (Line 171) trg.Shape_Edge(playerID, 1, " Unit. Hoffnung 25000", 0, 11, 30 * v.P_LoopMain[playerID]);
                    trg.Shape_Edge(playerID, 1, " Unit. Hoffnung 25000", 0, 11, 30 * v.P_LoopMain[playerID])
                    # (Line 172) }
                    # (Line 173) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                EUDEndIf()
                # (Line 174) Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 175) Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 176) Order("40 + 1n Mutalisk", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 177) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                DoActions(Order("40 + 1n Mutalisk", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 178) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                # (Line 179) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                # (Line 181) trg.Main_Wait(160);
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID))
                trg.Main_Wait(160)
                # (Line 183) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 184) }
                # (Line 185) else if (v.P_LoopMain[playerID] == 12)
            if EUDElseIf()(v.P_LoopMain[playerID] == 12):
                # (Line 186) {
                # (Line 187) trg.Main_Wait(1920);
                trg.Main_Wait(1920)
                # (Line 189) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 190) }
                # (Line 191) else if (v.P_LoopMain[playerID] == 13)
            if EUDElseIf()(v.P_LoopMain[playerID] == 13):
                # (Line 192) {
                # (Line 193) trg.Main_Wait(80);
                trg.Main_Wait(80)
                # (Line 195) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 196) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 197) }
                # (Line 200) }
            EUDEndIf()
            # (Line 201) else if (v.P_CountMain[playerID] == 5)
        if EUDElseIf()(v.P_CountMain[playerID] == 5):
            # (Line 202) {
            # (Line 203) if (v.P_LoopMain[playerID] < 9)
            if EUDIf()(v.P_LoopMain[playerID] >= 9, neg=True):
                # (Line 204) {
                # (Line 205) trg.Shape_NxNSquare(playerID, 1,"40 + 1n Goliath", 3, 75);
                trg.Shape_NxNSquare(playerID, 1, "40 + 1n Goliath", 3, 75)
                # (Line 206) trg.Shape_NxNSquare(playerID, 1, "50 + 1n Tank", 9, 75);
                trg.Shape_NxNSquare(playerID, 1, "50 + 1n Tank", 9, 75)
                # (Line 207) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                # (Line 209) trg.Main_Wait(320);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                trg.Main_Wait(320)
                # (Line 211) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 212) }
                # (Line 213) else if (v.P_LoopMain[playerID] == 9)
            if EUDElseIf()(v.P_LoopMain[playerID] == 9):
                # (Line 214) {
                # (Line 215) KillUnitAt(All, "40 + 1n Goliath", "Anywhere", playerID);
                # (Line 216) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "40 + 1n Goliath", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 218) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 219) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 220) }
                # (Line 221) }
            EUDEndIf()
            # (Line 222) else if (v.P_CountMain[playerID] == 6)
        if EUDElseIf()(v.P_CountMain[playerID] == 6):
            # (Line 223) {
            # (Line 224) SetSwitch("UiltimateSwitch", Clear);
            # (Line 225) SetSwitch("Recall - MilimUlt", Clear);
            DoActions(SetSwitch("UiltimateSwitch", Clear))
            # (Line 226) KillUnitAt(All, "80 + 1n Artanis", "Anywhere", playerID);
            DoActions(SetSwitch("Recall - MilimUlt", Clear))
            # (Line 227) KillUnitAt(All, "80 + 1n Mutalisk", "Anywhere", playerID);
            DoActions(KillUnitAt(All, "80 + 1n Artanis", "Anywhere", playerID))
            # (Line 228) KillUnitAt(All, "80 + 1n Tom Kazansky", "Anywhere", playerID);
            DoActions(KillUnitAt(All, "80 + 1n Mutalisk", "Anywhere", playerID))
            # (Line 229) KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID);
            DoActions(KillUnitAt(All, "80 + 1n Tom Kazansky", "Anywhere", playerID))
            # (Line 230) KillUnitAt(All, "40 + 1n Mutalisk", "Anywhere", playerID);
            DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID))
            # (Line 231) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
            DoActions(KillUnitAt(All, "40 + 1n Mutalisk", "Anywhere", playerID))
            # (Line 234) trg.SkillEnd();
            DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
            trg.SkillEnd()
            # (Line 235) }
            # (Line 236) }
        EUDEndIf()
        # (Line 237) if (v.P_WaitSub1[playerID] == 0)
    EUDEndIf()
    if EUDIf()(v.P_WaitSub1[playerID] == 0):
        # (Line 238) {
        # (Line 239) if (v.P_CountMain[playerID] == 1)
        if EUDIf()(v.P_CountMain[playerID] == 1):
            # (Line 240) {
            # (Line 241) if (v.P_CountSub1[playerID] == 9) v.P_CountSub1[playerID] = 0;
            if EUDIf()(v.P_CountSub1[playerID] == 9):
                _ARRW(v.P_CountSub1, playerID) << (0)
                # (Line 242) if (v.P_CountSub1[playerID] < 9)
            EUDEndIf()
            if EUDIf()(v.P_CountSub1[playerID] >= 9, neg=True):
                # (Line 243) {
                # (Line 244) trg.Table_Sin(playerID, 10 * v.P_CountSub1[playerID], 300);
                trg.Table_Sin(playerID, 10 * v.P_CountSub1[playerID], 300)
                # (Line 245) trg.Table_Cos(playerID, 10 * v.P_CountSub1[playerID], 300);
                trg.Table_Cos(playerID, 10 * v.P_CountSub1[playerID], 300)
                # (Line 247) trg.Shape_Square(playerID, 1, "Protoss Dark Archon", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
                trg.Shape_Square(playerID, 1, "Protoss Dark Archon", v.P_AngleCos[playerID], v.P_AngleSin[playerID])
                # (Line 248) trg.Shape_Square(playerID, 1, "80 + 1n Artanis", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
                trg.Shape_Square(playerID, 1, "80 + 1n Artanis", v.P_AngleCos[playerID], v.P_AngleSin[playerID])
                # (Line 250) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 251) Order("80 + 1n Artanis", playerID, "Anywhere", Move, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 253) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                DoActions(Order("80 + 1n Artanis", playerID, "Anywhere", Move, v.P_LocationID[playerID]))
                # (Line 255) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                # (Line 256) RemoveUnitAt(All, "80 + 1n Artanis", v.P_LocationID[playerID], playerID);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 257) RemoveUnitAt(All, "80 + 1n Mutalisk", v.P_LocationID[playerID], playerID);
                DoActions(RemoveUnitAt(All, "80 + 1n Artanis", v.P_LocationID[playerID], playerID))
                # (Line 258) RemoveUnitAt(All, "80 + 1n Tom Kazansky", v.P_LocationID[playerID], playerID);
                DoActions(RemoveUnitAt(All, "80 + 1n Mutalisk", v.P_LocationID[playerID], playerID))
                # (Line 260) trg.Sub1_Wait(160);
                DoActions(RemoveUnitAt(All, "80 + 1n Tom Kazansky", v.P_LocationID[playerID], playerID))
                trg.Sub1_Wait(160)
                # (Line 262) v.P_CountSub1[playerID] += 1;
                _ARRW(v.P_CountSub1, playerID).__iadd__(1)
                # (Line 263) }
                # (Line 264) }
            EUDEndIf()
            # (Line 265) else if (v.P_CountMain[playerID] <= 3)
        if EUDElseIf()(v.P_CountMain[playerID] <= 3):
            # (Line 266) {
            # (Line 267) if (v.P_CountSub1[playerID] == 9) v.P_CountSub1[playerID] = 0;
            if EUDIf()(v.P_CountSub1[playerID] == 9):
                _ARRW(v.P_CountSub1, playerID) << (0)
                # (Line 268) if (v.P_CountSub1[playerID] < 9)
            EUDEndIf()
            if EUDIf()(v.P_CountSub1[playerID] >= 9, neg=True):
                # (Line 269) {
                # (Line 270) trg.Table_Sin(playerID, 10 * v.P_CountSub1[playerID], 300);
                trg.Table_Sin(playerID, 10 * v.P_CountSub1[playerID], 300)
                # (Line 271) trg.Table_Cos(playerID, 10 * v.P_CountSub1[playerID], 300);
                trg.Table_Cos(playerID, 10 * v.P_CountSub1[playerID], 300)
                # (Line 273) trg.Shape_Square(playerID, 1, "Protoss Dark Archon", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
                trg.Shape_Square(playerID, 1, "Protoss Dark Archon", v.P_AngleCos[playerID], v.P_AngleSin[playerID])
                # (Line 274) trg.Shape_Square(playerID, 1, "80 + 1n Artanis", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
                trg.Shape_Square(playerID, 1, "80 + 1n Artanis", v.P_AngleCos[playerID], v.P_AngleSin[playerID])
                # (Line 276) trg.Table_Sin(playerID, 10 * v.P_CountSub1[playerID] + 30, 300);
                trg.Table_Sin(playerID, 10 * v.P_CountSub1[playerID] + 30, 300)
                # (Line 277) trg.Table_Cos(playerID, 10 * v.P_CountSub1[playerID] + 30, 300);
                trg.Table_Cos(playerID, 10 * v.P_CountSub1[playerID] + 30, 300)
                # (Line 279) trg.Shape_Square(playerID, 1, " Unit. Hoffnung 25000", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
                trg.Shape_Square(playerID, 1, " Unit. Hoffnung 25000", v.P_AngleCos[playerID], v.P_AngleSin[playerID])
                # (Line 280) trg.Shape_Square(playerID, 1, "80 + 1n Tom Kazansky", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
                trg.Shape_Square(playerID, 1, "80 + 1n Tom Kazansky", v.P_AngleCos[playerID], v.P_AngleSin[playerID])
                # (Line 282) trg.Table_Sin(playerID, 10 * v.P_CountSub1[playerID] + 60, 300);
                trg.Table_Sin(playerID, 10 * v.P_CountSub1[playerID] + 60, 300)
                # (Line 283) trg.Table_Cos(playerID, 10 * v.P_CountSub1[playerID] + 60, 300);
                trg.Table_Cos(playerID, 10 * v.P_CountSub1[playerID] + 60, 300)
                # (Line 285) trg.Shape_Square(playerID, 1, "50 + 1n Tank", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", v.P_AngleCos[playerID], v.P_AngleSin[playerID])
                # (Line 286) trg.Shape_Square(playerID, 1, "80 + 1n Mutalisk", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
                trg.Shape_Square(playerID, 1, "80 + 1n Mutalisk", v.P_AngleCos[playerID], v.P_AngleSin[playerID])
                # (Line 288) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 289) Order("80 + 1n Artanis", playerID, "Anywhere", Move, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 290) Order("80 + 1n Tom Kazansky", playerID, "Anywhere", Move, v.P_LocationID[playerID]);
                DoActions(Order("80 + 1n Artanis", playerID, "Anywhere", Move, v.P_LocationID[playerID]))
                # (Line 291) Order("80 + 1n Mutalisk", playerID, "Anywhere", Move, v.P_LocationID[playerID]);
                DoActions(Order("80 + 1n Tom Kazansky", playerID, "Anywhere", Move, v.P_LocationID[playerID]))
                # (Line 293) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                DoActions(Order("80 + 1n Mutalisk", playerID, "Anywhere", Move, v.P_LocationID[playerID]))
                # (Line 294) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                # (Line 295) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID))
                # (Line 297) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                # (Line 298) RemoveUnitAt(All, "80 + 1n Artanis", v.P_LocationID[playerID], playerID);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 299) RemoveUnitAt(All, "80 + 1n Mutalisk", v.P_LocationID[playerID], playerID);
                DoActions(RemoveUnitAt(All, "80 + 1n Artanis", v.P_LocationID[playerID], playerID))
                # (Line 300) RemoveUnitAt(All, "80 + 1n Tom Kazansky", v.P_LocationID[playerID], playerID);
                DoActions(RemoveUnitAt(All, "80 + 1n Mutalisk", v.P_LocationID[playerID], playerID))
                # (Line 302) trg.Sub1_Wait(160);
                DoActions(RemoveUnitAt(All, "80 + 1n Tom Kazansky", v.P_LocationID[playerID], playerID))
                trg.Sub1_Wait(160)
                # (Line 304) v.P_CountSub1[playerID] += 1;
                _ARRW(v.P_CountSub1, playerID).__iadd__(1)
                # (Line 305) }
                # (Line 306) }
            EUDEndIf()
            # (Line 307) else if (v.P_CountMain[playerID] <= 5)
        if EUDElseIf()(v.P_CountMain[playerID] <= 5):
            # (Line 308) {
            # (Line 309) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
            # (Line 310) RemoveUnitAt(All, "80 + 1n Artanis", v.P_LocationID[playerID], playerID);
            DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
            # (Line 311) RemoveUnitAt(All, "80 + 1n Mutalisk", v.P_LocationID[playerID], playerID);
            DoActions(RemoveUnitAt(All, "80 + 1n Artanis", v.P_LocationID[playerID], playerID))
            # (Line 312) RemoveUnitAt(All, "80 + 1n Tom Kazansky", v.P_LocationID[playerID], playerID);
            DoActions(RemoveUnitAt(All, "80 + 1n Mutalisk", v.P_LocationID[playerID], playerID))
            # (Line 313) Order("80 + 1n Artanis", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
            DoActions(RemoveUnitAt(All, "80 + 1n Tom Kazansky", v.P_LocationID[playerID], playerID))
            # (Line 314) Order("80 + 1n Tom Kazansky", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
            DoActions(Order("80 + 1n Artanis", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
            # (Line 315) Order("80 + 1n Mutalisk", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
            DoActions(Order("80 + 1n Tom Kazansky", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
            # (Line 317) trg.Sub1_Wait(160);
            DoActions(Order("80 + 1n Mutalisk", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
            trg.Sub1_Wait(160)
            # (Line 318) }
            # (Line 320) }
        EUDEndIf()
        # (Line 321) if (v.P_WaitSub2[playerID] == 0)
    EUDEndIf()
    if EUDIf()(v.P_WaitSub2[playerID] == 0):
        # (Line 322) {
        # (Line 323) if (v.P_CountMain[playerID] == 1)
        if EUDIf()(v.P_CountMain[playerID] == 1):
            # (Line 324) {
            # (Line 325) if (v.P_CountSub2[playerID] >= 3) v.P_CountSub2[playerID] = 0;
            if EUDIf()(v.P_CountSub2[playerID] >= 3):
                _ARRW(v.P_CountSub2, playerID) << (0)
                # (Line 326) if (v.P_CountSub2[playerID] < 3)
            EUDEndIf()
            if EUDIf()(v.P_CountSub2[playerID] >= 3, neg=True):
                # (Line 327) {
                # (Line 328) trg.Shape_NxNSquare(playerID, 1, "Protoss Dark Archon", 9, 75);
                trg.Shape_NxNSquare(playerID, 1, "Protoss Dark Archon", 9, 75)
                # (Line 329) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                # (Line 331) trg.Sub2_Wait(320);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                trg.Sub2_Wait(320)
                # (Line 333) v.P_CountSub2[playerID] += 1;
                _ARRW(v.P_CountSub2, playerID).__iadd__(1)
                # (Line 334) }
                # (Line 335) }
            EUDEndIf()
            # (Line 336) else if (v.P_CountMain[playerID] <= 3)
        if EUDElseIf()(v.P_CountMain[playerID] <= 3):
            # (Line 337) {
            # (Line 338) if (v.P_CountSub2[playerID] >= 2) v.P_CountSub2[playerID] = 0;
            if EUDIf()(v.P_CountSub2[playerID] >= 2):
                _ARRW(v.P_CountSub2, playerID) << (0)
                # (Line 339) if (v.P_CountSub2[playerID] == 0)
            EUDEndIf()
            if EUDIf()(v.P_CountSub2[playerID] == 0):
                # (Line 340) {
                # (Line 341) trg.Shape_NxNSquare(playerID, 1, "Protoss Dark Archon", 9, 75);
                trg.Shape_NxNSquare(playerID, 1, "Protoss Dark Archon", 9, 75)
                # (Line 342) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                # (Line 344) trg.Sub2_Wait(320);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                trg.Sub2_Wait(320)
                # (Line 346) v.P_CountSub2[playerID] += 1;
                _ARRW(v.P_CountSub2, playerID).__iadd__(1)
                # (Line 347) }
                # (Line 348) else if (v.P_CountSub2[playerID] == 1)
            if EUDElseIf()(v.P_CountSub2[playerID] == 1):
                # (Line 349) {
                # (Line 350) trg.Shape_NxNSquare(playerID, 1, "50 + 1n Tank", 9, 75);
                trg.Shape_NxNSquare(playerID, 1, "50 + 1n Tank", 9, 75)
                # (Line 351) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                # (Line 353) trg.Sub2_Wait(320);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                trg.Sub2_Wait(320)
                # (Line 355) v.P_CountSub2[playerID] += 1;
                _ARRW(v.P_CountSub2, playerID).__iadd__(1)
                # (Line 356) }
                # (Line 357) }
            EUDEndIf()
            # (Line 358) }
        EUDEndIf()
        # (Line 362) }
    EUDEndIf()
