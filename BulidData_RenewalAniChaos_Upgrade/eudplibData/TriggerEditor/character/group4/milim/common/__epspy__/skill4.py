## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import PluginVariables as msqcvar;
import PluginVariables as msqcvar
# (Line 2) import variable as v;
import variable as v
# (Line 3) import func.trig as trg;
from func import trig as trg
# (Line 5) import func.sound as s;
from func import sound as s
# (Line 7) function main(playerID)
# (Line 8) {
@EUDFunc
def f_main(playerID):
    # (Line 9) if (v.P_WaitMain[playerID] == 0)
    if EUDIf()(v.P_WaitMain[playerID] == 0):
        # (Line 10) {
        # (Line 11) if (v.P_CountMain[playerID] == 0)
        if EUDIf()(v.P_CountMain[playerID] == 0):
            # (Line 12) {
            # (Line 13) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 14) {
                # (Line 15) var x = 50;
                x = EUDVariable()
                x << (50)
                # (Line 16) var y = 125;
                y = EUDVariable()
                y << (125)
                # (Line 18) trg.Shape_Dot(playerID, 1, "50 + 1n Battlecruiser", -x, x);
                trg.Shape_Dot(playerID, 1, "50 + 1n Battlecruiser", -x, x)
                # (Line 19) trg.Shape_Dot(playerID, 1, "50 + 1n Battlecruiser", -x, y);
                trg.Shape_Dot(playerID, 1, "50 + 1n Battlecruiser", -x, y)
                # (Line 20) trg.Shape_Dot(playerID, 1, "50 + 1n Battlecruiser", -y, x);
                trg.Shape_Dot(playerID, 1, "50 + 1n Battlecruiser", -y, x)
                # (Line 21) trg.Shape_Dot(playerID, 1, "50 + 1n Battlecruiser", -y, y);
                trg.Shape_Dot(playerID, 1, "50 + 1n Battlecruiser", -y, y)
                # (Line 22) trg.Shape_Dot(playerID, 1, "50 + 1n Tank", -x, x);
                trg.Shape_Dot(playerID, 1, "50 + 1n Tank", -x, x)
                # (Line 23) trg.Shape_Dot(playerID, 1, "50 + 1n Tank", -x, y);
                trg.Shape_Dot(playerID, 1, "50 + 1n Tank", -x, y)
                # (Line 24) trg.Shape_Dot(playerID, 1, "50 + 1n Tank", -y, x);
                trg.Shape_Dot(playerID, 1, "50 + 1n Tank", -y, x)
                # (Line 25) trg.Shape_Dot(playerID, 1, "50 + 1n Tank", -y, y);
                trg.Shape_Dot(playerID, 1, "50 + 1n Tank", -y, y)
                # (Line 27) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 28) MoveUnit(All, "50 + 1n Tank", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 29) Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveUnit(All, "50 + 1n Tank", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                # (Line 30) Order("50 + 1n Tank", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 32) trg.Main_Wait(320);
                DoActions(Order("50 + 1n Tank", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(320)
                # (Line 34) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 35) }
                # (Line 36) else if (v.P_LoopMain[playerID] == 1)
            if EUDElseIf()(v.P_LoopMain[playerID] == 1):
                # (Line 37) {
                # (Line 38) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
                # (Line 40) var x = 50;
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                x = EUDVariable()
                x << (50)
                # (Line 41) var y = 125;
                y = EUDVariable()
                y << (125)
                # (Line 43) trg.Shape_Dot(playerID, 1, "50 + 1n Battlecruiser", x, -x);
                trg.Shape_Dot(playerID, 1, "50 + 1n Battlecruiser", x, -x)
                # (Line 44) trg.Shape_Dot(playerID, 1, "50 + 1n Battlecruiser", x, -y);
                trg.Shape_Dot(playerID, 1, "50 + 1n Battlecruiser", x, -y)
                # (Line 45) trg.Shape_Dot(playerID, 1, "50 + 1n Battlecruiser", y, -x);
                trg.Shape_Dot(playerID, 1, "50 + 1n Battlecruiser", y, -x)
                # (Line 46) trg.Shape_Dot(playerID, 1, "50 + 1n Battlecruiser", y, -y);
                trg.Shape_Dot(playerID, 1, "50 + 1n Battlecruiser", y, -y)
                # (Line 47) trg.Shape_Dot(playerID, 1, "50 + 1n Tank", x, -x);
                trg.Shape_Dot(playerID, 1, "50 + 1n Tank", x, -x)
                # (Line 48) trg.Shape_Dot(playerID, 1, "50 + 1n Tank", x, -y);
                trg.Shape_Dot(playerID, 1, "50 + 1n Tank", x, -y)
                # (Line 49) trg.Shape_Dot(playerID, 1, "50 + 1n Tank", y, -x);
                trg.Shape_Dot(playerID, 1, "50 + 1n Tank", y, -x)
                # (Line 50) trg.Shape_Dot(playerID, 1, "50 + 1n Tank", y, -y);
                trg.Shape_Dot(playerID, 1, "50 + 1n Tank", y, -y)
                # (Line 52) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 53) MoveUnit(All, "50 + 1n Tank", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 54) Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveUnit(All, "50 + 1n Tank", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                # (Line 55) Order("50 + 1n Tank", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 57) trg.Main_Wait(320);
                DoActions(Order("50 + 1n Tank", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(320)
                # (Line 59) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 60) }
                # (Line 61) else if (v.P_LoopMain[playerID] == 2)
            if EUDElseIf()(v.P_LoopMain[playerID] == 2):
                # (Line 62) {
                # (Line 63) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
                # (Line 65) var x = 50;
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                x = EUDVariable()
                x << (50)
                # (Line 66) var y = 125;
                y = EUDVariable()
                y << (125)
                # (Line 68) trg.Shape_Dot(playerID, 1, "50 + 1n Battlecruiser", -x, -x);
                trg.Shape_Dot(playerID, 1, "50 + 1n Battlecruiser", -x, -x)
                # (Line 69) trg.Shape_Dot(playerID, 1, "50 + 1n Battlecruiser", -x, -y);
                trg.Shape_Dot(playerID, 1, "50 + 1n Battlecruiser", -x, -y)
                # (Line 70) trg.Shape_Dot(playerID, 1, "50 + 1n Battlecruiser", -y, -x);
                trg.Shape_Dot(playerID, 1, "50 + 1n Battlecruiser", -y, -x)
                # (Line 71) trg.Shape_Dot(playerID, 1, "50 + 1n Battlecruiser", -y, -y);
                trg.Shape_Dot(playerID, 1, "50 + 1n Battlecruiser", -y, -y)
                # (Line 72) trg.Shape_Dot(playerID, 1, "50 + 1n Tank", -x, -x);
                trg.Shape_Dot(playerID, 1, "50 + 1n Tank", -x, -x)
                # (Line 73) trg.Shape_Dot(playerID, 1, "50 + 1n Tank", -x, -y);
                trg.Shape_Dot(playerID, 1, "50 + 1n Tank", -x, -y)
                # (Line 74) trg.Shape_Dot(playerID, 1, "50 + 1n Tank", -y, -x);
                trg.Shape_Dot(playerID, 1, "50 + 1n Tank", -y, -x)
                # (Line 75) trg.Shape_Dot(playerID, 1, "50 + 1n Tank", -y, -y);
                trg.Shape_Dot(playerID, 1, "50 + 1n Tank", -y, -y)
                # (Line 77) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 78) MoveUnit(All, "50 + 1n Tank", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 79) Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveUnit(All, "50 + 1n Tank", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                # (Line 80) Order("50 + 1n Tank", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 82) trg.Main_Wait(320);
                DoActions(Order("50 + 1n Tank", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(320)
                # (Line 84) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 85) }
                # (Line 86) else if (v.P_LoopMain[playerID] == 3)
            if EUDElseIf()(v.P_LoopMain[playerID] == 3):
                # (Line 87) {
                # (Line 88) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
                # (Line 90) var x = 50;
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                x = EUDVariable()
                x << (50)
                # (Line 91) var y = 125;
                y = EUDVariable()
                y << (125)
                # (Line 93) trg.Shape_Dot(playerID, 1, "50 + 1n Battlecruiser", x, x);
                trg.Shape_Dot(playerID, 1, "50 + 1n Battlecruiser", x, x)
                # (Line 94) trg.Shape_Dot(playerID, 1, "50 + 1n Battlecruiser", x, y);
                trg.Shape_Dot(playerID, 1, "50 + 1n Battlecruiser", x, y)
                # (Line 95) trg.Shape_Dot(playerID, 1, "50 + 1n Battlecruiser", y, x);
                trg.Shape_Dot(playerID, 1, "50 + 1n Battlecruiser", y, x)
                # (Line 96) trg.Shape_Dot(playerID, 1, "50 + 1n Battlecruiser", y, y);
                trg.Shape_Dot(playerID, 1, "50 + 1n Battlecruiser", y, y)
                # (Line 97) trg.Shape_Dot(playerID, 1, "50 + 1n Tank", x, x);
                trg.Shape_Dot(playerID, 1, "50 + 1n Tank", x, x)
                # (Line 98) trg.Shape_Dot(playerID, 1, "50 + 1n Tank", x, y);
                trg.Shape_Dot(playerID, 1, "50 + 1n Tank", x, y)
                # (Line 99) trg.Shape_Dot(playerID, 1, "50 + 1n Tank", y, x);
                trg.Shape_Dot(playerID, 1, "50 + 1n Tank", y, x)
                # (Line 100) trg.Shape_Dot(playerID, 1, "50 + 1n Tank", y, y);
                trg.Shape_Dot(playerID, 1, "50 + 1n Tank", y, y)
                # (Line 102) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 103) MoveUnit(All, "50 + 1n Tank", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 104) Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveUnit(All, "50 + 1n Tank", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                # (Line 105) Order("50 + 1n Tank", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 107) trg.Main_Wait(320);
                DoActions(Order("50 + 1n Tank", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(320)
                # (Line 109) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 110) }
                # (Line 111) else if (v.P_LoopMain[playerID] == 4)
            if EUDElseIf()(v.P_LoopMain[playerID] == 4):
                # (Line 112) {
                # (Line 113) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
                # (Line 115) trg.Shape_NxNSquare(playerID, 1, "40 + 1n Wraith", 4, 75);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                trg.Shape_NxNSquare(playerID, 1, "40 + 1n Wraith", 4, 75)
                # (Line 116) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 118) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 120) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 121) }
                # (Line 122) else if (v.P_LoopMain[playerID] == 5)
            if EUDElseIf()(v.P_LoopMain[playerID] == 5):
                # (Line 123) {
                # (Line 124) trg.Shape_NxNSquare(playerID, 1, "40 + 1n Guardian", 4, 75);
                trg.Shape_NxNSquare(playerID, 1, "40 + 1n Guardian", 4, 75)
                # (Line 125) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
                # (Line 127) trg.Main_Wait(320);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID))
                trg.Main_Wait(320)
                # (Line 129) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 130) }
                # (Line 131) else if (v.P_LoopMain[playerID] == 6)
            if EUDElseIf()(v.P_LoopMain[playerID] == 6):
                # (Line 132) {
                # (Line 133) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                # (Line 135) trg.Shape_NxNSquare(playerID, 1, " Unit. Hoffnung 25000", 4, 75);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                trg.Shape_NxNSquare(playerID, 1, " Unit. Hoffnung 25000", 4, 75)
                # (Line 136) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID);
                # (Line 138) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 140) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 141) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 142) }
                # (Line 143) }
            EUDEndIf()
            # (Line 144) else if (v.P_CountMain[playerID] == 1)
        if EUDElseIf()(v.P_CountMain[playerID] == 1):
            # (Line 145) {
            # (Line 146) trg.SkillEnd();
            trg.SkillEnd()
            # (Line 147) }
            # (Line 148) }
        EUDEndIf()
        # (Line 149) }
    EUDEndIf()
