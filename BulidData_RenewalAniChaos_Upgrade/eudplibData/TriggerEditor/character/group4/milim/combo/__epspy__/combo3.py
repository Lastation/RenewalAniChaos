## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import variable as v;
import variable as v
# (Line 2) import func.trig as trg;
from func import trig as trg
# (Line 4) import func.sound as s;
from func import sound as s
# (Line 6) function main(playerID)
# (Line 7) {
@EUDFunc
def f_main(playerID):
    # (Line 8) if (Switch("Unique - Milim", Cleared))
    if EUDIf()(Switch("Unique - Milim", Cleared)):
        # (Line 9) {
        # (Line 10) trg.Debuff_Stop();
        trg.Debuff_Stop()
        # (Line 11) }
        # (Line 12) trg.Debuff_BanReturn();
    EUDEndIf()
    trg.Debuff_BanReturn()
    # (Line 14) if (v.P_WaitMain[playerID] == 0)
    if EUDIf()(v.P_WaitMain[playerID] == 0):
        # (Line 15) {
        # (Line 16) if (v.P_CountMain[playerID] == 0)
        if EUDIf()(v.P_CountMain[playerID] == 0):
            # (Line 17) {
            # (Line 18) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 19) {
                # (Line 20) var x = 75;
                x = EUDVariable()
                x << (75)
                # (Line 21) var y = 125;
                y = EUDVariable()
                y << (125)
                # (Line 23) trg.Shape_Square(playerID, 1, "40 + 1n Mojo", x, y);
                trg.Shape_Square(playerID, 1, "40 + 1n Mojo", x, y)
                # (Line 24) trg.Shape_Square(playerID, 1, "40 + 1n Mojo", y, x);
                trg.Shape_Square(playerID, 1, "40 + 1n Mojo", y, x)
                # (Line 25) trg.Shape_Square(playerID, 1, " Unit. Hoffnung 25000", x, y);
                trg.Shape_Square(playerID, 1, " Unit. Hoffnung 25000", x, y)
                # (Line 26) trg.Shape_Square(playerID, 1, " Unit. Hoffnung 25000", y, x);
                trg.Shape_Square(playerID, 1, " Unit. Hoffnung 25000", y, x)
                # (Line 27) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID);
                # (Line 29) trg.Shape_Edge(playerID, 1, "Target", 45, 5, 100);
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID))
                trg.Shape_Edge(playerID, 1, "Target", 45, 5, 100)
                # (Line 30) KillUnitAt(All, "Target", "Anywhere", playerID);
                # (Line 32) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "Target", "Anywhere", playerID))
                # (Line 33) Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 35) trg.Main_Wait(80);
                DoActions(Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(80)
                # (Line 37) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 38) }
                # (Line 39) else if (v.P_LoopMain[playerID] == 1)
            if EUDElseIf()(v.P_LoopMain[playerID] == 1):
                # (Line 40) {
                # (Line 41) KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID);
                # (Line 43) var x = 125;
                DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID))
                x = EUDVariable()
                x << (125)
                # (Line 44) var y = 175;
                y = EUDVariable()
                y << (175)
                # (Line 46) trg.Shape_Square(playerID, 1, "40 + 1n Mojo", x, y);
                trg.Shape_Square(playerID, 1, "40 + 1n Mojo", x, y)
                # (Line 47) trg.Shape_Square(playerID, 1, "40 + 1n Mojo", y, x);
                trg.Shape_Square(playerID, 1, "40 + 1n Mojo", y, x)
                # (Line 48) trg.Shape_Square(playerID, 1, " Unit. Hoffnung 25000", x, y);
                trg.Shape_Square(playerID, 1, " Unit. Hoffnung 25000", x, y)
                # (Line 49) trg.Shape_Square(playerID, 1, " Unit. Hoffnung 25000", y, x);
                trg.Shape_Square(playerID, 1, " Unit. Hoffnung 25000", y, x)
                # (Line 50) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID);
                # (Line 52) trg.Shape_Edge(playerID, 1, "Target", 0, 5, 100);
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID))
                trg.Shape_Edge(playerID, 1, "Target", 0, 5, 100)
                # (Line 53) KillUnitAt(All, "Target", "Anywhere", playerID);
                # (Line 55) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "Target", "Anywhere", playerID))
                # (Line 56) Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 58) trg.Main_Wait(80);
                DoActions(Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(80)
                # (Line 60) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 61) }
                # (Line 62) else if (v.P_LoopMain[playerID] == 2)
            if EUDElseIf()(v.P_LoopMain[playerID] == 2):
                # (Line 63) {
                # (Line 64) KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID);
                # (Line 66) var x = 75;
                DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID))
                x = EUDVariable()
                x << (75)
                # (Line 67) var y = 125;
                y = EUDVariable()
                y << (125)
                # (Line 69) trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", x, y);
                trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", x, y)
                # (Line 70) trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", y, x);
                trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", y, x)
                # (Line 72) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);
                # (Line 74) x = 125;
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID))
                x << (125)
                # (Line 75) y = 175;
                y << (175)
                # (Line 77) trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", x, y);
                trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", x, y)
                # (Line 78) trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", y, x);
                trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", y, x)
                # (Line 80) trg.Shape_Edge(playerID, 1, "40 + 1n Wraith", 0, 5, 100);
                trg.Shape_Edge(playerID, 1, "40 + 1n Wraith", 0, 5, 100)
                # (Line 81) trg.Shape_Edge(playerID, 1, "40 + 1n Firebat", 0, 3, 100);
                trg.Shape_Edge(playerID, 1, "40 + 1n Firebat", 0, 3, 100)
                # (Line 83) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 84) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                # (Line 86) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID))
                # (Line 87) MoveUnit(All, "40 + 1n Firebat", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 88) Order("40 + 1n Firebat", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveUnit(All, "40 + 1n Firebat", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                # (Line 90) trg.Main_Wait(80);
                DoActions(Order("40 + 1n Firebat", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(80)
                # (Line 92) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 93) }
                # (Line 94) else if (v.P_LoopMain[playerID] < 7)
            if EUDElseIf()(v.P_LoopMain[playerID] >= 7, neg=True):
                # (Line 95) {
                # (Line 96) KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID);
                # (Line 98) trg.Shape_Line(playerID, 1, "40 + 1n Mojo", 45 * (v.P_LoopMain[playerID] % 4), 5, 64, 0);
                DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID))
                trg.Shape_Line(playerID, 1, "40 + 1n Mojo", 45 * (v.P_LoopMain[playerID] % 4), 5, 64, 0)
                # (Line 99) trg.Shape_Line(playerID, 1, "Protoss Dark Archon", 45 * (v.P_LoopMain[playerID] % 4), 5, 64, 0);
                trg.Shape_Line(playerID, 1, "Protoss Dark Archon", 45 * (v.P_LoopMain[playerID] % 4), 5, 64, 0)
                # (Line 100) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                # (Line 102) Order("40 + 1n Mojo", playerID, "Anywhere", Attack, "Anywhere");
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                # (Line 104) trg.Main_Wait(240);
                DoActions(Order("40 + 1n Mojo", playerID, "Anywhere", Attack, "Anywhere"))
                trg.Main_Wait(240)
                # (Line 106) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 107) }
                # (Line 108) else if (v.P_LoopMain[playerID] == 7)
            if EUDElseIf()(v.P_LoopMain[playerID] == 7):
                # (Line 109) {
                # (Line 110) KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID);
                # (Line 112) trg.Main_Wait(320);
                DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID))
                trg.Main_Wait(320)
                # (Line 114) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 115) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 116) }
                # (Line 117) }
            EUDEndIf()
            # (Line 118) else if (v.P_CountMain[playerID] == 1)
        if EUDElseIf()(v.P_CountMain[playerID] == 1):
            # (Line 119) {
            # (Line 120) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 121) {
                # (Line 122) trg.Table_Sin(playerID, 22, 75);
                trg.Table_Sin(playerID, 22, 75)
                # (Line 123) trg.Table_Cos(playerID, 22, 75);
                trg.Table_Cos(playerID, 22, 75)
                # (Line 125) trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", v.P_AngleCos[playerID], v.P_AngleSin[playerID])
                # (Line 126) trg.Shape_Square(playerID, 1, "60 + 1n Archon", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", v.P_AngleCos[playerID], v.P_AngleSin[playerID])
                # (Line 127) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                # (Line 129) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                # (Line 130) MoveUnit(All, "50 + 1n Tank", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 131) Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveUnit(All, "50 + 1n Tank", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                # (Line 133) trg.Main_Wait(160);
                DoActions(Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(160)
                # (Line 135) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 136) }
                # (Line 137) else if (v.P_LoopMain[playerID] == 1)
            if EUDElseIf()(v.P_LoopMain[playerID] == 1):
                # (Line 138) {
                # (Line 139) trg.Table_Sin(playerID, 67, 125);
                trg.Table_Sin(playerID, 67, 125)
                # (Line 140) trg.Table_Cos(playerID, 67, 125);
                trg.Table_Cos(playerID, 67, 125)
                # (Line 142) trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
                trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", v.P_AngleCos[playerID], v.P_AngleSin[playerID])
                # (Line 143) trg.Shape_Square(playerID, 1, "50 + 1n Tank", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", v.P_AngleCos[playerID], v.P_AngleSin[playerID])
                # (Line 144) KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID);
                # (Line 146) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID))
                # (Line 147) MoveUnit(All, "50 + 1n Tank", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 148) Order("50 + 1n Tank", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveUnit(All, "50 + 1n Tank", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                # (Line 150) trg.Main_Wait(160);
                DoActions(Order("50 + 1n Tank", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(160)
                # (Line 152) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 153) }
                # (Line 154) else if (v.P_LoopMain[playerID] == 2)
            if EUDElseIf()(v.P_LoopMain[playerID] == 2):
                # (Line 155) {
                # (Line 156) trg.Table_Sin(playerID, 22, 175);
                trg.Table_Sin(playerID, 22, 175)
                # (Line 157) trg.Table_Cos(playerID, 22, 175);
                trg.Table_Cos(playerID, 22, 175)
                # (Line 159) trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", v.P_AngleCos[playerID], v.P_AngleSin[playerID])
                # (Line 160) trg.Shape_Square(playerID, 1, "60 + 1n Archon", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", v.P_AngleCos[playerID], v.P_AngleSin[playerID])
                # (Line 161) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                # (Line 163) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                # (Line 164) MoveUnit(All, "50 + 1n Tank", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 165) Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveUnit(All, "50 + 1n Tank", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                # (Line 167) trg.Main_Wait(160);
                DoActions(Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(160)
                # (Line 169) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 170) }
                # (Line 171) else if (v.P_LoopMain[playerID] == 3)
            if EUDElseIf()(v.P_LoopMain[playerID] == 3):
                # (Line 172) {
                # (Line 173) trg.Table_Sin(playerID, 67, 225);
                trg.Table_Sin(playerID, 67, 225)
                # (Line 174) trg.Table_Cos(playerID, 67, 225);
                trg.Table_Cos(playerID, 67, 225)
                # (Line 176) trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
                trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", v.P_AngleCos[playerID], v.P_AngleSin[playerID])
                # (Line 177) trg.Shape_Square(playerID, 1, "50 + 1n Tank", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", v.P_AngleCos[playerID], v.P_AngleSin[playerID])
                # (Line 178) KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID);
                # (Line 180) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID))
                # (Line 181) MoveUnit(All, "50 + 1n Tank", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 182) Order("50 + 1n Tank", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveUnit(All, "50 + 1n Tank", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                # (Line 185) trg.Main_Wait(160);
                DoActions(Order("50 + 1n Tank", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(160)
                # (Line 187) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 188) }
                # (Line 189) else if (v.P_LoopMain[playerID] == 4)
            if EUDElseIf()(v.P_LoopMain[playerID] == 4):
                # (Line 190) {
                # (Line 191) trg.Main_Wait(480);
                trg.Main_Wait(480)
                # (Line 193) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 194) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 195) }
                # (Line 196) }
            EUDEndIf()
            # (Line 197) else if (v.P_CountMain[playerID] == 2)
        if EUDElseIf()(v.P_CountMain[playerID] == 2):
            # (Line 198) {
            # (Line 199) if (v.P_LoopMain[playerID] < 4)
            if EUDIf()(v.P_LoopMain[playerID] >= 4, neg=True):
                # (Line 200) {
                # (Line 201) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
                # (Line 203) RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                # (Line 205) trg.Table_Sin(playerID, 22 + 45 * (v.P_LoopMain[playerID] % 4), 75);
                DoActions(RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                trg.Table_Sin(playerID, 22 + 45 * (v.P_LoopMain[playerID] % 4), 75)
                # (Line 206) trg.Table_Cos(playerID, 22 + 45 * (v.P_LoopMain[playerID] % 4), 75);
                trg.Table_Cos(playerID, 22 + 45 * (v.P_LoopMain[playerID] % 4), 75)
                # (Line 208) trg.Shape_Square(playerID, 1, "40 + 1n Wraith", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
                trg.Shape_Square(playerID, 1, "40 + 1n Wraith", v.P_AngleCos[playerID], v.P_AngleSin[playerID])
                # (Line 209) trg.Shape_Square(playerID, 7, "40 + 1n Zealot", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
                trg.Shape_Square(playerID, 7, "40 + 1n Zealot", v.P_AngleCos[playerID], v.P_AngleSin[playerID])
                # (Line 210) KillUnitAt(All, "40 + 1n Zealot", "Anywhere", playerID);
                # (Line 212) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "40 + 1n Zealot", "Anywhere", playerID))
                # (Line 213) Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 215) trg.Main_Wait(160);
                DoActions(Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(160)
                # (Line 217) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 218) }
                # (Line 219) else if (v.P_LoopMain[playerID] < 8)
            if EUDElseIf()(v.P_LoopMain[playerID] >= 8, neg=True):
                # (Line 220) {
                # (Line 221) RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 223) trg.Table_Sin(playerID, 22 + 22 * (v.P_LoopMain[playerID] % 4), 225);
                DoActions(RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                trg.Table_Sin(playerID, 22 + 22 * (v.P_LoopMain[playerID] % 4), 225)
                # (Line 224) trg.Table_Cos(playerID, 22 + 22 * (v.P_LoopMain[playerID] % 4), 225);
                trg.Table_Cos(playerID, 22 + 22 * (v.P_LoopMain[playerID] % 4), 225)
                # (Line 226) trg.Shape_Square(playerID, 1, "80 + 1n Tank", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
                trg.Shape_Square(playerID, 1, "80 + 1n Tank", v.P_AngleCos[playerID], v.P_AngleSin[playerID])
                # (Line 227) KillUnitAt(All, "80 + 1n Tank", "Anywhere", playerID);
                # (Line 229) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "80 + 1n Tank", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 231) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 232) }
                # (Line 233) else if (v.P_LoopMain[playerID] < 12)
            if EUDElseIf()(v.P_LoopMain[playerID] >= 12, neg=True):
                # (Line 234) {
                # (Line 235) RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 237) trg.Table_Sin(playerID, 22 + 22 * (v.P_LoopMain[playerID] % 4), 225);
                DoActions(RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                trg.Table_Sin(playerID, 22 + 22 * (v.P_LoopMain[playerID] % 4), 225)
                # (Line 238) trg.Table_Cos(playerID, 22 + 22 * (v.P_LoopMain[playerID] % 4), 225);
                trg.Table_Cos(playerID, 22 + 22 * (v.P_LoopMain[playerID] % 4), 225)
                # (Line 240) trg.Shape_Square(playerID, 1, "40 + 1n Wraith", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
                trg.Shape_Square(playerID, 1, "40 + 1n Wraith", v.P_AngleCos[playerID], v.P_AngleSin[playerID])
                # (Line 241) trg.Shape_Square(playerID, 1, " Unit. Hoffnung 25000", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
                trg.Shape_Square(playerID, 1, " Unit. Hoffnung 25000", v.P_AngleCos[playerID], v.P_AngleSin[playerID])
                # (Line 242) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID);
                # (Line 244) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID))
                # (Line 245) Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 247) trg.Main_Wait(80);
                DoActions(Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(80)
                # (Line 249) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 250) }
                # (Line 251) else if (v.P_LoopMain[playerID] == 12)
            if EUDElseIf()(v.P_LoopMain[playerID] == 12):
                # (Line 252) {
                # (Line 253) RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 255) trg.Main_Wait(640);
                DoActions(RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                trg.Main_Wait(640)
                # (Line 257) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 258) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 259) }
                # (Line 260) }
            EUDEndIf()
            # (Line 261) else if (v.P_CountMain[playerID] == 3)
        if EUDElseIf()(v.P_CountMain[playerID] == 3):
            # (Line 262) {
            # (Line 263) KillUnitAt(All, "40 + 1n Firebat", "Anywhere", playerID);
            # (Line 264) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
            DoActions(KillUnitAt(All, "40 + 1n Firebat", "Anywhere", playerID))
            # (Line 265) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
            DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
            # (Line 267) trg.SkillEnd();
            DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
            trg.SkillEnd()
            # (Line 268) }
            # (Line 269) }
        EUDEndIf()
        # (Line 270) }
    EUDEndIf()
