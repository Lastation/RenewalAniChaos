## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import variable as v;
import variable as v
# (Line 2) import func.trig as trg;
from func import trig as trg
# (Line 4) import func.sound as s;
from func import sound as s
# (Line 6) function main(playerID)
# (Line 7) {
@EUDFunc
def f_main(playerID):
    # (Line 8) if (v.P_WaitMain[playerID] == 0)
    if EUDIf()(v.P_WaitMain[playerID] == 0):
        # (Line 9) {
        # (Line 10) if (v.P_CountMain[playerID] == 0)
        if EUDIf()(v.P_CountMain[playerID] == 0):
            # (Line 11) {
            # (Line 12) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 13) {
                # (Line 14) var x = 50;
                x = EUDVariable()
                x << (50)
                # (Line 15) var y = 100;
                y = EUDVariable()
                y << (100)
                # (Line 16) var x2 = 100;
                x2 = EUDVariable()
                x2 << (100)
                # (Line 17) var y2 = 150;
                y2 = EUDVariable()
                y2 << (150)
                # (Line 19) trg.Shape_Dot(playerID, 1, "40 + 1n Guardian", x, y);
                trg.Shape_Dot(playerID, 1, "40 + 1n Guardian", x, y)
                # (Line 20) trg.Shape_Dot(playerID, 1, "40 + 1n Guardian", y, x);
                trg.Shape_Dot(playerID, 1, "40 + 1n Guardian", y, x)
                # (Line 21) trg.Shape_Dot(playerID, 1, "40 + 1n Guardian", -x, -y);
                trg.Shape_Dot(playerID, 1, "40 + 1n Guardian", -x, -y)
                # (Line 22) trg.Shape_Dot(playerID, 1, "40 + 1n Guardian", -y, -x);
                trg.Shape_Dot(playerID, 1, "40 + 1n Guardian", -y, -x)
                # (Line 23) trg.Shape_Dot(playerID, 1, "Kakaru (Twilight)", x2, y2);
                trg.Shape_Dot(playerID, 1, "Kakaru (Twilight)", x2, y2)
                # (Line 24) trg.Shape_Dot(playerID, 1, "Kakaru (Twilight)", y2, x2);
                trg.Shape_Dot(playerID, 1, "Kakaru (Twilight)", y2, x2)
                # (Line 25) trg.Shape_Dot(playerID, 1, "Kakaru (Twilight)", -x2, -y2);
                trg.Shape_Dot(playerID, 1, "Kakaru (Twilight)", -x2, -y2)
                # (Line 26) trg.Shape_Dot(playerID, 1, "Kakaru (Twilight)", -y2, -x2);
                trg.Shape_Dot(playerID, 1, "Kakaru (Twilight)", -y2, -x2)
                # (Line 28) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
                # (Line 29) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID))
                # (Line 31) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 32) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 33) }
                # (Line 34) else if (v.P_LoopMain[playerID] == 1)
            if EUDElseIf()(v.P_LoopMain[playerID] == 1):
                # (Line 35) {
                # (Line 36) var x = 50;
                x = EUDVariable()
                x << (50)
                # (Line 37) var y = 100;
                y = EUDVariable()
                y << (100)
                # (Line 38) var x2 = 100;
                x2 = EUDVariable()
                x2 << (100)
                # (Line 39) var y2 = 150;
                y2 = EUDVariable()
                y2 << (150)
                # (Line 41) trg.Shape_Dot(playerID, 1, "40 + 1n Wraith", x, y);
                trg.Shape_Dot(playerID, 1, "40 + 1n Wraith", x, y)
                # (Line 42) trg.Shape_Dot(playerID, 1, "40 + 1n Wraith", y, x);
                trg.Shape_Dot(playerID, 1, "40 + 1n Wraith", y, x)
                # (Line 43) trg.Shape_Dot(playerID, 1, "40 + 1n Wraith", -x, -y);
                trg.Shape_Dot(playerID, 1, "40 + 1n Wraith", -x, -y)
                # (Line 44) trg.Shape_Dot(playerID, 1, "40 + 1n Wraith", -y, -x);
                trg.Shape_Dot(playerID, 1, "40 + 1n Wraith", -y, -x)
                # (Line 45) trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", x2, y2);
                trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", x2, y2)
                # (Line 46) trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", y2, x2);
                trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", y2, x2)
                # (Line 47) trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", -x2, -y2);
                trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", -x2, -y2)
                # (Line 48) trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", -y2, -x2);
                trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", -y2, -x2)
                # (Line 50) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                # (Line 52) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                # (Line 53) Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 55) trg.Main_Wait(80);
                DoActions(Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(80)
                # (Line 56) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 57) }
                # (Line 58) else if (v.P_LoopMain[playerID] == 2)
            if EUDElseIf()(v.P_LoopMain[playerID] == 2):
                # (Line 59) {
                # (Line 60) trg.Shape_Square(playerID, 1, "Target", 50, 0);
                trg.Shape_Square(playerID, 1, "Target", 50, 0)
                # (Line 61) trg.Shape_Square(playerID, 1, "Target", 100, 0);
                trg.Shape_Square(playerID, 1, "Target", 100, 0)
                # (Line 63) KillUnitAt(All, "Target", "Anywhere", playerID);
                # (Line 65) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "Target", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 66) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 67) }
                # (Line 68) else if (v.P_LoopMain[playerID] == 3)
            if EUDElseIf()(v.P_LoopMain[playerID] == 3):
                # (Line 69) {
                # (Line 70) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 72) var x = -50;
                DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                x = EUDVariable()
                x << (-50)
                # (Line 73) var y = 100;
                y = EUDVariable()
                y << (100)
                # (Line 74) var x2 = -100;
                x2 = EUDVariable()
                x2 << (-100)
                # (Line 75) var y2 = 150;
                y2 = EUDVariable()
                y2 << (150)
                # (Line 77) trg.Shape_Dot(playerID, 1, "40 + 1n Guardian", x, y);
                trg.Shape_Dot(playerID, 1, "40 + 1n Guardian", x, y)
                # (Line 78) trg.Shape_Dot(playerID, 1, "40 + 1n Guardian", y, x);
                trg.Shape_Dot(playerID, 1, "40 + 1n Guardian", y, x)
                # (Line 79) trg.Shape_Dot(playerID, 1, "40 + 1n Guardian", -x, -y);
                trg.Shape_Dot(playerID, 1, "40 + 1n Guardian", -x, -y)
                # (Line 80) trg.Shape_Dot(playerID, 1, "40 + 1n Guardian", -y, -x);
                trg.Shape_Dot(playerID, 1, "40 + 1n Guardian", -y, -x)
                # (Line 81) trg.Shape_Dot(playerID, 1, "Kakaru (Twilight)", x2, y2);
                trg.Shape_Dot(playerID, 1, "Kakaru (Twilight)", x2, y2)
                # (Line 82) trg.Shape_Dot(playerID, 1, "Kakaru (Twilight)", y2, x2);
                trg.Shape_Dot(playerID, 1, "Kakaru (Twilight)", y2, x2)
                # (Line 83) trg.Shape_Dot(playerID, 1, "Kakaru (Twilight)", -x2, -y2);
                trg.Shape_Dot(playerID, 1, "Kakaru (Twilight)", -x2, -y2)
                # (Line 84) trg.Shape_Dot(playerID, 1, "Kakaru (Twilight)", -y2, -x2);
                trg.Shape_Dot(playerID, 1, "Kakaru (Twilight)", -y2, -x2)
                # (Line 86) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
                # (Line 87) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID))
                # (Line 89) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 90) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 91) }
                # (Line 92) else if (v.P_LoopMain[playerID] == 4)
            if EUDElseIf()(v.P_LoopMain[playerID] == 4):
                # (Line 93) {
                # (Line 94) var x = -50;
                x = EUDVariable()
                x << (-50)
                # (Line 95) var y = 100;
                y = EUDVariable()
                y << (100)
                # (Line 96) var x2 = -100;
                x2 = EUDVariable()
                x2 << (-100)
                # (Line 97) var y2 = 150;
                y2 = EUDVariable()
                y2 << (150)
                # (Line 99) trg.Shape_Dot(playerID, 1, "40 + 1n Wraith", x, y);
                trg.Shape_Dot(playerID, 1, "40 + 1n Wraith", x, y)
                # (Line 100) trg.Shape_Dot(playerID, 1, "40 + 1n Wraith", y, x);
                trg.Shape_Dot(playerID, 1, "40 + 1n Wraith", y, x)
                # (Line 101) trg.Shape_Dot(playerID, 1, "40 + 1n Wraith", -x, -y);
                trg.Shape_Dot(playerID, 1, "40 + 1n Wraith", -x, -y)
                # (Line 102) trg.Shape_Dot(playerID, 1, "40 + 1n Wraith", -y, -x);
                trg.Shape_Dot(playerID, 1, "40 + 1n Wraith", -y, -x)
                # (Line 103) trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", x2, y2);
                trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", x2, y2)
                # (Line 104) trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", y2, x2);
                trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", y2, x2)
                # (Line 105) trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", -x2, -y2);
                trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", -x2, -y2)
                # (Line 106) trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", -y2, -x2);
                trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", -y2, -x2)
                # (Line 108) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                # (Line 110) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                # (Line 111) Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 113) trg.Main_Wait(80);
                DoActions(Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(80)
                # (Line 114) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 115) }
                # (Line 116) else if (v.P_LoopMain[playerID] == 5)
            if EUDElseIf()(v.P_LoopMain[playerID] == 5):
                # (Line 117) {
                # (Line 118) trg.Shape_Square(playerID, 1, "Target", 30, 30);
                trg.Shape_Square(playerID, 1, "Target", 30, 30)
                # (Line 119) trg.Shape_Square(playerID, 1, "Target", 60, 60);
                trg.Shape_Square(playerID, 1, "Target", 60, 60)
                # (Line 121) KillUnitAt(All, "Target", "Anywhere", playerID);
                # (Line 123) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "Target", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 124) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 125) }
                # (Line 126) else if (v.P_LoopMain[playerID] == 6)
            if EUDElseIf()(v.P_LoopMain[playerID] == 6):
                # (Line 127) {
                # (Line 128) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 130) trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 50, 100);
                DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 50, 100)
                # (Line 131) trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 100, 50);
                trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 100, 50)
                # (Line 132) trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 150, 0);
                trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 150, 0)
                # (Line 133) KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID);
                # (Line 135) trg.Shape_Square(playerID, 1, "40 + 1n Goliath", 100, 50);
                DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID))
                trg.Shape_Square(playerID, 1, "40 + 1n Goliath", 100, 50)
                # (Line 136) trg.Shape_Square(playerID, 1, "40 + 1n Goliath", 50, 100);
                trg.Shape_Square(playerID, 1, "40 + 1n Goliath", 50, 100)
                # (Line 137) KillUnitAt(All, "40 + 1n Goliath", "Anywhere", playerID);
                # (Line 139) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "40 + 1n Goliath", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 140) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 141) }
                # (Line 142) else if (v.P_LoopMain[playerID] == 7)
            if EUDElseIf()(v.P_LoopMain[playerID] == 7):
                # (Line 143) {
                # (Line 144) trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", 50, 100);
                trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", 50, 100)
                # (Line 145) trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", 100, 50);
                trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", 100, 50)
                # (Line 146) trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", 150, 0);
                trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", 150, 0)
                # (Line 147) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);
                # (Line 149) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 150) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 151) }
                # (Line 152) else if (v.P_LoopMain[playerID] == 8)
            if EUDElseIf()(v.P_LoopMain[playerID] == 8):
                # (Line 153) {
                # (Line 154) trg.Shape_NxNSquare(playerID, 1, "50 + 1n Battlecruiser", 3, 75);
                trg.Shape_NxNSquare(playerID, 1, "50 + 1n Battlecruiser", 3, 75)
                # (Line 155) Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, "Anywhere");
                # (Line 157) trg.Main_Wait(320);
                DoActions(Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, "Anywhere"))
                trg.Main_Wait(320)
                # (Line 158) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 159) }
                # (Line 160) else if (v.P_LoopMain[playerID] == 9)
            if EUDElseIf()(v.P_LoopMain[playerID] == 9):
                # (Line 161) {
                # (Line 162) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
                # (Line 164) trg.Main_Wait(240);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                trg.Main_Wait(240)
                # (Line 166) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 167) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 168) }
                # (Line 169) }
            EUDEndIf()
            # (Line 170) else if (v.P_CountMain[playerID] == 1)
        if EUDElseIf()(v.P_CountMain[playerID] == 1):
            # (Line 171) {
            # (Line 172) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 173) {
                # (Line 174) var x = 50;
                x = EUDVariable()
                x << (50)
                # (Line 175) var y = 100;
                y = EUDVariable()
                y << (100)
                # (Line 176) var x2 = 100;
                x2 = EUDVariable()
                x2 << (100)
                # (Line 177) var y2 = 150;
                y2 = EUDVariable()
                y2 << (150)
                # (Line 179) trg.Shape_Dot(playerID, 1, "40 + 1n Guardian", x, y);
                trg.Shape_Dot(playerID, 1, "40 + 1n Guardian", x, y)
                # (Line 180) trg.Shape_Dot(playerID, 1, "40 + 1n Guardian", y, x);
                trg.Shape_Dot(playerID, 1, "40 + 1n Guardian", y, x)
                # (Line 181) trg.Shape_Dot(playerID, 1, "40 + 1n Guardian", -x, -y);
                trg.Shape_Dot(playerID, 1, "40 + 1n Guardian", -x, -y)
                # (Line 182) trg.Shape_Dot(playerID, 1, "40 + 1n Guardian", -y, -x);
                trg.Shape_Dot(playerID, 1, "40 + 1n Guardian", -y, -x)
                # (Line 183) trg.Shape_Dot(playerID, 1, "Kakaru (Twilight)", x2, y2);
                trg.Shape_Dot(playerID, 1, "Kakaru (Twilight)", x2, y2)
                # (Line 184) trg.Shape_Dot(playerID, 1, "Kakaru (Twilight)", y2, x2);
                trg.Shape_Dot(playerID, 1, "Kakaru (Twilight)", y2, x2)
                # (Line 185) trg.Shape_Dot(playerID, 1, "Kakaru (Twilight)", -x2, -y2);
                trg.Shape_Dot(playerID, 1, "Kakaru (Twilight)", -x2, -y2)
                # (Line 186) trg.Shape_Dot(playerID, 1, "Kakaru (Twilight)", -y2, -x2);
                trg.Shape_Dot(playerID, 1, "Kakaru (Twilight)", -y2, -x2)
                # (Line 188) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
                # (Line 189) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID))
                # (Line 191) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 192) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 193) }
                # (Line 194) else if (v.P_LoopMain[playerID] == 1)
            if EUDElseIf()(v.P_LoopMain[playerID] == 1):
                # (Line 195) {
                # (Line 196) var x = 50;
                x = EUDVariable()
                x << (50)
                # (Line 197) var y = 100;
                y = EUDVariable()
                y << (100)
                # (Line 198) var x2 = 100;
                x2 = EUDVariable()
                x2 << (100)
                # (Line 199) var y2 = 150;
                y2 = EUDVariable()
                y2 << (150)
                # (Line 201) trg.Shape_Dot(playerID, 1, "40 + 1n Wraith", x, y);
                trg.Shape_Dot(playerID, 1, "40 + 1n Wraith", x, y)
                # (Line 202) trg.Shape_Dot(playerID, 1, "40 + 1n Wraith", y, x);
                trg.Shape_Dot(playerID, 1, "40 + 1n Wraith", y, x)
                # (Line 203) trg.Shape_Dot(playerID, 1, "40 + 1n Wraith", -x, -y);
                trg.Shape_Dot(playerID, 1, "40 + 1n Wraith", -x, -y)
                # (Line 204) trg.Shape_Dot(playerID, 1, "40 + 1n Wraith", -y, -x);
                trg.Shape_Dot(playerID, 1, "40 + 1n Wraith", -y, -x)
                # (Line 205) trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", x2, y2);
                trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", x2, y2)
                # (Line 206) trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", y2, x2);
                trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", y2, x2)
                # (Line 207) trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", -x2, -y2);
                trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", -x2, -y2)
                # (Line 208) trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", -y2, -x2);
                trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", -y2, -x2)
                # (Line 210) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                # (Line 212) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                # (Line 213) Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 215) trg.Main_Wait(80);
                DoActions(Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(80)
                # (Line 216) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 217) }
                # (Line 218) else if (v.P_LoopMain[playerID] == 2)
            if EUDElseIf()(v.P_LoopMain[playerID] == 2):
                # (Line 219) {
                # (Line 220) trg.Shape_Square(playerID, 1, "Target", 50, 0);
                trg.Shape_Square(playerID, 1, "Target", 50, 0)
                # (Line 221) trg.Shape_Square(playerID, 1, "Target", 100, 0);
                trg.Shape_Square(playerID, 1, "Target", 100, 0)
                # (Line 223) KillUnitAt(All, "Target", "Anywhere", playerID);
                # (Line 225) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "Target", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 226) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 227) }
                # (Line 228) else if (v.P_LoopMain[playerID] == 3)
            if EUDElseIf()(v.P_LoopMain[playerID] == 3):
                # (Line 229) {
                # (Line 230) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 232) var x = -50;
                DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                x = EUDVariable()
                x << (-50)
                # (Line 233) var y = 100;
                y = EUDVariable()
                y << (100)
                # (Line 234) var x2 = -100;
                x2 = EUDVariable()
                x2 << (-100)
                # (Line 235) var y2 = 150;
                y2 = EUDVariable()
                y2 << (150)
                # (Line 237) trg.Shape_Dot(playerID, 1, "40 + 1n Guardian", x, y);
                trg.Shape_Dot(playerID, 1, "40 + 1n Guardian", x, y)
                # (Line 238) trg.Shape_Dot(playerID, 1, "40 + 1n Guardian", y, x);
                trg.Shape_Dot(playerID, 1, "40 + 1n Guardian", y, x)
                # (Line 239) trg.Shape_Dot(playerID, 1, "40 + 1n Guardian", -x, -y);
                trg.Shape_Dot(playerID, 1, "40 + 1n Guardian", -x, -y)
                # (Line 240) trg.Shape_Dot(playerID, 1, "40 + 1n Guardian", -y, -x);
                trg.Shape_Dot(playerID, 1, "40 + 1n Guardian", -y, -x)
                # (Line 241) trg.Shape_Dot(playerID, 1, "Kakaru (Twilight)", x2, y2);
                trg.Shape_Dot(playerID, 1, "Kakaru (Twilight)", x2, y2)
                # (Line 242) trg.Shape_Dot(playerID, 1, "Kakaru (Twilight)", y2, x2);
                trg.Shape_Dot(playerID, 1, "Kakaru (Twilight)", y2, x2)
                # (Line 243) trg.Shape_Dot(playerID, 1, "Kakaru (Twilight)", -x2, -y2);
                trg.Shape_Dot(playerID, 1, "Kakaru (Twilight)", -x2, -y2)
                # (Line 244) trg.Shape_Dot(playerID, 1, "Kakaru (Twilight)", -y2, -x2);
                trg.Shape_Dot(playerID, 1, "Kakaru (Twilight)", -y2, -x2)
                # (Line 246) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
                # (Line 247) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID))
                # (Line 249) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 250) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 251) }
                # (Line 252) else if (v.P_LoopMain[playerID] == 4)
            if EUDElseIf()(v.P_LoopMain[playerID] == 4):
                # (Line 253) {
                # (Line 254) var x = -50;
                x = EUDVariable()
                x << (-50)
                # (Line 255) var y = 100;
                y = EUDVariable()
                y << (100)
                # (Line 256) var x2 = -100;
                x2 = EUDVariable()
                x2 << (-100)
                # (Line 257) var y2 = 150;
                y2 = EUDVariable()
                y2 << (150)
                # (Line 259) trg.Shape_Dot(playerID, 1, "40 + 1n Wraith", x, y);
                trg.Shape_Dot(playerID, 1, "40 + 1n Wraith", x, y)
                # (Line 260) trg.Shape_Dot(playerID, 1, "40 + 1n Wraith", y, x);
                trg.Shape_Dot(playerID, 1, "40 + 1n Wraith", y, x)
                # (Line 261) trg.Shape_Dot(playerID, 1, "40 + 1n Wraith", -x, -y);
                trg.Shape_Dot(playerID, 1, "40 + 1n Wraith", -x, -y)
                # (Line 262) trg.Shape_Dot(playerID, 1, "40 + 1n Wraith", -y, -x);
                trg.Shape_Dot(playerID, 1, "40 + 1n Wraith", -y, -x)
                # (Line 263) trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", x2, y2);
                trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", x2, y2)
                # (Line 264) trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", y2, x2);
                trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", y2, x2)
                # (Line 265) trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", -x2, -y2);
                trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", -x2, -y2)
                # (Line 266) trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", -y2, -x2);
                trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", -y2, -x2)
                # (Line 268) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                # (Line 270) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                # (Line 271) Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 273) trg.Main_Wait(80);
                DoActions(Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(80)
                # (Line 274) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 275) }
                # (Line 276) else if (v.P_LoopMain[playerID] == 5)
            if EUDElseIf()(v.P_LoopMain[playerID] == 5):
                # (Line 277) {
                # (Line 278) trg.Shape_Square(playerID, 1, "Target", 30, 30);
                trg.Shape_Square(playerID, 1, "Target", 30, 30)
                # (Line 279) trg.Shape_Square(playerID, 1, "Target", 60, 60);
                trg.Shape_Square(playerID, 1, "Target", 60, 60)
                # (Line 281) KillUnitAt(All, "Target", "Anywhere", playerID);
                # (Line 283) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "Target", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 284) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 285) }
                # (Line 286) else if (v.P_LoopMain[playerID] == 6)
            if EUDElseIf()(v.P_LoopMain[playerID] == 6):
                # (Line 287) {
                # (Line 288) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 290) trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 50, 100);
                DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 50, 100)
                # (Line 291) trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 100, 50);
                trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 100, 50)
                # (Line 292) trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 150, 0);
                trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 150, 0)
                # (Line 293) KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID);
                # (Line 295) trg.Shape_Square(playerID, 1, "40 + 1n Goliath", 100, 50);
                DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID))
                trg.Shape_Square(playerID, 1, "40 + 1n Goliath", 100, 50)
                # (Line 296) trg.Shape_Square(playerID, 1, "40 + 1n Goliath", 50, 100);
                trg.Shape_Square(playerID, 1, "40 + 1n Goliath", 50, 100)
                # (Line 297) KillUnitAt(All, "40 + 1n Goliath", "Anywhere", playerID);
                # (Line 299) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "40 + 1n Goliath", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 300) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 301) }
                # (Line 302) else if (v.P_LoopMain[playerID] == 7)
            if EUDElseIf()(v.P_LoopMain[playerID] == 7):
                # (Line 303) {
                # (Line 304) trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", 50, 100);
                trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", 50, 100)
                # (Line 305) trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", 100, 50);
                trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", 100, 50)
                # (Line 306) trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", 150, 0);
                trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", 150, 0)
                # (Line 307) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);
                # (Line 309) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 310) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 311) }
                # (Line 312) else if (v.P_LoopMain[playerID] == 8)
            if EUDElseIf()(v.P_LoopMain[playerID] == 8):
                # (Line 313) {
                # (Line 314) trg.Shape_NxNSquare(playerID, 1, "50 + 1n Battlecruiser", 3, 75);
                trg.Shape_NxNSquare(playerID, 1, "50 + 1n Battlecruiser", 3, 75)
                # (Line 315) Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, "Anywhere");
                # (Line 317) trg.Main_Wait(320);
                DoActions(Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, "Anywhere"))
                trg.Main_Wait(320)
                # (Line 318) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 319) }
                # (Line 320) else if (v.P_LoopMain[playerID] == 9)
            if EUDElseIf()(v.P_LoopMain[playerID] == 9):
                # (Line 321) {
                # (Line 322) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
                # (Line 324) trg.Main_Wait(240);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                trg.Main_Wait(240)
                # (Line 326) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 327) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 328) }
                # (Line 329) }
            EUDEndIf()
            # (Line 330) else if (v.P_CountMain[playerID] == 2)
        if EUDElseIf()(v.P_CountMain[playerID] == 2):
            # (Line 331) {
            # (Line 332) trg.SkillEnd();
            trg.SkillEnd()
            # (Line 333) }
            # (Line 334) }
        EUDEndIf()
        # (Line 335) }
    EUDEndIf()
