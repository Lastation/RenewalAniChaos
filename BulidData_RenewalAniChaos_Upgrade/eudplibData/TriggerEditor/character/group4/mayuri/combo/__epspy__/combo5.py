## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import PluginVariables as msqcvar;
import PluginVariables as msqcvar
# (Line 2) import variable as v;
import variable as v
# (Line 3) import func.trig as trg;
from func import trig as trg
# (Line 4) import func.sound as s;
from func import sound as s
# (Line 6) function main(playerID)
# (Line 7) {
@EUDFunc
def f_main(playerID):
    # (Line 8) trg.Buff_ShieldFix(1);
    trg.Buff_ShieldFix(1)
    # (Line 10) if (v.P_WaitMain[playerID] == 0)
    if EUDIf()(v.P_WaitMain[playerID] == 0):
        # (Line 11) {
        # (Line 12) if (v.P_CountMain[playerID] == 0)
        if EUDIf()(v.P_CountMain[playerID] == 0):
            # (Line 13) {
            # (Line 14) if (v.P_LoopMain[playerID] < 8)
            if EUDIf()(v.P_LoopMain[playerID] >= 8, neg=True):
                # (Line 15) {
                # (Line 16) SetDeaths(playerID, SetTo, 1, " `ShieldRecharge");
                # (Line 18) if (v.P_LoopMain[playerID] % 2 == 0)
                DoActions(SetDeaths(playerID, SetTo, 1, " `ShieldRecharge"))
                if EUDIf()(v.P_LoopMain[playerID] % 2 == 0):
                    # (Line 19) {
                    # (Line 20) KillUnitAt(All, " Creep. Dunkelheit", "Anywhere", playerID);
                    # (Line 21) KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID);
                    DoActions(KillUnitAt(All, " Creep. Dunkelheit", "Anywhere", playerID))
                    # (Line 23) trg.Table_Sin(playerID, (45 * v.P_LoopMain[playerID] + 22), 100);
                    DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID))
                    trg.Table_Sin(playerID, (45 * v.P_LoopMain[playerID] + 22), 100)
                    # (Line 24) trg.Table_Cos(playerID, (45 * v.P_LoopMain[playerID] + 22), 100);
                    trg.Table_Cos(playerID, (45 * v.P_LoopMain[playerID] + 22), 100)
                    # (Line 26) trg.Shape_Dot(playerID, 1, "40 + 1n Wraith", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
                    trg.Shape_Dot(playerID, 1, "40 + 1n Wraith", v.P_AngleCos[playerID], v.P_AngleSin[playerID])
                    # (Line 27) trg.Shape_Dot(playerID, 1, "40 + 1n Wraith", -v.P_AngleCos[playerID], -v.P_AngleSin[playerID]);
                    trg.Shape_Dot(playerID, 1, "40 + 1n Wraith", -v.P_AngleCos[playerID], -v.P_AngleSin[playerID])
                    # (Line 28) trg.Shape_Dot(playerID, 1, "40 + 1n Zealot", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
                    trg.Shape_Dot(playerID, 1, "40 + 1n Zealot", v.P_AngleCos[playerID], v.P_AngleSin[playerID])
                    # (Line 29) trg.Shape_Dot(playerID, 1, "40 + 1n Zealot", -v.P_AngleCos[playerID], -v.P_AngleSin[playerID]);
                    trg.Shape_Dot(playerID, 1, "40 + 1n Zealot", -v.P_AngleCos[playerID], -v.P_AngleSin[playerID])
                    # (Line 30) trg.Shape_Dot(playerID, 1, "Target", -v.P_AngleSin[playerID], v.P_AngleCos[playerID]);
                    trg.Shape_Dot(playerID, 1, "Target", -v.P_AngleSin[playerID], v.P_AngleCos[playerID])
                    # (Line 31) trg.Shape_Dot(playerID, 1, "Target", v.P_AngleSin[playerID], -v.P_AngleCos[playerID]);
                    trg.Shape_Dot(playerID, 1, "Target", v.P_AngleSin[playerID], -v.P_AngleCos[playerID])
                    # (Line 32) trg.Shape_Dot(playerID, 1, " Creep. Dunkelheit", -v.P_AngleSin[playerID], v.P_AngleCos[playerID]);
                    trg.Shape_Dot(playerID, 1, " Creep. Dunkelheit", -v.P_AngleSin[playerID], v.P_AngleCos[playerID])
                    # (Line 33) trg.Shape_Dot(playerID, 1, " Creep. Dunkelheit", v.P_AngleSin[playerID], -v.P_AngleCos[playerID]);
                    trg.Shape_Dot(playerID, 1, " Creep. Dunkelheit", v.P_AngleSin[playerID], -v.P_AngleCos[playerID])
                    # (Line 35) trg.Shape_Edge(playerID, 1, "60 + 1n High Templar", 0, 7, 150);
                    trg.Shape_Edge(playerID, 1, "60 + 1n High Templar", 0, 7, 150)
                    # (Line 36) KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID);
                    # (Line 38) trg.Table_Sin(playerID, (22 * v.P_LoopMain[playerID] + 22), 50 * (v.P_LoopMain[playerID] / 2) + 50);
                    DoActions(KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID))
                    trg.Table_Sin(playerID, (22 * v.P_LoopMain[playerID] + 22), 50 * (v.P_LoopMain[playerID] // 2) + 50)
                    # (Line 39) trg.Table_Cos(playerID, (22 * v.P_LoopMain[playerID] + 22), 50 * (v.P_LoopMain[playerID] / 2) + 50);
                    trg.Table_Cos(playerID, (22 * v.P_LoopMain[playerID] + 22), 50 * (v.P_LoopMain[playerID] // 2) + 50)
                    # (Line 41) trg.Shape_Square(playerID, 1, "60 + 1n Siege", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
                    trg.Shape_Square(playerID, 1, "60 + 1n Siege", v.P_AngleCos[playerID], v.P_AngleSin[playerID])
                    # (Line 42) trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
                    trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", v.P_AngleCos[playerID], v.P_AngleSin[playerID])
                    # (Line 44) KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID);
                    # (Line 45) KillUnitAt(All, "40 + 1n Zealot", "Anywhere", playerID);
                    DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID))
                    # (Line 46) KillUnitAt(All, "Target", "Anywhere", playerID);
                    DoActions(KillUnitAt(All, "40 + 1n Zealot", "Anywhere", playerID))
                    # (Line 48) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                    DoActions(KillUnitAt(All, "Target", "Anywhere", playerID))
                    # (Line 49) MoveUnit(All, " Creep. Dunkelheit", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                    DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                    # (Line 50) Order(" Creep. Dunkelheit", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                    DoActions(MoveUnit(All, " Creep. Dunkelheit", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                    # (Line 51) Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                    DoActions(Order(" Creep. Dunkelheit", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                    # (Line 53) }
                    DoActions(Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                    # (Line 54) else
                    # (Line 55) {
                if EUDElse()():
                    # (Line 56) KillUnitAt(All, " Creep. Dunkelheit", "Anywhere", playerID);
                    # (Line 57) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                    DoActions(KillUnitAt(All, " Creep. Dunkelheit", "Anywhere", playerID))
                    # (Line 59) trg.Table_Sin(playerID, (45 * v.P_LoopMain[playerID] + 112), 100);
                    DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                    trg.Table_Sin(playerID, (45 * v.P_LoopMain[playerID] + 112), 100)
                    # (Line 60) trg.Table_Cos(playerID, (45 * v.P_LoopMain[playerID] + 112), 100);
                    trg.Table_Cos(playerID, (45 * v.P_LoopMain[playerID] + 112), 100)
                    # (Line 62) trg.Shape_Dot(playerID, 1, "40 + 1n Mojo", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
                    trg.Shape_Dot(playerID, 1, "40 + 1n Mojo", v.P_AngleCos[playerID], v.P_AngleSin[playerID])
                    # (Line 63) trg.Shape_Dot(playerID, 1, "40 + 1n Mojo", -v.P_AngleCos[playerID], -v.P_AngleSin[playerID]);
                    trg.Shape_Dot(playerID, 1, "40 + 1n Mojo", -v.P_AngleCos[playerID], -v.P_AngleSin[playerID])
                    # (Line 64) trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
                    trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", v.P_AngleCos[playerID], v.P_AngleSin[playerID])
                    # (Line 65) trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", -v.P_AngleCos[playerID], -v.P_AngleSin[playerID]);
                    trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", -v.P_AngleCos[playerID], -v.P_AngleSin[playerID])
                    # (Line 66) trg.Shape_Dot(playerID, 1, "Target", -v.P_AngleSin[playerID], v.P_AngleCos[playerID]);
                    trg.Shape_Dot(playerID, 1, "Target", -v.P_AngleSin[playerID], v.P_AngleCos[playerID])
                    # (Line 67) trg.Shape_Dot(playerID, 1, "Target", v.P_AngleSin[playerID], -v.P_AngleCos[playerID]);
                    trg.Shape_Dot(playerID, 1, "Target", v.P_AngleSin[playerID], -v.P_AngleCos[playerID])
                    # (Line 68) trg.Shape_Dot(playerID, 1, " Creep. Dunkelheit", -v.P_AngleSin[playerID], v.P_AngleCos[playerID]);
                    trg.Shape_Dot(playerID, 1, " Creep. Dunkelheit", -v.P_AngleSin[playerID], v.P_AngleCos[playerID])
                    # (Line 69) trg.Shape_Dot(playerID, 1, " Creep. Dunkelheit", v.P_AngleSin[playerID], -v.P_AngleCos[playerID]);
                    trg.Shape_Dot(playerID, 1, " Creep. Dunkelheit", v.P_AngleSin[playerID], -v.P_AngleCos[playerID])
                    # (Line 71) trg.Shape_Edge(playerID, 1, "60 + 1n High Templar", 45, 7, 150);
                    trg.Shape_Edge(playerID, 1, "60 + 1n High Templar", 45, 7, 150)
                    # (Line 72) KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID);
                    # (Line 74) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                    DoActions(KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID))
                    # (Line 75) KillUnitAt(All, "Target", "Anywhere", playerID);
                    DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                    # (Line 77) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                    DoActions(KillUnitAt(All, "Target", "Anywhere", playerID))
                    # (Line 78) MoveUnit(All, " Creep. Dunkelheit", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                    DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                    # (Line 79) Order(" Creep. Dunkelheit", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                    DoActions(MoveUnit(All, " Creep. Dunkelheit", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                    # (Line 80) Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                    DoActions(Order(" Creep. Dunkelheit", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                    # (Line 81) }
                    DoActions(Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                    # (Line 83) trg.Main_Wait(240);
                EUDEndIf()
                trg.Main_Wait(240)
                # (Line 85) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 86) }
                # (Line 87) else if (v.P_LoopMain[playerID] < 16)
            if EUDElseIf()(v.P_LoopMain[playerID] >= 16, neg=True):
                # (Line 88) {
                # (Line 89) if (v.P_LoopMain[playerID] % 2 == 0)
                if EUDIf()(v.P_LoopMain[playerID] % 2 == 0):
                    # (Line 90) {
                    # (Line 91) KillUnitAt(All, " Creep. Dunkelheit", "Anywhere", playerID);
                    # (Line 92) KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID);
                    DoActions(KillUnitAt(All, " Creep. Dunkelheit", "Anywhere", playerID))
                    # (Line 94) trg.Table_Sin(playerID, (45 * v.P_LoopMain[playerID] + 22), 100);
                    DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID))
                    trg.Table_Sin(playerID, (45 * v.P_LoopMain[playerID] + 22), 100)
                    # (Line 95) trg.Table_Cos(playerID, (45 * v.P_LoopMain[playerID] + 22), 100);
                    trg.Table_Cos(playerID, (45 * v.P_LoopMain[playerID] + 22), 100)
                    # (Line 97) trg.Shape_Dot(playerID, 1, "40 + 1n Wraith", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
                    trg.Shape_Dot(playerID, 1, "40 + 1n Wraith", v.P_AngleCos[playerID], v.P_AngleSin[playerID])
                    # (Line 98) trg.Shape_Dot(playerID, 1, "40 + 1n Wraith", -v.P_AngleCos[playerID], -v.P_AngleSin[playerID]);
                    trg.Shape_Dot(playerID, 1, "40 + 1n Wraith", -v.P_AngleCos[playerID], -v.P_AngleSin[playerID])
                    # (Line 99) trg.Shape_Dot(playerID, 1, "40 + 1n Zealot", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
                    trg.Shape_Dot(playerID, 1, "40 + 1n Zealot", v.P_AngleCos[playerID], v.P_AngleSin[playerID])
                    # (Line 100) trg.Shape_Dot(playerID, 1, "40 + 1n Zealot", -v.P_AngleCos[playerID], -v.P_AngleSin[playerID]);
                    trg.Shape_Dot(playerID, 1, "40 + 1n Zealot", -v.P_AngleCos[playerID], -v.P_AngleSin[playerID])
                    # (Line 101) trg.Shape_Dot(playerID, 1, "Target", -v.P_AngleSin[playerID], v.P_AngleCos[playerID]);
                    trg.Shape_Dot(playerID, 1, "Target", -v.P_AngleSin[playerID], v.P_AngleCos[playerID])
                    # (Line 102) trg.Shape_Dot(playerID, 1, "Target", v.P_AngleSin[playerID], -v.P_AngleCos[playerID]);
                    trg.Shape_Dot(playerID, 1, "Target", v.P_AngleSin[playerID], -v.P_AngleCos[playerID])
                    # (Line 103) trg.Shape_Dot(playerID, 1, " Creep. Dunkelheit", -v.P_AngleSin[playerID], v.P_AngleCos[playerID]);
                    trg.Shape_Dot(playerID, 1, " Creep. Dunkelheit", -v.P_AngleSin[playerID], v.P_AngleCos[playerID])
                    # (Line 104) trg.Shape_Dot(playerID, 1, " Creep. Dunkelheit", v.P_AngleSin[playerID], -v.P_AngleCos[playerID]);
                    trg.Shape_Dot(playerID, 1, " Creep. Dunkelheit", v.P_AngleSin[playerID], -v.P_AngleCos[playerID])
                    # (Line 106) trg.Shape_Edge(playerID, 1, "60 + 1n High Templar", 0, 7, 150);
                    trg.Shape_Edge(playerID, 1, "60 + 1n High Templar", 0, 7, 150)
                    # (Line 107) KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID);
                    # (Line 109) trg.Table_Sin(playerID, (22 * v.P_LoopMain[playerID] + 112), 50 * (v.P_LoopMain[playerID] / 2 - 4) + 50);
                    DoActions(KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID))
                    trg.Table_Sin(playerID, (22 * v.P_LoopMain[playerID] + 112), 50 * (v.P_LoopMain[playerID] // 2 - 4) + 50)
                    # (Line 110) trg.Table_Cos(playerID, (22 * v.P_LoopMain[playerID] + 112), 50 * (v.P_LoopMain[playerID] / 2 - 4) + 50);
                    trg.Table_Cos(playerID, (22 * v.P_LoopMain[playerID] + 112), 50 * (v.P_LoopMain[playerID] // 2 - 4) + 50)
                    # (Line 112) trg.Shape_Square(playerID, 1, "60 + 1n Siege", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
                    trg.Shape_Square(playerID, 1, "60 + 1n Siege", v.P_AngleCos[playerID], v.P_AngleSin[playerID])
                    # (Line 113) trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
                    trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", v.P_AngleCos[playerID], v.P_AngleSin[playerID])
                    # (Line 115) KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID);
                    # (Line 116) KillUnitAt(All, "40 + 1n Zealot", "Anywhere", playerID);
                    DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID))
                    # (Line 117) KillUnitAt(All, "Target", "Anywhere", playerID);
                    DoActions(KillUnitAt(All, "40 + 1n Zealot", "Anywhere", playerID))
                    # (Line 119) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                    DoActions(KillUnitAt(All, "Target", "Anywhere", playerID))
                    # (Line 120) MoveUnit(All, " Creep. Dunkelheit", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                    DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                    # (Line 121) Order(" Creep. Dunkelheit", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                    DoActions(MoveUnit(All, " Creep. Dunkelheit", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                    # (Line 122) Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                    DoActions(Order(" Creep. Dunkelheit", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                    # (Line 123) }
                    DoActions(Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                    # (Line 124) else
                    # (Line 125) {
                if EUDElse()():
                    # (Line 126) KillUnitAt(All, " Creep. Dunkelheit", "Anywhere", playerID);
                    # (Line 127) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                    DoActions(KillUnitAt(All, " Creep. Dunkelheit", "Anywhere", playerID))
                    # (Line 129) trg.Table_Sin(playerID, (45 * v.P_LoopMain[playerID] + 112), 100);
                    DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                    trg.Table_Sin(playerID, (45 * v.P_LoopMain[playerID] + 112), 100)
                    # (Line 130) trg.Table_Cos(playerID, (45 * v.P_LoopMain[playerID] + 112), 100);
                    trg.Table_Cos(playerID, (45 * v.P_LoopMain[playerID] + 112), 100)
                    # (Line 132) trg.Shape_Dot(playerID, 1, "40 + 1n Mojo", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
                    trg.Shape_Dot(playerID, 1, "40 + 1n Mojo", v.P_AngleCos[playerID], v.P_AngleSin[playerID])
                    # (Line 133) trg.Shape_Dot(playerID, 1, "40 + 1n Mojo", -v.P_AngleCos[playerID], -v.P_AngleSin[playerID]);
                    trg.Shape_Dot(playerID, 1, "40 + 1n Mojo", -v.P_AngleCos[playerID], -v.P_AngleSin[playerID])
                    # (Line 134) trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
                    trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", v.P_AngleCos[playerID], v.P_AngleSin[playerID])
                    # (Line 135) trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", -v.P_AngleCos[playerID], -v.P_AngleSin[playerID]);
                    trg.Shape_Dot(playerID, 1, "Protoss Dark Archon", -v.P_AngleCos[playerID], -v.P_AngleSin[playerID])
                    # (Line 136) trg.Shape_Dot(playerID, 1, "Target", -v.P_AngleSin[playerID], v.P_AngleCos[playerID]);
                    trg.Shape_Dot(playerID, 1, "Target", -v.P_AngleSin[playerID], v.P_AngleCos[playerID])
                    # (Line 137) trg.Shape_Dot(playerID, 1, "Target", v.P_AngleSin[playerID], -v.P_AngleCos[playerID]);
                    trg.Shape_Dot(playerID, 1, "Target", v.P_AngleSin[playerID], -v.P_AngleCos[playerID])
                    # (Line 138) trg.Shape_Dot(playerID, 1, " Creep. Dunkelheit", -v.P_AngleSin[playerID], v.P_AngleCos[playerID]);
                    trg.Shape_Dot(playerID, 1, " Creep. Dunkelheit", -v.P_AngleSin[playerID], v.P_AngleCos[playerID])
                    # (Line 139) trg.Shape_Dot(playerID, 1, " Creep. Dunkelheit", v.P_AngleSin[playerID], -v.P_AngleCos[playerID]);
                    trg.Shape_Dot(playerID, 1, " Creep. Dunkelheit", v.P_AngleSin[playerID], -v.P_AngleCos[playerID])
                    # (Line 141) trg.Shape_Edge(playerID, 1, "60 + 1n High Templar", 45, 7, 150);
                    trg.Shape_Edge(playerID, 1, "60 + 1n High Templar", 45, 7, 150)
                    # (Line 142) KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID);
                    # (Line 144) KillUnitAt(All, "Target", "Anywhere", playerID);
                    DoActions(KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID))
                    # (Line 145) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                    DoActions(KillUnitAt(All, "Target", "Anywhere", playerID))
                    # (Line 147) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                    DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                    # (Line 148) MoveUnit(All, " Creep. Dunkelheit", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                    DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                    # (Line 149) Order(" Creep. Dunkelheit", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                    DoActions(MoveUnit(All, " Creep. Dunkelheit", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                    # (Line 150) Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                    DoActions(Order(" Creep. Dunkelheit", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                    # (Line 151) }
                    DoActions(Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                    # (Line 153) trg.Main_Wait(240);
                EUDEndIf()
                trg.Main_Wait(240)
                # (Line 155) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 156) }
                # (Line 157) else if (v.P_LoopMain[playerID] == 16)
            if EUDElseIf()(v.P_LoopMain[playerID] == 16):
                # (Line 158) {
                # (Line 159) KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID);
                # (Line 160) KillUnitAt(All, " Creep. Dunkelheit", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID))
                # (Line 162) s.CharacterVoice(9);
                DoActions(KillUnitAt(All, " Creep. Dunkelheit", "Anywhere", playerID))
                s.CharacterVoice(9)
                # (Line 164) trg.Main_Wait(80);
                trg.Main_Wait(80)
                # (Line 166) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 167) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 168) }
                # (Line 169) }
            EUDEndIf()
            # (Line 170) else if (v.P_CountMain[playerID] == 1)
        if EUDElseIf()(v.P_CountMain[playerID] == 1):
            # (Line 171) {
            # (Line 172) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 173) {
                # (Line 174) trg.Shape_Edge(playerID, 1, " Unit. Hoffnung 25000", 0, 5, 150);
                trg.Shape_Edge(playerID, 1, " Unit. Hoffnung 25000", 0, 5, 150)
                # (Line 175) trg.Shape_Edge(playerID, 1, " Unit. Hoffnung 25000", 45, 5, 150);
                trg.Shape_Edge(playerID, 1, " Unit. Hoffnung 25000", 45, 5, 150)
                # (Line 176) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID);
                # (Line 178) trg.Main_Wait(960);
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID))
                trg.Main_Wait(960)
                # (Line 179) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 180) }
                # (Line 181) else if (v.P_LoopMain[playerID] < 5)
            if EUDElseIf()(v.P_LoopMain[playerID] >= 5, neg=True):
                # (Line 182) {
                # (Line 183) if (v.P_LoopMain[playerID] % 2 == 1)
                if EUDIf()(v.P_LoopMain[playerID] % 2 == 1):
                    # (Line 184) {
                    # (Line 185) trg.Shape_Edge(playerID, 1, " Creep. Dunkelheit", 0, 4, 100);
                    trg.Shape_Edge(playerID, 1, " Creep. Dunkelheit", 0, 4, 100)
                    # (Line 186) trg.Shape_Edge(playerID, 1, " Creep. Dunkelheit", 0, 2, 50);
                    trg.Shape_Edge(playerID, 1, " Creep. Dunkelheit", 0, 2, 50)
                    # (Line 188) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                    # (Line 189) Order(" Creep. Dunkelheit", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                    DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                    # (Line 190) }
                    DoActions(Order(" Creep. Dunkelheit", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                    # (Line 191) else
                    # (Line 192) {
                if EUDElse()():
                    # (Line 193) KillUnitAt(All, " Creep. Dunkelheit", "Anywhere", playerID);
                    # (Line 194) }
                    DoActions(KillUnitAt(All, " Creep. Dunkelheit", "Anywhere", playerID))
                    # (Line 196) trg.Main_Wait(160);
                EUDEndIf()
                trg.Main_Wait(160)
                # (Line 198) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 199) }
                # (Line 200) else if (v.P_LoopMain[playerID] == 5)
            if EUDElseIf()(v.P_LoopMain[playerID] == 5):
                # (Line 201) {
                # (Line 202) trg.Shape_Edge(playerID, 1, " Unit. Hoffnung 25000", 0, 5, 150);
                trg.Shape_Edge(playerID, 1, " Unit. Hoffnung 25000", 0, 5, 150)
                # (Line 203) trg.Shape_Edge(playerID, 1, " Unit. Hoffnung 25000", 45, 5, 150);
                trg.Shape_Edge(playerID, 1, " Unit. Hoffnung 25000", 45, 5, 150)
                # (Line 204) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID);
                # (Line 206) trg.Main_Wait(480);
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID))
                trg.Main_Wait(480)
                # (Line 208) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 209) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 210) }
                # (Line 211) }
            EUDEndIf()
            # (Line 212) else if (v.P_CountMain[playerID] == 2)
        if EUDElseIf()(v.P_CountMain[playerID] == 2):
            # (Line 213) {
            # (Line 215) KillUnitAt(All, "60 + 1n Siege", "Anywhere", playerID);
            # (Line 216) trg.SkillEnd();
            DoActions(KillUnitAt(All, "60 + 1n Siege", "Anywhere", playerID))
            trg.SkillEnd()
            # (Line 217) }
            # (Line 218) }
        EUDEndIf()
        # (Line 219) }
    EUDEndIf()
