## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import variable as v;
import variable as v
# (Line 2) import func.trig as trg;
from func import trig as trg
# (Line 3) import func.sound as s;
from func import sound as s
# (Line 5) function main(playerID)
# (Line 6) {
@EUDFunc
def f_main(playerID):
    # (Line 7) if (v.P_WaitMain[playerID] == 0)
    if EUDIf()(v.P_WaitMain[playerID] == 0):
        # (Line 8) {
        # (Line 9) if (v.P_CountMain[playerID] == 0)
        if EUDIf()(v.P_CountMain[playerID] == 0):
            # (Line 10) {
            # (Line 11) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 12) {
                # (Line 13) trg.Shape_Square(playerID, 1, "Target", 50, 50);
                trg.Shape_Square(playerID, 1, "Target", 50, 50)
                # (Line 14) trg.Shape_Square(playerID, 1, " Creep. Dunkelheit", 50, 50);
                trg.Shape_Square(playerID, 1, " Creep. Dunkelheit", 50, 50)
                # (Line 16) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 17) MoveUnit(All, " Creep. Dunkelheit", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 18) Order(" Creep. Dunkelheit", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveUnit(All, " Creep. Dunkelheit", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                # (Line 20) KillUnitAt(All, "Target", "Anywhere", playerID);
                DoActions(Order(" Creep. Dunkelheit", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 22) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "Target", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 24) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 25) }
                # (Line 26) else if (v.P_LoopMain[playerID] == 1)
            if EUDElseIf()(v.P_LoopMain[playerID] == 1):
                # (Line 27) {
                # (Line 28) RemoveUnitAt(All, " Creep. Dunkelheit", "Anywhere", playerID);
                # (Line 29) trg.Shape_Square(playerID, 1, "Target", 50, 50);
                DoActions(RemoveUnitAt(All, " Creep. Dunkelheit", "Anywhere", playerID))
                trg.Shape_Square(playerID, 1, "Target", 50, 50)
                # (Line 30) trg.Shape_Square(playerID, 1, " Creep. Dunkelheit", 50, 50);
                trg.Shape_Square(playerID, 1, " Creep. Dunkelheit", 50, 50)
                # (Line 32) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 33) MoveUnit(All, " Creep. Dunkelheit", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 34) Order(" Creep. Dunkelheit", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveUnit(All, " Creep. Dunkelheit", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                # (Line 36) KillUnitAt(All, "Target", "Anywhere", playerID);
                DoActions(Order(" Creep. Dunkelheit", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 38) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "Target", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 40) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 41) }
                # (Line 42) else if (v.P_LoopMain[playerID] == 2)
            if EUDElseIf()(v.P_LoopMain[playerID] == 2):
                # (Line 43) {
                # (Line 44) RemoveUnitAt(All, " Creep. Dunkelheit", "Anywhere", playerID);
                # (Line 45) trg.Shape_Square(playerID, 1, "Target", 50, 0);
                DoActions(RemoveUnitAt(All, " Creep. Dunkelheit", "Anywhere", playerID))
                trg.Shape_Square(playerID, 1, "Target", 50, 0)
                # (Line 46) trg.Shape_Square(playerID, 1, "Target", 100, 0);
                trg.Shape_Square(playerID, 1, "Target", 100, 0)
                # (Line 48) KillUnitAt(All, "Target", "Anywhere", playerID);
                # (Line 50) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "Target", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 52) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 53) }
                # (Line 54) else if (v.P_LoopMain[playerID] == 3)
            if EUDElseIf()(v.P_LoopMain[playerID] == 3):
                # (Line 55) {
                # (Line 56) trg.Shape_Edge(playerID, 1, "Protoss Dark Templar", 45, 5, 100);
                trg.Shape_Edge(playerID, 1, "Protoss Dark Templar", 45, 5, 100)
                # (Line 57) KillUnitAt(All, "Protoss Dark Templar", "Anywhere", playerID);
                # (Line 59) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "Protoss Dark Templar", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 61) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 62) }
                # (Line 63) else if (v.P_LoopMain[playerID] == 4)
            if EUDElseIf()(v.P_LoopMain[playerID] == 4):
                # (Line 64) {
                # (Line 65) trg.Shape_Edge(playerID, 1, "40 + 1n Mutalisk", 0, 5, 100);
                trg.Shape_Edge(playerID, 1, "40 + 1n Mutalisk", 0, 5, 100)
                # (Line 66) KillUnitAt(All, "40 + 1n Mutalisk", "Anywhere", playerID);
                # (Line 67) trg.Shape_Edge(playerID, 1, "40 + 1n Ghost", 0, 3, 100);
                DoActions(KillUnitAt(All, "40 + 1n Mutalisk", "Anywhere", playerID))
                trg.Shape_Edge(playerID, 1, "40 + 1n Ghost", 0, 3, 100)
                # (Line 69) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 70) MoveUnit(All, "40 + 1n Ghost", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 71) Order("40 + 1n Ghost", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveUnit(All, "40 + 1n Ghost", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                # (Line 73) trg.Main_Wait(80);
                DoActions(Order("40 + 1n Ghost", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(80)
                # (Line 75) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 76) }
                # (Line 77) else if (v.P_LoopMain[playerID] == 5)
            if EUDElseIf()(v.P_LoopMain[playerID] == 5):
                # (Line 78) {
                # (Line 79) trg.Shape_Edge(playerID, 1, "60 + 1n Danimoth", 0, 7, 150);
                trg.Shape_Edge(playerID, 1, "60 + 1n Danimoth", 0, 7, 150)
                # (Line 80) KillUnitAt(All, "60 + 1n Danimoth", "Anywhere", playerID);
                # (Line 81) trg.Shape_Edge(playerID, 1, "60 + 1n Archon", 0, 7, 150);
                DoActions(KillUnitAt(All, "60 + 1n Danimoth", "Anywhere", playerID))
                trg.Shape_Edge(playerID, 1, "60 + 1n Archon", 0, 7, 150)
                # (Line 82) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                # (Line 83) trg.Shape_Edge(playerID, 1, "Kakaru (Twilight)", 0, 5, 100);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                trg.Shape_Edge(playerID, 1, "Kakaru (Twilight)", 0, 5, 100)
                # (Line 84) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);
                # (Line 86) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 88) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 89) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 90) }
                # (Line 93) }
            EUDEndIf()
            # (Line 94) else if (v.P_CountMain[playerID] == 1)
        if EUDElseIf()(v.P_CountMain[playerID] == 1):
            # (Line 95) {
            # (Line 96) if (v.P_LoopMain[playerID] < 4)
            if EUDIf()(v.P_LoopMain[playerID] >= 4, neg=True):
                # (Line 97) {
                # (Line 98) trg.Shape_Dot(playerID, 1, "Protoss Dark Templar", 100 - 25 * v.P_LoopMain[playerID], 25 * v.P_LoopMain[playerID]);
                trg.Shape_Dot(playerID, 1, "Protoss Dark Templar", 100 - 25 * v.P_LoopMain[playerID], 25 * v.P_LoopMain[playerID])
                # (Line 99) trg.Shape_Dot(playerID, 1, "Protoss Dark Templar", -100 + 25 * v.P_LoopMain[playerID], -25 * v.P_LoopMain[playerID]);
                trg.Shape_Dot(playerID, 1, "Protoss Dark Templar", -100 + 25 * v.P_LoopMain[playerID], -25 * v.P_LoopMain[playerID])
                # (Line 100) trg.Shape_Dot(playerID, 1, "40 + 1n Zealot", -25 * v.P_LoopMain[playerID], 100 - 25 * v.P_LoopMain[playerID]);
                trg.Shape_Dot(playerID, 1, "40 + 1n Zealot", -25 * v.P_LoopMain[playerID], 100 - 25 * v.P_LoopMain[playerID])
                # (Line 101) trg.Shape_Dot(playerID, 1, "40 + 1n Zealot", 25 * v.P_LoopMain[playerID], -100 + 25 * v.P_LoopMain[playerID]);
                trg.Shape_Dot(playerID, 1, "40 + 1n Zealot", 25 * v.P_LoopMain[playerID], -100 + 25 * v.P_LoopMain[playerID])
                # (Line 102) KillUnitAt(All, "40 + 1n Zealot", "Anywhere", playerID);
                # (Line 103) KillUnitAt(All, "Protoss Dark Templar", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Zealot", "Anywhere", playerID))
                # (Line 105) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "Protoss Dark Templar", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 106) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 107) }
                # (Line 108) else if (v.P_LoopMain[playerID] == 4)
            if EUDElseIf()(v.P_LoopMain[playerID] == 4):
                # (Line 109) {
                # (Line 110) KillUnitAt(All, "40 + 1n Ghost", "Anywhere", playerID);
                # (Line 112) trg.Main_Wait(320);
                DoActions(KillUnitAt(All, "40 + 1n Ghost", "Anywhere", playerID))
                trg.Main_Wait(320)
                # (Line 114) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 115) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 116) }
                # (Line 117) }
            EUDEndIf()
            # (Line 118) else if (v.P_CountMain[playerID] == 2)
        if EUDElseIf()(v.P_CountMain[playerID] == 2):
            # (Line 119) {
            # (Line 120) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 121) {
                # (Line 122) s.CharacterVoice(2);
                s.CharacterVoice(2)
                # (Line 123) trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 75, 150);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 75, 150)
                # (Line 124) trg.Shape_Square(playerID, 1, "60 + 1n Archon", 50, 100);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", 50, 100)
                # (Line 125) trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 150, 75);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 150, 75)
                # (Line 126) trg.Shape_Square(playerID, 1, "60 + 1n Archon", 100, 50);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", 100, 50)
                # (Line 127) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
                # (Line 128) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                # (Line 130) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 131) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 132) }
                # (Line 133) else if (v.P_LoopMain[playerID] == 1)
            if EUDElseIf()(v.P_LoopMain[playerID] == 1):
                # (Line 134) {
                # (Line 135) trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", 75, 150);
                trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", 75, 150)
                # (Line 136) trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 50, 100);
                trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 50, 100)
                # (Line 137) trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", 150, 75);
                trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", 150, 75)
                # (Line 138) trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 100, 50);
                trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 100, 50)
                # (Line 139) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);
                # (Line 140) KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID))
                # (Line 141) trg.Shape_Square(playerID, 1, "40 + 1n Ghost", 50, 100);
                DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID))
                trg.Shape_Square(playerID, 1, "40 + 1n Ghost", 50, 100)
                # (Line 142) trg.Shape_Square(playerID, 1, "40 + 1n Ghost", 100, 50);
                trg.Shape_Square(playerID, 1, "40 + 1n Ghost", 100, 50)
                # (Line 144) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 145) MoveUnit(All, "40 + 1n Ghost", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 146) Order("40 + 1n Ghost", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveUnit(All, "40 + 1n Ghost", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                # (Line 148) trg.Main_Wait(160);
                DoActions(Order("40 + 1n Ghost", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(160)
                # (Line 149) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 150) }
                # (Line 151) else if (v.P_LoopMain[playerID] == 2)
            if EUDElseIf()(v.P_LoopMain[playerID] == 2):
                # (Line 152) {
                # (Line 153) trg.Shape_Square(playerID, 1, "40 + 1n Mutalisk", 50, 0);
                trg.Shape_Square(playerID, 1, "40 + 1n Mutalisk", 50, 0)
                # (Line 154) trg.Shape_Square(playerID, 1, "40 + 1n Mutalisk", 100, 0);
                trg.Shape_Square(playerID, 1, "40 + 1n Mutalisk", 100, 0)
                # (Line 156) KillUnitAt(All, "40 + 1n Mutalisk", "Anywhere", playerID);
                # (Line 158) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "40 + 1n Mutalisk", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 160) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 161) }
                # (Line 162) else if (v.P_LoopMain[playerID] == 3)
            if EUDElseIf()(v.P_LoopMain[playerID] == 3):
                # (Line 163) {
                # (Line 164) trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 50, 100);
                trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 50, 100)
                # (Line 165) trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 100, 50);
                trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 100, 50)
                # (Line 167) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
                # (Line 169) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 171) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 172) }
                # (Line 173) else if (v.P_LoopMain[playerID] == 4)
            if EUDElseIf()(v.P_LoopMain[playerID] == 4):
                # (Line 174) {
                # (Line 175) KillUnitAt(All, "40 + 1n Ghost", "Anywhere", playerID);
                # (Line 177) trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 75, 150);
                DoActions(KillUnitAt(All, "40 + 1n Ghost", "Anywhere", playerID))
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 75, 150)
                # (Line 178) trg.Shape_Square(playerID, 1, "40 + 1n Ghost", 75, 150);
                trg.Shape_Square(playerID, 1, "40 + 1n Ghost", 75, 150)
                # (Line 179) trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 150, 75);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 150, 75)
                # (Line 180) trg.Shape_Square(playerID, 1, "40 + 1n Ghost", 150, 75);
                trg.Shape_Square(playerID, 1, "40 + 1n Ghost", 150, 75)
                # (Line 181) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
                # (Line 182) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                # (Line 183) MoveUnit(All, "40 + 1n Ghost", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 184) Order("40 + 1n Ghost", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveUnit(All, "40 + 1n Ghost", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                # (Line 186) trg.Main_Wait(320);
                DoActions(Order("40 + 1n Ghost", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(320)
                # (Line 188) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 189) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 190) }
                # (Line 191) }
            EUDEndIf()
            # (Line 192) else if (v.P_CountMain[playerID] == 3)
        if EUDElseIf()(v.P_CountMain[playerID] == 3):
            # (Line 193) {
            # (Line 194) KillUnitAt(All, "40 + 1n Ghost", "Anywhere", playerID);
            # (Line 195) trg.SkillEnd();
            DoActions(KillUnitAt(All, "40 + 1n Ghost", "Anywhere", playerID))
            trg.SkillEnd()
            # (Line 196) }
            # (Line 197) }
        EUDEndIf()
        # (Line 198) }
    EUDEndIf()
