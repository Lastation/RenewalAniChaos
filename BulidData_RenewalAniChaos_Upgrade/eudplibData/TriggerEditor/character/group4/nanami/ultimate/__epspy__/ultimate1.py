## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import PluginVariables as msqcvar;
import PluginVariables as msqcvar
# (Line 2) import variable as v;
import variable as v
# (Line 3) import func.trig as trg;
from func import trig as trg
# (Line 4) import func.trigadv as adv;
from func import trigadv as adv
# (Line 5) import func.sound as s;
from func import sound as s
# (Line 7) function main(playerID)
# (Line 8) {
@EUDFunc
def f_main(playerID):
    # (Line 9) trg.Debuff_Stop();
    trg.Debuff_Stop()
    # (Line 10) trg.Debuff_BanReturn();
    trg.Debuff_BanReturn()
    # (Line 11) trg.Buff_ShieldFix(1);
    trg.Buff_ShieldFix(1)
    # (Line 13) if (v.P_WaitMain[playerID] == 0)
    if EUDIf()(v.P_WaitMain[playerID] == 0):
        # (Line 14) {
        # (Line 15) if (v.P_CountMain[playerID] == 0)
        if EUDIf()(v.P_CountMain[playerID] == 0):
            # (Line 16) {
            # (Line 17) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 18) {
                # (Line 19) SetDeaths(playerID, SetTo, 1, " `ShieldRecharge");
                # (Line 20) adv.Shape_NxNSquareAt2(playerID, 1, "40 + 1n Gantrithor", 2, 75, -125, 125);
                DoActions(SetDeaths(playerID, SetTo, 1, " `ShieldRecharge"))
                adv.Shape_NxNSquareAt2(playerID, 1, "40 + 1n Gantrithor", 2, 75, -125, 125)
                # (Line 21) adv.Shape_NxNSquareAt2(playerID, 1, "60 + 1n Dragoon", 2, 75, -125, 125);
                adv.Shape_NxNSquareAt2(playerID, 1, "60 + 1n Dragoon", 2, 75, -125, 125)
                # (Line 22) KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID);
                # (Line 24) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID))
                # (Line 25) Order("60 + 1n Dragoon", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 27) trg.Main_Wait(320);
                DoActions(Order("60 + 1n Dragoon", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(320)
                # (Line 29) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 30) }
                # (Line 31) else if (v.P_LoopMain[playerID] == 1)
            if EUDElseIf()(v.P_LoopMain[playerID] == 1):
                # (Line 32) {
                # (Line 33) adv.Shape_NxNSquareAt2(playerID, 1, "40 + 1n Gantrithor", 2, 75, 125, -125);
                adv.Shape_NxNSquareAt2(playerID, 1, "40 + 1n Gantrithor", 2, 75, 125, -125)
                # (Line 34) adv.Shape_NxNSquareAt2(playerID, 1, "60 + 1n Dragoon", 2, 75, 125, -125);
                adv.Shape_NxNSquareAt2(playerID, 1, "60 + 1n Dragoon", 2, 75, 125, -125)
                # (Line 35) KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID);
                # (Line 37) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID))
                # (Line 38) Order("60 + 1n Dragoon", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 40) trg.Main_Wait(320);
                DoActions(Order("60 + 1n Dragoon", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(320)
                # (Line 42) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 43) }
                # (Line 44) else if (v.P_LoopMain[playerID] == 2)
            if EUDElseIf()(v.P_LoopMain[playerID] == 2):
                # (Line 45) {
                # (Line 46) adv.Shape_NxNSquareAt2(playerID, 1, "40 + 1n Gantrithor", 2, 75, 125, 125);
                adv.Shape_NxNSquareAt2(playerID, 1, "40 + 1n Gantrithor", 2, 75, 125, 125)
                # (Line 47) adv.Shape_NxNSquareAt2(playerID, 1, "60 + 1n Dragoon", 2, 75, 125, 125);
                adv.Shape_NxNSquareAt2(playerID, 1, "60 + 1n Dragoon", 2, 75, 125, 125)
                # (Line 48) KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID);
                # (Line 50) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID))
                # (Line 51) Order("60 + 1n Dragoon", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 53) trg.Main_Wait(320);
                DoActions(Order("60 + 1n Dragoon", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(320)
                # (Line 55) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 56) }
                # (Line 57) else if (v.P_LoopMain[playerID] == 3)
            if EUDElseIf()(v.P_LoopMain[playerID] == 3):
                # (Line 58) {
                # (Line 59) adv.Shape_NxNSquareAt2(playerID, 1, "40 + 1n Gantrithor", 2, 75, -125, -125);
                adv.Shape_NxNSquareAt2(playerID, 1, "40 + 1n Gantrithor", 2, 75, -125, -125)
                # (Line 60) adv.Shape_NxNSquareAt2(playerID, 1, "60 + 1n Dragoon", 2, 75, -125, -125);
                adv.Shape_NxNSquareAt2(playerID, 1, "60 + 1n Dragoon", 2, 75, -125, -125)
                # (Line 61) KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID);
                # (Line 63) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID))
                # (Line 64) Order("60 + 1n Dragoon", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 66) trg.Main_Wait(320);
                DoActions(Order("60 + 1n Dragoon", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(320)
                # (Line 68) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 69) }
                # (Line 70) else if (v.P_LoopMain[playerID] == 4)
            if EUDElseIf()(v.P_LoopMain[playerID] == 4):
                # (Line 71) {
                # (Line 72) trg.Main_Wait(1120);
                trg.Main_Wait(1120)
                # (Line 74) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 75) }
                # (Line 76) else if (v.P_LoopMain[playerID] == 5)
            if EUDElseIf()(v.P_LoopMain[playerID] == 5):
                # (Line 77) {
                # (Line 78) trg.Shape_NxNSquare(playerID, 1, " Unit. Hoffnung 25000", 4, 75);
                trg.Shape_NxNSquare(playerID, 1, " Unit. Hoffnung 25000", 4, 75)
                # (Line 79) trg.Shape_NxNSquare(playerID, 1, "60 + 1n Danimoth", 4, 75);
                trg.Shape_NxNSquare(playerID, 1, "60 + 1n Danimoth", 4, 75)
                # (Line 81) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID);
                # (Line 83) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID))
                # (Line 84) Order("60 + 1n Danimoth", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 86) trg.Main_Wait(800);
                DoActions(Order("60 + 1n Danimoth", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(800)
                # (Line 88) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 89) }
                # (Line 90) else if (v.P_LoopMain[playerID] == 6)
            if EUDElseIf()(v.P_LoopMain[playerID] == 6):
                # (Line 91) {
                # (Line 92) s.CharacterVoice(12);
                s.CharacterVoice(12)
                # (Line 94) trg.Main_Wait(80);
                trg.Main_Wait(80)
                # (Line 96) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 97) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 98) }
                # (Line 99) }
            EUDEndIf()
            # (Line 100) else if (v.P_CountMain[playerID] == 1)
        if EUDElseIf()(v.P_CountMain[playerID] == 1):
            # (Line 101) {
            # (Line 102) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 103) {
                # (Line 104) trg.Shape_NxNSquare(playerID, 1, "120 + 1n Archon", 6, 75);
                trg.Shape_NxNSquare(playerID, 1, "120 + 1n Archon", 6, 75)
                # (Line 105) trg.Shape_NxNSquare(playerID, 1, "60 + 1n Archon", 4, 125);
                trg.Shape_NxNSquare(playerID, 1, "60 + 1n Archon", 4, 125)
                # (Line 106) trg.Shape_NxNSquare(playerID, 1, "60 + 1n Dragoon", 4, 125);
                trg.Shape_NxNSquare(playerID, 1, "60 + 1n Dragoon", 4, 125)
                # (Line 108) KillUnitAt(All, "120 + 1n Archon", "Anywhere", playerID);
                # (Line 110) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "120 + 1n Archon", "Anywhere", playerID))
                # (Line 111) Order("60 + 1n Archon", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 112) Order("60 + 1n Dragoon", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(Order("60 + 1n Archon", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 114) trg.Main_Wait(1200);
                DoActions(Order("60 + 1n Dragoon", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(1200)
                # (Line 116) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 117) }
                # (Line 118) else if (v.P_LoopMain[playerID] == 1)
            if EUDElseIf()(v.P_LoopMain[playerID] == 1):
                # (Line 119) {
                # (Line 120) trg.Shape_NxNSquare(playerID, 1, "Protoss Dark Archon", 6, 75);
                trg.Shape_NxNSquare(playerID, 1, "Protoss Dark Archon", 6, 75)
                # (Line 121) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                # (Line 123) trg.Shape_NxNSquare(playerID, 1, "60 + 1n Danimoth", 4, 100);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                trg.Shape_NxNSquare(playerID, 1, "60 + 1n Danimoth", 4, 100)
                # (Line 124) adv.Shape_NxNSquareAt2(playerID, 1, "40 + 1n Mojo", 2, 50, 100, 100);
                adv.Shape_NxNSquareAt2(playerID, 1, "40 + 1n Mojo", 2, 50, 100, 100)
                # (Line 125) adv.Shape_NxNSquareAt2(playerID, 1, "40 + 1n Mojo", 2, 50, -100, 100);
                adv.Shape_NxNSquareAt2(playerID, 1, "40 + 1n Mojo", 2, 50, -100, 100)
                # (Line 126) adv.Shape_NxNSquareAt2(playerID, 1, "40 + 1n Mojo", 2, 50, 100, -100);
                adv.Shape_NxNSquareAt2(playerID, 1, "40 + 1n Mojo", 2, 50, 100, -100)
                # (Line 127) adv.Shape_NxNSquareAt2(playerID, 1, "40 + 1n Mojo", 2, 50, -100, -100);
                adv.Shape_NxNSquareAt2(playerID, 1, "40 + 1n Mojo", 2, 50, -100, -100)
                # (Line 129) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 130) Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 131) Order("60 + 1n Danimoth", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 133) trg.Main_Wait(2000);
                DoActions(Order("60 + 1n Danimoth", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(2000)
                # (Line 135) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 136) }
                # (Line 137) else if (v.P_LoopMain[playerID] == 2)
            if EUDElseIf()(v.P_LoopMain[playerID] == 2):
                # (Line 138) {
                # (Line 139) s.CharacterVoice(13);
                s.CharacterVoice(13)
                # (Line 141) trg.Main_Wait(80);
                trg.Main_Wait(80)
                # (Line 143) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 144) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 145) }
                # (Line 146) }
            EUDEndIf()
            # (Line 147) else if (v.P_CountMain[playerID] == 2)
        if EUDElseIf()(v.P_CountMain[playerID] == 2):
            # (Line 148) {
            # (Line 149) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 150) {
                # (Line 151) trg.Shape_Edge(playerID, 1, "60 + 1n High Templar", 45, 5, 100);
                trg.Shape_Edge(playerID, 1, "60 + 1n High Templar", 45, 5, 100)
                # (Line 152) KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID);
                # (Line 154) trg.Main_Wait(320);
                DoActions(KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID))
                trg.Main_Wait(320)
                # (Line 156) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 157) }
                # (Line 158) else if (v.P_LoopMain[playerID] == 1)
            if EUDElseIf()(v.P_LoopMain[playerID] == 1):
                # (Line 159) {
                # (Line 160) trg.Shape_Edge(playerID, 1, "60 + 1n High Templar", 0, 7, 150);
                trg.Shape_Edge(playerID, 1, "60 + 1n High Templar", 0, 7, 150)
                # (Line 161) KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID);
                # (Line 163) trg.Main_Wait(320);
                DoActions(KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID))
                trg.Main_Wait(320)
                # (Line 165) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 166) }
                # (Line 167) else if (v.P_LoopMain[playerID] == 2)
            if EUDElseIf()(v.P_LoopMain[playerID] == 2):
                # (Line 168) {
                # (Line 169) trg.Shape_Edge(playerID, 1, "60 + 1n High Templar", 45, 9, 200);
                trg.Shape_Edge(playerID, 1, "60 + 1n High Templar", 45, 9, 200)
                # (Line 170) KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID);
                # (Line 172) trg.Main_Wait(320);
                DoActions(KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID))
                trg.Main_Wait(320)
                # (Line 174) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 175) }
                # (Line 176) else if (v.P_LoopMain[playerID] == 3)
            if EUDElseIf()(v.P_LoopMain[playerID] == 3):
                # (Line 177) {
                # (Line 178) trg.Shape_Edge(playerID, 1, "60 + 1n High Templar", 0, 11, 250);
                trg.Shape_Edge(playerID, 1, "60 + 1n High Templar", 0, 11, 250)
                # (Line 179) KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID);
                # (Line 181) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 183) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 184) }
                # (Line 185) else if (v.P_LoopMain[playerID] == 4)
            if EUDElseIf()(v.P_LoopMain[playerID] == 4):
                # (Line 186) {
                # (Line 187) trg.Shape_Edge(playerID, 1, " Unit. Hoffnung 25000", 45, 5, 100);
                trg.Shape_Edge(playerID, 1, " Unit. Hoffnung 25000", 45, 5, 100)
                # (Line 188) trg.Shape_Edge(playerID, 1, " Unit. Hoffnung 25000", 0, 7, 150);
                trg.Shape_Edge(playerID, 1, " Unit. Hoffnung 25000", 0, 7, 150)
                # (Line 189) trg.Shape_Edge(playerID, 1, " Unit. Hoffnung 25000", 45, 9, 200);
                trg.Shape_Edge(playerID, 1, " Unit. Hoffnung 25000", 45, 9, 200)
                # (Line 190) trg.Shape_Edge(playerID, 1, " Unit. Hoffnung 25000", 0, 11, 250);
                trg.Shape_Edge(playerID, 1, " Unit. Hoffnung 25000", 0, 11, 250)
                # (Line 191) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID);
                # (Line 193) trg.Shape_NxNSquare(playerID, 1, "60 + 1n Dragoon", 4, 150);
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID))
                trg.Shape_NxNSquare(playerID, 1, "60 + 1n Dragoon", 4, 150)
                # (Line 194) trg.Shape_NxNSquare(playerID, 1, "60 + 1n High Templar", 4, 150);
                trg.Shape_NxNSquare(playerID, 1, "60 + 1n High Templar", 4, 150)
                # (Line 196) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 197) MoveUnit(All, "60 + 1n High Templar", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 198) Order("60 + 1n Dragoon", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveUnit(All, "60 + 1n High Templar", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                # (Line 199) Order("60 + 1n High Templar", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(Order("60 + 1n Dragoon", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 201) trg.Main_Wait(800);
                DoActions(Order("60 + 1n High Templar", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(800)
                # (Line 203) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 204) }
                # (Line 205) else if (v.P_LoopMain[playerID] == 5)
            if EUDElseIf()(v.P_LoopMain[playerID] == 5):
                # (Line 206) {
                # (Line 207) trg.Shape_NxNSquare(playerID, 1, "Protoss Dark Archon", 6, 75);
                trg.Shape_NxNSquare(playerID, 1, "Protoss Dark Archon", 6, 75)
                # (Line 208) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                # (Line 210) trg.Shape_NxNSquare(playerID, 1, "60 + 1n Danimoth", 4, 150);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                trg.Shape_NxNSquare(playerID, 1, "60 + 1n Danimoth", 4, 150)
                # (Line 211) adv.Shape_NxNSquareAt2(playerID, 1, "40 + 1n Mojo", 2, 75, 150, 150);
                adv.Shape_NxNSquareAt2(playerID, 1, "40 + 1n Mojo", 2, 75, 150, 150)
                # (Line 212) adv.Shape_NxNSquareAt2(playerID, 1, "40 + 1n Mojo", 2, 75, -150, 150);
                adv.Shape_NxNSquareAt2(playerID, 1, "40 + 1n Mojo", 2, 75, -150, 150)
                # (Line 213) adv.Shape_NxNSquareAt2(playerID, 1, "40 + 1n Mojo", 2, 75, 150, -150);
                adv.Shape_NxNSquareAt2(playerID, 1, "40 + 1n Mojo", 2, 75, 150, -150)
                # (Line 214) adv.Shape_NxNSquareAt2(playerID, 1, "40 + 1n Mojo", 2, 75, -150, -150);
                adv.Shape_NxNSquareAt2(playerID, 1, "40 + 1n Mojo", 2, 75, -150, -150)
                # (Line 216) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 217) Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 218) Order("60 + 1n Danimoth", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 220) trg.Main_Wait(880);
                DoActions(Order("60 + 1n Danimoth", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(880)
                # (Line 222) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 223) }
                # (Line 225) else if (v.P_LoopMain[playerID] == 6)
            if EUDElseIf()(v.P_LoopMain[playerID] == 6):
                # (Line 226) {
                # (Line 227) s.CharacterVoice(14);
                s.CharacterVoice(14)
                # (Line 229) trg.Main_Wait(80);
                trg.Main_Wait(80)
                # (Line 231) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 232) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 233) }
                # (Line 234) }
            EUDEndIf()
            # (Line 236) else if (v.P_CountMain[playerID] == 3)
        if EUDElseIf()(v.P_CountMain[playerID] == 3):
            # (Line 237) {
            # (Line 238) if (v.P_LoopMain[playerID] < 4)
            if EUDIf()(v.P_LoopMain[playerID] >= 4, neg=True):
                # (Line 239) {
                # (Line 240) trg.Table_Sin(playerID, 22 + 45 * v.P_LoopMain[playerID], 100 + 75 * v.P_LoopMain[playerID]);
                trg.Table_Sin(playerID, 22 + 45 * v.P_LoopMain[playerID], 100 + 75 * v.P_LoopMain[playerID])
                # (Line 241) trg.Table_Cos(playerID, 22 + 45 * v.P_LoopMain[playerID], 100 + 75 * v.P_LoopMain[playerID]);
                trg.Table_Cos(playerID, 22 + 45 * v.P_LoopMain[playerID], 100 + 75 * v.P_LoopMain[playerID])
                # (Line 243) adv.Shape_NxNSquareAt2(playerID, 1, "100 + 1n Dragoon", 4, 75, v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
                adv.Shape_NxNSquareAt2(playerID, 1, "100 + 1n Dragoon", 4, 75, v.P_AngleCos[playerID], v.P_AngleSin[playerID])
                # (Line 244) KillUnitAt(All, "100 + 1n Dragoon", "Anywhere", playerID);
                # (Line 246) trg.Table_Sin(playerID, 22 + 45 * v.P_LoopMain[playerID], 100 + 75 * v.P_LoopMain[playerID]);
                DoActions(KillUnitAt(All, "100 + 1n Dragoon", "Anywhere", playerID))
                trg.Table_Sin(playerID, 22 + 45 * v.P_LoopMain[playerID], 100 + 75 * v.P_LoopMain[playerID])
                # (Line 247) trg.Table_Cos(playerID, 22 + 45 * v.P_LoopMain[playerID], 100 + 75 * v.P_LoopMain[playerID]);
                trg.Table_Cos(playerID, 22 + 45 * v.P_LoopMain[playerID], 100 + 75 * v.P_LoopMain[playerID])
                # (Line 249) trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
                trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", v.P_AngleCos[playerID], v.P_AngleSin[playerID])
                # (Line 250) ModifyUnitHangarCount(2, All, "40 + 1n Gantrithor", CurrentPlayer, "Anywhere");
                # (Line 251) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(ModifyUnitHangarCount(2, All, "40 + 1n Gantrithor", CurrentPlayer, "Anywhere"))
                # (Line 252) Order("40 + 1n Gantrithor", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 254) trg.Main_Wait(240);
                DoActions(Order("40 + 1n Gantrithor", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(240)
                # (Line 256) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 257) }
                # (Line 258) else if (v.P_LoopMain[playerID] == 4)
            if EUDElseIf()(v.P_LoopMain[playerID] == 4):
                # (Line 259) {
                # (Line 260) trg.Main_Wait(3600);
                trg.Main_Wait(3600)
                # (Line 262) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 263) }
                # (Line 264) else if (v.P_LoopMain[playerID] == 5)
            if EUDElseIf()(v.P_LoopMain[playerID] == 5):
                # (Line 265) {
                # (Line 266) s.CharacterVoice(15);
                s.CharacterVoice(15)
                # (Line 268) trg.Main_Wait(80);
                trg.Main_Wait(80)
                # (Line 270) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 271) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 272) }
                # (Line 274) }
            EUDEndIf()
            # (Line 275) else if (v.P_CountMain[playerID] == 4)
        if EUDElseIf()(v.P_CountMain[playerID] == 4):
            # (Line 276) {
            # (Line 277) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 278) {
                # (Line 279) KillUnitAt(All, "60 + 1n Danimoth", "Anywhere", playerID);
                # (Line 280) KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "60 + 1n Danimoth", "Anywhere", playerID))
                # (Line 283) trg.Main_Wait(1600);
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID))
                trg.Main_Wait(1600)
                # (Line 285) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 286) }
                # (Line 287) else if (v.P_LoopMain[playerID] == 1)
            if EUDElseIf()(v.P_LoopMain[playerID] == 1):
                # (Line 288) {
                # (Line 289) KillUnitAt(All, "60 + 1n Dragoon", "Anywhere", playerID);
                # (Line 290) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "60 + 1n Dragoon", "Anywhere", playerID))
                # (Line 292) trg.Main_Wait(1600);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                trg.Main_Wait(1600)
                # (Line 294) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 295) }
                # (Line 296) else if (v.P_LoopMain[playerID] == 2)
            if EUDElseIf()(v.P_LoopMain[playerID] == 2):
                # (Line 297) {
                # (Line 298) trg.Main_Wait(80);
                trg.Main_Wait(80)
                # (Line 300) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 301) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 302) }
                # (Line 304) }
            EUDEndIf()
            # (Line 305) else if (v.P_CountMain[playerID] == 5)
        if EUDElseIf()(v.P_CountMain[playerID] == 5):
            # (Line 306) {
            # (Line 308) KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID);
            # (Line 309) KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID);
            DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID))
            # (Line 310) SetSwitch("UiltimateSwitch", Clear);
            DoActions(KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID))
            # (Line 311) trg.SkillEnd();
            DoActions(SetSwitch("UiltimateSwitch", Clear))
            trg.SkillEnd()
            # (Line 312) }
            # (Line 313) }
        EUDEndIf()
        # (Line 314) if (v.P_WaitSub1[playerID] == 0)
    EUDEndIf()
    if EUDIf()(v.P_WaitSub1[playerID] == 0):
        # (Line 315) {
        # (Line 316) if (v.P_CountMain[playerID] < 5)
        if EUDIf()(v.P_CountMain[playerID] >= 5, neg=True):
            # (Line 317) {
            # (Line 318) if (v.P_CountSub1[playerID] == 0)
            if EUDIf()(v.P_CountSub1[playerID] == 0):
                # (Line 319) {
                # (Line 320) trg.Shape_Square(playerID, 1, " Unit. Schnee", 75, 75);
                trg.Shape_Square(playerID, 1, " Unit. Schnee", 75, 75)
                # (Line 322) KillUnitAt(All, " Unit. Schnee", "Anywhere", playerID);
                # (Line 324) trg.Sub1_Wait(160);
                DoActions(KillUnitAt(All, " Unit. Schnee", "Anywhere", playerID))
                trg.Sub1_Wait(160)
                # (Line 326) v.P_CountSub1[playerID] += 1;
                _ARRW(v.P_CountSub1, playerID).__iadd__(1)
                # (Line 327) }
                # (Line 328) else if (v.P_CountSub1[playerID] == 1)
            if EUDElseIf()(v.P_CountSub1[playerID] == 1):
                # (Line 329) {
                # (Line 330) trg.Shape_Square(playerID, 1, "120 + 1n Archon", 150, 0);
                trg.Shape_Square(playerID, 1, "120 + 1n Archon", 150, 0)
                # (Line 332) KillUnitAt(All, "120 + 1n Archon", "Anywhere", playerID);
                # (Line 334) trg.Sub1_Wait(160);
                DoActions(KillUnitAt(All, "120 + 1n Archon", "Anywhere", playerID))
                trg.Sub1_Wait(160)
                # (Line 336) v.P_CountSub1[playerID] += 1;
                _ARRW(v.P_CountSub1, playerID).__iadd__(1)
                # (Line 337) }
                # (Line 338) else if (v.P_CountSub1[playerID] == 2)
            if EUDElseIf()(v.P_CountSub1[playerID] == 2):
                # (Line 339) {
                # (Line 340) trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 150, 75);
                trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 150, 75)
                # (Line 342) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                # (Line 344) trg.Sub1_Wait(160);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                trg.Sub1_Wait(160)
                # (Line 346) v.P_CountSub1[playerID] += 1;
                _ARRW(v.P_CountSub1, playerID).__iadd__(1)
                # (Line 347) }
                # (Line 348) else if (v.P_CountSub1[playerID] == 3)
            if EUDElseIf()(v.P_CountSub1[playerID] == 3):
                # (Line 349) {
                # (Line 350) trg.Shape_Square(playerID, 1, "120 + 1n Archon", 150, 150);
                trg.Shape_Square(playerID, 1, "120 + 1n Archon", 150, 150)
                # (Line 352) KillUnitAt(All, "120 + 1n Archon", "Anywhere", playerID);
                # (Line 354) trg.Sub1_Wait(160);
                DoActions(KillUnitAt(All, "120 + 1n Archon", "Anywhere", playerID))
                trg.Sub1_Wait(160)
                # (Line 356) v.P_CountSub1[playerID] += 1;
                _ARRW(v.P_CountSub1, playerID).__iadd__(1)
                # (Line 357) }
                # (Line 358) else if (v.P_CountSub1[playerID] == 4)
            if EUDElseIf()(v.P_CountSub1[playerID] == 4):
                # (Line 359) {
                # (Line 360) trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 75, 150);
                trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 75, 150)
                # (Line 362) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                # (Line 364) trg.Sub1_Wait(160);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                trg.Sub1_Wait(160)
                # (Line 366) v.P_CountSub1[playerID] = 0;
                _ARRW(v.P_CountSub1, playerID) << (0)
                # (Line 367) }
                # (Line 368) }
            EUDEndIf()
            # (Line 369) }
        EUDEndIf()
        # (Line 370) }
    EUDEndIf()
