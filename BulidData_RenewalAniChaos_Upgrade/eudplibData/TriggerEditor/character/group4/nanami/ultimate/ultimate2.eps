import PluginVariables as msqcvar;
import variable as v;
import func.trig as trg;

function main(playerID)
{
   trg.Debuff_Stop();
   trg.Debuff_BanReturn();

   if (v.P_WaitMain[playerID] == 0)
   {
      if (v.P_CountMain[playerID] == 0)
      {
         if (v.P_LoopMain[playerID] < 12)
         {         
            trg.Shape_Square(playerID, 1, "60 + 1n Archon", 200, 0);
            trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 150, 50);
            trg.Shape_Square(playerID, 1, "60 + 1n Archon", 100, 100);
            trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 50, 150);
            trg.Shape_Edge(playerID, 1, "60 + 1n High Templar", 0, 5, 120);
            trg.Shape_Edge(playerID, 1, "Target", 0, 4, 80);
            trg.Shape_Dot(playerID, 24, "50 + 1n Tank", 0, 0);

            KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
            KillUnitAt(All, "Target", "Anywhere", playerID);
            KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID);
            KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
            KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);

            trg.Main_Wait(80);

            v.P_LoopMain[playerID] += 1;
         }
         else if (v.P_LoopMain[playerID] == 12)
         {
            trg.Shape_Edge(playerID, 1, " Unit. Hoffnung 25000", 0, 5, 120);
            trg.Shape_Edge(playerID, 1, " Unit. Hoffnung 25000", 0, 3, 80);
            trg.Shape_Edge(playerID, 1, " Unit. Hoffnung 25000", 0, 7, 160);
            KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID);

            trg.Main_Wait(80);

            v.P_CountMain[playerID] += 1;
            v.P_LoopMain[playerID] = 0;
         }
      }
      else if (v.P_CountMain[playerID] == 1)
      {
         if (playerID < 3)
         {
            SetDeaths(P1, Add, 250, " `UltimateCoolTime");
            SetDeaths(P2, Add, 250, " `UltimateCoolTime");
            SetDeaths(P3, Add, 250, " `UltimateCoolTime");
            SetDeaths(playerID, Subtract, 250, " `UltimateCoolTime");
         }
         else
         {
            SetDeaths(P4, Add, 250, " `UltimateCoolTime");
            SetDeaths(P5, Add, 250, " `UltimateCoolTime");
            SetDeaths(P6, Add, 250, " `UltimateCoolTime");
            SetDeaths(playerID, Subtract, 250, " `UltimateCoolTime");   
         }

         trg.SkillEnd();
      }
   }
}