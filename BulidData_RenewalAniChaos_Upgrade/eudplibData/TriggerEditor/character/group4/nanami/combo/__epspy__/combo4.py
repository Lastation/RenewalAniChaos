## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import variable as v;
import variable as v
# (Line 2) import func.trig as trg;
from func import trig as trg
# (Line 3) import func.sound as s;
from func import sound as s
# (Line 5) function main(playerID)
# (Line 6) {
@EUDFunc
def f_main(playerID):
    # (Line 7) trg.Debuff_Stop();
    trg.Debuff_Stop()
    # (Line 8) trg.Debuff_BanReturn();
    trg.Debuff_BanReturn()
    # (Line 9) MoveLocation("24.Nanami_Bozo", v.P_UnitID[playerID], playerID, "Anywhere");
    # (Line 11) if (v.P_WaitMain[playerID] == 0)
    DoActions(MoveLocation("24.Nanami_Bozo", v.P_UnitID[playerID], playerID, "Anywhere"))
    if EUDIf()(v.P_WaitMain[playerID] == 0):
        # (Line 12) {
        # (Line 13) if (v.P_CountMain[playerID] == 0)
        if EUDIf()(v.P_CountMain[playerID] == 0):
            # (Line 14) {
            # (Line 15) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 16) {
                # (Line 17) if (playerID < 3) SetSwitch("Passive - Nanami1", Set);
                if EUDIf()(playerID >= 3, neg=True):
                    # (Line 18) else SetSwitch("Passive - Nanami2", Set);
                    DoActions(SetSwitch("Passive - Nanami1", Set))
                if EUDElse()():
                    # (Line 20) trg.Shape_Edge(playerID, 1, "60 + 1n High Templar", 45, 5, 100);
                    DoActions(SetSwitch("Passive - Nanami2", Set))
                EUDEndIf()
                trg.Shape_Edge(playerID, 1, "60 + 1n High Templar", 45, 5, 100)
                # (Line 21) KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID);
                # (Line 23) trg.Main_Wait(320);
                DoActions(KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID))
                trg.Main_Wait(320)
                # (Line 25) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 26) }
                # (Line 27) else if (v.P_LoopMain[playerID] == 1)
            if EUDElseIf()(v.P_LoopMain[playerID] == 1):
                # (Line 28) {
                # (Line 29) trg.Shape_Edge(playerID, 1, "60 + 1n High Templar", 0, 5, 100);
                trg.Shape_Edge(playerID, 1, "60 + 1n High Templar", 0, 5, 100)
                # (Line 30) KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID);
                # (Line 32) trg.Main_Wait(320);
                DoActions(KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID))
                trg.Main_Wait(320)
                # (Line 34) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 35) }
                # (Line 36) else if (v.P_LoopMain[playerID] == 2)
            if EUDElseIf()(v.P_LoopMain[playerID] == 2):
                # (Line 37) {
                # (Line 38) trg.Shape_Edge(playerID, 1, "60 + 1n High Templar", 45, 5, 150);
                trg.Shape_Edge(playerID, 1, "60 + 1n High Templar", 45, 5, 150)
                # (Line 39) KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID);
                # (Line 41) trg.Main_Wait(320);
                DoActions(KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID))
                trg.Main_Wait(320)
                # (Line 43) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 44) }
                # (Line 45) else if (v.P_LoopMain[playerID] == 3)
            if EUDElseIf()(v.P_LoopMain[playerID] == 3):
                # (Line 46) {
                # (Line 47) trg.Shape_Edge(playerID, 1, "60 + 1n High Templar", 0, 5, 150);
                trg.Shape_Edge(playerID, 1, "60 + 1n High Templar", 0, 5, 150)
                # (Line 48) KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID);
                # (Line 50) trg.Main_Wait(320);
                DoActions(KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID))
                trg.Main_Wait(320)
                # (Line 52) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 53) }
                # (Line 54) else if (v.P_LoopMain[playerID] == 4)
            if EUDElseIf()(v.P_LoopMain[playerID] == 4):
                # (Line 55) {
                # (Line 56) trg.Table_Sin(playerID, 22, 75);
                trg.Table_Sin(playerID, 22, 75)
                # (Line 57) trg.Table_Cos(playerID, 22, 75);
                trg.Table_Cos(playerID, 22, 75)
                # (Line 59) trg.Shape_Square(playerID, 1, "60 + 1n High Templar", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
                trg.Shape_Square(playerID, 1, "60 + 1n High Templar", v.P_AngleCos[playerID], v.P_AngleSin[playerID])
                # (Line 60) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 61) MoveUnit(All, "60 + 1n High Templar", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 62) Order("60 + 1n High Templar", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveUnit(All, "60 + 1n High Templar", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                # (Line 64) trg.Main_Wait(160);
                DoActions(Order("60 + 1n High Templar", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(160)
                # (Line 66) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 67) }
                # (Line 68) else if (v.P_LoopMain[playerID] == 5)
            if EUDElseIf()(v.P_LoopMain[playerID] == 5):
                # (Line 69) {
                # (Line 70) trg.Table_Sin(playerID, 67, 150);
                trg.Table_Sin(playerID, 67, 150)
                # (Line 71) trg.Table_Cos(playerID, 67, 150);
                trg.Table_Cos(playerID, 67, 150)
                # (Line 73) trg.Shape_Square(playerID, 1, "60 + 1n Dragoon", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
                trg.Shape_Square(playerID, 1, "60 + 1n Dragoon", v.P_AngleCos[playerID], v.P_AngleSin[playerID])
                # (Line 74) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 75) MoveUnit(All, "60 + 1n Dragoon", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 76) Order("60 + 1n Dragoon", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveUnit(All, "60 + 1n Dragoon", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                # (Line 78) trg.Main_Wait(160);
                DoActions(Order("60 + 1n Dragoon", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(160)
                # (Line 80) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 81) }
                # (Line 82) else if (v.P_LoopMain[playerID] == 6)
            if EUDElseIf()(v.P_LoopMain[playerID] == 6):
                # (Line 83) {
                # (Line 84) trg.Shape_Edge(playerID, 1, "100 + 1n Dragoon", 45, 5, 150);
                trg.Shape_Edge(playerID, 1, "100 + 1n Dragoon", 45, 5, 150)
                # (Line 85) KillUnitAt(All, "100 + 1n Dragoon", "Anywhere", playerID);
                # (Line 87) trg.Table_Sin(playerID, 22, 225);
                DoActions(KillUnitAt(All, "100 + 1n Dragoon", "Anywhere", playerID))
                trg.Table_Sin(playerID, 22, 225)
                # (Line 88) trg.Table_Cos(playerID, 22, 225);
                trg.Table_Cos(playerID, 22, 225)
                # (Line 90) trg.Shape_Square(playerID, 1, "40 + 1n Mojo", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
                trg.Shape_Square(playerID, 1, "40 + 1n Mojo", v.P_AngleCos[playerID], v.P_AngleSin[playerID])
                # (Line 91) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 92) Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 94) trg.Main_Wait(160);
                DoActions(Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(160)
                # (Line 96) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 97) }
                # (Line 98) else if (v.P_LoopMain[playerID] == 7)
            if EUDElseIf()(v.P_LoopMain[playerID] == 7):
                # (Line 99) {
                # (Line 100) trg.Shape_Edge(playerID, 1, "100 + 1n Dragoon", 0, 5, 150);
                trg.Shape_Edge(playerID, 1, "100 + 1n Dragoon", 0, 5, 150)
                # (Line 101) KillUnitAt(All, "100 + 1n Dragoon", "Anywhere", playerID);
                # (Line 103) trg.Table_Sin(playerID, 22, 275);
                DoActions(KillUnitAt(All, "100 + 1n Dragoon", "Anywhere", playerID))
                trg.Table_Sin(playerID, 22, 275)
                # (Line 104) trg.Table_Cos(playerID, 22, 275);
                trg.Table_Cos(playerID, 22, 275)
                # (Line 106) trg.Shape_Square(playerID, 1, "60 + 1n Danimoth", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
                trg.Shape_Square(playerID, 1, "60 + 1n Danimoth", v.P_AngleCos[playerID], v.P_AngleSin[playerID])
                # (Line 107) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 108) Order("60 + 1n Danimoth", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 110) trg.Main_Wait(1120);
                DoActions(Order("60 + 1n Danimoth", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(1120)
                # (Line 112) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 113) }
                # (Line 114) else if (v.P_LoopMain[playerID] == 8)
            if EUDElseIf()(v.P_LoopMain[playerID] == 8):
                # (Line 115) {
                # (Line 116) trg.Main_Wait(80);
                trg.Main_Wait(80)
                # (Line 118) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 119) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 120) }
                # (Line 121) }
            EUDEndIf()
            # (Line 122) else if (v.P_CountMain[playerID] == 1)
        if EUDElseIf()(v.P_CountMain[playerID] == 1):
            # (Line 123) {
            # (Line 124) if (v.P_LoopMain[playerID] < 14)
            if EUDIf()(v.P_LoopMain[playerID] >= 14, neg=True):
                # (Line 125) {
                # (Line 126) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 128) if ((v.P_LoopMain[playerID] / 4) % 2 == 0)
                DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                if EUDIf()((v.P_LoopMain[playerID] // 4) % 2 == 0):
                    # (Line 129) {
                    # (Line 130) trg.Shape_Dot(playerID, 1, "40 + 1n Wraith", 160 - 40 * (v.P_LoopMain[playerID] % 4) , 40 * (v.P_LoopMain[playerID] % 4));
                    trg.Shape_Dot(playerID, 1, "40 + 1n Wraith", 160 - 40 * (v.P_LoopMain[playerID] % 4), 40 * (v.P_LoopMain[playerID] % 4))
                    # (Line 131) trg.Shape_Dot(playerID, 1, "40 + 1n Wraith", -160 + 40 * (v.P_LoopMain[playerID] % 4), -40 * (v.P_LoopMain[playerID] % 4));
                    trg.Shape_Dot(playerID, 1, "40 + 1n Wraith", -160 + 40 * (v.P_LoopMain[playerID] % 4), -40 * (v.P_LoopMain[playerID] % 4))
                    # (Line 132) }
                    # (Line 133) else if ((v.P_LoopMain[playerID] / 4) % 2 == 1)
                if EUDElseIf()((v.P_LoopMain[playerID] // 4) % 2 == 1):
                    # (Line 134) {
                    # (Line 135) trg.Shape_Dot(playerID, 1, "40 + 1n Wraith", -40 * (v.P_LoopMain[playerID] % 4), 160 - 40 * (v.P_LoopMain[playerID] % 4));
                    trg.Shape_Dot(playerID, 1, "40 + 1n Wraith", -40 * (v.P_LoopMain[playerID] % 4), 160 - 40 * (v.P_LoopMain[playerID] % 4))
                    # (Line 136) trg.Shape_Dot(playerID, 1, "40 + 1n Wraith", 40 * (v.P_LoopMain[playerID] % 4), -160 + 40 * (v.P_LoopMain[playerID] % 4));
                    trg.Shape_Dot(playerID, 1, "40 + 1n Wraith", 40 * (v.P_LoopMain[playerID] % 4), -160 + 40 * (v.P_LoopMain[playerID] % 4))
                    # (Line 137) }
                    # (Line 139) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                EUDEndIf()
                # (Line 140) Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 142) trg.Main_Wait(320);
                DoActions(Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(320)
                # (Line 144) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 145) }
                # (Line 146) else if (v.P_LoopMain[playerID] == 14)
            if EUDElseIf()(v.P_LoopMain[playerID] == 14):
                # (Line 147) {
                # (Line 148) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 150) s.CharacterVoice(5);
                DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                s.CharacterVoice(5)
                # (Line 152) trg.Main_Wait(80);
                trg.Main_Wait(80)
                # (Line 154) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 155) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 156) }
                # (Line 157) }
            EUDEndIf()
            # (Line 158) else if (v.P_CountMain[playerID] == 2)
        if EUDElseIf()(v.P_CountMain[playerID] == 2):
            # (Line 159) {
            # (Line 160) if (v.P_LoopMain[playerID] < 8)
            if EUDIf()(v.P_LoopMain[playerID] >= 8, neg=True):
                # (Line 161) {
                # (Line 162) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 164) if ((v.P_LoopMain[playerID] / 4) % 2 == 0)
                DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                if EUDIf()((v.P_LoopMain[playerID] // 4) % 2 == 0):
                    # (Line 165) {
                    # (Line 166) trg.Shape_Dot(playerID, 1, "40 + 1n Wraith", 160 - 40 * (v.P_LoopMain[playerID] % 4) , 40 * (v.P_LoopMain[playerID] % 4));
                    trg.Shape_Dot(playerID, 1, "40 + 1n Wraith", 160 - 40 * (v.P_LoopMain[playerID] % 4), 40 * (v.P_LoopMain[playerID] % 4))
                    # (Line 167) trg.Shape_Dot(playerID, 1, "40 + 1n Wraith", -160 + 40 * (v.P_LoopMain[playerID] % 4), -40 * (v.P_LoopMain[playerID] % 4));
                    trg.Shape_Dot(playerID, 1, "40 + 1n Wraith", -160 + 40 * (v.P_LoopMain[playerID] % 4), -40 * (v.P_LoopMain[playerID] % 4))
                    # (Line 168) }
                    # (Line 169) else if ((v.P_LoopMain[playerID] / 4) % 2 == 1)
                if EUDElseIf()((v.P_LoopMain[playerID] // 4) % 2 == 1):
                    # (Line 170) {
                    # (Line 171) trg.Shape_Dot(playerID, 1, "40 + 1n Wraith", -40 * (v.P_LoopMain[playerID] % 4), 160 - 40 * (v.P_LoopMain[playerID] % 4));
                    trg.Shape_Dot(playerID, 1, "40 + 1n Wraith", -40 * (v.P_LoopMain[playerID] % 4), 160 - 40 * (v.P_LoopMain[playerID] % 4))
                    # (Line 172) trg.Shape_Dot(playerID, 1, "40 + 1n Wraith", 40 * (v.P_LoopMain[playerID] % 4), -160 + 40 * (v.P_LoopMain[playerID] % 4));
                    trg.Shape_Dot(playerID, 1, "40 + 1n Wraith", 40 * (v.P_LoopMain[playerID] % 4), -160 + 40 * (v.P_LoopMain[playerID] % 4))
                    # (Line 173) }
                    # (Line 175) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                EUDEndIf()
                # (Line 176) Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 178) trg.Main_Wait(320);
                DoActions(Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(320)
                # (Line 180) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 181) }
                # (Line 182) else if (v.P_LoopMain[playerID] == 8)
            if EUDElseIf()(v.P_LoopMain[playerID] == 8):
                # (Line 183) {
                # (Line 184) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 186) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 188) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 189) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 190) }
                # (Line 191) }
            EUDEndIf()
            # (Line 193) else if (v.P_CountMain[playerID] == 3)
        if EUDElseIf()(v.P_CountMain[playerID] == 3):
            # (Line 194) {
            # (Line 195) KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID);
            # (Line 196) KillUnitAt(All, "60 + 1n Danimoth", "Anywhere", playerID);
            DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID))
            # (Line 197) KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID);
            DoActions(KillUnitAt(All, "60 + 1n Danimoth", "Anywhere", playerID))
            # (Line 198) KillUnitAt(All, "60 + 1n Dragoon", "Anywhere", playerID);
            DoActions(KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID))
            # (Line 199) SetSwitch("Passive - Nanami1", Clear);
            DoActions(KillUnitAt(All, "60 + 1n Dragoon", "Anywhere", playerID))
            # (Line 200) SetSwitch("Passive - Nanami2", Clear);
            DoActions(SetSwitch("Passive - Nanami1", Clear))
            # (Line 202) trg.SkillEnd();
            DoActions(SetSwitch("Passive - Nanami2", Clear))
            trg.SkillEnd()
            # (Line 203) }
            # (Line 204) }
        EUDEndIf()
        # (Line 205) if (v.P_WaitSub1[playerID] == 0)
    EUDEndIf()
    if EUDIf()(v.P_WaitSub1[playerID] == 0):
        # (Line 206) {
        # (Line 207) if (v.P_CountMain[playerID] < 3)
        if EUDIf()(v.P_CountMain[playerID] >= 3, neg=True):
            # (Line 208) {
            # (Line 209) if (v.P_CountSub1[playerID] == 0)
            if EUDIf()(v.P_CountSub1[playerID] == 0):
                # (Line 210) {
                # (Line 211) trg.Shape_Square(playerID, 1, "60 + 1n High Templar", 75, 75);
                trg.Shape_Square(playerID, 1, "60 + 1n High Templar", 75, 75)
                # (Line 213) KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID);
                # (Line 215) trg.Sub1_Wait(160);
                DoActions(KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID))
                trg.Sub1_Wait(160)
                # (Line 217) v.P_CountSub1[playerID] += 1;
                _ARRW(v.P_CountSub1, playerID).__iadd__(1)
                # (Line 218) }
                # (Line 219) else if (v.P_CountSub1[playerID] == 1)
            if EUDElseIf()(v.P_CountSub1[playerID] == 1):
                # (Line 220) {
                # (Line 221) trg.Shape_Square(playerID, 1, "60 + 1n Archon", 150, 0);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", 150, 0)
                # (Line 223) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                # (Line 225) trg.Sub1_Wait(160);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                trg.Sub1_Wait(160)
                # (Line 227) v.P_CountSub1[playerID] += 1;
                _ARRW(v.P_CountSub1, playerID).__iadd__(1)
                # (Line 228) }
                # (Line 229) else if (v.P_CountSub1[playerID] == 2)
            if EUDElseIf()(v.P_CountSub1[playerID] == 2):
                # (Line 230) {
                # (Line 231) trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 150, 75);
                trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 150, 75)
                # (Line 233) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                # (Line 235) trg.Sub1_Wait(160);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                trg.Sub1_Wait(160)
                # (Line 237) v.P_CountSub1[playerID] += 1;
                _ARRW(v.P_CountSub1, playerID).__iadd__(1)
                # (Line 238) }
                # (Line 239) else if (v.P_CountSub1[playerID] == 3)
            if EUDElseIf()(v.P_CountSub1[playerID] == 3):
                # (Line 240) {
                # (Line 241) trg.Shape_Square(playerID, 1, "60 + 1n Archon", 150, 150);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", 150, 150)
                # (Line 243) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                # (Line 245) trg.Sub1_Wait(160);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                trg.Sub1_Wait(160)
                # (Line 247) v.P_CountSub1[playerID] += 1;
                _ARRW(v.P_CountSub1, playerID).__iadd__(1)
                # (Line 248) }
                # (Line 249) else if (v.P_CountSub1[playerID] == 4)
            if EUDElseIf()(v.P_CountSub1[playerID] == 4):
                # (Line 250) {
                # (Line 251) trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 75, 150);
                trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 75, 150)
                # (Line 253) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                # (Line 255) trg.Sub1_Wait(160);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                trg.Sub1_Wait(160)
                # (Line 257) v.P_CountSub1[playerID] = 0;
                _ARRW(v.P_CountSub1, playerID) << (0)
                # (Line 258) }
                # (Line 259) }
            EUDEndIf()
            # (Line 260) }
        EUDEndIf()
        # (Line 261) if (v.P_WaitSub2[playerID] == 0)
    EUDEndIf()
    if EUDIf()(v.P_WaitSub2[playerID] == 0):
        # (Line 262) {
        # (Line 263) if (v.P_CountMain[playerID] < 2 && v.P_CountMain[playerID] > 0)
        if EUDIf()(EUDSCAnd()(v.P_CountMain[playerID] >= 2, neg=True)(v.P_CountMain[playerID] <= 0, neg=True)()):
            # (Line 264) {
            # (Line 265) if (v.P_CountSub2[playerID] == 8) v.P_CountSub2[playerID] = 0;
            if EUDIf()(v.P_CountSub2[playerID] == 8):
                _ARRW(v.P_CountSub2, playerID) << (0)
                # (Line 266) if (v.P_CountSub2[playerID] < 4)
            EUDEndIf()
            if EUDIf()(v.P_CountSub2[playerID] >= 4, neg=True):
                # (Line 267) {
                # (Line 268) trg.Shape_Dot(playerID, 1, " Unit. Schnee", 160 - 40 * v.P_CountSub2[playerID], 40 * v.P_CountSub2[playerID]);
                trg.Shape_Dot(playerID, 1, " Unit. Schnee", 160 - 40 * v.P_CountSub2[playerID], 40 * v.P_CountSub2[playerID])
                # (Line 269) trg.Shape_Dot(playerID, 1, " Unit. Schnee", -160 + 40 * v.P_CountSub2[playerID], -40 * v.P_CountSub2[playerID]);
                trg.Shape_Dot(playerID, 1, " Unit. Schnee", -160 + 40 * v.P_CountSub2[playerID], -40 * v.P_CountSub2[playerID])
                # (Line 270) trg.Shape_Dot(playerID, 1, "40 + 1n Zealot", -40 * v.P_CountSub2[playerID], 160 - 40 * v.P_CountSub2[playerID]);
                trg.Shape_Dot(playerID, 1, "40 + 1n Zealot", -40 * v.P_CountSub2[playerID], 160 - 40 * v.P_CountSub2[playerID])
                # (Line 271) trg.Shape_Dot(playerID, 1, "40 + 1n Zealot", 40 * v.P_CountSub2[playerID], -160 + 40 * v.P_CountSub2[playerID]);
                trg.Shape_Dot(playerID, 1, "40 + 1n Zealot", 40 * v.P_CountSub2[playerID], -160 + 40 * v.P_CountSub2[playerID])
                # (Line 273) KillUnitAt(All, " Unit. Schnee", "Anywhere", playerID);
                # (Line 274) KillUnitAt(All, "40 + 1n Zealot", "Anywhere", playerID);
                DoActions(KillUnitAt(All, " Unit. Schnee", "Anywhere", playerID))
                # (Line 276) trg.Sub2_Wait(320);
                DoActions(KillUnitAt(All, "40 + 1n Zealot", "Anywhere", playerID))
                trg.Sub2_Wait(320)
                # (Line 278) v.P_CountSub2[playerID] += 1;
                _ARRW(v.P_CountSub2, playerID).__iadd__(1)
                # (Line 279) }
                # (Line 280) else if (v.P_CountSub2[playerID] < 8)
            if EUDElseIf()(v.P_CountSub2[playerID] >= 8, neg=True):
                # (Line 281) {
                # (Line 282) trg.Shape_Dot(playerID, 1, " Unit. Schnee", -40 * (v.P_CountSub2[playerID] - 4), 160 - 40 * (v.P_CountSub2[playerID] - 4));
                trg.Shape_Dot(playerID, 1, " Unit. Schnee", -40 * (v.P_CountSub2[playerID] - 4), 160 - 40 * (v.P_CountSub2[playerID] - 4))
                # (Line 283) trg.Shape_Dot(playerID, 1, " Unit. Schnee", 40 * (v.P_CountSub2[playerID] - 4), -160 + 40 * (v.P_CountSub2[playerID] - 4));
                trg.Shape_Dot(playerID, 1, " Unit. Schnee", 40 * (v.P_CountSub2[playerID] - 4), -160 + 40 * (v.P_CountSub2[playerID] - 4))
                # (Line 284) trg.Shape_Dot(playerID, 1, "40 + 1n Zealot", 160 - 40 * (v.P_CountSub2[playerID] - 4), 40 * (v.P_CountSub2[playerID] - 4));
                trg.Shape_Dot(playerID, 1, "40 + 1n Zealot", 160 - 40 * (v.P_CountSub2[playerID] - 4), 40 * (v.P_CountSub2[playerID] - 4))
                # (Line 285) trg.Shape_Dot(playerID, 1, "40 + 1n Zealot", -160 + 40 * (v.P_CountSub2[playerID] - 4), -40 * (v.P_CountSub2[playerID] - 4));
                trg.Shape_Dot(playerID, 1, "40 + 1n Zealot", -160 + 40 * (v.P_CountSub2[playerID] - 4), -40 * (v.P_CountSub2[playerID] - 4))
                # (Line 287) KillUnitAt(All, " Unit. Schnee", "Anywhere", playerID);
                # (Line 288) KillUnitAt(All, "40 + 1n Zealot", "Anywhere", playerID);
                DoActions(KillUnitAt(All, " Unit. Schnee", "Anywhere", playerID))
                # (Line 290) trg.Sub2_Wait(320);
                DoActions(KillUnitAt(All, "40 + 1n Zealot", "Anywhere", playerID))
                trg.Sub2_Wait(320)
                # (Line 292) v.P_CountSub2[playerID] += 1;
                _ARRW(v.P_CountSub2, playerID).__iadd__(1)
                # (Line 293) }
                # (Line 294) }
            EUDEndIf()
            # (Line 295) else if (v.P_CountMain[playerID] < 3 && v.P_CountMain[playerID] > 1)
        if EUDElseIf()(EUDSCAnd()(v.P_CountMain[playerID] >= 3, neg=True)(v.P_CountMain[playerID] <= 1, neg=True)()):
            # (Line 296) {
            # (Line 297) if (v.P_CountSub2[playerID] == 8) v.P_CountSub2[playerID] = 0;
            if EUDIf()(v.P_CountSub2[playerID] == 8):
                _ARRW(v.P_CountSub2, playerID) << (0)
                # (Line 298) if (v.P_CountSub2[playerID] < 4)
            EUDEndIf()
            if EUDIf()(v.P_CountSub2[playerID] >= 4, neg=True):
                # (Line 299) {
                # (Line 300) trg.Shape_Dot(playerID, 1, " Unit. Hoffnung 25000", 160 - 40 * v.P_CountSub2[playerID], 40 * v.P_CountSub2[playerID]);
                trg.Shape_Dot(playerID, 1, " Unit. Hoffnung 25000", 160 - 40 * v.P_CountSub2[playerID], 40 * v.P_CountSub2[playerID])
                # (Line 301) trg.Shape_Dot(playerID, 1, " Unit. Hoffnung 25000", -160 + 40 * v.P_CountSub2[playerID], -40 * v.P_CountSub2[playerID]);
                trg.Shape_Dot(playerID, 1, " Unit. Hoffnung 25000", -160 + 40 * v.P_CountSub2[playerID], -40 * v.P_CountSub2[playerID])
                # (Line 302) trg.Shape_Dot(playerID, 1, "100 + 1n Dragoon", -40 * v.P_CountSub2[playerID], 160 - 40 * v.P_CountSub2[playerID]);
                trg.Shape_Dot(playerID, 1, "100 + 1n Dragoon", -40 * v.P_CountSub2[playerID], 160 - 40 * v.P_CountSub2[playerID])
                # (Line 303) trg.Shape_Dot(playerID, 1, "100 + 1n Dragoon", 40 * v.P_CountSub2[playerID], -160 + 40 * v.P_CountSub2[playerID]);
                trg.Shape_Dot(playerID, 1, "100 + 1n Dragoon", 40 * v.P_CountSub2[playerID], -160 + 40 * v.P_CountSub2[playerID])
                # (Line 305) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID);
                # (Line 306) KillUnitAt(All, "100 + 1n Dragoon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID))
                # (Line 308) trg.Sub2_Wait(320);
                DoActions(KillUnitAt(All, "100 + 1n Dragoon", "Anywhere", playerID))
                trg.Sub2_Wait(320)
                # (Line 310) v.P_CountSub2[playerID] += 1;
                _ARRW(v.P_CountSub2, playerID).__iadd__(1)
                # (Line 311) }
                # (Line 312) else if (v.P_CountSub2[playerID] < 8)
            if EUDElseIf()(v.P_CountSub2[playerID] >= 8, neg=True):
                # (Line 313) {
                # (Line 314) trg.Shape_Dot(playerID, 1, " Unit. Hoffnung 25000", -40 * (v.P_CountSub2[playerID] - 4), 160 - 40 * (v.P_CountSub2[playerID] - 4));
                trg.Shape_Dot(playerID, 1, " Unit. Hoffnung 25000", -40 * (v.P_CountSub2[playerID] - 4), 160 - 40 * (v.P_CountSub2[playerID] - 4))
                # (Line 315) trg.Shape_Dot(playerID, 1, " Unit. Hoffnung 25000", 40 * (v.P_CountSub2[playerID] - 4), -160 + 40 * (v.P_CountSub2[playerID] - 4));
                trg.Shape_Dot(playerID, 1, " Unit. Hoffnung 25000", 40 * (v.P_CountSub2[playerID] - 4), -160 + 40 * (v.P_CountSub2[playerID] - 4))
                # (Line 316) trg.Shape_Dot(playerID, 1, "100 + 1n Dragoon", 160 - 40 * (v.P_CountSub2[playerID] - 4), 40 * (v.P_CountSub2[playerID] - 4));
                trg.Shape_Dot(playerID, 1, "100 + 1n Dragoon", 160 - 40 * (v.P_CountSub2[playerID] - 4), 40 * (v.P_CountSub2[playerID] - 4))
                # (Line 317) trg.Shape_Dot(playerID, 1, "100 + 1n Dragoon", -160 + 40 * (v.P_CountSub2[playerID] - 4), -40 * (v.P_CountSub2[playerID] - 4));
                trg.Shape_Dot(playerID, 1, "100 + 1n Dragoon", -160 + 40 * (v.P_CountSub2[playerID] - 4), -40 * (v.P_CountSub2[playerID] - 4))
                # (Line 319) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID);
                # (Line 320) KillUnitAt(All, "100 + 1n Dragoon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID))
                # (Line 322) trg.Sub2_Wait(320);
                DoActions(KillUnitAt(All, "100 + 1n Dragoon", "Anywhere", playerID))
                trg.Sub2_Wait(320)
                # (Line 324) v.P_CountSub2[playerID] += 1;
                _ARRW(v.P_CountSub2, playerID).__iadd__(1)
                # (Line 325) }
                # (Line 326) }
            EUDEndIf()
            # (Line 329) }
        EUDEndIf()
        # (Line 330) }
    EUDEndIf()
