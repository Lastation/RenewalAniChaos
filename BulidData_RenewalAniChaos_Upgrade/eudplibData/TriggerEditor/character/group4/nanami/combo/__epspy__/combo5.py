## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import PluginVariables as msqcvar;
import PluginVariables as msqcvar
# (Line 2) import variable as v;
import variable as v
# (Line 3) import func.trig as trg;
from func import trig as trg
# (Line 4) import func.trigadv as adv;
from func import trigadv as adv
# (Line 5) import func.sound as s;
from func import sound as s
# (Line 7) function main(playerID)
# (Line 8) {
@EUDFunc
def f_main(playerID):
    # (Line 9) trg.Debuff_Stop();
    trg.Debuff_Stop()
    # (Line 10) trg.Debuff_BanReturn();
    trg.Debuff_BanReturn()
    # (Line 11) MoveLocation("24.Nanami_Bozo", v.P_UnitID[playerID], playerID, "Anywhere");
    # (Line 13) if (v.P_WaitMain[playerID] == 0)
    DoActions(MoveLocation("24.Nanami_Bozo", v.P_UnitID[playerID], playerID, "Anywhere"))
    if EUDIf()(v.P_WaitMain[playerID] == 0):
        # (Line 14) {
        # (Line 15) if (v.P_CountMain[playerID] == 0)
        if EUDIf()(v.P_CountMain[playerID] == 0):
            # (Line 16) {
            # (Line 17) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 18) {
                # (Line 19) if (playerID < 3) SetSwitch("Passive - Nanami1", Set);
                if EUDIf()(playerID >= 3, neg=True):
                    # (Line 20) else SetSwitch("Passive - Nanami2", Set);
                    DoActions(SetSwitch("Passive - Nanami1", Set))
                if EUDElse()():
                    # (Line 22) trg.Shape_Dot(playerID, 1, "60 + 1n Archon", -100, 100);
                    DoActions(SetSwitch("Passive - Nanami2", Set))
                EUDEndIf()
                trg.Shape_Dot(playerID, 1, "60 + 1n Archon", -100, 100)
                # (Line 23) trg.Shape_Dot(playerID, 1, "60 + 1n Siege", -100, 100);
                trg.Shape_Dot(playerID, 1, "60 + 1n Siege", -100, 100)
                # (Line 24) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                # (Line 26) trg.Main_Wait(160);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                trg.Main_Wait(160)
                # (Line 28) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 29) }
                # (Line 30) else if (v.P_LoopMain[playerID] == 1)
            if EUDElseIf()(v.P_LoopMain[playerID] == 1):
                # (Line 31) {
                # (Line 32) trg.Shape_Dot(playerID, 1, "60 + 1n Archon", 100, -100);
                trg.Shape_Dot(playerID, 1, "60 + 1n Archon", 100, -100)
                # (Line 33) trg.Shape_Dot(playerID, 1, "60 + 1n Siege", 100, -100);
                trg.Shape_Dot(playerID, 1, "60 + 1n Siege", 100, -100)
                # (Line 34) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                # (Line 36) trg.Main_Wait(160);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                trg.Main_Wait(160)
                # (Line 38) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 39) }
                # (Line 40) else if (v.P_LoopMain[playerID] == 2)
            if EUDElseIf()(v.P_LoopMain[playerID] == 2):
                # (Line 41) {
                # (Line 42) trg.Shape_Dot(playerID, 1, "60 + 1n Archon", 100, 100);
                trg.Shape_Dot(playerID, 1, "60 + 1n Archon", 100, 100)
                # (Line 43) trg.Shape_Dot(playerID, 1, "60 + 1n Siege", 100, 100);
                trg.Shape_Dot(playerID, 1, "60 + 1n Siege", 100, 100)
                # (Line 44) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                # (Line 46) trg.Main_Wait(160);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                trg.Main_Wait(160)
                # (Line 48) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 49) }
                # (Line 50) else if (v.P_LoopMain[playerID] == 3)
            if EUDElseIf()(v.P_LoopMain[playerID] == 3):
                # (Line 51) {
                # (Line 52) trg.Shape_Dot(playerID, 1, "60 + 1n Archon", -100, -100);
                trg.Shape_Dot(playerID, 1, "60 + 1n Archon", -100, -100)
                # (Line 53) trg.Shape_Dot(playerID, 1, "60 + 1n Siege", -100, -100);
                trg.Shape_Dot(playerID, 1, "60 + 1n Siege", -100, -100)
                # (Line 54) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                # (Line 56) trg.Main_Wait(160);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                trg.Main_Wait(160)
                # (Line 58) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 59) }
                # (Line 60) else if (v.P_LoopMain[playerID] == 4)
            if EUDElseIf()(v.P_LoopMain[playerID] == 4):
                # (Line 61) {
                # (Line 62) trg.Shape_Dot(playerID, 1, " Unit. Hoffnung 25000", -200, 0);
                trg.Shape_Dot(playerID, 1, " Unit. Hoffnung 25000", -200, 0)
                # (Line 63) trg.Shape_Dot(playerID, 1, "60 + 1n Siege", -200, 0);
                trg.Shape_Dot(playerID, 1, "60 + 1n Siege", -200, 0)
                # (Line 64) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID);
                # (Line 66) trg.Main_Wait(160);
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID))
                trg.Main_Wait(160)
                # (Line 68) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 69) }
                # (Line 70) else if (v.P_LoopMain[playerID] == 5)
            if EUDElseIf()(v.P_LoopMain[playerID] == 5):
                # (Line 71) {
                # (Line 72) trg.Shape_Dot(playerID, 1, " Unit. Hoffnung 25000", 200, 0);
                trg.Shape_Dot(playerID, 1, " Unit. Hoffnung 25000", 200, 0)
                # (Line 73) trg.Shape_Dot(playerID, 1, "60 + 1n Siege", 200, 0);
                trg.Shape_Dot(playerID, 1, "60 + 1n Siege", 200, 0)
                # (Line 74) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID);
                # (Line 76) trg.Main_Wait(160);
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID))
                trg.Main_Wait(160)
                # (Line 78) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 79) }
                # (Line 80) else if (v.P_LoopMain[playerID] == 6)
            if EUDElseIf()(v.P_LoopMain[playerID] == 6):
                # (Line 81) {
                # (Line 82) trg.Shape_Dot(playerID, 1, " Unit. Hoffnung 25000", 0, 200);
                trg.Shape_Dot(playerID, 1, " Unit. Hoffnung 25000", 0, 200)
                # (Line 83) trg.Shape_Dot(playerID, 1, "60 + 1n Siege", 0, 200);
                trg.Shape_Dot(playerID, 1, "60 + 1n Siege", 0, 200)
                # (Line 84) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID);
                # (Line 86) trg.Main_Wait(160);
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID))
                trg.Main_Wait(160)
                # (Line 88) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 89) }
                # (Line 90) else if (v.P_LoopMain[playerID] == 7)
            if EUDElseIf()(v.P_LoopMain[playerID] == 7):
                # (Line 91) {
                # (Line 92) trg.Shape_Dot(playerID, 1, " Unit. Hoffnung 25000", 0, -200);
                trg.Shape_Dot(playerID, 1, " Unit. Hoffnung 25000", 0, -200)
                # (Line 93) trg.Shape_Dot(playerID, 1, "60 + 1n Siege", 0, -200);
                trg.Shape_Dot(playerID, 1, "60 + 1n Siege", 0, -200)
                # (Line 94) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID);
                # (Line 96) trg.Main_Wait(160);
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID))
                trg.Main_Wait(160)
                # (Line 98) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 99) }
                # (Line 100) else if (v.P_LoopMain[playerID] == 8)
            if EUDElseIf()(v.P_LoopMain[playerID] == 8):
                # (Line 101) {
                # (Line 102) trg.Shape_Edge(playerID, 1, " Unit. Hoffnung 25000", 0, 7, 150);
                trg.Shape_Edge(playerID, 1, " Unit. Hoffnung 25000", 0, 7, 150)
                # (Line 103) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID);
                # (Line 105) trg.Main_Wait(160);
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID))
                trg.Main_Wait(160)
                # (Line 107) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 108) }
                # (Line 109) else if (v.P_LoopMain[playerID] == 9)
            if EUDElseIf()(v.P_LoopMain[playerID] == 9):
                # (Line 110) {
                # (Line 111) trg.Shape_Edge(playerID, 1, " Unit. Hoffnung 25000", 45, 7, 150);
                trg.Shape_Edge(playerID, 1, " Unit. Hoffnung 25000", 45, 7, 150)
                # (Line 112) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID);
                # (Line 113) trg.Shape_Edge(playerID, 1, "60 + 1n Danimoth", 0, 3, 150);
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID))
                trg.Shape_Edge(playerID, 1, "60 + 1n Danimoth", 0, 3, 150)
                # (Line 115) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 116) Order("60 + 1n Danimoth", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 118) trg.Main_Wait(1840);
                DoActions(Order("60 + 1n Danimoth", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(1840)
                # (Line 120) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 121) }
                # (Line 122) else if (v.P_LoopMain[playerID] == 10)
            if EUDElseIf()(v.P_LoopMain[playerID] == 10):
                # (Line 123) {
                # (Line 124) trg.Main_Wait(80);
                trg.Main_Wait(80)
                # (Line 126) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 127) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 128) }
                # (Line 129) }
            EUDEndIf()
            # (Line 130) else if (v.P_CountMain[playerID] == 1)
        if EUDElseIf()(v.P_CountMain[playerID] == 1):
            # (Line 131) {
            # (Line 132) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 133) {
                # (Line 134) trg.Shape_Edge(playerID, 1, "60 + 1n High Templar", 45, 5, 100);
                trg.Shape_Edge(playerID, 1, "60 + 1n High Templar", 45, 5, 100)
                # (Line 135) KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID);
                # (Line 137) trg.Main_Wait(160);
                DoActions(KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID))
                trg.Main_Wait(160)
                # (Line 139) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 140) }
                # (Line 141) else if (v.P_LoopMain[playerID] == 1)
            if EUDElseIf()(v.P_LoopMain[playerID] == 1):
                # (Line 142) {
                # (Line 143) trg.Shape_Edge(playerID, 1, "60 + 1n High Templar", 0, 5, 100);
                trg.Shape_Edge(playerID, 1, "60 + 1n High Templar", 0, 5, 100)
                # (Line 144) KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID);
                # (Line 146) trg.Main_Wait(160);
                DoActions(KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID))
                trg.Main_Wait(160)
                # (Line 148) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 149) }
                # (Line 150) else if (v.P_LoopMain[playerID] == 2)
            if EUDElseIf()(v.P_LoopMain[playerID] == 2):
                # (Line 151) {
                # (Line 152) trg.Shape_Edge(playerID, 1, "60 + 1n High Templar", 45, 5, 150);
                trg.Shape_Edge(playerID, 1, "60 + 1n High Templar", 45, 5, 150)
                # (Line 153) KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID);
                # (Line 155) trg.Main_Wait(160);
                DoActions(KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID))
                trg.Main_Wait(160)
                # (Line 157) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 158) }
                # (Line 159) else if (v.P_LoopMain[playerID] == 3)
            if EUDElseIf()(v.P_LoopMain[playerID] == 3):
                # (Line 160) {
                # (Line 161) trg.Shape_Edge(playerID, 1, "60 + 1n High Templar", 0, 5, 150);
                trg.Shape_Edge(playerID, 1, "60 + 1n High Templar", 0, 5, 150)
                # (Line 162) KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID);
                # (Line 164) trg.Main_Wait(160);
                DoActions(KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID))
                trg.Main_Wait(160)
                # (Line 166) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 167) }
                # (Line 168) else if (v.P_LoopMain[playerID] == 4)
            if EUDElseIf()(v.P_LoopMain[playerID] == 4):
                # (Line 169) {
                # (Line 170) trg.Shape_Edge(playerID, 1, "100 + 1n Dragoon", 45, 5, 150);
                trg.Shape_Edge(playerID, 1, "100 + 1n Dragoon", 45, 5, 150)
                # (Line 171) KillUnitAt(All, "100 + 1n Dragoon", "Anywhere", playerID);
                # (Line 173) trg.Shape_Edge(playerID, 1, "40 + 1n Mojo", 45, 3, 150);
                DoActions(KillUnitAt(All, "100 + 1n Dragoon", "Anywhere", playerID))
                trg.Shape_Edge(playerID, 1, "40 + 1n Mojo", 45, 3, 150)
                # (Line 174) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 175) Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 177) trg.Main_Wait(160);
                DoActions(Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(160)
                # (Line 179) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 180) }
                # (Line 181) else if (v.P_LoopMain[playerID] == 5)
            if EUDElseIf()(v.P_LoopMain[playerID] == 5):
                # (Line 182) {
                # (Line 183) trg.Shape_Edge(playerID, 1, "100 + 1n Dragoon", 0, 5, 150);
                trg.Shape_Edge(playerID, 1, "100 + 1n Dragoon", 0, 5, 150)
                # (Line 184) KillUnitAt(All, "100 + 1n Dragoon", "Anywhere", playerID);
                # (Line 186) trg.Main_Wait(1120);
                DoActions(KillUnitAt(All, "100 + 1n Dragoon", "Anywhere", playerID))
                trg.Main_Wait(1120)
                # (Line 188) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 189) }
                # (Line 190) else if (v.P_LoopMain[playerID] == 6)
            if EUDElseIf()(v.P_LoopMain[playerID] == 6):
                # (Line 191) {
                # (Line 192) trg.Main_Wait(80);
                trg.Main_Wait(80)
                # (Line 194) s.CharacterVoice(7);
                s.CharacterVoice(7)
                # (Line 196) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 197) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 198) v.P_CountSub2[playerID] = 0;
                _ARRW(v.P_CountSub2, playerID) << (0)
                # (Line 199) }
                # (Line 201) }
            EUDEndIf()
            # (Line 202) else if (v.P_CountMain[playerID] == 2)
        if EUDElseIf()(v.P_CountMain[playerID] == 2):
            # (Line 203) {
            # (Line 204) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 205) {
                # (Line 206) trg.Shape_Edge(playerID, 1, "60 + 1n High Templar", 45, 3, 100);
                trg.Shape_Edge(playerID, 1, "60 + 1n High Templar", 45, 3, 100)
                # (Line 207) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 208) MoveUnit(All, "60 + 1n High Templar", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 209) Order("60 + 1n High Templar", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveUnit(All, "60 + 1n High Templar", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                # (Line 211) trg.Main_Wait(3120);
                DoActions(Order("60 + 1n High Templar", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(3120)
                # (Line 213) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 214) }
                # (Line 215) else if (v.P_LoopMain[playerID] == 1)
            if EUDElseIf()(v.P_LoopMain[playerID] == 1):
                # (Line 216) {
                # (Line 217) trg.Main_Wait(80);
                trg.Main_Wait(80)
                # (Line 219) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 220) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 221) }
                # (Line 223) }
            EUDEndIf()
            # (Line 225) else if (v.P_CountMain[playerID] == 3)
        if EUDElseIf()(v.P_CountMain[playerID] == 3):
            # (Line 226) {
            # (Line 227) KillUnitAt(All, "60 + 1n Danimoth", "Anywhere", playerID);
            # (Line 228) KillUnitAt(All, "60 + 1n Siege", "Anywhere", playerID);
            DoActions(KillUnitAt(All, "60 + 1n Danimoth", "Anywhere", playerID))
            # (Line 229) KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID);
            DoActions(KillUnitAt(All, "60 + 1n Siege", "Anywhere", playerID))
            # (Line 230) KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID);
            DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID))
            # (Line 231) SetSwitch("Passive - Nanami1", Clear);
            DoActions(KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID))
            # (Line 232) SetSwitch("Passive - Nanami2", Clear);
            DoActions(SetSwitch("Passive - Nanami1", Clear))
            # (Line 234) trg.SkillEnd();
            DoActions(SetSwitch("Passive - Nanami2", Clear))
            trg.SkillEnd()
            # (Line 235) }
            # (Line 236) }
        EUDEndIf()
        # (Line 237) if (v.P_WaitSub1[playerID] == 0)
    EUDEndIf()
    if EUDIf()(v.P_WaitSub1[playerID] == 0):
        # (Line 238) {
        # (Line 239) if (v.P_CountMain[playerID] < 3)
        if EUDIf()(v.P_CountMain[playerID] >= 3, neg=True):
            # (Line 240) {
            # (Line 241) if (v.P_CountSub1[playerID] == 0)
            if EUDIf()(v.P_CountSub1[playerID] == 0):
                # (Line 242) {
                # (Line 243) trg.Shape_Square(playerID, 1, " Unit. Schnee", 75, 75);
                trg.Shape_Square(playerID, 1, " Unit. Schnee", 75, 75)
                # (Line 245) KillUnitAt(All, " Unit. Schnee", "Anywhere", playerID);
                # (Line 247) trg.Sub1_Wait(160);
                DoActions(KillUnitAt(All, " Unit. Schnee", "Anywhere", playerID))
                trg.Sub1_Wait(160)
                # (Line 249) v.P_CountSub1[playerID] += 1;
                _ARRW(v.P_CountSub1, playerID).__iadd__(1)
                # (Line 250) }
                # (Line 251) else if (v.P_CountSub1[playerID] == 1)
            if EUDElseIf()(v.P_CountSub1[playerID] == 1):
                # (Line 252) {
                # (Line 253) trg.Shape_Square(playerID, 1, "60 + 1n Archon", 150, 0);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", 150, 0)
                # (Line 255) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                # (Line 257) trg.Sub1_Wait(160);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                trg.Sub1_Wait(160)
                # (Line 259) v.P_CountSub1[playerID] += 1;
                _ARRW(v.P_CountSub1, playerID).__iadd__(1)
                # (Line 260) }
                # (Line 261) else if (v.P_CountSub1[playerID] == 2)
            if EUDElseIf()(v.P_CountSub1[playerID] == 2):
                # (Line 262) {
                # (Line 263) trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 150, 75);
                trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 150, 75)
                # (Line 265) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                # (Line 267) trg.Sub1_Wait(160);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                trg.Sub1_Wait(160)
                # (Line 269) v.P_CountSub1[playerID] += 1;
                _ARRW(v.P_CountSub1, playerID).__iadd__(1)
                # (Line 270) }
                # (Line 271) else if (v.P_CountSub1[playerID] == 3)
            if EUDElseIf()(v.P_CountSub1[playerID] == 3):
                # (Line 272) {
                # (Line 273) trg.Shape_Square(playerID, 1, "60 + 1n Archon", 150, 150);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", 150, 150)
                # (Line 275) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                # (Line 277) trg.Sub1_Wait(160);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                trg.Sub1_Wait(160)
                # (Line 279) v.P_CountSub1[playerID] += 1;
                _ARRW(v.P_CountSub1, playerID).__iadd__(1)
                # (Line 280) }
                # (Line 281) else if (v.P_CountSub1[playerID] == 4)
            if EUDElseIf()(v.P_CountSub1[playerID] == 4):
                # (Line 282) {
                # (Line 283) trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 75, 150);
                trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 75, 150)
                # (Line 285) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                # (Line 287) trg.Sub1_Wait(160);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                trg.Sub1_Wait(160)
                # (Line 289) v.P_CountSub1[playerID] = 0;
                _ARRW(v.P_CountSub1, playerID) << (0)
                # (Line 290) }
                # (Line 291) }
            EUDEndIf()
            # (Line 292) }
        EUDEndIf()
        # (Line 293) if (v.P_WaitSub2[playerID] == 0)
    EUDEndIf()
    if EUDIf()(v.P_WaitSub2[playerID] == 0):
        # (Line 294) {
        # (Line 295) if (v.P_CountMain[playerID] < 2 && v.P_CountMain[playerID] > 0)
        if EUDIf()(EUDSCAnd()(v.P_CountMain[playerID] >= 2, neg=True)(v.P_CountMain[playerID] <= 0, neg=True)()):
            # (Line 296) {
            # (Line 297) if (v.P_CountSub2[playerID] == 8) v.P_CountSub2[playerID] = 0;
            if EUDIf()(v.P_CountSub2[playerID] == 8):
                _ARRW(v.P_CountSub2, playerID) << (0)
                # (Line 298) if (v.P_CountSub2[playerID] < 4)
            EUDEndIf()
            if EUDIf()(v.P_CountSub2[playerID] >= 4, neg=True):
                # (Line 299) {
                # (Line 300) trg.Shape_Dot(playerID, 1, " Unit. Schnee", 160 - 40 * v.P_CountSub2[playerID], 40 * v.P_CountSub2[playerID]);
                trg.Shape_Dot(playerID, 1, " Unit. Schnee", 160 - 40 * v.P_CountSub2[playerID], 40 * v.P_CountSub2[playerID])
                # (Line 301) trg.Shape_Dot(playerID, 1, " Unit. Schnee", -160 + 40 * v.P_CountSub2[playerID], -40 * v.P_CountSub2[playerID]);
                trg.Shape_Dot(playerID, 1, " Unit. Schnee", -160 + 40 * v.P_CountSub2[playerID], -40 * v.P_CountSub2[playerID])
                # (Line 302) trg.Shape_Dot(playerID, 1, "40 + 1n Zealot", -40 * v.P_CountSub2[playerID], 160 - 40 * v.P_CountSub2[playerID]);
                trg.Shape_Dot(playerID, 1, "40 + 1n Zealot", -40 * v.P_CountSub2[playerID], 160 - 40 * v.P_CountSub2[playerID])
                # (Line 303) trg.Shape_Dot(playerID, 1, "40 + 1n Zealot", 40 * v.P_CountSub2[playerID], -160 + 40 * v.P_CountSub2[playerID]);
                trg.Shape_Dot(playerID, 1, "40 + 1n Zealot", 40 * v.P_CountSub2[playerID], -160 + 40 * v.P_CountSub2[playerID])
                # (Line 305) KillUnitAt(All, " Unit. Schnee", "Anywhere", playerID);
                # (Line 306) KillUnitAt(All, "40 + 1n Zealot", "Anywhere", playerID);
                DoActions(KillUnitAt(All, " Unit. Schnee", "Anywhere", playerID))
                # (Line 308) trg.Sub2_Wait(320);
                DoActions(KillUnitAt(All, "40 + 1n Zealot", "Anywhere", playerID))
                trg.Sub2_Wait(320)
                # (Line 310) v.P_CountSub2[playerID] += 1;
                _ARRW(v.P_CountSub2, playerID).__iadd__(1)
                # (Line 311) }
                # (Line 312) else if (v.P_CountSub2[playerID] < 8)
            if EUDElseIf()(v.P_CountSub2[playerID] >= 8, neg=True):
                # (Line 313) {
                # (Line 314) trg.Shape_Dot(playerID, 1, " Unit. Schnee", -40 * (v.P_CountSub2[playerID] - 4), 160 - 40 * (v.P_CountSub2[playerID] - 4));
                trg.Shape_Dot(playerID, 1, " Unit. Schnee", -40 * (v.P_CountSub2[playerID] - 4), 160 - 40 * (v.P_CountSub2[playerID] - 4))
                # (Line 315) trg.Shape_Dot(playerID, 1, " Unit. Schnee", 40 * (v.P_CountSub2[playerID] - 4), -160 + 40 * (v.P_CountSub2[playerID] - 4));
                trg.Shape_Dot(playerID, 1, " Unit. Schnee", 40 * (v.P_CountSub2[playerID] - 4), -160 + 40 * (v.P_CountSub2[playerID] - 4))
                # (Line 316) trg.Shape_Dot(playerID, 1, "40 + 1n Zealot", 160 - 40 * (v.P_CountSub2[playerID] - 4), 40 * (v.P_CountSub2[playerID] - 4));
                trg.Shape_Dot(playerID, 1, "40 + 1n Zealot", 160 - 40 * (v.P_CountSub2[playerID] - 4), 40 * (v.P_CountSub2[playerID] - 4))
                # (Line 317) trg.Shape_Dot(playerID, 1, "40 + 1n Zealot", -160 + 40 * (v.P_CountSub2[playerID] - 4), -40 * (v.P_CountSub2[playerID] - 4));
                trg.Shape_Dot(playerID, 1, "40 + 1n Zealot", -160 + 40 * (v.P_CountSub2[playerID] - 4), -40 * (v.P_CountSub2[playerID] - 4))
                # (Line 319) KillUnitAt(All, " Unit. Schnee", "Anywhere", playerID);
                # (Line 320) KillUnitAt(All, "40 + 1n Zealot", "Anywhere", playerID);
                DoActions(KillUnitAt(All, " Unit. Schnee", "Anywhere", playerID))
                # (Line 322) trg.Sub2_Wait(320);
                DoActions(KillUnitAt(All, "40 + 1n Zealot", "Anywhere", playerID))
                trg.Sub2_Wait(320)
                # (Line 324) v.P_CountSub2[playerID] += 1;
                _ARRW(v.P_CountSub2, playerID).__iadd__(1)
                # (Line 325) }
                # (Line 326) }
            EUDEndIf()
            # (Line 327) else if (v.P_CountMain[playerID] < 3 && v.P_CountMain[playerID] > 1)
        if EUDElseIf()(EUDSCAnd()(v.P_CountMain[playerID] >= 3, neg=True)(v.P_CountMain[playerID] <= 1, neg=True)()):
            # (Line 328) {
            # (Line 329) if (v.P_CountSub2[playerID] == 2) v.P_CountSub2[playerID] = 0;
            if EUDIf()(v.P_CountSub2[playerID] == 2):
                _ARRW(v.P_CountSub2, playerID) << (0)
                # (Line 330) if (v.P_CountSub2[playerID] < 2)
            EUDEndIf()
            if EUDIf()(v.P_CountSub2[playerID] >= 2, neg=True):
                # (Line 331) {
                # (Line 332) trg.Table_Sin(playerID, 22 + 45 * v.P_CountSub2[playerID], 100 + 50 * v.P_CountSub2[playerID]);
                trg.Table_Sin(playerID, 22 + 45 * v.P_CountSub2[playerID], 100 + 50 * v.P_CountSub2[playerID])
                # (Line 333) trg.Table_Cos(playerID, 22 + 45 * v.P_CountSub2[playerID], 100 + 50 * v.P_CountSub2[playerID]);
                trg.Table_Cos(playerID, 22 + 45 * v.P_CountSub2[playerID], 100 + 50 * v.P_CountSub2[playerID])
                # (Line 335) adv.Shape_NxNSquareAt2(playerID, 1, " Unit. Schnee", 3, 32, v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
                adv.Shape_NxNSquareAt2(playerID, 1, " Unit. Schnee", 3, 32, v.P_AngleCos[playerID], v.P_AngleSin[playerID])
                # (Line 336) adv.Shape_NxNSquareAt2(playerID, 1, " Unit. Schnee", 3, 32, -v.P_AngleCos[playerID], -v.P_AngleSin[playerID]);
                adv.Shape_NxNSquareAt2(playerID, 1, " Unit. Schnee", 3, 32, -v.P_AngleCos[playerID], -v.P_AngleSin[playerID])
                # (Line 337) adv.Shape_NxNSquareAt2(playerID, 1, " Unit. Schnee", 3, 32, -v.P_AngleSin[playerID], v.P_AngleCos[playerID]);
                adv.Shape_NxNSquareAt2(playerID, 1, " Unit. Schnee", 3, 32, -v.P_AngleSin[playerID], v.P_AngleCos[playerID])
                # (Line 338) adv.Shape_NxNSquareAt2(playerID, 1, " Unit. Schnee", 3, 32, v.P_AngleSin[playerID], -v.P_AngleCos[playerID]);
                adv.Shape_NxNSquareAt2(playerID, 1, " Unit. Schnee", 3, 32, v.P_AngleSin[playerID], -v.P_AngleCos[playerID])
                # (Line 340) KillUnitAt(All, " Unit. Schnee", "Anywhere", playerID);
                # (Line 342) trg.Sub2_Wait(320);
                DoActions(KillUnitAt(All, " Unit. Schnee", "Anywhere", playerID))
                trg.Sub2_Wait(320)
                # (Line 344) v.P_CountSub2[playerID] += 1;
                _ARRW(v.P_CountSub2, playerID).__iadd__(1)
                # (Line 345) }
                # (Line 346) }
            EUDEndIf()
            # (Line 349) }
        EUDEndIf()
        # (Line 350) }
    EUDEndIf()
