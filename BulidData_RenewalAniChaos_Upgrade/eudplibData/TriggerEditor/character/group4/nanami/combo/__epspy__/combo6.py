## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import variable as v;
import variable as v
# (Line 2) import func.trig as trg;
from func import trig as trg
# (Line 3) import func.trigadv as adv;
from func import trigadv as adv
# (Line 4) import func.sound as s;
from func import sound as s
# (Line 6) function main(playerID)
# (Line 7) {
@EUDFunc
def f_main(playerID):
    # (Line 8) MoveLocation("24.Nanami_Bozo", v.P_UnitID[playerID], playerID, "Anywhere");
    # (Line 10) if (v.P_WaitMain[playerID] == 0)
    DoActions(MoveLocation("24.Nanami_Bozo", v.P_UnitID[playerID], playerID, "Anywhere"))
    if EUDIf()(v.P_WaitMain[playerID] == 0):
        # (Line 11) {
        # (Line 12) if (v.P_CountMain[playerID] == 0)
        if EUDIf()(v.P_CountMain[playerID] == 0):
            # (Line 13) {
            # (Line 14) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 15) {
                # (Line 16) if (playerID < 3) SetSwitch("Passive - Nanami1", Set);
                if EUDIf()(playerID >= 3, neg=True):
                    # (Line 17) else SetSwitch("Passive - Nanami2", Set);
                    DoActions(SetSwitch("Passive - Nanami1", Set))
                if EUDElse()():
                    # (Line 19) adv.Shape_NxNSquareAt2(playerID, 1, "60 + 1n Danimoth", 2, 50, -100, 100);
                    DoActions(SetSwitch("Passive - Nanami2", Set))
                EUDEndIf()
                adv.Shape_NxNSquareAt2(playerID, 1, "60 + 1n Danimoth", 2, 50, -100, 100)
                # (Line 20) trg.Shape_Dot(playerID, 1, "60 + 1n Dragoon", -100, 100);
                trg.Shape_Dot(playerID, 1, "60 + 1n Dragoon", -100, 100)
                # (Line 22) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 23) Order("60 + 1n Danimoth", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 24) Order("60 + 1n Dragoon", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(Order("60 + 1n Danimoth", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 26) trg.Main_Wait(160);
                DoActions(Order("60 + 1n Dragoon", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(160)
                # (Line 28) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 29) }
                # (Line 30) else if (v.P_LoopMain[playerID] == 1)
            if EUDElseIf()(v.P_LoopMain[playerID] == 1):
                # (Line 31) {
                # (Line 32) KillUnitAt(All, "60 + 1n Danimoth", "Anywhere", playerID);
                # (Line 34) adv.Shape_NxNSquareAt2(playerID, 1, "60 + 1n Danimoth", 2, 50, 100, -100);
                DoActions(KillUnitAt(All, "60 + 1n Danimoth", "Anywhere", playerID))
                adv.Shape_NxNSquareAt2(playerID, 1, "60 + 1n Danimoth", 2, 50, 100, -100)
                # (Line 35) trg.Shape_Dot(playerID, 1, "60 + 1n Dragoon", 100, -100);
                trg.Shape_Dot(playerID, 1, "60 + 1n Dragoon", 100, -100)
                # (Line 37) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 38) Order("60 + 1n Danimoth", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 39) Order("60 + 1n Dragoon", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(Order("60 + 1n Danimoth", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 41) trg.Main_Wait(160);
                DoActions(Order("60 + 1n Dragoon", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(160)
                # (Line 43) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 44) }
                # (Line 45) else if (v.P_LoopMain[playerID] == 2)
            if EUDElseIf()(v.P_LoopMain[playerID] == 2):
                # (Line 46) {
                # (Line 47) KillUnitAt(All, "60 + 1n Danimoth", "Anywhere", playerID);
                # (Line 49) adv.Shape_NxNSquareAt2(playerID, 1, "60 + 1n Danimoth", 2, 50, 100, 100);
                DoActions(KillUnitAt(All, "60 + 1n Danimoth", "Anywhere", playerID))
                adv.Shape_NxNSquareAt2(playerID, 1, "60 + 1n Danimoth", 2, 50, 100, 100)
                # (Line 50) trg.Shape_Dot(playerID, 1, "60 + 1n Dragoon", 100, 100);
                trg.Shape_Dot(playerID, 1, "60 + 1n Dragoon", 100, 100)
                # (Line 52) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 53) Order("60 + 1n Danimoth", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 54) Order("60 + 1n Dragoon", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(Order("60 + 1n Danimoth", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 56) trg.Main_Wait(160);
                DoActions(Order("60 + 1n Dragoon", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(160)
                # (Line 58) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 59) }
                # (Line 60) else if (v.P_LoopMain[playerID] == 3)
            if EUDElseIf()(v.P_LoopMain[playerID] == 3):
                # (Line 61) {
                # (Line 62) KillUnitAt(All, "60 + 1n Danimoth", "Anywhere", playerID);
                # (Line 64) adv.Shape_NxNSquareAt2(playerID, 1, "60 + 1n Danimoth", 2, 50, -100, -100);
                DoActions(KillUnitAt(All, "60 + 1n Danimoth", "Anywhere", playerID))
                adv.Shape_NxNSquareAt2(playerID, 1, "60 + 1n Danimoth", 2, 50, -100, -100)
                # (Line 65) trg.Shape_Dot(playerID, 1, "60 + 1n Dragoon", -100, -100);
                trg.Shape_Dot(playerID, 1, "60 + 1n Dragoon", -100, -100)
                # (Line 67) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 68) Order("60 + 1n Danimoth", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 69) Order("60 + 1n Dragoon", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(Order("60 + 1n Danimoth", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 71) trg.Main_Wait(160);
                DoActions(Order("60 + 1n Dragoon", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(160)
                # (Line 73) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 74) }
                # (Line 75) else if (v.P_LoopMain[playerID] == 4)
            if EUDElseIf()(v.P_LoopMain[playerID] == 4):
                # (Line 76) {
                # (Line 77) KillUnitAt(All, "60 + 1n Danimoth", "Anywhere", playerID);
                # (Line 79) trg.Main_Wait(400);
                DoActions(KillUnitAt(All, "60 + 1n Danimoth", "Anywhere", playerID))
                trg.Main_Wait(400)
                # (Line 81) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 82) }
                # (Line 83) else if (v.P_LoopMain[playerID] == 5)
            if EUDElseIf()(v.P_LoopMain[playerID] == 5):
                # (Line 84) {
                # (Line 85) trg.Table_Sin(playerID, 22, 75);
                trg.Table_Sin(playerID, 22, 75)
                # (Line 86) trg.Table_Cos(playerID, 22, 75);
                trg.Table_Cos(playerID, 22, 75)
                # (Line 88) trg.Shape_Square(playerID, 1, "100 + 1n Dragoon", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
                trg.Shape_Square(playerID, 1, "100 + 1n Dragoon", v.P_AngleCos[playerID], v.P_AngleSin[playerID])
                # (Line 89) KillUnitAt(All, "100 + 1n Dragoon", "Anywhere", playerID);
                # (Line 91) trg.Shape_Square(playerID, 1, "40 + 1n Mojo", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
                DoActions(KillUnitAt(All, "100 + 1n Dragoon", "Anywhere", playerID))
                trg.Shape_Square(playerID, 1, "40 + 1n Mojo", v.P_AngleCos[playerID], v.P_AngleSin[playerID])
                # (Line 92) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 93) Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 95) trg.Main_Wait(320);
                DoActions(Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(320)
                # (Line 97) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 98) }
                # (Line 99) else if (v.P_LoopMain[playerID] == 6)
            if EUDElseIf()(v.P_LoopMain[playerID] == 6):
                # (Line 100) {
                # (Line 101) trg.Table_Sin(playerID, 67, 125);
                trg.Table_Sin(playerID, 67, 125)
                # (Line 102) trg.Table_Cos(playerID, 67, 125);
                trg.Table_Cos(playerID, 67, 125)
                # (Line 104) trg.Shape_Square(playerID, 1, "100 + 1n Dragoon", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
                trg.Shape_Square(playerID, 1, "100 + 1n Dragoon", v.P_AngleCos[playerID], v.P_AngleSin[playerID])
                # (Line 105) KillUnitAt(All, "100 + 1n Dragoon", "Anywhere", playerID);
                # (Line 107) trg.Shape_Square(playerID, 1, "60 + 1n Danimoth", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
                DoActions(KillUnitAt(All, "100 + 1n Dragoon", "Anywhere", playerID))
                trg.Shape_Square(playerID, 1, "60 + 1n Danimoth", v.P_AngleCos[playerID], v.P_AngleSin[playerID])
                # (Line 108) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 109) Order("60 + 1n Danimoth", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 111) trg.Main_Wait(320);
                DoActions(Order("60 + 1n Danimoth", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(320)
                # (Line 113) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 114) }
                # (Line 115) else if (v.P_LoopMain[playerID] == 7)
            if EUDElseIf()(v.P_LoopMain[playerID] == 7):
                # (Line 116) {
                # (Line 117) trg.Table_Sin(playerID, 22, 175);
                trg.Table_Sin(playerID, 22, 175)
                # (Line 118) trg.Table_Cos(playerID, 22, 175);
                trg.Table_Cos(playerID, 22, 175)
                # (Line 120) trg.Shape_Square(playerID, 1, "100 + 1n Dragoon", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
                trg.Shape_Square(playerID, 1, "100 + 1n Dragoon", v.P_AngleCos[playerID], v.P_AngleSin[playerID])
                # (Line 121) KillUnitAt(All, "100 + 1n Dragoon", "Anywhere", playerID);
                # (Line 123) trg.Shape_Square(playerID, 1, "40 + 1n Mojo", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
                DoActions(KillUnitAt(All, "100 + 1n Dragoon", "Anywhere", playerID))
                trg.Shape_Square(playerID, 1, "40 + 1n Mojo", v.P_AngleCos[playerID], v.P_AngleSin[playerID])
                # (Line 124) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 125) Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 127) trg.Main_Wait(320);
                DoActions(Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(320)
                # (Line 129) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 130) }
                # (Line 131) else if (v.P_LoopMain[playerID] == 8)
            if EUDElseIf()(v.P_LoopMain[playerID] == 8):
                # (Line 132) {
                # (Line 133) trg.Table_Sin(playerID, 67, 225);
                trg.Table_Sin(playerID, 67, 225)
                # (Line 134) trg.Table_Cos(playerID, 67, 225);
                trg.Table_Cos(playerID, 67, 225)
                # (Line 136) trg.Shape_Square(playerID, 1, "100 + 1n Dragoon", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
                trg.Shape_Square(playerID, 1, "100 + 1n Dragoon", v.P_AngleCos[playerID], v.P_AngleSin[playerID])
                # (Line 137) KillUnitAt(All, "100 + 1n Dragoon", "Anywhere", playerID);
                # (Line 139) trg.Shape_Square(playerID, 1, "60 + 1n Danimoth", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
                DoActions(KillUnitAt(All, "100 + 1n Dragoon", "Anywhere", playerID))
                trg.Shape_Square(playerID, 1, "60 + 1n Danimoth", v.P_AngleCos[playerID], v.P_AngleSin[playerID])
                # (Line 140) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 141) Order("60 + 1n Danimoth", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 143) trg.Main_Wait(320);
                DoActions(Order("60 + 1n Danimoth", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(320)
                # (Line 145) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 146) }
                # (Line 147) else if (v.P_LoopMain[playerID] == 9)
            if EUDElseIf()(v.P_LoopMain[playerID] == 9):
                # (Line 148) {
                # (Line 149) trg.Table_Sin(playerID, 22, 250);
                trg.Table_Sin(playerID, 22, 250)
                # (Line 150) trg.Table_Cos(playerID, 22, 250);
                trg.Table_Cos(playerID, 22, 250)
                # (Line 152) trg.Shape_Square(playerID, 1, "100 + 1n Dragoon", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
                trg.Shape_Square(playerID, 1, "100 + 1n Dragoon", v.P_AngleCos[playerID], v.P_AngleSin[playerID])
                # (Line 153) KillUnitAt(All, "100 + 1n Dragoon", "Anywhere", playerID);
                # (Line 155) trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
                DoActions(KillUnitAt(All, "100 + 1n Dragoon", "Anywhere", playerID))
                trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", v.P_AngleCos[playerID], v.P_AngleSin[playerID])
                # (Line 156) ModifyUnitHangarCount(2, All, "40 + 1n Gantrithor", CurrentPlayer, "Anywhere");
                # (Line 157) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(ModifyUnitHangarCount(2, All, "40 + 1n Gantrithor", CurrentPlayer, "Anywhere"))
                # (Line 158) Order("40 + 1n Gantrithor", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 160) trg.Main_Wait(320);
                DoActions(Order("40 + 1n Gantrithor", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(320)
                # (Line 162) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 163) }
                # (Line 164) else if (v.P_LoopMain[playerID] == 10)
            if EUDElseIf()(v.P_LoopMain[playerID] == 10):
                # (Line 165) {
                # (Line 166) trg.Table_Sin(playerID, 67, 275);
                trg.Table_Sin(playerID, 67, 275)
                # (Line 167) trg.Table_Cos(playerID, 67, 275);
                trg.Table_Cos(playerID, 67, 275)
                # (Line 169) trg.Shape_Square(playerID, 1, "100 + 1n Dragoon", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
                trg.Shape_Square(playerID, 1, "100 + 1n Dragoon", v.P_AngleCos[playerID], v.P_AngleSin[playerID])
                # (Line 170) KillUnitAt(All, "100 + 1n Dragoon", "Anywhere", playerID);
                # (Line 172) trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
                DoActions(KillUnitAt(All, "100 + 1n Dragoon", "Anywhere", playerID))
                trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", v.P_AngleCos[playerID], v.P_AngleSin[playerID])
                # (Line 173) ModifyUnitHangarCount(2, All, "40 + 1n Gantrithor", CurrentPlayer, "Anywhere");
                # (Line 174) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(ModifyUnitHangarCount(2, All, "40 + 1n Gantrithor", CurrentPlayer, "Anywhere"))
                # (Line 175) Order("40 + 1n Gantrithor", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 177) trg.Main_Wait(720);
                DoActions(Order("40 + 1n Gantrithor", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(720)
                # (Line 179) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 180) }
                # (Line 181) else if (v.P_LoopMain[playerID] == 11)
            if EUDElseIf()(v.P_LoopMain[playerID] == 11):
                # (Line 182) {
                # (Line 183) trg.Main_Wait(80);
                trg.Main_Wait(80)
                # (Line 185) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 186) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 187) }
                # (Line 188) }
            EUDEndIf()
            # (Line 189) else if (v.P_CountMain[playerID] == 1)
        if EUDElseIf()(v.P_CountMain[playerID] == 1):
            # (Line 190) {
            # (Line 191) if (v.P_LoopMain[playerID] < 8)
            if EUDIf()(v.P_LoopMain[playerID] >= 8, neg=True):
                # (Line 192) {
                # (Line 219) trg.Main_Wait(160);
                trg.Main_Wait(160)
                # (Line 221) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 222) }
                # (Line 223) else if (v.P_LoopMain[playerID] == 8)
            if EUDElseIf()(v.P_LoopMain[playerID] == 8):
                # (Line 224) {
                # (Line 225) trg.Main_Wait(2160);
                trg.Main_Wait(2160)
                # (Line 227) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 228) }
                # (Line 229) else if (v.P_LoopMain[playerID] == 9)
            if EUDElseIf()(v.P_LoopMain[playerID] == 9):
                # (Line 230) {
                # (Line 231) trg.Main_Wait(80);
                trg.Main_Wait(80)
                # (Line 233) s.CharacterVoice(9);
                s.CharacterVoice(9)
                # (Line 235) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 236) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 237) }
                # (Line 239) }
            EUDEndIf()
            # (Line 240) else if (v.P_CountMain[playerID] == 2)
        if EUDElseIf()(v.P_CountMain[playerID] == 2):
            # (Line 241) {
            # (Line 242) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 243) {
                # (Line 244) KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID);
                # (Line 246) trg.Main_Wait(1600);
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID))
                trg.Main_Wait(1600)
                # (Line 248) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 249) }
                # (Line 250) else if (v.P_LoopMain[playerID] == 1)
            if EUDElseIf()(v.P_LoopMain[playerID] == 1):
                # (Line 251) {
                # (Line 252) KillUnitAt(All, "60 + 1n Dragoon", "Anywhere", playerID);
                # (Line 254) trg.Main_Wait(1600);
                DoActions(KillUnitAt(All, "60 + 1n Dragoon", "Anywhere", playerID))
                trg.Main_Wait(1600)
                # (Line 256) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 257) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 258) }
                # (Line 260) }
            EUDEndIf()
            # (Line 262) else if (v.P_CountMain[playerID] == 3)
        if EUDElseIf()(v.P_CountMain[playerID] == 3):
            # (Line 263) {
            # (Line 264) KillUnitAt(All, "60 + 1n Danimoth", "Anywhere", playerID);
            # (Line 265) KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID);
            DoActions(KillUnitAt(All, "60 + 1n Danimoth", "Anywhere", playerID))
            # (Line 266) KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID);
            DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID))
            # (Line 267) KillUnitAt(All, "40 + 1n Zealot", "Anywhere", playerID);
            DoActions(KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID))
            # (Line 268) SetSwitch("Passive - Nanami1", Clear);
            DoActions(KillUnitAt(All, "40 + 1n Zealot", "Anywhere", playerID))
            # (Line 269) SetSwitch("Passive - Nanami2", Clear);
            DoActions(SetSwitch("Passive - Nanami1", Clear))
            # (Line 271) trg.SkillEnd();
            DoActions(SetSwitch("Passive - Nanami2", Clear))
            trg.SkillEnd()
            # (Line 272) }
            # (Line 273) }
        EUDEndIf()
        # (Line 274) if (v.P_WaitSub1[playerID] == 0)
    EUDEndIf()
    if EUDIf()(v.P_WaitSub1[playerID] == 0):
        # (Line 275) {
        # (Line 276) if (v.P_CountMain[playerID] < 3)
        if EUDIf()(v.P_CountMain[playerID] >= 3, neg=True):
            # (Line 277) {
            # (Line 278) if (v.P_CountSub1[playerID] == 0)
            if EUDIf()(v.P_CountSub1[playerID] == 0):
                # (Line 279) {
                # (Line 280) trg.Shape_Square(playerID, 1, " Unit. Schnee", 75, 75);
                trg.Shape_Square(playerID, 1, " Unit. Schnee", 75, 75)
                # (Line 282) KillUnitAt(All, " Unit. Schnee", "Anywhere", playerID);
                # (Line 284) trg.Sub1_Wait(160);
                DoActions(KillUnitAt(All, " Unit. Schnee", "Anywhere", playerID))
                trg.Sub1_Wait(160)
                # (Line 286) v.P_CountSub1[playerID] += 1;
                _ARRW(v.P_CountSub1, playerID).__iadd__(1)
                # (Line 287) }
                # (Line 288) else if (v.P_CountSub1[playerID] == 1)
            if EUDElseIf()(v.P_CountSub1[playerID] == 1):
                # (Line 289) {
                # (Line 290) trg.Shape_Square(playerID, 1, "60 + 1n Archon", 150, 0);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", 150, 0)
                # (Line 292) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                # (Line 294) trg.Sub1_Wait(160);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                trg.Sub1_Wait(160)
                # (Line 296) v.P_CountSub1[playerID] += 1;
                _ARRW(v.P_CountSub1, playerID).__iadd__(1)
                # (Line 297) }
                # (Line 298) else if (v.P_CountSub1[playerID] == 2)
            if EUDElseIf()(v.P_CountSub1[playerID] == 2):
                # (Line 299) {
                # (Line 300) trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 150, 75);
                trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 150, 75)
                # (Line 302) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                # (Line 304) trg.Sub1_Wait(160);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                trg.Sub1_Wait(160)
                # (Line 306) v.P_CountSub1[playerID] += 1;
                _ARRW(v.P_CountSub1, playerID).__iadd__(1)
                # (Line 307) }
                # (Line 308) else if (v.P_CountSub1[playerID] == 3)
            if EUDElseIf()(v.P_CountSub1[playerID] == 3):
                # (Line 309) {
                # (Line 310) trg.Shape_Square(playerID, 1, "60 + 1n Archon", 150, 150);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", 150, 150)
                # (Line 312) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                # (Line 314) trg.Sub1_Wait(160);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                trg.Sub1_Wait(160)
                # (Line 316) v.P_CountSub1[playerID] += 1;
                _ARRW(v.P_CountSub1, playerID).__iadd__(1)
                # (Line 317) }
                # (Line 318) else if (v.P_CountSub1[playerID] == 4)
            if EUDElseIf()(v.P_CountSub1[playerID] == 4):
                # (Line 319) {
                # (Line 320) trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 75, 150);
                trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 75, 150)
                # (Line 322) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                # (Line 324) trg.Sub1_Wait(160);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                trg.Sub1_Wait(160)
                # (Line 326) v.P_CountSub1[playerID] = 0;
                _ARRW(v.P_CountSub1, playerID) << (0)
                # (Line 327) }
                # (Line 328) }
            EUDEndIf()
            # (Line 329) }
        EUDEndIf()
        # (Line 330) if (v.P_WaitSub2[playerID] == 0)
    EUDEndIf()
    if EUDIf()(v.P_WaitSub2[playerID] == 0):
        # (Line 331) {
        # (Line 332) if (v.P_CountMain[playerID] < 1)
        if EUDIf()(v.P_CountMain[playerID] >= 1, neg=True):
            # (Line 333) {
            # (Line 334) if (v.P_CountSub2[playerID] == 8) v.P_CountSub2[playerID] = 0;
            if EUDIf()(v.P_CountSub2[playerID] == 8):
                _ARRW(v.P_CountSub2, playerID) << (0)
                # (Line 335) if (v.P_CountSub2[playerID] < 4)
            EUDEndIf()
            if EUDIf()(v.P_CountSub2[playerID] >= 4, neg=True):
                # (Line 336) {
                # (Line 337) trg.Shape_Dot(playerID, 1, " Unit. Schnee", 160 - 40 * v.P_CountSub2[playerID], 40 * v.P_CountSub2[playerID]);
                trg.Shape_Dot(playerID, 1, " Unit. Schnee", 160 - 40 * v.P_CountSub2[playerID], 40 * v.P_CountSub2[playerID])
                # (Line 338) trg.Shape_Dot(playerID, 1, " Unit. Schnee", -160 + 40 * v.P_CountSub2[playerID], -40 * v.P_CountSub2[playerID]);
                trg.Shape_Dot(playerID, 1, " Unit. Schnee", -160 + 40 * v.P_CountSub2[playerID], -40 * v.P_CountSub2[playerID])
                # (Line 339) trg.Shape_Dot(playerID, 1, "40 + 3n Zeratul", -40 * v.P_CountSub2[playerID], 160 - 40 * v.P_CountSub2[playerID]);
                trg.Shape_Dot(playerID, 1, "40 + 3n Zeratul", -40 * v.P_CountSub2[playerID], 160 - 40 * v.P_CountSub2[playerID])
                # (Line 340) trg.Shape_Dot(playerID, 1, "40 + 3n Zeratul", 40 * v.P_CountSub2[playerID], -160 + 40 * v.P_CountSub2[playerID]);
                trg.Shape_Dot(playerID, 1, "40 + 3n Zeratul", 40 * v.P_CountSub2[playerID], -160 + 40 * v.P_CountSub2[playerID])
                # (Line 342) KillUnitAt(All, " Unit. Schnee", "Anywhere", playerID);
                # (Line 343) KillUnitAt(All, "40 + 3n Zeratul", "Anywhere", playerID);
                DoActions(KillUnitAt(All, " Unit. Schnee", "Anywhere", playerID))
                # (Line 345) trg.Sub2_Wait(320);
                DoActions(KillUnitAt(All, "40 + 3n Zeratul", "Anywhere", playerID))
                trg.Sub2_Wait(320)
                # (Line 347) v.P_CountSub2[playerID] += 1;
                _ARRW(v.P_CountSub2, playerID).__iadd__(1)
                # (Line 348) }
                # (Line 349) else if (v.P_CountSub2[playerID] < 8)
            if EUDElseIf()(v.P_CountSub2[playerID] >= 8, neg=True):
                # (Line 350) {
                # (Line 351) trg.Shape_Dot(playerID, 1, " Unit. Schnee", -40 * (v.P_CountSub2[playerID] - 4), 160 - 40 * (v.P_CountSub2[playerID] - 4));
                trg.Shape_Dot(playerID, 1, " Unit. Schnee", -40 * (v.P_CountSub2[playerID] - 4), 160 - 40 * (v.P_CountSub2[playerID] - 4))
                # (Line 352) trg.Shape_Dot(playerID, 1, " Unit. Schnee", 40 * (v.P_CountSub2[playerID] - 4), -160 + 40 * (v.P_CountSub2[playerID] - 4));
                trg.Shape_Dot(playerID, 1, " Unit. Schnee", 40 * (v.P_CountSub2[playerID] - 4), -160 + 40 * (v.P_CountSub2[playerID] - 4))
                # (Line 353) trg.Shape_Dot(playerID, 1, "40 + 3n Zeratul", 160 - 40 * (v.P_CountSub2[playerID] - 4), 40 * (v.P_CountSub2[playerID] - 4));
                trg.Shape_Dot(playerID, 1, "40 + 3n Zeratul", 160 - 40 * (v.P_CountSub2[playerID] - 4), 40 * (v.P_CountSub2[playerID] - 4))
                # (Line 354) trg.Shape_Dot(playerID, 1, "40 + 3n Zeratul", -160 + 40 * (v.P_CountSub2[playerID] - 4), -40 * (v.P_CountSub2[playerID] - 4));
                trg.Shape_Dot(playerID, 1, "40 + 3n Zeratul", -160 + 40 * (v.P_CountSub2[playerID] - 4), -40 * (v.P_CountSub2[playerID] - 4))
                # (Line 356) KillUnitAt(All, " Unit. Schnee", "Anywhere", playerID);
                # (Line 357) KillUnitAt(All, "40 + 3n Zeratul", "Anywhere", playerID);
                DoActions(KillUnitAt(All, " Unit. Schnee", "Anywhere", playerID))
                # (Line 359) trg.Sub2_Wait(320);
                DoActions(KillUnitAt(All, "40 + 3n Zeratul", "Anywhere", playerID))
                trg.Sub2_Wait(320)
                # (Line 361) v.P_CountSub2[playerID] += 1;
                _ARRW(v.P_CountSub2, playerID).__iadd__(1)
                # (Line 362) }
                # (Line 363) }
            EUDEndIf()
            # (Line 364) else if (v.P_CountMain[playerID] < 2 && v.P_CountMain[playerID] > 0)
        if EUDElseIf()(EUDSCAnd()(v.P_CountMain[playerID] >= 2, neg=True)(v.P_CountMain[playerID] <= 0, neg=True)()):
            # (Line 365) {
            # (Line 366) if (v.P_CountSub2[playerID] == 8) v.P_CountSub2[playerID] = 0;
            if EUDIf()(v.P_CountSub2[playerID] == 8):
                _ARRW(v.P_CountSub2, playerID) << (0)
                # (Line 367) if (v.P_CountSub2[playerID] < 4)
            EUDEndIf()
            if EUDIf()(v.P_CountSub2[playerID] >= 4, neg=True):
                # (Line 368) {
                # (Line 369) trg.Shape_Dot(playerID, 1, " Unit. Hoffnung 25000", 160 - 40 * v.P_CountSub2[playerID], 40 * v.P_CountSub2[playerID]);
                trg.Shape_Dot(playerID, 1, " Unit. Hoffnung 25000", 160 - 40 * v.P_CountSub2[playerID], 40 * v.P_CountSub2[playerID])
                # (Line 370) trg.Shape_Dot(playerID, 1, " Unit. Hoffnung 25000", -160 + 40 * v.P_CountSub2[playerID], -40 * v.P_CountSub2[playerID]);
                trg.Shape_Dot(playerID, 1, " Unit. Hoffnung 25000", -160 + 40 * v.P_CountSub2[playerID], -40 * v.P_CountSub2[playerID])
                # (Line 371) trg.Shape_Dot(playerID, 1, "100 + 1n Dragoon", -40 * v.P_CountSub2[playerID], 160 - 40 * v.P_CountSub2[playerID]);
                trg.Shape_Dot(playerID, 1, "100 + 1n Dragoon", -40 * v.P_CountSub2[playerID], 160 - 40 * v.P_CountSub2[playerID])
                # (Line 372) trg.Shape_Dot(playerID, 1, "100 + 1n Dragoon", 40 * v.P_CountSub2[playerID], -160 + 40 * v.P_CountSub2[playerID]);
                trg.Shape_Dot(playerID, 1, "100 + 1n Dragoon", 40 * v.P_CountSub2[playerID], -160 + 40 * v.P_CountSub2[playerID])
                # (Line 374) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID);
                # (Line 375) KillUnitAt(All, "100 + 1n Dragoon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID))
                # (Line 377) trg.Sub2_Wait(320);
                DoActions(KillUnitAt(All, "100 + 1n Dragoon", "Anywhere", playerID))
                trg.Sub2_Wait(320)
                # (Line 379) v.P_CountSub2[playerID] += 1;
                _ARRW(v.P_CountSub2, playerID).__iadd__(1)
                # (Line 380) }
                # (Line 381) else if (v.P_CountSub2[playerID] < 8)
            if EUDElseIf()(v.P_CountSub2[playerID] >= 8, neg=True):
                # (Line 382) {
                # (Line 383) trg.Shape_Dot(playerID, 1, " Unit. Hoffnung 25000", -40 * (v.P_CountSub2[playerID] - 4), 160 - 40 * (v.P_CountSub2[playerID] - 4));
                trg.Shape_Dot(playerID, 1, " Unit. Hoffnung 25000", -40 * (v.P_CountSub2[playerID] - 4), 160 - 40 * (v.P_CountSub2[playerID] - 4))
                # (Line 384) trg.Shape_Dot(playerID, 1, " Unit. Hoffnung 25000", 40 * (v.P_CountSub2[playerID] - 4), -160 + 40 * (v.P_CountSub2[playerID] - 4));
                trg.Shape_Dot(playerID, 1, " Unit. Hoffnung 25000", 40 * (v.P_CountSub2[playerID] - 4), -160 + 40 * (v.P_CountSub2[playerID] - 4))
                # (Line 385) trg.Shape_Dot(playerID, 1, "100 + 1n Dragoon", 160 - 40 * (v.P_CountSub2[playerID] - 4), 40 * (v.P_CountSub2[playerID] - 4));
                trg.Shape_Dot(playerID, 1, "100 + 1n Dragoon", 160 - 40 * (v.P_CountSub2[playerID] - 4), 40 * (v.P_CountSub2[playerID] - 4))
                # (Line 386) trg.Shape_Dot(playerID, 1, "100 + 1n Dragoon", -160 + 40 * (v.P_CountSub2[playerID] - 4), -40 * (v.P_CountSub2[playerID] - 4));
                trg.Shape_Dot(playerID, 1, "100 + 1n Dragoon", -160 + 40 * (v.P_CountSub2[playerID] - 4), -40 * (v.P_CountSub2[playerID] - 4))
                # (Line 388) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID);
                # (Line 389) KillUnitAt(All, "100 + 1n Dragoon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID))
                # (Line 391) trg.Sub2_Wait(320);
                DoActions(KillUnitAt(All, "100 + 1n Dragoon", "Anywhere", playerID))
                trg.Sub2_Wait(320)
                # (Line 393) v.P_CountSub2[playerID] += 1;
                _ARRW(v.P_CountSub2, playerID).__iadd__(1)
                # (Line 394) }
                # (Line 395) }
            EUDEndIf()
            # (Line 398) }
        EUDEndIf()
        # (Line 399) }
    EUDEndIf()
