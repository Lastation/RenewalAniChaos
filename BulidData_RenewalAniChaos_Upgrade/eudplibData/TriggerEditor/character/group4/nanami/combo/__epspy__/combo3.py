## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import PluginVariables as msqcvar;
import PluginVariables as msqcvar
# (Line 2) import variable as v;
import variable as v
# (Line 3) import func.trig as trg;
from func import trig as trg
# (Line 4) import func.trigadv as adv;
from func import trigadv as adv
# (Line 6) function main(playerID)
# (Line 7) {
@EUDFunc
def f_main(playerID):
    # (Line 8) trg.Debuff_Stop();
    trg.Debuff_Stop()
    # (Line 9) trg.Debuff_BanReturn();
    trg.Debuff_BanReturn()
    # (Line 10) MoveLocation("24.Nanami_Bozo", v.P_UnitID[playerID], playerID, "Anywhere");
    # (Line 11) if (v.P_WaitMain[playerID] == 0)
    DoActions(MoveLocation("24.Nanami_Bozo", v.P_UnitID[playerID], playerID, "Anywhere"))
    if EUDIf()(v.P_WaitMain[playerID] == 0):
        # (Line 12) {
        # (Line 13) if (v.P_CountMain[playerID] == 0)
        if EUDIf()(v.P_CountMain[playerID] == 0):
            # (Line 14) {
            # (Line 15) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 16) {
                # (Line 17) if (playerID < 3) SetSwitch("Passive - Nanami1", Set);
                if EUDIf()(playerID >= 3, neg=True):
                    # (Line 18) else SetSwitch("Passive - Nanami2", Set);
                    DoActions(SetSwitch("Passive - Nanami1", Set))
                if EUDElse()():
                    # (Line 19) }
                    DoActions(SetSwitch("Passive - Nanami2", Set))
                EUDEndIf()
                # (Line 21) if (v.P_LoopMain[playerID] < 4)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] >= 4, neg=True):
                # (Line 22) {
                # (Line 23) trg.Shape_Dot(playerID, 1, "Protoss Dark Templar", 100 - 50 * v.P_LoopMain[playerID], 100);
                trg.Shape_Dot(playerID, 1, "Protoss Dark Templar", 100 - 50 * v.P_LoopMain[playerID], 100)
                # (Line 24) trg.Shape_Dot(playerID, 1, "Protoss Dark Templar", -100 + 50 * v.P_LoopMain[playerID], -100);
                trg.Shape_Dot(playerID, 1, "Protoss Dark Templar", -100 + 50 * v.P_LoopMain[playerID], -100)
                # (Line 25) trg.Shape_Dot(playerID, 1, "40 + 1n Zealot", -100, 100 - 50 * v.P_LoopMain[playerID]);
                trg.Shape_Dot(playerID, 1, "40 + 1n Zealot", -100, 100 - 50 * v.P_LoopMain[playerID])
                # (Line 26) trg.Shape_Dot(playerID, 1, "40 + 1n Zealot", 100, -100 + 50 * v.P_LoopMain[playerID]);
                trg.Shape_Dot(playerID, 1, "40 + 1n Zealot", 100, -100 + 50 * v.P_LoopMain[playerID])
                # (Line 27) KillUnitAt(All, "40 + 1n Zealot", "Anywhere", playerID);
                # (Line 28) KillUnitAt(All, "Protoss Dark Templar", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Zealot", "Anywhere", playerID))
                # (Line 30) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "Protoss Dark Templar", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 31) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 32) }
                # (Line 33) else if (v.P_LoopMain[playerID] == 4)
            if EUDElseIf()(v.P_LoopMain[playerID] == 4):
                # (Line 34) {
                # (Line 35) trg.Shape_Square(playerID, 1, "Target", 50, 0);
                trg.Shape_Square(playerID, 1, "Target", 50, 0)
                # (Line 36) trg.Shape_Square(playerID, 1, "Target", 100, 0);
                trg.Shape_Square(playerID, 1, "Target", 100, 0)
                # (Line 37) trg.Shape_Square(playerID, 1, "60 + 1n High Templar", 50, 0);
                trg.Shape_Square(playerID, 1, "60 + 1n High Templar", 50, 0)
                # (Line 38) trg.Shape_Square(playerID, 1, "60 + 1n High Templar", 100, 0);
                trg.Shape_Square(playerID, 1, "60 + 1n High Templar", 100, 0)
                # (Line 39) KillUnitAt(All, "Target", "Anywhere", playerID);
                # (Line 40) KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "Target", "Anywhere", playerID))
                # (Line 42) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 44) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 45) }
                # (Line 46) else if (v.P_LoopMain[playerID] == 5)
            if EUDElseIf()(v.P_LoopMain[playerID] == 5):
                # (Line 47) {
                # (Line 48) trg.Shape_Square(playerID, 1, "Target", 50, 50);
                trg.Shape_Square(playerID, 1, "Target", 50, 50)
                # (Line 49) trg.Shape_Square(playerID, 1, "Target", 100, 100);
                trg.Shape_Square(playerID, 1, "Target", 100, 100)
                # (Line 50) trg.Shape_Square(playerID, 1, "60 + 1n High Templar", 50, 50);
                trg.Shape_Square(playerID, 1, "60 + 1n High Templar", 50, 50)
                # (Line 51) trg.Shape_Square(playerID, 1, "60 + 1n High Templar", 100, 100);
                trg.Shape_Square(playerID, 1, "60 + 1n High Templar", 100, 100)
                # (Line 52) KillUnitAt(All, "Target", "Anywhere", playerID);
                # (Line 53) KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "Target", "Anywhere", playerID))
                # (Line 55) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 57) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 58) }
                # (Line 59) else if (v.P_LoopMain[playerID] == 6)
            if EUDElseIf()(v.P_LoopMain[playerID] == 6):
                # (Line 60) {
                # (Line 61) trg.Shape_Edge(playerID, 1, "40 + 1n Guardian", 0, 7, 150);
                trg.Shape_Edge(playerID, 1, "40 + 1n Guardian", 0, 7, 150)
                # (Line 62) trg.Shape_Edge(playerID, 1, "Protoss Dark Archon", 0, 7, 150);
                trg.Shape_Edge(playerID, 1, "Protoss Dark Archon", 0, 7, 150)
                # (Line 63) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
                # (Line 64) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID))
                # (Line 66) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 68) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 69) }
                # (Line 70) else if (v.P_LoopMain[playerID] == 7)
            if EUDElseIf()(v.P_LoopMain[playerID] == 7):
                # (Line 71) {
                # (Line 72) trg.Shape_Edge(playerID, 1, "Kakaru (Twilight)", 0, 5, 100);
                trg.Shape_Edge(playerID, 1, "Kakaru (Twilight)", 0, 5, 100)
                # (Line 73) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);
                # (Line 75) trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 200, 125);
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID))
                trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 200, 125)
                # (Line 76) trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 125, 200);
                trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 125, 200)
                # (Line 77) trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 200, 275);
                trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 200, 275)
                # (Line 78) trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 275, 200);
                trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 275, 200)
                # (Line 79) trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 200, 125);
                trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 200, 125)
                # (Line 80) trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 125, 200);
                trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 125, 200)
                # (Line 81) trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 200, 275);
                trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 200, 275)
                # (Line 82) trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 275, 200);
                trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 275, 200)
                # (Line 83) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
                # (Line 84) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID))
                # (Line 86) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 88) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 89) }
                # (Line 90) else if (v.P_LoopMain[playerID] == 8)
            if EUDElseIf()(v.P_LoopMain[playerID] == 8):
                # (Line 91) {
                # (Line 92) trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 200, 125);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 200, 125)
                # (Line 93) trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 125, 200);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 125, 200)
                # (Line 94) trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 200, 275);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 200, 275)
                # (Line 95) trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 275, 200);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 275, 200)
                # (Line 96) trg.Shape_Square(playerID, 1, "60 + 1n Siege", 200, 125);
                trg.Shape_Square(playerID, 1, "60 + 1n Siege", 200, 125)
                # (Line 97) trg.Shape_Square(playerID, 1, "60 + 1n Siege", 125, 200);
                trg.Shape_Square(playerID, 1, "60 + 1n Siege", 125, 200)
                # (Line 98) trg.Shape_Square(playerID, 1, "60 + 1n Siege", 200, 275);
                trg.Shape_Square(playerID, 1, "60 + 1n Siege", 200, 275)
                # (Line 99) trg.Shape_Square(playerID, 1, "60 + 1n Siege", 275, 200);
                trg.Shape_Square(playerID, 1, "60 + 1n Siege", 275, 200)
                # (Line 100) trg.Shape_Square(playerID, 1, "50 + 1n Tank", 200, 125);
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", 200, 125)
                # (Line 101) trg.Shape_Square(playerID, 1, "50 + 1n Tank", 125, 200);
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", 125, 200)
                # (Line 102) trg.Shape_Square(playerID, 1, "50 + 1n Tank", 200, 275);
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", 200, 275)
                # (Line 103) trg.Shape_Square(playerID, 1, "50 + 1n Tank", 275, 200);
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", 275, 200)
                # (Line 105) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                # (Line 107) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                # (Line 108) Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 110) trg.Shape_Edge(playerID, 1, "40 + 1n Firebat", 0, 5, 150);
                DoActions(Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Shape_Edge(playerID, 1, "40 + 1n Firebat", 0, 5, 150)
                # (Line 112) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 113) MoveUnit(All, "40 + 1n Firebat", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 114) Order("40 + 1n Firebat", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveUnit(All, "40 + 1n Firebat", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                # (Line 116) trg.Main_Wait(560);
                DoActions(Order("40 + 1n Firebat", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(560)
                # (Line 118) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 119) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 120) }
                # (Line 121) }
            EUDEndIf()
            # (Line 122) else if (v.P_CountMain[playerID] == 1)
        if EUDElseIf()(v.P_CountMain[playerID] == 1):
            # (Line 123) {
            # (Line 124) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 125) {
                # (Line 126) trg.Shape_Edge(playerID, 1, "60 + 1n Archon", 0, 5, 100);
                trg.Shape_Edge(playerID, 1, "60 + 1n Archon", 0, 5, 100)
                # (Line 127) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                # (Line 129) trg.Shape_Line(playerID, 1, "40 + 1n Wraith", 135, 5, 50, 100);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                trg.Shape_Line(playerID, 1, "40 + 1n Wraith", 135, 5, 50, 100)
                # (Line 130) trg.Shape_Line(playerID, 1, "40 + 1n Wraith", 315, 5, 50, 100);
                trg.Shape_Line(playerID, 1, "40 + 1n Wraith", 315, 5, 50, 100)
                # (Line 132) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 133) Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 135) trg.Main_Wait(80);
                DoActions(Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(80)
                # (Line 136) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 137) }
                # (Line 138) else if (v.P_LoopMain[playerID] == 1)
            if EUDElseIf()(v.P_LoopMain[playerID] == 1):
                # (Line 139) {
                # (Line 140) trg.Shape_Line(playerID, 1, "Kakaru (Twilight)", 45, 5, 50, 100);
                trg.Shape_Line(playerID, 1, "Kakaru (Twilight)", 45, 5, 50, 100)
                # (Line 141) trg.Shape_Line(playerID, 1, "Kakaru (Twilight)", 225, 5, 50, 100);
                trg.Shape_Line(playerID, 1, "Kakaru (Twilight)", 225, 5, 50, 100)
                # (Line 142) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);
                # (Line 144) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 145) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 146) }
                # (Line 147) else if (v.P_LoopMain[playerID] == 2)
            if EUDElseIf()(v.P_LoopMain[playerID] == 2):
                # (Line 148) {
                # (Line 149) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 151) trg.Shape_Edge(playerID, 1, "60 + 1n Archon", 0, 5, 100);
                DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                trg.Shape_Edge(playerID, 1, "60 + 1n Archon", 0, 5, 100)
                # (Line 152) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                # (Line 154) trg.Shape_Line(playerID, 1, "40 + 1n Wraith", 45, 5, 50, 100);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                trg.Shape_Line(playerID, 1, "40 + 1n Wraith", 45, 5, 50, 100)
                # (Line 155) trg.Shape_Line(playerID, 1, "40 + 1n Wraith", 225, 5, 50, 100);
                trg.Shape_Line(playerID, 1, "40 + 1n Wraith", 225, 5, 50, 100)
                # (Line 157) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 158) Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 160) trg.Main_Wait(80);
                DoActions(Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(80)
                # (Line 161) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 162) }
                # (Line 163) else if (v.P_LoopMain[playerID] == 3)
            if EUDElseIf()(v.P_LoopMain[playerID] == 3):
                # (Line 164) {
                # (Line 165) trg.Shape_Line(playerID, 1, "Kakaru (Twilight)", 135, 5, 50, 100);
                trg.Shape_Line(playerID, 1, "Kakaru (Twilight)", 135, 5, 50, 100)
                # (Line 166) trg.Shape_Line(playerID, 1, "Kakaru (Twilight)", 315, 5, 50, 100);
                trg.Shape_Line(playerID, 1, "Kakaru (Twilight)", 315, 5, 50, 100)
                # (Line 167) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);
                # (Line 169) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 170) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 171) }
                # (Line 172) else if (v.P_LoopMain[playerID] == 4)
            if EUDElseIf()(v.P_LoopMain[playerID] == 4):
                # (Line 173) {
                # (Line 174) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 176) trg.Shape_Edge(playerID, 1, "50 + 1n Tank", 0, 5, 100);
                DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                trg.Shape_Edge(playerID, 1, "50 + 1n Tank", 0, 5, 100)
                # (Line 177) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                # (Line 179) trg.Shape_NxNSquare(playerID, 1, "50 + 1n Battlecruiser", 3, 75);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                trg.Shape_NxNSquare(playerID, 1, "50 + 1n Battlecruiser", 3, 75)
                # (Line 180) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 181) Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 183) trg.Main_Wait(80);
                DoActions(Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(80)
                # (Line 185) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 186) }
                # (Line 187) else if (v.P_LoopMain[playerID] == 5)
            if EUDElseIf()(v.P_LoopMain[playerID] == 5):
                # (Line 188) {
                # (Line 189) trg.Main_Wait(160);
                trg.Main_Wait(160)
                # (Line 191) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 192) }
                # (Line 193) else if (v.P_LoopMain[playerID] == 6)
            if EUDElseIf()(v.P_LoopMain[playerID] == 6):
                # (Line 194) {
                # (Line 195) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
                # (Line 198) trg.Main_Wait(160);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                trg.Main_Wait(160)
                # (Line 200) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 201) }
                # (Line 203) else if (v.P_LoopMain[playerID] == 7)
            if EUDElseIf()(v.P_LoopMain[playerID] == 7):
                # (Line 204) {
                # (Line 205) adv.Shape_NxNSquareAt2(playerID, 1, "40 + 1n Wraith", 2, 75, 150, 150);
                adv.Shape_NxNSquareAt2(playerID, 1, "40 + 1n Wraith", 2, 75, 150, 150)
                # (Line 206) adv.Shape_NxNSquareAt2(playerID, 1, "40 + 1n Wraith", 2, 75, -150, -150);
                adv.Shape_NxNSquareAt2(playerID, 1, "40 + 1n Wraith", 2, 75, -150, -150)
                # (Line 207) adv.Shape_NxNSquareAt2(playerID, 1, "50 + 1n Tank", 2, 75, 150, 150);
                adv.Shape_NxNSquareAt2(playerID, 1, "50 + 1n Tank", 2, 75, 150, 150)
                # (Line 208) adv.Shape_NxNSquareAt2(playerID, 1, "50 + 1n Tank", 2, 75, -150, -150);
                adv.Shape_NxNSquareAt2(playerID, 1, "50 + 1n Tank", 2, 75, -150, -150)
                # (Line 210) trg.Shape_Edge(playerID, 1, "60 + 1n High Templar", 45, 7, 150);
                trg.Shape_Edge(playerID, 1, "60 + 1n High Templar", 45, 7, 150)
                # (Line 211) KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID);
                # (Line 213) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID))
                # (Line 214) MoveUnit(All, "50 + 1n Tank", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 215) Order("50 + 1n Tank", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveUnit(All, "50 + 1n Tank", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                # (Line 216) Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(Order("50 + 1n Tank", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 218) trg.Main_Wait(240);
                DoActions(Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(240)
                # (Line 220) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 221) }
                # (Line 222) else if (v.P_LoopMain[playerID] == 8)
            if EUDElseIf()(v.P_LoopMain[playerID] == 8):
                # (Line 223) {
                # (Line 224) RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 225) adv.Shape_NxNSquareAt2(playerID, 1, "Kakaru (Twilight)", 2, 75, 150, 150);
                DoActions(RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                adv.Shape_NxNSquareAt2(playerID, 1, "Kakaru (Twilight)", 2, 75, 150, 150)
                # (Line 226) adv.Shape_NxNSquareAt2(playerID, 1, "Kakaru (Twilight)", 2, 75, -150, -150);
                adv.Shape_NxNSquareAt2(playerID, 1, "Kakaru (Twilight)", 2, 75, -150, -150)
                # (Line 227) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);
                # (Line 229) adv.Shape_NxNSquareAt2(playerID, 1, "40 + 1n Wraith", 2, 75, -150, 150);
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID))
                adv.Shape_NxNSquareAt2(playerID, 1, "40 + 1n Wraith", 2, 75, -150, 150)
                # (Line 230) adv.Shape_NxNSquareAt2(playerID, 1, "40 + 1n Wraith", 2, 75, 150, -150);
                adv.Shape_NxNSquareAt2(playerID, 1, "40 + 1n Wraith", 2, 75, 150, -150)
                # (Line 231) adv.Shape_NxNSquareAt2(playerID, 1, "50 + 1n Tank", 2, 75, -150, 150);
                adv.Shape_NxNSquareAt2(playerID, 1, "50 + 1n Tank", 2, 75, -150, 150)
                # (Line 232) adv.Shape_NxNSquareAt2(playerID, 1, "50 + 1n Tank", 2, 75, 150, -150);
                adv.Shape_NxNSquareAt2(playerID, 1, "50 + 1n Tank", 2, 75, 150, -150)
                # (Line 234) trg.Shape_Edge(playerID, 1, "60 + 1n High Templar", 0, 7, 150);
                trg.Shape_Edge(playerID, 1, "60 + 1n High Templar", 0, 7, 150)
                # (Line 235) KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID);
                # (Line 237) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID))
                # (Line 238) MoveUnit(All, "50 + 1n Tank", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 239) Order("50 + 1n Tank", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveUnit(All, "50 + 1n Tank", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                # (Line 240) Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(Order("50 + 1n Tank", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 242) trg.Main_Wait(240);
                DoActions(Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(240)
                # (Line 244) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 245) }
                # (Line 246) else if (v.P_LoopMain[playerID] == 9)
            if EUDElseIf()(v.P_LoopMain[playerID] == 9):
                # (Line 247) {
                # (Line 248) RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 249) adv.Shape_NxNSquareAt2(playerID, 1, "Kakaru (Twilight)", 2, 75, -150, 150);
                DoActions(RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                adv.Shape_NxNSquareAt2(playerID, 1, "Kakaru (Twilight)", 2, 75, -150, 150)
                # (Line 250) adv.Shape_NxNSquareAt2(playerID, 1, "Kakaru (Twilight)", 2, 75, 150, -150);
                adv.Shape_NxNSquareAt2(playerID, 1, "Kakaru (Twilight)", 2, 75, 150, -150)
                # (Line 251) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);
                # (Line 253) trg.Main_Wait(1040);
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID))
                trg.Main_Wait(1040)
                # (Line 255) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 256) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 257) }
                # (Line 258) }
            EUDEndIf()
            # (Line 259) else if (v.P_CountMain[playerID] == 2)
        if EUDElseIf()(v.P_CountMain[playerID] == 2):
            # (Line 260) {
            # (Line 261) KillUnitAt(All, "60 + 1n Siege", "Anywhere", playerID);
            # (Line 262) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
            DoActions(KillUnitAt(All, "60 + 1n Siege", "Anywhere", playerID))
            # (Line 263) KillUnitAt(All, "40 + 1n Firebat", "Anywhere", playerID);
            DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
            # (Line 264) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
            DoActions(KillUnitAt(All, "40 + 1n Firebat", "Anywhere", playerID))
            # (Line 266) SetSwitch("Passive - Nanami1", Clear);
            DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
            # (Line 267) SetSwitch("Passive - Nanami2", Clear);
            DoActions(SetSwitch("Passive - Nanami1", Clear))
            # (Line 269) trg.SkillEnd();
            DoActions(SetSwitch("Passive - Nanami2", Clear))
            trg.SkillEnd()
            # (Line 270) }
            # (Line 271) }
        EUDEndIf()
        # (Line 272) if (v.P_WaitSub1[playerID] == 0)
    EUDEndIf()
    if EUDIf()(v.P_WaitSub1[playerID] == 0):
        # (Line 273) {
        # (Line 274) if (v.P_CountMain[playerID] < 2)
        if EUDIf()(v.P_CountMain[playerID] >= 2, neg=True):
            # (Line 275) {
            # (Line 276) if (v.P_CountSub1[playerID] == 0)
            if EUDIf()(v.P_CountSub1[playerID] == 0):
                # (Line 277) {
                # (Line 278) trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 75, 75);
                trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 75, 75)
                # (Line 280) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                # (Line 282) trg.Sub1_Wait(160);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                trg.Sub1_Wait(160)
                # (Line 284) v.P_CountSub1[playerID] += 1;
                _ARRW(v.P_CountSub1, playerID).__iadd__(1)
                # (Line 285) }
                # (Line 286) else if (v.P_CountSub1[playerID] == 1)
            if EUDElseIf()(v.P_CountSub1[playerID] == 1):
                # (Line 287) {
                # (Line 288) trg.Shape_Square(playerID, 1, "60 + 1n Archon", 150, 0);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", 150, 0)
                # (Line 290) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                # (Line 292) trg.Sub1_Wait(160);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                trg.Sub1_Wait(160)
                # (Line 294) v.P_CountSub1[playerID] = 0;
                _ARRW(v.P_CountSub1, playerID) << (0)
                # (Line 295) }
                # (Line 297) }
            EUDEndIf()
            # (Line 298) }
        EUDEndIf()
        # (Line 300) }
    EUDEndIf()
