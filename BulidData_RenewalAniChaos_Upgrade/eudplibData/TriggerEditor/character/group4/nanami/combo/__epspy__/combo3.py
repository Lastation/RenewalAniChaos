## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import variable as v;
import variable as v
# (Line 2) import func.trig as trg;
from func import trig as trg
# (Line 3) import func.trigadv as adv;
from func import trigadv as adv
# (Line 5) function main(playerID)
# (Line 6) {
@EUDFunc
def f_main(playerID):
    # (Line 7) trg.Debuff_Stop();
    trg.Debuff_Stop()
    # (Line 8) trg.Debuff_BanReturn();
    trg.Debuff_BanReturn()
    # (Line 10) if (v.P_WaitMain[playerID] == 0)
    if EUDIf()(v.P_WaitMain[playerID] == 0):
        # (Line 11) {
        # (Line 12) if (v.P_CountMain[playerID] == 0)
        if EUDIf()(v.P_CountMain[playerID] == 0):
            # (Line 13) {
            # (Line 14) if (v.P_LoopMain[playerID] < 4)
            if EUDIf()(v.P_LoopMain[playerID] >= 4, neg=True):
                # (Line 15) {
                # (Line 16) trg.Shape_Dot(playerID, 1, "Protoss Dark Templar", 100 - 50 * v.P_LoopMain[playerID], 100);
                trg.Shape_Dot(playerID, 1, "Protoss Dark Templar", 100 - 50 * v.P_LoopMain[playerID], 100)
                # (Line 17) trg.Shape_Dot(playerID, 1, "Protoss Dark Templar", -100 + 50 * v.P_LoopMain[playerID], -100);
                trg.Shape_Dot(playerID, 1, "Protoss Dark Templar", -100 + 50 * v.P_LoopMain[playerID], -100)
                # (Line 18) trg.Shape_Dot(playerID, 1, "40 + 1n Zealot", -100, 100 - 50 * v.P_LoopMain[playerID]);
                trg.Shape_Dot(playerID, 1, "40 + 1n Zealot", -100, 100 - 50 * v.P_LoopMain[playerID])
                # (Line 19) trg.Shape_Dot(playerID, 1, "40 + 1n Zealot", 100, -100 + 50 * v.P_LoopMain[playerID]);
                trg.Shape_Dot(playerID, 1, "40 + 1n Zealot", 100, -100 + 50 * v.P_LoopMain[playerID])
                # (Line 20) KillUnitAt(All, "40 + 1n Zealot", "Anywhere", playerID);
                # (Line 21) KillUnitAt(All, "Protoss Dark Templar", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Zealot", "Anywhere", playerID))
                # (Line 23) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "Protoss Dark Templar", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 24) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 25) }
                # (Line 26) else if (v.P_LoopMain[playerID] == 4)
            if EUDElseIf()(v.P_LoopMain[playerID] == 4):
                # (Line 27) {
                # (Line 28) trg.Shape_Square(playerID, 1, "Target", 50, 0);
                trg.Shape_Square(playerID, 1, "Target", 50, 0)
                # (Line 29) trg.Shape_Square(playerID, 1, "Target", 100, 0);
                trg.Shape_Square(playerID, 1, "Target", 100, 0)
                # (Line 30) trg.Shape_Square(playerID, 1, "60 + 1n High Templar", 50, 0);
                trg.Shape_Square(playerID, 1, "60 + 1n High Templar", 50, 0)
                # (Line 31) trg.Shape_Square(playerID, 1, "60 + 1n High Templar", 100, 0);
                trg.Shape_Square(playerID, 1, "60 + 1n High Templar", 100, 0)
                # (Line 32) KillUnitAt(All, "Target", "Anywhere", playerID);
                # (Line 33) KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "Target", "Anywhere", playerID))
                # (Line 35) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 37) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 38) }
                # (Line 39) else if (v.P_LoopMain[playerID] == 5)
            if EUDElseIf()(v.P_LoopMain[playerID] == 5):
                # (Line 40) {
                # (Line 41) trg.Shape_Square(playerID, 1, "Target", 50, 50);
                trg.Shape_Square(playerID, 1, "Target", 50, 50)
                # (Line 42) trg.Shape_Square(playerID, 1, "Target", 100, 100);
                trg.Shape_Square(playerID, 1, "Target", 100, 100)
                # (Line 43) trg.Shape_Square(playerID, 1, "60 + 1n High Templar", 50, 50);
                trg.Shape_Square(playerID, 1, "60 + 1n High Templar", 50, 50)
                # (Line 44) trg.Shape_Square(playerID, 1, "60 + 1n High Templar", 100, 100);
                trg.Shape_Square(playerID, 1, "60 + 1n High Templar", 100, 100)
                # (Line 45) KillUnitAt(All, "Target", "Anywhere", playerID);
                # (Line 46) KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "Target", "Anywhere", playerID))
                # (Line 48) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 50) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 51) }
                # (Line 52) else if (v.P_LoopMain[playerID] == 6)
            if EUDElseIf()(v.P_LoopMain[playerID] == 6):
                # (Line 53) {
                # (Line 54) trg.Shape_Edge(playerID, 1, "40 + 1n Guardian", 0, 7, 150);
                trg.Shape_Edge(playerID, 1, "40 + 1n Guardian", 0, 7, 150)
                # (Line 55) trg.Shape_Edge(playerID, 1, "Protoss Dark Archon", 0, 7, 150);
                trg.Shape_Edge(playerID, 1, "Protoss Dark Archon", 0, 7, 150)
                # (Line 56) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
                # (Line 57) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID))
                # (Line 59) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 61) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 62) }
                # (Line 63) else if (v.P_LoopMain[playerID] == 7)
            if EUDElseIf()(v.P_LoopMain[playerID] == 7):
                # (Line 64) {
                # (Line 65) trg.Shape_Edge(playerID, 1, "Kakaru (Twilight)", 0, 5, 100);
                trg.Shape_Edge(playerID, 1, "Kakaru (Twilight)", 0, 5, 100)
                # (Line 66) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);
                # (Line 68) trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 200, 125);
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID))
                trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 200, 125)
                # (Line 69) trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 125, 200);
                trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 125, 200)
                # (Line 70) trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 200, 275);
                trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 200, 275)
                # (Line 71) trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 275, 200);
                trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 275, 200)
                # (Line 72) trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 200, 125);
                trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 200, 125)
                # (Line 73) trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 125, 200);
                trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 125, 200)
                # (Line 74) trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 200, 275);
                trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 200, 275)
                # (Line 75) trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 275, 200);
                trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 275, 200)
                # (Line 76) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
                # (Line 77) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID))
                # (Line 79) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 81) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 82) }
                # (Line 83) else if (v.P_LoopMain[playerID] == 8)
            if EUDElseIf()(v.P_LoopMain[playerID] == 8):
                # (Line 84) {
                # (Line 85) trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 200, 125);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 200, 125)
                # (Line 86) trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 125, 200);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 125, 200)
                # (Line 87) trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 200, 275);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 200, 275)
                # (Line 88) trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 275, 200);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 275, 200)
                # (Line 89) trg.Shape_Square(playerID, 1, "60 + 1n Siege", 200, 125);
                trg.Shape_Square(playerID, 1, "60 + 1n Siege", 200, 125)
                # (Line 90) trg.Shape_Square(playerID, 1, "60 + 1n Siege", 125, 200);
                trg.Shape_Square(playerID, 1, "60 + 1n Siege", 125, 200)
                # (Line 91) trg.Shape_Square(playerID, 1, "60 + 1n Siege", 200, 275);
                trg.Shape_Square(playerID, 1, "60 + 1n Siege", 200, 275)
                # (Line 92) trg.Shape_Square(playerID, 1, "60 + 1n Siege", 275, 200);
                trg.Shape_Square(playerID, 1, "60 + 1n Siege", 275, 200)
                # (Line 93) trg.Shape_Square(playerID, 1, "50 + 1n Tank", 200, 125);
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", 200, 125)
                # (Line 94) trg.Shape_Square(playerID, 1, "50 + 1n Tank", 125, 200);
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", 125, 200)
                # (Line 95) trg.Shape_Square(playerID, 1, "50 + 1n Tank", 200, 275);
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", 200, 275)
                # (Line 96) trg.Shape_Square(playerID, 1, "50 + 1n Tank", 275, 200);
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", 275, 200)
                # (Line 98) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                # (Line 100) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                # (Line 101) Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 103) trg.Shape_Edge(playerID, 1, "40 + 1n Firebat", 0, 5, 150);
                DoActions(Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Shape_Edge(playerID, 1, "40 + 1n Firebat", 0, 5, 150)
                # (Line 105) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 106) MoveUnit(All, "40 + 1n Firebat", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 107) Order("40 + 1n Firebat", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveUnit(All, "40 + 1n Firebat", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                # (Line 109) trg.Main_Wait(560);
                DoActions(Order("40 + 1n Firebat", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(560)
                # (Line 111) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 112) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 113) }
                # (Line 114) }
            EUDEndIf()
            # (Line 115) else if (v.P_CountMain[playerID] == 1)
        if EUDElseIf()(v.P_CountMain[playerID] == 1):
            # (Line 116) {
            # (Line 117) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 118) {
                # (Line 119) trg.Shape_Edge(playerID, 1, "60 + 1n Archon", 0, 5, 100);
                trg.Shape_Edge(playerID, 1, "60 + 1n Archon", 0, 5, 100)
                # (Line 120) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                # (Line 122) trg.Shape_Line(playerID, 1, "40 + 1n Wraith", 135, 5, 50, 100);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                trg.Shape_Line(playerID, 1, "40 + 1n Wraith", 135, 5, 50, 100)
                # (Line 123) trg.Shape_Line(playerID, 1, "40 + 1n Wraith", 315, 5, 50, 100);
                trg.Shape_Line(playerID, 1, "40 + 1n Wraith", 315, 5, 50, 100)
                # (Line 125) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 126) Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 128) trg.Main_Wait(80);
                DoActions(Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(80)
                # (Line 129) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 130) }
                # (Line 131) else if (v.P_LoopMain[playerID] == 1)
            if EUDElseIf()(v.P_LoopMain[playerID] == 1):
                # (Line 132) {
                # (Line 133) trg.Shape_Line(playerID, 1, "Kakaru (Twilight)", 45, 5, 50, 100);
                trg.Shape_Line(playerID, 1, "Kakaru (Twilight)", 45, 5, 50, 100)
                # (Line 134) trg.Shape_Line(playerID, 1, "Kakaru (Twilight)", 225, 5, 50, 100);
                trg.Shape_Line(playerID, 1, "Kakaru (Twilight)", 225, 5, 50, 100)
                # (Line 135) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);
                # (Line 137) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 138) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 139) }
                # (Line 140) else if (v.P_LoopMain[playerID] == 2)
            if EUDElseIf()(v.P_LoopMain[playerID] == 2):
                # (Line 141) {
                # (Line 142) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 144) trg.Shape_Edge(playerID, 1, "60 + 1n Archon", 0, 5, 100);
                DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                trg.Shape_Edge(playerID, 1, "60 + 1n Archon", 0, 5, 100)
                # (Line 145) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                # (Line 147) trg.Shape_Line(playerID, 1, "40 + 1n Wraith", 45, 5, 50, 100);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                trg.Shape_Line(playerID, 1, "40 + 1n Wraith", 45, 5, 50, 100)
                # (Line 148) trg.Shape_Line(playerID, 1, "40 + 1n Wraith", 225, 5, 50, 100);
                trg.Shape_Line(playerID, 1, "40 + 1n Wraith", 225, 5, 50, 100)
                # (Line 150) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 151) Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 153) trg.Main_Wait(80);
                DoActions(Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(80)
                # (Line 154) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 155) }
                # (Line 156) else if (v.P_LoopMain[playerID] == 3)
            if EUDElseIf()(v.P_LoopMain[playerID] == 3):
                # (Line 157) {
                # (Line 158) trg.Shape_Line(playerID, 1, "Kakaru (Twilight)", 135, 5, 50, 100);
                trg.Shape_Line(playerID, 1, "Kakaru (Twilight)", 135, 5, 50, 100)
                # (Line 159) trg.Shape_Line(playerID, 1, "Kakaru (Twilight)", 315, 5, 50, 100);
                trg.Shape_Line(playerID, 1, "Kakaru (Twilight)", 315, 5, 50, 100)
                # (Line 160) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);
                # (Line 162) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 163) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 164) }
                # (Line 165) else if (v.P_LoopMain[playerID] == 4)
            if EUDElseIf()(v.P_LoopMain[playerID] == 4):
                # (Line 166) {
                # (Line 167) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 169) trg.Shape_Edge(playerID, 1, "50 + 1n Tank", 0, 5, 100);
                DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                trg.Shape_Edge(playerID, 1, "50 + 1n Tank", 0, 5, 100)
                # (Line 170) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                # (Line 172) trg.Shape_NxNSquare(playerID, 1, "50 + 1n Battlecruiser", 3, 75);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                trg.Shape_NxNSquare(playerID, 1, "50 + 1n Battlecruiser", 3, 75)
                # (Line 173) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 174) Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 176) trg.Main_Wait(80);
                DoActions(Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(80)
                # (Line 178) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 179) }
                # (Line 180) else if (v.P_LoopMain[playerID] == 5)
            if EUDElseIf()(v.P_LoopMain[playerID] == 5):
                # (Line 181) {
                # (Line 182) trg.Main_Wait(160);
                trg.Main_Wait(160)
                # (Line 184) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 185) }
                # (Line 186) else if (v.P_LoopMain[playerID] == 6)
            if EUDElseIf()(v.P_LoopMain[playerID] == 6):
                # (Line 187) {
                # (Line 188) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
                # (Line 191) trg.Main_Wait(160);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                trg.Main_Wait(160)
                # (Line 193) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 194) }
                # (Line 196) else if (v.P_LoopMain[playerID] == 7)
            if EUDElseIf()(v.P_LoopMain[playerID] == 7):
                # (Line 197) {
                # (Line 198) adv.Shape_NxNSquareAt2(playerID, 1, "40 + 1n Wraith", 2, 75, 150, 150);
                adv.Shape_NxNSquareAt2(playerID, 1, "40 + 1n Wraith", 2, 75, 150, 150)
                # (Line 199) adv.Shape_NxNSquareAt2(playerID, 1, "40 + 1n Wraith", 2, 75, -150, -150);
                adv.Shape_NxNSquareAt2(playerID, 1, "40 + 1n Wraith", 2, 75, -150, -150)
                # (Line 200) adv.Shape_NxNSquareAt2(playerID, 1, "50 + 1n Tank", 2, 75, 150, 150);
                adv.Shape_NxNSquareAt2(playerID, 1, "50 + 1n Tank", 2, 75, 150, 150)
                # (Line 201) adv.Shape_NxNSquareAt2(playerID, 1, "50 + 1n Tank", 2, 75, -150, -150);
                adv.Shape_NxNSquareAt2(playerID, 1, "50 + 1n Tank", 2, 75, -150, -150)
                # (Line 203) trg.Shape_Edge(playerID, 1, "60 + 1n High Templar", 45, 7, 150);
                trg.Shape_Edge(playerID, 1, "60 + 1n High Templar", 45, 7, 150)
                # (Line 204) KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID);
                # (Line 206) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID))
                # (Line 207) MoveUnit(All, "50 + 1n Tank", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 208) Order("50 + 1n Tank", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveUnit(All, "50 + 1n Tank", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                # (Line 209) Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(Order("50 + 1n Tank", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 211) trg.Main_Wait(240);
                DoActions(Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(240)
                # (Line 213) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 214) }
                # (Line 215) else if (v.P_LoopMain[playerID] == 8)
            if EUDElseIf()(v.P_LoopMain[playerID] == 8):
                # (Line 216) {
                # (Line 217) RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 218) adv.Shape_NxNSquareAt2(playerID, 1, "Kakaru (Twilight)", 2, 75, 150, 150);
                DoActions(RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                adv.Shape_NxNSquareAt2(playerID, 1, "Kakaru (Twilight)", 2, 75, 150, 150)
                # (Line 219) adv.Shape_NxNSquareAt2(playerID, 1, "Kakaru (Twilight)", 2, 75, -150, -150);
                adv.Shape_NxNSquareAt2(playerID, 1, "Kakaru (Twilight)", 2, 75, -150, -150)
                # (Line 220) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);
                # (Line 222) adv.Shape_NxNSquareAt2(playerID, 1, "40 + 1n Wraith", 2, 75, -150, 150);
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID))
                adv.Shape_NxNSquareAt2(playerID, 1, "40 + 1n Wraith", 2, 75, -150, 150)
                # (Line 223) adv.Shape_NxNSquareAt2(playerID, 1, "40 + 1n Wraith", 2, 75, 150, -150);
                adv.Shape_NxNSquareAt2(playerID, 1, "40 + 1n Wraith", 2, 75, 150, -150)
                # (Line 224) adv.Shape_NxNSquareAt2(playerID, 1, "50 + 1n Tank", 2, 75, -150, 150);
                adv.Shape_NxNSquareAt2(playerID, 1, "50 + 1n Tank", 2, 75, -150, 150)
                # (Line 225) adv.Shape_NxNSquareAt2(playerID, 1, "50 + 1n Tank", 2, 75, 150, -150);
                adv.Shape_NxNSquareAt2(playerID, 1, "50 + 1n Tank", 2, 75, 150, -150)
                # (Line 227) trg.Shape_Edge(playerID, 1, "60 + 1n High Templar", 0, 7, 150);
                trg.Shape_Edge(playerID, 1, "60 + 1n High Templar", 0, 7, 150)
                # (Line 228) KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID);
                # (Line 230) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID))
                # (Line 231) MoveUnit(All, "50 + 1n Tank", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 232) Order("50 + 1n Tank", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveUnit(All, "50 + 1n Tank", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                # (Line 233) Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(Order("50 + 1n Tank", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 235) trg.Main_Wait(240);
                DoActions(Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(240)
                # (Line 237) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 238) }
                # (Line 239) else if (v.P_LoopMain[playerID] == 9)
            if EUDElseIf()(v.P_LoopMain[playerID] == 9):
                # (Line 240) {
                # (Line 241) RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 242) adv.Shape_NxNSquareAt2(playerID, 1, "Kakaru (Twilight)", 2, 75, -150, 150);
                DoActions(RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                adv.Shape_NxNSquareAt2(playerID, 1, "Kakaru (Twilight)", 2, 75, -150, 150)
                # (Line 243) adv.Shape_NxNSquareAt2(playerID, 1, "Kakaru (Twilight)", 2, 75, 150, -150);
                adv.Shape_NxNSquareAt2(playerID, 1, "Kakaru (Twilight)", 2, 75, 150, -150)
                # (Line 244) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);
                # (Line 246) trg.Main_Wait(1040);
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID))
                trg.Main_Wait(1040)
                # (Line 248) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 249) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 250) }
                # (Line 251) }
            EUDEndIf()
            # (Line 252) else if (v.P_CountMain[playerID] == 2)
        if EUDElseIf()(v.P_CountMain[playerID] == 2):
            # (Line 253) {
            # (Line 254) KillUnitAt(All, "60 + 1n Siege", "Anywhere", playerID);
            # (Line 255) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
            DoActions(KillUnitAt(All, "60 + 1n Siege", "Anywhere", playerID))
            # (Line 256) KillUnitAt(All, "40 + 1n Firebat", "Anywhere", playerID);
            DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
            # (Line 257) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
            DoActions(KillUnitAt(All, "40 + 1n Firebat", "Anywhere", playerID))
            # (Line 259) trg.SkillEnd();
            DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
            trg.SkillEnd()
            # (Line 260) }
            # (Line 261) }
        EUDEndIf()
        # (Line 262) if (v.P_WaitSub1[playerID] == 0)
    EUDEndIf()
    if EUDIf()(v.P_WaitSub1[playerID] == 0):
        # (Line 263) {
        # (Line 264) if (v.P_CountMain[playerID] < 2)
        if EUDIf()(v.P_CountMain[playerID] >= 2, neg=True):
            # (Line 265) {
            # (Line 266) if (v.P_CountSub1[playerID] == 0)
            if EUDIf()(v.P_CountSub1[playerID] == 0):
                # (Line 267) {
                # (Line 268) trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 75, 75);
                trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 75, 75)
                # (Line 270) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                # (Line 272) trg.Sub1_Wait(160);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                trg.Sub1_Wait(160)
                # (Line 274) v.P_CountSub1[playerID] += 1;
                _ARRW(v.P_CountSub1, playerID).__iadd__(1)
                # (Line 275) }
                # (Line 276) else if (v.P_CountSub1[playerID] == 1)
            if EUDElseIf()(v.P_CountSub1[playerID] == 1):
                # (Line 277) {
                # (Line 278) trg.Shape_Square(playerID, 1, "60 + 1n Archon", 150, 0);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", 150, 0)
                # (Line 280) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                # (Line 282) trg.Sub1_Wait(160);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                trg.Sub1_Wait(160)
                # (Line 284) v.P_CountSub1[playerID] = 0;
                _ARRW(v.P_CountSub1, playerID) << (0)
                # (Line 285) }
                # (Line 287) }
            EUDEndIf()
            # (Line 288) }
        EUDEndIf()
        # (Line 290) }
    EUDEndIf()
