## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _RELIMP(path, mod_name):
    import inspect, pathlib, importlib.util
    p = pathlib.Path(inspect.getabsfile(inspect.currentframe())).parent
    for s in path.split("."):
        if s == "":  p = p.parent
        else:  p = p / s
    try:
        spec = importlib.util.spec_from_file_location(mod_name, p / (mod_name + ".py"))
        module = importlib.util.module_from_spec(spec)
        spec.loader.exec_module(module)
    except FileNotFoundError:
        loader = EPSLoader(mod_name, str(p / (mod_name + ".eps")))
        spec = importlib.util.spec_from_loader(mod_name, loader)
        module = loader.create_module(spec)
        loader.exec_module(module)
    return module

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import PluginVariables as msqcvar;
import PluginVariables as msqcvar
# (Line 2) import variable as v;
import variable as v
# (Line 3) import func.trig as trg;
from func import trig as trg
# (Line 4) import func.trigadv as adv;
from func import trigadv as adv
# (Line 6) function main(playerID)
# (Line 7) {
@EUDFunc
def f_main(playerID):
    # (Line 8) trg.Debuff_BanReturn();
    trg.Debuff_BanReturn()
    # (Line 9) MoveLocation("24.Nanami_Bozo", v.P_UnitID[playerID], playerID, "Anywhere");
    # (Line 10) if (v.P_WaitMain[playerID] == 0)
    DoActions(MoveLocation("24.Nanami_Bozo", v.P_UnitID[playerID], playerID, "Anywhere"))
    if EUDIf()(v.P_WaitMain[playerID] == 0):
        # (Line 11) {
        # (Line 12) if (v.P_CountMain[playerID] == 0)
        if EUDIf()(v.P_CountMain[playerID] == 0):
            # (Line 13) {
            # (Line 14) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 15) {
                # (Line 16) if (playerID < 3) SetSwitch("Passive - Nanami1", Set);
                if EUDIf()(playerID >= 3, neg=True):
                    # (Line 17) else SetSwitch("Passive - Nanami2", Set);
                    DoActions(SetSwitch("Passive - Nanami1", Set))
                if EUDElse()():
                    # (Line 18) }
                    DoActions(SetSwitch("Passive - Nanami2", Set))
                EUDEndIf()
                # (Line 20) if (v.P_LoopMain[playerID] < 4)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] >= 4, neg=True):
                # (Line 21) {
                # (Line 22) trg.Shape_Dot(playerID, 1, "Protoss Dark Templar", 100 - 50 * v.P_LoopMain[playerID], 100);
                trg.Shape_Dot(playerID, 1, "Protoss Dark Templar", 100 - 50 * v.P_LoopMain[playerID], 100)
                # (Line 23) trg.Shape_Dot(playerID, 1, "Protoss Dark Templar", -100 + 50 * v.P_LoopMain[playerID], -100);
                trg.Shape_Dot(playerID, 1, "Protoss Dark Templar", -100 + 50 * v.P_LoopMain[playerID], -100)
                # (Line 24) trg.Shape_Dot(playerID, 1, "40 + 1n Zealot", -100, 100 - 50 * v.P_LoopMain[playerID]);
                trg.Shape_Dot(playerID, 1, "40 + 1n Zealot", -100, 100 - 50 * v.P_LoopMain[playerID])
                # (Line 25) trg.Shape_Dot(playerID, 1, "40 + 1n Zealot", 100, -100 + 50 * v.P_LoopMain[playerID]);
                trg.Shape_Dot(playerID, 1, "40 + 1n Zealot", 100, -100 + 50 * v.P_LoopMain[playerID])
                # (Line 26) KillUnitAt(All, "40 + 1n Zealot", "Anywhere", playerID);
                # (Line 27) KillUnitAt(All, "Protoss Dark Templar", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Zealot", "Anywhere", playerID))
                # (Line 29) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "Protoss Dark Templar", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 30) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 31) }
                # (Line 32) else if (v.P_LoopMain[playerID] == 4)
            if EUDElseIf()(v.P_LoopMain[playerID] == 4):
                # (Line 33) {
                # (Line 34) trg.Shape_Square(playerID, 1, "Target", 50, 0);
                trg.Shape_Square(playerID, 1, "Target", 50, 0)
                # (Line 35) trg.Shape_Square(playerID, 1, "Target", 100, 0);
                trg.Shape_Square(playerID, 1, "Target", 100, 0)
                # (Line 36) trg.Shape_Square(playerID, 1, "60 + 1n High Templar", 50, 0);
                trg.Shape_Square(playerID, 1, "60 + 1n High Templar", 50, 0)
                # (Line 37) trg.Shape_Square(playerID, 1, "60 + 1n High Templar", 100, 0);
                trg.Shape_Square(playerID, 1, "60 + 1n High Templar", 100, 0)
                # (Line 38) KillUnitAt(All, "Target", "Anywhere", playerID);
                # (Line 39) KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "Target", "Anywhere", playerID))
                # (Line 41) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 43) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 44) }
                # (Line 45) else if (v.P_LoopMain[playerID] == 5)
            if EUDElseIf()(v.P_LoopMain[playerID] == 5):
                # (Line 46) {
                # (Line 47) trg.Shape_Square(playerID, 1, "Target", 50, 50);
                trg.Shape_Square(playerID, 1, "Target", 50, 50)
                # (Line 48) trg.Shape_Square(playerID, 1, "Target", 100, 100);
                trg.Shape_Square(playerID, 1, "Target", 100, 100)
                # (Line 49) trg.Shape_Square(playerID, 1, "60 + 1n High Templar", 50, 50);
                trg.Shape_Square(playerID, 1, "60 + 1n High Templar", 50, 50)
                # (Line 50) trg.Shape_Square(playerID, 1, "60 + 1n High Templar", 100, 100);
                trg.Shape_Square(playerID, 1, "60 + 1n High Templar", 100, 100)
                # (Line 51) KillUnitAt(All, "Target", "Anywhere", playerID);
                # (Line 52) KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "Target", "Anywhere", playerID))
                # (Line 54) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 56) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 57) }
                # (Line 58) else if (v.P_LoopMain[playerID] == 6)
            if EUDElseIf()(v.P_LoopMain[playerID] == 6):
                # (Line 59) {
                # (Line 60) trg.Shape_Edge(playerID, 1, "40 + 1n Guardian", 0, 7, 150);
                trg.Shape_Edge(playerID, 1, "40 + 1n Guardian", 0, 7, 150)
                # (Line 61) trg.Shape_Edge(playerID, 1, "Protoss Dark Archon", 0, 7, 150);
                trg.Shape_Edge(playerID, 1, "Protoss Dark Archon", 0, 7, 150)
                # (Line 62) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
                # (Line 63) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID))
                # (Line 65) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 67) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 68) }
                # (Line 69) else if (v.P_LoopMain[playerID] == 7)
            if EUDElseIf()(v.P_LoopMain[playerID] == 7):
                # (Line 70) {
                # (Line 71) trg.Shape_Edge(playerID, 1, "Kakaru (Twilight)", 0, 5, 100);
                trg.Shape_Edge(playerID, 1, "Kakaru (Twilight)", 0, 5, 100)
                # (Line 72) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);
                # (Line 74) trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 200, 125);
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID))
                trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 200, 125)
                # (Line 75) trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 125, 200);
                trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 125, 200)
                # (Line 76) trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 200, 275);
                trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 200, 275)
                # (Line 77) trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 275, 200);
                trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 275, 200)
                # (Line 78) trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 200, 125);
                trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 200, 125)
                # (Line 79) trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 125, 200);
                trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 125, 200)
                # (Line 80) trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 200, 275);
                trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 200, 275)
                # (Line 81) trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 275, 200);
                trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 275, 200)
                # (Line 82) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
                # (Line 83) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID))
                # (Line 85) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 87) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 88) }
                # (Line 89) else if (v.P_LoopMain[playerID] == 8)
            if EUDElseIf()(v.P_LoopMain[playerID] == 8):
                # (Line 90) {
                # (Line 91) trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 200, 125);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 200, 125)
                # (Line 92) trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 125, 200);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 125, 200)
                # (Line 93) trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 200, 275);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 200, 275)
                # (Line 94) trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 275, 200);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 275, 200)
                # (Line 95) trg.Shape_Square(playerID, 1, "60 + 1n Siege", 200, 125);
                trg.Shape_Square(playerID, 1, "60 + 1n Siege", 200, 125)
                # (Line 96) trg.Shape_Square(playerID, 1, "60 + 1n Siege", 125, 200);
                trg.Shape_Square(playerID, 1, "60 + 1n Siege", 125, 200)
                # (Line 97) trg.Shape_Square(playerID, 1, "60 + 1n Siege", 200, 275);
                trg.Shape_Square(playerID, 1, "60 + 1n Siege", 200, 275)
                # (Line 98) trg.Shape_Square(playerID, 1, "60 + 1n Siege", 275, 200);
                trg.Shape_Square(playerID, 1, "60 + 1n Siege", 275, 200)
                # (Line 99) trg.Shape_Square(playerID, 1, "50 + 1n Tank", 200, 125);
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", 200, 125)
                # (Line 100) trg.Shape_Square(playerID, 1, "50 + 1n Tank", 125, 200);
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", 125, 200)
                # (Line 101) trg.Shape_Square(playerID, 1, "50 + 1n Tank", 200, 275);
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", 200, 275)
                # (Line 102) trg.Shape_Square(playerID, 1, "50 + 1n Tank", 275, 200);
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", 275, 200)
                # (Line 104) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                # (Line 106) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                # (Line 107) Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 109) trg.Shape_Edge(playerID, 1, "40 + 1n Firebat", 0, 5, 150);
                DoActions(Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Shape_Edge(playerID, 1, "40 + 1n Firebat", 0, 5, 150)
                # (Line 111) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 112) MoveUnit(All, "40 + 1n Firebat", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 113) Order("40 + 1n Firebat", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveUnit(All, "40 + 1n Firebat", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                # (Line 115) trg.Main_Wait(560);
                DoActions(Order("40 + 1n Firebat", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(560)
                # (Line 117) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 118) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 119) }
                # (Line 120) }
            EUDEndIf()
            # (Line 121) else if (v.P_CountMain[playerID] == 1)
        if EUDElseIf()(v.P_CountMain[playerID] == 1):
            # (Line 122) {
            # (Line 123) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 124) {
                # (Line 125) trg.Shape_Edge(playerID, 1, "60 + 1n Archon", 0, 5, 100);
                trg.Shape_Edge(playerID, 1, "60 + 1n Archon", 0, 5, 100)
                # (Line 126) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                # (Line 128) trg.Shape_Line(playerID, 1, "40 + 1n Wraith", 135, 5, 50, 100);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                trg.Shape_Line(playerID, 1, "40 + 1n Wraith", 135, 5, 50, 100)
                # (Line 129) trg.Shape_Line(playerID, 1, "40 + 1n Wraith", 315, 5, 50, 100);
                trg.Shape_Line(playerID, 1, "40 + 1n Wraith", 315, 5, 50, 100)
                # (Line 131) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 132) Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 134) trg.Main_Wait(80);
                DoActions(Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(80)
                # (Line 135) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 136) }
                # (Line 137) else if (v.P_LoopMain[playerID] == 1)
            if EUDElseIf()(v.P_LoopMain[playerID] == 1):
                # (Line 138) {
                # (Line 139) trg.Shape_Line(playerID, 1, "Kakaru (Twilight)", 45, 5, 50, 100);
                trg.Shape_Line(playerID, 1, "Kakaru (Twilight)", 45, 5, 50, 100)
                # (Line 140) trg.Shape_Line(playerID, 1, "Kakaru (Twilight)", 225, 5, 50, 100);
                trg.Shape_Line(playerID, 1, "Kakaru (Twilight)", 225, 5, 50, 100)
                # (Line 141) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);
                # (Line 143) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 144) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 145) }
                # (Line 146) else if (v.P_LoopMain[playerID] == 2)
            if EUDElseIf()(v.P_LoopMain[playerID] == 2):
                # (Line 147) {
                # (Line 148) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 150) trg.Shape_Edge(playerID, 1, "60 + 1n Archon", 0, 5, 100);
                DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                trg.Shape_Edge(playerID, 1, "60 + 1n Archon", 0, 5, 100)
                # (Line 151) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                # (Line 153) trg.Shape_Line(playerID, 1, "40 + 1n Wraith", 45, 5, 50, 100);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                trg.Shape_Line(playerID, 1, "40 + 1n Wraith", 45, 5, 50, 100)
                # (Line 154) trg.Shape_Line(playerID, 1, "40 + 1n Wraith", 225, 5, 50, 100);
                trg.Shape_Line(playerID, 1, "40 + 1n Wraith", 225, 5, 50, 100)
                # (Line 156) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 157) Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 159) trg.Main_Wait(80);
                DoActions(Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(80)
                # (Line 160) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 161) }
                # (Line 162) else if (v.P_LoopMain[playerID] == 3)
            if EUDElseIf()(v.P_LoopMain[playerID] == 3):
                # (Line 163) {
                # (Line 164) trg.Shape_Line(playerID, 1, "Kakaru (Twilight)", 135, 5, 50, 100);
                trg.Shape_Line(playerID, 1, "Kakaru (Twilight)", 135, 5, 50, 100)
                # (Line 165) trg.Shape_Line(playerID, 1, "Kakaru (Twilight)", 315, 5, 50, 100);
                trg.Shape_Line(playerID, 1, "Kakaru (Twilight)", 315, 5, 50, 100)
                # (Line 166) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);
                # (Line 168) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 169) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 170) }
                # (Line 171) else if (v.P_LoopMain[playerID] == 4)
            if EUDElseIf()(v.P_LoopMain[playerID] == 4):
                # (Line 172) {
                # (Line 173) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 175) trg.Shape_Edge(playerID, 1, "50 + 1n Tank", 0, 5, 100);
                DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                trg.Shape_Edge(playerID, 1, "50 + 1n Tank", 0, 5, 100)
                # (Line 176) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                # (Line 178) trg.Shape_NxNSquare(playerID, 1, "50 + 1n Battlecruiser", 3, 75);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                trg.Shape_NxNSquare(playerID, 1, "50 + 1n Battlecruiser", 3, 75)
                # (Line 179) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 180) Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 182) trg.Main_Wait(80);
                DoActions(Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(80)
                # (Line 184) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 185) }
                # (Line 186) else if (v.P_LoopMain[playerID] == 5)
            if EUDElseIf()(v.P_LoopMain[playerID] == 5):
                # (Line 187) {
                # (Line 188) trg.Main_Wait(160);
                trg.Main_Wait(160)
                # (Line 190) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 191) }
                # (Line 192) else if (v.P_LoopMain[playerID] == 6)
            if EUDElseIf()(v.P_LoopMain[playerID] == 6):
                # (Line 193) {
                # (Line 194) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
                # (Line 197) trg.Main_Wait(160);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                trg.Main_Wait(160)
                # (Line 199) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 200) }
                # (Line 202) else if (v.P_LoopMain[playerID] == 7)
            if EUDElseIf()(v.P_LoopMain[playerID] == 7):
                # (Line 203) {
                # (Line 204) adv.Shape_NxNSquareAt2(playerID, 1, "40 + 1n Wraith", 2, 75, 150, 150);
                adv.Shape_NxNSquareAt2(playerID, 1, "40 + 1n Wraith", 2, 75, 150, 150)
                # (Line 205) adv.Shape_NxNSquareAt2(playerID, 1, "40 + 1n Wraith", 2, 75, -150, -150);
                adv.Shape_NxNSquareAt2(playerID, 1, "40 + 1n Wraith", 2, 75, -150, -150)
                # (Line 206) adv.Shape_NxNSquareAt2(playerID, 1, "50 + 1n Tank", 2, 75, 150, 150);
                adv.Shape_NxNSquareAt2(playerID, 1, "50 + 1n Tank", 2, 75, 150, 150)
                # (Line 207) adv.Shape_NxNSquareAt2(playerID, 1, "50 + 1n Tank", 2, 75, -150, -150);
                adv.Shape_NxNSquareAt2(playerID, 1, "50 + 1n Tank", 2, 75, -150, -150)
                # (Line 209) trg.Shape_Edge(playerID, 1, "60 + 1n High Templar", 45, 7, 150);
                trg.Shape_Edge(playerID, 1, "60 + 1n High Templar", 45, 7, 150)
                # (Line 210) KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID);
                # (Line 212) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID))
                # (Line 213) MoveUnit(All, "50 + 1n Tank", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 214) Order("50 + 1n Tank", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveUnit(All, "50 + 1n Tank", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                # (Line 215) Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(Order("50 + 1n Tank", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 217) trg.Main_Wait(240);
                DoActions(Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(240)
                # (Line 219) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 220) }
                # (Line 221) else if (v.P_LoopMain[playerID] == 8)
            if EUDElseIf()(v.P_LoopMain[playerID] == 8):
                # (Line 222) {
                # (Line 223) RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 224) adv.Shape_NxNSquareAt2(playerID, 1, "Kakaru (Twilight)", 2, 75, 150, 150);
                DoActions(RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                adv.Shape_NxNSquareAt2(playerID, 1, "Kakaru (Twilight)", 2, 75, 150, 150)
                # (Line 225) adv.Shape_NxNSquareAt2(playerID, 1, "Kakaru (Twilight)", 2, 75, -150, -150);
                adv.Shape_NxNSquareAt2(playerID, 1, "Kakaru (Twilight)", 2, 75, -150, -150)
                # (Line 226) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);
                # (Line 228) adv.Shape_NxNSquareAt2(playerID, 1, "40 + 1n Wraith", 2, 75, -150, 150);
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID))
                adv.Shape_NxNSquareAt2(playerID, 1, "40 + 1n Wraith", 2, 75, -150, 150)
                # (Line 229) adv.Shape_NxNSquareAt2(playerID, 1, "40 + 1n Wraith", 2, 75, 150, -150);
                adv.Shape_NxNSquareAt2(playerID, 1, "40 + 1n Wraith", 2, 75, 150, -150)
                # (Line 230) adv.Shape_NxNSquareAt2(playerID, 1, "50 + 1n Tank", 2, 75, -150, 150);
                adv.Shape_NxNSquareAt2(playerID, 1, "50 + 1n Tank", 2, 75, -150, 150)
                # (Line 231) adv.Shape_NxNSquareAt2(playerID, 1, "50 + 1n Tank", 2, 75, 150, -150);
                adv.Shape_NxNSquareAt2(playerID, 1, "50 + 1n Tank", 2, 75, 150, -150)
                # (Line 233) trg.Shape_Edge(playerID, 1, "60 + 1n High Templar", 0, 7, 150);
                trg.Shape_Edge(playerID, 1, "60 + 1n High Templar", 0, 7, 150)
                # (Line 234) KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID);
                # (Line 236) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID))
                # (Line 237) MoveUnit(All, "50 + 1n Tank", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 238) Order("50 + 1n Tank", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveUnit(All, "50 + 1n Tank", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                # (Line 239) Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(Order("50 + 1n Tank", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 241) trg.Main_Wait(240);
                DoActions(Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(240)
                # (Line 243) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 244) }
                # (Line 245) else if (v.P_LoopMain[playerID] == 9)
            if EUDElseIf()(v.P_LoopMain[playerID] == 9):
                # (Line 246) {
                # (Line 247) RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 248) adv.Shape_NxNSquareAt2(playerID, 1, "Kakaru (Twilight)", 2, 75, -150, 150);
                DoActions(RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                adv.Shape_NxNSquareAt2(playerID, 1, "Kakaru (Twilight)", 2, 75, -150, 150)
                # (Line 249) adv.Shape_NxNSquareAt2(playerID, 1, "Kakaru (Twilight)", 2, 75, 150, -150);
                adv.Shape_NxNSquareAt2(playerID, 1, "Kakaru (Twilight)", 2, 75, 150, -150)
                # (Line 250) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);
                # (Line 252) trg.Main_Wait(1040);
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID))
                trg.Main_Wait(1040)
                # (Line 254) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 255) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 256) }
                # (Line 257) }
            EUDEndIf()
            # (Line 258) else if (v.P_CountMain[playerID] == 2)
        if EUDElseIf()(v.P_CountMain[playerID] == 2):
            # (Line 259) {
            # (Line 260) KillUnitAt(All, "60 + 1n Siege", "Anywhere", playerID);
            # (Line 261) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
            DoActions(KillUnitAt(All, "60 + 1n Siege", "Anywhere", playerID))
            # (Line 262) KillUnitAt(All, "40 + 1n Firebat", "Anywhere", playerID);
            DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
            # (Line 263) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
            DoActions(KillUnitAt(All, "40 + 1n Firebat", "Anywhere", playerID))
            # (Line 265) SetSwitch("Passive - Nanami1", Clear);
            DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
            # (Line 266) SetSwitch("Passive - Nanami2", Clear);
            DoActions(SetSwitch("Passive - Nanami1", Clear))
            # (Line 268) trg.SkillEnd();
            DoActions(SetSwitch("Passive - Nanami2", Clear))
            trg.SkillEnd()
            # (Line 269) }
            # (Line 270) }
        EUDEndIf()
        # (Line 271) if (v.P_WaitSub1[playerID] == 0)
    EUDEndIf()
    if EUDIf()(v.P_WaitSub1[playerID] == 0):
        # (Line 272) {
        # (Line 273) if (v.P_CountMain[playerID] < 2)
        if EUDIf()(v.P_CountMain[playerID] >= 2, neg=True):
            # (Line 274) {
            # (Line 275) if (v.P_CountSub1[playerID] == 0)
            if EUDIf()(v.P_CountSub1[playerID] == 0):
                # (Line 276) {
                # (Line 277) trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 75, 75);
                trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 75, 75)
                # (Line 279) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                # (Line 281) trg.Sub1_Wait(160);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                trg.Sub1_Wait(160)
                # (Line 283) v.P_CountSub1[playerID] += 1;
                _ARRW(v.P_CountSub1, playerID).__iadd__(1)
                # (Line 284) }
                # (Line 285) else if (v.P_CountSub1[playerID] == 1)
            if EUDElseIf()(v.P_CountSub1[playerID] == 1):
                # (Line 286) {
                # (Line 287) trg.Shape_Square(playerID, 1, "60 + 1n Archon", 150, 0);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", 150, 0)
                # (Line 289) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                # (Line 291) trg.Sub1_Wait(160);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                trg.Sub1_Wait(160)
                # (Line 293) v.P_CountSub1[playerID] = 0;
                _ARRW(v.P_CountSub1, playerID) << (0)
                # (Line 294) }
                # (Line 296) }
            EUDEndIf()
            # (Line 297) }
        EUDEndIf()
        # (Line 299) }
    EUDEndIf()
