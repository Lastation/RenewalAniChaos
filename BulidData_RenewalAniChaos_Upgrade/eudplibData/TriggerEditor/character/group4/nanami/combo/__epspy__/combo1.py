## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import PluginVariables as msqcvar;
import PluginVariables as msqcvar
# (Line 2) import variable as v;
import variable as v
# (Line 3) import func.trig as trg;
from func import trig as trg
# (Line 5) function main(playerID)
# (Line 6) {
@EUDFunc
def f_main(playerID):
    # (Line 7) if (v.P_WaitMain[playerID] == 0)
    if EUDIf()(v.P_WaitMain[playerID] == 0):
        # (Line 8) {
        # (Line 9) if (v.P_CountMain[playerID] == 0)
        if EUDIf()(v.P_CountMain[playerID] == 0):
            # (Line 10) {
            # (Line 11) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 12) {
                # (Line 13) trg.Shape_Edge(playerID, 1, "Kakaru (Twilight)", 45, 3, 50);
                trg.Shape_Edge(playerID, 1, "Kakaru (Twilight)", 45, 3, 50)
                # (Line 14) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);
                # (Line 16) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 18) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 19) }
                # (Line 20) else if (v.P_LoopMain[playerID] == 1)
            if EUDElseIf()(v.P_LoopMain[playerID] == 1):
                # (Line 21) {
                # (Line 22) trg.Shape_Edge(playerID, 1, "Kakaru (Twilight)", 45, 5, 100);
                trg.Shape_Edge(playerID, 1, "Kakaru (Twilight)", 45, 5, 100)
                # (Line 23) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);
                # (Line 25) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 27) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 28) }
                # (Line 29) else if (v.P_LoopMain[playerID] == 2)
            if EUDElseIf()(v.P_LoopMain[playerID] == 2):
                # (Line 30) {
                # (Line 31) trg.Shape_Edge(playerID, 1, "60 + 1n Archon", 45, 5, 100);
                trg.Shape_Edge(playerID, 1, "60 + 1n Archon", 45, 5, 100)
                # (Line 32) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                # (Line 34) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 36) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 37) }
                # (Line 38) else if (v.P_LoopMain[playerID] == 3)
            if EUDElseIf()(v.P_LoopMain[playerID] == 3):
                # (Line 39) {
                # (Line 40) trg.Shape_Edge(playerID, 1, "40 + 1n Wraith", 0, 5, 100);
                trg.Shape_Edge(playerID, 1, "40 + 1n Wraith", 0, 5, 100)
                # (Line 41) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 43) trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 50, 50);
                DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 50, 50)
                # (Line 45) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 46) Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 48) trg.Main_Wait(80);
                DoActions(Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(80)
                # (Line 50) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 51) }
                # (Line 52) else if (v.P_LoopMain[playerID] == 4)
            if EUDElseIf()(v.P_LoopMain[playerID] == 4):
                # (Line 53) {
                # (Line 54) trg.Shape_Edge(playerID, 1, "40 + 1n Guardian", 0, 5, 100);
                trg.Shape_Edge(playerID, 1, "40 + 1n Guardian", 0, 5, 100)
                # (Line 55) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
                # (Line 57) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 59) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 60) }
                # (Line 61) else if (v.P_LoopMain[playerID] == 5)
            if EUDElseIf()(v.P_LoopMain[playerID] == 5):
                # (Line 62) {
                # (Line 63) KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID);
                # (Line 65) trg.Shape_Edge(playerID, 1, "40 + 1n Mojo", 0, 5, 100);
                DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID))
                trg.Shape_Edge(playerID, 1, "40 + 1n Mojo", 0, 5, 100)
                # (Line 67) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 68) Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 70) trg.Main_Wait(80);
                DoActions(Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(80)
                # (Line 72) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 73) }
                # (Line 74) else if (v.P_LoopMain[playerID] == 6)
            if EUDElseIf()(v.P_LoopMain[playerID] == 6):
                # (Line 75) {
                # (Line 76) trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 100, 50);
                trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 100, 50)
                # (Line 77) trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 50, 100);
                trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 50, 100)
                # (Line 78) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
                # (Line 80) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 82) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 83) }
                # (Line 84) else if (v.P_LoopMain[playerID] == 7)
            if EUDElseIf()(v.P_LoopMain[playerID] == 7):
                # (Line 85) {
                # (Line 86) KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID);
                # (Line 88) trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 150, 100);
                DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID))
                trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 150, 100)
                # (Line 89) trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 100, 150);
                trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 100, 150)
                # (Line 90) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
                # (Line 92) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 94) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 95) }
                # (Line 96) else if (v.P_LoopMain[playerID] == 8)
            if EUDElseIf()(v.P_LoopMain[playerID] == 8):
                # (Line 97) {
                # (Line 98) trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", 100, 50);
                trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", 100, 50)
                # (Line 99) trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", 50, 100);
                trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", 50, 100)
                # (Line 100) trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", 150, 100);
                trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", 150, 100)
                # (Line 101) trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", 100, 150);
                trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", 100, 150)
                # (Line 102) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);
                # (Line 104) trg.Main_Wait(1280);
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID))
                trg.Main_Wait(1280)
                # (Line 106) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 107) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 108) }
                # (Line 110) }
            EUDEndIf()
            # (Line 111) else if (v.P_CountMain[playerID] == 1)
        if EUDElseIf()(v.P_CountMain[playerID] == 1):
            # (Line 112) {
            # (Line 113) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 114) {
                # (Line 115) trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 100, 50);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 100, 50)
                # (Line 116) trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 50, 100);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 50, 100)
                # (Line 117) trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 100, 100);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 100, 100)
                # (Line 118) trg.Shape_Square(playerID, 1, "50 + 1n Tank", 100, 50);
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", 100, 50)
                # (Line 119) trg.Shape_Square(playerID, 1, "50 + 1n Tank", 50, 100);
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", 50, 100)
                # (Line 120) trg.Shape_Square(playerID, 1, "50 + 1n Tank", 100, 100);
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", 100, 100)
                # (Line 121) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
                # (Line 122) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                # (Line 124) trg.Main_Wait(160);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                trg.Main_Wait(160)
                # (Line 125) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 126) }
                # (Line 127) else if (v.P_LoopMain[playerID] == 1)
            if EUDElseIf()(v.P_LoopMain[playerID] == 1):
                # (Line 128) {
                # (Line 129) trg.Shape_Edge(playerID, 1, "Target", 45, 3, 50);
                trg.Shape_Edge(playerID, 1, "Target", 45, 3, 50)
                # (Line 130) KillUnitAt(All, "Target", "Anywhere", playerID);
                # (Line 132) trg.Shape_Edge(playerID, 1, "40 + 1n Marine", 45, 3, 50);
                DoActions(KillUnitAt(All, "Target", "Anywhere", playerID))
                trg.Shape_Edge(playerID, 1, "40 + 1n Marine", 45, 3, 50)
                # (Line 134) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 135) MoveUnit(All, "40 + 1n Marine", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 136) Order("40 + 1n Marine", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveUnit(All, "40 + 1n Marine", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                # (Line 138) trg.Main_Wait(80);
                DoActions(Order("40 + 1n Marine", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(80)
                # (Line 140) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 141) }
                # (Line 142) else if (v.P_LoopMain[playerID] == 2)
            if EUDElseIf()(v.P_LoopMain[playerID] == 2):
                # (Line 143) {
                # (Line 144) trg.Shape_Edge(playerID, 1, "60 + 1n Archon", 45, 5, 100);
                trg.Shape_Edge(playerID, 1, "60 + 1n Archon", 45, 5, 100)
                # (Line 145) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                # (Line 146) trg.Shape_Edge(playerID, 1, "Kakaru (Twilight)", 45, 5, 100);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                trg.Shape_Edge(playerID, 1, "Kakaru (Twilight)", 45, 5, 100)
                # (Line 147) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);
                # (Line 149) trg.Main_Wait(240);
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID))
                trg.Main_Wait(240)
                # (Line 151) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 152) }
                # (Line 153) else if (v.P_LoopMain[playerID] == 3)
            if EUDElseIf()(v.P_LoopMain[playerID] == 3):
                # (Line 154) {
                # (Line 155) KillUnitAt(All, "40 + 1n Marine", "Anywhere", playerID);
                # (Line 156) trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 150, 0);
                DoActions(KillUnitAt(All, "40 + 1n Marine", "Anywhere", playerID))
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 150, 0)
                # (Line 157) trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 120, 30);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 120, 30)
                # (Line 158) trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 120, -30);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 120, -30)
                # (Line 159) trg.Shape_Square(playerID, 1, "50 + 1n Tank", 150, 0);
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", 150, 0)
                # (Line 160) trg.Shape_Square(playerID, 1, "50 + 1n Tank", 120, 30);
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", 120, 30)
                # (Line 161) trg.Shape_Square(playerID, 1, "50 + 1n Tank", 120, -30);
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", 120, -30)
                # (Line 162) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
                # (Line 163) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                # (Line 165) trg.Main_Wait(160);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                trg.Main_Wait(160)
                # (Line 166) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 167) }
                # (Line 168) else if (v.P_LoopMain[playerID] == 4)
            if EUDElseIf()(v.P_LoopMain[playerID] == 4):
                # (Line 169) {
                # (Line 170) trg.Shape_Edge(playerID, 1, "Target", 0, 3, 50);
                trg.Shape_Edge(playerID, 1, "Target", 0, 3, 50)
                # (Line 171) KillUnitAt(All, "Target", "Anywhere", playerID);
                # (Line 173) trg.Shape_Edge(playerID, 1, "40 + 1n Marine", 0, 3, 50);
                DoActions(KillUnitAt(All, "Target", "Anywhere", playerID))
                trg.Shape_Edge(playerID, 1, "40 + 1n Marine", 0, 3, 50)
                # (Line 175) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 176) MoveUnit(All, "40 + 1n Marine", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 177) Order("40 + 1n Marine", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveUnit(All, "40 + 1n Marine", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                # (Line 179) trg.Main_Wait(320);
                DoActions(Order("40 + 1n Marine", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(320)
                # (Line 181) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 182) }
                # (Line 183) else if (v.P_LoopMain[playerID] == 5)
            if EUDElseIf()(v.P_LoopMain[playerID] == 5):
                # (Line 184) {
                # (Line 185) trg.Shape_Edge(playerID, 1, "60 + 1n Archon", 0, 5, 100);
                trg.Shape_Edge(playerID, 1, "60 + 1n Archon", 0, 5, 100)
                # (Line 186) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                # (Line 187) trg.Shape_Edge(playerID, 1, "Kakaru (Twilight)", 0, 5, 100);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                trg.Shape_Edge(playerID, 1, "Kakaru (Twilight)", 0, 5, 100)
                # (Line 188) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);
                # (Line 190) trg.Main_Wait(240);
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID))
                trg.Main_Wait(240)
                # (Line 192) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 193) }
                # (Line 195) else if (v.P_LoopMain[playerID] == 6)
            if EUDElseIf()(v.P_LoopMain[playerID] == 6):
                # (Line 196) {
                # (Line 197) KillUnitAt(All, "40 + 1n Marine", "Anywhere", playerID);
                # (Line 199) v.P_CountMain[playerID] += 1;
                DoActions(KillUnitAt(All, "40 + 1n Marine", "Anywhere", playerID))
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 200) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 201) }
                # (Line 202) }
            EUDEndIf()
            # (Line 203) else if (v.P_CountMain[playerID] == 2)
        if EUDElseIf()(v.P_CountMain[playerID] == 2):
            # (Line 204) {
            # (Line 205) trg.SkillEnd();
            trg.SkillEnd()
            # (Line 206) }
            # (Line 207) }
        EUDEndIf()
        # (Line 208) }
    EUDEndIf()
