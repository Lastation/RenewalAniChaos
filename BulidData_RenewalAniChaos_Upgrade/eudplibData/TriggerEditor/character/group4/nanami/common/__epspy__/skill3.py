## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import PluginVariables as msqcvar;
import PluginVariables as msqcvar
# (Line 2) import variable as v;
import variable as v
# (Line 3) import func.trig as trg;
from func import trig as trg
# (Line 5) function main(playerID)
# (Line 6) {
@EUDFunc
def f_main(playerID):
    # (Line 7) if (v.P_WaitMain[playerID] == 0)
    if EUDIf()(v.P_WaitMain[playerID] == 0):
        # (Line 8) {
        # (Line 9) if (v.P_CountMain[playerID] == 0)
        if EUDIf()(v.P_CountMain[playerID] == 0):
            # (Line 10) {
            # (Line 11) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 12) {
                # (Line 13) trg.Shape_Square(playerID, 1, "60 + 1n High Templar", 50, 50);
                trg.Shape_Square(playerID, 1, "60 + 1n High Templar", 50, 50)
                # (Line 14) KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID);
                # (Line 15) trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 50, 50);
                DoActions(KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID))
                trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 50, 50)
                # (Line 16) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 17) Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 19) trg.Main_Wait(160);
                DoActions(Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(160)
                # (Line 21) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 22) }
                # (Line 23) else if (v.P_LoopMain[playerID] == 1)
            if EUDElseIf()(v.P_LoopMain[playerID] == 1):
                # (Line 24) {
                # (Line 25) KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID);
                # (Line 26) trg.Shape_Square(playerID, 1, "60 + 1n High Templar", 50, 50);
                DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID))
                trg.Shape_Square(playerID, 1, "60 + 1n High Templar", 50, 50)
                # (Line 27) KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID);
                # (Line 28) trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 50, 50);
                DoActions(KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID))
                trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 50, 50)
                # (Line 29) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 30) Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 32) trg.Main_Wait(160);
                DoActions(Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(160)
                # (Line 34) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 35) }
                # (Line 36) else if (v.P_LoopMain[playerID] == 2)
            if EUDElseIf()(v.P_LoopMain[playerID] == 2):
                # (Line 37) {
                # (Line 38) KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID);
                # (Line 39) trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 100, 100);
                DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID))
                trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 100, 100)
                # (Line 40) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
                # (Line 42) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 44) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 45) }
                # (Line 46) else if (v.P_LoopMain[playerID] == 3)
            if EUDElseIf()(v.P_LoopMain[playerID] == 3):
                # (Line 47) {
                # (Line 48) trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", 150, 150);
                trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", 150, 150)
                # (Line 49) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);
                # (Line 51) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 53) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 54) }
                # (Line 55) else if (v.P_LoopMain[playerID] == 4)
            if EUDElseIf()(v.P_LoopMain[playerID] == 4):
                # (Line 56) {
                # (Line 57) trg.Shape_Square(playerID, 1, "40 + 1n Wraith", 50, 50);
                trg.Shape_Square(playerID, 1, "40 + 1n Wraith", 50, 50)
                # (Line 58) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 59) trg.Shape_Square(playerID, 1, "40 + 1n Goliath", 50, 50);
                DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                trg.Shape_Square(playerID, 1, "40 + 1n Goliath", 50, 50)
                # (Line 60) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 61) MoveUnit(All, "40 + 1n Goliath", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 62) Order("40 + 1n Goliath", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveUnit(All, "40 + 1n Goliath", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                # (Line 64) trg.Main_Wait(80);
                DoActions(Order("40 + 1n Goliath", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(80)
                # (Line 66) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 67) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 68) }
                # (Line 69) }
            EUDEndIf()
            # (Line 70) else if (v.P_CountMain[playerID] == 1)
        if EUDElseIf()(v.P_CountMain[playerID] == 1):
            # (Line 71) {
            # (Line 72) if (v.P_LoopMain[playerID] < 4)
            if EUDIf()(v.P_LoopMain[playerID] >= 4, neg=True):
                # (Line 73) {
                # (Line 74) KillUnitAt(All, "40 + 1n Goliath", "Anywhere", playerID);
                # (Line 76) trg.Shape_Square(playerID, 1, "Protoss Dark Templar", 120 - 30 * v.P_LoopMain[playerID], 30 * v.P_LoopMain[playerID]);
                DoActions(KillUnitAt(All, "40 + 1n Goliath", "Anywhere", playerID))
                trg.Shape_Square(playerID, 1, "Protoss Dark Templar", 120 - 30 * v.P_LoopMain[playerID], 30 * v.P_LoopMain[playerID])
                # (Line 77) KillUnitAt(All, "Protoss Dark Templar", "Anywhere", playerID);
                # (Line 79) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "Protoss Dark Templar", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 80) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 81) }
                # (Line 82) else if (v.P_LoopMain[playerID] == 4)
            if EUDElseIf()(v.P_LoopMain[playerID] == 4):
                # (Line 83) {
                # (Line 84) trg.Shape_Square(playerID, 1, "40 + 1n Zealot", 120, 0);
                trg.Shape_Square(playerID, 1, "40 + 1n Zealot", 120, 0)
                # (Line 85) KillUnitAt(All, "40 + 1n Zealot", "Anywhere", playerID);
                # (Line 86) trg.Shape_Square(playerID, 1, "40 + 1n Zealot", 80, 40);
                DoActions(KillUnitAt(All, "40 + 1n Zealot", "Anywhere", playerID))
                trg.Shape_Square(playerID, 1, "40 + 1n Zealot", 80, 40)
                # (Line 87) KillUnitAt(All, "40 + 1n Zealot", "Anywhere", playerID);
                # (Line 88) trg.Shape_Square(playerID, 1, "40 + 1n Zealot", 40, 80);
                DoActions(KillUnitAt(All, "40 + 1n Zealot", "Anywhere", playerID))
                trg.Shape_Square(playerID, 1, "40 + 1n Zealot", 40, 80)
                # (Line 89) KillUnitAt(All, "40 + 1n Zealot", "Anywhere", playerID);
                # (Line 91) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "40 + 1n Zealot", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 92) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 93) }
                # (Line 94) else if (v.P_LoopMain[playerID] == 5)
            if EUDElseIf()(v.P_LoopMain[playerID] == 5):
                # (Line 95) {
                # (Line 96) trg.Shape_Square(playerID, 1, "60 + 1n High Templar", 120, 0);
                trg.Shape_Square(playerID, 1, "60 + 1n High Templar", 120, 0)
                # (Line 97) KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID);
                # (Line 98) trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 120, 0);
                DoActions(KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID))
                trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 120, 0)
                # (Line 99) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 100) Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 102) trg.Main_Wait(80);
                DoActions(Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(80)
                # (Line 103) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 104) }
                # (Line 105) else if (v.P_LoopMain[playerID] == 6)
            if EUDElseIf()(v.P_LoopMain[playerID] == 6):
                # (Line 106) {
                # (Line 107) KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID);
                # (Line 109) trg.Shape_Square(playerID, 1, "60 + 1n High Templar", 80, 40);
                DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID))
                trg.Shape_Square(playerID, 1, "60 + 1n High Templar", 80, 40)
                # (Line 110) KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID);
                # (Line 111) trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 80, 40);
                DoActions(KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID))
                trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 80, 40)
                # (Line 112) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 113) Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 115) trg.Main_Wait(80);
                DoActions(Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(80)
                # (Line 116) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 117) }
                # (Line 118) else if (v.P_LoopMain[playerID] == 7)
            if EUDElseIf()(v.P_LoopMain[playerID] == 7):
                # (Line 119) {
                # (Line 120) KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID);
                # (Line 122) trg.Shape_Square(playerID, 1, "60 + 1n High Templar", 40, 80);
                DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID))
                trg.Shape_Square(playerID, 1, "60 + 1n High Templar", 40, 80)
                # (Line 123) KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID);
                # (Line 124) trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 40, 80);
                DoActions(KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID))
                trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 40, 80)
                # (Line 125) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 126) Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 128) trg.Main_Wait(80);
                DoActions(Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(80)
                # (Line 129) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 130) }
                # (Line 131) else if (v.P_LoopMain[playerID] == 8)
            if EUDElseIf()(v.P_LoopMain[playerID] == 8):
                # (Line 132) {
                # (Line 133) KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID);
                # (Line 135) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 137) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 138) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 139) }
                # (Line 141) }
            EUDEndIf()
            # (Line 142) else if (v.P_CountMain[playerID] == 2)
        if EUDElseIf()(v.P_CountMain[playerID] == 2):
            # (Line 143) {
            # (Line 144) trg.SkillEnd();
            trg.SkillEnd()
            # (Line 145) }
            # (Line 146) }
        EUDEndIf()
        # (Line 147) }
    EUDEndIf()
