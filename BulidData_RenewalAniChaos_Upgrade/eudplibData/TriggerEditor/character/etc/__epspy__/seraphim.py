## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import PluginVariables as msqcvar;
import PluginVariables as msqcvar
# (Line 2) import variable as v;
import variable as v
# (Line 3) import func.trig as trg;
from func import trig as trg
# (Line 4) import func.sound as s;
from func import sound as s
# (Line 6) const P_player		= PVariable();
P_player = _CGFW(lambda: [PVariable()], 1)[0]
# (Line 7) const P_observer 	= PVariable();
P_observer = _CGFW(lambda: [PVariable()], 1)[0]
# (Line 8) const P_type 		= PVariable();
P_type = _CGFW(lambda: [PVariable()], 1)[0]
# (Line 10) function Text1(num);
# (Line 11) function Text2(num);
# (Line 12) function Text3(num);
# (Line 14) function player(playerID)
# (Line 15) {
@EUDFunc
def f_player(playerID):
    # (Line 16) if (P_type[playerID] == 1) { Text1(P_player[playerID]); }
    if EUDIf()(P_type[playerID] == 1):
        Text1(P_player[playerID])
        # (Line 17) if (P_type[playerID] == 2) { Text2(P_player[playerID]); }
    EUDEndIf()
    if EUDIf()(P_type[playerID] == 2):
        Text2(P_player[playerID])
        # (Line 18) if (P_type[playerID] == 3) { Text3(P_player[playerID]); }
    EUDEndIf()
    if EUDIf()(P_type[playerID] == 3):
        Text3(P_player[playerID])
        # (Line 19) P_player[playerID] = 0;
    EUDEndIf()
    _ARRW(P_player, playerID) << (0)
    # (Line 20) }
    # (Line 22) function observer(playerID)

# (Line 23) {
@EUDFunc
def f_observer(playerID):
    # (Line 24) if (P_type[playerID] == 1) { Text1(P_observer[playerID - 128]); }
    if EUDIf()(P_type[playerID] == 1):
        Text1(P_observer[playerID - 128])
        # (Line 25) if (P_type[playerID] == 2) { Text2(P_observer[playerID - 128]); }
    EUDEndIf()
    if EUDIf()(P_type[playerID] == 2):
        Text2(P_observer[playerID - 128])
        # (Line 26) if (P_type[playerID] == 3) { Text3(P_observer[playerID - 128]); }
    EUDEndIf()
    if EUDIf()(P_type[playerID] == 3):
        Text3(P_observer[playerID - 128])
        # (Line 27) P_observer[playerID - 128] = 0;
    EUDEndIf()
    _ARRW(P_observer, playerID - 128) << (0)
    # (Line 28) }
    # (Line 30) function main(playerID)

# (Line 31) {
@EUDFunc
def f_main(playerID):
    # (Line 32) if (playerID < 6) 	{ player(playerID); 	}
    if EUDIf()(playerID >= 6, neg=True):
        f_player(playerID)
        # (Line 33) else  			{ observer(playerID); }
    if EUDElse()():
        f_observer(playerID)
        # (Line 34) }
    EUDEndIf()
    # (Line 39) function Text1(num)

# (Line 40) {
@EUDFunc
def Text1(num):
    # (Line 41) switch (num)
    EUDSwitch(num)
    # (Line 42) {
    # (Line 43) case 4000:
    _t1 = EUDSwitchCase()
    # (Line 44) PlayWAV("Seraphim_SSS.ogg");
    if _t1(4000):
        # (Line 45) v.stb.print("\n\n\x13\x1BSeraphim\n\x13\x04역시 그런가, 조금도 신선한게 없네\n\n");
        DoActions(PlayWAV("Seraphim_SSS.ogg"))
        v.stb.print("\n\n\x13\x1BSeraphim\n\x13\x04역시 그런가, 조금도 신선한게 없네\n\n")
        # (Line 47) break;
        EUDBreak()
        # (Line 48) case 4001:
    _t2 = EUDSwitchCase()
    # (Line 49) PlayWAV("Seraphim_AAC.ogg");
    if _t2(4001):
        # (Line 50) v.stb.print("\n\n\x13\x1BSeraphim\n\x13\x04이제 됐어\n\x13\x04네가 그렇게 결정했다면, 이루어주지\n\n");
        DoActions(PlayWAV("Seraphim_AAC.ogg"))
        v.stb.print("\n\n\x13\x1BSeraphim\n\x13\x04이제 됐어\n\x13\x04네가 그렇게 결정했다면, 이루어주지\n\n")
        # (Line 52) break;
        EUDBreak()
        # (Line 53) case 4002:
    _t3 = EUDSwitchCase()
    # (Line 54) PlayWAV("Seraphim_CC.ogg");
    if _t3(4002):
        # (Line 55) v.stb.print("\n\n\x13\x1BSeraphim\n\x13\x04불쌍한 녀석이야\n\n");
        DoActions(PlayWAV("Seraphim_CC.ogg"))
        v.stb.print("\n\n\x13\x1BSeraphim\n\x13\x04불쌍한 녀석이야\n\n")
        # (Line 57) break;
        EUDBreak()
        # (Line 58) case 4003:
    _t4 = EUDSwitchCase()
    # (Line 59) PlayWAV("Seraphim_CCAA.ogg");
    if _t4(4003):
        # (Line 60) v.stb.print("\n\n\x13\x1BSeraphim\n\x13\x04소원을 이루기 위해 진실에서 눈을 돌려버리고 말았어\n\n");
        DoActions(PlayWAV("Seraphim_CCAA.ogg"))
        v.stb.print("\n\n\x13\x1BSeraphim\n\x13\x04소원을 이루기 위해 진실에서 눈을 돌려버리고 말았어\n\n")
        # (Line 62) break;
        EUDBreak()
        # (Line 63) }
    # (Line 64) }
    EUDEndSwitch()
    # (Line 66) function Text2(num)

# (Line 67) {
@EUDFunc
def Text2(num):
    # (Line 68) switch (num)
    EUDSwitch(num)
    # (Line 69) {
    # (Line 70) case 16000:
    _t1 = EUDSwitchCase()
    # (Line 71) PlayWAV("Seraphim_AAAA.ogg");
    if _t1(16000):
        # (Line 72) v.stb.print("\n\n\x13\x1BSeraphim\n\x13\x04하지만...\n\n");
        DoActions(PlayWAV("Seraphim_AAAA.ogg"))
        v.stb.print("\n\n\x13\x1BSeraphim\n\x13\x04하지만...\n\n")
        # (Line 74) break;
        EUDBreak()
        # (Line 75) case 16001:
    _t2 = EUDSwitchCase()
    # (Line 76) v.stb.print("\n\n\x13\x1BSeraphim\n\x13\x04분명 후회할테니까\n\n");
    if _t2(16001):
        v.stb.print("\n\n\x13\x1BSeraphim\n\x13\x04분명 후회할테니까\n\n")
        # (Line 78) break;
        EUDBreak()
        # (Line 79) case 16010:
    _t3 = EUDSwitchCase()
    # (Line 80) PlayWAV("Seraphim_O_Ult.ogg");
    if _t3(16010):
        # (Line 82) break;
        DoActions(PlayWAV("Seraphim_O_Ult.ogg"))
        EUDBreak()
        # (Line 83) }
    # (Line 84) }
    EUDEndSwitch()
    # (Line 86) function Text3(num)

# (Line 87) {
@EUDFunc
def Text3(num):
    # (Line 88) switch (num)
    EUDSwitch(num)
    # (Line 89) {
    # (Line 90) case 16000:
    _t1 = EUDSwitchCase()
    # (Line 91) v.stb.print("\n\n\x13\x1BSeraphim\n\x13\x04행복한 세계,\n\x13\x04모든 사람이 행복할 수 있는 세상은...\n\n");
    if _t1(16000):
        v.stb.print("\n\n\x13\x1BSeraphim\n\x13\x04행복한 세계,\n\x13\x04모든 사람이 행복할 수 있는 세상은...\n\n")
        # (Line 92) PlayWAV("Seraphim_O_0.ogg");
        # (Line 94) break;
        DoActions(PlayWAV("Seraphim_O_0.ogg"))
        EUDBreak()
        # (Line 95) case 16001:
    _t2 = EUDSwitchCase()
    # (Line 96) v.stb.print("\n\n\x13\x1BSeraphim\n\x13\x04역시 실현할 수 없는 건가...\n\n");
    if _t2(16001):
        v.stb.print("\n\n\x13\x1BSeraphim\n\x13\x04역시 실현할 수 없는 건가...\n\n")
        # (Line 98) break;
        EUDBreak()
        # (Line 99) case 16011:
    _t3 = EUDSwitchCase()
    # (Line 100) PlayWAV("Seraphim_O_1.ogg");
    if _t3(16011):
        # (Line 101) v.stb.print("\n\n\x13\x1BSeraphim\n\x13\x04하지만 너는, 내 소원을 이해할 수 있을 리가 없어\n\n");
        DoActions(PlayWAV("Seraphim_O_1.ogg"))
        v.stb.print("\n\n\x13\x1BSeraphim\n\x13\x04하지만 너는, 내 소원을 이해할 수 있을 리가 없어\n\n")
        # (Line 103) break;
        EUDBreak()
        # (Line 104) case 16012:
    _t4 = EUDSwitchCase()
    # (Line 105) PlayWAV("Seraphim_O_2.ogg");
    if _t4(16012):
        # (Line 106) v.stb.print("\n\n\x13\x1BSeraphim\n\x13\x04말해봐 내 소원은... 뭐지?\n\n");
        DoActions(PlayWAV("Seraphim_O_2.ogg"))
        v.stb.print("\n\n\x13\x1BSeraphim\n\x13\x04말해봐 내 소원은... 뭐지?\n\n")
        # (Line 108) break;
        EUDBreak()
        # (Line 109) case 16013:
    _t5 = EUDSwitchCase()
    # (Line 110) PlayWAV("Seraphim_O_3.ogg");
    if _t5(16013):
        # (Line 111) v.stb.print("\n\n\x13\x1BSeraphim\n\x13\x04종말을 막는 소원을 빌어 나를 구해준다라...\n\x13\x04나쁘지 않네\n\n");
        DoActions(PlayWAV("Seraphim_O_3.ogg"))
        v.stb.print("\n\n\x13\x1BSeraphim\n\x13\x04종말을 막는 소원을 빌어 나를 구해준다라...\n\x13\x04나쁘지 않네\n\n")
        # (Line 113) break;
        EUDBreak()
        # (Line 114) case 16014:
    _t6 = EUDSwitchCase()
    # (Line 115) PlayWAV("Seraphim_O_4.ogg");
    if _t6(16014):
        # (Line 116) v.stb.print("\n\n\x13\x1BSeraphim\n\x13\x04이번의 너는 뭐랄까 조금,\n\x13\x047일의 시간이 너무 짧게 느껴지게 만들어\n\n");
        DoActions(PlayWAV("Seraphim_O_4.ogg"))
        v.stb.print("\n\n\x13\x1BSeraphim\n\x13\x04이번의 너는 뭐랄까 조금,\n\x13\x047일의 시간이 너무 짧게 느껴지게 만들어\n\n")
        # (Line 118) break;
        EUDBreak()
        # (Line 119) case 16015:
    _t7 = EUDSwitchCase()
    # (Line 120) PlayWAV("Seraphim_O_5.ogg");
    if _t7(16015):
        # (Line 121) v.stb.print("\n\n\x13\x1BSeraphim\n\x13\x04내가 사라져도 이 세계의 윤회는 계속해서 이어질 거야\n\n");
        DoActions(PlayWAV("Seraphim_O_5.ogg"))
        v.stb.print("\n\n\x13\x1BSeraphim\n\x13\x04내가 사라져도 이 세계의 윤회는 계속해서 이어질 거야\n\n")
        # (Line 123) break;
        EUDBreak()
        # (Line 124) case 16016:
    _t8 = EUDSwitchCase()
    # (Line 125) PlayWAV("Seraphim_O_6.ogg");
    if _t8(16016):
        # (Line 126) v.stb.print("\n\n\x13\x1BSeraphim\n\x13\x04너는 이 세계를 지키고 싶어,\n\x13\x04하지만 이 세계에 있어 지금의 나는 진정한 위협이니까\n");
        DoActions(PlayWAV("Seraphim_O_6.ogg"))
        v.stb.print("\n\n\x13\x1BSeraphim\n\x13\x04너는 이 세계를 지키고 싶어,\n\x13\x04하지만 이 세계에 있어 지금의 나는 진정한 위협이니까\n")
        # (Line 128) break;
        EUDBreak()
        # (Line 129) case 16017:
    _t9 = EUDSwitchCase()
    # (Line 130) PlayWAV("Seraphim_O_7.ogg");
    if _t9(16017):
        # (Line 131) v.stb.print("\n\n\x13\x1BSeraphim\n\x13\x04네 소원은, 확실히 받아뒀어\n");
        DoActions(PlayWAV("Seraphim_O_7.ogg"))
        v.stb.print("\n\n\x13\x1BSeraphim\n\x13\x04네 소원은, 확실히 받아뒀어\n")
        # (Line 133) break;
        EUDBreak()
        # (Line 134) case 16021:
    _t10 = EUDSwitchCase()
    # (Line 135) v.stb.printAt(3,"\x13\x02\" \x02너의 \x02\"                \n\n");
    if _t10(16021):
        v.stb.printAt(3, "\x13\x02\" \x02너의 \x02\"                \n\n")
        # (Line 137) break;
        EUDBreak()
        # (Line 138) case 16022:
    _t11 = EUDSwitchCase()
    # (Line 139) v.stb.printAt(3,"\x13\x04\" \x04너의 \x04\"                \n\n");
    if _t11(16022):
        v.stb.printAt(3, "\x13\x04\" \x04너의 \x04\"                \n\n")
        # (Line 141) break;
        EUDBreak()
        # (Line 142) case 16023:
    _t12 = EUDSwitchCase()
    # (Line 143) v.stb.printAt(3,"\x13\x04\" \x04너의 \x04\"                \n\x13\x02          \" \x02소원 \x02\"\n");
    if _t12(16023):
        v.stb.printAt(3, "\x13\x04\" \x04너의 \x04\"                \n\x13\x02          \" \x02소원 \x02\"\n")
        # (Line 145) break;
        EUDBreak()
        # (Line 146) case 16024:
    _t13 = EUDSwitchCase()
    # (Line 147) v.stb.printAt(3,"\x13\x04\" \x04너의 \x04\"                \n\x13\x04          \" \x04소원 \x04\"\n");
    if _t13(16024):
        v.stb.printAt(3, "\x13\x04\" \x04너의 \x04\"                \n\x13\x04          \" \x04소원 \x04\"\n")
        # (Line 149) break;
        EUDBreak()
        # (Line 150) case 16031:
    _t14 = EUDSwitchCase()
    # (Line 151) v.stb.printAt(3,"\x13\x02\" \x02신의 소원을 지키기 위해           \n\n");
    if _t14(16031):
        v.stb.printAt(3, "\x13\x02\" \x02신의 소원을 지키기 위해           \n\n")
        # (Line 153) break;
        EUDBreak()
        # (Line 154) case 16032:
    _t15 = EUDSwitchCase()
    # (Line 155) v.stb.printAt(3,"\x13\x04\" 신의 소원을 지키기 위해           \n\n");
    if _t15(16032):
        v.stb.printAt(3, "\x13\x04\" 신의 소원을 지키기 위해           \n\n")
        # (Line 157) break;
        EUDBreak()
        # (Line 158) case 16033:
    _t16 = EUDSwitchCase()
    # (Line 159) v.stb.printAt(3,"\x13\x04\" 신의 소원을 지키기 위해           \n\x13\x1B             인간은 어리석은 맹세를 하였다 \"\n");
    if _t16(16033):
        v.stb.printAt(3, "\x13\x04\" 신의 소원을 지키기 위해           \n\x13\x1B             인간은 어리석은 맹세를 하였다 \"\n")
        # (Line 161) break;
        EUDBreak()
        # (Line 162) case 16034:
    _t17 = EUDSwitchCase()
    # (Line 163) v.stb.printAt(3,"\x13\x04\" 신의 소원을 지키기 위해           \n\x13\x08             인간은 어리석은 맹세를 하였다 \"\n");
    if _t17(16034):
        v.stb.printAt(3, "\x13\x04\" 신의 소원을 지키기 위해           \n\x13\x08             인간은 어리석은 맹세를 하였다 \"\n")
        # (Line 165) break;
        EUDBreak()
        # (Line 166) case 16041:
    _t18 = EUDSwitchCase()
    # (Line 167) v.stb.printAt(3,"\x13\x02\" 영원히 윤회에 속박되고       \n\n\n");
    if _t18(16041):
        v.stb.printAt(3, "\x13\x02\" 영원히 윤회에 속박되고       \n\n\n")
        # (Line 169) break;
        EUDBreak()
        # (Line 170) case 16042:
    _t19 = EUDSwitchCase()
    # (Line 171) v.stb.printAt(3,"\x13\x04\" 영원히 윤회에 속박되고       \n  \n\n");
    if _t19(16042):
        v.stb.printAt(3, "\x13\x04\" 영원히 윤회에 속박되고       \n  \n\n")
        # (Line 173) break;
        EUDBreak()
        # (Line 174) case 16043:
    _t20 = EUDSwitchCase()
    # (Line 175) v.stb.printAt(3,"\x13\x04\" 영원히 윤회에 속박되고       \n\x13\x02             영원히 시간 속에서 헤맨다 \"       \n\n");
    if _t20(16043):
        v.stb.printAt(3, "\x13\x04\" 영원히 윤회에 속박되고       \n\x13\x02             영원히 시간 속에서 헤맨다 \"       \n\n")
        # (Line 177) break;
        EUDBreak()
        # (Line 178) case 16044:
    _t21 = EUDSwitchCase()
    # (Line 179) v.stb.printAt(3,"\x13\x04\" 영원히 윤회에 속박되고       \n\x13\x04             영원히 시간 속에서 헤맨다 \"       \n\n");
    if _t21(16044):
        v.stb.printAt(3, "\x13\x04\" 영원히 윤회에 속박되고       \n\x13\x04             영원히 시간 속에서 헤맨다 \"       \n\n")
        # (Line 181) break;
        EUDBreak()
        # (Line 182) case 16045:
    _t22 = EUDSwitchCase()
    # (Line 183) v.stb.printAt(3,"\x13\x04\" 영원히 윤회에 속박되고       \n\x13\x04             영원히 시간 속에서 헤맨다 \"       \n\x13\x1B             \" 신이라는 존재는 그저... \"\n");
    if _t22(16045):
        v.stb.printAt(3, "\x13\x04\" 영원히 윤회에 속박되고       \n\x13\x04             영원히 시간 속에서 헤맨다 \"       \n\x13\x1B             \" 신이라는 존재는 그저... \"\n")
        # (Line 185) break;
        EUDBreak()
        # (Line 186) case 16046:
    _t23 = EUDSwitchCase()
    # (Line 187) v.stb.printAt(3,"\x13\x04\" 영원히 윤회에 속박되고       \n\x13\x04             영원히 시간 속에서 헤맨다 \"       \n\x13\x08             \" 신이라는 존재는 그저... \"\n");
    if _t23(16046):
        v.stb.printAt(3, "\x13\x04\" 영원히 윤회에 속박되고       \n\x13\x04             영원히 시간 속에서 헤맨다 \"       \n\x13\x08             \" 신이라는 존재는 그저... \"\n")
        # (Line 189) break;
        EUDBreak()
        # (Line 190) case 16051:
    _t24 = EUDSwitchCase()
    # (Line 191) v.stb.printAt(3,"\x13\x02\" 홀로 \"   \" 모래성을 쌓는 자일 뿐 \"\n\n");
    if _t24(16051):
        v.stb.printAt(3, "\x13\x02\" 홀로 \"   \" 모래성을 쌓는 자일 뿐 \"\n\n")
        # (Line 193) break;
        EUDBreak()
        # (Line 194) case 16052:
    _t25 = EUDSwitchCase()
    # (Line 195) v.stb.printAt(3,"\x13\x04\" 홀로 \"   \" 모래성을 쌓는 자일 뿐 \"\n\n");
    if _t25(16052):
        v.stb.printAt(3, "\x13\x04\" 홀로 \"   \" 모래성을 쌓는 자일 뿐 \"\n\n")
        # (Line 197) break;
        EUDBreak()
        # (Line 198) }
    # (Line 199) }
    EUDEndSwitch()
