## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import variable as v;
import variable as v
# (Line 2) import func.trig as trg;
from func import trig as trg
# (Line 3) import func.sound as s;
from func import sound as s
# (Line 5) const P_player		= PVariable();
P_player = _CGFW(lambda: [PVariable()], 1)[0]
# (Line 6) const P_observer 	= PVariable();
P_observer = _CGFW(lambda: [PVariable()], 1)[0]
# (Line 8) function Text(num);
# (Line 10) function player(playerID)
# (Line 11) {
@EUDFunc
def f_player(playerID):
    # (Line 12) Text(P_player[playerID]);
    Text(P_player[playerID])
    # (Line 13) P_player[playerID] = 0;
    _ARRW(P_player, playerID) << (0)
    # (Line 14) }
    # (Line 16) function observer(playerID)

# (Line 17) {
@EUDFunc
def f_observer(playerID):
    # (Line 18) Text(P_observer[playerID - 128]);
    Text(P_observer[playerID - 128])
    # (Line 19) P_observer[playerID - 128] = 0;
    _ARRW(P_observer, playerID - 128) << (0)
    # (Line 20) }
    # (Line 22) function main(playerID)

# (Line 23) {
@EUDFunc
def f_main(playerID):
    # (Line 24) if (playerID < 6) 	{ player(playerID); 	}
    if EUDIf()(playerID >= 6, neg=True):
        f_player(playerID)
        # (Line 25) else  			{ observer(playerID); }
    if EUDElse()():
        f_observer(playerID)
        # (Line 26) }
    EUDEndIf()
    # (Line 28) function Text(num)

# (Line 29) {
@EUDFunc
def Text(num):
    # (Line 30) switch(num)
    EUDSwitch(num)
    # (Line 31) {
    # (Line 32) case 1:
    _t1 = EUDSwitchCase()
    # (Line 33) PlayWAV("staredit\\wav\\Hime_Unique01.ogg");
    if _t1(1):
        # (Line 34) v.stb.printAt(3, "\x13\x04Tenkawa \x07MaiHime\n");
        DoActions(PlayWAV("staredit\\wav\\Hime_Unique01.ogg"))
        v.stb.printAt(3, "\x13\x04Tenkawa \x07MaiHime\n")
        # (Line 35) v.stb.printAt(5, "\x13\x04제군 ! \x07광연\x04의 시간이다!");
        v.stb.printAt(5, "\x13\x04제군 ! \x07광연\x04의 시간이다!")
        # (Line 36) break;
        EUDBreak()
        # (Line 37) case 2:
    _t2 = EUDSwitchCase()
    # (Line 38) PlayWAV("Kurumi_01.ogg");
    if _t2(2):
        # (Line 39) v.stb.print("\x13\x08Tokisaki \x05Krumi");
        DoActions(PlayWAV("Kurumi_01.ogg"))
        v.stb.print("\x13\x08Tokisaki \x05Krumi")
        # (Line 40) v.stb.print("\x13\x04귀여우시군요, 당신");
        v.stb.print("\x13\x04귀여우시군요, 당신")
        # (Line 41) break;
        EUDBreak()
        # (Line 42) case 3:
    _t3 = EUDSwitchCase()
    # (Line 43) PlayWAV("Kurumi_02.ogg");
    if _t3(3):
        # (Line 44) v.stb.print("\x13\x08Tokisaki \x05Krumi");
        DoActions(PlayWAV("Kurumi_02.ogg"))
        v.stb.print("\x13\x08Tokisaki \x05Krumi")
        # (Line 45) v.stb.print("\x13\x04저는 한번 나눈 약속을 소홀히 할정도로 영혼이 썩진 않았답니다");
        v.stb.print("\x13\x04저는 한번 나눈 약속을 소홀히 할정도로 영혼이 썩진 않았답니다")
        # (Line 46) break;
        EUDBreak()
        # (Line 47) case 6:
    _t4 = EUDSwitchCase()
    # (Line 48) PlayWAV("Kurumi_03.ogg");
    if _t4(6):
        # (Line 49) v.stb.print("\x13\x08Tokisaki \x05Krumi");
        DoActions(PlayWAV("Kurumi_03.ogg"))
        v.stb.print("\x13\x08Tokisaki \x05Krumi")
        # (Line 50) v.stb.print("\x13\x07어머,어머\x04 난폭하시군요\n\x13\x04뭐 , 유치한 소원이랑 제법 잘 어울리는 방식인걸요");
        v.stb.print("\x13\x07어머,어머\x04 난폭하시군요\n\x13\x04뭐 , 유치한 소원이랑 제법 잘 어울리는 방식인걸요")
        # (Line 51) break;
        EUDBreak()
        # (Line 52) case 7:
    _t5 = EUDSwitchCase()
    # (Line 53) PlayWAV("Kurumi_04.ogg");
    if _t5(7):
        # (Line 54) v.stb.print("\x13\x08Tokisaki \x05Krumi");
        DoActions(PlayWAV("Kurumi_04.ogg"))
        v.stb.print("\x13\x08Tokisaki \x05Krumi")
        # (Line 55) v.stb.print("\x13\x04나는 다시 한번 그를 만나러 가겠어!");
        v.stb.print("\x13\x04나는 다시 한번 그를 만나러 가겠어!")
        # (Line 56) break;
        EUDBreak()
        # (Line 57) case 8:
    _t6 = EUDSwitchCase()
    # (Line 58) PlayWAV("Kurumi_05.ogg");
    if _t6(8):
        # (Line 59) break;
        DoActions(PlayWAV("Kurumi_05.ogg"))
        EUDBreak()
        # (Line 60) case 15:
    _t7 = EUDSwitchCase()
    # (Line 61) v.stb.print("\x13\x08Tokisaki \x05Krumi");
    if _t7(15):
        v.stb.print("\x13\x08Tokisaki \x05Krumi")
        # (Line 62) v.stb.print("\x13알레프");
        v.stb.print("\x13알레프")
        # (Line 63) break;
        EUDBreak()
        # (Line 64) case 9:
    _t8 = EUDSwitchCase()
    # (Line 65) PlayWAV("Kurumi_06.ogg");
    if _t8(9):
        # (Line 66) v.stb.printAt(3, "\x13\x08Tokisaki \x05Krumi");
        DoActions(PlayWAV("Kurumi_06.ogg"))
        v.stb.printAt(3, "\x13\x08Tokisaki \x05Krumi")
        # (Line 67) v.stb.printAt(5, "\x13\x04제가 어째서 여기에 있는가");
        v.stb.printAt(5, "\x13\x04제가 어째서 여기에 있는가")
        # (Line 68) break;
        EUDBreak()
        # (Line 69) case 10:
    _t9 = EUDSwitchCase()
    # (Line 70) v.stb.printAt(3, "\x13\x08Tokisaki \x05Krumi");
    if _t9(10):
        v.stb.printAt(3, "\x13\x08Tokisaki \x05Krumi")
        # (Line 71) v.stb.printAt(5, "\x13\x04어떻게 살아있는가");
        v.stb.printAt(5, "\x13\x04어떻게 살아있는가")
        # (Line 72) break;
        EUDBreak()
        # (Line 73) case 11:
    _t10 = EUDSwitchCase()
    # (Line 74) v.stb.printAt(3, "\x13\x08Tokisaki \x05Krumi");
    if _t10(11):
        v.stb.printAt(3, "\x13\x08Tokisaki \x05Krumi")
        # (Line 75) v.stb.printAt(5, "\x13\x19당신\x04께서는 누구시며");
        v.stb.printAt(5, "\x13\x19당신\x04께서는 누구시며")
        # (Line 76) break;
        EUDBreak()
        # (Line 77) case 12:
    _t11 = EUDSwitchCase()
    # (Line 78) v.stb.printAt(3, "\x13\x08Tokisaki \x05Krumi");
    if _t11(12):
        v.stb.printAt(3, "\x13\x08Tokisaki \x05Krumi")
        # (Line 79) v.stb.printAt(5, "\x13\x04고양이 씨는 어째서 저래 귀여운지");
        v.stb.printAt(5, "\x13\x04고양이 씨는 어째서 저래 귀여운지")
        # (Line 80) break;
        EUDBreak()
        # (Line 81) case 13:
    _t12 = EUDSwitchCase()
    # (Line 82) v.stb.printAt(3, "\x13\x08Tokisaki \x05Krumi");
    if _t12(13):
        v.stb.printAt(3, "\x13\x08Tokisaki \x05Krumi")
        # (Line 83) v.stb.printAt(5, "\x13\x04무엇하나 알지 못하겟지만");
        v.stb.printAt(5, "\x13\x04무엇하나 알지 못하겟지만")
        # (Line 84) break;
        EUDBreak()
        # (Line 85) case 14:
    _t13 = EUDSwitchCase()
    # (Line 86) v.stb.printAt(3, "\x13\x08Tokisaki \x05Krumi");
    if _t13(14):
        v.stb.printAt(3, "\x13\x08Tokisaki \x05Krumi")
        # (Line 87) v.stb.printAt(5, "\x13\x04제 앞을 가로막으시겠다면 쓰러뜨려드리겠어요");
        v.stb.printAt(5, "\x13\x04제 앞을 가로막으시겠다면 쓰러뜨려드리겠어요")
        # (Line 88) break;
        EUDBreak()
        # (Line 89) case 16:
    _t14 = EUDSwitchCase()
    # (Line 90) PlayWAV("Kurumi_Unique.ogg");
    if _t14(16):
        # (Line 91) break;
        DoActions(PlayWAV("Kurumi_Unique.ogg"))
        EUDBreak()
        # (Line 92) case 17:
    _t15 = EUDSwitchCase()
    # (Line 93) v.stb.printAt(3, "\x13\x08Tokisaki \x05Krumi");
    if _t15(17):
        v.stb.printAt(3, "\x13\x08Tokisaki \x05Krumi")
        # (Line 94) v.stb.printAt(5, "\x13\x04자인");
        v.stb.printAt(5, "\x13\x04자인")
        # (Line 95) break;
        EUDBreak()
        # (Line 96) }
    # (Line 97) }
    EUDEndSwitch()
