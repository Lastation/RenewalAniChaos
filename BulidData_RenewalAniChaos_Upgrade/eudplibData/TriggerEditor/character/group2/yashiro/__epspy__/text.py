## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _RELIMP(path, mod_name):
    import inspect, pathlib, importlib.util
    p = pathlib.Path(inspect.getabsfile(inspect.currentframe())).parent
    for s in path.split("."):
        if s == "":  p = p.parent
        else:  p = p / s
    try:
        spec = importlib.util.spec_from_file_location(mod_name, p / (mod_name + ".py"))
        module = importlib.util.module_from_spec(spec)
        spec.loader.exec_module(module)
    except FileNotFoundError:
        loader = EPSLoader(mod_name, str(p / (mod_name + ".eps")))
        spec = importlib.util.spec_from_loader(mod_name, loader)
        module = loader.create_module(spec)
        loader.exec_module(module)
    return module

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import PluginVariables as msqcvar;
import PluginVariables as msqcvar
# (Line 2) import variable as v;
import variable as v
# (Line 3) import func.trig as trg;
from func import trig as trg
# (Line 4) import func.sound as s;
from func import sound as s
# (Line 6) const P_player			= PVariable();
P_player = _CGFW(lambda: [PVariable()], 1)[0]
# (Line 7) const P_observer 		= PVariable();
P_observer = _CGFW(lambda: [PVariable()], 1)[0]
# (Line 9) const P_Next = PVariable();
P_Next = _CGFW(lambda: [PVariable()], 1)[0]
# (Line 10) const P_Wait = PVariable();
P_Wait = _CGFW(lambda: [PVariable()], 1)[0]
# (Line 12) const P_TextTime = PVariable();
P_TextTime = _CGFW(lambda: [PVariable()], 1)[0]
# (Line 14) function Text(num, playerID);
# (Line 16) function player(playerID)
# (Line 17) {
@EUDFunc
def f_player(playerID):
    # (Line 18) Text(P_player[playerID], playerID);
    Text(P_player[playerID], playerID)
    # (Line 19) P_player[playerID] = 0;
    _ARRW(P_player, playerID) << (0)
    # (Line 20) }
    # (Line 22) function observer(playerID)

# (Line 23) {
@EUDFunc
def f_observer(playerID):
    # (Line 24) Text(P_observer[playerID - 128], playerID);
    Text(P_observer[playerID - 128], playerID)
    # (Line 25) P_observer[playerID - 128] = 0;
    _ARRW(P_observer, playerID - 128) << (0)
    # (Line 26) }
    # (Line 28) function main(playerID)

# (Line 29) {
@EUDFunc
def f_main(playerID):
    # (Line 30) if (playerID < 6) 	{ player(playerID); 	}
    if EUDIf()(playerID >= 6, neg=True):
        f_player(playerID)
        # (Line 31) else  			{ observer(playerID); }
    if EUDElse()():
        f_observer(playerID)
        # (Line 33) if (playerID < 6)
    EUDEndIf()
    if EUDIf()(playerID >= 6, neg=True):
        # (Line 34) {
        # (Line 35) if (P_TextTime[playerID] > 0)
        if EUDIf()(P_TextTime[playerID] <= 0, neg=True):
            # (Line 36) { P_TextTime[playerID] -= 1; }
            _ARRW(P_TextTime, playerID).__isub__(1)
            # (Line 37) if (P_Wait[playerID] > 0)
        EUDEndIf()
        if EUDIf()(P_Wait[playerID] <= 0, neg=True):
            # (Line 38) { P_Wait[playerID] -= 1; }
            _ARRW(P_Wait, playerID).__isub__(1)
            # (Line 39) else if (P_Next[playerID] != 0)
        if EUDElseIf()(P_Next[playerID] == 0, neg=True):
            # (Line 40) {
            # (Line 41) P_player[playerID] 	= P_Next[playerID] + 1;
            _ARRW(P_player, playerID) << (P_Next[playerID] + 1)
            # (Line 42) P_observer[playerID] = P_Next[playerID] + 1;
            _ARRW(P_observer, playerID) << (P_Next[playerID] + 1)
            # (Line 43) P_Next[playerID] = 0;
            _ARRW(P_Next, playerID) << (0)
            # (Line 44) }
            # (Line 45) }
        EUDEndIf()
        # (Line 46) }
    EUDEndIf()
    # (Line 48) function TextDelay(playerID, wait)

# (Line 49) {
@EUDFunc
def TextDelay(playerID, wait):
    # (Line 50) if (playerID < 6)
    if EUDIf()(playerID >= 6, neg=True):
        # (Line 51) {
        # (Line 52) P_Next[playerID] = P_player[playerID];
        _ARRW(P_Next, playerID) << (P_player[playerID])
        # (Line 53) if (wait == 0)
        if EUDIf()(wait == 0):
            # (Line 54) { P_Next[playerID] = 0; }
            _ARRW(P_Next, playerID) << (0)
            # (Line 55) else
            # (Line 56) { P_Wait[playerID] = wait / 83 + 1; }
        if EUDElse()():
            _ARRW(P_Wait, playerID) << (wait // 83 + 1)
            # (Line 57) }
        EUDEndIf()
        # (Line 58) }
    EUDEndIf()
    # (Line 60) function Text(num, playerID)

# (Line 61) {
@EUDFunc
def Text(num, playerID):
    # (Line 62) switch(num)
    EUDSwitch(num)
    # (Line 63) {
    # (Line 64) case 1:
    _t1 = EUDSwitchCase()
    # (Line 65) PlayWAV("yashiro_o_active.ogg");
    if _t1(1):
        # (Line 66) v.stb.print("\x13\x1EYashiro Gaku\n");
        DoActions(PlayWAV("yashiro_o_active.ogg"))
        v.stb.print("\x13\x1EYashiro Gaku\n")
        # (Line 67) v.stb.print("\x13\x04그런 게 있을 리가 없잖냐\n");
        v.stb.print("\x13\x04그런 게 있을 리가 없잖냐\n")
        # (Line 68) TextDelay(playerID, 0);
        TextDelay(playerID, 0)
        # (Line 69) P_TextTime[playerID] += 2500;
        _ARRW(P_TextTime, playerID).__iadd__(2500)
        # (Line 70) break;
        EUDBreak()
        # (Line 71) case 2:
    _t2 = EUDSwitchCase()
    # (Line 72) PlayWAV("yashiro_sss.ogg");
    if _t2(2):
        # (Line 73) v.stb.print("\x13\x1EYashiro Gaku\n");
        DoActions(PlayWAV("yashiro_sss.ogg"))
        v.stb.print("\x13\x1EYashiro Gaku\n")
        # (Line 74) v.stb.print("\x13\x04그것은 헛된 소망이라는 것이다\n");
        v.stb.print("\x13\x04그것은 헛된 소망이라는 것이다\n")
        # (Line 75) TextDelay(playerID, 0);
        TextDelay(playerID, 0)
        # (Line 76) P_TextTime[playerID] += 2200;
        _ARRW(P_TextTime, playerID).__iadd__(2200)
        # (Line 77) break;
        EUDBreak()
        # (Line 78) case 3:
    _t3 = EUDSwitchCase()
    # (Line 79) PlayWAV("yashiro_aac.ogg");
    if _t3(3):
        # (Line 80) v.stb.print("\x13\x1EYashiro Gaku\n");
        DoActions(PlayWAV("yashiro_aac.ogg"))
        v.stb.print("\x13\x1EYashiro Gaku\n")
        # (Line 81) v.stb.print("\x13\x04게임 오버다, 너도 나도\n");
        v.stb.print("\x13\x04게임 오버다, 너도 나도\n")
        # (Line 82) TextDelay(playerID, 0);
        TextDelay(playerID, 0)
        # (Line 83) P_TextTime[playerID] += 2600;
        _ARRW(P_TextTime, playerID).__iadd__(2600)
        # (Line 84) break;
        EUDBreak()
        # (Line 85) case 4:
    _t4 = EUDSwitchCase()
    # (Line 86) PlayWAV("yashiro_04.ogg");
    if _t4(4):
        # (Line 87) v.stb.print("\x13\x1EYashiro Gaku\n");
        DoActions(PlayWAV("yashiro_04.ogg"))
        v.stb.print("\x13\x1EYashiro Gaku\n")
        # (Line 88) v.stb.print("\x13\x04네가 손에 넣는 것은 이 마을의 평화다\n\x13\x04네가 원한 것은 바로 그거잖아?\n");
        v.stb.print("\x13\x04네가 손에 넣는 것은 이 마을의 평화다\n\x13\x04네가 원한 것은 바로 그거잖아?\n")
        # (Line 89) TextDelay(playerID, 0);
        TextDelay(playerID, 0)
        # (Line 90) P_TextTime[playerID] += 5500;
        _ARRW(P_TextTime, playerID).__iadd__(5500)
        # (Line 91) break;
        EUDBreak()
        # (Line 92) case 5:
    _t5 = EUDSwitchCase()
    # (Line 93) PlayWAV("yashiro_05.ogg");
    if _t5(5):
        # (Line 94) v.stb.print("\x13\x1EYashiro Gaku\n");
        DoActions(PlayWAV("yashiro_05.ogg"))
        v.stb.print("\x13\x1EYashiro Gaku\n")
        # (Line 95) v.stb.print("\x13\x04내가 손에 넣는 것은\n\x13\x04내 손에 의한, 나만을 위해 존재하는 죽음이다\n");
        v.stb.print("\x13\x04내가 손에 넣는 것은\n\x13\x04내 손에 의한, 나만을 위해 존재하는 죽음이다\n")
        # (Line 96) TextDelay(playerID, 0);
        TextDelay(playerID, 0)
        # (Line 97) P_TextTime[playerID] += 5000;
        _ARRW(P_TextTime, playerID).__iadd__(5000)
        # (Line 98) break;
        EUDBreak()
        # (Line 99) case 6:
    _t6 = EUDSwitchCase()
    # (Line 100) PlayWAV("yashiro_ult.ogg");
    if _t6(6):
        # (Line 101) v.stb.print("\x13\x1EYashiro Gaku\n");
        DoActions(PlayWAV("yashiro_ult.ogg"))
        v.stb.print("\x13\x1EYashiro Gaku\n")
        # (Line 102) v.stb.print("\x13\x04안 됐구나, 이제 시간이 없어\n");
        v.stb.print("\x13\x04안 됐구나, 이제 시간이 없어\n")
        # (Line 103) TextDelay(playerID, 3200);
        TextDelay(playerID, 3200)
        # (Line 104) P_TextTime[playerID] += 6500;
        _ARRW(P_TextTime, playerID).__iadd__(6500)
        # (Line 105) break;
        EUDBreak()
        # (Line 106) case 7:
    _t7 = EUDSwitchCase()
    # (Line 107) v.stb.print("\x13\x1EYashiro Gaku\n");
    if _t7(7):
        v.stb.print("\x13\x1EYashiro Gaku\n")
        # (Line 108) v.stb.print("\x13\x04이건 내게 있어서도 이판사판의 도박이었다\n");
        v.stb.print("\x13\x04이건 내게 있어서도 이판사판의 도박이었다\n")
        # (Line 109) TextDelay(playerID, 0);
        TextDelay(playerID, 0)
        # (Line 110) break;
        EUDBreak()
        # (Line 111) case 1001:
    _t8 = EUDSwitchCase()
    # (Line 112) PlayWAV("yashiro_u1.ogg");
    if _t8(1001):
        # (Line 113) v.stb.print("\x13\x1EYashiro Gaku\n");
        DoActions(PlayWAV("yashiro_u1.ogg"))
        v.stb.print("\x13\x1EYashiro Gaku\n")
        # (Line 114) v.stb.print("\x13\x04이런 이야기를 믿어 줄 것 같진 않지만, 굳이 말하마.\n\x13\x04아니, 너라면 알아줄 지도 몰라.\n");
        v.stb.print("\x13\x04이런 이야기를 믿어 줄 것 같진 않지만, 굳이 말하마.\n\x13\x04아니, 너라면 알아줄 지도 몰라.\n")
        # (Line 115) TextDelay(playerID, 0);
        TextDelay(playerID, 0)
        # (Line 116) P_TextTime[playerID] += 7700;
        _ARRW(P_TextTime, playerID).__iadd__(7700)
        # (Line 117) break;
        EUDBreak()
        # (Line 118) case 1002:
    _t9 = EUDSwitchCase()
    # (Line 119) PlayWAV("yashiro_u2.ogg");
    if _t9(1002):
        # (Line 120) v.stb.print("\x13\x1EYashiro Gaku\n");
        DoActions(PlayWAV("yashiro_u2.ogg"))
        v.stb.print("\x13\x1EYashiro Gaku\n")
        # (Line 121) v.stb.print("\x13\x03스파이스\x04랑 만난 이후로,\n\x13\x04나에게는 \x17거미줄\x04이 보이게 됐다.\n");
        v.stb.print("\x13\x03스파이스\x04랑 만난 이후로,\n\x13\x04나에게는 \x17거미줄\x04이 보이게 됐다.\n")
        # (Line 122) TextDelay(playerID, 0);
        TextDelay(playerID, 0)
        # (Line 123) P_TextTime[playerID] += 6500;
        _ARRW(P_TextTime, playerID).__iadd__(6500)
        # (Line 124) break;
        EUDBreak()
        # (Line 125) case 1003:
    _t10 = EUDSwitchCase()
    # (Line 126) PlayWAV("yashiro_u3.ogg");
    if _t10(1003):
        # (Line 127) v.stb.print("\x13\x1EYashiro Gaku\n");
        DoActions(PlayWAV("yashiro_u3.ogg"))
        v.stb.print("\x13\x1EYashiro Gaku\n")
        # (Line 128) v.stb.print("\x13\x04그게 보인 인간을 죽여 왔다.\n");
        v.stb.print("\x13\x04그게 보인 인간을 죽여 왔다.\n")
        # (Line 129) TextDelay(playerID, 0);
        TextDelay(playerID, 0)
        # (Line 130) P_TextTime[playerID] += 3000;
        _ARRW(P_TextTime, playerID).__iadd__(3000)
        # (Line 131) break;
        EUDBreak()
        # (Line 132) case 1004:
    _t11 = EUDSwitchCase()
    # (Line 133) PlayWAV("yashiro_u4.ogg");
    if _t11(1004):
        # (Line 134) v.stb.print("\x13\x1EYashiro Gaku\n");
        DoActions(PlayWAV("yashiro_u4.ogg"))
        v.stb.print("\x13\x1EYashiro Gaku\n")
        # (Line 135) v.stb.print("\x13\x04그러나 어느 날\n\x13\x04한 명의 소년이 내 계획을 저지했다.\n");
        v.stb.print("\x13\x04그러나 어느 날\n\x13\x04한 명의 소년이 내 계획을 저지했다.\n")
        # (Line 136) TextDelay(playerID, 0);
        TextDelay(playerID, 0)
        # (Line 137) P_TextTime[playerID] += 5400;
        _ARRW(P_TextTime, playerID).__iadd__(5400)
        # (Line 138) break;
        EUDBreak()
        # (Line 139) case 1005:
    _t12 = EUDSwitchCase()
    # (Line 140) PlayWAV("yashiro_u5.ogg");
    if _t12(1005):
        # (Line 141) v.stb.print("\x13\x1EYashiro Gaku\n");
        DoActions(PlayWAV("yashiro_u5.ogg"))
        v.stb.print("\x13\x1EYashiro Gaku\n")
        # (Line 142) v.stb.print("\x13\x04그리고 그 소년의 머리 위에도\n\x13\x17거미줄\x04이 나타났다.\n");
        v.stb.print("\x13\x04그리고 그 소년의 머리 위에도\n\x13\x17거미줄\x04이 나타났다.\n")
        # (Line 143) TextDelay(playerID, 0);
        TextDelay(playerID, 0)
        # (Line 144) P_TextTime[playerID] += 4700;
        _ARRW(P_TextTime, playerID).__iadd__(4700)
        # (Line 145) break;
        EUDBreak()
        # (Line 146) case 1006:
    _t13 = EUDSwitchCase()
    # (Line 147) PlayWAV("yashiro_u6.ogg");
    if _t13(1006):
        # (Line 148) v.stb.print("\x13\x1EYashiro Gaku\n");
        DoActions(PlayWAV("yashiro_u6.ogg"))
        v.stb.print("\x13\x1EYashiro Gaku\n")
        # (Line 149) v.stb.print("\x13\x04그러나 그는 죽지 않았다.\n");
        v.stb.print("\x13\x04그러나 그는 죽지 않았다.\n")
        # (Line 150) TextDelay(playerID, 0);
        TextDelay(playerID, 0)
        # (Line 151) P_TextTime[playerID] += 4500;
        _ARRW(P_TextTime, playerID).__iadd__(4500)
        # (Line 152) break;
        EUDBreak()
        # (Line 153) case 1007:
    _t14 = EUDSwitchCase()
    # (Line 154) PlayWAV("yashiro_u7.ogg");
    if _t14(1007):
        # (Line 155) v.stb.print("\x13\x1EYashiro Gaku\n");
        DoActions(PlayWAV("yashiro_u7.ogg"))
        v.stb.print("\x13\x1EYashiro Gaku\n")
        # (Line 156) v.stb.print("\x13\x04나는 그 녀석을 \x03스파이스\x04라고 이름짓고\n\x13\x04관찰하기로 했다.\n");
        v.stb.print("\x13\x04나는 그 녀석을 \x03스파이스\x04라고 이름짓고\n\x13\x04관찰하기로 했다.\n")
        # (Line 157) TextDelay(playerID, 0);
        TextDelay(playerID, 0)
        # (Line 158) P_TextTime[playerID] += 4500;
        _ARRW(P_TextTime, playerID).__iadd__(4500)
        # (Line 159) break;
        EUDBreak()
        # (Line 160) case 1000:
    _t15 = EUDSwitchCase()
    # (Line 161) PlayWAV("yashiro_u8.ogg");
    if _t15(1000):
        # (Line 162) v.stb.print("\x13\x1EYashiro Gaku\n");
        DoActions(PlayWAV("yashiro_u8.ogg"))
        v.stb.print("\x13\x1EYashiro Gaku\n")
        # (Line 163) v.stb.print("\x13\x08그게 너야...\n");
        v.stb.print("\x13\x08그게 너야...\n")
        # (Line 164) TextDelay(playerID, 0);
        TextDelay(playerID, 0)
        # (Line 165) P_TextTime[playerID] += 1700;
        _ARRW(P_TextTime, playerID).__iadd__(1700)
        # (Line 166) break;
        EUDBreak()
        # (Line 167) }
    # (Line 168) }
    EUDEndSwitch()
