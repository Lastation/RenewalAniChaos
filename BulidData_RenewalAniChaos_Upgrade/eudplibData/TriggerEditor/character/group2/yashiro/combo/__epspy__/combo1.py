## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _RELIMP(path, mod_name):
    import inspect, pathlib, importlib.util
    p = pathlib.Path(inspect.getabsfile(inspect.currentframe())).parent
    for s in path.split("."):
        if s == "":  p = p.parent
        else:  p = p / s
    try:
        spec = importlib.util.spec_from_file_location(mod_name, p / (mod_name + ".py"))
        module = importlib.util.module_from_spec(spec)
        spec.loader.exec_module(module)
    except FileNotFoundError:
        loader = EPSLoader(mod_name, str(p / (mod_name + ".eps")))
        spec = importlib.util.spec_from_loader(mod_name, loader)
        module = loader.create_module(spec)
        loader.exec_module(module)
    return module

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import PluginVariables as msqcvar;
import PluginVariables as msqcvar
# (Line 2) import variable as v;
import variable as v
# (Line 3) import func.trig as trg;
from func import trig as trg
# (Line 5) function main(playerID)
# (Line 6) {
@EUDFunc
def f_main(playerID):
    # (Line 7) if (v.P_WaitMain[playerID] == 0)
    if EUDIf()(v.P_WaitMain[playerID] == 0):
        # (Line 8) {
        # (Line 9) if (v.P_CountMain[playerID] == 0)
        if EUDIf()(v.P_CountMain[playerID] == 0):
            # (Line 10) {
            # (Line 11) if (v.P_LoopMain[playerID] < 4)
            if EUDIf()(v.P_LoopMain[playerID] >= 4, neg=True):
                # (Line 12) {
                # (Line 13) var d = 30 + 30 * v.P_LoopMain[playerID];
                d = EUDVariable()
                d << (30 + 30 * v.P_LoopMain[playerID])
                # (Line 14) var n = 4;
                n = EUDVariable()
                n << (4)
                # (Line 15) var r = 100;
                r = EUDVariable()
                r << (100)
                # (Line 16) trg.Shape_Circle(playerID, 1, "Protoss Dark Templar", d, n, r);
                trg.Shape_Circle(playerID, 1, "Protoss Dark Templar", d, n, r)
                # (Line 17) trg.Shape_Circle(playerID, 1, "Kakaru (Twilight)", d, n, r);
                trg.Shape_Circle(playerID, 1, "Kakaru (Twilight)", d, n, r)
                # (Line 19) KillUnitAt(All, "Protoss Dark Templar", "Anywhere", playerID);
                # (Line 20) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "Protoss Dark Templar", "Anywhere", playerID))
                # (Line 21) }
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID))
                # (Line 23) trg.Main_Wait(80);
            EUDEndIf()
            trg.Main_Wait(80)
            # (Line 25) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 27) if (v.P_LoopMain[playerID] == 10)
            if EUDIf()(v.P_LoopMain[playerID] == 10):
                # (Line 28) {
                # (Line 29) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 30) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 31) }
                # (Line 32) }
            EUDEndIf()
            # (Line 33) else if (v.P_CountMain[playerID] == 1)
        if EUDElseIf()(v.P_CountMain[playerID] == 1):
            # (Line 34) {
            # (Line 35) RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
            # (Line 37) if (v.P_LoopMain[playerID] == 0)
            DoActions(RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 38) {
                # (Line 39) var d = 45;
                d = EUDVariable()
                d << (45)
                # (Line 40) var n = 3;
                n = EUDVariable()
                n << (3)
                # (Line 41) var interval = 75;
                interval = EUDVariable()
                interval << (75)
                # (Line 42) var distance = 0;
                distance = EUDVariable()
                distance << (0)
                # (Line 43) trg.Shape_Line(playerID, 1, "Protoss Dark Templar", d, n, interval, distance);
                trg.Shape_Line(playerID, 1, "Protoss Dark Templar", d, n, interval, distance)
                # (Line 44) trg.Shape_Line(playerID, 1, "40 + 1n Wraith", d, n, interval, distance);
                trg.Shape_Line(playerID, 1, "40 + 1n Wraith", d, n, interval, distance)
                # (Line 46) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 47) Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 49) KillUnitAt(All, "Protoss Dark Templar", "Anywhere", playerID);
                DoActions(Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 50) }
                DoActions(KillUnitAt(All, "Protoss Dark Templar", "Anywhere", playerID))
                # (Line 51) else if (v.P_LoopMain[playerID] == 1)
            if EUDElseIf()(v.P_LoopMain[playerID] == 1):
                # (Line 52) {
                # (Line 53) var d = 135;
                d = EUDVariable()
                d << (135)
                # (Line 54) var n = 3;
                n = EUDVariable()
                n << (3)
                # (Line 55) var interval = 75;
                interval = EUDVariable()
                interval << (75)
                # (Line 56) var distance = 0;
                distance = EUDVariable()
                distance << (0)
                # (Line 57) trg.Shape_Line(playerID, 1, "Protoss Dark Templar", d, n, interval, distance);
                trg.Shape_Line(playerID, 1, "Protoss Dark Templar", d, n, interval, distance)
                # (Line 58) trg.Shape_Line(playerID, 1, "40 + 1n Wraith", d, n, interval, distance);
                trg.Shape_Line(playerID, 1, "40 + 1n Wraith", d, n, interval, distance)
                # (Line 60) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 61) Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 63) KillUnitAt(All, "Protoss Dark Templar", "Anywhere", playerID);
                DoActions(Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 64) }
                DoActions(KillUnitAt(All, "Protoss Dark Templar", "Anywhere", playerID))
                # (Line 65) else if (v.P_LoopMain[playerID] == 2)
            if EUDElseIf()(v.P_LoopMain[playerID] == 2):
                # (Line 66) {
                # (Line 67) var d = 90;
                d = EUDVariable()
                d << (90)
                # (Line 68) var n = 3;
                n = EUDVariable()
                n << (3)
                # (Line 69) var interval = 75;
                interval = EUDVariable()
                interval << (75)
                # (Line 70) var distance = 0;
                distance = EUDVariable()
                distance << (0)
                # (Line 71) trg.Shape_Line(playerID, 1, "Protoss Dark Templar", d, n, interval, distance);
                trg.Shape_Line(playerID, 1, "Protoss Dark Templar", d, n, interval, distance)
                # (Line 72) trg.Shape_Line(playerID, 1, "40 + 1n Wraith", d, n, interval, distance);
                trg.Shape_Line(playerID, 1, "40 + 1n Wraith", d, n, interval, distance)
                # (Line 74) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 75) Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 77) KillUnitAt(All, "Protoss Dark Templar", "Anywhere", playerID);
                DoActions(Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 78) }
                DoActions(KillUnitAt(All, "Protoss Dark Templar", "Anywhere", playerID))
                # (Line 79) else if (v.P_LoopMain[playerID] == 3)
            if EUDElseIf()(v.P_LoopMain[playerID] == 3):
                # (Line 80) {
                # (Line 81) var d = 90;
                d = EUDVariable()
                d << (90)
                # (Line 82) var n = 3;
                n = EUDVariable()
                n << (3)
                # (Line 83) var interval = 75;
                interval = EUDVariable()
                interval << (75)
                # (Line 84) var distance = 75;
                distance = EUDVariable()
                distance << (75)
                # (Line 85) trg.Shape_Line(playerID, 1, "Protoss Dark Templar", d, n, interval, distance);
                trg.Shape_Line(playerID, 1, "Protoss Dark Templar", d, n, interval, distance)
                # (Line 86) trg.Shape_Line(playerID, 1, "40 + 1n Wraith", d, n, interval, distance);
                trg.Shape_Line(playerID, 1, "40 + 1n Wraith", d, n, interval, distance)
                # (Line 88) d = 270;
                d << (270)
                # (Line 89) trg.Shape_Line(playerID, 1, "Protoss Dark Templar", d, n, interval, distance);
                trg.Shape_Line(playerID, 1, "Protoss Dark Templar", d, n, interval, distance)
                # (Line 90) trg.Shape_Line(playerID, 1, "40 + 1n Wraith", d, n, interval, distance);
                trg.Shape_Line(playerID, 1, "40 + 1n Wraith", d, n, interval, distance)
                # (Line 92) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 93) Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 95) KillUnitAt(All, "Protoss Dark Templar", "Anywhere", playerID);
                DoActions(Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 96) }
                DoActions(KillUnitAt(All, "Protoss Dark Templar", "Anywhere", playerID))
                # (Line 98) trg.Main_Wait(160);
            EUDEndIf()
            trg.Main_Wait(160)
            # (Line 100) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 102) if (v.P_LoopMain[playerID] == 4)
            if EUDIf()(v.P_LoopMain[playerID] == 4):
                # (Line 103) {
                # (Line 104) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 105) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 106) }
                # (Line 107) }
            EUDEndIf()
            # (Line 108) else if (v.P_CountMain[playerID] == 2)
        if EUDElseIf()(v.P_CountMain[playerID] == 2):
            # (Line 109) {
            # (Line 110) RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
            # (Line 112) if (v.P_LoopMain[playerID] < 4)
            DoActions(RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
            if EUDIf()(v.P_LoopMain[playerID] >= 4, neg=True):
                # (Line 113) {
                # (Line 114) var d = 30 + 30 * v.P_LoopMain[playerID];
                d = EUDVariable()
                d << (30 + 30 * v.P_LoopMain[playerID])
                # (Line 115) var n = 4;
                n = EUDVariable()
                n << (4)
                # (Line 116) var r = 100;
                r = EUDVariable()
                r << (100)
                # (Line 117) trg.Shape_Circle(playerID, 1, "Protoss Dark Templar", d, n, r);
                trg.Shape_Circle(playerID, 1, "Protoss Dark Templar", d, n, r)
                # (Line 118) trg.Shape_Circle(playerID, 1, "Kakaru (Twilight)", d, n, r);
                trg.Shape_Circle(playerID, 1, "Kakaru (Twilight)", d, n, r)
                # (Line 120) KillUnitAt(All, "Protoss Dark Templar", "Anywhere", playerID);
                # (Line 121) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "Protoss Dark Templar", "Anywhere", playerID))
                # (Line 122) }
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID))
                # (Line 124) trg.Main_Wait(80);
            EUDEndIf()
            trg.Main_Wait(80)
            # (Line 126) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 128) if (v.P_LoopMain[playerID] == 4)
            if EUDIf()(v.P_LoopMain[playerID] == 4):
                # (Line 129) {
                # (Line 130) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 131) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 132) }
                # (Line 133) }
            EUDEndIf()
            # (Line 134) else if (v.P_CountMain[playerID] == 3)
        if EUDElseIf()(v.P_CountMain[playerID] == 3):
            # (Line 135) {
            # (Line 136) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 137) {
                # (Line 138) trg.Shape_NxNSquare(playerID, 1, "50 + 1n Battlecruiser", 3, 75);
                trg.Shape_NxNSquare(playerID, 1, "50 + 1n Battlecruiser", 3, 75)
                # (Line 140) Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, "Anywhere");
                # (Line 141) }
                DoActions(Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, "Anywhere"))
                # (Line 142) else if (v.P_LoopMain[playerID] == 5)
            if EUDElseIf()(v.P_LoopMain[playerID] == 5):
                # (Line 143) {
                # (Line 144) RemoveUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
                # (Line 146) trg.Shape_NxNSquare(playerID, 1, "40 + 1n Wraith", 3, 75);
                DoActions(RemoveUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                trg.Shape_NxNSquare(playerID, 1, "40 + 1n Wraith", 3, 75)
                # (Line 147) trg.Shape_NxNSquare(playerID, 1, "Protoss Dark Templar", 3, 75);
                trg.Shape_NxNSquare(playerID, 1, "Protoss Dark Templar", 3, 75)
                # (Line 149) Order("40 + 1n Wraith", playerID, "Anywhere", Attack, "Anywhere");
                # (Line 151) KillUnitAt(All, "Protoss Dark Templar", "Anywhere", playerID);
                DoActions(Order("40 + 1n Wraith", playerID, "Anywhere", Attack, "Anywhere"))
                # (Line 152) }
                DoActions(KillUnitAt(All, "Protoss Dark Templar", "Anywhere", playerID))
                # (Line 153) else if (v.P_LoopMain[playerID] == 6)
            if EUDElseIf()(v.P_LoopMain[playerID] == 6):
                # (Line 154) {
                # (Line 155) RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 157) trg.Shape_NxNSquare(playerID, 1, "Kakaru (Twilight)", 3, 75);
                DoActions(RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                trg.Shape_NxNSquare(playerID, 1, "Kakaru (Twilight)", 3, 75)
                # (Line 159) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);
                # (Line 160) }
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID))
                # (Line 162) trg.Main_Wait(80);
            EUDEndIf()
            trg.Main_Wait(80)
            # (Line 164) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 166) if (v.P_LoopMain[playerID] == 7)
            if EUDIf()(v.P_LoopMain[playerID] == 7):
                # (Line 167) {
                # (Line 168) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 169) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 170) }
                # (Line 171) }
            EUDEndIf()
            # (Line 173) else if (v.P_CountMain[playerID] == 4)
        if EUDElseIf()(v.P_CountMain[playerID] == 4):
            # (Line 174) {
            # (Line 175) RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
            # (Line 177) trg.SkillEnd();
            DoActions(RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
            trg.SkillEnd()
            # (Line 178) }
            # (Line 179) }
        EUDEndIf()
        # (Line 180) }
    EUDEndIf()
