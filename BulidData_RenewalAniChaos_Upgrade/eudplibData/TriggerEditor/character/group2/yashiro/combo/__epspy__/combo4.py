## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import PluginVariables as msqcvar;
import PluginVariables as msqcvar
# (Line 2) import variable as v;
import variable as v
# (Line 3) import func.trig as trg;
from func import trig as trg
# (Line 4) import func.trigadv as adv;
from func import trigadv as adv
# (Line 5) import func.trigepic as epic;
from func import trigepic as epic
# (Line 7) function Shape_X(playerID : TrgPlayer, count, unit : TrgUnit);
# (Line 8) function Shape_X_Hallu(playerID : TrgPlayer, count, unit : TrgUnit);
# (Line 10) function main(playerID)
# (Line 11) {
@EUDFunc
def f_main(playerID):
    # (Line 12) trg.Buff_ShieldFix(1);
    trg.Buff_ShieldFix(1)
    # (Line 14) if (v.P_WaitMain[playerID] == 0)
    if EUDIf()(v.P_WaitMain[playerID] == 0):
        # (Line 15) {
        # (Line 16) if (v.P_CountMain[playerID] == 0)
        if EUDIf()(v.P_CountMain[playerID] == 0):
            # (Line 17) {
            # (Line 18) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 19) {
                # (Line 20) for (var i = 0; i < 2; i++)
                i = EUDVariable()
                i << (0)
                if EUDWhile()(i >= 2, neg=True):
                    def _t5():
                        i.__iadd__(1)
                    # (Line 21) {
                    # (Line 22) var d = 22 + 45 * i;
                    d = EUDVariable()
                    d << (22 + 45 * i)
                    # (Line 23) var n = 8;
                    n = EUDVariable()
                    n << (8)
                    # (Line 24) var r = 50 + 50 * i;
                    r = EUDVariable()
                    r << (50 + 50 * i)
                    # (Line 25) trg.Shape_Circle(playerID, 1, " Unit. Hoffnung 25000", d, n, r);
                    trg.Shape_Circle(playerID, 1, " Unit. Hoffnung 25000", d, n, r)
                    # (Line 26) }
                    # (Line 27) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID);
                    EUDSetContinuePoint()
                    _t5()
                EUDEndWhile()
                # (Line 28) }
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID))
                # (Line 29) else if (v.P_LoopMain[playerID] == 1)
            if EUDElseIf()(v.P_LoopMain[playerID] == 1):
                # (Line 30) {
                # (Line 31) for (var i = 0; i < 2; i++)
                i = EUDVariable()
                i << (0)
                if EUDWhile()(i >= 2, neg=True):
                    def _t8():
                        i.__iadd__(1)
                    # (Line 32) {
                    # (Line 33) var d = 22 + 45 * i;
                    d = EUDVariable()
                    d << (22 + 45 * i)
                    # (Line 34) var n = 8;
                    n = EUDVariable()
                    n << (8)
                    # (Line 35) var r = 100 + 50 * i;
                    r = EUDVariable()
                    r << (100 + 50 * i)
                    # (Line 36) trg.Shape_Circle(playerID, 1, " Unit. Hoffnung 25000", d, n, r);
                    trg.Shape_Circle(playerID, 1, " Unit. Hoffnung 25000", d, n, r)
                    # (Line 37) }
                    # (Line 38) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID);
                    EUDSetContinuePoint()
                    _t8()
                EUDEndWhile()
                # (Line 39) }
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID))
                # (Line 40) else if (v.P_LoopMain[playerID] == 2)
            if EUDElseIf()(v.P_LoopMain[playerID] == 2):
                # (Line 41) {
                # (Line 42) for (var i = 0; i < 4; i++)
                i = EUDVariable()
                i << (0)
                if EUDWhile()(i >= 4, neg=True):
                    def _t11():
                        i.__iadd__(1)
                    # (Line 43) {
                    # (Line 44) var d = 45 * i;
                    d = EUDVariable()
                    d << (45 * i)
                    # (Line 45) var n = 4;
                    n = EUDVariable()
                    n << (4)
                    # (Line 46) var r = 50 + 50 * i;
                    r = EUDVariable()
                    r << (50 + 50 * i)
                    # (Line 47) if (i >= 2)
                    if EUDIf()(i >= 2):
                        # (Line 48) {
                        # (Line 49) trg.Shape_Circle(playerID, 1, "40 + 1n Ghost", d, n, r);
                        trg.Shape_Circle(playerID, 1, "40 + 1n Ghost", d, n, r)
                        # (Line 50) }
                        # (Line 51) trg.Shape_Circle(playerID, 1, "Kakaru (Twilight)", d, n, r);
                    EUDEndIf()
                    trg.Shape_Circle(playerID, 1, "Kakaru (Twilight)", d, n, r)
                    # (Line 52) }
                    # (Line 53) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                    EUDSetContinuePoint()
                    _t11()
                EUDEndWhile()
                # (Line 54) MoveUnit(All, "40 + 1n Ghost", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 55) Order("40 + 1n Ghost", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveUnit(All, "40 + 1n Ghost", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                # (Line 57) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);
                DoActions(Order("40 + 1n Ghost", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 58) }
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID))
                # (Line 60) trg.Main_Wait(80);
            EUDEndIf()
            trg.Main_Wait(80)
            # (Line 62) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 64) if (v.P_LoopMain[playerID] == 21)
            if EUDIf()(v.P_LoopMain[playerID] == 21):
                # (Line 65) {
                # (Line 66) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 67) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 68) }
                # (Line 69) }
            EUDEndIf()
            # (Line 70) else if (v.P_CountMain[playerID] == 1)
        if EUDElseIf()(v.P_CountMain[playerID] == 1):
            # (Line 71) {
            # (Line 72) if (v.P_LoopMain[playerID] < 4)
            if EUDIf()(v.P_LoopMain[playerID] >= 4, neg=True):
                # (Line 73) {
                # (Line 74) RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 76) var d = 45;
                DoActions(RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                d = EUDVariable()
                d << (45)
                # (Line 77) var n = 4;
                n = EUDVariable()
                n << (4)
                # (Line 78) var r = 25 + 25 * v.P_LoopMain[playerID];
                r = EUDVariable()
                r << (25 + 25 * v.P_LoopMain[playerID])
                # (Line 79) epic.Shape_Circle(playerID, 1, "40 + 1n Wraith", d, n, r, 1);
                epic.Shape_Circle(playerID, 1, "40 + 1n Wraith", d, n, r, 1)
                # (Line 80) trg.Shape_Circle(playerID, 1, "40 + 1n Zealot", d, n, r);
                trg.Shape_Circle(playerID, 1, "40 + 1n Zealot", d, n, r)
                # (Line 82) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 83) Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 85) KillUnitAt(All, "40 + 1n Zealot", "Anywhere", playerID);
                DoActions(Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 86) }
                DoActions(KillUnitAt(All, "40 + 1n Zealot", "Anywhere", playerID))
                # (Line 87) else if (v.P_LoopMain[playerID] == 4)
            if EUDElseIf()(v.P_LoopMain[playerID] == 4):
                # (Line 88) {
                # (Line 89) RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 91) var d = 0;
                DoActions(RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                d = EUDVariable()
                d << (0)
                # (Line 92) var size = 4;
                size = EUDVariable()
                size << (4)
                # (Line 93) var i = 64;
                i = EUDVariable()
                i << (64)
                # (Line 94) trg.Shape_Cross(playerID, 1, "40 + 1n Wraith", d, size, i);
                trg.Shape_Cross(playerID, 1, "40 + 1n Wraith", d, size, i)
                # (Line 95) trg.Shape_Cross(playerID, 1, " Creep. Dunkelheit", d, size, i);
                trg.Shape_Cross(playerID, 1, " Creep. Dunkelheit", d, size, i)
                # (Line 97) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 98) Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 100) KillUnitAt(All, " Creep. Dunkelheit", "Anywhere", playerID);
                DoActions(Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 101) }
                DoActions(KillUnitAt(All, " Creep. Dunkelheit", "Anywhere", playerID))
                # (Line 102) else if (v.P_LoopMain[playerID] == 7)
            if EUDElseIf()(v.P_LoopMain[playerID] == 7):
                # (Line 103) {
                # (Line 104) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 105) }
                DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                # (Line 106) else if (v.P_LoopMain[playerID] == 8)
            if EUDElseIf()(v.P_LoopMain[playerID] == 8):
                # (Line 107) {
                # (Line 108) var d = 0;
                d = EUDVariable()
                d << (0)
                # (Line 109) var size = 4;
                size = EUDVariable()
                size << (4)
                # (Line 110) var i = 64;
                i = EUDVariable()
                i << (64)
                # (Line 111) trg.Shape_Cross(playerID, 1, "Kakaru (Twilight)", d, size, i);
                trg.Shape_Cross(playerID, 1, "Kakaru (Twilight)", d, size, i)
                # (Line 112) trg.Shape_Cross(playerID, 1, " Unit. Hoffnung 25000", d, size, i);
                trg.Shape_Cross(playerID, 1, " Unit. Hoffnung 25000", d, size, i)
                # (Line 114) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);
                # (Line 115) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID))
                # (Line 116) }
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID))
                # (Line 118) trg.Main_Wait(80);
            EUDEndIf()
            trg.Main_Wait(80)
            # (Line 120) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 122) if (v.P_LoopMain[playerID] == 13)
            if EUDIf()(v.P_LoopMain[playerID] == 13):
                # (Line 123) {
                # (Line 124) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 125) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 126) }
                # (Line 127) }
            EUDEndIf()
            # (Line 128) else if (v.P_CountMain[playerID] == 2)
        if EUDElseIf()(v.P_CountMain[playerID] == 2):
            # (Line 129) {
            # (Line 130) if (v.P_LoopMain[playerID] < 4)
            if EUDIf()(v.P_LoopMain[playerID] >= 4, neg=True):
                # (Line 131) {
                # (Line 132) RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 134) var d = 0;
                DoActions(RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                d = EUDVariable()
                d << (0)
                # (Line 135) var n = 4;
                n = EUDVariable()
                n << (4)
                # (Line 136) var r = 25 + 25 * v.P_LoopMain[playerID];
                r = EUDVariable()
                r << (25 + 25 * v.P_LoopMain[playerID])
                # (Line 137) epic.Shape_Circle(playerID, 1, "40 + 1n Wraith", d, n, r, 1);
                epic.Shape_Circle(playerID, 1, "40 + 1n Wraith", d, n, r, 1)
                # (Line 138) trg.Shape_Circle(playerID, 1, "40 + 1n Zealot", d, n, r);
                trg.Shape_Circle(playerID, 1, "40 + 1n Zealot", d, n, r)
                # (Line 140) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 141) Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 143) KillUnitAt(All, "40 + 1n Zealot", "Anywhere", playerID);
                DoActions(Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 144) }
                DoActions(KillUnitAt(All, "40 + 1n Zealot", "Anywhere", playerID))
                # (Line 145) else if (v.P_LoopMain[playerID] == 4)
            if EUDElseIf()(v.P_LoopMain[playerID] == 4):
                # (Line 146) {
                # (Line 147) RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 149) var d = 45;
                DoActions(RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                d = EUDVariable()
                d << (45)
                # (Line 150) var size = 4;
                size = EUDVariable()
                size << (4)
                # (Line 151) var i = 64;
                i = EUDVariable()
                i << (64)
                # (Line 152) trg.Shape_Cross(playerID, 1, "40 + 1n Wraith", d, size, i);
                trg.Shape_Cross(playerID, 1, "40 + 1n Wraith", d, size, i)
                # (Line 153) trg.Shape_Cross(playerID, 1, " Creep. Dunkelheit", d, size, i);
                trg.Shape_Cross(playerID, 1, " Creep. Dunkelheit", d, size, i)
                # (Line 155) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 156) Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 158) KillUnitAt(All, " Creep. Dunkelheit", "Anywhere", playerID);
                DoActions(Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 159) }
                DoActions(KillUnitAt(All, " Creep. Dunkelheit", "Anywhere", playerID))
                # (Line 160) else if (v.P_LoopMain[playerID] == 7)
            if EUDElseIf()(v.P_LoopMain[playerID] == 7):
                # (Line 161) {
                # (Line 162) KillUnitAt(All, "40 + 1n Ghost", "Anywhere", playerID);
                # (Line 163) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Ghost", "Anywhere", playerID))
                # (Line 164) }
                DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                # (Line 165) else if (v.P_LoopMain[playerID] == 8)
            if EUDElseIf()(v.P_LoopMain[playerID] == 8):
                # (Line 166) {
                # (Line 167) var d = 0;
                d = EUDVariable()
                d << (0)
                # (Line 168) var size = 4;
                size = EUDVariable()
                size << (4)
                # (Line 169) var i = 64;
                i = EUDVariable()
                i << (64)
                # (Line 170) trg.Shape_Cross(playerID, 1, "Kakaru (Twilight)", d, size, i);
                trg.Shape_Cross(playerID, 1, "Kakaru (Twilight)", d, size, i)
                # (Line 171) trg.Shape_Cross(playerID, 1, " Unit. Hoffnung 25000", d, size, i);
                trg.Shape_Cross(playerID, 1, " Unit. Hoffnung 25000", d, size, i)
                # (Line 173) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);
                # (Line 174) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID))
                # (Line 175) KillUnitAt(All, "40 + 1n Ghost", "Anywhere", playerID);
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID))
                # (Line 176) }
                DoActions(KillUnitAt(All, "40 + 1n Ghost", "Anywhere", playerID))
                # (Line 178) trg.Main_Wait(80);
            EUDEndIf()
            trg.Main_Wait(80)
            # (Line 180) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 182) if (v.P_LoopMain[playerID] == 9)
            if EUDIf()(v.P_LoopMain[playerID] == 9):
                # (Line 183) {
                # (Line 184) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 185) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 186) }
                # (Line 187) }
            EUDEndIf()
            # (Line 188) else if (v.P_CountMain[playerID] == 3)
        if EUDElseIf()(v.P_CountMain[playerID] == 3):
            # (Line 189) {
            # (Line 190) RemoveUnitAt(All, " Creep. Dunkelheit", "Anywhere", playerID);
            # (Line 192) if (v.P_LoopMain[playerID] < 4)
            DoActions(RemoveUnitAt(All, " Creep. Dunkelheit", "Anywhere", playerID))
            if EUDIf()(v.P_LoopMain[playerID] >= 4, neg=True):
                # (Line 193) {
                # (Line 194) RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 196) var x = 50 - 50 * v.P_LoopMain[playerID];
                DoActions(RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                x = EUDVariable()
                x << (50 - 50 * v.P_LoopMain[playerID])
                # (Line 197) var y = 100;
                y = EUDVariable()
                y << (100)
                # (Line 198) trg.Shape_Square(playerID, 1, "40 + 1n Wraith", x, y);
                trg.Shape_Square(playerID, 1, "40 + 1n Wraith", x, y)
                # (Line 199) trg.Shape_Square(playerID, 1, "Rhynadon (Badlands)", x, y);
                trg.Shape_Square(playerID, 1, "Rhynadon (Badlands)", x, y)
                # (Line 201) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 202) Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 204) KillUnitAt(All, "Rhynadon (Badlands)", "Anywhere", playerID);
                DoActions(Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 205) }
                DoActions(KillUnitAt(All, "Rhynadon (Badlands)", "Anywhere", playerID))
                # (Line 206) else if (v.P_LoopMain[playerID] == 4)
            if EUDElseIf()(v.P_LoopMain[playerID] == 4):
                # (Line 207) {
                # (Line 208) RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 210) trg.Shape_Edge(playerID, 1, "Bengalaas (Jungle)", 45, 5, 100);
                DoActions(RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                trg.Shape_Edge(playerID, 1, "Bengalaas (Jungle)", 45, 5, 100)
                # (Line 211) KillUnitAt(All, "Bengalaas (Jungle)", "Anywhere", playerID);
                # (Line 213) var d = 45;
                DoActions(KillUnitAt(All, "Bengalaas (Jungle)", "Anywhere", playerID))
                d = EUDVariable()
                d << (45)
                # (Line 214) var size = 4;
                size = EUDVariable()
                size << (4)
                # (Line 215) var i = 75;
                i = EUDVariable()
                i << (75)
                # (Line 216) trg.Shape_Cross(playerID, 1, "Target", d, size, i);
                trg.Shape_Cross(playerID, 1, "Target", d, size, i)
                # (Line 217) KillUnitAt(All, "Target", "Anywhere", playerID);
                # (Line 218) }
                DoActions(KillUnitAt(All, "Target", "Anywhere", playerID))
                # (Line 219) else if (v.P_LoopMain[playerID] == 6)
            if EUDElseIf()(v.P_LoopMain[playerID] == 6):
                # (Line 220) {
                # (Line 221) Shape_X(playerID, 1, "40 + 1n Guardian");
                Shape_X(playerID, 1, "40 + 1n Guardian")
                # (Line 223) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
                # (Line 224) }
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID))
                # (Line 225) else if (v.P_LoopMain[playerID] == 8)
            if EUDElseIf()(v.P_LoopMain[playerID] == 8):
                # (Line 226) {
                # (Line 227) Shape_X_Hallu(playerID, 1, "40 + 1n Wraith");
                Shape_X_Hallu(playerID, 1, "40 + 1n Wraith")
                # (Line 228) Shape_X(playerID, 1, "Protoss Dark Templar");
                Shape_X(playerID, 1, "Protoss Dark Templar")
                # (Line 230) var d = 45;
                d = EUDVariable()
                d << (45)
                # (Line 231) var size = 4;
                size = EUDVariable()
                size << (4)
                # (Line 232) var i = 75;
                i = EUDVariable()
                i << (75)
                # (Line 233) trg.Shape_Cross(playerID, 1, "Target", d, size, i);
                trg.Shape_Cross(playerID, 1, "Target", d, size, i)
                # (Line 235) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 236) Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 238) KillUnitAt(All, "Target", "Anywhere", playerID);
                DoActions(Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 239) KillUnitAt(All, "Protoss Dark Templar", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "Target", "Anywhere", playerID))
                # (Line 240) }
                DoActions(KillUnitAt(All, "Protoss Dark Templar", "Anywhere", playerID))
                # (Line 241) else if (v.P_LoopMain[playerID] == 10)
            if EUDElseIf()(v.P_LoopMain[playerID] == 10):
                # (Line 242) {
                # (Line 243) RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 245) Shape_X(playerID, 1, "Kakaru (Twilight)");
                DoActions(RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                Shape_X(playerID, 1, "Kakaru (Twilight)")
                # (Line 246) Shape_X(playerID, 1, " Unit. Hoffnung 25000");
                Shape_X(playerID, 1, " Unit. Hoffnung 25000")
                # (Line 248) var d = 45;
                d = EUDVariable()
                d << (45)
                # (Line 249) var size = 4;
                size = EUDVariable()
                size << (4)
                # (Line 250) var i = 75;
                i = EUDVariable()
                i << (75)
                # (Line 251) trg.Shape_Cross(playerID, 1, "60 + 1n High Templar", d, size, i);
                trg.Shape_Cross(playerID, 1, "60 + 1n High Templar", d, size, i)
                # (Line 253) KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID);
                # (Line 254) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID))
                # (Line 255) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID))
                # (Line 256) }
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID))
                # (Line 257) else if (v.P_LoopMain[playerID] == 12)
            if EUDElseIf()(v.P_LoopMain[playerID] == 12):
                # (Line 258) {
                # (Line 259) Shape_X(playerID, 1, "40 + 1n Ghost");
                Shape_X(playerID, 1, "40 + 1n Ghost")
                # (Line 261) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 262) MoveUnit(All, "40 + 1n Ghost", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 263) Order("40 + 1n Ghost", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveUnit(All, "40 + 1n Ghost", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                # (Line 264) }
                DoActions(Order("40 + 1n Ghost", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 265) if (v.P_LoopMain[playerID] < 12 && v.P_LoopMain[playerID] % 2 == 0)
            EUDEndIf()
            if EUDIf()(EUDSCAnd()(v.P_LoopMain[playerID] >= 12, neg=True)(v.P_LoopMain[playerID] % 2 == 0)()):
                # (Line 266) {
                # (Line 267) if (v.P_LoopMain[playerID] % 4 == 0)
                if EUDIf()(v.P_LoopMain[playerID] % 4 == 0):
                    # (Line 268) {
                    # (Line 269) trg.Shape_Square(playerID, 1, " Creep. Dunkelheit", 50, 50);
                    trg.Shape_Square(playerID, 1, " Creep. Dunkelheit", 50, 50)
                    # (Line 271) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                    # (Line 272) MoveUnit(All, " Creep. Dunkelheit", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                    DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                    # (Line 273) Order(" Creep. Dunkelheit", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                    DoActions(MoveUnit(All, " Creep. Dunkelheit", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                    # (Line 274) }
                    DoActions(Order(" Creep. Dunkelheit", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                    # (Line 276) trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", 50, 50);
                EUDEndIf()
                trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", 50, 50)
                # (Line 278) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);
                # (Line 279) }
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID))
                # (Line 281) trg.Main_Wait(80);
            EUDEndIf()
            trg.Main_Wait(80)
            # (Line 283) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 285) if (v.P_LoopMain[playerID] == 16)
            if EUDIf()(v.P_LoopMain[playerID] == 16):
                # (Line 286) {
                # (Line 287) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 288) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 289) }
                # (Line 290) }
            EUDEndIf()
            # (Line 291) else if (v.P_CountMain[playerID] == 4)
        if EUDElseIf()(v.P_CountMain[playerID] == 4):
            # (Line 292) {
            # (Line 293) KillUnitAt(All, "40 + 1n Ghost", "Anywhere", playerID);
            # (Line 295) trg.SkillEnd();
            DoActions(KillUnitAt(All, "40 + 1n Ghost", "Anywhere", playerID))
            trg.SkillEnd()
            # (Line 296) }
            # (Line 297) }
        EUDEndIf()
        # (Line 298) }
    EUDEndIf()
    # (Line 300) function Shape_X(playerID : TrgPlayer, count, unit : TrgUnit)

# (Line 301) {
@EUDTypedFunc([TrgPlayer, None, TrgUnit])
def Shape_X(playerID, count, unit):
    # (Line 302) trg.Shape_Square(playerID, count, unit, -118, 182);
    trg.Shape_Square(playerID, count, unit, -118, 182)
    # (Line 303) trg.Shape_Square(playerID, count, unit, -68, 132);
    trg.Shape_Square(playerID, count, unit, -68, 132)
    # (Line 304) trg.Shape_Square(playerID, count, unit, -18, 82);
    trg.Shape_Square(playerID, count, unit, -18, 82)
    # (Line 305) trg.Shape_Square(playerID, count, unit, 32, 32);
    trg.Shape_Square(playerID, count, unit, 32, 32)
    # (Line 306) trg.Shape_Square(playerID, count, unit, 132, -68);
    trg.Shape_Square(playerID, count, unit, 132, -68)
    # (Line 307) trg.Shape_Square(playerID, count, unit, 182, -118);
    trg.Shape_Square(playerID, count, unit, 182, -118)
    # (Line 308) }
    # (Line 309) function Shape_X_Hallu(playerID : TrgPlayer, count, unit : TrgUnit)

# (Line 310) {
@EUDTypedFunc([TrgPlayer, None, TrgUnit])
def Shape_X_Hallu(playerID, count, unit):
    # (Line 311) epic.Shape_Square(playerID, count, unit, -118, 182, 1);
    epic.Shape_Square(playerID, count, unit, -118, 182, 1)
    # (Line 312) epic.Shape_Square(playerID, count, unit, -68, 132, 1);
    epic.Shape_Square(playerID, count, unit, -68, 132, 1)
    # (Line 313) epic.Shape_Square(playerID, count, unit, -18, 82, 1);
    epic.Shape_Square(playerID, count, unit, -18, 82, 1)
    # (Line 314) epic.Shape_Square(playerID, count, unit, 32, 32, 1);
    epic.Shape_Square(playerID, count, unit, 32, 32, 1)
    # (Line 315) epic.Shape_Square(playerID, count, unit, 132, -68, 1);
    epic.Shape_Square(playerID, count, unit, 132, -68, 1)
    # (Line 316) epic.Shape_Square(playerID, count, unit, 182, -118, 1);
    epic.Shape_Square(playerID, count, unit, 182, -118, 1)
    # (Line 317) }
