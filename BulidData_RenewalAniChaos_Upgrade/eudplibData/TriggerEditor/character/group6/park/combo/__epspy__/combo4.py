## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import PluginVariables as msqcvar;
import PluginVariables as msqcvar
# (Line 2) import variable as v;
import variable as v
# (Line 3) import func.trig as trg;
from func import trig as trg
# (Line 5) function main(playerID)
# (Line 6) {
@EUDFunc
def f_main(playerID):
    # (Line 7) if (v.P_WaitMain[playerID] == 0)
    if EUDIf()(v.P_WaitMain[playerID] == 0):
        # (Line 8) {
        # (Line 9) if (v.P_CountMain[playerID] == 0)
        if EUDIf()(v.P_CountMain[playerID] == 0):
            # (Line 10) {
            # (Line 11) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 12) {
                # (Line 13) SetDeaths(playerID, SetTo, 0, " `UniqueSkill");
                # (Line 14) trg.Buff_ShieldFix(1);
                DoActions(SetDeaths(playerID, SetTo, 0, " `UniqueSkill"))
                trg.Buff_ShieldFix(1)
                # (Line 15) trg.Shape_Square(playerID, 1, " Creep. Dunkelheit", 75, 25);
                trg.Shape_Square(playerID, 1, " Creep. Dunkelheit", 75, 25)
                # (Line 16) trg.Shape_Square(playerID, 1, " Creep. Dunkelheit", 25, 75);
                trg.Shape_Square(playerID, 1, " Creep. Dunkelheit", 25, 75)
                # (Line 17) trg.Shape_Square(playerID, 1, "50 + 1n Tank", 75, 25);
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", 75, 25)
                # (Line 18) trg.Shape_Square(playerID, 1, "50 + 1n Tank", 25, 75);
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", 25, 75)
                # (Line 19) trg.Shape_Square(playerID, 1, "Terran Science Vessel", 50, 0);
                trg.Shape_Square(playerID, 1, "Terran Science Vessel", 50, 0)
                # (Line 20) KillUnitAt(All, "Terran Science Vessel", "Anywhere", playerID);
                # (Line 21) Order("50 + 1n Tank", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(KillUnitAt(All, "Terran Science Vessel", "Anywhere", playerID))
                # (Line 22) Order(" Creep. Dunkelheit", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(Order("50 + 1n Tank", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 23) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(Order(" Creep. Dunkelheit", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 24) }
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 25) if (v.P_LoopMain[playerID] == 6)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] == 6):
                # (Line 26) {
                # (Line 27) KillUnitAt(All, " Creep. Dunkelheit", "Anywhere", playerID);
                # (Line 28) trg.Shape_Square(playerID, 1, "50 + 1n Tank", 75, 0);
                DoActions(KillUnitAt(All, " Creep. Dunkelheit", "Anywhere", playerID))
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", 75, 0)
                # (Line 29) trg.Shape_Square(playerID, 1, "50 + 1n Tank", 50, 50);
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", 50, 50)
                # (Line 30) trg.Shape_Square(playerID, 1, "50 + 1n Tank", 100, 100);
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", 100, 100)
                # (Line 31) trg.Shape_Square(playerID, 1, " Creep. Dunkelheit", 75, 25);
                trg.Shape_Square(playerID, 1, " Creep. Dunkelheit", 75, 25)
                # (Line 32) trg.Shape_Square(playerID, 1, " Creep. Dunkelheit", 25, 75);
                trg.Shape_Square(playerID, 1, " Creep. Dunkelheit", 25, 75)
                # (Line 33) trg.Shape_Square(playerID, 1, "Terran Science Vessel", 50, 50);
                trg.Shape_Square(playerID, 1, "Terran Science Vessel", 50, 50)
                # (Line 34) trg.Shape_Square(playerID, 1, "Terran Science Vessel", 50, 0);
                trg.Shape_Square(playerID, 1, "Terran Science Vessel", 50, 0)
                # (Line 35) KillUnitAt(All, "Terran Science Vessel", "Anywhere", playerID);
                # (Line 36) Order(" Creep. Dunkelheit", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(KillUnitAt(All, "Terran Science Vessel", "Anywhere", playerID))
                # (Line 37) Order("50 + 1n Tank", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(Order(" Creep. Dunkelheit", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 38) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
                DoActions(Order("50 + 1n Tank", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 39) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID))
                # (Line 40) }
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 41) if (v.P_LoopMain[playerID] == 12)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] == 12):
                # (Line 42) {
                # (Line 43) KillUnitAt(All, " Creep. Dunkelheit", "Anywhere", playerID);
                # (Line 44) trg.Shape_Square(playerID, 1, "50 + 1n Tank", 125, 0);
                DoActions(KillUnitAt(All, " Creep. Dunkelheit", "Anywhere", playerID))
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", 125, 0)
                # (Line 45) trg.Shape_Square(playerID, 1, " Creep. Dunkelheit", 75, 25);
                trg.Shape_Square(playerID, 1, " Creep. Dunkelheit", 75, 25)
                # (Line 46) trg.Shape_Square(playerID, 1, " Creep. Dunkelheit", 25, 75);
                trg.Shape_Square(playerID, 1, " Creep. Dunkelheit", 25, 75)
                # (Line 47) trg.Shape_Square(playerID, 1, "Terran Science Vessel", 75, 0);
                trg.Shape_Square(playerID, 1, "Terran Science Vessel", 75, 0)
                # (Line 48) trg.Shape_Square(playerID, 1, "Terran Science Vessel", 50, 50);
                trg.Shape_Square(playerID, 1, "Terran Science Vessel", 50, 50)
                # (Line 49) trg.Shape_Square(playerID, 1, "Terran Science Vessel", 100, 100);
                trg.Shape_Square(playerID, 1, "Terran Science Vessel", 100, 100)
                # (Line 50) KillUnitAt(All, "Terran Science Vessel", "Anywhere", playerID);
                # (Line 51) Order("50 + 1n Tank", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(KillUnitAt(All, "Terran Science Vessel", "Anywhere", playerID))
                # (Line 52) Order(" Creep. Dunkelheit", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(Order("50 + 1n Tank", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 53) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(Order(" Creep. Dunkelheit", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 54) }
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 55) trg.Main_Wait(80);
            EUDEndIf()
            trg.Main_Wait(80)
            # (Line 57) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 59) if (v.P_LoopMain[playerID] == 18)
            if EUDIf()(v.P_LoopMain[playerID] == 18):
                # (Line 60) {
                # (Line 61) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 62) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 63) }
                # (Line 65) }
            EUDEndIf()
            # (Line 67) else if (v.P_CountMain[playerID] == 1)
        if EUDElseIf()(v.P_CountMain[playerID] == 1):
            # (Line 68) {
            # (Line 69) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 70) {
                # (Line 71) KillUnitAt(All, " Creep. Dunkelheit", "Anywhere", playerID);
                # (Line 72) trg.Shape_Double(playerID, 1, "40 + 1n Guardian", 125, 0);
                DoActions(KillUnitAt(All, " Creep. Dunkelheit", "Anywhere", playerID))
                trg.Shape_Double(playerID, 1, "40 + 1n Guardian", 125, 0)
                # (Line 73) trg.Shape_Edge(playerID, 1, "40 + 1n Ghost", 45,2, 32);
                trg.Shape_Edge(playerID, 1, "40 + 1n Ghost", 45, 2, 32)
                # (Line 74) trg.Shape_Edge(playerID, 1, "40 + 1n Mutalisk", 45,3, 32);
                trg.Shape_Edge(playerID, 1, "40 + 1n Mutalisk", 45, 3, 32)
                # (Line 75) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 76) Order("40 + 1n Ghost", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 77) Order("40 + 1n Mutalisk", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(Order("40 + 1n Ghost", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 78) Order("40 + 1n Guardian", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(Order("40 + 1n Mutalisk", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 79) }
                DoActions(Order("40 + 1n Guardian", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 80) if (v.P_LoopMain[playerID] == 4 )
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] == 4):
                # (Line 81) {
                # (Line 82) KillUnitAt(All, "40 + 1n Ghost", "Anywhere", playerID);
                # (Line 83) KillUnitAt(All, "40 + 1n Mutalisk", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Ghost", "Anywhere", playerID))
                # (Line 84) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Mutalisk", "Anywhere", playerID))
                # (Line 85) trg.Shape_Double(playerID, 1, "40 + 1n Guardian", 0, 125);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID))
                trg.Shape_Double(playerID, 1, "40 + 1n Guardian", 0, 125)
                # (Line 86) trg.Shape_Edge(playerID, 1, "40 + 1n Ghost", 90,2, 64);
                trg.Shape_Edge(playerID, 1, "40 + 1n Ghost", 90, 2, 64)
                # (Line 87) trg.Shape_Edge(playerID, 1, "40 + 1n Mutalisk", 90,3, 64);
                trg.Shape_Edge(playerID, 1, "40 + 1n Mutalisk", 90, 3, 64)
                # (Line 88) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 89) Order("40 + 1n Ghost", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 90) Order("40 + 1n Mutalisk", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(Order("40 + 1n Ghost", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 91) Order("40 + 1n Guardian", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(Order("40 + 1n Mutalisk", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 92) }
                DoActions(Order("40 + 1n Guardian", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 94) trg.Main_Wait(80);
            EUDEndIf()
            trg.Main_Wait(80)
            # (Line 96) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 98) if (v.P_LoopMain[playerID] == 8)
            if EUDIf()(v.P_LoopMain[playerID] == 8):
                # (Line 99) {
                # (Line 100) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                # (Line 101) v.P_CountMain[playerID] += 1;
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 102) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 103) }
                # (Line 104) }
            EUDEndIf()
            # (Line 105) else if (v.P_CountMain[playerID] == 2)
        if EUDElseIf()(v.P_CountMain[playerID] == 2):
            # (Line 106) {
            # (Line 107) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 108) {
                # (Line 109) KillUnitAt(All, "40 + 1n Ghost", "Anywhere", playerID);
                # (Line 110) KillUnitAt(All, "40 + 1n Mutalisk", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Ghost", "Anywhere", playerID))
                # (Line 111) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Mutalisk", "Anywhere", playerID))
                # (Line 112) }
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID))
                # (Line 113) if (v.P_LoopMain[playerID] == 13 )
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] == 13):
                # (Line 114) {
                # (Line 115) trg.Shape_NxNSquare(playerID, 1, "50 + 1n Battlecruiser", 3, 75);
                trg.Shape_NxNSquare(playerID, 1, "50 + 1n Battlecruiser", 3, 75)
                # (Line 116) trg.Shape_Edge(playerID, 1, "40 + 1n Goliath", 45,3, 32);
                trg.Shape_Edge(playerID, 1, "40 + 1n Goliath", 45, 3, 32)
                # (Line 117) trg.Shape_Edge(playerID, 1, "50 + 1n Tank", 45,3, 32);
                trg.Shape_Edge(playerID, 1, "50 + 1n Tank", 45, 3, 32)
                # (Line 118) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                # (Line 119) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                # (Line 120) Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 121) Order("40 + 1n Goliath", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 122) }
                DoActions(Order("40 + 1n Goliath", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 124) trg.Main_Wait(80);
            EUDEndIf()
            trg.Main_Wait(80)
            # (Line 126) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 128) if (v.P_LoopMain[playerID] == 16)
            if EUDIf()(v.P_LoopMain[playerID] == 16):
                # (Line 129) {
                # (Line 130) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
                # (Line 131) KillUnitAt(All, "40 + 1n Goliath", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                # (Line 132) v.P_CountMain[playerID] += 1;
                DoActions(KillUnitAt(All, "40 + 1n Goliath", "Anywhere", playerID))
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 133) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 134) }
                # (Line 135) }
            EUDEndIf()
            # (Line 136) else if (v.P_CountMain[playerID] == 3)
        if EUDElseIf()(v.P_CountMain[playerID] == 3):
            # (Line 137) {
            # (Line 138) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 139) {
                # (Line 140) KillUnitAt(All, "40 + 1n Mutalisk", "Anywhere", playerID);
                # (Line 141) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Mutalisk", "Anywhere", playerID))
                # (Line 142) }
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID))
                # (Line 143) if (v.P_LoopMain[playerID] == 10 )
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] == 10):
                # (Line 144) {
                # (Line 145) trg.Shape_NxNSquare(playerID, 1, "50 + 1n Battlecruiser", 3, 75);
                trg.Shape_NxNSquare(playerID, 1, "50 + 1n Battlecruiser", 3, 75)
                # (Line 146) trg.Shape_Edge(playerID, 1, "40 + 1n Goliath", 45,3, 32);
                trg.Shape_Edge(playerID, 1, "40 + 1n Goliath", 45, 3, 32)
                # (Line 147) trg.Shape_Edge(playerID, 1, "50 + 1n Tank", 45,3, 32);
                trg.Shape_Edge(playerID, 1, "50 + 1n Tank", 45, 3, 32)
                # (Line 148) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                # (Line 149) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                # (Line 150) Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 151) Order("40 + 1n Goliath", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 152) }
                DoActions(Order("40 + 1n Goliath", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 154) trg.Main_Wait(80);
            EUDEndIf()
            trg.Main_Wait(80)
            # (Line 156) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 158) if (v.P_LoopMain[playerID] == 14)
            if EUDIf()(v.P_LoopMain[playerID] == 14):
                # (Line 159) {
                # (Line 160) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
                # (Line 161) KillUnitAt(All, "40 + 1n Goliath", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                # (Line 163) trg.SkillEnd();
                DoActions(KillUnitAt(All, "40 + 1n Goliath", "Anywhere", playerID))
                trg.SkillEnd()
                # (Line 164) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 165) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 166) }
                # (Line 167) }
            EUDEndIf()
            # (Line 168) }
        EUDEndIf()
        # (Line 169) }
    EUDEndIf()
