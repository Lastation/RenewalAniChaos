## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import variable as v;
import variable as v
# (Line 2) import func.trig as trg;
from func import trig as trg
# (Line 4) function main(playerID)
# (Line 5) {
@EUDFunc
def f_main(playerID):
    # (Line 6) if (v.P_WaitMain[playerID] == 0)
    if EUDIf()(v.P_WaitMain[playerID] == 0):
        # (Line 7) {
        # (Line 8) if (v.P_CountMain[playerID] == 0)
        if EUDIf()(v.P_CountMain[playerID] == 0):
            # (Line 9) {
            # (Line 10) if (v.P_LoopMain[playerID] == 0 && Deaths(CurrentPlayer, AtLeast, 1, " `UniqueSkill"))
            if EUDIf()(EUDSCAnd()(v.P_LoopMain[playerID] == 0)(Deaths(CurrentPlayer, AtLeast, 1, " `UniqueSkill"))()):
                # (Line 11) {
                # (Line 12) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 13) MoveLocation("31.Park_Bozo", v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 14) if (playerID < 3)
                DoActions(MoveLocation("31.Park_Bozo", v.P_UnitID[playerID], playerID, "Anywhere"))
                if EUDIf()(playerID >= 3, neg=True):
                    # (Line 15) {
                    # (Line 16) if (Bring(3, AtLeast, 1, v.P_UnitID[3], "31.Park_Bozo"))
                    if EUDIf()(Bring(3, AtLeast, 1, v.P_UnitID[3], "31.Park_Bozo")):
                        # (Line 17) {
                        # (Line 18) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[3], 3, "Anywhere");
                        # (Line 19) }
                        DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[3], 3, "Anywhere"))
                        # (Line 20) else if (Bring(4, AtLeast, 1, v.P_UnitID[4], "31.Park_Bozo"))
                    if EUDElseIf()(Bring(4, AtLeast, 1, v.P_UnitID[4], "31.Park_Bozo")):
                        # (Line 21) {
                        # (Line 22) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[4], 4, "Anywhere");
                        # (Line 23) }
                        DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[4], 4, "Anywhere"))
                        # (Line 24) else if (Bring(5, AtLeast, 1, v.P_UnitID[5], "31.Park_Bozo"))
                    if EUDElseIf()(Bring(5, AtLeast, 1, v.P_UnitID[5], "31.Park_Bozo")):
                        # (Line 25) {
                        # (Line 26) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[5], 5, "Anywhere");
                        # (Line 27) }
                        DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[5], 5, "Anywhere"))
                        # (Line 29) }
                    EUDEndIf()
                    # (Line 30) else if (playerID >= 3)
                if EUDElseIf()(playerID >= 3):
                    # (Line 31) {
                    # (Line 32) if (Bring(0, AtLeast, 1, v.P_UnitID[0], "31.Park_Bozo"))
                    if EUDIf()(Bring(0, AtLeast, 1, v.P_UnitID[0], "31.Park_Bozo")):
                        # (Line 33) {
                        # (Line 34) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[0], 0, "Anywhere");
                        # (Line 35) }
                        DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[0], 0, "Anywhere"))
                        # (Line 36) else if (Bring(1, AtLeast, 1, v.P_UnitID[1], "31.Park_Bozo"))
                    if EUDElseIf()(Bring(1, AtLeast, 1, v.P_UnitID[1], "31.Park_Bozo")):
                        # (Line 37) {
                        # (Line 38) MoveLocation(v.P_LocationID[playerID],v.P_UnitID[1], 1, "Anywhere");
                        # (Line 39) }
                        DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[1], 1, "Anywhere"))
                        # (Line 40) else if (Bring(2, AtLeast, 1, v.P_UnitID[2], "31.Park_Bozo"))
                    if EUDElseIf()(Bring(2, AtLeast, 1, v.P_UnitID[2], "31.Park_Bozo")):
                        # (Line 41) {
                        # (Line 42) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[2], 2, "Anywhere");
                        # (Line 43) }
                        DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[2], 2, "Anywhere"))
                        # (Line 44) }
                    EUDEndIf()
                    # (Line 45) MoveUnit(All, v.P_UnitID[playerID], playerID, "Anywhere", v.P_LocationID[playerID]);
                EUDEndIf()
                # (Line 46) }
                DoActions(MoveUnit(All, v.P_UnitID[playerID], playerID, "Anywhere", v.P_LocationID[playerID]))
                # (Line 47) if (v.P_LoopMain[playerID] == 0)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 48) {
                # (Line 49) SetDeaths(playerID, SetTo, 0, " `UniqueSkill");
                # (Line 50) trg.Shape_Square(playerID, 1, "50 + 1n Tank", 50, 0);
                DoActions(SetDeaths(playerID, SetTo, 0, " `UniqueSkill"))
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", 50, 0)
                # (Line 51) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                # (Line 52) trg.Shape_Square(playerID, 1, "40 + 1n Wraith", 50, 50);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                trg.Shape_Square(playerID, 1, "40 + 1n Wraith", 50, 50)
                # (Line 53) Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                # (Line 54) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 55) }
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 56) if (v.P_LoopMain[playerID] == 2)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] == 2):
                # (Line 57) {
                # (Line 58) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 59) }
                DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                # (Line 60) if (v.P_LoopMain[playerID] == 4)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] == 4):
                # (Line 61) {
                # (Line 62) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 63) trg.Shape_Square(playerID, 1, "50 + 1n Tank", 50, 50);
                DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", 50, 50)
                # (Line 64) trg.Shape_Square(playerID, 1, "50 + 1n Tank", 50, 0);
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", 50, 0)
                # (Line 65) trg.Shape_Square(playerID, 1, "40 + 1n Wraith", 50, 50);
                trg.Shape_Square(playerID, 1, "40 + 1n Wraith", 50, 50)
                # (Line 66) Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                # (Line 67) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                DoActions(Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 68) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                # (Line 69) }
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 70) if (v.P_LoopMain[playerID] == 6)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] == 6):
                # (Line 71) {
                # (Line 72) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 73) trg.Shape_Square(playerID, 1, "50 + 1n Tank", 50, 0);
                DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", 50, 0)
                # (Line 74) trg.Shape_Square(playerID, 1, "50 + 1n Tank", 50, 50);
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", 50, 50)
                # (Line 75) trg.Shape_Square(playerID, 1, "50 + 1n Tank", 100, 0);
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", 100, 0)
                # (Line 76) trg.Shape_Square(playerID, 1, "40 + 1n Wraith", 50, 50);
                trg.Shape_Square(playerID, 1, "40 + 1n Wraith", 50, 50)
                # (Line 77) Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                # (Line 78) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                DoActions(Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 79) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                # (Line 80) }
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 81) if (v.P_LoopMain[playerID] == 8)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] == 8):
                # (Line 82) {
                # (Line 83) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 84) trg.Shape_Square(playerID, 1, "50 + 1n Tank", 50, 0);
                DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", 50, 0)
                # (Line 85) trg.Shape_Square(playerID, 1, "50 + 1n Tank", 50, 50);
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", 50, 50)
                # (Line 86) trg.Shape_Square(playerID, 1, "50 + 1n Tank", 100, 0);
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", 100, 0)
                # (Line 87) trg.Shape_Square(playerID, 1, "50 + 1n Tank", 100, 100);
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", 100, 100)
                # (Line 88) trg.Shape_Square(playerID, 1, "40 + 1n Wraith", 50, 50);
                trg.Shape_Square(playerID, 1, "40 + 1n Wraith", 50, 50)
                # (Line 89) Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                # (Line 90) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                DoActions(Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 91) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                # (Line 92) }
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 93) trg.Main_Wait(80);
            EUDEndIf()
            trg.Main_Wait(80)
            # (Line 95) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 97) if (v.P_LoopMain[playerID] == 10)
            if EUDIf()(v.P_LoopMain[playerID] == 10):
                # (Line 98) {
                # (Line 99) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 100) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 101) }
                # (Line 103) }
            EUDEndIf()
            # (Line 105) else if (v.P_CountMain[playerID] == 1)
        if EUDElseIf()(v.P_CountMain[playerID] == 1):
            # (Line 106) {
            # (Line 107) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 108) {
                # (Line 109) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 110) }
                DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                # (Line 111) if (v.P_LoopMain[playerID] == 8 )
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] == 8):
                # (Line 112) {
                # (Line 113) trg.Shape_NxNSquare(playerID, 1, "50 + 1n Battlecruiser", 3, 75);
                trg.Shape_NxNSquare(playerID, 1, "50 + 1n Battlecruiser", 3, 75)
                # (Line 114) trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 0, 150);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 0, 150)
                # (Line 115) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 116) Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 117) }
                DoActions(Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 119) trg.Main_Wait(80);
            EUDEndIf()
            trg.Main_Wait(80)
            # (Line 121) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 123) if (v.P_LoopMain[playerID] == 12)
            if EUDIf()(v.P_LoopMain[playerID] == 12):
                # (Line 124) {
                # (Line 125) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
                # (Line 126) trg.SkillEnd();
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                trg.SkillEnd()
                # (Line 127) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 128) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 129) }
                # (Line 130) }
            EUDEndIf()
            # (Line 131) }
        EUDEndIf()
        # (Line 132) }
    EUDEndIf()
