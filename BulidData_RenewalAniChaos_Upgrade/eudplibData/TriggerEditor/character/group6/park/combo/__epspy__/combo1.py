## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import PluginVariables as msqcvar;
import PluginVariables as msqcvar
# (Line 2) import variable as v;
import variable as v
# (Line 3) import func.trig as trg;
from func import trig as trg
# (Line 5) function main(playerID)
# (Line 6) {
@EUDFunc
def f_main(playerID):
    # (Line 7) if (v.P_WaitMain[playerID] == 0)
    if EUDIf()(v.P_WaitMain[playerID] == 0):
        # (Line 8) {
        # (Line 9) if (v.P_CountMain[playerID] == 0)
        if EUDIf()(v.P_CountMain[playerID] == 0):
            # (Line 10) {
            # (Line 11) if (v.P_LoopMain[playerID] == 0 && Deaths(CurrentPlayer, AtLeast, 1, " `UniqueSkill"))
            if EUDIf()(EUDSCAnd()(v.P_LoopMain[playerID] == 0)(Deaths(CurrentPlayer, AtLeast, 1, " `UniqueSkill"))()):
                # (Line 12) {
                # (Line 13) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 14) MoveLocation("31.Park_Bozo", v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 15) if (playerID < 3)
                DoActions(MoveLocation("31.Park_Bozo", v.P_UnitID[playerID], playerID, "Anywhere"))
                if EUDIf()(playerID >= 3, neg=True):
                    # (Line 16) {
                    # (Line 17) if (Bring(3, AtLeast, 1, v.P_UnitID[3], "31.Park_Bozo"))
                    if EUDIf()(Bring(3, AtLeast, 1, v.P_UnitID[3], "31.Park_Bozo")):
                        # (Line 18) {
                        # (Line 19) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[3], 3, "Anywhere");
                        # (Line 20) }
                        DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[3], 3, "Anywhere"))
                        # (Line 21) else if (Bring(4, AtLeast, 1, v.P_UnitID[4], "31.Park_Bozo"))
                    if EUDElseIf()(Bring(4, AtLeast, 1, v.P_UnitID[4], "31.Park_Bozo")):
                        # (Line 22) {
                        # (Line 23) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[4], 4, "Anywhere");
                        # (Line 24) }
                        DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[4], 4, "Anywhere"))
                        # (Line 25) else if (Bring(5, AtLeast, 1, v.P_UnitID[5], "31.Park_Bozo"))
                    if EUDElseIf()(Bring(5, AtLeast, 1, v.P_UnitID[5], "31.Park_Bozo")):
                        # (Line 26) {
                        # (Line 27) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[5], 5, "Anywhere");
                        # (Line 28) }
                        DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[5], 5, "Anywhere"))
                        # (Line 30) }
                    EUDEndIf()
                    # (Line 31) else if (playerID >= 3)
                if EUDElseIf()(playerID >= 3):
                    # (Line 32) {
                    # (Line 33) if (Bring(0, AtLeast, 1, v.P_UnitID[0], "31.Park_Bozo"))
                    if EUDIf()(Bring(0, AtLeast, 1, v.P_UnitID[0], "31.Park_Bozo")):
                        # (Line 34) {
                        # (Line 35) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[0], 0, "Anywhere");
                        # (Line 36) }
                        DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[0], 0, "Anywhere"))
                        # (Line 37) else if (Bring(1, AtLeast, 1, v.P_UnitID[1], "31.Park_Bozo"))
                    if EUDElseIf()(Bring(1, AtLeast, 1, v.P_UnitID[1], "31.Park_Bozo")):
                        # (Line 38) {
                        # (Line 39) MoveLocation(v.P_LocationID[playerID],v.P_UnitID[1], 1, "Anywhere");
                        # (Line 40) }
                        DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[1], 1, "Anywhere"))
                        # (Line 41) else if (Bring(2, AtLeast, 1, v.P_UnitID[2], "31.Park_Bozo"))
                    if EUDElseIf()(Bring(2, AtLeast, 1, v.P_UnitID[2], "31.Park_Bozo")):
                        # (Line 42) {
                        # (Line 43) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[2], 2, "Anywhere");
                        # (Line 44) }
                        DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[2], 2, "Anywhere"))
                        # (Line 45) }
                    EUDEndIf()
                    # (Line 46) MoveUnit(All, v.P_UnitID[playerID], playerID, "Anywhere", v.P_LocationID[playerID]);
                EUDEndIf()
                # (Line 47) }
                DoActions(MoveUnit(All, v.P_UnitID[playerID], playerID, "Anywhere", v.P_LocationID[playerID]))
                # (Line 48) if (v.P_LoopMain[playerID] == 0)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 49) {
                # (Line 50) SetDeaths(playerID, SetTo, 0, " `UniqueSkill");
                # (Line 51) trg.Shape_Square(playerID, 1, "50 + 1n Tank", 50, 0);
                DoActions(SetDeaths(playerID, SetTo, 0, " `UniqueSkill"))
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", 50, 0)
                # (Line 52) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                # (Line 53) trg.Shape_Square(playerID, 1, "40 + 1n Wraith", 50, 50);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                trg.Shape_Square(playerID, 1, "40 + 1n Wraith", 50, 50)
                # (Line 54) Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                # (Line 55) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 56) }
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 57) if (v.P_LoopMain[playerID] == 2)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] == 2):
                # (Line 58) {
                # (Line 59) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 60) }
                DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                # (Line 61) if (v.P_LoopMain[playerID] == 4)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] == 4):
                # (Line 62) {
                # (Line 63) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 64) trg.Shape_Square(playerID, 1, "50 + 1n Tank", 50, 50);
                DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", 50, 50)
                # (Line 65) trg.Shape_Square(playerID, 1, "50 + 1n Tank", 50, 0);
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", 50, 0)
                # (Line 66) trg.Shape_Square(playerID, 1, "40 + 1n Wraith", 50, 50);
                trg.Shape_Square(playerID, 1, "40 + 1n Wraith", 50, 50)
                # (Line 67) Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                # (Line 68) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                DoActions(Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 69) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                # (Line 70) }
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 71) if (v.P_LoopMain[playerID] == 6)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] == 6):
                # (Line 72) {
                # (Line 73) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 74) trg.Shape_Square(playerID, 1, "50 + 1n Tank", 50, 0);
                DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", 50, 0)
                # (Line 75) trg.Shape_Square(playerID, 1, "50 + 1n Tank", 50, 50);
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", 50, 50)
                # (Line 76) trg.Shape_Square(playerID, 1, "50 + 1n Tank", 100, 0);
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", 100, 0)
                # (Line 77) trg.Shape_Square(playerID, 1, "40 + 1n Wraith", 50, 50);
                trg.Shape_Square(playerID, 1, "40 + 1n Wraith", 50, 50)
                # (Line 78) Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                # (Line 79) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                DoActions(Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 80) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                # (Line 81) }
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 82) if (v.P_LoopMain[playerID] == 8)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] == 8):
                # (Line 83) {
                # (Line 84) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 85) trg.Shape_Square(playerID, 1, "50 + 1n Tank", 50, 0);
                DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", 50, 0)
                # (Line 86) trg.Shape_Square(playerID, 1, "50 + 1n Tank", 50, 50);
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", 50, 50)
                # (Line 87) trg.Shape_Square(playerID, 1, "50 + 1n Tank", 100, 0);
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", 100, 0)
                # (Line 88) trg.Shape_Square(playerID, 1, "50 + 1n Tank", 100, 100);
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", 100, 100)
                # (Line 89) trg.Shape_Square(playerID, 1, "40 + 1n Wraith", 50, 50);
                trg.Shape_Square(playerID, 1, "40 + 1n Wraith", 50, 50)
                # (Line 90) Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                # (Line 91) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                DoActions(Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 92) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                # (Line 93) }
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 94) trg.Main_Wait(80);
            EUDEndIf()
            trg.Main_Wait(80)
            # (Line 96) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 98) if (v.P_LoopMain[playerID] == 10)
            if EUDIf()(v.P_LoopMain[playerID] == 10):
                # (Line 99) {
                # (Line 100) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 101) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 102) }
                # (Line 104) }
            EUDEndIf()
            # (Line 106) else if (v.P_CountMain[playerID] == 1)
        if EUDElseIf()(v.P_CountMain[playerID] == 1):
            # (Line 107) {
            # (Line 108) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 109) {
                # (Line 110) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 111) }
                DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                # (Line 112) if (v.P_LoopMain[playerID] == 8 )
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] == 8):
                # (Line 113) {
                # (Line 114) trg.Shape_NxNSquare(playerID, 1, "50 + 1n Battlecruiser", 3, 75);
                trg.Shape_NxNSquare(playerID, 1, "50 + 1n Battlecruiser", 3, 75)
                # (Line 115) trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 0, 150);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 0, 150)
                # (Line 116) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 117) Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 118) }
                DoActions(Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 120) trg.Main_Wait(80);
            EUDEndIf()
            trg.Main_Wait(80)
            # (Line 122) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 124) if (v.P_LoopMain[playerID] == 12)
            if EUDIf()(v.P_LoopMain[playerID] == 12):
                # (Line 125) {
                # (Line 126) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
                # (Line 127) trg.SkillEnd();
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                trg.SkillEnd()
                # (Line 128) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 129) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 130) }
                # (Line 131) }
            EUDEndIf()
            # (Line 132) }
        EUDEndIf()
        # (Line 133) }
    EUDEndIf()
