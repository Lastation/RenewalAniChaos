## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _RELIMP(path, mod_name):
    import inspect, pathlib, importlib.util
    p = pathlib.Path(inspect.getabsfile(inspect.currentframe())).parent
    for s in path.split("."):
        if s == "":  p = p.parent
        else:  p = p / s
    try:
        spec = importlib.util.spec_from_file_location(mod_name, p / (mod_name + ".py"))
        module = importlib.util.module_from_spec(spec)
        spec.loader.exec_module(module)
    except FileNotFoundError:
        loader = EPSLoader(mod_name, str(p / (mod_name + ".eps")))
        spec = importlib.util.spec_from_loader(mod_name, loader)
        module = loader.create_module(spec)
        loader.exec_module(module)
    return module

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import PluginVariables as msqcvar;
import PluginVariables as msqcvar
# (Line 2) import variable as v;
import variable as v
# (Line 3) import func.trig as trg;
from func import trig as trg
# (Line 4) import func.trigadv as adv;
from func import trigadv as adv
# (Line 5) import func.sound as s;
from func import sound as s
# (Line 7) function main(playerID)
# (Line 8) {
@EUDFunc
def f_main(playerID):
    # (Line 9) trg.Debuff_Stop();
    trg.Debuff_Stop()
    # (Line 10) trg.Debuff_BanReturn();
    trg.Debuff_BanReturn()
    # (Line 12) if (v.P_WaitMain[playerID] == 0)
    if EUDIf()(v.P_WaitMain[playerID] == 0):
        # (Line 13) {
        # (Line 14) if(v.P_CountMain[playerID] == 0)
        if EUDIf()(v.P_CountMain[playerID] == 0):
            # (Line 15) {
            # (Line 16) KillUnitAt(All,"60 + 1n Danimoth","Anywhere",playerID);
            # (Line 17) KillUnitAt(All,"50 + 1n Battlecruiser","Anywhere",playerID);
            DoActions(KillUnitAt(All, "60 + 1n Danimoth", "Anywhere", playerID))
            # (Line 18) KillUnitAt(All,"50 + 1n Tank","Anywhere",playerID);
            DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
            # (Line 19) KillUnitAt(All,"100 + 1n Hyperion","Anywhere",playerID);
            DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
            # (Line 20) KillUnitAt(All,"130 + 1n Arbiter","Anywhere",playerID);
            DoActions(KillUnitAt(All, "100 + 1n Hyperion", "Anywhere", playerID))
            # (Line 21) if (v.P_LoopMain[playerID] == 0)
            DoActions(KillUnitAt(All, "130 + 1n Arbiter", "Anywhere", playerID))
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 22) {
                # (Line 23) trg.Shape_NxNSquare(playerID,1,"60 + 1n Siege",5, 96);
                trg.Shape_NxNSquare(playerID, 1, "60 + 1n Siege", 5, 96)
                # (Line 24) trg.Shape_NxNSquare(playerID, 1, "40 + 1n Gantrithor",5, 96);
                trg.Shape_NxNSquare(playerID, 1, "40 + 1n Gantrithor", 5, 96)
                # (Line 25) KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID);
                # (Line 26) Order("60 + 1n Siege",playerID,"Anywhere",Attack,v.P_LocationID[playerID]);
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID))
                # (Line 27) trg.Main_Wait(800);
                DoActions(Order("60 + 1n Siege", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(800)
                # (Line 28) }
                # (Line 29) else if (v.P_LoopMain[playerID] <= 7)
            if EUDElseIf()(v.P_LoopMain[playerID] <= 7):
                # (Line 30) {
                # (Line 31) trg.Shape_Line(playerID,1,"60 + 1n Danimoth",45 * v.P_LoopMain[playerID],5,64,0);
                trg.Shape_Line(playerID, 1, "60 + 1n Danimoth", 45 * v.P_LoopMain[playerID], 5, 64, 0)
                # (Line 32) trg.Shape_Line(playerID,1,"40 + 1n Mojo",45* v.P_LoopMain[playerID],5,64,0);
                trg.Shape_Line(playerID, 1, "40 + 1n Mojo", 45 * v.P_LoopMain[playerID], 5, 64, 0)
                # (Line 33) KillUnitAt(All,"40 + 1n Mojo","Anywhere",playerID);
                # (Line 34) trg.MoveLoc(v.P_UnitID[playerID],playerID,0,0);
                DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID))
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 35) Order("60 + 1n Danimoth",playerID,"Anywhere",Attack,v.P_LocationID[playerID]);
                # (Line 36) trg.Main_Wait(125);
                DoActions(Order("60 + 1n Danimoth", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(125)
                # (Line 37) }
                # (Line 40) else if (v.P_LoopMain[playerID] == 8)
            if EUDElseIf()(v.P_LoopMain[playerID] == 8):
                # (Line 41) {
                # (Line 42) trg.Shape_NxNSquare(playerID,1,"50 + 1n Battlecruiser",3,64);
                trg.Shape_NxNSquare(playerID, 1, "50 + 1n Battlecruiser", 3, 64)
                # (Line 43) trg.MoveLoc(v.P_UnitID[playerID],playerID,0,0);
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 44) Order("50 + 1n Battlecruiser",playerID,"Anywhere",Attack,v.P_LocationID[playerID]);
                # (Line 45) trg.Main_Wait(250);
                DoActions(Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(250)
                # (Line 46) }
                # (Line 47) else if(v.P_LoopMain[playerID] == 9)
            if EUDElseIf()(v.P_LoopMain[playerID] == 9):
                # (Line 48) {
                # (Line 49) trg.Main_Wait(750);
                trg.Main_Wait(750)
                # (Line 50) }
                # (Line 51) else if(v.P_LoopMain[playerID] == 10)
            if EUDElseIf()(v.P_LoopMain[playerID] == 10):
                # (Line 52) {
                # (Line 53) KillUnitAt(All,"60 + 1n Siege","Anywhere",playerID);
                # (Line 54) trg.Shape_NxNSquare(playerID,1,"60 + 1n Dragoon",5, 96);
                DoActions(KillUnitAt(All, "60 + 1n Siege", "Anywhere", playerID))
                trg.Shape_NxNSquare(playerID, 1, "60 + 1n Dragoon", 5, 96)
                # (Line 55) MoveUnit(All,"60 + 1n Dragoon", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                # (Line 56) trg.MoveLoc(v.P_UnitID[playerID],playerID,0,0);
                DoActions(MoveUnit(All, "60 + 1n Dragoon", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 57) Order("60 + 1n Dragoon",playerID,"Anywhere",Attack,v.P_LocationID[playerID]);
                # (Line 58) trg.Main_Wait(1000);
                DoActions(Order("60 + 1n Dragoon", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(1000)
                # (Line 59) }
                # (Line 60) else if(v.P_LoopMain[playerID] == 11)
            if EUDElseIf()(v.P_LoopMain[playerID] == 11):
                # (Line 61) {
                # (Line 62) trg.Shape_Dot(playerID,1,"130 + 1n Arbiter",0,0);
                trg.Shape_Dot(playerID, 1, "130 + 1n Arbiter", 0, 0)
                # (Line 63) Order("130 + 1n Arbiter",playerID,"Anywhere",Attack,v.P_LocationID[playerID]);
                # (Line 64) trg.Main_Wait(250);
                DoActions(Order("130 + 1n Arbiter", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(250)
                # (Line 65) }
                # (Line 66) else if(v.P_LoopMain[playerID] == 12)
            if EUDElseIf()(v.P_LoopMain[playerID] == 12):
                # (Line 67) {
                # (Line 68) trg.Shape_NxNSquare(playerID,1,"60 + 1n Danimoth",3,96);
                trg.Shape_NxNSquare(playerID, 1, "60 + 1n Danimoth", 3, 96)
                # (Line 69) trg.MoveLoc(v.P_UnitID[playerID],playerID,0,0);
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 70) Order("60 + 1n Danimoth",playerID,"Anywhere",Attack,v.P_LocationID[playerID]);
                # (Line 71) trg.Main_Wait(250);
                DoActions(Order("60 + 1n Danimoth", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(250)
                # (Line 72) }
                # (Line 73) else if(v.P_LoopMain[playerID] == 13)
            if EUDElseIf()(v.P_LoopMain[playerID] == 13):
                # (Line 74) {
                # (Line 75) trg.Shape_NxNSquare(playerID,1,"60 + 1n Danimoth",5,96);
                trg.Shape_NxNSquare(playerID, 1, "60 + 1n Danimoth", 5, 96)
                # (Line 76) trg.MoveLoc(v.P_UnitID[playerID],playerID,0,0);
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 77) Order("60 + 1n Danimoth",playerID,"Anywhere",Attack,v.P_LocationID[playerID]);
                # (Line 78) trg.Main_Wait(250);
                DoActions(Order("60 + 1n Danimoth", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(250)
                # (Line 79) }
                # (Line 80) else if(v.P_LoopMain[playerID] == 14)
            if EUDElseIf()(v.P_LoopMain[playerID] == 14):
                # (Line 81) {
                # (Line 82) trg.Main_Wait(250);
                trg.Main_Wait(250)
                # (Line 83) }
                # (Line 84) else if(v.P_LoopMain[playerID] <= 39)
            if EUDElseIf()(v.P_LoopMain[playerID] <= 39):
                # (Line 85) {
                # (Line 86) MoveLocation(v.P_LocationID[playerID],"60 + 1n Dragoon",playerID,"Anywhere");
                # (Line 87) RemoveUnitAt(1,"60 + 1n Dragoon","Anywhere",playerID);
                DoActions(MoveLocation(v.P_LocationID[playerID], "60 + 1n Dragoon", playerID, "Anywhere"))
                # (Line 88) trg.SkillUnit(playerID,1,"Protoss Observer");
                DoActions(RemoveUnitAt(1, "60 + 1n Dragoon", "Anywhere", playerID))
                trg.SkillUnit(playerID, 1, "Protoss Observer")
                # (Line 89) KillUnitAt(All,"Protoss Observer","Anywhere",playerID);
                # (Line 90) trg.Main_Wait(0);
                DoActions(KillUnitAt(All, "Protoss Observer", "Anywhere", playerID))
                trg.Main_Wait(0)
                # (Line 91) }
                # (Line 92) else if(v.P_LoopMain[playerID] == 40)
            if EUDElseIf()(v.P_LoopMain[playerID] == 40):
                # (Line 93) {
                # (Line 94) trg.Main_Wait(300);
                trg.Main_Wait(300)
                # (Line 95) }
                # (Line 96) else if(v.P_LoopMain[playerID] == 41)
            if EUDElseIf()(v.P_LoopMain[playerID] == 41):
                # (Line 97) {
                # (Line 98) trg.Shape_Dot(playerID,1,"Kakaru",0,192);
                trg.Shape_Dot(playerID, 1, "Kakaru", 0, 192)
                # (Line 99) trg.Shape_Dot(playerID,1,"Kakaru",196,64);
                trg.Shape_Dot(playerID, 1, "Kakaru", 196, 64)
                # (Line 100) trg.Shape_Dot(playerID,1,"Kakaru",-196,64);
                trg.Shape_Dot(playerID, 1, "Kakaru", -196, 64)
                # (Line 101) trg.Shape_Dot(playerID,1,"Kakaru",-128,-128);
                trg.Shape_Dot(playerID, 1, "Kakaru", -128, -128)
                # (Line 102) trg.Shape_Dot(playerID,1,"Kakaru",128,-128);
                trg.Shape_Dot(playerID, 1, "Kakaru", 128, -128)
                # (Line 103) trg.Shape_NxNSquare(playerID,1,"40 + 1n Gantrithor",5, 96);
                trg.Shape_NxNSquare(playerID, 1, "40 + 1n Gantrithor", 5, 96)
                # (Line 104) KillUnitAt(All,"40 + 1n Gantrithor","Anywhere",playerID);
                # (Line 105) trg.MoveLoc(v.P_UnitID[playerID],playerID,0,0);
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID))
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 106) Order("Kakaru",playerID,"Anywhere",Move,v.P_LocationID[playerID]);
                # (Line 107) trg.Main_Wait(1400);
                DoActions(Order("Kakaru", playerID, "Anywhere", Move, v.P_LocationID[playerID]))
                trg.Main_Wait(1400)
                # (Line 108) }
                # (Line 109) else if(v.P_LoopMain[playerID] <= 46)
            if EUDElseIf()(v.P_LoopMain[playerID] <= 46):
                # (Line 110) {
                # (Line 111) adv.Shape_NxNSquareAt(playerID,"Kakaru", 1, "50 + 1n Tank", 3, 64);
                adv.Shape_NxNSquareAt(playerID, "Kakaru", 1, "50 + 1n Tank", 3, 64)
                # (Line 112) adv.Shape_NxNSquareAt(playerID,"Kakaru", 1, "50 + 1n Battlecruiser", 3, 64);
                adv.Shape_NxNSquareAt(playerID, "Kakaru", 1, "50 + 1n Battlecruiser", 3, 64)
                # (Line 113) RemoveUnitAt(1,"Kakaru","Anywhere",playerID);
                # (Line 114) Order("50 + 1n Tank", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(RemoveUnitAt(1, "Kakaru", "Anywhere", playerID))
                # (Line 115) Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(Order("50 + 1n Tank", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 116) trg.Main_Wait(200);
                DoActions(Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(200)
                # (Line 117) }
                # (Line 119) else if(v.P_LoopMain[playerID] == 47)
            if EUDElseIf()(v.P_LoopMain[playerID] == 47):
                # (Line 120) {
                # (Line 121) KillUnitAt(All,"50 + 1n Tank","Anywhere",playerID);
                # (Line 122) KillUnitAt(All,"50 + 1n Battlecruiser","Anywhere",playerID);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                # (Line 123) trg.Shape_NxNSquare(playerID,1,"100 + 1n Hyperion",3,256);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                trg.Shape_NxNSquare(playerID, 1, "100 + 1n Hyperion", 3, 256)
                # (Line 124) trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0);
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 125) Order("100 + 1n Hyperion", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                # (Line 126) trg.Main_Wait(200);
                DoActions(Order("100 + 1n Hyperion", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(200)
                # (Line 127) }
                # (Line 129) else if(v.P_LoopMain[playerID] == 52)
            if EUDElseIf()(v.P_LoopMain[playerID] == 52):
                # (Line 130) {
                # (Line 131) trg.SkillEnd();
                trg.SkillEnd()
                # (Line 132) }
                # (Line 133) v.P_LoopMain[playerID] += 1;
            EUDEndIf()
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 134) }
            # (Line 135) }
        EUDEndIf()
        # (Line 136) }
    EUDEndIf()
