## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _RELIMP(path, mod_name):
    import inspect, pathlib, importlib.util
    p = pathlib.Path(inspect.getabsfile(inspect.currentframe())).parent
    for s in path.split("."):
        if s == "":  p = p.parent
        else:  p = p / s
    try:
        spec = importlib.util.spec_from_file_location(mod_name, p / (mod_name + ".py"))
        module = importlib.util.module_from_spec(spec)
        spec.loader.exec_module(module)
    except FileNotFoundError:
        loader = EPSLoader(mod_name, str(p / (mod_name + ".eps")))
        spec = importlib.util.spec_from_loader(mod_name, loader)
        module = loader.create_module(spec)
        loader.exec_module(module)
    return module

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import PluginVariables as msqcvar;
import PluginVariables as msqcvar
# (Line 2) import variable as v;
import variable as v
# (Line 3) import func.trig as trg;
from func import trig as trg
# (Line 4) import func.trigadv as adv;
from func import trigadv as adv
# (Line 5) import func.sound as s;
from func import sound as s
# (Line 7) var x = 0;
x = EUDCreateVariables(1)
_IGVA([x], lambda: [0])
# (Line 8) function main(playerID)
# (Line 9) {
@EUDFunc
def f_main(playerID):
    # (Line 10) trg.Buff_ShieldFix(1);
    trg.Buff_ShieldFix(1)
    # (Line 11) trg.Debuff_BanReturn();
    trg.Debuff_BanReturn()
    # (Line 12) if(v.P_LoopMain[playerID] >= 60)
    if EUDIf()(v.P_LoopMain[playerID] >= 60):
        # (Line 13) {
        # (Line 14) trg.Debuff_Stop();
        trg.Debuff_Stop()
        # (Line 15) }
        # (Line 16) if (v.P_WaitMain[playerID] == 0)
    EUDEndIf()
    if EUDIf()(v.P_WaitMain[playerID] == 0):
        # (Line 17) {
        # (Line 18) if (v.P_CountMain[playerID] == 0)
        if EUDIf()(v.P_CountMain[playerID] == 0):
            # (Line 19) {
            # (Line 20) RemoveUnitAt(All, 118, "Anywhere", playerID);
            # (Line 21) RemoveUnitAt(All, 120, "Anywhere", playerID);
            DoActions(RemoveUnitAt(All, 118, "Anywhere", playerID))
            # (Line 22) KillUnitAt(All,"50 + 1n Battlecruiser","Anywhere",playerID);
            DoActions(RemoveUnitAt(All, 120, "Anywhere", playerID))
            # (Line 23) KillUnitAt(All,"100 + 1n Hyperion","Anywhere",playerID);
            DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
            # (Line 24) KillUnitAt(All,"40 + 1n Goliath","Anywhere",playerID);
            DoActions(KillUnitAt(All, "100 + 1n Hyperion", "Anywhere", playerID))
            # (Line 25) if (v.P_LoopMain[playerID] == 0)
            DoActions(KillUnitAt(All, "40 + 1n Goliath", "Anywhere", playerID))
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 26) {
                # (Line 27) trg.Main_Wait(400);
                trg.Main_Wait(400)
                # (Line 28) }
                # (Line 30) else if (v.P_LoopMain[playerID] == 1)
            if EUDElseIf()(v.P_LoopMain[playerID] == 1):
                # (Line 31) {
                # (Line 32) trg.Shape_Dot(playerID,1,"40 + 1n Gantrithor",0,0);
                trg.Shape_Dot(playerID, 1, "40 + 1n Gantrithor", 0, 0)
                # (Line 33) KillUnitAt(All,"40 + 1n Gantrithor","Anywhere",playerID);
                # (Line 34) trg.Main_Wait(1000);
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID))
                trg.Main_Wait(1000)
                # (Line 35) }
                # (Line 36) else if (v.P_LoopMain[playerID] <= 37)
            if EUDElseIf()(v.P_LoopMain[playerID] <= 37):
                # (Line 37) {
                # (Line 38) trg.Shape_Line(playerID,1,"60 + 1n Archon",0 + 15*x,2,0+32*x,0);
                trg.Shape_Line(playerID, 1, "60 + 1n Archon", 0 + 15 * x, 2, 0 + 32 * x, 0)
                # (Line 39) trg.Shape_Line(playerID,1,"60 + 1n Archon",90+ 15*x,2,0+32*x,0);
                trg.Shape_Line(playerID, 1, "60 + 1n Archon", 90 + 15 * x, 2, 0 + 32 * x, 0)
                # (Line 40) trg.Shape_Line(playerID,1,"Protoss Dark Archon",45+ 15*x,2,0+32*x,0);
                trg.Shape_Line(playerID, 1, "Protoss Dark Archon", 45 + 15 * x, 2, 0 + 32 * x, 0)
                # (Line 41) trg.Shape_Line(playerID,1,"Protoss Dark Archon",135+ 15*x,2,0+32*x,0);
                trg.Shape_Line(playerID, 1, "Protoss Dark Archon", 135 + 15 * x, 2, 0 + 32 * x, 0)
                # (Line 42) trg.Shape_Line(playerID,1,118,0 + 15*x,2,0+32*x,0);
                trg.Shape_Line(playerID, 1, 118, 0 + 15 * x, 2, 0 + 32 * x, 0)
                # (Line 43) trg.Shape_Line(playerID,1,118,90+ 15*x,2,0+32*x,0);
                trg.Shape_Line(playerID, 1, 118, 90 + 15 * x, 2, 0 + 32 * x, 0)
                # (Line 44) trg.Shape_Line(playerID,1,120,45 + 15*x,2,0+32*x,0);
                trg.Shape_Line(playerID, 1, 120, 45 + 15 * x, 2, 0 + 32 * x, 0)
                # (Line 45) trg.Shape_Line(playerID,1,120,135+ 15*x,2,0+32*x,0);
                trg.Shape_Line(playerID, 1, 120, 135 + 15 * x, 2, 0 + 32 * x, 0)
                # (Line 46) KillUnitAt(All,"Protoss Dark Archon","Anywhere",playerID);
                # (Line 47) KillUnitAt(All,"60 + 1n Archon","Anywhere",playerID);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                # (Line 48) x += 1;
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                x.__iadd__(1)
                # (Line 49) trg.Main_Wait(80);
                trg.Main_Wait(80)
                # (Line 50) }
                # (Line 51) else if(v.P_LoopMain[playerID] == 38)
            if EUDElseIf()(v.P_LoopMain[playerID] == 38):
                # (Line 52) {
                # (Line 53) trg.Shape_NxNSquare(playerID,1,"60 + 1n Siege",8,96);
                trg.Shape_NxNSquare(playerID, 1, "60 + 1n Siege", 8, 96)
                # (Line 54) trg.Shape_NxNSquare(playerID,1,"130 + 1n Norad",8,96);
                trg.Shape_NxNSquare(playerID, 1, "130 + 1n Norad", 8, 96)
                # (Line 55) KillUnitAt(All,"130 + 1n Norad","Anywhere",playerID);
                # (Line 56) trg.Main_Wait(2000);
                DoActions(KillUnitAt(All, "130 + 1n Norad", "Anywhere", playerID))
                trg.Main_Wait(2000)
                # (Line 57) }
                # (Line 58) else if(v.P_LoopMain[playerID] <= 46)
            if EUDElseIf()(v.P_LoopMain[playerID] <= 46):
                # (Line 59) {
                # (Line 60) for(var i = 0; i < 8; i++)
                i = EUDVariable()
                i << (0)
                if EUDWhile()(i >= 8, neg=True):
                    def _t10():
                        i.__iadd__(1)
                    # (Line 61) {
                    # (Line 62) MoveLocation(v.P_LocationID[playerID],"60 + 1n Siege",playerID,"Anywhere");
                    # (Line 63) RemoveUnitAt(1,"60 + 1n Siege","Anywhere",playerID);
                    DoActions(MoveLocation(v.P_LocationID[playerID], "60 + 1n Siege", playerID, "Anywhere"))
                    # (Line 64) trg.SkillUnit(playerID,1,"50 + 1n Tank");
                    DoActions(RemoveUnitAt(1, "60 + 1n Siege", "Anywhere", playerID))
                    trg.SkillUnit(playerID, 1, "50 + 1n Tank")
                    # (Line 65) trg.SkillUnit(playerID,1,"80 + 1n Tank");
                    trg.SkillUnit(playerID, 1, "80 + 1n Tank")
                    # (Line 66) KillUnitAt(All,"80 + 1n Tank","Anywhere",playerID);
                    # (Line 67) Order("50 + 1n Tank", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                    DoActions(KillUnitAt(All, "80 + 1n Tank", "Anywhere", playerID))
                    # (Line 68) }
                    DoActions(Order("50 + 1n Tank", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                    # (Line 69) trg.Main_Wait(150);
                    EUDSetContinuePoint()
                    _t10()
                EUDEndWhile()
                trg.Main_Wait(150)
                # (Line 70) }
                # (Line 72) else if(v.P_LoopMain[playerID] <= 54)
            if EUDElseIf()(v.P_LoopMain[playerID] <= 54):
                # (Line 73) {
                # (Line 74) for(var y = 0; y < 8; y++)
                y = EUDVariable()
                y << (0)
                if EUDWhile()(y >= 8, neg=True):
                    def _t13():
                        y.__iadd__(1)
                    # (Line 75) {
                    # (Line 76) MoveLocation(v.P_LocationID[playerID],"50 + 1n Tank",playerID,"Anywhere");
                    # (Line 77) RemoveUnitAt(1,"50 + 1n Tank","Anywhere",playerID);
                    DoActions(MoveLocation(v.P_LocationID[playerID], "50 + 1n Tank", playerID, "Anywhere"))
                    # (Line 78) trg.SkillUnit(playerID,1,"80 + 1n Tank");
                    DoActions(RemoveUnitAt(1, "50 + 1n Tank", "Anywhere", playerID))
                    trg.SkillUnit(playerID, 1, "80 + 1n Tank")
                    # (Line 79) KillUnitAt(All,"80 + 1n Tank","Anywhere",playerID);
                    # (Line 80) trg.SkillUnit(playerID,1,"40 + 1n Firebat");
                    DoActions(KillUnitAt(All, "80 + 1n Tank", "Anywhere", playerID))
                    trg.SkillUnit(playerID, 1, "40 + 1n Firebat")
                    # (Line 81) trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0);
                    trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                    # (Line 82) Order("40 + 1n Firebat", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                    # (Line 83) }
                    DoActions(Order("40 + 1n Firebat", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                    # (Line 84) trg.Main_Wait(150);
                    EUDSetContinuePoint()
                    _t13()
                EUDEndWhile()
                trg.Main_Wait(150)
                # (Line 85) }
                # (Line 86) else if(v.P_LoopMain[playerID] == 55)
            if EUDElseIf()(v.P_LoopMain[playerID] == 55):
                # (Line 87) {
                # (Line 88) trg.Main_Wait(700);
                trg.Main_Wait(700)
                # (Line 89) }
                # (Line 90) else if(v.P_LoopMain[playerID] == 56)
            if EUDElseIf()(v.P_LoopMain[playerID] == 56):
                # (Line 91) {
                # (Line 92) KillUnitAt(All,"40 + 1n Firebat","Anywhere",playerID);
                # (Line 93) trg.Shape_NxNSquare(playerID,1,"50 + 1n Battlecruiser",5,64);
                DoActions(KillUnitAt(All, "40 + 1n Firebat", "Anywhere", playerID))
                trg.Shape_NxNSquare(playerID, 1, "50 + 1n Battlecruiser", 5, 64)
                # (Line 94) trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0);
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 95) Order("50 + 1n Battlecruiser",playerID,"Anywhere",Attack,v.P_LocationID[playerID]);
                # (Line 96) x = 0;
                DoActions(Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                x << (0)
                # (Line 97) trg.Main_Wait(600);
                trg.Main_Wait(600)
                # (Line 98) }
                # (Line 99) else if(v.P_LoopMain[playerID] == 57)
            if EUDElseIf()(v.P_LoopMain[playerID] == 57):
                # (Line 100) {
                # (Line 101) trg.Shape_NxNSquare(playerID,1,"50 + 1n Battlecruiser",7,64);
                trg.Shape_NxNSquare(playerID, 1, "50 + 1n Battlecruiser", 7, 64)
                # (Line 102) trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0);
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 103) Order("50 + 1n Battlecruiser",playerID,"Anywhere",Attack,v.P_LocationID[playerID]);
                # (Line 104) trg.Main_Wait(600);
                DoActions(Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(600)
                # (Line 105) }
                # (Line 106) else if(v.P_LoopMain[playerID] == 58)
            if EUDElseIf()(v.P_LoopMain[playerID] == 58):
                # (Line 107) {
                # (Line 108) trg.Shape_NxNSquare(playerID,1,"50 + 1n Battlecruiser",9,64);
                trg.Shape_NxNSquare(playerID, 1, "50 + 1n Battlecruiser", 9, 64)
                # (Line 109) trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0);
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 110) Order("50 + 1n Battlecruiser",playerID,"Anywhere",Attack,v.P_LocationID[playerID]);
                # (Line 111) trg.Main_Wait(600);
                DoActions(Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(600)
                # (Line 112) }
                # (Line 113) else if(v.P_LoopMain[playerID] == 59)
            if EUDElseIf()(v.P_LoopMain[playerID] == 59):
                # (Line 114) {
                # (Line 115) trg.Main_Wait(1300);
                trg.Main_Wait(1300)
                # (Line 116) }
                # (Line 117) else if(v.P_LoopMain[playerID] == 60)
            if EUDElseIf()(v.P_LoopMain[playerID] == 60):
                # (Line 118) {
                # (Line 119) trg.Shape_Double(playerID,1,"60 + 3n Siege",384,0);
                trg.Shape_Double(playerID, 1, "60 + 3n Siege", 384, 0)
                # (Line 120) trg.Shape_Double(playerID,1,"60 + 3n Siege",0,384);
                trg.Shape_Double(playerID, 1, "60 + 3n Siege", 0, 384)
                # (Line 121) trg.Shape_Double(playerID,1,"60 + 1n Siege",352,0);
                trg.Shape_Double(playerID, 1, "60 + 1n Siege", 352, 0)
                # (Line 122) trg.Shape_Double(playerID,1,"60 + 1n Siege",0,352);
                trg.Shape_Double(playerID, 1, "60 + 1n Siege", 0, 352)
                # (Line 123) trg.Shape_Double(playerID,1,"60 + 1n Siege",416,0);
                trg.Shape_Double(playerID, 1, "60 + 1n Siege", 416, 0)
                # (Line 124) trg.Shape_Double(playerID,1,"60 + 1n Siege",0,416);
                trg.Shape_Double(playerID, 1, "60 + 1n Siege", 0, 416)
                # (Line 125) trg.Shape_Double(playerID,1,"60 + 1n Siege",384,32);
                trg.Shape_Double(playerID, 1, "60 + 1n Siege", 384, 32)
                # (Line 126) trg.Shape_Double(playerID,1,"60 + 1n Siege",32,384);
                trg.Shape_Double(playerID, 1, "60 + 1n Siege", 32, 384)
                # (Line 127) trg.Shape_Double(playerID,1,"60 + 1n Siege",384,-32);
                trg.Shape_Double(playerID, 1, "60 + 1n Siege", 384, -32)
                # (Line 128) trg.Shape_Double(playerID,1,"60 + 1n Siege",-32,384);
                trg.Shape_Double(playerID, 1, "60 + 1n Siege", -32, 384)
                # (Line 129) trg.Shape_Double(playerID,1,"60 + 1n Siege",352,32);
                trg.Shape_Double(playerID, 1, "60 + 1n Siege", 352, 32)
                # (Line 130) trg.Shape_Double(playerID,1,"60 + 1n Siege",32,352);
                trg.Shape_Double(playerID, 1, "60 + 1n Siege", 32, 352)
                # (Line 131) trg.Shape_Double(playerID,1,"60 + 1n Siege",352,-32);
                trg.Shape_Double(playerID, 1, "60 + 1n Siege", 352, -32)
                # (Line 132) trg.Shape_Double(playerID,1,"60 + 1n Siege",-32,352);
                trg.Shape_Double(playerID, 1, "60 + 1n Siege", -32, 352)
                # (Line 133) trg.Shape_Double(playerID,1,"60 + 1n Siege",416,32);
                trg.Shape_Double(playerID, 1, "60 + 1n Siege", 416, 32)
                # (Line 134) trg.Shape_Double(playerID,1,"60 + 1n Siege",32,416);
                trg.Shape_Double(playerID, 1, "60 + 1n Siege", 32, 416)
                # (Line 135) trg.Shape_Double(playerID,1,"60 + 1n Siege",416,-32);
                trg.Shape_Double(playerID, 1, "60 + 1n Siege", 416, -32)
                # (Line 136) trg.Shape_Double(playerID,1,"60 + 1n Siege",-32,416);
                trg.Shape_Double(playerID, 1, "60 + 1n Siege", -32, 416)
                # (Line 139) trg.Shape_Double(playerID,1,"60 + 3n Siege",192,192);
                trg.Shape_Double(playerID, 1, "60 + 3n Siege", 192, 192)
                # (Line 140) trg.Shape_Double(playerID,1,"60 + 3n Siege",-192,192);
                trg.Shape_Double(playerID, 1, "60 + 3n Siege", -192, 192)
                # (Line 141) trg.Shape_Double(playerID,1,"60 + 1n Siege",160,192);
                trg.Shape_Double(playerID, 1, "60 + 1n Siege", 160, 192)
                # (Line 142) trg.Shape_Double(playerID,1,"60 + 1n Siege",-160,192);
                trg.Shape_Double(playerID, 1, "60 + 1n Siege", -160, 192)
                # (Line 143) trg.Shape_Double(playerID,1,"60 + 1n Siege",224,192);
                trg.Shape_Double(playerID, 1, "60 + 1n Siege", 224, 192)
                # (Line 144) trg.Shape_Double(playerID,1,"60 + 1n Siege",-224,192);
                trg.Shape_Double(playerID, 1, "60 + 1n Siege", -224, 192)
                # (Line 145) trg.Shape_Double(playerID,1,"60 + 1n Siege",192,160);
                trg.Shape_Double(playerID, 1, "60 + 1n Siege", 192, 160)
                # (Line 146) trg.Shape_Double(playerID,1,"60 + 1n Siege",-192,160);
                trg.Shape_Double(playerID, 1, "60 + 1n Siege", -192, 160)
                # (Line 147) trg.Shape_Double(playerID,1,"60 + 1n Siege",160,160);
                trg.Shape_Double(playerID, 1, "60 + 1n Siege", 160, 160)
                # (Line 148) trg.Shape_Double(playerID,1,"60 + 1n Siege",-160,160);
                trg.Shape_Double(playerID, 1, "60 + 1n Siege", -160, 160)
                # (Line 149) trg.Shape_Double(playerID,1,"60 + 1n Siege",224,160);
                trg.Shape_Double(playerID, 1, "60 + 1n Siege", 224, 160)
                # (Line 150) trg.Shape_Double(playerID,1,"60 + 1n Siege",-224,160);
                trg.Shape_Double(playerID, 1, "60 + 1n Siege", -224, 160)
                # (Line 151) trg.Shape_Double(playerID,1,"60 + 1n Siege",192,224);
                trg.Shape_Double(playerID, 1, "60 + 1n Siege", 192, 224)
                # (Line 152) trg.Shape_Double(playerID,1,"60 + 1n Siege",-192,224);
                trg.Shape_Double(playerID, 1, "60 + 1n Siege", -192, 224)
                # (Line 153) trg.Shape_Double(playerID,1,"60 + 1n Siege",160,224);
                trg.Shape_Double(playerID, 1, "60 + 1n Siege", 160, 224)
                # (Line 154) trg.Shape_Double(playerID,1,"60 + 1n Siege",-160,224);
                trg.Shape_Double(playerID, 1, "60 + 1n Siege", -160, 224)
                # (Line 155) trg.Shape_Double(playerID,1,"60 + 1n Siege",224,224);
                trg.Shape_Double(playerID, 1, "60 + 1n Siege", 224, 224)
                # (Line 156) trg.Shape_Double(playerID,1,"60 + 1n Siege",-224,224);
                trg.Shape_Double(playerID, 1, "60 + 1n Siege", -224, 224)
                # (Line 158) trg.Shape_NxNSquare(playerID,1,"130 + 1n Norad",10,64);
                trg.Shape_NxNSquare(playerID, 1, "130 + 1n Norad", 10, 64)
                # (Line 159) KillUnitAt(All,"130 + 1n Norad","Anywhere",playerID);
                # (Line 160) trg.Main_Wait(2500);
                DoActions(KillUnitAt(All, "130 + 1n Norad", "Anywhere", playerID))
                trg.Main_Wait(2500)
                # (Line 161) }
                # (Line 162) else if(v.P_LoopMain[playerID] <= 85)
            if EUDElseIf()(v.P_LoopMain[playerID] <= 85):
                # (Line 163) {
                # (Line 164) trg.Shape_Line(playerID,1,"60 + 1n Archon",0+15*x,2,512,0);
                trg.Shape_Line(playerID, 1, "60 + 1n Archon", 0 + 15 * x, 2, 512, 0)
                # (Line 165) trg.Shape_Line(playerID,1,"60 + 1n Archon",90+15*x,2,512,0);
                trg.Shape_Line(playerID, 1, "60 + 1n Archon", 90 + 15 * x, 2, 512, 0)
                # (Line 166) trg.Shape_Line(playerID,1,"80 + 1n Tom Kazansky",0+15*x,2,512,0);
                trg.Shape_Line(playerID, 1, "80 + 1n Tom Kazansky", 0 + 15 * x, 2, 512, 0)
                # (Line 167) trg.Shape_Line(playerID,1,"80 + 1n Artanis",90+15*x,2,512,0);
                trg.Shape_Line(playerID, 1, "80 + 1n Artanis", 90 + 15 * x, 2, 512, 0)
                # (Line 168) KillUnitAt(All,"60 + 1n Archon","Anywhere",playerID);
                # (Line 169) trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 170) Order("80 + 1n Tom Kazansky",playerID,"Anywhere",Attack,v.P_LocationID[playerID]);
                # (Line 171) Order("80 + 1n Artanis",playerID,"Anywhere",Attack,v.P_LocationID[playerID]);
                DoActions(Order("80 + 1n Tom Kazansky", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 172) x += 1;
                DoActions(Order("80 + 1n Artanis", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                x.__iadd__(1)
                # (Line 173) trg.Main_Wait(80);
                trg.Main_Wait(80)
                # (Line 174) }
                # (Line 175) else if(v.P_LoopMain[playerID] <= 105)
            if EUDElseIf()(v.P_LoopMain[playerID] <= 105):
                # (Line 176) {
                # (Line 177) RemoveUnitAt(All,"80 + 1n Artanis","Anywhere",playerID);
                # (Line 178) RemoveUnitAt(All,"80 + 1n Tom Kazansky","Anywhere",playerID);
                DoActions(RemoveUnitAt(All, "80 + 1n Artanis", "Anywhere", playerID))
                # (Line 179) KillUnitAt(All,"60 + 3n Siege","Anywhere",playerID);
                DoActions(RemoveUnitAt(All, "80 + 1n Tom Kazansky", "Anywhere", playerID))
                # (Line 180) KillUnitAt(All,"60 + 1n Siege","Anywhere",playerID);
                DoActions(KillUnitAt(All, "60 + 3n Siege", "Anywhere", playerID))
                # (Line 182) if (v.P_CountSub1[playerID] == 0)
                DoActions(KillUnitAt(All, "60 + 1n Siege", "Anywhere", playerID))
                if EUDIf()(v.P_CountSub1[playerID] == 0):
                    # (Line 183) {
                    # (Line 184) trg.Shape_NxNSquare(playerID,1,"50 + 1n Battlecruiser",9,64);
                    trg.Shape_NxNSquare(playerID, 1, "50 + 1n Battlecruiser", 9, 64)
                    # (Line 185) trg.MoveLoc(v.P_UnitID[playerID],playerID,0,0);
                    trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                    # (Line 186) Order("50 + 1n Battlecruiser",playerID,"Anywhere",Attack,v.P_LocationID[playerID]);
                    # (Line 187) }
                    DoActions(Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                    # (Line 188) else
                    # (Line 189) {
                if EUDElse()():
                    # (Line 190) trg.Shape_NxNSquare(playerID,1,"100 + 1n Hyperion",9,64);
                    trg.Shape_NxNSquare(playerID, 1, "100 + 1n Hyperion", 9, 64)
                    # (Line 191) trg.MoveLoc(v.P_UnitID[playerID],playerID,0,0);
                    trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                    # (Line 192) Order("100 + 1n Hyperion",playerID,"Anywhere",Attack,v.P_LocationID[playerID]);
                    # (Line 193) }
                    DoActions(Order("100 + 1n Hyperion", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                    # (Line 194) trg.Main_Wait(125);
                EUDEndIf()
                trg.Main_Wait(125)
                # (Line 195) }
                # (Line 196) else if(v.P_LoopMain[playerID] == 106)
            if EUDElseIf()(v.P_LoopMain[playerID] == 106):
                # (Line 197) {
                # (Line 198) x = 0;
                x << (0)
                # (Line 199) SetSwitch("UiltimateSwitch", Clear);
                # (Line 200) trg.SkillEnd();
                DoActions(SetSwitch("UiltimateSwitch", Clear))
                trg.SkillEnd()
                # (Line 201) }
                # (Line 202) v.P_LoopMain[playerID] += 1;
            EUDEndIf()
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 203) }
            # (Line 204) }
        EUDEndIf()
        # (Line 205) }
    EUDEndIf()
