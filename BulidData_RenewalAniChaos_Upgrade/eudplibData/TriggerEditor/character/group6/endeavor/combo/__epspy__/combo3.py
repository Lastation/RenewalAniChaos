## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _RELIMP(path, mod_name):
    import inspect, pathlib, importlib.util
    p = pathlib.Path(inspect.getabsfile(inspect.currentframe())).parent
    for s in path.split("."):
        if s == "":  p = p.parent
        else:  p = p / s
    try:
        spec = importlib.util.spec_from_file_location(mod_name, p / (mod_name + ".py"))
        module = importlib.util.module_from_spec(spec)
        spec.loader.exec_module(module)
    except FileNotFoundError:
        loader = EPSLoader(mod_name, str(p / (mod_name + ".eps")))
        spec = importlib.util.spec_from_loader(mod_name, loader)
        module = loader.create_module(spec)
        loader.exec_module(module)
    return module

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import PluginVariables as msqcvar;
import PluginVariables as msqcvar
# (Line 2) import variable as v;
import variable as v
# (Line 3) import func.trig as trg;
from func import trig as trg
# (Line 4) import func.sound as s;
from func import sound as s
# (Line 6) var x = 0;
x = EUDCreateVariables(1)
_IGVA([x], lambda: [0])
# (Line 7) function main(playerID)
# (Line 8) {
@EUDFunc
def f_main(playerID):
    # (Line 9) trg.Debuff_Stop();
    trg.Debuff_Stop()
    # (Line 10) trg.Debuff_BanReturn();
    trg.Debuff_BanReturn()
    # (Line 12) if (v.P_WaitMain[playerID] == 0)
    if EUDIf()(v.P_WaitMain[playerID] == 0):
        # (Line 13) {
        # (Line 14) MoveUnit(All,"50 + 1n Tank", playerID, "Anywhere", "[Skill]HoldPosition");
        # (Line 15) if(v.P_CountMain[playerID] == 0)
        DoActions(MoveUnit(All, "50 + 1n Tank", playerID, "Anywhere", "[Skill]HoldPosition"))
        if EUDIf()(v.P_CountMain[playerID] == 0):
            # (Line 16) {
            # (Line 17) KillUnitAt(All,"60 + 1n Danimoth","Anywhere",playerID);
            # (Line 18) KillUnitAt(All,"50 + 1n Battlecruiser","Anywhere",playerID);
            DoActions(KillUnitAt(All, "60 + 1n Danimoth", "Anywhere", playerID))
            # (Line 19) KillUnitAt(All,"40 + 1n Wraith","Anywhere",playerID);
            DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
            # (Line 20) if (v.P_LoopMain[playerID] <= 2)
            DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
            if EUDIf()(v.P_LoopMain[playerID] <= 2):
                # (Line 21) {
                # (Line 22) trg.Shape_Square(playerID,1,"40 + 1n Firebat",64+48*x,0+48*x);
                trg.Shape_Square(playerID, 1, "40 + 1n Firebat", 64 + 48 * x, 0 + 48 * x)
                # (Line 23) trg.Shape_Square(playerID,1,"60 + 1n Danimoth",64+48*x,0+48*x);
                trg.Shape_Square(playerID, 1, "60 + 1n Danimoth", 64 + 48 * x, 0 + 48 * x)
                # (Line 24) trg.Shape_Square(playerID,1,"50 + 1n Tank",64+48*x,0+48*x);
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", 64 + 48 * x, 0 + 48 * x)
                # (Line 25) trg.MoveLoc(v.P_UnitID[playerID], playerID,0,0);
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 26) KillUnitAt(All,"50 + 1n Tank","Anywhere",playerID);
                # (Line 27) MoveUnit(All,"40 + 1n Firebat", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                # (Line 28) Order("40 + 1n Firebat",playerID,"Anywhere",Attack,v.P_LocationID[playerID]);
                DoActions(MoveUnit(All, "40 + 1n Firebat", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                # (Line 29) Order("60 + 1n Danimoth",playerID,"Anywhere",Attack,v.P_LocationID[playerID]);
                DoActions(Order("40 + 1n Firebat", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 30) x += 1;
                DoActions(Order("60 + 1n Danimoth", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                x.__iadd__(1)
                # (Line 31) trg.Main_Wait(125);
                trg.Main_Wait(125)
                # (Line 32) }
                # (Line 33) if (v.P_LoopMain[playerID] <= 4)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] <= 4):
                # (Line 34) {
                # (Line 35) trg.Shape_Square(playerID,1,"60 + 1n Danimoth",252-48*x,0+48*x);
                trg.Shape_Square(playerID, 1, "60 + 1n Danimoth", 252 - 48 * x, 0 + 48 * x)
                # (Line 36) trg.Shape_Square(playerID,1,"50 + 1n Tank",252-48*x,0+48*x);
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", 252 - 48 * x, 0 + 48 * x)
                # (Line 37) trg.MoveLoc(v.P_UnitID[playerID], playerID,0,0);
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 38) KillUnitAt(All,"50 + 1n Tank","Anywhere",playerID);
                # (Line 39) Order("60 + 1n Danimoth",playerID,"Anywhere",Attack,v.P_LocationID[playerID]);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                # (Line 40) x += 1;
                DoActions(Order("60 + 1n Danimoth", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                x.__iadd__(1)
                # (Line 41) trg.Main_Wait(125);
                trg.Main_Wait(125)
                # (Line 42) }
                # (Line 43) else if (v.P_LoopMain[playerID] == 5)
            if EUDElseIf()(v.P_LoopMain[playerID] == 5):
                # (Line 44) {
                # (Line 45) x = 0;
                x << (0)
                # (Line 46) trg.Shape_NxNSquare(playerID,1,"50 + 1n Battlecruiser",3,64);
                trg.Shape_NxNSquare(playerID, 1, "50 + 1n Battlecruiser", 3, 64)
                # (Line 47) trg.MoveLoc(v.P_UnitID[playerID], playerID,0,0);
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 48) Order("50 + 1n Battlecruiser",playerID,"Anywhere",Attack,v.P_LocationID[playerID]);
                # (Line 49) trg.Main_Wait(250);
                DoActions(Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(250)
                # (Line 50) }
                # (Line 51) else if (v.P_LoopMain[playerID] == 6)
            if EUDElseIf()(v.P_LoopMain[playerID] == 6):
                # (Line 52) {
                # (Line 53) KillUnitAt(All,"50 + 1n Battlecruiser","Anywhere",playerID);
                # (Line 54) trg.Main_Wait(750);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                trg.Main_Wait(750)
                # (Line 55) }
                # (Line 56) else if (v.P_LoopMain[playerID] <= 18)
            if EUDElseIf()(v.P_LoopMain[playerID] <= 18):
                # (Line 57) {
                # (Line 58) trg.Shape_Line(playerID,1,"Protoss Dark Archon",90+15*x,2,256,0);
                trg.Shape_Line(playerID, 1, "Protoss Dark Archon", 90 + 15 * x, 2, 256, 0)
                # (Line 59) trg.Shape_Line(playerID,1,"40 + 1n Gantrithor",90+15*x,2,256,0);
                trg.Shape_Line(playerID, 1, "40 + 1n Gantrithor", 90 + 15 * x, 2, 256, 0)
                # (Line 60) trg.Shape_Line(playerID,1,"60 + 1n Archon",0+15*x,2,256,0);
                trg.Shape_Line(playerID, 1, "60 + 1n Archon", 0 + 15 * x, 2, 256, 0)
                # (Line 61) trg.Shape_Line(playerID,1,"40 + 1n Gantrithor",0+15*x,2,256,0);
                trg.Shape_Line(playerID, 1, "40 + 1n Gantrithor", 0 + 15 * x, 2, 256, 0)
                # (Line 62) KillUnitAt(All,"Protoss Dark Archon","Anywhere",playerID);
                # (Line 63) KillUnitAt(All,"60 + 1n Archon","Anywhere",playerID);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                # (Line 64) KillUnitAt(All,"40 + 1n Gantrithor","Anywhere",playerID);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                # (Line 65) x += 1;
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID))
                x.__iadd__(1)
                # (Line 66) trg.Main_Wait(125);
                trg.Main_Wait(125)
                # (Line 67) }
                # (Line 68) else if(v.P_LoopMain[playerID] == 19)
            if EUDElseIf()(v.P_LoopMain[playerID] == 19):
                # (Line 69) {
                # (Line 70) trg.Shape_NxNSquare(playerID,1,"50 + 1n Battlecruiser",4,128);
                trg.Shape_NxNSquare(playerID, 1, "50 + 1n Battlecruiser", 4, 128)
                # (Line 71) trg.MoveLoc(v.P_UnitID[playerID], playerID,0,0);
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 72) Order("50 + 1n Battlecruiser",playerID,"Anywhere",Attack,v.P_LocationID[playerID]);
                # (Line 73) trg.Main_Wait(200);
                DoActions(Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(200)
                # (Line 74) }
                # (Line 75) else if(v.P_LoopMain[playerID] == 20)
            if EUDElseIf()(v.P_LoopMain[playerID] == 20):
                # (Line 76) {
                # (Line 77) trg.Main_Wait(300);
                trg.Main_Wait(300)
                # (Line 78) }
                # (Line 79) else if(v.P_LoopMain[playerID] == 21)
            if EUDElseIf()(v.P_LoopMain[playerID] == 21):
                # (Line 80) {
                # (Line 81) trg.Shape_NxNSquare(playerID,1,"50 + 1n Battlecruiser",4,128);
                trg.Shape_NxNSquare(playerID, 1, "50 + 1n Battlecruiser", 4, 128)
                # (Line 82) trg.MoveLoc(v.P_UnitID[playerID], playerID,0,0);
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 83) Order("50 + 1n Battlecruiser",playerID,"Anywhere",Attack,v.P_LocationID[playerID]);
                # (Line 84) trg.Main_Wait(200);
                DoActions(Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(200)
                # (Line 85) }
                # (Line 86) else if(v.P_LoopMain[playerID] == 22)
            if EUDElseIf()(v.P_LoopMain[playerID] == 22):
                # (Line 87) {
                # (Line 88) trg.Main_Wait(300);
                trg.Main_Wait(300)
                # (Line 89) }
                # (Line 90) else if(v.P_LoopMain[playerID] == 23)
            if EUDElseIf()(v.P_LoopMain[playerID] == 23):
                # (Line 91) {
                # (Line 92) KillUnitAt(All,"40 + 1n Firebat","Anywhere",playerID);
                # (Line 93) KillUnitAt(All,"50 + 1n Tank","Anywhere",playerID);
                DoActions(KillUnitAt(All, "40 + 1n Firebat", "Anywhere", playerID))
                # (Line 94) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 95) }
                # (Line 96) else if(v.P_LoopMain[playerID] == 24)
            if EUDElseIf()(v.P_LoopMain[playerID] == 24):
                # (Line 97) {
                # (Line 98) x = 0;
                x << (0)
                # (Line 99) trg.Main_Wait(900);
                trg.Main_Wait(900)
                # (Line 100) }
                # (Line 101) else if(v.P_LoopMain[playerID] == 25)
            if EUDElseIf()(v.P_LoopMain[playerID] == 25):
                # (Line 102) {
                # (Line 103) trg.Shape_Edge(playerID,1,"40 + 1n Firebat",45,5,96);
                trg.Shape_Edge(playerID, 1, "40 + 1n Firebat", 45, 5, 96)
                # (Line 104) trg.Shape_Edge(playerID,1,"Protoss Dark Templar",45,5,96);
                trg.Shape_Edge(playerID, 1, "Protoss Dark Templar", 45, 5, 96)
                # (Line 105) trg.MoveLoc(v.P_UnitID[playerID], playerID,0,0);
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 106) Order("40 + 1n Firebat",playerID,"Anywhere",Attack,v.P_LocationID[playerID]);
                # (Line 107) KillUnitAt(All,"Protoss Dark Templar","Anywhere",playerID);
                DoActions(Order("40 + 1n Firebat", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 108) trg.Main_Wait(2300);
                DoActions(KillUnitAt(All, "Protoss Dark Templar", "Anywhere", playerID))
                trg.Main_Wait(2300)
                # (Line 109) }
                # (Line 110) else if(v.P_LoopMain[playerID] == 26)
            if EUDElseIf()(v.P_LoopMain[playerID] == 26):
                # (Line 111) {
                # (Line 112) trg.Shape_Edge(playerID,1,"50 + 1n Tank",45,7,160);
                trg.Shape_Edge(playerID, 1, "50 + 1n Tank", 45, 7, 160)
                # (Line 113) trg.Shape_Edge(playerID,1,"40 + 1n Wraith",45,7,160);
                trg.Shape_Edge(playerID, 1, "40 + 1n Wraith", 45, 7, 160)
                # (Line 114) trg.Shape_Edge(playerID,1,"40 + 1n Gantrithor",45,7,160);
                trg.Shape_Edge(playerID, 1, "40 + 1n Gantrithor", 45, 7, 160)
                # (Line 115) KillUnitAt(All,"40 + 1n Gantrithor","Anywhere",playerID);
                # (Line 116) trg.MoveLoc(v.P_UnitID[playerID], playerID,0,0);
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID))
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 117) Order("40 + 1n Wraith",playerID,"Anywhere",Attack,v.P_LocationID[playerID]);
                # (Line 118) trg.Main_Wait(200);
                DoActions(Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(200)
                # (Line 119) }
                # (Line 120) else if(v.P_LoopMain[playerID] == 27)
            if EUDElseIf()(v.P_LoopMain[playerID] == 27):
                # (Line 121) {
                # (Line 122) trg.Main_Wait(1300);
                trg.Main_Wait(1300)
                # (Line 123) }
                # (Line 124) else if(v.P_LoopMain[playerID] == 28)
            if EUDElseIf()(v.P_LoopMain[playerID] == 28):
                # (Line 125) {
                # (Line 126) trg.Shape_Edge(playerID,1,"50 + 1n Tank",45,9,224);
                trg.Shape_Edge(playerID, 1, "50 + 1n Tank", 45, 9, 224)
                # (Line 127) trg.Shape_Edge(playerID,1,"50 + 1n Battlecruiser",45,9,224);
                trg.Shape_Edge(playerID, 1, "50 + 1n Battlecruiser", 45, 9, 224)
                # (Line 128) trg.MoveLoc(v.P_UnitID[playerID], playerID,0,0);
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 129) Order("50 + 1n Battlecruiser",playerID,"Anywhere",Attack,v.P_LocationID[playerID]);
                # (Line 130) trg.Main_Wait(200);
                DoActions(Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(200)
                # (Line 131) }
                # (Line 132) else if(v.P_LoopMain[playerID] == 29)
            if EUDElseIf()(v.P_LoopMain[playerID] == 29):
                # (Line 133) {
                # (Line 134) trg.Main_Wait(1000);
                trg.Main_Wait(1000)
                # (Line 135) }
                # (Line 136) else if(v.P_LoopMain[playerID] == 30)
            if EUDElseIf()(v.P_LoopMain[playerID] == 30):
                # (Line 137) {
                # (Line 138) KillUnitAt(All,"40 + 1n Firebat","Anywhere",playerID);
                # (Line 139) KillUnitAt(All,"50 + 1n Tank","Anywhere",playerID);
                DoActions(KillUnitAt(All, "40 + 1n Firebat", "Anywhere", playerID))
                # (Line 140) trg.SkillEnd();
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                trg.SkillEnd()
                # (Line 141) }
                # (Line 142) v.P_LoopMain[playerID] += 1;
            EUDEndIf()
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 143) }
            # (Line 144) }
        EUDEndIf()
        # (Line 145) }
    EUDEndIf()
