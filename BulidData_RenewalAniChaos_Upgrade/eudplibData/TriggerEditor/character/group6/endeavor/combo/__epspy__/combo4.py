## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import PluginVariables as msqcvar;
import PluginVariables as msqcvar
# (Line 2) import variable as v;
import variable as v
# (Line 3) import func.trig as trg;
from func import trig as trg
# (Line 4) import func.sound as s;
from func import sound as s
# (Line 6) var x = 0;
x = EUDCreateVariables(1)
_IGVA([x], lambda: [0])
# (Line 7) function main(playerID)
# (Line 8) {
@EUDFunc
def f_main(playerID):
    # (Line 9) trg.Debuff_Stop();
    trg.Debuff_Stop()
    # (Line 10) trg.Debuff_BanReturn();
    trg.Debuff_BanReturn()
    # (Line 12) if (v.P_WaitMain[playerID] == 0)
    if EUDIf()(v.P_WaitMain[playerID] == 0):
        # (Line 13) {
        # (Line 14) if(v.P_CountMain[playerID] == 0)
        if EUDIf()(v.P_CountMain[playerID] == 0):
            # (Line 15) {
            # (Line 16) RemoveUnitAt(All,"60 + 1n Danimoth","Anywhere",playerID);
            # (Line 17) KillUnitAt(All,"60 + 1n Archon","Anywhere",playerID);
            DoActions(RemoveUnitAt(All, "60 + 1n Danimoth", "Anywhere", playerID))
            # (Line 18) if (v.P_LoopMain[playerID] <= 6)
            DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
            if EUDIf()(v.P_LoopMain[playerID] <= 6):
                # (Line 19) {
                # (Line 20) trg.Shape_Edge(playerID,1,"Protoss Dark Archon",45,3+x,64+32*x);
                trg.Shape_Edge(playerID, 1, "Protoss Dark Archon", 45, 3 + x, 64 + 32 * x)
                # (Line 21) KillUnitAt(All,"Protoss Dark Archon","Anywhere",playerID);
                # (Line 22) x += 1;
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                x.__iadd__(1)
                # (Line 23) trg.Main_Wait(80);
                trg.Main_Wait(80)
                # (Line 24) }
                # (Line 25) if (v.P_LoopMain[playerID] == 7)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] == 7):
                # (Line 26) {
                # (Line 27) trg.Shape_Square(playerID,1,"50 + 1n Battlecruiser",256,256);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 256, 256)
                # (Line 28) trg.Shape_Square(playerID,1,"50 + 1n Battlecruiser",256,192);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 256, 192)
                # (Line 29) trg.Shape_Square(playerID,1,"50 + 1n Battlecruiser",192,256);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 192, 256)
                # (Line 30) trg.Shape_Square(playerID,1,"50 + 1n Battlecruiser",192,192);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 192, 192)
                # (Line 32) trg.Shape_Square(playerID,1,"50 + 1n Tank",256,256);
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", 256, 256)
                # (Line 33) trg.Shape_Square(playerID,1,"50 + 1n Tank",256,192);
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", 256, 192)
                # (Line 34) trg.Shape_Square(playerID,1,"50 + 1n Tank",192,256);
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", 192, 256)
                # (Line 35) trg.Shape_Square(playerID,1,"50 + 1n Tank",192,192);
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", 192, 192)
                # (Line 37) trg.Shape_Square(playerID,1,"50 + 1n Tank",256,32);
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", 256, 32)
                # (Line 38) trg.Shape_Square(playerID,1,"50 + 1n Tank",256,-32);
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", 256, -32)
                # (Line 39) trg.Shape_Square(playerID,1,"50 + 1n Tank",192,32);
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", 192, 32)
                # (Line 40) trg.Shape_Square(playerID,1,"50 + 1n Tank",192,-32);
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", 192, -32)
                # (Line 42) trg.Shape_Square(playerID,1,"50 + 1n Battlecruiser",256,32);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 256, 32)
                # (Line 43) trg.Shape_Square(playerID,1,"50 + 1n Battlecruiser",256,-32);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 256, -32)
                # (Line 44) trg.Shape_Square(playerID,1,"50 + 1n Battlecruiser",192,32);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 192, 32)
                # (Line 45) trg.Shape_Square(playerID,1,"50 + 1n Battlecruiser",192,-32);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 192, -32)
                # (Line 47) trg.Shape_NxNSquare(playerID,1,"40 + 1n Gantrithor",6,64);
                trg.Shape_NxNSquare(playerID, 1, "40 + 1n Gantrithor", 6, 64)
                # (Line 48) trg.Shape_NxNSquare(playerID,1,"40 + 1n Firebat",4,160);
                trg.Shape_NxNSquare(playerID, 1, "40 + 1n Firebat", 4, 160)
                # (Line 49) trg.MoveLoc(v.P_UnitID[playerID],playerID,0,0);
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 50) Order("40 + 1n Firebat",playerID,"Anywhere",Attack,v.P_LocationID[playerID]);
                # (Line 51) Order("50 + 1n Tank",playerID,"Anywhere",Attack,v.P_LocationID[playerID]);
                DoActions(Order("40 + 1n Firebat", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 52) Order("50 + 1n Battlecruiser",playerID,"Anywhere",Attack,v.P_LocationID[playerID]);
                DoActions(Order("50 + 1n Tank", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 53) x = 0;
                DoActions(Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                x << (0)
                # (Line 54) KillUnitAt(All,"40 + 1n Gantrithor","Anywhere",playerID);
                # (Line 55) trg.Main_Wait(1500);
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID))
                trg.Main_Wait(1500)
                # (Line 56) }
                # (Line 57) else if (v.P_LoopMain[playerID] <= 23)
            if EUDElseIf()(v.P_LoopMain[playerID] <= 23):
                # (Line 58) {
                # (Line 59) KillUnitAt(2,"50 + 1n Battlecruiser","Anywhere",playerID);
                # (Line 60) trg.Main_Wait(80);
                DoActions(KillUnitAt(2, "50 + 1n Battlecruiser", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 61) }
                # (Line 62) else if (v.P_LoopMain[playerID] <= 39)
            if EUDElseIf()(v.P_LoopMain[playerID] <= 39):
                # (Line 63) {
                # (Line 64) KillUnitAt(2,"50 + 1n Tank","Anywhere",playerID);
                # (Line 65) KillUnitAt(1,"40 + 1n Firebat","Anywhere",playerID);
                DoActions(KillUnitAt(2, "50 + 1n Tank", "Anywhere", playerID))
                # (Line 66) trg.Main_Wait(80);
                DoActions(KillUnitAt(1, "40 + 1n Firebat", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 67) }
                # (Line 68) else if(v.P_LoopMain[playerID] == 40)
            if EUDElseIf()(v.P_LoopMain[playerID] == 40):
                # (Line 69) {
                # (Line 70) trg.Main_Wait(800);
                trg.Main_Wait(800)
                # (Line 71) }
                # (Line 72) else if (v.P_LoopMain[playerID] <= 58)
            if EUDElseIf()(v.P_LoopMain[playerID] <= 58):
                # (Line 73) {
                # (Line 74) trg.Shape_Line(playerID,1,"60 + 1n Archon",0+15*x,2,256,0);
                trg.Shape_Line(playerID, 1, "60 + 1n Archon", 0 + 15 * x, 2, 256, 0)
                # (Line 75) trg.Shape_Line(playerID,1,"60 + 1n Archon",90+15*x,2,256,0);
                trg.Shape_Line(playerID, 1, "60 + 1n Archon", 90 + 15 * x, 2, 256, 0)
                # (Line 76) trg.Shape_Line(playerID,1,"Terran Science Vessel",0+15*x,2,256,0);
                trg.Shape_Line(playerID, 1, "Terran Science Vessel", 0 + 15 * x, 2, 256, 0)
                # (Line 77) trg.Shape_Line(playerID,1,"Terran Science Vessel",90+15*x,2,256,0);
                trg.Shape_Line(playerID, 1, "Terran Science Vessel", 90 + 15 * x, 2, 256, 0)
                # (Line 78) trg.Shape_Line(playerID,1,"60 + 1n Siege",90+15*x,2,320,0);
                trg.Shape_Line(playerID, 1, "60 + 1n Siege", 90 + 15 * x, 2, 320, 0)
                # (Line 79) KillUnitAt(All,"Terran Science Vessel","Anywhere",playerID);
                # (Line 80) x += 1;
                DoActions(KillUnitAt(All, "Terran Science Vessel", "Anywhere", playerID))
                x.__iadd__(1)
                # (Line 81) trg.Main_Wait(160);
                trg.Main_Wait(160)
                # (Line 83) }
                # (Line 84) else if (v.P_LoopMain[playerID] <= 76)
            if EUDElseIf()(v.P_LoopMain[playerID] <= 76):
                # (Line 85) {
                # (Line 86) KillUnitAt(2,"60 + 1n Siege","Anywhere",playerID);
                # (Line 87) trg.Shape_Line(playerID,1,"60 + 1n Danimoth",90+15*x,2,256,0);
                DoActions(KillUnitAt(2, "60 + 1n Siege", "Anywhere", playerID))
                trg.Shape_Line(playerID, 1, "60 + 1n Danimoth", 90 + 15 * x, 2, 256, 0)
                # (Line 88) trg.Shape_Line(playerID,1,"60 + 1n Danimoth",0+15*x,2,256,0);
                trg.Shape_Line(playerID, 1, "60 + 1n Danimoth", 0 + 15 * x, 2, 256, 0)
                # (Line 89) trg.Shape_Line(playerID,1,"60 + 1n Archon",90+15*x,2,256,0);
                trg.Shape_Line(playerID, 1, "60 + 1n Archon", 90 + 15 * x, 2, 256, 0)
                # (Line 90) trg.Shape_Line(playerID,1,"60 + 1n Archon",0+15*x,2,256,0);
                trg.Shape_Line(playerID, 1, "60 + 1n Archon", 0 + 15 * x, 2, 256, 0)
                # (Line 91) trg.Shape_Line(playerID,1,"40 + 1n Gantrithor",90+15*x,2,256,0);
                trg.Shape_Line(playerID, 1, "40 + 1n Gantrithor", 90 + 15 * x, 2, 256, 0)
                # (Line 92) trg.Shape_Line(playerID,1,"40 + 1n Gantrithor",0+15*x,2,256,0);
                trg.Shape_Line(playerID, 1, "40 + 1n Gantrithor", 0 + 15 * x, 2, 256, 0)
                # (Line 93) trg.MoveLoc(v.P_UnitID[playerID],playerID,0,0);
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 94) Order("60 + 1n Danimoth",playerID,"Anywhere",Attack,v.P_LocationID[playerID]);
                # (Line 95) KillUnitAt(All,"40 + 1n Gantrithor","Anywhere",playerID);
                DoActions(Order("60 + 1n Danimoth", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 96) x += 1;
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID))
                x.__iadd__(1)
                # (Line 97) trg.Main_Wait(160);
                trg.Main_Wait(160)
                # (Line 98) }
                # (Line 99) else if(v.P_LoopMain[playerID] == 77)
            if EUDElseIf()(v.P_LoopMain[playerID] == 77):
                # (Line 100) {
                # (Line 101) x = 0;
                x << (0)
                # (Line 102) trg.Shape_NxNSquare(playerID,1,"50 + 1n Tank",7,64);
                trg.Shape_NxNSquare(playerID, 1, "50 + 1n Tank", 7, 64)
                # (Line 103) trg.MoveLoc(v.P_UnitID[playerID], playerID,0,0);
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 104) Order("50 + 1n Tank",playerID,"Anywhere",Attack,v.P_LocationID[playerID]);
                # (Line 105) trg.Main_Wait(200);
                DoActions(Order("50 + 1n Tank", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(200)
                # (Line 106) }
                # (Line 107) else if (Bring(playerID, AtLeast, 1,"Protoss Corsair", "[Skill]UseSkill")
            _t11 = EUDElseIf()
            # (Line 108) && v.P_LoopMain[playerID] == 78
            # (Line 109) && v.P_UltimateGauge[playerID] >= v.P_Ultimate2[playerID]
            # (Line 110) && v.P_Step[playerID] == 320)
            if _t11(EUDSCAnd()(Bring(playerID, AtLeast, 1, "Protoss Corsair", "[Skill]UseSkill"))(v.P_LoopMain[playerID] == 78)(v.P_UltimateGauge[playerID] >= v.P_Ultimate2[playerID])(v.P_Step[playerID] == 320)()):
                # (Line 111) {
                # (Line 112) if (Switch("UiltimateSwitch", Cleared))
                if EUDIf()(Switch("UiltimateSwitch", Cleared)):
                    # (Line 113) {
                    # (Line 114) s.CharacterVoice(10);
                    s.CharacterVoice(10)
                    # (Line 115) SetSwitch("UiltimateSwitch", Set);
                    # (Line 116) CreateUnit(1, " Item. Flag", "[Uiltimate]Flag", CurrentPlayer);
                    DoActions(SetSwitch("UiltimateSwitch", Set))
                    # (Line 117) v.P_Step[playerID] = 330;
                    DoActions(CreateUnit(1, " Item. Flag", "[Uiltimate]Flag", CurrentPlayer))
                    _ARRW(v.P_Step, playerID) << (330)
                    # (Line 118) v.P_SkillDelay[playerID] = 0;
                    _ARRW(v.P_SkillDelay, playerID) << (0)
                    # (Line 119) v.P_CountSub1[playerID] = 1;
                    _ARRW(v.P_CountSub1, playerID) << (1)
                    # (Line 120) v.P_UltimateGauge[playerID] -= v.P_Ultimate2[playerID];
                    _ARRW(v.P_UltimateGauge, playerID).__isub__(v.P_Ultimate2[playerID])
                    # (Line 121) v.P_CountMain[playerID] = 0;
                    _ARRW(v.P_CountMain, playerID) << (0)
                    # (Line 122) v.P_LoopMain[playerID] = 0;
                    _ARRW(v.P_LoopMain, playerID) << (0)
                    # (Line 123) KillUnitAt(1, "Protoss Corsair", "[Skill]UseSkill", playerID);
                    # (Line 124) KillUnitAt(All,"60 + 1n Siege","Anywhere",playerID);
                    DoActions(KillUnitAt(1, "Protoss Corsair", "[Skill]UseSkill", playerID))
                    # (Line 125) KillUnitAt(All,"50 + 1n Tank","Anywhere",playerID);
                    DoActions(KillUnitAt(All, "60 + 1n Siege", "Anywhere", playerID))
                    # (Line 126) }
                    DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                    # (Line 127) else
                    # (Line 128) {
                if EUDElse()():
                    # (Line 129) SetResources(CurrentPlayer, Add, 60, Gas);
                    # (Line 130) KillUnitAt(1, "Protoss Corsair", "[Skill]UseSkill", playerID);
                    DoActions(SetResources(CurrentPlayer, Add, 60, Gas))
                    # (Line 131) KillUnitAt(All,"60 + 1n Siege","Anywhere",playerID);
                    DoActions(KillUnitAt(1, "Protoss Corsair", "[Skill]UseSkill", playerID))
                    # (Line 132) KillUnitAt(All,"50 + 1n Tank","Anywhere",playerID);
                    DoActions(KillUnitAt(All, "60 + 1n Siege", "Anywhere", playerID))
                    # (Line 133) SetDeaths(CurrentPlayer, SetTo, 999, " `SYSTEMTEXT");
                    DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                    # (Line 134) trg.SkillEnd();
                    DoActions(SetDeaths(CurrentPlayer, SetTo, 999, " `SYSTEMTEXT"))
                    trg.SkillEnd()
                    # (Line 135) }
                    # (Line 136) }
                EUDEndIf()
                # (Line 137) else if(v.P_LoopMain[playerID] == 78)
            if EUDElseIf()(v.P_LoopMain[playerID] == 78):
                # (Line 138) {
                # (Line 139) KillUnitAt(All,"60 + 1n Siege","Anywhere",playerID);
                # (Line 140) KillUnitAt(All,"50 + 1n Tank","Anywhere",playerID);
                DoActions(KillUnitAt(All, "60 + 1n Siege", "Anywhere", playerID))
                # (Line 141) trg.SkillEnd();
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                trg.SkillEnd()
                # (Line 142) }
                # (Line 143) v.P_LoopMain[playerID] += 1;
            EUDEndIf()
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 144) }
            # (Line 145) }
        EUDEndIf()
        # (Line 146) }
    EUDEndIf()
