## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _RELIMP(path, mod_name):
    import inspect, pathlib, importlib.util
    p = pathlib.Path(inspect.getabsfile(inspect.currentframe())).parent
    for s in path.split("."):
        if s == "":  p = p.parent
        else:  p = p / s
    try:
        spec = importlib.util.spec_from_file_location(mod_name, p / (mod_name + ".py"))
        module = importlib.util.module_from_spec(spec)
        spec.loader.exec_module(module)
    except FileNotFoundError:
        loader = EPSLoader(mod_name, str(p / (mod_name + ".eps")))
        spec = importlib.util.spec_from_loader(mod_name, loader)
        module = loader.create_module(spec)
        loader.exec_module(module)
    return module

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import PluginVariables as msqcvar;
import PluginVariables as msqcvar
# (Line 2) import func.trig as trg;
from func import trig as trg
# (Line 3) import variable as v;
import variable as v
# (Line 4) import system.text as text;
from system import text as text
# (Line 5) import func.debuff as debuff;
from func import debuff as debuff
# (Line 7) import character.group0.rusaruka.main 	as rusaruka;
from character.group0.rusaruka import main as rusaruka
# (Line 8) import character.group0.chtholly.main 	as chtholly;
from character.group0.chtholly import main as chtholly
# (Line 9) import character.group0.maihime.main 	as maihime;
from character.group0.maihime import main as maihime
# (Line 11) import character.group3.kurumi.main 	as kurumi;
from character.group3.kurumi import main as kurumi
# (Line 12) import character.group2.sakura.main 		as sakura;
from character.group2.sakura import main as sakura
# (Line 13) import character.group2.yashiro.main 	as yashiro;
from character.group2.yashiro import main as yashiro
# (Line 15) import character.group3.kiana.main 		as kiana;
from character.group3.kiana import main as kiana
# (Line 17) import character.group4.yuuna.main 		as yuuna;
from character.group4.yuuna import main as yuuna
# (Line 18) import character.group4.mayuri.main 	as mayuri;
from character.group4.mayuri import main as mayuri
# (Line 19) import character.group4.nanami.main 	as nanami;
from character.group4.nanami import main as nanami
# (Line 20) import character.group4.milim.main 		as milim;
from character.group4.milim import main as milim
# (Line 22) import character.group5.yume.main 		as yume;
from character.group5.yume import main as yume
# (Line 23) import character.group5.magane.main 	as magane;
from character.group5.magane import main as magane
# (Line 24) import character.group5.oda.main 		as oda;
from character.group5.oda import main as oda
# (Line 25) import character.group5.ekidona.main 	as ekidona;
from character.group5.ekidona import main as ekidona
# (Line 26) import character.group5.niwa.main 		as niwa;
from character.group5.niwa import main as niwa
# (Line 28) import character.group6.park.main 		as park;
from character.group6.park import main as park
# (Line 29) import character.group6.hodaka.main 	as hodaka;
from character.group6.hodaka import main as hodaka
# (Line 30) import character.group6.tsukasa.main 	as tsukasa;
from character.group6.tsukasa import main as tsukasa
# (Line 31) import character.group6.zenitsu.main 	as zenitsu;
from character.group6.zenitsu import main as zenitsu
# (Line 32) import character.group6.endeavor.main 	as endeavor;
from character.group6.endeavor import main as endeavor
# (Line 34) import character.group7.law.main 		as law;
from character.group7.law import main as law
# (Line 35) import character.group7.sato.main 		as sato;
from character.group7.sato import main as sato
# (Line 36) import character.group7.teio.main 		as teio;
from character.group7.teio import main as teio
# (Line 37) import character.group7.ayano.main 		as ayano;
from character.group7.ayano import main as ayano
# (Line 38) import character.group7.reichel.main 	as reichel;
from character.group7.reichel import main as reichel
# (Line 40) import character.group8.gozo.main 		as gozo;
from character.group8.gozo import main as gozo
# (Line 41) import character.group8.king.main 		as king;
from character.group8.king import main as king
# (Line 42) import character.group8.tanya.main 		as tanya;
from character.group8.tanya import main as tanya
# (Line 43) import character.group8.megumi.main 	as megumi;
from character.group8.megumi import main as megumi
# (Line 44) import character.group8.alice.main 		as alice;
from character.group8.alice import main as alice
# (Line 46) function main(playerID)
# (Line 47) {
@EUDFunc
def f_main(playerID):
    # (Line 48) trg.Main_WaitLoop();
    trg.Main_WaitLoop()
    # (Line 50) text.BuildingText(playerID);
    text.BuildingText(playerID)
    # (Line 51) text.ShopText(playerID);
    text.ShopText(playerID)
    # (Line 53) if 		(v.P_HeroID[playerID] == 1) 		rusaruka.main(playerID);
    if EUDIf()(v.P_HeroID[playerID] == 1):
        rusaruka.f_main(playerID)
        # (Line 54) else if 	(v.P_HeroID[playerID] == 2) 		chtholly.main(playerID);
    if EUDElseIf()(v.P_HeroID[playerID] == 2):
        chtholly.f_main(playerID)
        # (Line 55) else if 	(v.P_HeroID[playerID] == 3) 		maihime.main(playerID);
    if EUDElseIf()(v.P_HeroID[playerID] == 3):
        maihime.f_main(playerID)
        # (Line 57) else if 	(v.P_HeroID[playerID] == 12) 	kurumi.main(playerID);
    if EUDElseIf()(v.P_HeroID[playerID] == 12):
        kurumi.f_main(playerID)
        # (Line 58) else if 	(v.P_HeroID[playerID] == 13) 	sakura.main(playerID);
    if EUDElseIf()(v.P_HeroID[playerID] == 13):
        sakura.f_main(playerID)
        # (Line 59) else if 	(v.P_HeroID[playerID] == 14) 	yashiro.main(playerID);
    if EUDElseIf()(v.P_HeroID[playerID] == 14):
        yashiro.f_main(playerID)
        # (Line 61) else if 	(v.P_HeroID[playerID] == 17) 	kiana.main(playerID);
    if EUDElseIf()(v.P_HeroID[playerID] == 17):
        kiana.f_main(playerID)
        # (Line 63) else if 	(v.P_HeroID[playerID] == 22) 	yuuna.main(playerID);
    if EUDElseIf()(v.P_HeroID[playerID] == 22):
        yuuna.f_main(playerID)
        # (Line 64) else if 	(v.P_HeroID[playerID] == 23) 	mayuri.main(playerID);
    if EUDElseIf()(v.P_HeroID[playerID] == 23):
        mayuri.f_main(playerID)
        # (Line 65) else if 	(v.P_HeroID[playerID] == 24) 	nanami.main(playerID);
    if EUDElseIf()(v.P_HeroID[playerID] == 24):
        nanami.f_main(playerID)
        # (Line 66) else if 	(v.P_HeroID[playerID] == 25) 	milim.main(playerID);
    if EUDElseIf()(v.P_HeroID[playerID] == 25):
        milim.f_main(playerID)
        # (Line 68) else if 	(v.P_HeroID[playerID] == 26) 	yume.main(playerID);
    if EUDElseIf()(v.P_HeroID[playerID] == 26):
        yume.f_main(playerID)
        # (Line 69) else if 	(v.P_HeroID[playerID] == 27) 	magane.main(playerID);
    if EUDElseIf()(v.P_HeroID[playerID] == 27):
        magane.f_main(playerID)
        # (Line 70) else if 	(v.P_HeroID[playerID] == 28) 	oda.main(playerID);
    if EUDElseIf()(v.P_HeroID[playerID] == 28):
        oda.f_main(playerID)
        # (Line 71) else if 	(v.P_HeroID[playerID] == 29) 	ekidona.main(playerID);
    if EUDElseIf()(v.P_HeroID[playerID] == 29):
        ekidona.f_main(playerID)
        # (Line 72) else if 	(v.P_HeroID[playerID] == 30) 	niwa.main(playerID);
    if EUDElseIf()(v.P_HeroID[playerID] == 30):
        niwa.f_main(playerID)
        # (Line 74) else if 	(v.P_HeroID[playerID] == 31) 	park.main(playerID);
    if EUDElseIf()(v.P_HeroID[playerID] == 31):
        park.f_main(playerID)
        # (Line 75) else if 	(v.P_HeroID[playerID] == 32) 	hodaka.main(playerID);
    if EUDElseIf()(v.P_HeroID[playerID] == 32):
        hodaka.f_main(playerID)
        # (Line 76) else if 	(v.P_HeroID[playerID] == 33) 	zenitsu.main(playerID);
    if EUDElseIf()(v.P_HeroID[playerID] == 33):
        zenitsu.f_main(playerID)
        # (Line 77) else if 	(v.P_HeroID[playerID] == 34) 	tsukasa.main(playerID);
    if EUDElseIf()(v.P_HeroID[playerID] == 34):
        tsukasa.f_main(playerID)
        # (Line 78) else if 	(v.P_HeroID[playerID] == 35) 	endeavor.main(playerID);
    if EUDElseIf()(v.P_HeroID[playerID] == 35):
        endeavor.f_main(playerID)
        # (Line 80) else if 	(v.P_HeroID[playerID] == 36) 	law.main(playerID);
    if EUDElseIf()(v.P_HeroID[playerID] == 36):
        law.f_main(playerID)
        # (Line 81) else if 	(v.P_HeroID[playerID] == 37) 	sato.main(playerID);
    if EUDElseIf()(v.P_HeroID[playerID] == 37):
        sato.f_main(playerID)
        # (Line 82) else if 	(v.P_HeroID[playerID] == 38) 	teio.main(playerID);
    if EUDElseIf()(v.P_HeroID[playerID] == 38):
        teio.f_main(playerID)
        # (Line 83) else if 	(v.P_HeroID[playerID] == 39) 	ayano.main(playerID);
    if EUDElseIf()(v.P_HeroID[playerID] == 39):
        ayano.f_main(playerID)
        # (Line 84) else if 	(v.P_HeroID[playerID] == 40) 	reichel.main(playerID);
    if EUDElseIf()(v.P_HeroID[playerID] == 40):
        reichel.f_main(playerID)
        # (Line 86) else if 	(v.P_HeroID[playerID] == 41) 	gozo.main(playerID);
    if EUDElseIf()(v.P_HeroID[playerID] == 41):
        gozo.f_main(playerID)
        # (Line 87) else if 	(v.P_HeroID[playerID] == 42) 	king.main(playerID);
    if EUDElseIf()(v.P_HeroID[playerID] == 42):
        king.f_main(playerID)
        # (Line 88) else if 	(v.P_HeroID[playerID] == 43) 	tanya.main(playerID);
    if EUDElseIf()(v.P_HeroID[playerID] == 43):
        tanya.f_main(playerID)
        # (Line 89) else if 	(v.P_HeroID[playerID] == 44) 	megumi.main(playerID);
    if EUDElseIf()(v.P_HeroID[playerID] == 44):
        megumi.f_main(playerID)
        # (Line 90) else if 	(v.P_HeroID[playerID] == 45) 	alice.main(playerID);
    if EUDElseIf()(v.P_HeroID[playerID] == 45):
        alice.f_main(playerID)
        # (Line 92) SetDeaths(playerID, SetTo, v.P_Shield[playerID], " `SystemShield");
    EUDEndIf()
    # (Line 94) debuff.main(playerID);
    DoActions(SetDeaths(playerID, SetTo, v.P_Shield[playerID], " `SystemShield"))
    debuff.f_main(playerID)
    # (Line 95) }
