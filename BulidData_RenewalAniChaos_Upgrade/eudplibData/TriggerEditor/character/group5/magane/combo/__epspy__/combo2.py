## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import variable as v;
import variable as v
# (Line 2) import func.trig as trg;
from func import trig as trg
# (Line 4) function main(playerID)
# (Line 5) {
@EUDFunc
def f_main(playerID):
    # (Line 6) if (v.P_WaitMain[playerID] == 0)
    if EUDIf()(v.P_WaitMain[playerID] == 0):
        # (Line 7) {
        # (Line 8) if (v.P_CountMain[playerID] == 0)
        if EUDIf()(v.P_CountMain[playerID] == 0):
            # (Line 9) {
            # (Line 10) RemoveUnitAt(All, "40 + 1n Mutalisk", "Anywhere", playerID);
            # (Line 12) trg.Table_Sin(playerID, 90 - 22 * v.P_LoopMain[playerID], 100);
            DoActions(RemoveUnitAt(All, "40 + 1n Mutalisk", "Anywhere", playerID))
            trg.Table_Sin(playerID, 90 - 22 * v.P_LoopMain[playerID], 100)
            # (Line 13) trg.Table_Cos(playerID, 90 - 22 * v.P_LoopMain[playerID], 100);
            trg.Table_Cos(playerID, 90 - 22 * v.P_LoopMain[playerID], 100)
            # (Line 15) var x = v.P_AngleCos[playerID];
            x = EUDVariable()
            x << (v.P_AngleCos[playerID])
            # (Line 16) var y = v.P_AngleSin[playerID];
            y = EUDVariable()
            y << (v.P_AngleSin[playerID])
            # (Line 18) trg.Shape_Square(playerID, 1, "40 + 1n Mutalisk", x, y);
            trg.Shape_Square(playerID, 1, "40 + 1n Mutalisk", x, y)
            # (Line 19) trg.Shape_Square(playerID, 1, "Scantid (Desert)", x, y);
            trg.Shape_Square(playerID, 1, "Scantid (Desert)", x, y)
            # (Line 20) KillUnitAt(All, "Scantid (Desert)", "Anywhere", playerID);
            # (Line 22) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
            DoActions(KillUnitAt(All, "Scantid (Desert)", "Anywhere", playerID))
            # (Line 23) Order("40 + 1n Mutalisk", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
            DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
            # (Line 25) trg.Main_Wait(80);
            DoActions(Order("40 + 1n Mutalisk", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
            trg.Main_Wait(80)
            # (Line 27) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 29) if (v.P_LoopMain[playerID] == 4)
            if EUDIf()(v.P_LoopMain[playerID] == 4):
                # (Line 30) {
                # (Line 31) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 32) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 33) }
                # (Line 34) }
            EUDEndIf()
            # (Line 35) else if (v.P_CountMain[playerID] == 1)
        if EUDElseIf()(v.P_CountMain[playerID] == 1):
            # (Line 36) {
            # (Line 37) RemoveUnitAt(All, "40 + 1n Mutalisk", "Anywhere", playerID);
            # (Line 39) if (v.P_LoopMain[playerID] < 4)
            DoActions(RemoveUnitAt(All, "40 + 1n Mutalisk", "Anywhere", playerID))
            if EUDIf()(v.P_LoopMain[playerID] >= 4, neg=True):
                # (Line 40) {
                # (Line 41) var x = 300 - 75 * v.P_LoopMain[playerID];
                x = EUDVariable()
                x << (300 - 75 * v.P_LoopMain[playerID])
                # (Line 42) var y = 75 * v.P_LoopMain[playerID];
                y = EUDVariable()
                y << (75 * v.P_LoopMain[playerID])
                # (Line 44) trg.Shape_Square(playerID, 1, "60 + 1n Siege", x, y);
                trg.Shape_Square(playerID, 1, "60 + 1n Siege", x, y)
                # (Line 45) trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", x, y);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", x, y)
                # (Line 46) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
                # (Line 48) trg.Table_Sin(playerID, 90 - 22 * v.P_LoopMain[playerID], 100);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                trg.Table_Sin(playerID, 90 - 22 * v.P_LoopMain[playerID], 100)
                # (Line 49) trg.Table_Cos(playerID, 90 - 22 * v.P_LoopMain[playerID], 100);
                trg.Table_Cos(playerID, 90 - 22 * v.P_LoopMain[playerID], 100)
                # (Line 51) x = v.P_AngleCos[playerID];
                x << (v.P_AngleCos[playerID])
                # (Line 52) y = v.P_AngleSin[playerID];
                y << (v.P_AngleSin[playerID])
                # (Line 54) trg.Shape_Square(playerID, 1, "40 + 1n Mutalisk", x, y);
                trg.Shape_Square(playerID, 1, "40 + 1n Mutalisk", x, y)
                # (Line 55) trg.Shape_Square(playerID, 1, "Scantid (Desert)", x, y);
                trg.Shape_Square(playerID, 1, "Scantid (Desert)", x, y)
                # (Line 56) KillUnitAt(All, "Scantid (Desert)", "Anywhere", playerID);
                # (Line 58) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "Scantid (Desert)", "Anywhere", playerID))
                # (Line 59) Order("40 + 1n Mutalisk", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 60) }
                DoActions(Order("40 + 1n Mutalisk", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 62) trg.Main_Wait(80);
            EUDEndIf()
            trg.Main_Wait(80)
            # (Line 64) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 66) if (v.P_LoopMain[playerID] == 5)
            if EUDIf()(v.P_LoopMain[playerID] == 5):
                # (Line 67) {
                # (Line 68) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 69) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 70) }
                # (Line 71) }
            EUDEndIf()
            # (Line 72) else if (v.P_CountMain[playerID] == 2)
        if EUDElseIf()(v.P_CountMain[playerID] == 2):
            # (Line 73) {
            # (Line 74) if (v.P_LoopMain[playerID] < 4)
            if EUDIf()(v.P_LoopMain[playerID] >= 4, neg=True):
                # (Line 75) {
                # (Line 76) trg.Table_Sin(playerID, 22 * v.P_LoopMain[playerID], 200);
                trg.Table_Sin(playerID, 22 * v.P_LoopMain[playerID], 200)
                # (Line 77) trg.Table_Cos(playerID, 22 * v.P_LoopMain[playerID], 200);
                trg.Table_Cos(playerID, 22 * v.P_LoopMain[playerID], 200)
                # (Line 79) var x = v.P_AngleCos[playerID];
                x = EUDVariable()
                x << (v.P_AngleCos[playerID])
                # (Line 80) var y = v.P_AngleSin[playerID];
                y = EUDVariable()
                y << (v.P_AngleSin[playerID])
                # (Line 82) trg.Shape_Square(playerID, 1, "Scantid (Desert)", x, y);
                trg.Shape_Square(playerID, 1, "Scantid (Desert)", x, y)
                # (Line 83) KillUnitAt(All, "Scantid (Desert)", "Anywhere", playerID);
                # (Line 84) }
                DoActions(KillUnitAt(All, "Scantid (Desert)", "Anywhere", playerID))
                # (Line 86) if (v.P_LoopMain[playerID] == 0)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 87) {
                # (Line 88) trg.Shape_Edge(playerID, 1, "Target", 0, 3, 75);
                trg.Shape_Edge(playerID, 1, "Target", 0, 3, 75)
                # (Line 89) trg.Shape_Edge(playerID, 1, "60 + 1n Archon", 0, 3, 75);
                trg.Shape_Edge(playerID, 1, "60 + 1n Archon", 0, 3, 75)
                # (Line 90) KillUnitAt(All, "Target", "Anywhere", playerID);
                # (Line 91) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "Target", "Anywhere", playerID))
                # (Line 93) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                # (Line 94) MoveUnit(All, "40 + 1n Drone", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 95) Order("40 + 1n Drone", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveUnit(All, "40 + 1n Drone", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                # (Line 96) }
                DoActions(Order("40 + 1n Drone", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 97) else if (v.P_LoopMain[playerID] == 2)
            if EUDElseIf()(v.P_LoopMain[playerID] == 2):
                # (Line 98) {
                # (Line 99) trg.Shape_Edge(playerID, 1, "Target", 45, 3, 100);
                trg.Shape_Edge(playerID, 1, "Target", 45, 3, 100)
                # (Line 100) trg.Shape_Edge(playerID, 1, "60 + 1n Archon", 45, 3, 100);
                trg.Shape_Edge(playerID, 1, "60 + 1n Archon", 45, 3, 100)
                # (Line 101) trg.Shape_Edge(playerID, 1, "40 + 1n Drone", 45, 2, 100);
                trg.Shape_Edge(playerID, 1, "40 + 1n Drone", 45, 2, 100)
                # (Line 102) KillUnitAt(All, "Target", "Anywhere", playerID);
                # (Line 103) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "Target", "Anywhere", playerID))
                # (Line 105) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                # (Line 106) MoveUnit(All, "40 + 1n Drone", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 107) Order("40 + 1n Drone", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveUnit(All, "40 + 1n Drone", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                # (Line 108) }
                DoActions(Order("40 + 1n Drone", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 109) else if (v.P_LoopMain[playerID] == 4)
            if EUDElseIf()(v.P_LoopMain[playerID] == 4):
                # (Line 110) {
                # (Line 111) trg.Shape_Edge(playerID, 1, "40 + 1n Drone", 45, 2, 150);
                trg.Shape_Edge(playerID, 1, "40 + 1n Drone", 45, 2, 150)
                # (Line 112) trg.Shape_Edge(playerID, 1, "50 + 1n Battlecruiser", 45, 2, 150);
                trg.Shape_Edge(playerID, 1, "50 + 1n Battlecruiser", 45, 2, 150)
                # (Line 113) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
                # (Line 115) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                # (Line 116) MoveUnit(All, "40 + 1n Drone", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 117) Order("40 + 1n Drone", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveUnit(All, "40 + 1n Drone", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                # (Line 118) }
                DoActions(Order("40 + 1n Drone", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 120) trg.Main_Wait(80);
            EUDEndIf()
            trg.Main_Wait(80)
            # (Line 122) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 124) if (v.P_LoopMain[playerID] == 5)
            if EUDIf()(v.P_LoopMain[playerID] == 5):
                # (Line 125) {
                # (Line 126) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 127) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 128) }
                # (Line 129) }
            EUDEndIf()
            # (Line 130) else if (v.P_CountMain[playerID] == 3)
        if EUDElseIf()(v.P_CountMain[playerID] == 3):
            # (Line 131) {
            # (Line 132) if (v.P_LoopMain[playerID] < 4)
            if EUDIf()(v.P_LoopMain[playerID] >= 4, neg=True):
                # (Line 133) {
                # (Line 134) trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", 75 * v.P_LoopMain[playerID], 225 - 75 * v.P_LoopMain[playerID]);
                trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", 75 * v.P_LoopMain[playerID], 225 - 75 * v.P_LoopMain[playerID])
                # (Line 135) KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID);
                # (Line 137) if ((v.P_LoopMain[playerID] % 2) == 0)
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID))
                if EUDIf()((v.P_LoopMain[playerID] % 2) == 0):
                    # (Line 138) {
                    # (Line 139) trg.Shape_Double(playerID, 1, "Protoss Dark Archon", 100 - 100 * (v.P_LoopMain[playerID] % 2), 100 * (v.P_LoopMain[playerID] % 2));
                    trg.Shape_Double(playerID, 1, "Protoss Dark Archon", 100 - 100 * (v.P_LoopMain[playerID] % 2), 100 * (v.P_LoopMain[playerID] % 2))
                    # (Line 140) trg.Shape_Double(playerID, 1, "40 + 1n Mutalisk", 100 - 100 * (v.P_LoopMain[playerID] % 2), 100 * (v.P_LoopMain[playerID] % 2));
                    trg.Shape_Double(playerID, 1, "40 + 1n Mutalisk", 100 - 100 * (v.P_LoopMain[playerID] % 2), 100 * (v.P_LoopMain[playerID] % 2))
                    # (Line 141) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                    # (Line 143) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                    DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                    # (Line 144) Order("40 + 1n Mutalisk", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                    DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                    # (Line 145) }
                    DoActions(Order("40 + 1n Mutalisk", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                    # (Line 146) else if ((v.P_LoopMain[playerID] % 2) == 1)
                if EUDElseIf()((v.P_LoopMain[playerID] % 2) == 1):
                    # (Line 147) {
                    # (Line 148) trg.Shape_Double(playerID, 1, "Protoss Dark Archon", 0 - 100 * (v.P_LoopMain[playerID] % 2), 100 * (v.P_LoopMain[playerID] % 2));
                    trg.Shape_Double(playerID, 1, "Protoss Dark Archon", 0 - 100 * (v.P_LoopMain[playerID] % 2), 100 * (v.P_LoopMain[playerID] % 2))
                    # (Line 149) trg.Shape_Double(playerID, 1, "40 + 1n Mutalisk", 0 - 100 * (v.P_LoopMain[playerID] % 2), 100 * (v.P_LoopMain[playerID] % 2));
                    trg.Shape_Double(playerID, 1, "40 + 1n Mutalisk", 0 - 100 * (v.P_LoopMain[playerID] % 2), 100 * (v.P_LoopMain[playerID] % 2))
                    # (Line 150) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                    # (Line 152) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                    DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                    # (Line 153) Order("40 + 1n Mutalisk", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                    DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                    # (Line 154) }
                    DoActions(Order("40 + 1n Mutalisk", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                    # (Line 155) }
                EUDEndIf()
                # (Line 157) trg.Main_Wait(80);
            EUDEndIf()
            trg.Main_Wait(80)
            # (Line 159) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 161) if (v.P_LoopMain[playerID] == 5)
            if EUDIf()(v.P_LoopMain[playerID] == 5):
                # (Line 162) {
                # (Line 163) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 164) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 165) }
                # (Line 166) }
            EUDEndIf()
            # (Line 167) else if (v.P_CountMain[playerID] == 4)
        if EUDElseIf()(v.P_CountMain[playerID] == 4):
            # (Line 168) {
            # (Line 169) var x = 0;
            x = EUDVariable()
            x << (0)
            # (Line 170) var y = 0;
            y = EUDVariable()
            y << (0)
            # (Line 172) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 173) {
                # (Line 174) x = 150;
                x << (150)
                # (Line 175) y = 0;
                y << (0)
                # (Line 177) trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", -y, x);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", -y, x)
                # (Line 178) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
                # (Line 180) trg.Shape_Square(playerID, 1, "40 + 1n Guardian", x, y);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                trg.Shape_Square(playerID, 1, "40 + 1n Guardian", x, y)
                # (Line 181) trg.Shape_Square(playerID, 1, "60 + 1n Archon", x, y);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", x, y)
                # (Line 182) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                # (Line 184) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                # (Line 185) Order("40 + 1n Guardian", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 186) }
                DoActions(Order("40 + 1n Guardian", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 187) else if (v.P_LoopMain[playerID] == 2)
            if EUDElseIf()(v.P_LoopMain[playerID] == 2):
                # (Line 188) {
                # (Line 189) x = 150;
                x << (150)
                # (Line 190) y = 150;
                y << (150)
                # (Line 192) trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", -y, x);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", -y, x)
                # (Line 193) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
                # (Line 195) trg.Shape_Square(playerID, 1, "40 + 1n Guardian", x, y);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                trg.Shape_Square(playerID, 1, "40 + 1n Guardian", x, y)
                # (Line 196) trg.Shape_Square(playerID, 1, "60 + 1n Archon", x, y);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", x, y)
                # (Line 197) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                # (Line 199) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                # (Line 200) Order("40 + 1n Guardian", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 201) }
                DoActions(Order("40 + 1n Guardian", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 203) trg.Main_Wait(80);
            EUDEndIf()
            trg.Main_Wait(80)
            # (Line 205) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 207) if (v.P_LoopMain[playerID] == 24)
            if EUDIf()(v.P_LoopMain[playerID] == 24):
                # (Line 208) {
                # (Line 209) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 210) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 211) }
                # (Line 212) }
            EUDEndIf()
            # (Line 213) else if (v.P_CountMain[playerID] == 5)
        if EUDElseIf()(v.P_CountMain[playerID] == 5):
            # (Line 214) {
            # (Line 215) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
            # (Line 216) KillUnitAt(All, "40 + 1n Mutalisk", "Anywhere", playerID);
            DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID))
            # (Line 217) KillUnitAt(All, "40 + 1n Drone", "Anywhere", playerID);
            DoActions(KillUnitAt(All, "40 + 1n Mutalisk", "Anywhere", playerID))
            # (Line 218) KillUnitAt(All, "60 + 1n Siege", "Anywhere", playerID);
            DoActions(KillUnitAt(All, "40 + 1n Drone", "Anywhere", playerID))
            # (Line 219) KillUnitAt(All, "40 + 1n Goliath", "Anywhere", playerID);
            DoActions(KillUnitAt(All, "60 + 1n Siege", "Anywhere", playerID))
            # (Line 221) trg.SkillEnd();
            DoActions(KillUnitAt(All, "40 + 1n Goliath", "Anywhere", playerID))
            trg.SkillEnd()
            # (Line 222) }
            # (Line 223) }
        EUDEndIf()
        # (Line 224) }
    EUDEndIf()
