## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import PluginVariables as msqcvar;
import PluginVariables as msqcvar
# (Line 2) import variable as v;
import variable as v
# (Line 3) import func.trig as trg;
from func import trig as trg
# (Line 4) import func.trigadv as adv;
from func import trigadv as adv
# (Line 5) import func.trigepic as epic;
from func import trigepic as epic
# (Line 7) function EdgeShapeAt(playerID : TrgPlayer, count, Unit : TrgUnit, degree, n, interval, x, y);
# (Line 9) function main(playerID)
# (Line 10) {
@EUDFunc
def f_main(playerID):
    # (Line 11) trg.Buff_ShieldFix(1);
    trg.Buff_ShieldFix(1)
    # (Line 13) if (v.P_WaitMain[playerID] == 0)
    if EUDIf()(v.P_WaitMain[playerID] == 0):
        # (Line 14) {
        # (Line 15) if (v.P_CountMain[playerID] == 0)
        if EUDIf()(v.P_CountMain[playerID] == 0):
            # (Line 16) {
            # (Line 17) RemoveUnitAt(All, "40 + 1n Mutalisk", "Anywhere", playerID);
            # (Line 19) if (v.P_LoopMain[playerID] % 4 == 0)
            DoActions(RemoveUnitAt(All, "40 + 1n Mutalisk", "Anywhere", playerID))
            if EUDIf()(v.P_LoopMain[playerID] % 4 == 0):
                # (Line 20) {
                # (Line 21) RemoveUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
                # (Line 23) if ((v.P_LoopMain[playerID] % 8) / 4 == 0)
                DoActions(RemoveUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID))
                if EUDIf()((v.P_LoopMain[playerID] % 8) // 4 == 0):
                    # (Line 24) trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 150, 150);
                    trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 150, 150)
                    # (Line 25) else
                    # (Line 26) epic.Shape_Square(playerID, 1, "40 + 1n Guardian", 150, 150, 1);
                if EUDElse()():
                    epic.Shape_Square(playerID, 1, "40 + 1n Guardian", 150, 150, 1)
                    # (Line 28) trg.Shape_Square(playerID, 1, "60 + 1n Archon", 150, 150);
                EUDEndIf()
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", 150, 150)
                # (Line 29) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                # (Line 31) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                # (Line 32) Order("40 + 1n Guardian", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 33) }
                DoActions(Order("40 + 1n Guardian", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 34) else if (v.P_LoopMain[playerID] % 4 == 2)
            if EUDElseIf()(v.P_LoopMain[playerID] % 4 == 2):
                # (Line 35) {
                # (Line 36) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
                # (Line 38) trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", 150, 150);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID))
                trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", 150, 150)
                # (Line 39) trg.Shape_Square(playerID, 1, " Unit. Hoffnung 25000", 150, 150);
                trg.Shape_Square(playerID, 1, " Unit. Hoffnung 25000", 150, 150)
                # (Line 40) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);
                # (Line 41) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID))
                # (Line 42) }
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID))
                # (Line 44) if (v.P_LoopMain[playerID] < 4)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] >= 4, neg=True):
                # (Line 45) {
                # (Line 46) trg.Shape_Square(playerID, 1, "40 + 1n Mutalisk", 32 - 32 * v.P_LoopMain[playerID], 64);
                trg.Shape_Square(playerID, 1, "40 + 1n Mutalisk", 32 - 32 * v.P_LoopMain[playerID], 64)
                # (Line 47) trg.Shape_Square(playerID, 1, "Rhynadon (Badlands)", 32 - 32 * v.P_LoopMain[playerID], 64);
                trg.Shape_Square(playerID, 1, "Rhynadon (Badlands)", 32 - 32 * v.P_LoopMain[playerID], 64)
                # (Line 48) KillUnitAt(All, "Rhynadon (Badlands)", "Anywhere", playerID);
                # (Line 50) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "Rhynadon (Badlands)", "Anywhere", playerID))
                # (Line 51) Order("40 + 1n Mutalisk", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 52) }
                DoActions(Order("40 + 1n Mutalisk", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 53) else if (v.P_LoopMain[playerID] == 4)
            if EUDElseIf()(v.P_LoopMain[playerID] == 4):
                # (Line 54) {
                # (Line 55) trg.Shape_Square(playerID, 1, "40 + 1n Ghost", 96, 96);
                trg.Shape_Square(playerID, 1, "40 + 1n Ghost", 96, 96)
                # (Line 56) trg.Shape_Square(playerID, 1, "Target", 96, 96);
                trg.Shape_Square(playerID, 1, "Target", 96, 96)
                # (Line 57) KillUnitAt(All, "Target", "Anywhere", playerID);
                # (Line 59) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "Target", "Anywhere", playerID))
                # (Line 60) MoveUnit(All, "40 + 1n Ghost", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 61) Order("40 + 1n Ghost", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveUnit(All, "40 + 1n Ghost", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                # (Line 62) }
                DoActions(Order("40 + 1n Ghost", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 63) else if (v.P_LoopMain[playerID] == 6)
            if EUDElseIf()(v.P_LoopMain[playerID] == 6):
                # (Line 64) {
                # (Line 65) trg.Shape_Square(playerID, 1, "Target", 32, 32);
                trg.Shape_Square(playerID, 1, "Target", 32, 32)
                # (Line 66) KillUnitAt(All, "Target", "Anywhere", playerID);
                # (Line 68) trg.Shape_Square(playerID, 1, "60 + 1n Siege", 96, 96);
                DoActions(KillUnitAt(All, "Target", "Anywhere", playerID))
                trg.Shape_Square(playerID, 1, "60 + 1n Siege", 96, 96)
                # (Line 69) trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", 96, 96);
                trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", 96, 96)
                # (Line 70) KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID);
                # (Line 72) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID))
                # (Line 73) MoveUnit(All, "40 + 1n Ghost", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 74) Order("40 + 1n Ghost", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveUnit(All, "40 + 1n Ghost", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                # (Line 75) }
                DoActions(Order("40 + 1n Ghost", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 77) trg.Main_Wait(80);
            EUDEndIf()
            trg.Main_Wait(80)
            # (Line 79) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 81) if (v.P_LoopMain[playerID] == 8)
            if EUDIf()(v.P_LoopMain[playerID] == 8):
                # (Line 82) {
                # (Line 83) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 84) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 85) }
                # (Line 86) }
            EUDEndIf()
            # (Line 87) else if (v.P_CountMain[playerID] == 1)
        if EUDElseIf()(v.P_CountMain[playerID] == 1):
            # (Line 88) {
            # (Line 89) RemoveUnitAt(All, "40 + 1n Mutalisk", "Anywhere", playerID);
            # (Line 91) if (v.P_LoopMain[playerID] % 4 == 0)
            DoActions(RemoveUnitAt(All, "40 + 1n Mutalisk", "Anywhere", playerID))
            if EUDIf()(v.P_LoopMain[playerID] % 4 == 0):
                # (Line 92) {
                # (Line 93) RemoveUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
                # (Line 95) if ((v.P_LoopMain[playerID] % 8) / 4 == 0)
                DoActions(RemoveUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID))
                if EUDIf()((v.P_LoopMain[playerID] % 8) // 4 == 0):
                    # (Line 96) trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 150, 150);
                    trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 150, 150)
                    # (Line 97) else
                    # (Line 98) epic.Shape_Square(playerID, 1, "40 + 1n Guardian", 150, 150, 1);
                if EUDElse()():
                    epic.Shape_Square(playerID, 1, "40 + 1n Guardian", 150, 150, 1)
                    # (Line 100) trg.Shape_Square(playerID, 1, "60 + 1n Archon", 150, 150);
                EUDEndIf()
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", 150, 150)
                # (Line 101) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                # (Line 103) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                # (Line 104) Order("40 + 1n Guardian", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 105) }
                DoActions(Order("40 + 1n Guardian", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 106) else if (v.P_LoopMain[playerID] % 4 == 2)
            if EUDElseIf()(v.P_LoopMain[playerID] % 4 == 2):
                # (Line 107) {
                # (Line 108) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
                # (Line 110) trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", 150, 150);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID))
                trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", 150, 150)
                # (Line 111) trg.Shape_Square(playerID, 1, " Unit. Hoffnung 25000", 150, 150);
                trg.Shape_Square(playerID, 1, " Unit. Hoffnung 25000", 150, 150)
                # (Line 112) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);
                # (Line 113) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID))
                # (Line 114) }
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID))
                # (Line 116) if (v.P_LoopMain[playerID] < 4)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] >= 4, neg=True):
                # (Line 117) {
                # (Line 118) trg.Shape_Square(playerID, 1, "40 + 1n Mutalisk", 16 + 16 * v.P_LoopMain[playerID], 64 - 16 * v.P_LoopMain[playerID]);
                trg.Shape_Square(playerID, 1, "40 + 1n Mutalisk", 16 + 16 * v.P_LoopMain[playerID], 64 - 16 * v.P_LoopMain[playerID])
                # (Line 119) trg.Shape_Square(playerID, 1, "Rhynadon (Badlands)", 16 + 16 * v.P_LoopMain[playerID], 64 - 16 * v.P_LoopMain[playerID]);
                trg.Shape_Square(playerID, 1, "Rhynadon (Badlands)", 16 + 16 * v.P_LoopMain[playerID], 64 - 16 * v.P_LoopMain[playerID])
                # (Line 120) KillUnitAt(All, "Rhynadon (Badlands)", "Anywhere", playerID);
                # (Line 122) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "Rhynadon (Badlands)", "Anywhere", playerID))
                # (Line 123) Order("40 + 1n Mutalisk", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 124) }
                DoActions(Order("40 + 1n Mutalisk", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 125) else if (v.P_LoopMain[playerID] == 4)
            if EUDElseIf()(v.P_LoopMain[playerID] == 4):
                # (Line 126) {
                # (Line 127) trg.Shape_Square(playerID, 1, "40 + 1n Ghost", 128, 0);
                trg.Shape_Square(playerID, 1, "40 + 1n Ghost", 128, 0)
                # (Line 128) trg.Shape_Square(playerID, 1, "Target", 128, 0);
                trg.Shape_Square(playerID, 1, "Target", 128, 0)
                # (Line 129) KillUnitAt(All, "Target", "Anywhere", playerID);
                # (Line 131) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "Target", "Anywhere", playerID))
                # (Line 132) MoveUnit(All, "40 + 1n Ghost", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 133) Order("40 + 1n Ghost", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveUnit(All, "40 + 1n Ghost", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                # (Line 134) }
                DoActions(Order("40 + 1n Ghost", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 135) else if (v.P_LoopMain[playerID] == 6)
            if EUDElseIf()(v.P_LoopMain[playerID] == 6):
                # (Line 136) {
                # (Line 137) trg.Shape_Square(playerID, 1, "Target", 40, 0);
                trg.Shape_Square(playerID, 1, "Target", 40, 0)
                # (Line 138) KillUnitAt(All, "Target", "Anywhere", playerID);
                # (Line 140) trg.Shape_Square(playerID, 1, "60 + 1n Siege", 128, 0);
                DoActions(KillUnitAt(All, "Target", "Anywhere", playerID))
                trg.Shape_Square(playerID, 1, "60 + 1n Siege", 128, 0)
                # (Line 141) trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", 128, 0);
                trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", 128, 0)
                # (Line 142) KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID);
                # (Line 144) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID))
                # (Line 145) MoveUnit(All, "40 + 1n Ghost", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 146) Order("40 + 1n Ghost", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveUnit(All, "40 + 1n Ghost", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                # (Line 147) }
                DoActions(Order("40 + 1n Ghost", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 149) trg.Main_Wait(80);
            EUDEndIf()
            trg.Main_Wait(80)
            # (Line 151) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 153) if (v.P_LoopMain[playerID] == 8)
            if EUDIf()(v.P_LoopMain[playerID] == 8):
                # (Line 154) {
                # (Line 155) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 156) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 157) }
                # (Line 158) }
            EUDEndIf()
            # (Line 159) else if (v.P_CountMain[playerID] == 2)
        if EUDElseIf()(v.P_CountMain[playerID] == 2):
            # (Line 160) {
            # (Line 161) if (v.P_LoopMain[playerID] % 2 == 0)
            if EUDIf()(v.P_LoopMain[playerID] % 2 == 0):
                # (Line 162) {
                # (Line 163) SetDeaths(playerID, SetTo, 1, " `ShieldRecharge");
                # (Line 165) RemoveUnitAt(All, "40 + 1n Mutalisk", "Anywhere", playerID);
                DoActions(SetDeaths(playerID, SetTo, 1, " `ShieldRecharge"))
                # (Line 167) if ((v.P_LoopMain[playerID] % 4) / 2 == 0)
                DoActions(RemoveUnitAt(All, "40 + 1n Mutalisk", "Anywhere", playerID))
                if EUDIf()((v.P_LoopMain[playerID] % 4) // 2 == 0):
                    # (Line 168) trg.Shape_Edge(playerID, 1, "40 + 1n Mutalisk", 45, 3, 50);
                    trg.Shape_Edge(playerID, 1, "40 + 1n Mutalisk", 45, 3, 50)
                    # (Line 169) else
                    # (Line 170) epic.Shape_Edge(playerID, 1, "40 + 1n Mutalisk", 45, 3, 50, 1);
                if EUDElse()():
                    epic.Shape_Edge(playerID, 1, "40 + 1n Mutalisk", 45, 3, 50, 1)
                    # (Line 172) trg.Shape_Edge(playerID, 1, "Rhynadon (Badlands)", 45, 3, 50);
                EUDEndIf()
                trg.Shape_Edge(playerID, 1, "Rhynadon (Badlands)", 45, 3, 50)
                # (Line 173) KillUnitAt(All, "Rhynadon (Badlands)", "Anywhere", playerID);
                # (Line 175) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "Rhynadon (Badlands)", "Anywhere", playerID))
                # (Line 176) Order("40 + 1n Mutalisk", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 178) trg.Shape_Square(playerID, 1, "Scantid (Desert)", 100, 100);
                DoActions(Order("40 + 1n Mutalisk", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Shape_Square(playerID, 1, "Scantid (Desert)", 100, 100)
                # (Line 179) KillUnitAt(All, "Scantid (Desert)", "Anywhere", playerID);
                # (Line 181) if ((v.P_LoopMain[playerID] % 4) / 2 == 0)
                DoActions(KillUnitAt(All, "Scantid (Desert)", "Anywhere", playerID))
                if EUDIf()((v.P_LoopMain[playerID] % 4) // 2 == 0):
                    # (Line 182) {
                    # (Line 183) trg.Shape_Square(playerID, 1, "60 + 1n Archon", 50 - 50 * (v.P_LoopMain[playerID] % 2), 50 * (v.P_LoopMain[playerID] % 2));
                    trg.Shape_Square(playerID, 1, "60 + 1n Archon", 50 - 50 * (v.P_LoopMain[playerID] % 2), 50 * (v.P_LoopMain[playerID] % 2))
                    # (Line 184) trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", 50 - 50 * (v.P_LoopMain[playerID] % 2), 50 * (v.P_LoopMain[playerID] % 2));
                    trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", 50 - 50 * (v.P_LoopMain[playerID] % 2), 50 * (v.P_LoopMain[playerID] % 2))
                    # (Line 185) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                    # (Line 186) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);
                    DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                    # (Line 187) }
                    DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID))
                    # (Line 188) else if ((v.P_LoopMain[playerID] % 4) / 2 == 1)
                if EUDElseIf()((v.P_LoopMain[playerID] % 4) // 2 == 1):
                    # (Line 189) {
                    # (Line 190) trg.Shape_Square(playerID, 1, "60 + 1n Archon", 0 - 50 * (v.P_LoopMain[playerID] % 2), 50 * (v.P_LoopMain[playerID] % 2));
                    trg.Shape_Square(playerID, 1, "60 + 1n Archon", 0 - 50 * (v.P_LoopMain[playerID] % 2), 50 * (v.P_LoopMain[playerID] % 2))
                    # (Line 191) trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", 0 - 50 * (v.P_LoopMain[playerID] % 2), 50 * (v.P_LoopMain[playerID] % 2));
                    trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", 0 - 50 * (v.P_LoopMain[playerID] % 2), 50 * (v.P_LoopMain[playerID] % 2))
                    # (Line 192) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                    # (Line 193) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);
                    DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                    # (Line 195) }
                    DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID))
                    # (Line 196) }
                EUDEndIf()
                # (Line 198) if (v.P_LoopMain[playerID] % 4 == 0)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] % 4 == 0):
                # (Line 199) {
                # (Line 200) RemoveUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
                # (Line 202) if ((v.P_LoopMain[playerID] % 8) / 4 == 0)
                DoActions(RemoveUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID))
                if EUDIf()((v.P_LoopMain[playerID] % 8) // 4 == 0):
                    # (Line 203) trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 150, 150);
                    trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 150, 150)
                    # (Line 204) else
                    # (Line 205) epic.Shape_Square(playerID, 1, "40 + 1n Guardian", 150, 150, 1);
                if EUDElse()():
                    epic.Shape_Square(playerID, 1, "40 + 1n Guardian", 150, 150, 1)
                    # (Line 207) trg.Shape_Square(playerID, 1, "60 + 1n Archon", 150, 150);
                EUDEndIf()
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", 150, 150)
                # (Line 208) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                # (Line 210) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                # (Line 211) Order("40 + 1n Guardian", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 212) }
                DoActions(Order("40 + 1n Guardian", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 213) else if (v.P_LoopMain[playerID] % 4 == 2)
            if EUDElseIf()(v.P_LoopMain[playerID] % 4 == 2):
                # (Line 214) {
                # (Line 215) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
                # (Line 217) trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", 150, 150);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID))
                trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", 150, 150)
                # (Line 218) trg.Shape_Square(playerID, 1, " Unit. Hoffnung 25000", 150, 150);
                trg.Shape_Square(playerID, 1, " Unit. Hoffnung 25000", 150, 150)
                # (Line 219) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);
                # (Line 220) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID))
                # (Line 221) }
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID))
                # (Line 223) trg.Main_Wait(80);
            EUDEndIf()
            trg.Main_Wait(80)
            # (Line 225) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 227) if (v.P_LoopMain[playerID] == 11)
            if EUDIf()(v.P_LoopMain[playerID] == 11):
                # (Line 228) {
                # (Line 229) KillUnitAt(All, "40 + 1n Ghost", "Anywhere", playerID);
                # (Line 231) v.P_CountMain[playerID] += 1;
                DoActions(KillUnitAt(All, "40 + 1n Ghost", "Anywhere", playerID))
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 232) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 233) }
                # (Line 234) }
            EUDEndIf()
            # (Line 235) else if (v.P_CountMain[playerID] == 3)
        if EUDElseIf()(v.P_CountMain[playerID] == 3):
            # (Line 236) {
            # (Line 237) var i = 0;
            i = EUDVariable()
            i << (0)
            # (Line 238) var x = 0;
            x = EUDVariable()
            x << (0)
            # (Line 239) var y = 0;
            y = EUDVariable()
            y << (0)
            # (Line 241) if (v.P_LoopMain[playerID] < 4)
            if EUDIf()(v.P_LoopMain[playerID] >= 4, neg=True):
                # (Line 242) {
                # (Line 243) i = v.P_LoopMain[playerID];
                i << (v.P_LoopMain[playerID])
                # (Line 245) x = 120 - 40 * i;
                x << (120 - 40 * i)
                # (Line 246) y = 40 + 40 * i;
                y << (40 + 40 * i)
                # (Line 247) }
                # (Line 248) else if (v.P_LoopMain[playerID] == 4)
            if EUDElseIf()(v.P_LoopMain[playerID] == 4):
                # (Line 249) {
                # (Line 250) x = 80;
                x << (80)
                # (Line 251) y = 0;
                y << (0)
                # (Line 252) }
                # (Line 253) else if (v.P_LoopMain[playerID] == 5)
            if EUDElseIf()(v.P_LoopMain[playerID] == 5):
                # (Line 254) {
                # (Line 255) x = 80;
                x << (80)
                # (Line 256) y = 80;
                y << (80)
                # (Line 257) }
                # (Line 258) else if (v.P_LoopMain[playerID] == 6 || v.P_LoopMain[playerID] == 7)
            if EUDElseIf()(EUDSCOr()(v.P_LoopMain[playerID] == 6)(v.P_LoopMain[playerID] == 7)()):
                # (Line 259) {
                # (Line 260) x = 150;
                x << (150)
                # (Line 261) y = 150;
                y << (150)
                # (Line 262) }
                # (Line 264) if (v.P_LoopMain[playerID] < 8)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] >= 8, neg=True):
                # (Line 265) {
                # (Line 266) RemoveUnitAt(All, "40 + 1n Mutalisk", "Anywhere", playerID);
                # (Line 268) trg.Shape_Square(playerID, 1, "80 + 1n Guardian", x, y);
                DoActions(RemoveUnitAt(All, "40 + 1n Mutalisk", "Anywhere", playerID))
                trg.Shape_Square(playerID, 1, "80 + 1n Guardian", x, y)
                # (Line 269) EdgeShapeAt(playerID, 1, "Bengalaas (Jungle)", 0, 2, 25, x, y);
                EdgeShapeAt(playerID, 1, "Bengalaas (Jungle)", 0, 2, 25, x, y)
                # (Line 271) KillUnitAt(All, "80 + 1n Guardian", "Anywhere", playerID);
                # (Line 272) KillUnitAt(All, "Bengalaas (Jungle)", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "80 + 1n Guardian", "Anywhere", playerID))
                # (Line 273) }
                DoActions(KillUnitAt(All, "Bengalaas (Jungle)", "Anywhere", playerID))
                # (Line 276) if (v.P_LoopMain[playerID] == 8)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] == 8):
                # (Line 277) {
                # (Line 278) trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 160, 0);
                trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 160, 0)
                # (Line 279) trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 120, 40);
                trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 120, 40)
                # (Line 280) trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 80, 80);
                trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 80, 80)
                # (Line 281) trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 40, 120);
                trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 40, 120)
                # (Line 282) trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 80, 0);
                trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 80, 0)
                # (Line 284) trg.Shape_Square(playerID, 1, " Unit. Hoffnung 25000", 160, 0);
                trg.Shape_Square(playerID, 1, " Unit. Hoffnung 25000", 160, 0)
                # (Line 285) trg.Shape_Square(playerID, 1, " Unit. Hoffnung 25000", 120, 40);
                trg.Shape_Square(playerID, 1, " Unit. Hoffnung 25000", 120, 40)
                # (Line 286) trg.Shape_Square(playerID, 1, " Unit. Hoffnung 25000", 80, 80);
                trg.Shape_Square(playerID, 1, " Unit. Hoffnung 25000", 80, 80)
                # (Line 287) trg.Shape_Square(playerID, 1, " Unit. Hoffnung 25000", 40, 120);
                trg.Shape_Square(playerID, 1, " Unit. Hoffnung 25000", 40, 120)
                # (Line 288) trg.Shape_Square(playerID, 1, " Unit. Hoffnung 25000", 80, 0);
                trg.Shape_Square(playerID, 1, " Unit. Hoffnung 25000", 80, 0)
                # (Line 290) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID);
                # (Line 292) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID))
                # (Line 293) Order("40 + 1n Guardian", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 294) }
                DoActions(Order("40 + 1n Guardian", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 296) if (v.P_LoopMain[playerID] == 12)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] == 12):
                # (Line 297) {
                # (Line 298) adv.Shape_SquareAt2(playerID, 1, "40 + 1n Guardian", 25, 25, 150, 150);
                adv.Shape_SquareAt2(playerID, 1, "40 + 1n Guardian", 25, 25, 150, 150)
                # (Line 299) adv.Shape_SquareAt2(playerID, 1, "40 + 1n Guardian", 25, 25, -150, -150);
                adv.Shape_SquareAt2(playerID, 1, "40 + 1n Guardian", 25, 25, -150, -150)
                # (Line 300) adv.Shape_SquareAt2(playerID, 1, "40 + 1n Guardian", 25, 25, -150, 150);
                adv.Shape_SquareAt2(playerID, 1, "40 + 1n Guardian", 25, 25, -150, 150)
                # (Line 301) adv.Shape_SquareAt2(playerID, 1, "40 + 1n Guardian", 25, 25, 150, -150);
                adv.Shape_SquareAt2(playerID, 1, "40 + 1n Guardian", 25, 25, 150, -150)
                # (Line 303) adv.Shape_SquareAt2(playerID, 1, " Unit. Hoffnung 25000", 25, 25, 150, 150);
                adv.Shape_SquareAt2(playerID, 1, " Unit. Hoffnung 25000", 25, 25, 150, 150)
                # (Line 304) adv.Shape_SquareAt2(playerID, 1, " Unit. Hoffnung 25000", 25, 25, -150, -150);
                adv.Shape_SquareAt2(playerID, 1, " Unit. Hoffnung 25000", 25, 25, -150, -150)
                # (Line 305) adv.Shape_SquareAt2(playerID, 1, " Unit. Hoffnung 25000", 25, 25, -150, 150);
                adv.Shape_SquareAt2(playerID, 1, " Unit. Hoffnung 25000", 25, 25, -150, 150)
                # (Line 306) adv.Shape_SquareAt2(playerID, 1, " Unit. Hoffnung 25000", 25, 25, 150, -150);
                adv.Shape_SquareAt2(playerID, 1, " Unit. Hoffnung 25000", 25, 25, 150, -150)
                # (Line 307) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID);
                # (Line 309) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID))
                # (Line 310) Order("40 + 1n Guardian", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 311) }
                DoActions(Order("40 + 1n Guardian", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 314) trg.Main_Wait(80);
            EUDEndIf()
            trg.Main_Wait(80)
            # (Line 316) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 318) if (v.P_LoopMain[playerID] == 16)
            if EUDIf()(v.P_LoopMain[playerID] == 16):
                # (Line 319) {
                # (Line 320) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 321) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 322) }
                # (Line 323) }
            EUDEndIf()
            # (Line 324) else if (v.P_CountMain[playerID] == 4)
        if EUDElseIf()(v.P_CountMain[playerID] == 4):
            # (Line 325) {
            # (Line 328) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
            # (Line 329) KillUnitAt(All, "60 + 1n Siege", "Anywhere", playerID);
            DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID))
            # (Line 330) KillUnitAt(All, "40 + 1n Ghost", "Anywhere", playerID);
            DoActions(KillUnitAt(All, "60 + 1n Siege", "Anywhere", playerID))
            # (Line 332) trg.SkillEnd();
            DoActions(KillUnitAt(All, "40 + 1n Ghost", "Anywhere", playerID))
            trg.SkillEnd()
            # (Line 333) }
            # (Line 334) }
        EUDEndIf()
        # (Line 335) }
    EUDEndIf()
    # (Line 337) function EdgeShapeAt(playerID : TrgPlayer, count, Unit : TrgUnit, degree, n, interval, x, y)

# (Line 338) {
@EUDTypedFunc([TrgPlayer, None, TrgUnit, None, None, None, None, None])
def EdgeShapeAt(playerID, count, Unit, degree, n, interval, x, y):
    # (Line 339) adv.Shape_EdgeAt(playerID, count, Unit, degree, n, interval, x, y);
    adv.Shape_EdgeAt(playerID, count, Unit, degree, n, interval, x, y)
    # (Line 340) adv.Shape_EdgeAt(playerID, count, Unit, degree, n, interval, -x, -y);
    adv.Shape_EdgeAt(playerID, count, Unit, degree, n, interval, -x, -y)
    # (Line 341) adv.Shape_EdgeAt(playerID, count, Unit, degree, n, interval, -y, x);
    adv.Shape_EdgeAt(playerID, count, Unit, degree, n, interval, -y, x)
    # (Line 342) adv.Shape_EdgeAt(playerID, count, Unit, degree, n, interval, y, -x);
    adv.Shape_EdgeAt(playerID, count, Unit, degree, n, interval, y, -x)
    # (Line 343) }
