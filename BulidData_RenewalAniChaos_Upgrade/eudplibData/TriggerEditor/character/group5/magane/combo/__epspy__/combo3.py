## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _RELIMP(path, mod_name):
    import inspect, pathlib, importlib.util
    p = pathlib.Path(inspect.getabsfile(inspect.currentframe())).parent
    for s in path.split("."):
        if s == "":  p = p.parent
        else:  p = p / s
    try:
        spec = importlib.util.spec_from_file_location(mod_name, p / (mod_name + ".py"))
        module = importlib.util.module_from_spec(spec)
        spec.loader.exec_module(module)
    except FileNotFoundError:
        loader = EPSLoader(mod_name, str(p / (mod_name + ".eps")))
        spec = importlib.util.spec_from_loader(mod_name, loader)
        module = loader.create_module(spec)
        loader.exec_module(module)
    return module

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import PluginVariables as msqcvar;
import PluginVariables as msqcvar
# (Line 2) import variable as v;
import variable as v
# (Line 3) import func.trig as trg;
from func import trig as trg
# (Line 4) import func.trigadv as adv;
from func import trigadv as adv
# (Line 5) import func.trigepic as epic;
from func import trigepic as epic
# (Line 7) function EdgeShapeAt(playerID : TrgPlayer, count, Unit : TrgUnit, degree, n, interval, x, y);
# (Line 8) function NxNSquareShapeAt(playerID : TrgPlayer, count, Unit : TrgUnit, n, interval, x, y);
# (Line 9) function EdgeShapeAtWithProperty(playerID : TrgPlayer, count, Unit : TrgUnit, degree, n, interval, x, y, property);
# (Line 11) function main(playerID)
# (Line 12) {
@EUDFunc
def f_main(playerID):
    # (Line 13) trg.Buff_ShieldFix(1);
    trg.Buff_ShieldFix(1)
    # (Line 15) if (v.P_WaitMain[playerID] == 0)
    if EUDIf()(v.P_WaitMain[playerID] == 0):
        # (Line 16) {
        # (Line 17) if (v.P_CountMain[playerID] == 0)
        if EUDIf()(v.P_CountMain[playerID] == 0):
            # (Line 18) {
            # (Line 19) SetDeaths(playerID, SetTo, 1, " `ShieldRecharge");
            # (Line 21) if (v.P_LoopMain[playerID] % 2 == 0)
            DoActions(SetDeaths(playerID, SetTo, 1, " `ShieldRecharge"))
            if EUDIf()(v.P_LoopMain[playerID] % 2 == 0):
                # (Line 22) {
                # (Line 23) RemoveUnitAt(All, "40 + 1n Mutalisk", "Anywhere", playerID);
                # (Line 24) RemoveUnitAt(All, " Creep. Dunkelheit", "Anywhere", playerID);
                DoActions(RemoveUnitAt(All, "40 + 1n Mutalisk", "Anywhere", playerID))
                # (Line 26) var i = v.P_LoopMain[playerID] / 2;
                DoActions(RemoveUnitAt(All, " Creep. Dunkelheit", "Anywhere", playerID))
                i = EUDVariable()
                i << (v.P_LoopMain[playerID] // 2)
                # (Line 28) trg.Shape_Square(playerID, 1, "40 + 1n Mutalisk", 25 + 25 * i, 75 - 25 * i);
                trg.Shape_Square(playerID, 1, "40 + 1n Mutalisk", 25 + 25 * i, 75 - 25 * i)
                # (Line 29) trg.Shape_Square(playerID, 1, "Rhynadon (Badlands)", 25 + 25 * i, 75 - 25 * i);
                trg.Shape_Square(playerID, 1, "Rhynadon (Badlands)", 25 + 25 * i, 75 - 25 * i)
                # (Line 30) KillUnitAt(All, "Rhynadon (Badlands)", "Anywhere", playerID);
                # (Line 32) trg.Shape_Square(playerID, 1, " Creep. Dunkelheit", 100, 100);
                DoActions(KillUnitAt(All, "Rhynadon (Badlands)", "Anywhere", playerID))
                trg.Shape_Square(playerID, 1, " Creep. Dunkelheit", 100, 100)
                # (Line 33) trg.Shape_Square(playerID, 6, "Bengalaas (Jungle)", 100, 100);
                trg.Shape_Square(playerID, 6, "Bengalaas (Jungle)", 100, 100)
                # (Line 34) trg.Shape_Square(playerID, 1, "Target", 100, 100);
                trg.Shape_Square(playerID, 1, "Target", 100, 100)
                # (Line 35) trg.Shape_Dot(playerID, 1, "Target", 0, 0);
                trg.Shape_Dot(playerID, 1, "Target", 0, 0)
                # (Line 36) KillUnitAt(All, "Bengalaas (Jungle)", "Anywhere", playerID);
                # (Line 37) KillUnitAt(All, "Target", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "Bengalaas (Jungle)", "Anywhere", playerID))
                # (Line 39) trg.Shape_Square(playerID, 1, "40 + 1n Zealot", 40 + 40 * i, 40 + 40 * i);
                DoActions(KillUnitAt(All, "Target", "Anywhere", playerID))
                trg.Shape_Square(playerID, 1, "40 + 1n Zealot", 40 + 40 * i, 40 + 40 * i)
                # (Line 40) KillUnitAt(All, "40 + 1n Zealot", "Anywhere", playerID);
                # (Line 42) trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", 50, 50);
                DoActions(KillUnitAt(All, "40 + 1n Zealot", "Anywhere", playerID))
                trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", 50, 50)
                # (Line 43) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);
                # (Line 45) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID))
                # (Line 46) MoveUnit(All, " Creep. Dunkelheit", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 47) Order("40 + 1n Mutalisk", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveUnit(All, " Creep. Dunkelheit", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                # (Line 48) Order(" Creep. Dunkelheit", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(Order("40 + 1n Mutalisk", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 49) }
                DoActions(Order(" Creep. Dunkelheit", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 51) trg.Main_Wait(80);
            EUDEndIf()
            trg.Main_Wait(80)
            # (Line 53) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 55) if (v.P_LoopMain[playerID] == 8)
            if EUDIf()(v.P_LoopMain[playerID] == 8):
                # (Line 56) {
                # (Line 57) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 58) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 59) }
                # (Line 60) }
            EUDEndIf()
            # (Line 61) else if (v.P_CountMain[playerID] == 1)
        if EUDElseIf()(v.P_CountMain[playerID] == 1):
            # (Line 62) {
            # (Line 63) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 64) {
                # (Line 65) RemoveUnitAt(All, "40 + 1n Mutalisk", "Anywhere", playerID);
                # (Line 66) RemoveUnitAt(All, " Creep. Dunkelheit", "Anywhere", playerID);
                DoActions(RemoveUnitAt(All, "40 + 1n Mutalisk", "Anywhere", playerID))
                # (Line 67) }
                DoActions(RemoveUnitAt(All, " Creep. Dunkelheit", "Anywhere", playerID))
                # (Line 68) RemoveUnitAt(All, "40 + 1n Mutalisk", "Anywhere", playerID);
            EUDEndIf()
            # (Line 70) trg.Shape_Square(playerID, 1, "40 + 1n Mutalisk", 120 - 8 * v.P_LoopMain[playerID], 0);
            DoActions(RemoveUnitAt(All, "40 + 1n Mutalisk", "Anywhere", playerID))
            trg.Shape_Square(playerID, 1, "40 + 1n Mutalisk", 120 - 8 * v.P_LoopMain[playerID], 0)
            # (Line 71) trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 120 - 8 * v.P_LoopMain[playerID], 0);
            trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 120 - 8 * v.P_LoopMain[playerID], 0)
            # (Line 72) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
            # (Line 74) trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 170 - 8 * v.P_LoopMain[playerID], 0);
            DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
            trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 170 - 8 * v.P_LoopMain[playerID], 0)
            # (Line 75) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
            # (Line 77) if (v.P_LoopMain[playerID] % 2 == 0)
            DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID))
            if EUDIf()(v.P_LoopMain[playerID] % 2 == 0):
                # (Line 78) {
                # (Line 79) trg.Shape_Square(playerID, 1, "Scantid (Desert)", 100, 100);
                trg.Shape_Square(playerID, 1, "Scantid (Desert)", 100, 100)
                # (Line 80) KillUnitAt(All, "Scantid (Desert)", "Anywhere", playerID);
                # (Line 81) }
                DoActions(KillUnitAt(All, "Scantid (Desert)", "Anywhere", playerID))
                # (Line 83) if (v.P_LoopMain[playerID] == 0)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 84) {
                # (Line 85) trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", 100, 100);
                trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", 100, 100)
                # (Line 86) trg.Shape_Square(playerID, 1, "50 + 1n Tank", 100, 100);
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", 100, 100)
                # (Line 87) KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID);
                # (Line 88) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID))
                # (Line 89) }
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                # (Line 90) else if (v.P_LoopMain[playerID] == 2)
            if EUDElseIf()(v.P_LoopMain[playerID] == 2):
                # (Line 91) {
                # (Line 92) trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 100, 100);
                trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 100, 100)
                # (Line 93) trg.Shape_Square(playerID, 1, "60 + 1n Archon", 100, 100);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", 100, 100)
                # (Line 94) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                # (Line 96) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                # (Line 97) Order("40 + 1n Guardian", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 98) }
                DoActions(Order("40 + 1n Guardian", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 99) else if (v.P_LoopMain[playerID] == 4)
            if EUDElseIf()(v.P_LoopMain[playerID] == 4):
                # (Line 100) {
                # (Line 101) trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", 150, 0);
                trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", 150, 0)
                # (Line 102) trg.Shape_Square(playerID, 1, "50 + 1n Tank", 150, 0);
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", 150, 0)
                # (Line 103) KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID);
                # (Line 104) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID))
                # (Line 105) }
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                # (Line 106) else if (v.P_LoopMain[playerID] == 6)
            if EUDElseIf()(v.P_LoopMain[playerID] == 6):
                # (Line 107) {
                # (Line 108) trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 150, 0);
                trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 150, 0)
                # (Line 109) trg.Shape_Square(playerID, 1, "60 + 1n Archon", 150, 0);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", 150, 0)
                # (Line 110) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                # (Line 112) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                # (Line 113) Order("40 + 1n Guardian", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 114) }
                DoActions(Order("40 + 1n Guardian", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 116) trg.Main_Wait(80);
            EUDEndIf()
            trg.Main_Wait(80)
            # (Line 118) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 120) if (v.P_LoopMain[playerID] == 8)
            if EUDIf()(v.P_LoopMain[playerID] == 8):
                # (Line 121) {
                # (Line 122) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 123) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 124) }
                # (Line 125) }
            EUDEndIf()
            # (Line 126) else if (v.P_CountMain[playerID] == 2)
        if EUDElseIf()(v.P_CountMain[playerID] == 2):
            # (Line 127) {
            # (Line 128) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 129) {
                # (Line 130) RemoveUnitAt(All, "40 + 1n Mutalisk", "Anywhere", playerID);
                # (Line 131) }
                DoActions(RemoveUnitAt(All, "40 + 1n Mutalisk", "Anywhere", playerID))
                # (Line 133) if (v.P_LoopMain[playerID] == 0)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 134) {
                # (Line 135) trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", 150, 150);
                trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", 150, 150)
                # (Line 136) trg.Shape_Square(playerID, 1, "50 + 1n Tank", 150, 150);
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", 150, 150)
                # (Line 137) trg.Shape_Dot(playerID, 1, "50 + 1n Battlecruiser", 0, 0);
                trg.Shape_Dot(playerID, 1, "50 + 1n Battlecruiser", 0, 0)
                # (Line 138) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
                # (Line 139) KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                # (Line 140) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID))
                # (Line 141) }
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                # (Line 142) else if (v.P_LoopMain[playerID] == 2)
            if EUDElseIf()(v.P_LoopMain[playerID] == 2):
                # (Line 143) {
                # (Line 144) trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 150, 150);
                trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 150, 150)
                # (Line 145) trg.Shape_Square(playerID, 1, "60 + 1n Archon", 150, 150);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", 150, 150)
                # (Line 146) trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 75, 75);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 75, 75)
                # (Line 147) trg.Shape_Square(playerID, 1, "40 + 1n Ghost", 75, 75);
                trg.Shape_Square(playerID, 1, "40 + 1n Ghost", 75, 75)
                # (Line 148) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
                # (Line 149) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                # (Line 151) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                # (Line 152) MoveUnit(All, "40 + 1n Ghost", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 153) Order("40 + 1n Guardian", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveUnit(All, "40 + 1n Ghost", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                # (Line 154) Order("40 + 1n Ghost", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(Order("40 + 1n Guardian", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 155) }
                DoActions(Order("40 + 1n Ghost", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 156) else if (v.P_LoopMain[playerID] == 4)
            if EUDElseIf()(v.P_LoopMain[playerID] == 4):
                # (Line 157) {
                # (Line 158) trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", 200, 0);
                trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", 200, 0)
                # (Line 159) trg.Shape_Square(playerID, 1, "50 + 1n Tank", 200, 0);
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", 200, 0)
                # (Line 160) trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 150, 150);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 150, 150)
                # (Line 161) trg.Shape_Square(playerID, 1, "40 + 1n Ghost", 150, 150);
                trg.Shape_Square(playerID, 1, "40 + 1n Ghost", 150, 150)
                # (Line 162) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
                # (Line 163) KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                # (Line 164) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID))
                # (Line 166) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                # (Line 167) MoveUnit(All, "40 + 1n Ghost", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 168) Order("40 + 1n Ghost", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveUnit(All, "40 + 1n Ghost", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                # (Line 169) }
                DoActions(Order("40 + 1n Ghost", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 170) else if (v.P_LoopMain[playerID] == 6)
            if EUDElseIf()(v.P_LoopMain[playerID] == 6):
                # (Line 171) {
                # (Line 172) trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 200, 0);
                trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 200, 0)
                # (Line 173) trg.Shape_Square(playerID, 1, "60 + 1n Archon", 200, 0);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", 200, 0)
                # (Line 174) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                # (Line 176) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                # (Line 177) Order("40 + 1n Guardian", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 178) }
                DoActions(Order("40 + 1n Guardian", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 179) trg.Main_Wait(80);
            EUDEndIf()
            trg.Main_Wait(80)
            # (Line 181) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 183) if (v.P_LoopMain[playerID] == 19)
            if EUDIf()(v.P_LoopMain[playerID] == 19):
                # (Line 184) {
                # (Line 185) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 186) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 187) }
                # (Line 188) }
            EUDEndIf()
            # (Line 189) else if (v.P_CountMain[playerID] == 3)
        if EUDElseIf()(v.P_CountMain[playerID] == 3):
            # (Line 190) {
            # (Line 191) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 192) {
                # (Line 193) trg.Shape_NxNSquare(playerID, 1, "40 + 1n Guardian", 3, 50);
                trg.Shape_NxNSquare(playerID, 1, "40 + 1n Guardian", 3, 50)
                # (Line 194) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
                # (Line 195) epic.Shape_Edge(playerID, 1, " Unit. Hoffnung 25000", 45, 2, 50, 1);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID))
                epic.Shape_Edge(playerID, 1, " Unit. Hoffnung 25000", 45, 2, 50, 1)
                # (Line 196) trg.Shape_Edge(playerID, 1, "40 + 1n Drone", 0, 2, 30);
                trg.Shape_Edge(playerID, 1, "40 + 1n Drone", 0, 2, 30)
                # (Line 197) trg.Shape_NxNSquare(playerID, 1, " Creep. Licht", 2, 75);
                trg.Shape_NxNSquare(playerID, 1, " Creep. Licht", 2, 75)
                # (Line 198) }
                # (Line 199) else if (v.P_LoopMain[playerID] == 2)
            if EUDElseIf()(v.P_LoopMain[playerID] == 2):
                # (Line 200) {
                # (Line 201) NxNSquareShapeAt(playerID, 1, "40 + 1n Guardian", 3, 50, 150, 0);
                NxNSquareShapeAt(playerID, 1, "40 + 1n Guardian", 3, 50, 150, 0)
                # (Line 202) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
                # (Line 203) EdgeShapeAtWithProperty(playerID, 1, " Unit. Hoffnung 25000", 45, 2, 50, 150, 0, 1);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID))
                EdgeShapeAtWithProperty(playerID, 1, " Unit. Hoffnung 25000", 45, 2, 50, 150, 0, 1)
                # (Line 204) EdgeShapeAt(playerID, 1, "40 + 1n Drone", 0, 2, 30, 150, 0);
                EdgeShapeAt(playerID, 1, "40 + 1n Drone", 0, 2, 30, 150, 0)
                # (Line 205) NxNSquareShapeAt(playerID, 1, " Creep. Licht", 2, 75, 150, 0);
                NxNSquareShapeAt(playerID, 1, " Creep. Licht", 2, 75, 150, 0)
                # (Line 206) trg.Shape_Square(playerID, 1, "40 + 1n Mutalisk", 150, 0);
                trg.Shape_Square(playerID, 1, "40 + 1n Mutalisk", 150, 0)
                # (Line 207) }
                # (Line 210) if (v.P_LoopMain[playerID] < 3)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] >= 3, neg=True):
                # (Line 211) {
                # (Line 212) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 213) MoveUnit(All, " Unit. Hoffnung 25000", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 214) MoveUnit(All, "40 + 1n Drone", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                DoActions(MoveUnit(All, " Unit. Hoffnung 25000", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                # (Line 215) MoveUnit(All, " Creep. Licht", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                DoActions(MoveUnit(All, "40 + 1n Drone", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                # (Line 216) MoveUnit(All, "40 + 1n Mutalisk", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                DoActions(MoveUnit(All, " Creep. Licht", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                # (Line 217) Order(" Unit. Hoffnung 25000", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveUnit(All, "40 + 1n Mutalisk", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                # (Line 218) Order("40 + 1n Drone", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(Order(" Unit. Hoffnung 25000", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 219) Order(" Creep. Licht", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(Order("40 + 1n Drone", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 220) Order("40 + 1n Mutalisk", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(Order(" Creep. Licht", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 221) }
                DoActions(Order("40 + 1n Mutalisk", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 223) trg.Main_Wait(80);
            EUDEndIf()
            trg.Main_Wait(80)
            # (Line 225) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 227) if (v.P_LoopMain[playerID] == 42)
            if EUDIf()(v.P_LoopMain[playerID] == 42):
                # (Line 228) {
                # (Line 229) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 230) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 231) }
                # (Line 232) }
            EUDEndIf()
            # (Line 233) else if (v.P_CountMain[playerID] == 4)
        if EUDElseIf()(v.P_CountMain[playerID] == 4):
            # (Line 234) {
            # (Line 235) KillUnitAt(All, "40 + 1n Zergling", "Anywhere", playerID);
            # (Line 236) KillUnitAt(All, "40 + 1n Drone", "Anywhere", playerID);
            DoActions(KillUnitAt(All, "40 + 1n Zergling", "Anywhere", playerID))
            # (Line 237) KillUnitAt(All, "60 + 1n Siege", "Anywhere", playerID);
            DoActions(KillUnitAt(All, "40 + 1n Drone", "Anywhere", playerID))
            # (Line 238) KillUnitAt(All, "40 + 1n Mutalisk", "Anywhere", playerID);
            DoActions(KillUnitAt(All, "60 + 1n Siege", "Anywhere", playerID))
            # (Line 239) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
            DoActions(KillUnitAt(All, "40 + 1n Mutalisk", "Anywhere", playerID))
            # (Line 240) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID);
            DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID))
            # (Line 241) KillUnitAt(All, " Creep. Licht", "Anywhere", playerID);
            DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID))
            # (Line 242) KillUnitAt(All, "40 + 1n Ghost", "Anywhere", playerID);
            DoActions(KillUnitAt(All, " Creep. Licht", "Anywhere", playerID))
            # (Line 246) trg.SkillEnd();
            DoActions(KillUnitAt(All, "40 + 1n Ghost", "Anywhere", playerID))
            trg.SkillEnd()
            # (Line 247) }
            # (Line 248) }
        EUDEndIf()
        # (Line 249) }
    EUDEndIf()
    # (Line 251) function EdgeShapeAt(playerID : TrgPlayer, count, Unit : TrgUnit, degree, n, interval, x, y)

# (Line 252) {
@EUDTypedFunc([TrgPlayer, None, TrgUnit, None, None, None, None, None])
def EdgeShapeAt(playerID, count, Unit, degree, n, interval, x, y):
    # (Line 253) adv.Shape_EdgeAt(playerID, count, Unit, degree, n, interval, x, y);
    adv.Shape_EdgeAt(playerID, count, Unit, degree, n, interval, x, y)
    # (Line 254) adv.Shape_EdgeAt(playerID, count, Unit, degree, n, interval, -x, -y);
    adv.Shape_EdgeAt(playerID, count, Unit, degree, n, interval, -x, -y)
    # (Line 255) adv.Shape_EdgeAt(playerID, count, Unit, degree, n, interval, -y, x);
    adv.Shape_EdgeAt(playerID, count, Unit, degree, n, interval, -y, x)
    # (Line 256) adv.Shape_EdgeAt(playerID, count, Unit, degree, n, interval, y, -x);
    adv.Shape_EdgeAt(playerID, count, Unit, degree, n, interval, y, -x)
    # (Line 257) }
    # (Line 259) function EdgeShapeAtWithProperty(playerID : TrgPlayer, count, Unit : TrgUnit, degree, n, interval, x, y, property)

# (Line 260) {
@EUDTypedFunc([TrgPlayer, None, TrgUnit, None, None, None, None, None, None])
def EdgeShapeAtWithProperty(playerID, count, Unit, degree, n, interval, x, y, property):
    # (Line 261) epic.Shape_EdgeAt(playerID, count, Unit, degree, n, interval, x, y, property);
    epic.Shape_EdgeAt(playerID, count, Unit, degree, n, interval, x, y, property)
    # (Line 262) epic.Shape_EdgeAt(playerID, count, Unit, degree, n, interval, -x, -y, property);
    epic.Shape_EdgeAt(playerID, count, Unit, degree, n, interval, -x, -y, property)
    # (Line 263) epic.Shape_EdgeAt(playerID, count, Unit, degree, n, interval, -y, x, property);
    epic.Shape_EdgeAt(playerID, count, Unit, degree, n, interval, -y, x, property)
    # (Line 264) epic.Shape_EdgeAt(playerID, count, Unit, degree, n, interval, y, -x, property);
    epic.Shape_EdgeAt(playerID, count, Unit, degree, n, interval, y, -x, property)
    # (Line 265) }
    # (Line 267) function NxNSquareShapeAt(playerID : TrgPlayer, count, Unit : TrgUnit, n, interval, x, y)

# (Line 268) {
@EUDTypedFunc([TrgPlayer, None, TrgUnit, None, None, None, None])
def NxNSquareShapeAt(playerID, count, Unit, n, interval, x, y):
    # (Line 269) adv.Shape_NxNSquareAt2(playerID, count, Unit, n, interval, x, y);
    adv.Shape_NxNSquareAt2(playerID, count, Unit, n, interval, x, y)
    # (Line 270) adv.Shape_NxNSquareAt2(playerID, count, Unit, n, interval, -x, -y);
    adv.Shape_NxNSquareAt2(playerID, count, Unit, n, interval, -x, -y)
    # (Line 271) adv.Shape_NxNSquareAt2(playerID, count, Unit, n, interval, -y, x);
    adv.Shape_NxNSquareAt2(playerID, count, Unit, n, interval, -y, x)
    # (Line 272) adv.Shape_NxNSquareAt2(playerID, count, Unit, n, interval, y, -x);
    adv.Shape_NxNSquareAt2(playerID, count, Unit, n, interval, y, -x)
    # (Line 273) }
