## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import variable as v;
import variable as v
# (Line 2) import func.trig as trg;
from func import trig as trg
# (Line 4) function main(playerID)
# (Line 5) {
@EUDFunc
def f_main(playerID):
    # (Line 6) if (v.P_WaitMain[playerID] == 0)
    if EUDIf()(v.P_WaitMain[playerID] == 0):
        # (Line 7) {
        # (Line 8) if (v.P_CountMain[playerID] == 0)
        if EUDIf()(v.P_CountMain[playerID] == 0):
            # (Line 9) {
            # (Line 10) if (v.P_LoopMain[playerID] < 2)
            if EUDIf()(v.P_LoopMain[playerID] >= 2, neg=True):
                # (Line 11) {
                # (Line 12) trg.Shape_Dot(playerID, 1, "40 + 1n Wraith", 0, 0);
                trg.Shape_Dot(playerID, 1, "40 + 1n Wraith", 0, 0)
                # (Line 14) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 16) trg.Main_Wait(320);
                DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                trg.Main_Wait(320)
                # (Line 18) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 19) }
                # (Line 20) else if (v.P_LoopMain[playerID] == 2)
            if EUDElseIf()(v.P_LoopMain[playerID] == 2):
                # (Line 21) {
                # (Line 22) trg.Main_Wait(80);
                trg.Main_Wait(80)
                # (Line 24) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 25) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 26) }
                # (Line 27) }
            EUDEndIf()
            # (Line 28) else if (v.P_CountMain[playerID] == 1)
        if EUDElseIf()(v.P_CountMain[playerID] == 1):
            # (Line 29) {
            # (Line 30) if (v.P_LoopMain[playerID] < 2)
            if EUDIf()(v.P_LoopMain[playerID] >= 2, neg=True):
                # (Line 31) {
                # (Line 32) trg.Shape_Dot(playerID, 1, "40 + 1n Wraith", 0, 0);
                trg.Shape_Dot(playerID, 1, "40 + 1n Wraith", 0, 0)
                # (Line 34) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 36) trg.Main_Wait(320);
                DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                trg.Main_Wait(320)
                # (Line 38) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 39) }
                # (Line 40) else if (v.P_LoopMain[playerID] == 2)
            if EUDElseIf()(v.P_LoopMain[playerID] == 2):
                # (Line 41) {
                # (Line 42) trg.Main_Wait(80);
                trg.Main_Wait(80)
                # (Line 44) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 45) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 46) }
                # (Line 47) }
            EUDEndIf()
            # (Line 48) else if (v.P_CountMain[playerID] == 2)
        if EUDElseIf()(v.P_CountMain[playerID] == 2):
            # (Line 49) {
            # (Line 50) if (v.P_LoopMain[playerID] < 4)
            if EUDIf()(v.P_LoopMain[playerID] >= 4, neg=True):
                # (Line 51) {
                # (Line 52) trg.Shape_Dot(playerID, 8, "Bengalaas (Jungle)", 0, 0);
                trg.Shape_Dot(playerID, 8, "Bengalaas (Jungle)", 0, 0)
                # (Line 53) trg.Shape_Dot(playerID, 1, "40 + 1n Guardian", 0, 0);
                trg.Shape_Dot(playerID, 1, "40 + 1n Guardian", 0, 0)
                # (Line 55) KillUnitAt(All, "Bengalaas (Jungle)", "Anywhere", playerID);
                # (Line 56) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "Bengalaas (Jungle)", "Anywhere", playerID))
                # (Line 58) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 60) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 61) }
                # (Line 62) else if (v.P_LoopMain[playerID] == 4)
            if EUDElseIf()(v.P_LoopMain[playerID] == 4):
                # (Line 63) {
                # (Line 64) trg.Main_Wait(160);
                trg.Main_Wait(160)
                # (Line 66) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 67) }
                # (Line 68) else if (v.P_LoopMain[playerID] == 5)
            if EUDElseIf()(v.P_LoopMain[playerID] == 5):
                # (Line 69) {
                # (Line 70) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 71) MoveLocation("26.Yume_Bozo", v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 73) if (playerID < 3)
                DoActions(MoveLocation("26.Yume_Bozo", v.P_UnitID[playerID], playerID, "Anywhere"))
                if EUDIf()(playerID >= 3, neg=True):
                    # (Line 74) {
                    # (Line 75) if (Bring(3, AtLeast, 1, v.P_UnitID[3], "26.Yume_Bozo"))
                    if EUDIf()(Bring(3, AtLeast, 1, v.P_UnitID[3], "26.Yume_Bozo")):
                        # (Line 76) {
                        # (Line 77) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[3], 3, "Anywhere");
                        # (Line 78) }
                        DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[3], 3, "Anywhere"))
                        # (Line 79) else if (Bring(4, AtLeast, 1, v.P_UnitID[4], "26.Yume_Bozo"))
                    if EUDElseIf()(Bring(4, AtLeast, 1, v.P_UnitID[4], "26.Yume_Bozo")):
                        # (Line 80) {
                        # (Line 81) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[4], 4, "Anywhere");
                        # (Line 82) }
                        DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[4], 4, "Anywhere"))
                        # (Line 83) else if (Bring(5, AtLeast, 1, v.P_UnitID[5], "26.Yume_Bozo"))
                    if EUDElseIf()(Bring(5, AtLeast, 1, v.P_UnitID[5], "26.Yume_Bozo")):
                        # (Line 84) {
                        # (Line 85) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[5], 5, "Anywhere");
                        # (Line 86) }
                        DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[5], 5, "Anywhere"))
                        # (Line 88) }
                    EUDEndIf()
                    # (Line 89) else if (playerID >= 3)
                if EUDElseIf()(playerID >= 3):
                    # (Line 90) {
                    # (Line 91) if (Bring(0, AtLeast, 1, v.P_UnitID[0], "26.Yume_Bozo"))
                    if EUDIf()(Bring(0, AtLeast, 1, v.P_UnitID[0], "26.Yume_Bozo")):
                        # (Line 92) {
                        # (Line 93) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[0], 0, "Anywhere");
                        # (Line 94) }
                        DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[0], 0, "Anywhere"))
                        # (Line 95) else if (Bring(1, AtLeast, 1, v.P_UnitID[1], "26.Yume_Bozo"))
                    if EUDElseIf()(Bring(1, AtLeast, 1, v.P_UnitID[1], "26.Yume_Bozo")):
                        # (Line 96) {
                        # (Line 97) MoveLocation(v.P_LocationID[playerID],v.P_UnitID[1], 1, "Anywhere");
                        # (Line 98) }
                        DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[1], 1, "Anywhere"))
                        # (Line 99) else if (Bring(2, AtLeast, 1, v.P_UnitID[2], "26.Yume_Bozo"))
                    if EUDElseIf()(Bring(2, AtLeast, 1, v.P_UnitID[2], "26.Yume_Bozo")):
                        # (Line 100) {
                        # (Line 101) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[2], 2, "Anywhere");
                        # (Line 102) }
                        DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[2], 2, "Anywhere"))
                        # (Line 103) }
                    EUDEndIf()
                    # (Line 104) MoveUnit(All, v.P_UnitID[playerID], playerID, "Anywhere", v.P_LocationID[playerID]);
                EUDEndIf()
                # (Line 106) trg.Main_Wait(80);
                DoActions(MoveUnit(All, v.P_UnitID[playerID], playerID, "Anywhere", v.P_LocationID[playerID]))
                trg.Main_Wait(80)
                # (Line 108) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 109) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 110) }
                # (Line 112) }
            EUDEndIf()
            # (Line 113) else if (v.P_CountMain[playerID] == 3)
        if EUDElseIf()(v.P_CountMain[playerID] == 3):
            # (Line 114) {
            # (Line 115) if (v.P_LoopMain[playerID] < 4)
            if EUDIf()(v.P_LoopMain[playerID] >= 4, neg=True):
                # (Line 116) {
                # (Line 117) trg.Shape_Edge(playerID, 1, "Kakaru (Twilight)", 0, 3 + 2 * v.P_LoopMain[playerID], 50 + 50 * v.P_LoopMain[playerID]);
                trg.Shape_Edge(playerID, 1, "Kakaru (Twilight)", 0, 3 + 2 * v.P_LoopMain[playerID], 50 + 50 * v.P_LoopMain[playerID])
                # (Line 118) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);
                # (Line 120) if (v.P_LoopMain[playerID] % 2 == 0)
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID))
                if EUDIf()(v.P_LoopMain[playerID] % 2 == 0):
                    # (Line 121) {
                    # (Line 122) trg.Shape_Edge(playerID, 1, "40 + 1n Zealot", 0, 3 + 2 * v.P_LoopMain[playerID], 50 + 50 * v.P_LoopMain[playerID]);
                    trg.Shape_Edge(playerID, 1, "40 + 1n Zealot", 0, 3 + 2 * v.P_LoopMain[playerID], 50 + 50 * v.P_LoopMain[playerID])
                    # (Line 123) KillUnitAt(All, "40 + 1n Zealot", "Anywhere", playerID);
                    # (Line 124) }
                    DoActions(KillUnitAt(All, "40 + 1n Zealot", "Anywhere", playerID))
                    # (Line 125) else
                    # (Line 126) {
                if EUDElse()():
                    # (Line 127) trg.Shape_Edge(playerID, 1, "Protoss Dark Templar", 0, 3 + 2 * v.P_LoopMain[playerID], 50 + 50 * v.P_LoopMain[playerID]);
                    trg.Shape_Edge(playerID, 1, "Protoss Dark Templar", 0, 3 + 2 * v.P_LoopMain[playerID], 50 + 50 * v.P_LoopMain[playerID])
                    # (Line 128) KillUnitAt(All, "Protoss Dark Templar", "Anywhere", playerID);
                    # (Line 129) }
                    DoActions(KillUnitAt(All, "Protoss Dark Templar", "Anywhere", playerID))
                    # (Line 131) trg.Main_Wait(80);
                EUDEndIf()
                trg.Main_Wait(80)
                # (Line 133) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 134) }
                # (Line 135) else if (v.P_LoopMain[playerID] == 4)
            if EUDElseIf()(v.P_LoopMain[playerID] == 4):
                # (Line 136) {
                # (Line 137) trg.Shape_Line(playerID, 1, "Target", 45, 5, 75, 75);
                trg.Shape_Line(playerID, 1, "Target", 45, 5, 75, 75)
                # (Line 138) trg.Shape_Line(playerID, 1, "Target", 45, 5, 75, 0);
                trg.Shape_Line(playerID, 1, "Target", 45, 5, 75, 0)
                # (Line 139) trg.Shape_Line(playerID, 1, "Target", 225, 5, 75, 75);
                trg.Shape_Line(playerID, 1, "Target", 225, 5, 75, 75)
                # (Line 140) trg.Shape_Line(playerID, 1, "Protoss Dark Archon", 45, 5, 75, 75);
                trg.Shape_Line(playerID, 1, "Protoss Dark Archon", 45, 5, 75, 75)
                # (Line 141) trg.Shape_Line(playerID, 1, "Protoss Dark Archon", 45, 5, 75, 0);
                trg.Shape_Line(playerID, 1, "Protoss Dark Archon", 45, 5, 75, 0)
                # (Line 142) trg.Shape_Line(playerID, 1, "Protoss Dark Archon", 225, 5, 75, 75);
                trg.Shape_Line(playerID, 1, "Protoss Dark Archon", 225, 5, 75, 75)
                # (Line 143) KillUnitAt(All, "Target", "Anywhere", playerID);
                # (Line 144) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "Target", "Anywhere", playerID))
                # (Line 146) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 148) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 149) }
                # (Line 150) else if (v.P_LoopMain[playerID] == 5)
            if EUDElseIf()(v.P_LoopMain[playerID] == 5):
                # (Line 151) {
                # (Line 152) trg.Shape_Line(playerID, 1, "80 + 1n Artanis", 135, 5, 75, 75);
                trg.Shape_Line(playerID, 1, "80 + 1n Artanis", 135, 5, 75, 75)
                # (Line 153) trg.Shape_Line(playerID, 1, "80 + 1n Artanis", 135, 5, 75, 0);
                trg.Shape_Line(playerID, 1, "80 + 1n Artanis", 135, 5, 75, 0)
                # (Line 154) trg.Shape_Line(playerID, 1, "80 + 1n Artanis", 315, 5, 75, 75);
                trg.Shape_Line(playerID, 1, "80 + 1n Artanis", 315, 5, 75, 75)
                # (Line 155) trg.Shape_Line(playerID, 1, " Unit. Hoffnung 25000", 135, 5, 75, 75);
                trg.Shape_Line(playerID, 1, " Unit. Hoffnung 25000", 135, 5, 75, 75)
                # (Line 156) trg.Shape_Line(playerID, 1, " Unit. Hoffnung 25000", 135, 5, 75, 0);
                trg.Shape_Line(playerID, 1, " Unit. Hoffnung 25000", 135, 5, 75, 0)
                # (Line 157) trg.Shape_Line(playerID, 1, " Unit. Hoffnung 25000", 315, 5, 75, 75);
                trg.Shape_Line(playerID, 1, " Unit. Hoffnung 25000", 315, 5, 75, 75)
                # (Line 158) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID);
                # (Line 160) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID))
                # (Line 161) Order("80 + 1n Artanis", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 163) trg.Main_Wait(80);
                DoActions(Order("80 + 1n Artanis", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(80)
                # (Line 165) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 166) }
                # (Line 167) else if (v.P_LoopMain[playerID] == 6)
            if EUDElseIf()(v.P_LoopMain[playerID] == 6):
                # (Line 168) {
                # (Line 169) RemoveUnitAt(All, "80 + 1n Artanis", "Anywhere", playerID);
                # (Line 171) trg.Shape_Line(playerID, 1, "Kakaru (Twilight)", 135, 5, 75, 75);
                DoActions(RemoveUnitAt(All, "80 + 1n Artanis", "Anywhere", playerID))
                trg.Shape_Line(playerID, 1, "Kakaru (Twilight)", 135, 5, 75, 75)
                # (Line 172) trg.Shape_Line(playerID, 1, "Kakaru (Twilight)", 135, 5, 75, 0);
                trg.Shape_Line(playerID, 1, "Kakaru (Twilight)", 135, 5, 75, 0)
                # (Line 173) trg.Shape_Line(playerID, 1, "Kakaru (Twilight)", 315, 5, 75, 75);
                trg.Shape_Line(playerID, 1, "Kakaru (Twilight)", 315, 5, 75, 75)
                # (Line 174) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);
                # (Line 176) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 178) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 179) }
                # (Line 180) else if (v.P_LoopMain[playerID] == 7)
            if EUDElseIf()(v.P_LoopMain[playerID] == 7):
                # (Line 181) {
                # (Line 182) trg.Shape_Line(playerID, 1, "40 + 1n Wraith", 45, 5, 75, 75);
                trg.Shape_Line(playerID, 1, "40 + 1n Wraith", 45, 5, 75, 75)
                # (Line 183) trg.Shape_Line(playerID, 1, "40 + 1n Wraith", 45, 5, 75, 0);
                trg.Shape_Line(playerID, 1, "40 + 1n Wraith", 45, 5, 75, 0)
                # (Line 184) trg.Shape_Line(playerID, 1, "40 + 1n Wraith", 225, 5, 75, 75);
                trg.Shape_Line(playerID, 1, "40 + 1n Wraith", 225, 5, 75, 75)
                # (Line 185) trg.Shape_Line(playerID, 1, " Unit. Hoffnung 25000", 45, 5, 75, 75);
                trg.Shape_Line(playerID, 1, " Unit. Hoffnung 25000", 45, 5, 75, 75)
                # (Line 186) trg.Shape_Line(playerID, 1, " Unit. Hoffnung 25000", 45, 5, 75, 0);
                trg.Shape_Line(playerID, 1, " Unit. Hoffnung 25000", 45, 5, 75, 0)
                # (Line 187) trg.Shape_Line(playerID, 1, " Unit. Hoffnung 25000", 225, 5, 75, 75);
                trg.Shape_Line(playerID, 1, " Unit. Hoffnung 25000", 225, 5, 75, 75)
                # (Line 188) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID);
                # (Line 190) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID))
                # (Line 191) Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 193) trg.Main_Wait(80);
                DoActions(Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(80)
                # (Line 195) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 196) }
                # (Line 197) else if (v.P_LoopMain[playerID] == 8)
            if EUDElseIf()(v.P_LoopMain[playerID] == 8):
                # (Line 198) {
                # (Line 199) RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 201) trg.Shape_Line(playerID, 1, "Kakaru (Twilight)", 45, 5, 75, 75);
                DoActions(RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                trg.Shape_Line(playerID, 1, "Kakaru (Twilight)", 45, 5, 75, 75)
                # (Line 202) trg.Shape_Line(playerID, 1, "Kakaru (Twilight)", 45, 5, 75, 0);
                trg.Shape_Line(playerID, 1, "Kakaru (Twilight)", 45, 5, 75, 0)
                # (Line 203) trg.Shape_Line(playerID, 1, "Kakaru (Twilight)", 225, 5, 75, 75);
                trg.Shape_Line(playerID, 1, "Kakaru (Twilight)", 225, 5, 75, 75)
                # (Line 204) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);
                # (Line 206) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 208) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 209) }
                # (Line 211) else if (v.P_LoopMain[playerID] == 9)
            if EUDElseIf()(v.P_LoopMain[playerID] == 9):
                # (Line 212) {
                # (Line 213) SetDeaths(playerID, SetTo, 1080, " `UniqueCoolTime");
                # (Line 215) trg.Main_Wait(80);
                DoActions(SetDeaths(playerID, SetTo, 1080, " `UniqueCoolTime"))
                trg.Main_Wait(80)
                # (Line 217) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 218) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 219) }
                # (Line 220) }
            EUDEndIf()
            # (Line 221) else if (v.P_CountMain[playerID] == 4)
        if EUDElseIf()(v.P_CountMain[playerID] == 4):
            # (Line 222) {
            # (Line 223) if (Bring(playerID, AtLeast, 1, "Protoss Carrier", "[Skill]UseSkill"))
            if EUDIf()(Bring(playerID, AtLeast, 1, "Protoss Carrier", "[Skill]UseSkill")):
                # (Line 224) {
                # (Line 225) v.P_SkillDelay[playerID] = 0;
                _ARRW(v.P_SkillDelay, playerID) << (0)
                # (Line 226) v.P_CountMain[playerID] = 0;
                _ARRW(v.P_CountMain, playerID) << (0)
                # (Line 227) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 228) v.P_Step[playerID] = 200;
                _ARRW(v.P_Step, playerID) << (200)
                # (Line 229) KillUnitAt(1, "Protoss Carrier", "[Skill]UseSkill", playerID);
                # (Line 230) }
                DoActions(KillUnitAt(1, "Protoss Carrier", "[Skill]UseSkill", playerID))
                # (Line 231) else if (Bring(playerID, AtLeast, 1, "Protoss Arbiter", "[Skill]UseSkill"))
            if EUDElseIf()(Bring(playerID, AtLeast, 1, "Protoss Arbiter", "[Skill]UseSkill")):
                # (Line 232) {
                # (Line 233) v.P_SkillDelay[playerID] = 0;
                _ARRW(v.P_SkillDelay, playerID) << (0)
                # (Line 234) v.P_CountMain[playerID] = 0;
                _ARRW(v.P_CountMain, playerID) << (0)
                # (Line 235) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 236) v.P_Step[playerID] = 300;
                _ARRW(v.P_Step, playerID) << (300)
                # (Line 237) KillUnitAt(1, "Protoss Arbiter", "[Skill]UseSkill", playerID);
                # (Line 238) }
                DoActions(KillUnitAt(1, "Protoss Arbiter", "[Skill]UseSkill", playerID))
                # (Line 240) else if (Bring(playerID, AtLeast, 1, "Protoss Scout", "[Skill]UseSkill"))
            if EUDElseIf()(Bring(playerID, AtLeast, 1, "Protoss Scout", "[Skill]UseSkill")):
                # (Line 241) {
                # (Line 242) v.P_SkillDelay[playerID] = 0;
                _ARRW(v.P_SkillDelay, playerID) << (0)
                # (Line 243) v.P_CountMain[playerID] = 0;
                _ARRW(v.P_CountMain, playerID) << (0)
                # (Line 244) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 245) v.P_Step[playerID] = 100;
                _ARRW(v.P_Step, playerID) << (100)
                # (Line 246) KillUnitAt(1, "Protoss Scout", "[Skill]UseSkill", playerID);
                # (Line 247) }
                DoActions(KillUnitAt(1, "Protoss Scout", "[Skill]UseSkill", playerID))
                # (Line 248) else
                # (Line 249) {
            if EUDElse()():
                # (Line 250) trg.SkillEnd();
                trg.SkillEnd()
                # (Line 251) }
                # (Line 252) }
            EUDEndIf()
            # (Line 253) }
        EUDEndIf()
        # (Line 254) }
    EUDEndIf()
