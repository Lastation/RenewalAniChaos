import PluginVariables as msqcvar;
import variable as v;
import func.trig as trg;
import func.trigadv as adv;
import func.sound as s;

function main(playerID)
{
   trg.Buff_ShieldFix(1);

   if (v.P_WaitMain[playerID] == 0)
   {
      if (v.P_CountMain[playerID] == 0)
      {
         if (v.P_LoopMain[playerID] < 8)
         {             
            if (v.P_LoopMain[playerID] == 0)
            {
               trg.Shape_Line(playerID, 1, "40 + 1n Mojo", 45, 3, 50, 0);
               trg.Shape_Line(playerID, 1, " Unit. Hoffnung 25000", 45, 3, 50, 0);
            }
            else if (v.P_LoopMain[playerID] == 2)
            {
               RemoveUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID);

               trg.Shape_Line(playerID, 1, "40 + 1n Mojo", 45, 5, 50, 0);
               trg.Shape_Line(playerID, 1, " Unit. Hoffnung 25000", 45, 5, 50, 0);
            }
            else if (v.P_LoopMain[playerID] == 4)
            {
               RemoveUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID);

               trg.Shape_Line(playerID, 1, "40 + 1n Wraith", 45, 7, 50, 0);
               trg.Shape_Line(playerID, 1, " Unit. Hoffnung 25000", 45, 7, 50, 0);
            }
            else if (v.P_LoopMain[playerID] == 6)
            {
               RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);

               trg.Shape_Line(playerID, 1, "50 + 1n Battlecruiser", 45, 5, 75, 0);
               adv.Shape_NxNSquareAt2(playerID, 1, "Protoss Dark Archon", 3, 25, 75, 75);
               adv.Shape_NxNSquareAt2(playerID, 1, "Protoss Dark Archon", 3, 25, 150, 150);
               adv.Shape_NxNSquareAt2(playerID, 1, "Protoss Dark Archon", 3, 25, 0, 0);
               adv.Shape_NxNSquareAt2(playerID, 1, "Protoss Dark Archon", 3, 25, -75, -75);
               adv.Shape_NxNSquareAt2(playerID, 1, "Protoss Dark Archon", 3, 25, -150, -150);
            }

            MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
            Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, "Anywhere");
            Order("40 + 1n Wraith", playerID, "Anywhere", Attack, "Anywhere");
            Order("40 + 1n Mojo", playerID, "Anywhere", Attack, "Anywhere");

            trg.Shape_Square(playerID, 8, "Vulture Spider Mine", 160 - 40 * v.P_LoopMain[playerID], 160);
            trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 160 - 40 * v.P_LoopMain[playerID], 160);

            KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID);
            KillUnitAt(All, "Vulture Spider Mine", "Anywhere", playerID);
            KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
            KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);

            trg.Main_Wait(80);

            v.P_LoopMain[playerID] += 1;
         }
         else if (v.P_LoopMain[playerID] == 8)
         {
            trg.Main_Wait(80);

            v.P_CountMain[playerID] += 1;
            v.P_LoopMain[playerID] = 0;
         }
      }
      else if (v.P_CountMain[playerID] == 1)
      {
         if (v.P_LoopMain[playerID] < 8)
         {             

            if (v.P_LoopMain[playerID] == 0)
            {
               trg.Table_Sin(playerID, 22 + 45 * (v.P_LoopMain[playerID] % 4), 50);
               trg.Table_Cos(playerID, 22 + 45 * (v.P_LoopMain[playerID] % 4), 50);

               trg.Shape_Square(playerID, 1, "40 + 1n Guardian", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
               trg.Shape_Square(playerID, 1, "60 + 1n Archon", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
            }
            else if (v.P_LoopMain[playerID] == 2)
            {
               trg.Table_Sin(playerID, 22 + 45 * (v.P_LoopMain[playerID] % 4), 100);
               trg.Table_Cos(playerID, 22 + 45 * (v.P_LoopMain[playerID] % 4), 100);

               trg.Shape_Square(playerID, 1, "40 + 1n Guardian", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
               trg.Shape_Square(playerID, 1, "60 + 1n Archon", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
            }
            else if (v.P_LoopMain[playerID] == 4)
            {
               trg.Table_Sin(playerID, 22 + 45 * (v.P_LoopMain[playerID] % 4), 100);
               trg.Table_Cos(playerID, 22 + 45 * (v.P_LoopMain[playerID] % 4), 100);

               trg.Shape_Square(playerID, 1, "40 + 1n Guardian", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
               trg.Shape_Square(playerID, 1, "60 + 1n Archon", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
            }
            else if (v.P_LoopMain[playerID] == 6)
            {
               trg.Table_Sin(playerID, 22 + 45 * (v.P_LoopMain[playerID] % 4), 150);
               trg.Table_Cos(playerID, 22 + 45 * (v.P_LoopMain[playerID] % 4), 150);

               trg.Shape_Square(playerID, 1, "40 + 1n Guardian", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
               trg.Shape_Square(playerID, 1, "60 + 1n Archon", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
            }

            if (v.P_LoopMain[playerID] % 2 == 0)
            {
               KillUnitAt(All, " Creep. Dunkelheit", "Anywhere", playerID);

               trg.Shape_Line(playerID, 1, " Creep. Dunkelheit", 45, 5, 75, v.P_LoopMain[playerID] * 25);
               trg.Shape_Line(playerID, 1, " Creep. Dunkelheit", 225, 5, 75, v.P_LoopMain[playerID] * 25);
               trg.Shape_Line(playerID, 8, "Vulture Spider Mine", 45, 5, 75, v.P_LoopMain[playerID] * 25);
               trg.Shape_Line(playerID, 8, "Vulture Spider Mine", 225, 5, 75, v.P_LoopMain[playerID] * 25);
               trg.Shape_Line(playerID, 1, "40 + 1n Wraith", 45, 7, 50, v.P_LoopMain[playerID] * 25);
               trg.Shape_Line(playerID, 1, "40 + 1n Wraith", 225, 7, 50, v.P_LoopMain[playerID] * 25);
            }

            MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
            MoveUnit(All, " Creep. Dunkelheit", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
            Order(" Creep. Dunkelheit", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);

            trg.Shape_Square(playerID, 1, " Unit. Hoffnung 25000", 160 - 40 * v.P_LoopMain[playerID], 160);

            KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID);
            KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
            KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
            KillUnitAt(All, "Vulture Spider Mine", "Anywhere", playerID);
            KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
            KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
            RemoveUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);

            trg.Main_Wait(80);

            v.P_LoopMain[playerID] += 1;
         }
         else if (v.P_LoopMain[playerID] == 8)
         {
            KillUnitAt(All, " Creep. Dunkelheit", "Anywhere", playerID);

            trg.Table_Sin(playerID, 22, 50);
            trg.Table_Cos(playerID, 22, 50);

            trg.Shape_Square(playerID, 1, " Unit. Hoffnung 25000", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);

            trg.Table_Sin(playerID, 67, 100);
            trg.Table_Cos(playerID, 67, 100);

            trg.Shape_Square(playerID, 1, " Unit. Hoffnung 25000", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
            trg.Shape_Square(playerID, 1, "40 + 1n Drone", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);

            trg.Table_Sin(playerID, 22, 100);
            trg.Table_Cos(playerID, 22, 100);

            trg.Shape_Square(playerID, 1, " Unit. Hoffnung 25000", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);

            trg.Table_Sin(playerID, 67, 150);
            trg.Table_Cos(playerID, 67, 150);

            trg.Shape_Square(playerID, 1, " Unit. Hoffnung 25000", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
            trg.Shape_Square(playerID, 1, "40 + 1n Drone", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);

            KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID);

            MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
            MoveUnit(All, "40 + 1n Drone", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
            Order("40 + 1n Drone", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);

            trg.Main_Wait(560);

            v.P_CountMain[playerID] += 1;
            v.P_LoopMain[playerID] = 0;
         }
      }
      else if (v.P_CountMain[playerID] == 2)
      {
         if (v.P_LoopMain[playerID] < 3)
         {         
            SetDeaths(playerID, SetTo, 1, " `ShieldRecharge");

            var x = 50 + 50 * v.P_LoopMain[playerID];
            var y = 50 + 50 * v.P_LoopMain[playerID];
            var interval = 50 + 10 * v.P_LoopMain[playerID];

            trg.Shape_Double(playerID, 1, " Unit. Hoffnung 25000", x, y);
            trg.Shape_Double(playerID, 1, " Unit. Hoffnung 25000", x - interval, y);
            trg.Shape_Double(playerID, 1, " Unit. Hoffnung 25000", x, y - interval);

            KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID);

            trg.Main_Wait(80);

            v.P_LoopMain[playerID] += 1;
         }
         else if (v.P_LoopMain[playerID] == 3)
         {         
            var x = 150;
            var y = 150;
            var interval = 70;

            trg.Shape_Double(playerID, 1, "40 + 1n Guardian", x, y);
            trg.Shape_Double(playerID, 1, "40 + 1n Guardian", x - interval, y);
            trg.Shape_Double(playerID, 1, "40 + 1n Guardian", x, y - interval);
            trg.Shape_Double(playerID, 1, "Protoss Dark Archon", x, y);
            trg.Shape_Double(playerID, 1, "Protoss Dark Archon", x - interval, y);
            trg.Shape_Double(playerID, 1, "Protoss Dark Archon", x, y - interval);

            KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
            KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);

            trg.Main_Wait(80);

            v.P_LoopMain[playerID] += 1;
         }
         else if (v.P_LoopMain[playerID] == 4)
         {         
            var x = 150;
            var y = 150;
            var interval = 70;

            trg.Shape_Double(playerID, 1, "40 + 1n Wraith", x, y);
            trg.Shape_Double(playerID, 1, "40 + 1n Wraith", x - interval, y);
            trg.Shape_Double(playerID, 1, "40 + 1n Wraith", x, y - interval);
            trg.Shape_Double(playerID, 1, "40 + 1n Ghost", x, y);
            trg.Shape_Double(playerID, 1, "40 + 1n Ghost", x - interval, y);
            trg.Shape_Double(playerID, 1, "40 + 1n Ghost", x, y - interval);

            MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
            MoveUnit(All, "40 + 1n Ghost", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
            Order("40 + 1n Ghost", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
            Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);

            trg.Main_Wait(160);

            v.P_LoopMain[playerID] += 1;
         }

         else if (v.P_LoopMain[playerID] < 8)
         {         
            KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);

            var x = -50 - 50 * (v.P_LoopMain[playerID] - 5);
            var y = 50 + 50 * (v.P_LoopMain[playerID] - 5);
            var interval = 50 + 10 * (v.P_LoopMain[playerID] - 5);

            trg.Shape_Double(playerID, 1, " Unit. Hoffnung 25000", x, y);
            trg.Shape_Double(playerID, 1, " Unit. Hoffnung 25000", x + interval, y);
            trg.Shape_Double(playerID, 1, " Unit. Hoffnung 25000", x, y - interval);

            KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID);

            trg.Main_Wait(80);

            v.P_LoopMain[playerID] += 1;
         }
         else if (v.P_LoopMain[playerID] == 8)
         {         
            var x = -150;
            var y = 150;
            var interval = 70;

            trg.Shape_Double(playerID, 1, "40 + 1n Guardian", x, y);
            trg.Shape_Double(playerID, 1, "40 + 1n Guardian", x + interval, y);
            trg.Shape_Double(playerID, 1, "40 + 1n Guardian", x, y - interval);
            trg.Shape_Double(playerID, 1, "Protoss Dark Archon", x, y);
            trg.Shape_Double(playerID, 1, "Protoss Dark Archon", x + interval, y);
            trg.Shape_Double(playerID, 1, "Protoss Dark Archon", x, y - interval);

            KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
            KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);

            trg.Main_Wait(80);

            v.P_LoopMain[playerID] += 1;
         }
         else if (v.P_LoopMain[playerID] == 9)
         {         
            var x = -150;
            var y = 150;
            var interval = 70;

            trg.Shape_Double(playerID, 1, "40 + 1n Wraith", x, y);
            trg.Shape_Double(playerID, 1, "40 + 1n Wraith", x + interval, y);
            trg.Shape_Double(playerID, 1, "40 + 1n Wraith", x, y - interval);
            trg.Shape_Double(playerID, 1, "40 + 1n Ghost", x, y);
            trg.Shape_Double(playerID, 1, "40 + 1n Ghost", x + interval, y);
            trg.Shape_Double(playerID, 1, "40 + 1n Ghost", x, y - interval);

            MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
            MoveUnit(All, "40 + 1n Ghost", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
            Order("40 + 1n Ghost", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
            Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);

            trg.Main_Wait(160);

            v.P_LoopMain[playerID] += 1;
         }
         else if (v.P_LoopMain[playerID] == 10)
         {
            trg.Main_Wait(80);

            v.P_CountMain[playerID] += 1;
            v.P_LoopMain[playerID] = 0;
         }
      }
      else if (v.P_CountMain[playerID] == 3)
      {
         if (v.P_LoopMain[playerID] < 4)
         {         
            RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);

            trg.Shape_Line(playerID, 1, "40 + 1n Wraith", 45 + 45 * v.P_LoopMain[playerID], 7, 50, 0);
            trg.Shape_Line(playerID, 1, "Protoss Dark Archon", 45 + 45 * v.P_LoopMain[playerID], 7, 50, 0);

            MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
            Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);

            KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);

            trg.Main_Wait(160);

            v.P_LoopMain[playerID] += 1;
         }
         else if (v.P_LoopMain[playerID] < 7)
         {       
            RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);

            trg.Shape_Line(playerID, 1, "40 + 1n Wraith", 45, 7, 50, 0);
            trg.Shape_Line(playerID, 1, "Protoss Dark Archon", 45, 7, 50, 0);
            trg.Shape_Line(playerID, 1, "40 + 1n Wraith", 90, 7, 50, 0);
            trg.Shape_Line(playerID, 1, "Protoss Dark Archon", 90, 7, 50, 0);
            trg.Shape_Line(playerID, 1, "40 + 1n Wraith", 135, 7, 50, 0);
            trg.Shape_Line(playerID, 1, "Protoss Dark Archon", 135, 7, 50, 0);
            trg.Shape_Line(playerID, 1, "40 + 1n Wraith", 0, 7, 50, 0);
            trg.Shape_Line(playerID, 1, "Protoss Dark Archon", 0, 7, 50, 0);
            KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
            KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);

            trg.Main_Wait(80);

            v.P_LoopMain[playerID] += 1;
         }
         else if (v.P_LoopMain[playerID] == 7)
         {
            trg.Main_Wait(80);

            v.P_CountMain[playerID] += 1;
            v.P_LoopMain[playerID] = 0;
         }
      }
      else if (v.P_CountMain[playerID] == 4)
      {
         if (v.P_LoopMain[playerID] == 0)
         {         
            trg.Shape_Edge(playerID, 1, "40 + 1n Guardian", 0, 3, 50);
            trg.Shape_Edge(playerID, 1, "Protoss Dark Archon", 0, 3, 50);

            KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
            KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);

            trg.Main_Wait(80);

            v.P_LoopMain[playerID] += 1;
         }
         else if (v.P_LoopMain[playerID] == 1)
         {         
            trg.Shape_Edge(playerID, 1, "40 + 1n Guardian", 0, 5, 100);
            trg.Shape_Edge(playerID, 1, "Protoss Dark Archon", 0, 5, 100);

            trg.Shape_Edge(playerID, 1, "40 + 1n Ghost", 0, 5, 100);

            MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
            MoveUnit(All, "40 + 1n Ghost", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
            Order("40 + 1n Ghost", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);

            KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
            KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);

            trg.Main_Wait(80);

            v.P_LoopMain[playerID] += 1;
         }
         else if (v.P_LoopMain[playerID] == 2)
         {         
            trg.Shape_Edge(playerID, 1, "50 + 1n Battlecruiser", 0, 5, 100);
            trg.Shape_Edge(playerID, 1, "50 + 1n Tank", 0, 5, 100);

            KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
            KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);

            trg.Main_Wait(80);

            v.P_LoopMain[playerID] += 1;
         }
         else if (v.P_LoopMain[playerID] == 3)
         {         
            trg.Shape_Edge(playerID, 1, "Kakaru (Twilight)", 0, 3, 50);

            KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);

            trg.Main_Wait(80);

            v.P_LoopMain[playerID] += 1;
         }
         else if (v.P_LoopMain[playerID] == 4)
         {
            KillUnitAt(All, "40 + 1n Ghost", "Anywhere", playerID);
            KillUnitAt(All, "40 + 1n Drone", "Anywhere", playerID);

            trg.Main_Wait(80);

            v.P_CountMain[playerID] += 1;
            v.P_LoopMain[playerID] = 0;
         }
      }
      else if (v.P_CountMain[playerID] == 5)
      {
         

         if (Bring(playerID, AtLeast, 1, "Protoss Arbiter", "[Skill]UseSkill") 
         && Bring(playerID, AtLeast, 1, "Protoss Carrier", "[Skill]UseSkill") 
         && v.P_Step[playerID] == 210)
         {
            s.CharacterVoice(4);
            v.P_SkillDelay[playerID] = 0;
            v.P_CountMain[playerID] = 0;
            v.P_LoopMain[playerID] = 0;
            v.P_Step[playerID] = 220;
            KillUnitAt(1, "Protoss Arbiter", "[Skill]UseSkill", playerID);
            KillUnitAt(1, "Protoss Carrier", "[Skill]UseSkill", playerID);
         }
         else {
            trg.SkillEnd();
         }

      }
   }
}