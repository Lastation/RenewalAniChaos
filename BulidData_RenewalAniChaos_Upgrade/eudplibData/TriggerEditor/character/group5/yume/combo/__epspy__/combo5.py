## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import variable as v;
import variable as v
# (Line 2) import func.trig as trg;
from func import trig as trg
# (Line 4) function main(playerID)
# (Line 5) {
@EUDFunc
def f_main(playerID):
    # (Line 6) trg.Buff_ShieldFix(1);
    trg.Buff_ShieldFix(1)
    # (Line 8) if (v.P_WaitMain[playerID] == 0)
    if EUDIf()(v.P_WaitMain[playerID] == 0):
        # (Line 9) {
        # (Line 10) if (v.P_CountMain[playerID] == 0)
        if EUDIf()(v.P_CountMain[playerID] == 0):
            # (Line 11) {
            # (Line 12) if (v.P_LoopMain[playerID] < 3)
            if EUDIf()(v.P_LoopMain[playerID] >= 3, neg=True):
                # (Line 13) {
                # (Line 14) SetDeaths(playerID, SetTo, 1, " `ShieldRecharge");
                # (Line 16) trg.Shape_Line(playerID, 1, "40 + 1n Mutalisk", 45 * v.P_LoopMain[playerID], 9, 50, 0);
                DoActions(SetDeaths(playerID, SetTo, 1, " `ShieldRecharge"))
                trg.Shape_Line(playerID, 1, "40 + 1n Mutalisk", 45 * v.P_LoopMain[playerID], 9, 50, 0)
                # (Line 17) trg.Shape_Line(playerID, 1, "40 + 1n Mutalisk", 45 * v.P_LoopMain[playerID], 9, 50, 75);
                trg.Shape_Line(playerID, 1, "40 + 1n Mutalisk", 45 * v.P_LoopMain[playerID], 9, 50, 75)
                # (Line 18) trg.Shape_Line(playerID, 1, "40 + 1n Mutalisk", 45 * v.P_LoopMain[playerID] + 180, 9, 50, 75);
                trg.Shape_Line(playerID, 1, "40 + 1n Mutalisk", 45 * v.P_LoopMain[playerID] + 180, 9, 50, 75)
                # (Line 19) trg.Shape_Line(playerID, 1, "60 + 1n Archon", 45 * v.P_LoopMain[playerID], 7, 75, 0);
                trg.Shape_Line(playerID, 1, "60 + 1n Archon", 45 * v.P_LoopMain[playerID], 7, 75, 0)
                # (Line 20) trg.Shape_Line(playerID, 1, "60 + 1n Archon", 45 * v.P_LoopMain[playerID], 7, 75, 75);
                trg.Shape_Line(playerID, 1, "60 + 1n Archon", 45 * v.P_LoopMain[playerID], 7, 75, 75)
                # (Line 21) trg.Shape_Line(playerID, 1, "60 + 1n Archon", 45 * v.P_LoopMain[playerID] + 180, 7, 75, 75);
                trg.Shape_Line(playerID, 1, "60 + 1n Archon", 45 * v.P_LoopMain[playerID] + 180, 7, 75, 75)
                # (Line 23) KillUnitAt(All, "40 + 1n Mutalisk", "Anywhere", playerID);
                # (Line 24) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Mutalisk", "Anywhere", playerID))
                # (Line 26) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 28) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 29) }
                # (Line 30) else if (v.P_LoopMain[playerID] == 3)
            if EUDElseIf()(v.P_LoopMain[playerID] == 3):
                # (Line 31) {
                # (Line 32) trg.Shape_Line(playerID, 1, "40 + 1n Mutalisk", 45 * v.P_LoopMain[playerID], 9, 50, 0);
                trg.Shape_Line(playerID, 1, "40 + 1n Mutalisk", 45 * v.P_LoopMain[playerID], 9, 50, 0)
                # (Line 33) trg.Shape_Line(playerID, 1, "40 + 1n Mutalisk", 45 * v.P_LoopMain[playerID], 9, 50, 75);
                trg.Shape_Line(playerID, 1, "40 + 1n Mutalisk", 45 * v.P_LoopMain[playerID], 9, 50, 75)
                # (Line 34) trg.Shape_Line(playerID, 1, "40 + 1n Mutalisk", 45 * v.P_LoopMain[playerID] + 180, 9, 50, 75);
                trg.Shape_Line(playerID, 1, "40 + 1n Mutalisk", 45 * v.P_LoopMain[playerID] + 180, 9, 50, 75)
                # (Line 35) trg.Shape_Line(playerID, 1, "60 + 1n Archon", 45 * v.P_LoopMain[playerID], 7, 75, 0);
                trg.Shape_Line(playerID, 1, "60 + 1n Archon", 45 * v.P_LoopMain[playerID], 7, 75, 0)
                # (Line 36) trg.Shape_Line(playerID, 1, "60 + 1n Archon", 45 * v.P_LoopMain[playerID], 7, 75, 75);
                trg.Shape_Line(playerID, 1, "60 + 1n Archon", 45 * v.P_LoopMain[playerID], 7, 75, 75)
                # (Line 37) trg.Shape_Line(playerID, 1, "60 + 1n Archon", 45 * v.P_LoopMain[playerID] + 180, 7, 75, 75);
                trg.Shape_Line(playerID, 1, "60 + 1n Archon", 45 * v.P_LoopMain[playerID] + 180, 7, 75, 75)
                # (Line 39) KillUnitAt(All, "40 + 1n Mutalisk", "Anywhere", playerID);
                # (Line 40) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Mutalisk", "Anywhere", playerID))
                # (Line 42) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 44) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 45) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 46) }
                # (Line 47) }
            EUDEndIf()
            # (Line 48) else if (v.P_CountMain[playerID] == 1)
        if EUDElseIf()(v.P_CountMain[playerID] == 1):
            # (Line 49) {
            # (Line 50) if (v.P_LoopMain[playerID] < 8)
            if EUDIf()(v.P_LoopMain[playerID] >= 8, neg=True):
                # (Line 51) {
                # (Line 52) if (v.P_LoopMain[playerID] == 0)
                if EUDIf()(v.P_LoopMain[playerID] == 0):
                    # (Line 53) {
                    # (Line 54) trg.Shape_Line(playerID, 1, "50 + 1n Battlecruiser", 45, 7, 75, 0);
                    trg.Shape_Line(playerID, 1, "50 + 1n Battlecruiser", 45, 7, 75, 0)
                    # (Line 55) trg.Shape_Line(playerID, 1, "50 + 1n Battlecruiser", 45, 7, 75, 75);
                    trg.Shape_Line(playerID, 1, "50 + 1n Battlecruiser", 45, 7, 75, 75)
                    # (Line 56) trg.Shape_Line(playerID, 1, "50 + 1n Battlecruiser", 225, 7, 75, 75);
                    trg.Shape_Line(playerID, 1, "50 + 1n Battlecruiser", 225, 7, 75, 75)
                    # (Line 57) trg.Shape_Line(playerID, 1, " Unit. Hoffnung 25000", 45, 7, 75, 0);
                    trg.Shape_Line(playerID, 1, " Unit. Hoffnung 25000", 45, 7, 75, 0)
                    # (Line 58) trg.Shape_Line(playerID, 1, " Unit. Hoffnung 25000", 45, 7, 75, 75);
                    trg.Shape_Line(playerID, 1, " Unit. Hoffnung 25000", 45, 7, 75, 75)
                    # (Line 59) trg.Shape_Line(playerID, 1, " Unit. Hoffnung 25000", 225, 7, 75, 75);
                    trg.Shape_Line(playerID, 1, " Unit. Hoffnung 25000", 225, 7, 75, 75)
                    # (Line 61) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID);
                    # (Line 63) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                    DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID))
                    # (Line 64) Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, "Anywhere");
                    DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                    # (Line 65) }
                    DoActions(Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, "Anywhere"))
                    # (Line 66) if (v.P_LoopMain[playerID] % 2 == 0)
                EUDEndIf()
                if EUDIf()(v.P_LoopMain[playerID] % 2 == 0):
                    # (Line 67) {
                    # (Line 68) RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                    # (Line 70) trg.Shape_Square(playerID, 1, "40 + 1n Wraith", 160 - 40 * v.P_LoopMain[playerID], 160);
                    DoActions(RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                    trg.Shape_Square(playerID, 1, "40 + 1n Wraith", 160 - 40 * v.P_LoopMain[playerID], 160)
                    # (Line 72) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                    # (Line 73) Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                    DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                    # (Line 75) trg.Table_Sin(playerID, 22 + 45 * v.P_LoopMain[playerID], 50 + 25 * v.P_LoopMain[playerID]);
                    DoActions(Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                    trg.Table_Sin(playerID, 22 + 45 * v.P_LoopMain[playerID], 50 + 25 * v.P_LoopMain[playerID])
                    # (Line 76) trg.Table_Cos(playerID, 22 + 45 * v.P_LoopMain[playerID], 50 + 25 * v.P_LoopMain[playerID]);
                    trg.Table_Cos(playerID, 22 + 45 * v.P_LoopMain[playerID], 50 + 25 * v.P_LoopMain[playerID])
                    # (Line 78) trg.Shape_Square(playerID, 1, "60 + 1n Archon", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
                    trg.Shape_Square(playerID, 1, "60 + 1n Archon", v.P_AngleCos[playerID], v.P_AngleSin[playerID])
                    # (Line 79) }
                    # (Line 80) else if (v.P_LoopMain[playerID] % 2 == 1)
                if EUDElseIf()(v.P_LoopMain[playerID] % 2 == 1):
                    # (Line 81) {
                    # (Line 82) trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 160 - 40 * v.P_LoopMain[playerID], 160);
                    trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 160 - 40 * v.P_LoopMain[playerID], 160)
                    # (Line 83) KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID);
                    # (Line 85) trg.Table_Sin(playerID, 45 * v.P_LoopMain[playerID], 50 + 25 * v.P_LoopMain[playerID]);
                    DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID))
                    trg.Table_Sin(playerID, 45 * v.P_LoopMain[playerID], 50 + 25 * v.P_LoopMain[playerID])
                    # (Line 86) trg.Table_Cos(playerID, 45 * v.P_LoopMain[playerID], 50 + 25 * v.P_LoopMain[playerID]);
                    trg.Table_Cos(playerID, 45 * v.P_LoopMain[playerID], 50 + 25 * v.P_LoopMain[playerID])
                    # (Line 88) trg.Shape_Square(playerID, 1, "Protoss Dark Archon", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
                    trg.Shape_Square(playerID, 1, "Protoss Dark Archon", v.P_AngleCos[playerID], v.P_AngleSin[playerID])
                    # (Line 89) }
                    # (Line 91) trg.Shape_Square(playerID, 1, " Unit. Hoffnung 25000", 160 - 40 * v.P_LoopMain[playerID], 160);
                EUDEndIf()
                trg.Shape_Square(playerID, 1, " Unit. Hoffnung 25000", 160 - 40 * v.P_LoopMain[playerID], 160)
                # (Line 93) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID);
                # (Line 94) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID))
                # (Line 95) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                # (Line 97) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 99) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 100) }
                # (Line 101) else if (v.P_LoopMain[playerID] == 8)
            if EUDElseIf()(v.P_LoopMain[playerID] == 8):
                # (Line 102) {
                # (Line 103) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
                # (Line 105) trg.Shape_Edge(playerID, 1, "40 + 1n Mutalisk", 45, 7, 160);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                trg.Shape_Edge(playerID, 1, "40 + 1n Mutalisk", 45, 7, 160)
                # (Line 106) KillUnitAt(All, "40 + 1n Mutalisk", "Anywhere", playerID);
                # (Line 108) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "40 + 1n Mutalisk", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 110) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 111) }
                # (Line 112) else if (v.P_LoopMain[playerID] == 9)
            if EUDElseIf()(v.P_LoopMain[playerID] == 9):
                # (Line 113) {
                # (Line 114) trg.Shape_Edge(playerID, 1, "Kakaru (Twilight)", 45, 7, 160);
                trg.Shape_Edge(playerID, 1, "Kakaru (Twilight)", 45, 7, 160)
                # (Line 115) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);
                # (Line 117) trg.Shape_Edge(playerID, 1, "40 + 1n Ghost", 45, 5, 200);
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID))
                trg.Shape_Edge(playerID, 1, "40 + 1n Ghost", 45, 5, 200)
                # (Line 119) trg.Shape_Edge(playerID, 1, "40 + 1n Wraith", 45, 7, 160);
                trg.Shape_Edge(playerID, 1, "40 + 1n Wraith", 45, 7, 160)
                # (Line 120) trg.Shape_Edge(playerID, 1, "40 + 1n Drone", 45, 7, 160);
                trg.Shape_Edge(playerID, 1, "40 + 1n Drone", 45, 7, 160)
                # (Line 121) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 122) KillUnitAt(All, "40 + 1n Drone", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                # (Line 124) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "40 + 1n Drone", "Anywhere", playerID))
                # (Line 125) MoveUnit(All, "40 + 1n Ghost", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 126) Order("40 + 1n Ghost", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveUnit(All, "40 + 1n Ghost", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                # (Line 128) trg.Main_Wait(400);
                DoActions(Order("40 + 1n Ghost", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(400)
                # (Line 130) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 131) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 132) }
                # (Line 133) }
            EUDEndIf()
            # (Line 134) else if (v.P_CountMain[playerID] == 2)
        if EUDElseIf()(v.P_CountMain[playerID] == 2):
            # (Line 135) {
            # (Line 136) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 137) {
                # (Line 138) trg.Shape_Line(playerID, 1, "40 + 1n Wraith", 45, 5, 75, 0);
                trg.Shape_Line(playerID, 1, "40 + 1n Wraith", 45, 5, 75, 0)
                # (Line 139) trg.Shape_Line(playerID, 1, "Protoss Dark Archon", 45, 7, 50, 75);
                trg.Shape_Line(playerID, 1, "Protoss Dark Archon", 45, 7, 50, 75)
                # (Line 140) trg.Shape_Line(playerID, 1, "Protoss Dark Archon", 225, 7, 50, 75);
                trg.Shape_Line(playerID, 1, "Protoss Dark Archon", 225, 7, 50, 75)
                # (Line 142) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 143) Order("40 + 1n Wraith", playerID, "Anywhere", Attack, "Anywhere");
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 145) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                DoActions(Order("40 + 1n Wraith", playerID, "Anywhere", Attack, "Anywhere"))
                # (Line 147) trg.Main_Wait(160);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                trg.Main_Wait(160)
                # (Line 149) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 150) }
                # (Line 151) else if (v.P_LoopMain[playerID] == 1)
            if EUDElseIf()(v.P_LoopMain[playerID] == 1):
                # (Line 152) {
                # (Line 153) RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 155) trg.Shape_Line(playerID, 1, "40 + 1n Wraith", 45, 5, 75, 75);
                DoActions(RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                trg.Shape_Line(playerID, 1, "40 + 1n Wraith", 45, 5, 75, 75)
                # (Line 156) trg.Shape_Line(playerID, 1, "40 + 1n Wraith", 225, 5, 75, 75);
                trg.Shape_Line(playerID, 1, "40 + 1n Wraith", 225, 5, 75, 75)
                # (Line 157) trg.Shape_Line(playerID, 1, "50 + 1n Tank", 45, 7, 50, 150);
                trg.Shape_Line(playerID, 1, "50 + 1n Tank", 45, 7, 50, 150)
                # (Line 158) trg.Shape_Line(playerID, 1, "50 + 1n Tank", 225, 7, 50, 150);
                trg.Shape_Line(playerID, 1, "50 + 1n Tank", 225, 7, 50, 150)
                # (Line 160) trg.Shape_Double(playerID, 1, "40 + 1n Mutalisk", 50, 50);
                trg.Shape_Double(playerID, 1, "40 + 1n Mutalisk", 50, 50)
                # (Line 161) trg.Shape_Double(playerID, 1, "40 + 1n Mutalisk", 125, 125);
                trg.Shape_Double(playerID, 1, "40 + 1n Mutalisk", 125, 125)
                # (Line 163) trg.Shape_Double(playerID, 1, "60 + 1n High Templar", 50, 50);
                trg.Shape_Double(playerID, 1, "60 + 1n High Templar", 50, 50)
                # (Line 164) trg.Shape_Double(playerID, 1, "60 + 1n High Templar", 125, 125);
                trg.Shape_Double(playerID, 1, "60 + 1n High Templar", 125, 125)
                # (Line 166) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 167) Order("40 + 1n Wraith", playerID, "Anywhere", Attack, "Anywhere");
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 169) KillUnitAt(All, "40 + 1n Mutalisk", "Anywhere", playerID);
                DoActions(Order("40 + 1n Wraith", playerID, "Anywhere", Attack, "Anywhere"))
                # (Line 170) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Mutalisk", "Anywhere", playerID))
                # (Line 171) KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                # (Line 173) trg.Main_Wait(160);
                DoActions(KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID))
                trg.Main_Wait(160)
                # (Line 175) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 176) }
                # (Line 177) else if (v.P_LoopMain[playerID] == 2)
            if EUDElseIf()(v.P_LoopMain[playerID] == 2):
                # (Line 178) {
                # (Line 179) RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 181) trg.Shape_Line(playerID, 1, "40 + 1n Wraith", 135, 5, 75, 0);
                DoActions(RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                trg.Shape_Line(playerID, 1, "40 + 1n Wraith", 135, 5, 75, 0)
                # (Line 182) trg.Shape_Line(playerID, 1, "Protoss Dark Archon", 135, 7, 50, 75);
                trg.Shape_Line(playerID, 1, "Protoss Dark Archon", 135, 7, 50, 75)
                # (Line 183) trg.Shape_Line(playerID, 1, "Protoss Dark Archon", 315, 7, 50, 75);
                trg.Shape_Line(playerID, 1, "Protoss Dark Archon", 315, 7, 50, 75)
                # (Line 185) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 186) Order("40 + 1n Wraith", playerID, "Anywhere", Attack, "Anywhere");
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 188) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                DoActions(Order("40 + 1n Wraith", playerID, "Anywhere", Attack, "Anywhere"))
                # (Line 190) trg.Main_Wait(160);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                trg.Main_Wait(160)
                # (Line 192) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 193) }
                # (Line 194) else if (v.P_LoopMain[playerID] == 3)
            if EUDElseIf()(v.P_LoopMain[playerID] == 3):
                # (Line 195) {
                # (Line 196) RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 198) trg.Shape_Line(playerID, 1, "40 + 1n Wraith", 135, 5, 75, 75);
                DoActions(RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                trg.Shape_Line(playerID, 1, "40 + 1n Wraith", 135, 5, 75, 75)
                # (Line 199) trg.Shape_Line(playerID, 1, "40 + 1n Wraith", 315, 5, 75, 75);
                trg.Shape_Line(playerID, 1, "40 + 1n Wraith", 315, 5, 75, 75)
                # (Line 200) trg.Shape_Line(playerID, 1, "50 + 1n Tank", 135, 7, 50, 150);
                trg.Shape_Line(playerID, 1, "50 + 1n Tank", 135, 7, 50, 150)
                # (Line 201) trg.Shape_Line(playerID, 1, "50 + 1n Tank", 315, 7, 50, 150);
                trg.Shape_Line(playerID, 1, "50 + 1n Tank", 315, 7, 50, 150)
                # (Line 203) trg.Shape_Double(playerID, 1, "40 + 1n Mutalisk", -50, 50);
                trg.Shape_Double(playerID, 1, "40 + 1n Mutalisk", -50, 50)
                # (Line 204) trg.Shape_Double(playerID, 1, "40 + 1n Mutalisk", -125, 125);
                trg.Shape_Double(playerID, 1, "40 + 1n Mutalisk", -125, 125)
                # (Line 206) trg.Shape_Double(playerID, 1, "60 + 1n High Templar", -50, 50);
                trg.Shape_Double(playerID, 1, "60 + 1n High Templar", -50, 50)
                # (Line 207) trg.Shape_Double(playerID, 1, "60 + 1n High Templar", -125, 125);
                trg.Shape_Double(playerID, 1, "60 + 1n High Templar", -125, 125)
                # (Line 209) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 210) Order("40 + 1n Wraith", playerID, "Anywhere", Attack, "Anywhere");
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 212) KillUnitAt(All, "40 + 1n Mutalisk", "Anywhere", playerID);
                DoActions(Order("40 + 1n Wraith", playerID, "Anywhere", Attack, "Anywhere"))
                # (Line 213) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Mutalisk", "Anywhere", playerID))
                # (Line 214) KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                # (Line 216) trg.Main_Wait(160);
                DoActions(KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID))
                trg.Main_Wait(160)
                # (Line 218) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 219) }
                # (Line 220) else if (v.P_LoopMain[playerID] == 4)
            if EUDElseIf()(v.P_LoopMain[playerID] == 4):
                # (Line 221) {
                # (Line 222) RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 224) trg.Main_Wait(80);
                DoActions(RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 226) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 227) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 228) }
                # (Line 229) }
            EUDEndIf()
            # (Line 230) else if (v.P_CountMain[playerID] == 3)
        if EUDElseIf()(v.P_CountMain[playerID] == 3):
            # (Line 231) {
            # (Line 232) if (v.P_LoopMain[playerID] < 4)
            if EUDIf()(v.P_LoopMain[playerID] >= 4, neg=True):
                # (Line 233) {
                # (Line 234) trg.Shape_Line(playerID, 1, "40 + 1n Mutalisk", 180 - 45 * v.P_LoopMain[playerID], 9, 50, 0);
                trg.Shape_Line(playerID, 1, "40 + 1n Mutalisk", 180 - 45 * v.P_LoopMain[playerID], 9, 50, 0)
                # (Line 235) trg.Shape_Line(playerID, 1, "40 + 1n Mutalisk", 180 - 45 * v.P_LoopMain[playerID], 9, 50, 75);
                trg.Shape_Line(playerID, 1, "40 + 1n Mutalisk", 180 - 45 * v.P_LoopMain[playerID], 9, 50, 75)
                # (Line 236) trg.Shape_Line(playerID, 1, "40 + 1n Mutalisk", 180 - 45 * v.P_LoopMain[playerID] + 180, 9, 50, 75);
                trg.Shape_Line(playerID, 1, "40 + 1n Mutalisk", 180 - 45 * v.P_LoopMain[playerID] + 180, 9, 50, 75)
                # (Line 237) trg.Shape_Line(playerID, 1, "60 + 1n Archon", 180 - 45 * v.P_LoopMain[playerID], 7, 75, 0);
                trg.Shape_Line(playerID, 1, "60 + 1n Archon", 180 - 45 * v.P_LoopMain[playerID], 7, 75, 0)
                # (Line 238) trg.Shape_Line(playerID, 1, "60 + 1n Archon", 180 - 45 * v.P_LoopMain[playerID], 7, 75, 75);
                trg.Shape_Line(playerID, 1, "60 + 1n Archon", 180 - 45 * v.P_LoopMain[playerID], 7, 75, 75)
                # (Line 239) trg.Shape_Line(playerID, 1, "60 + 1n Archon", 180 - 45 * v.P_LoopMain[playerID] + 180, 7, 75, 75);
                trg.Shape_Line(playerID, 1, "60 + 1n Archon", 180 - 45 * v.P_LoopMain[playerID] + 180, 7, 75, 75)
                # (Line 241) KillUnitAt(All, "40 + 1n Mutalisk", "Anywhere", playerID);
                # (Line 242) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Mutalisk", "Anywhere", playerID))
                # (Line 244) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 246) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 247) }
                # (Line 248) else if (v.P_LoopMain[playerID] == 4)
            if EUDElseIf()(v.P_LoopMain[playerID] == 4):
                # (Line 249) {
                # (Line 250) trg.Shape_Line(playerID, 1, "50 + 1n Battlecruiser", 135, 7, 75, 0);
                trg.Shape_Line(playerID, 1, "50 + 1n Battlecruiser", 135, 7, 75, 0)
                # (Line 251) trg.Shape_Line(playerID, 1, "50 + 1n Battlecruiser", 135, 7, 75, 75);
                trg.Shape_Line(playerID, 1, "50 + 1n Battlecruiser", 135, 7, 75, 75)
                # (Line 252) trg.Shape_Line(playerID, 1, "50 + 1n Battlecruiser", 315, 7, 75, 75);
                trg.Shape_Line(playerID, 1, "50 + 1n Battlecruiser", 315, 7, 75, 75)
                # (Line 253) trg.Shape_Line(playerID, 1, " Unit. Hoffnung 25000", 135, 7, 75, 0);
                trg.Shape_Line(playerID, 1, " Unit. Hoffnung 25000", 135, 7, 75, 0)
                # (Line 254) trg.Shape_Line(playerID, 1, " Unit. Hoffnung 25000", 135, 7, 75, 75);
                trg.Shape_Line(playerID, 1, " Unit. Hoffnung 25000", 135, 7, 75, 75)
                # (Line 255) trg.Shape_Line(playerID, 1, " Unit. Hoffnung 25000", 315, 7, 75, 75);
                trg.Shape_Line(playerID, 1, " Unit. Hoffnung 25000", 315, 7, 75, 75)
                # (Line 257) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID);
                # (Line 259) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID))
                # (Line 260) Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, "Anywhere");
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 262) trg.Main_Wait(400);
                DoActions(Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, "Anywhere"))
                trg.Main_Wait(400)
                # (Line 264) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 265) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 266) }
                # (Line 267) }
            EUDEndIf()
            # (Line 268) else if (v.P_CountMain[playerID] == 4)
        if EUDElseIf()(v.P_CountMain[playerID] == 4):
            # (Line 269) {
            # (Line 270) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
            # (Line 271) KillUnitAt(All, "40 + 1n Ghost", "Anywhere", playerID);
            DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
            # (Line 274) trg.SkillEnd();
            DoActions(KillUnitAt(All, "40 + 1n Ghost", "Anywhere", playerID))
            trg.SkillEnd()
            # (Line 275) }
            # (Line 276) }
        EUDEndIf()
        # (Line 277) }
    EUDEndIf()
