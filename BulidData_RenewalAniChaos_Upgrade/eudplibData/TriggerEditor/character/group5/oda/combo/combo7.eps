import PluginVariables as msqcvar;
import variable as v;
import func.trig as trg;
import func.trigadv as adv;
import func.sound as s;

function EdgeShapeAt(playerID : TrgPlayer, count, Unit : TrgUnit, degree, n, interval, x, y);

function main(playerID)
{
   MoveUnit(All, "50 + 1n Battlecruiser", playerID, "Anywhere", "[Skill]HoldPosition");
   MoveUnit(All, "40 + 1n Gantrithor", playerID, "Anywhere", "[Skill]HoldPosition");

   trg.Debuff_BanReturn();
   trg.Debuff_Stop();

   if (v.P_WaitMain[playerID] == 0)
   {
      if (v.P_CountMain[playerID] == 0)
      {
         trg.Table_Sin(playerID, 22 * v.P_LoopMain[playerID], 150);
         trg.Table_Cos(playerID, 22 * v.P_LoopMain[playerID], 150);

         var x = v.P_AngleCos[playerID];
         var y = v.P_AngleSin[playerID];

         trg.Shape_Square(playerID, 1, "40 + 1n Lurker", x, y);
         KillUnitAt(All, "40 + 1n Lurker", "Anywhere", playerID);

         trg.Main_Wait(80);

         v.P_LoopMain[playerID] += 1;

         if (v.P_LoopMain[playerID] == 4)
         {
            v.P_CountMain[playerID] += 1;
            v.P_LoopMain[playerID] = 0;         
         }
      }
      else if (v.P_CountMain[playerID] == 1)
      {
         RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);

         trg.Table_Sin(playerID, 45 * v.P_LoopMain[playerID], 100);
         trg.Table_Cos(playerID, 45 * v.P_LoopMain[playerID], 100);

         var x = v.P_AngleCos[playerID];
         var y = v.P_AngleSin[playerID];

         trg.Shape_Double(playerID, 1, "40 + 1n Wraith", x, y);
         trg.Shape_Double(playerID, 1, "Scantid (Desert)", x, y);
         KillUnitAt(All, "Scantid (Desert)", "Anywhere", playerID);

         MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
         Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);

         trg.Main_Wait(80);

         v.P_LoopMain[playerID] += 1;

         if (v.P_LoopMain[playerID] == 4)
         {
            v.P_CountMain[playerID] += 1;
            v.P_LoopMain[playerID] = 0;         
         }
      }
      else if (v.P_CountMain[playerID] == 2)
      {
         trg.Table_Sin(playerID, 90 - 22 * v.P_LoopMain[playerID], 150);
         trg.Table_Cos(playerID, 90 - 22 * v.P_LoopMain[playerID], 150);

         var x = v.P_AngleCos[playerID];
         var y = v.P_AngleSin[playerID];

         if (v.P_LoopMain[playerID] % 2 == 0)
         {
            RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);

            if (v.P_LoopMain[playerID] == 0)
            {
               trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", x, y);
            }
            else if (v.P_LoopMain[playerID] == 2)
            {
               trg.Shape_Square(playerID, 1, "100 + 1n Hyperion", x, y);
            }
            trg.Shape_Square(playerID, 1, "50 + 1n Tank", x, y);
            KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);

            MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
            Order("100 + 1n Hyperion", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
            Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
         }
         else if (v.P_LoopMain[playerID] % 2 == 1)
         {
            trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", x, y);
            trg.Shape_Square(playerID, 1, "60 + 1n Archon", x, y);
            KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID);
            KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
         }

         trg.Main_Wait(80);

         v.P_LoopMain[playerID] += 1;

         if (v.P_LoopMain[playerID] == 4)
         {
            v.P_CountMain[playerID] += 1;
            v.P_LoopMain[playerID] = 0;         
         }
      }
      else if (v.P_CountMain[playerID] == 3)
      {
         if (v.P_LoopMain[playerID] < 4)
         {
            var x = 300 - 75 * v.P_LoopMain[playerID];
            var y = 75 * v.P_LoopMain[playerID];

            trg.Shape_Square(playerID, 1, "60 + 1n Siege", x, y);
            trg.Shape_Square(playerID, 8, "Protoss Dark Archon", x, y);
            KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);

            if (v.P_LoopMain[playerID] == 0)
            {
               KillUnitAt(All, "100 + 1n Hyperion", "Anywhere", playerID);

               trg.Table_Sin(playerID, 90, 150);
               trg.Table_Cos(playerID, 90, 150);

               x = v.P_AngleCos[playerID];
               y = v.P_AngleSin[playerID];

               trg.Shape_Square(playerID, 9, "60 + 1n Archon", x, y);
               KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);

            }
            else if (v.P_LoopMain[playerID] == 2)
            {
               trg.Table_Sin(playerID, 45, 150);
               trg.Table_Cos(playerID, 45, 150);

               x = v.P_AngleCos[playerID];
               y = v.P_AngleSin[playerID];

               trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", x, y);
               trg.Shape_Square(playerID, 9, "60 + 1n Archon", x, y);
               KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
            }
         }

         trg.Main_Wait(80);

         v.P_LoopMain[playerID] += 1;

         if (v.P_LoopMain[playerID] == 4)
         {
            ModifyUnitHangarCount(2, All, "40 + 1n Gantrithor", CurrentPlayer, "Anywhere");
            MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
            Order("40 + 1n Gantrithor", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);

            v.P_CountMain[playerID] += 1;
            v.P_LoopMain[playerID] = 0;         
         }
      }
      else if (v.P_CountMain[playerID] == 4)
      {
         var x = 0;
         var y = 0;

         if (v.P_LoopMain[playerID] < 4)
         {
            var i = 0;

            for (; i <= v.P_LoopMain[playerID]; i++)
            {
               trg.Table_Sin(playerID, 22 + 45 * i, 50 + 75 * i);
               trg.Table_Cos(playerID, 22 + 45 * i, 50 + 75 * i);

               x = v.P_AngleCos[playerID];
               y = v.P_AngleSin[playerID];

               EdgeShapeAt(playerID, 1, "60 + 1n High Templar", 22, 3, 32, x, y);
               KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID);
            }
         }

         var r = 0;
         var d = 0;

         if (v.P_LoopMain[playerID] == 3)
         {
            r = 22;
            d = 200;
         }
         else if (v.P_LoopMain[playerID] == 4)
         {
            r = 67;
            d = 150;
         }
         else if (v.P_LoopMain[playerID] == 5)
         {
            r = 22;
            d = 250;
         }
         else if (v.P_LoopMain[playerID] == 6)
         {
            r = 67;
            d = 100;
         }
         else if (v.P_LoopMain[playerID] == 7)
         {
            r = 67;
            d = 250;
         }
         else if (v.P_LoopMain[playerID] == 8)
         {
            r = 22;
            d = 150;
         }
         else if (v.P_LoopMain[playerID] == 9)
         {
            r = 22;
            d = 250;

            SetSwitch("Recall - Oda", Set);
         }


         if (v.P_LoopMain[playerID] >= 3 && v.P_LoopMain[playerID] < 10)
         {
            trg.Table_Sin(playerID, r, d);
            trg.Table_Cos(playerID, r, d);

            x = v.P_AngleCos[playerID];
            y = v.P_AngleSin[playerID];

            EdgeShapeAt(playerID, 1, "40 + 1n Mojo", 22, 2, 50, x, y);
            KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID);

            trg.Table_Sin(playerID, r + 90, d);
            trg.Table_Cos(playerID, r + 90, d);

            x = v.P_AngleCos[playerID];
            y = v.P_AngleSin[playerID];

            EdgeShapeAt(playerID, 1, "Target", 22, 3, 32, x, y);
            EdgeShapeAt(playerID, 1, "60 + 1n Archon", 22, 2, 50, x, y);
            KillUnitAt(All, "Target", "Anywhere", playerID);
            KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);

            if (v.P_LoopMain[playerID] % 2 == 1)
            {
               MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
               Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
            }

            if (v.P_LoopMain[playerID] == 3)
            {
               trg.Shape_Square(playerID, 1, "40 + 1n Goliath", x, y);

               MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
               MoveUnit(All, "40 + 1n Goliath", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
               Order("40 + 1n Goliath", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
            }
            if (v.P_LoopMain[playerID] == 4)
            {
               trg.Shape_Square(playerID, 1, "40 + 1n Drone", x, y);

               MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
               MoveUnit(All, "40 + 1n Drone", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
               Order("40 + 1n Drone", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
            }
            if (v.P_LoopMain[playerID] == 5)
            {
               trg.Shape_Square(playerID, 1, "50 + 1n Tank", x, y);

               MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
               MoveUnit(All, "50 + 1n Tank", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
               Order("50 + 1n Tank", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
            }
            if (v.P_LoopMain[playerID] == 6)
            {
               trg.Shape_Square(playerID, 1, "40 + 1n Drone", x, y);

               MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
               MoveUnit(All, "40 + 1n Drone", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
               Order("40 + 1n Drone", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
            }
            if (v.P_LoopMain[playerID] == 7)
            {
               trg.Shape_Square(playerID, 1, "60 + 1n Dragoon", x, y);

               MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
               MoveUnit(All, "60 + 1n Dragoon", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
               Order("60 + 1n Dragoon", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
            }
            if (v.P_LoopMain[playerID] == 8)
            {
               trg.Shape_Square(playerID, 1, "40 + 1n Firebat", x, y);

               MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
               MoveUnit(All, "40 + 1n Firebat", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
               Order("40 + 1n Firebat", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
            }
            if (v.P_LoopMain[playerID] == 9)
            {
               trg.Shape_Square(playerID, 1, "40 + 1n Drone", x, y);

               MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
               MoveUnit(All, "40 + 1n Drone", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
               Order("40 + 1n Drone", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
            }
         }

         trg.Main_Wait(80);

         v.P_LoopMain[playerID] += 1;

         if (v.P_LoopMain[playerID] == 67)
         {
            s.CharacterVoice(23);

            v.P_CountMain[playerID] += 1;
            v.P_LoopMain[playerID] = 0;         
         }
      }
      else if (v.P_CountMain[playerID] == 5)
      {
         if (v.P_LoopMain[playerID] == 0)
         {
            KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID);
            KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);

         }
         if (v.P_LoopMain[playerID] == 18)
         {
            KillUnitAt(All, "40 + 1n Goliath", "Anywhere", playerID);
            KillUnitAt(All, "40 + 1n Drone", "Anywhere", playerID);
            KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
            KillUnitAt(All, "60 + 1n Siege", "Anywhere", playerID);
            KillUnitAt(All, "60 + 1n Dragoon", "Anywhere", playerID);
            KillUnitAt(All, "40 + 1n Firebat", "Anywhere", playerID);

            SetSwitch("Recall - Oda", Clear);
         }

         trg.Main_Wait(80);

         v.P_LoopMain[playerID] += 1;

         if (v.P_LoopMain[playerID] == 19)
         {
            v.P_CountMain[playerID] += 1;
            v.P_LoopMain[playerID] = 0;         
         }
      }
      else if (v.P_CountMain[playerID] == 6)
      {
         trg.SkillEnd();
      }
   }

   MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
}

function EdgeShapeAt(playerID : TrgPlayer, count, Unit : TrgUnit, degree, n, interval, x, y)
{
   adv.Shape_EdgeAt(playerID, count, Unit, degree, n, interval, x, y);
   adv.Shape_EdgeAt(playerID, count, Unit, degree, n, interval, -x, -y);
   adv.Shape_EdgeAt(playerID, count, Unit, degree, n, interval, -y, x);
   adv.Shape_EdgeAt(playerID, count, Unit, degree, n, interval, y, -x);

   trg.Shape_Dot(playerID, count, Unit, x, y);
   trg.Shape_Dot(playerID, count, Unit, -x, -y);
   trg.Shape_Dot(playerID, count, Unit, -y, x);
   trg.Shape_Dot(playerID, count, Unit, y, -x);
}

