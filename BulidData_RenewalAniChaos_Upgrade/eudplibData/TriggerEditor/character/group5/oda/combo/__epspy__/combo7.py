## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import PluginVariables as msqcvar;
import PluginVariables as msqcvar
# (Line 2) import variable as v;
import variable as v
# (Line 3) import func.trig as trg;
from func import trig as trg
# (Line 4) import func.trigadv as adv;
from func import trigadv as adv
# (Line 5) import func.sound as s;
from func import sound as s
# (Line 7) function EdgeShapeAt(playerID : TrgPlayer, count, Unit : TrgUnit, degree, n, interval, x, y);
# (Line 9) function main(playerID)
# (Line 10) {
@EUDFunc
def f_main(playerID):
    # (Line 11) MoveUnit(All, "50 + 1n Battlecruiser", playerID, "Anywhere", "[Skill]HoldPosition");
    # (Line 12) MoveUnit(All, "40 + 1n Gantrithor", playerID, "Anywhere", "[Skill]HoldPosition");
    DoActions(MoveUnit(All, "50 + 1n Battlecruiser", playerID, "Anywhere", "[Skill]HoldPosition"))
    # (Line 14) trg.Debuff_BanReturn();
    DoActions(MoveUnit(All, "40 + 1n Gantrithor", playerID, "Anywhere", "[Skill]HoldPosition"))
    trg.Debuff_BanReturn()
    # (Line 15) trg.Debuff_Stop();
    trg.Debuff_Stop()
    # (Line 17) if (v.P_WaitMain[playerID] == 0)
    if EUDIf()(v.P_WaitMain[playerID] == 0):
        # (Line 18) {
        # (Line 19) if (v.P_CountMain[playerID] == 0)
        if EUDIf()(v.P_CountMain[playerID] == 0):
            # (Line 20) {
            # (Line 21) trg.Table_Sin(playerID, 22 * v.P_LoopMain[playerID], 150);
            trg.Table_Sin(playerID, 22 * v.P_LoopMain[playerID], 150)
            # (Line 22) trg.Table_Cos(playerID, 22 * v.P_LoopMain[playerID], 150);
            trg.Table_Cos(playerID, 22 * v.P_LoopMain[playerID], 150)
            # (Line 24) var x = v.P_AngleCos[playerID];
            x = EUDVariable()
            x << (v.P_AngleCos[playerID])
            # (Line 25) var y = v.P_AngleSin[playerID];
            y = EUDVariable()
            y << (v.P_AngleSin[playerID])
            # (Line 27) trg.Shape_Square(playerID, 1, "40 + 1n Lurker", x, y);
            trg.Shape_Square(playerID, 1, "40 + 1n Lurker", x, y)
            # (Line 28) KillUnitAt(All, "40 + 1n Lurker", "Anywhere", playerID);
            # (Line 30) trg.Main_Wait(80);
            DoActions(KillUnitAt(All, "40 + 1n Lurker", "Anywhere", playerID))
            trg.Main_Wait(80)
            # (Line 32) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 34) if (v.P_LoopMain[playerID] == 4)
            if EUDIf()(v.P_LoopMain[playerID] == 4):
                # (Line 35) {
                # (Line 36) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 37) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 38) }
                # (Line 39) }
            EUDEndIf()
            # (Line 40) else if (v.P_CountMain[playerID] == 1)
        if EUDElseIf()(v.P_CountMain[playerID] == 1):
            # (Line 41) {
            # (Line 42) RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
            # (Line 44) trg.Table_Sin(playerID, 45 * v.P_LoopMain[playerID], 100);
            DoActions(RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
            trg.Table_Sin(playerID, 45 * v.P_LoopMain[playerID], 100)
            # (Line 45) trg.Table_Cos(playerID, 45 * v.P_LoopMain[playerID], 100);
            trg.Table_Cos(playerID, 45 * v.P_LoopMain[playerID], 100)
            # (Line 47) var x = v.P_AngleCos[playerID];
            x = EUDVariable()
            x << (v.P_AngleCos[playerID])
            # (Line 48) var y = v.P_AngleSin[playerID];
            y = EUDVariable()
            y << (v.P_AngleSin[playerID])
            # (Line 50) trg.Shape_Double(playerID, 1, "40 + 1n Wraith", x, y);
            trg.Shape_Double(playerID, 1, "40 + 1n Wraith", x, y)
            # (Line 51) trg.Shape_Double(playerID, 1, "Scantid (Desert)", x, y);
            trg.Shape_Double(playerID, 1, "Scantid (Desert)", x, y)
            # (Line 52) KillUnitAt(All, "Scantid (Desert)", "Anywhere", playerID);
            # (Line 54) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
            DoActions(KillUnitAt(All, "Scantid (Desert)", "Anywhere", playerID))
            # (Line 55) Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
            DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
            # (Line 57) trg.Main_Wait(80);
            DoActions(Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
            trg.Main_Wait(80)
            # (Line 59) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 61) if (v.P_LoopMain[playerID] == 4)
            if EUDIf()(v.P_LoopMain[playerID] == 4):
                # (Line 62) {
                # (Line 63) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 64) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 65) }
                # (Line 66) }
            EUDEndIf()
            # (Line 67) else if (v.P_CountMain[playerID] == 2)
        if EUDElseIf()(v.P_CountMain[playerID] == 2):
            # (Line 68) {
            # (Line 69) trg.Table_Sin(playerID, 90 - 22 * v.P_LoopMain[playerID], 150);
            trg.Table_Sin(playerID, 90 - 22 * v.P_LoopMain[playerID], 150)
            # (Line 70) trg.Table_Cos(playerID, 90 - 22 * v.P_LoopMain[playerID], 150);
            trg.Table_Cos(playerID, 90 - 22 * v.P_LoopMain[playerID], 150)
            # (Line 72) var x = v.P_AngleCos[playerID];
            x = EUDVariable()
            x << (v.P_AngleCos[playerID])
            # (Line 73) var y = v.P_AngleSin[playerID];
            y = EUDVariable()
            y << (v.P_AngleSin[playerID])
            # (Line 75) if (v.P_LoopMain[playerID] % 2 == 0)
            if EUDIf()(v.P_LoopMain[playerID] % 2 == 0):
                # (Line 76) {
                # (Line 77) RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 79) if (v.P_LoopMain[playerID] == 0)
                DoActions(RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                if EUDIf()(v.P_LoopMain[playerID] == 0):
                    # (Line 80) {
                    # (Line 81) trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", x, y);
                    trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", x, y)
                    # (Line 82) }
                    # (Line 83) else if (v.P_LoopMain[playerID] == 2)
                if EUDElseIf()(v.P_LoopMain[playerID] == 2):
                    # (Line 84) {
                    # (Line 85) trg.Shape_Square(playerID, 1, "100 + 1n Hyperion", x, y);
                    trg.Shape_Square(playerID, 1, "100 + 1n Hyperion", x, y)
                    # (Line 86) }
                    # (Line 87) trg.Shape_Square(playerID, 1, "50 + 1n Tank", x, y);
                EUDEndIf()
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", x, y)
                # (Line 88) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                # (Line 90) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                # (Line 91) Order("100 + 1n Hyperion", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 92) Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(Order("100 + 1n Hyperion", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 93) }
                DoActions(Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 94) else if (v.P_LoopMain[playerID] % 2 == 1)
            if EUDElseIf()(v.P_LoopMain[playerID] % 2 == 1):
                # (Line 95) {
                # (Line 96) trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", x, y);
                trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", x, y)
                # (Line 97) trg.Shape_Square(playerID, 1, "60 + 1n Archon", x, y);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", x, y)
                # (Line 98) KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID);
                # (Line 99) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID))
                # (Line 100) }
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                # (Line 102) trg.Main_Wait(80);
            EUDEndIf()
            trg.Main_Wait(80)
            # (Line 104) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 106) if (v.P_LoopMain[playerID] == 4)
            if EUDIf()(v.P_LoopMain[playerID] == 4):
                # (Line 107) {
                # (Line 108) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 109) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 110) }
                # (Line 111) }
            EUDEndIf()
            # (Line 112) else if (v.P_CountMain[playerID] == 3)
        if EUDElseIf()(v.P_CountMain[playerID] == 3):
            # (Line 113) {
            # (Line 114) if (v.P_LoopMain[playerID] < 4)
            if EUDIf()(v.P_LoopMain[playerID] >= 4, neg=True):
                # (Line 115) {
                # (Line 116) var x = 300 - 75 * v.P_LoopMain[playerID];
                x = EUDVariable()
                x << (300 - 75 * v.P_LoopMain[playerID])
                # (Line 117) var y = 75 * v.P_LoopMain[playerID];
                y = EUDVariable()
                y << (75 * v.P_LoopMain[playerID])
                # (Line 119) trg.Shape_Square(playerID, 1, "60 + 1n Siege", x, y);
                trg.Shape_Square(playerID, 1, "60 + 1n Siege", x, y)
                # (Line 120) trg.Shape_Square(playerID, 8, "Protoss Dark Archon", x, y);
                trg.Shape_Square(playerID, 8, "Protoss Dark Archon", x, y)
                # (Line 121) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                # (Line 123) if (v.P_LoopMain[playerID] == 0)
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                if EUDIf()(v.P_LoopMain[playerID] == 0):
                    # (Line 124) {
                    # (Line 125) KillUnitAt(All, "100 + 1n Hyperion", "Anywhere", playerID);
                    # (Line 127) trg.Table_Sin(playerID, 90, 150);
                    DoActions(KillUnitAt(All, "100 + 1n Hyperion", "Anywhere", playerID))
                    trg.Table_Sin(playerID, 90, 150)
                    # (Line 128) trg.Table_Cos(playerID, 90, 150);
                    trg.Table_Cos(playerID, 90, 150)
                    # (Line 130) x = v.P_AngleCos[playerID];
                    x << (v.P_AngleCos[playerID])
                    # (Line 131) y = v.P_AngleSin[playerID];
                    y << (v.P_AngleSin[playerID])
                    # (Line 133) trg.Shape_Square(playerID, 9, "60 + 1n Archon", x, y);
                    trg.Shape_Square(playerID, 9, "60 + 1n Archon", x, y)
                    # (Line 134) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                    # (Line 136) }
                    DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                    # (Line 137) else if (v.P_LoopMain[playerID] == 2)
                if EUDElseIf()(v.P_LoopMain[playerID] == 2):
                    # (Line 138) {
                    # (Line 139) trg.Table_Sin(playerID, 45, 150);
                    trg.Table_Sin(playerID, 45, 150)
                    # (Line 140) trg.Table_Cos(playerID, 45, 150);
                    trg.Table_Cos(playerID, 45, 150)
                    # (Line 142) x = v.P_AngleCos[playerID];
                    x << (v.P_AngleCos[playerID])
                    # (Line 143) y = v.P_AngleSin[playerID];
                    y << (v.P_AngleSin[playerID])
                    # (Line 145) trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", x, y);
                    trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", x, y)
                    # (Line 146) trg.Shape_Square(playerID, 9, "60 + 1n Archon", x, y);
                    trg.Shape_Square(playerID, 9, "60 + 1n Archon", x, y)
                    # (Line 147) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                    # (Line 148) }
                    DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                    # (Line 149) }
                EUDEndIf()
                # (Line 151) trg.Main_Wait(80);
            EUDEndIf()
            trg.Main_Wait(80)
            # (Line 153) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 155) if (v.P_LoopMain[playerID] == 4)
            if EUDIf()(v.P_LoopMain[playerID] == 4):
                # (Line 156) {
                # (Line 157) ModifyUnitHangarCount(2, All, "40 + 1n Gantrithor", CurrentPlayer, "Anywhere");
                # (Line 158) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(ModifyUnitHangarCount(2, All, "40 + 1n Gantrithor", CurrentPlayer, "Anywhere"))
                # (Line 159) Order("40 + 1n Gantrithor", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 161) v.P_CountMain[playerID] += 1;
                DoActions(Order("40 + 1n Gantrithor", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 162) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 163) }
                # (Line 164) }
            EUDEndIf()
            # (Line 165) else if (v.P_CountMain[playerID] == 4)
        if EUDElseIf()(v.P_CountMain[playerID] == 4):
            # (Line 166) {
            # (Line 167) var x = 0;
            x = EUDVariable()
            x << (0)
            # (Line 168) var y = 0;
            y = EUDVariable()
            y << (0)
            # (Line 170) if (v.P_LoopMain[playerID] < 4)
            if EUDIf()(v.P_LoopMain[playerID] >= 4, neg=True):
                # (Line 171) {
                # (Line 172) var i = 0;
                i = EUDVariable()
                i << (0)
                # (Line 174) for (; i <= v.P_LoopMain[playerID]; i++)
                if EUDWhile()(i <= v.P_LoopMain[playerID]):
                    def _t20():
                        i.__iadd__(1)
                    # (Line 175) {
                    # (Line 176) trg.Table_Sin(playerID, 22 + 45 * i, 50 + 75 * i);
                    trg.Table_Sin(playerID, 22 + 45 * i, 50 + 75 * i)
                    # (Line 177) trg.Table_Cos(playerID, 22 + 45 * i, 50 + 75 * i);
                    trg.Table_Cos(playerID, 22 + 45 * i, 50 + 75 * i)
                    # (Line 179) x = v.P_AngleCos[playerID];
                    x << (v.P_AngleCos[playerID])
                    # (Line 180) y = v.P_AngleSin[playerID];
                    y << (v.P_AngleSin[playerID])
                    # (Line 182) EdgeShapeAt(playerID, 1, "60 + 1n High Templar", 22, 3, 32, x, y);
                    EdgeShapeAt(playerID, 1, "60 + 1n High Templar", 22, 3, 32, x, y)
                    # (Line 183) KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID);
                    # (Line 184) }
                    DoActions(KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID))
                    # (Line 185) }
                    EUDSetContinuePoint()
                    _t20()
                EUDEndWhile()
                # (Line 187) var r = 0;
            EUDEndIf()
            r = EUDVariable()
            r << (0)
            # (Line 188) var d = 0;
            d = EUDVariable()
            d << (0)
            # (Line 190) if (v.P_LoopMain[playerID] == 3)
            if EUDIf()(v.P_LoopMain[playerID] == 3):
                # (Line 191) {
                # (Line 192) r = 22;
                r << (22)
                # (Line 193) d = 200;
                d << (200)
                # (Line 194) }
                # (Line 195) else if (v.P_LoopMain[playerID] == 4)
            if EUDElseIf()(v.P_LoopMain[playerID] == 4):
                # (Line 196) {
                # (Line 197) r = 67;
                r << (67)
                # (Line 198) d = 150;
                d << (150)
                # (Line 199) }
                # (Line 200) else if (v.P_LoopMain[playerID] == 5)
            if EUDElseIf()(v.P_LoopMain[playerID] == 5):
                # (Line 201) {
                # (Line 202) r = 22;
                r << (22)
                # (Line 203) d = 250;
                d << (250)
                # (Line 204) }
                # (Line 205) else if (v.P_LoopMain[playerID] == 6)
            if EUDElseIf()(v.P_LoopMain[playerID] == 6):
                # (Line 206) {
                # (Line 207) r = 67;
                r << (67)
                # (Line 208) d = 100;
                d << (100)
                # (Line 209) }
                # (Line 210) else if (v.P_LoopMain[playerID] == 7)
            if EUDElseIf()(v.P_LoopMain[playerID] == 7):
                # (Line 211) {
                # (Line 212) r = 67;
                r << (67)
                # (Line 213) d = 250;
                d << (250)
                # (Line 214) }
                # (Line 215) else if (v.P_LoopMain[playerID] == 8)
            if EUDElseIf()(v.P_LoopMain[playerID] == 8):
                # (Line 216) {
                # (Line 217) r = 22;
                r << (22)
                # (Line 218) d = 150;
                d << (150)
                # (Line 219) }
                # (Line 220) else if (v.P_LoopMain[playerID] == 9)
            if EUDElseIf()(v.P_LoopMain[playerID] == 9):
                # (Line 221) {
                # (Line 222) r = 22;
                r << (22)
                # (Line 223) d = 250;
                d << (250)
                # (Line 225) SetSwitch("Recall - Oda", Set);
                # (Line 226) }
                DoActions(SetSwitch("Recall - Oda", Set))
                # (Line 229) if (v.P_LoopMain[playerID] >= 3 && v.P_LoopMain[playerID] < 10)
            EUDEndIf()
            if EUDIf()(EUDSCAnd()(v.P_LoopMain[playerID] >= 3)(v.P_LoopMain[playerID] >= 10, neg=True)()):
                # (Line 230) {
                # (Line 231) trg.Table_Sin(playerID, r, d);
                trg.Table_Sin(playerID, r, d)
                # (Line 232) trg.Table_Cos(playerID, r, d);
                trg.Table_Cos(playerID, r, d)
                # (Line 234) x = v.P_AngleCos[playerID];
                x << (v.P_AngleCos[playerID])
                # (Line 235) y = v.P_AngleSin[playerID];
                y << (v.P_AngleSin[playerID])
                # (Line 237) EdgeShapeAt(playerID, 1, "40 + 1n Mojo", 22, 2, 50, x, y);
                EdgeShapeAt(playerID, 1, "40 + 1n Mojo", 22, 2, 50, x, y)
                # (Line 238) KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID);
                # (Line 240) trg.Table_Sin(playerID, r + 90, d);
                DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID))
                trg.Table_Sin(playerID, r + 90, d)
                # (Line 241) trg.Table_Cos(playerID, r + 90, d);
                trg.Table_Cos(playerID, r + 90, d)
                # (Line 243) x = v.P_AngleCos[playerID];
                x << (v.P_AngleCos[playerID])
                # (Line 244) y = v.P_AngleSin[playerID];
                y << (v.P_AngleSin[playerID])
                # (Line 246) EdgeShapeAt(playerID, 1, "Target", 22, 3, 32, x, y);
                EdgeShapeAt(playerID, 1, "Target", 22, 3, 32, x, y)
                # (Line 247) EdgeShapeAt(playerID, 1, "60 + 1n Archon", 22, 2, 50, x, y);
                EdgeShapeAt(playerID, 1, "60 + 1n Archon", 22, 2, 50, x, y)
                # (Line 248) KillUnitAt(All, "Target", "Anywhere", playerID);
                # (Line 249) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "Target", "Anywhere", playerID))
                # (Line 251) if (v.P_LoopMain[playerID] % 2 == 1)
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                if EUDIf()(v.P_LoopMain[playerID] % 2 == 1):
                    # (Line 252) {
                    # (Line 253) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                    # (Line 254) Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                    DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                    # (Line 255) }
                    DoActions(Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                    # (Line 257) if (v.P_LoopMain[playerID] == 3)
                EUDEndIf()
                if EUDIf()(v.P_LoopMain[playerID] == 3):
                    # (Line 258) {
                    # (Line 259) trg.Shape_Square(playerID, 1, "40 + 1n Goliath", x, y);
                    trg.Shape_Square(playerID, 1, "40 + 1n Goliath", x, y)
                    # (Line 261) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                    # (Line 262) MoveUnit(All, "40 + 1n Goliath", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                    DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                    # (Line 263) Order("40 + 1n Goliath", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                    DoActions(MoveUnit(All, "40 + 1n Goliath", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                    # (Line 264) }
                    DoActions(Order("40 + 1n Goliath", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                    # (Line 265) if (v.P_LoopMain[playerID] == 4)
                EUDEndIf()
                if EUDIf()(v.P_LoopMain[playerID] == 4):
                    # (Line 266) {
                    # (Line 267) trg.Shape_Square(playerID, 1, "40 + 1n Drone", x, y);
                    trg.Shape_Square(playerID, 1, "40 + 1n Drone", x, y)
                    # (Line 269) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                    # (Line 270) MoveUnit(All, "40 + 1n Drone", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                    DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                    # (Line 271) Order("40 + 1n Drone", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                    DoActions(MoveUnit(All, "40 + 1n Drone", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                    # (Line 272) }
                    DoActions(Order("40 + 1n Drone", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                    # (Line 273) if (v.P_LoopMain[playerID] == 5)
                EUDEndIf()
                if EUDIf()(v.P_LoopMain[playerID] == 5):
                    # (Line 274) {
                    # (Line 275) trg.Shape_Square(playerID, 1, "50 + 1n Tank", x, y);
                    trg.Shape_Square(playerID, 1, "50 + 1n Tank", x, y)
                    # (Line 277) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                    # (Line 278) MoveUnit(All, "50 + 1n Tank", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                    DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                    # (Line 279) Order("50 + 1n Tank", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                    DoActions(MoveUnit(All, "50 + 1n Tank", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                    # (Line 280) }
                    DoActions(Order("50 + 1n Tank", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                    # (Line 281) if (v.P_LoopMain[playerID] == 6)
                EUDEndIf()
                if EUDIf()(v.P_LoopMain[playerID] == 6):
                    # (Line 282) {
                    # (Line 283) trg.Shape_Square(playerID, 1, "40 + 1n Drone", x, y);
                    trg.Shape_Square(playerID, 1, "40 + 1n Drone", x, y)
                    # (Line 285) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                    # (Line 286) MoveUnit(All, "40 + 1n Drone", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                    DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                    # (Line 287) Order("40 + 1n Drone", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                    DoActions(MoveUnit(All, "40 + 1n Drone", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                    # (Line 288) }
                    DoActions(Order("40 + 1n Drone", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                    # (Line 289) if (v.P_LoopMain[playerID] == 7)
                EUDEndIf()
                if EUDIf()(v.P_LoopMain[playerID] == 7):
                    # (Line 290) {
                    # (Line 291) trg.Shape_Square(playerID, 1, "60 + 1n Dragoon", x, y);
                    trg.Shape_Square(playerID, 1, "60 + 1n Dragoon", x, y)
                    # (Line 293) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                    # (Line 294) MoveUnit(All, "60 + 1n Dragoon", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                    DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                    # (Line 295) Order("60 + 1n Dragoon", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                    DoActions(MoveUnit(All, "60 + 1n Dragoon", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                    # (Line 296) }
                    DoActions(Order("60 + 1n Dragoon", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                    # (Line 297) if (v.P_LoopMain[playerID] == 8)
                EUDEndIf()
                if EUDIf()(v.P_LoopMain[playerID] == 8):
                    # (Line 298) {
                    # (Line 299) trg.Shape_Square(playerID, 1, "40 + 1n Firebat", x, y);
                    trg.Shape_Square(playerID, 1, "40 + 1n Firebat", x, y)
                    # (Line 301) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                    # (Line 302) MoveUnit(All, "40 + 1n Firebat", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                    DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                    # (Line 303) Order("40 + 1n Firebat", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                    DoActions(MoveUnit(All, "40 + 1n Firebat", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                    # (Line 304) }
                    DoActions(Order("40 + 1n Firebat", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                    # (Line 305) if (v.P_LoopMain[playerID] == 9)
                EUDEndIf()
                if EUDIf()(v.P_LoopMain[playerID] == 9):
                    # (Line 306) {
                    # (Line 307) trg.Shape_Square(playerID, 1, "40 + 1n Drone", x, y);
                    trg.Shape_Square(playerID, 1, "40 + 1n Drone", x, y)
                    # (Line 309) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                    # (Line 310) MoveUnit(All, "40 + 1n Drone", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                    DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                    # (Line 311) Order("40 + 1n Drone", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                    DoActions(MoveUnit(All, "40 + 1n Drone", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                    # (Line 312) }
                    DoActions(Order("40 + 1n Drone", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                    # (Line 313) }
                EUDEndIf()
                # (Line 315) trg.Main_Wait(80);
            EUDEndIf()
            trg.Main_Wait(80)
            # (Line 317) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 319) if (v.P_LoopMain[playerID] == 67)
            if EUDIf()(v.P_LoopMain[playerID] == 67):
                # (Line 320) {
                # (Line 321) s.CharacterVoice(23);
                s.CharacterVoice(23)
                # (Line 323) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 324) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 325) }
                # (Line 326) }
            EUDEndIf()
            # (Line 327) else if (v.P_CountMain[playerID] == 5)
        if EUDElseIf()(v.P_CountMain[playerID] == 5):
            # (Line 328) {
            # (Line 329) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 330) {
                # (Line 331) KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID);
                # (Line 332) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID))
                # (Line 334) }
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                # (Line 335) if (v.P_LoopMain[playerID] == 18)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] == 18):
                # (Line 336) {
                # (Line 337) KillUnitAt(All, "40 + 1n Goliath", "Anywhere", playerID);
                # (Line 338) KillUnitAt(All, "40 + 1n Drone", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Goliath", "Anywhere", playerID))
                # (Line 339) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Drone", "Anywhere", playerID))
                # (Line 340) KillUnitAt(All, "60 + 1n Siege", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                # (Line 341) KillUnitAt(All, "60 + 1n Dragoon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "60 + 1n Siege", "Anywhere", playerID))
                # (Line 342) KillUnitAt(All, "40 + 1n Firebat", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "60 + 1n Dragoon", "Anywhere", playerID))
                # (Line 344) SetSwitch("Recall - Oda", Clear);
                DoActions(KillUnitAt(All, "40 + 1n Firebat", "Anywhere", playerID))
                # (Line 345) }
                DoActions(SetSwitch("Recall - Oda", Clear))
                # (Line 347) trg.Main_Wait(80);
            EUDEndIf()
            trg.Main_Wait(80)
            # (Line 349) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 351) if (v.P_LoopMain[playerID] == 19)
            if EUDIf()(v.P_LoopMain[playerID] == 19):
                # (Line 352) {
                # (Line 353) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 354) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 355) }
                # (Line 356) }
            EUDEndIf()
            # (Line 357) else if (v.P_CountMain[playerID] == 6)
        if EUDElseIf()(v.P_CountMain[playerID] == 6):
            # (Line 358) {
            # (Line 359) trg.SkillEnd();
            trg.SkillEnd()
            # (Line 360) }
            # (Line 361) }
        EUDEndIf()
        # (Line 363) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
    EUDEndIf()
    # (Line 364) }
    DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
    # (Line 366) function EdgeShapeAt(playerID : TrgPlayer, count, Unit : TrgUnit, degree, n, interval, x, y)

# (Line 367) {
@EUDTypedFunc([TrgPlayer, None, TrgUnit, None, None, None, None, None])
def EdgeShapeAt(playerID, count, Unit, degree, n, interval, x, y):
    # (Line 368) adv.Shape_EdgeAt(playerID, count, Unit, degree, n, interval, x, y);
    adv.Shape_EdgeAt(playerID, count, Unit, degree, n, interval, x, y)
    # (Line 369) adv.Shape_EdgeAt(playerID, count, Unit, degree, n, interval, -x, -y);
    adv.Shape_EdgeAt(playerID, count, Unit, degree, n, interval, -x, -y)
    # (Line 370) adv.Shape_EdgeAt(playerID, count, Unit, degree, n, interval, -y, x);
    adv.Shape_EdgeAt(playerID, count, Unit, degree, n, interval, -y, x)
    # (Line 371) adv.Shape_EdgeAt(playerID, count, Unit, degree, n, interval, y, -x);
    adv.Shape_EdgeAt(playerID, count, Unit, degree, n, interval, y, -x)
    # (Line 373) trg.Shape_Dot(playerID, count, Unit, x, y);
    trg.Shape_Dot(playerID, count, Unit, x, y)
    # (Line 374) trg.Shape_Dot(playerID, count, Unit, -x, -y);
    trg.Shape_Dot(playerID, count, Unit, -x, -y)
    # (Line 375) trg.Shape_Dot(playerID, count, Unit, -y, x);
    trg.Shape_Dot(playerID, count, Unit, -y, x)
    # (Line 376) trg.Shape_Dot(playerID, count, Unit, y, -x);
    trg.Shape_Dot(playerID, count, Unit, y, -x)
    # (Line 377) }
