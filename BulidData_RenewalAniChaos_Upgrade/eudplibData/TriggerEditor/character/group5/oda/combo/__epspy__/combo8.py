## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import PluginVariables as msqcvar;
import PluginVariables as msqcvar
# (Line 2) import variable as v;
import variable as v
# (Line 3) import func.trig as trg;
from func import trig as trg
# (Line 4) import func.trigadv as adv;
from func import trigadv as adv
# (Line 5) import func.sound as s;
from func import sound as s
# (Line 7) function NxNSquareShapeAt(playerID : TrgPlayer, count, Unit : TrgUnit, n, distance, x, y);
# (Line 9) function main(playerID)
# (Line 10) {
@EUDFunc
def f_main(playerID):
    # (Line 11) if (v.P_WaitMain[playerID] == 0)
    if EUDIf()(v.P_WaitMain[playerID] == 0):
        # (Line 12) {
        # (Line 13) if (v.P_CountMain[playerID] == 0)
        if EUDIf()(v.P_CountMain[playerID] == 0):
            # (Line 14) {
            # (Line 15) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 16) {
                # (Line 17) trg.Shape_Dot(playerID, 1, "50 + 1n Battlecruiser", 0, 0);
                trg.Shape_Dot(playerID, 1, "50 + 1n Battlecruiser", 0, 0)
                # (Line 18) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
                # (Line 19) }
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                # (Line 21) trg.Main_Wait(80);
            EUDEndIf()
            trg.Main_Wait(80)
            # (Line 23) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 25) if (v.P_LoopMain[playerID] == 18)
            if EUDIf()(v.P_LoopMain[playerID] == 18):
                # (Line 26) {
                # (Line 27) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 28) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 29) }
                # (Line 30) }
            EUDEndIf()
            # (Line 31) else if (v.P_CountMain[playerID] == 1)
        if EUDElseIf()(v.P_CountMain[playerID] == 1):
            # (Line 32) {
            # (Line 33) if (v.P_LoopMain[playerID] < 13)
            if EUDIf()(v.P_LoopMain[playerID] >= 13, neg=True):
                # (Line 34) {
                # (Line 35) trg.Shape_Edge(playerID, 1, "Bengalaas (Jungle)", 45, 3, 50);
                trg.Shape_Edge(playerID, 1, "Bengalaas (Jungle)", 45, 3, 50)
                # (Line 36) KillUnitAt(All, "Bengalaas (Jungle)", "Anywhere", playerID);
                # (Line 38) trg.Shape_Dot(playerID, 1, "Target", 0, 0);
                DoActions(KillUnitAt(All, "Bengalaas (Jungle)", "Anywhere", playerID))
                trg.Shape_Dot(playerID, 1, "Target", 0, 0)
                # (Line 39) KillUnitAt(All, "Target", "Anywhere", playerID);
                # (Line 40) }
                DoActions(KillUnitAt(All, "Target", "Anywhere", playerID))
                # (Line 42) trg.Main_Wait(80);
            EUDEndIf()
            trg.Main_Wait(80)
            # (Line 44) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 46) if (v.P_LoopMain[playerID] == 16)
            if EUDIf()(v.P_LoopMain[playerID] == 16):
                # (Line 47) {
                # (Line 48) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 49) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 50) }
                # (Line 51) }
            EUDEndIf()
            # (Line 52) else if (v.P_CountMain[playerID] == 2)
        if EUDElseIf()(v.P_CountMain[playerID] == 2):
            # (Line 53) {
            # (Line 54) var d = 100;
            d = EUDVariable()
            d << (100)
            # (Line 56) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 57) {
                # (Line 58) adv.Shape_NxNSquareAt2(playerID, 1, "40 + 1n Wraith", 3, 50, -d, d);
                adv.Shape_NxNSquareAt2(playerID, 1, "40 + 1n Wraith", 3, 50, -d, d)
                # (Line 59) adv.Shape_NxNSquareAt2(playerID, 1, "40 + 1n Wraith", 3, 50, d, -d);
                adv.Shape_NxNSquareAt2(playerID, 1, "40 + 1n Wraith", 3, 50, d, -d)
                # (Line 60) adv.Shape_NxNSquareAt2(playerID, 1, " Unit. Hoffnung 25000", 3, 50, -d, d);
                adv.Shape_NxNSquareAt2(playerID, 1, " Unit. Hoffnung 25000", 3, 50, -d, d)
                # (Line 61) adv.Shape_NxNSquareAt2(playerID, 1, " Unit. Hoffnung 25000", 3, 50, d, -d);
                adv.Shape_NxNSquareAt2(playerID, 1, " Unit. Hoffnung 25000", 3, 50, d, -d)
                # (Line 62) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID);
                # (Line 64) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID))
                # (Line 65) Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 66) }
                DoActions(Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 67) else if (v.P_LoopMain[playerID] == 1)
            if EUDElseIf()(v.P_LoopMain[playerID] == 1):
                # (Line 68) {
                # (Line 69) trg.Shape_Dot(playerID, 6, "40 + 1n Goliath", -d, d);
                trg.Shape_Dot(playerID, 6, "40 + 1n Goliath", -d, d)
                # (Line 70) trg.Shape_Dot(playerID, 6, "40 + 1n Goliath", d, -d);
                trg.Shape_Dot(playerID, 6, "40 + 1n Goliath", d, -d)
                # (Line 72) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 73) MoveUnit(All, "40 + 1n Goliath", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 74) Order("40 + 1n Goliath", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveUnit(All, "40 + 1n Goliath", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                # (Line 75) }
                DoActions(Order("40 + 1n Goliath", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 76) else if (v.P_LoopMain[playerID] == 2)
            if EUDElseIf()(v.P_LoopMain[playerID] == 2):
                # (Line 77) {
                # (Line 78) RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 79) RemoveUnitAt(All, "40 + 1n Goliath", "Anywhere", playerID);
                DoActions(RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                # (Line 81) trg.Shape_Dot(playerID, 1, "50 + 1n Battlecruiser", -d, d);
                DoActions(RemoveUnitAt(All, "40 + 1n Goliath", "Anywhere", playerID))
                trg.Shape_Dot(playerID, 1, "50 + 1n Battlecruiser", -d, d)
                # (Line 82) trg.Shape_Dot(playerID, 1, "50 + 1n Battlecruiser", d, -d);
                trg.Shape_Dot(playerID, 1, "50 + 1n Battlecruiser", d, -d)
                # (Line 84) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 85) Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 86) }
                DoActions(Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 88) trg.Main_Wait(80);
            EUDEndIf()
            trg.Main_Wait(80)
            # (Line 90) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 92) if (v.P_LoopMain[playerID] == 6)
            if EUDIf()(v.P_LoopMain[playerID] == 6):
                # (Line 93) {
                # (Line 94) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 95) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 96) }
                # (Line 97) }
            EUDEndIf()
            # (Line 98) else if (v.P_CountMain[playerID] == 3)
        if EUDElseIf()(v.P_CountMain[playerID] == 3):
            # (Line 99) {
            # (Line 100) var d = 100;
            d = EUDVariable()
            d << (100)
            # (Line 102) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 103) {
                # (Line 104) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
                # (Line 106) adv.Shape_NxNSquareAt2(playerID, 1, "40 + 1n Wraith", 2, 50, d, d);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                adv.Shape_NxNSquareAt2(playerID, 1, "40 + 1n Wraith", 2, 50, d, d)
                # (Line 107) adv.Shape_NxNSquareAt2(playerID, 1, "40 + 1n Wraith", 2, 50, -d, -d);
                adv.Shape_NxNSquareAt2(playerID, 1, "40 + 1n Wraith", 2, 50, -d, -d)
                # (Line 108) adv.Shape_NxNSquareAt2(playerID, 1, " Unit. Hoffnung 25000", 3, 50, d, d);
                adv.Shape_NxNSquareAt2(playerID, 1, " Unit. Hoffnung 25000", 3, 50, d, d)
                # (Line 109) adv.Shape_NxNSquareAt2(playerID, 1, " Unit. Hoffnung 25000", 3, 50, -d, -d);
                adv.Shape_NxNSquareAt2(playerID, 1, " Unit. Hoffnung 25000", 3, 50, -d, -d)
                # (Line 110) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID);
                # (Line 112) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID))
                # (Line 113) Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 114) }
                DoActions(Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 115) else if (v.P_LoopMain[playerID] == 1)
            if EUDElseIf()(v.P_LoopMain[playerID] == 1):
                # (Line 116) {
                # (Line 117) trg.Shape_Dot(playerID, 6, "40 + 1n Goliath", d, d);
                trg.Shape_Dot(playerID, 6, "40 + 1n Goliath", d, d)
                # (Line 118) trg.Shape_Dot(playerID, 6, "40 + 1n Goliath", -d, -d);
                trg.Shape_Dot(playerID, 6, "40 + 1n Goliath", -d, -d)
                # (Line 120) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 121) MoveUnit(All, "40 + 1n Goliath", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 122) Order("40 + 1n Goliath", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveUnit(All, "40 + 1n Goliath", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                # (Line 123) }
                DoActions(Order("40 + 1n Goliath", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 124) else if (v.P_LoopMain[playerID] == 2)
            if EUDElseIf()(v.P_LoopMain[playerID] == 2):
                # (Line 125) {
                # (Line 126) RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 127) RemoveUnitAt(All, "40 + 1n Goliath", "Anywhere", playerID);
                DoActions(RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                # (Line 129) trg.Shape_Dot(playerID, 1, "50 + 1n Battlecruiser", d, d);
                DoActions(RemoveUnitAt(All, "40 + 1n Goliath", "Anywhere", playerID))
                trg.Shape_Dot(playerID, 1, "50 + 1n Battlecruiser", d, d)
                # (Line 130) trg.Shape_Dot(playerID, 1, "50 + 1n Battlecruiser", -d, -d);
                trg.Shape_Dot(playerID, 1, "50 + 1n Battlecruiser", -d, -d)
                # (Line 132) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 133) Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 134) }
                DoActions(Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 135) else if (v.P_LoopMain[playerID] == 6)
            if EUDElseIf()(v.P_LoopMain[playerID] == 6):
                # (Line 136) {
                # (Line 137) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
                # (Line 138) }
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                # (Line 140) trg.Main_Wait(80);
            EUDEndIf()
            trg.Main_Wait(80)
            # (Line 142) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 144) if (v.P_LoopMain[playerID] == 16)
            if EUDIf()(v.P_LoopMain[playerID] == 16):
                # (Line 145) {
                # (Line 146) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 147) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 148) }
                # (Line 149) }
            EUDEndIf()
            # (Line 150) else if (v.P_CountMain[playerID] == 4)
        if EUDElseIf()(v.P_CountMain[playerID] == 4):
            # (Line 151) {
            # (Line 152) if (v.P_LoopMain[playerID] < 4)
            if EUDIf()(v.P_LoopMain[playerID] >= 4, neg=True):
                # (Line 153) {
                # (Line 154) trg.Shape_Line(playerID, 1, "Bengalaas (Jungle)", 180 - 45 * v.P_LoopMain[playerID], 7, 75, 0);
                trg.Shape_Line(playerID, 1, "Bengalaas (Jungle)", 180 - 45 * v.P_LoopMain[playerID], 7, 75, 0)
                # (Line 155) trg.Shape_Line(playerID, 1, "Bengalaas (Jungle)", 180 - 45 * v.P_LoopMain[playerID], 7, 75, 50);
                trg.Shape_Line(playerID, 1, "Bengalaas (Jungle)", 180 - 45 * v.P_LoopMain[playerID], 7, 75, 50)
                # (Line 156) trg.Shape_Line(playerID, 1, "Bengalaas (Jungle)", 180 - 45 * v.P_LoopMain[playerID] + 180, 7, 75, 50);
                trg.Shape_Line(playerID, 1, "Bengalaas (Jungle)", 180 - 45 * v.P_LoopMain[playerID] + 180, 7, 75, 50)
                # (Line 158) KillUnitAt(All, "Bengalaas (Jungle)", "Anywhere", playerID);
                # (Line 159) }
                DoActions(KillUnitAt(All, "Bengalaas (Jungle)", "Anywhere", playerID))
                # (Line 160) else if (v.P_LoopMain[playerID] == 4)
            if EUDElseIf()(v.P_LoopMain[playerID] == 4):
                # (Line 161) {
                # (Line 162) trg.Shape_Line(playerID, 1, "50 + 1n Battlecruiser", 45, 7, 75, 0);
                trg.Shape_Line(playerID, 1, "50 + 1n Battlecruiser", 45, 7, 75, 0)
                # (Line 163) trg.Shape_Line(playerID, 1, "50 + 1n Battlecruiser", 45, 7, 75, 75);
                trg.Shape_Line(playerID, 1, "50 + 1n Battlecruiser", 45, 7, 75, 75)
                # (Line 164) trg.Shape_Line(playerID, 1, "50 + 1n Battlecruiser", 225, 7, 75, 75);
                trg.Shape_Line(playerID, 1, "50 + 1n Battlecruiser", 225, 7, 75, 75)
                # (Line 165) trg.Shape_Line(playerID, 1, " Unit. Hoffnung 25000", 45, 7, 75, 0);
                trg.Shape_Line(playerID, 1, " Unit. Hoffnung 25000", 45, 7, 75, 0)
                # (Line 166) trg.Shape_Line(playerID, 1, " Unit. Hoffnung 25000", 45, 7, 75, 75);
                trg.Shape_Line(playerID, 1, " Unit. Hoffnung 25000", 45, 7, 75, 75)
                # (Line 167) trg.Shape_Line(playerID, 1, " Unit. Hoffnung 25000", 225, 7, 75, 75);
                trg.Shape_Line(playerID, 1, " Unit. Hoffnung 25000", 225, 7, 75, 75)
                # (Line 169) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID);
                # (Line 171) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID))
                # (Line 172) Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, "Anywhere");
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 174) }
                DoActions(Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, "Anywhere"))
                # (Line 175) else if (v.P_LoopMain[playerID] == 7)
            if EUDElseIf()(v.P_LoopMain[playerID] == 7):
                # (Line 176) {
                # (Line 177) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
                # (Line 179) trg.Shape_Line(playerID, 1, "40 + 1n Wraith", 135, 7, 75, 0);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                trg.Shape_Line(playerID, 1, "40 + 1n Wraith", 135, 7, 75, 0)
                # (Line 180) trg.Shape_Line(playerID, 1, "40 + 1n Wraith", 135, 7, 75, 75);
                trg.Shape_Line(playerID, 1, "40 + 1n Wraith", 135, 7, 75, 75)
                # (Line 181) trg.Shape_Line(playerID, 1, "40 + 1n Wraith", 315, 7, 75, 75);
                trg.Shape_Line(playerID, 1, "40 + 1n Wraith", 315, 7, 75, 75)
                # (Line 182) trg.Shape_Line(playerID, 1, "60 + 1n Archon", 135, 7, 75, 0);
                trg.Shape_Line(playerID, 1, "60 + 1n Archon", 135, 7, 75, 0)
                # (Line 183) trg.Shape_Line(playerID, 1, "60 + 1n Archon", 135, 7, 75, 75);
                trg.Shape_Line(playerID, 1, "60 + 1n Archon", 135, 7, 75, 75)
                # (Line 184) trg.Shape_Line(playerID, 1, "60 + 1n Archon", 315, 7, 75, 75);
                trg.Shape_Line(playerID, 1, "60 + 1n Archon", 315, 7, 75, 75)
                # (Line 186) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                # (Line 188) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                # (Line 189) Order("40 + 1n Wraith", playerID, "Anywhere", Attack, "Anywhere");
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 190) }
                DoActions(Order("40 + 1n Wraith", playerID, "Anywhere", Attack, "Anywhere"))
                # (Line 191) else if (v.P_LoopMain[playerID] == 10)
            if EUDElseIf()(v.P_LoopMain[playerID] == 10):
                # (Line 192) {
                # (Line 193) RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 194) }
                DoActions(RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                # (Line 195) else if (v.P_LoopMain[playerID] == 11)
            if EUDElseIf()(v.P_LoopMain[playerID] == 11):
                # (Line 196) {
                # (Line 197) trg.Shape_Line(playerID, 1, "Kakaru (Twilight)", 135, 7, 75, 0);
                trg.Shape_Line(playerID, 1, "Kakaru (Twilight)", 135, 7, 75, 0)
                # (Line 198) trg.Shape_Line(playerID, 1, "Kakaru (Twilight)", 135, 7, 75, 75);
                trg.Shape_Line(playerID, 1, "Kakaru (Twilight)", 135, 7, 75, 75)
                # (Line 199) trg.Shape_Line(playerID, 1, "Kakaru (Twilight)", 315, 7, 75, 75);
                trg.Shape_Line(playerID, 1, "Kakaru (Twilight)", 315, 7, 75, 75)
                # (Line 201) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);
                # (Line 203) trg.Shape_Line(playerID, 1, " Unit. Hoffnung 25000", 135, 7, 75, 0);
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID))
                trg.Shape_Line(playerID, 1, " Unit. Hoffnung 25000", 135, 7, 75, 0)
                # (Line 204) trg.Shape_Line(playerID, 1, " Unit. Hoffnung 25000", 135, 7, 75, 75);
                trg.Shape_Line(playerID, 1, " Unit. Hoffnung 25000", 135, 7, 75, 75)
                # (Line 205) trg.Shape_Line(playerID, 1, " Unit. Hoffnung 25000", 315, 7, 75, 75);
                trg.Shape_Line(playerID, 1, " Unit. Hoffnung 25000", 315, 7, 75, 75)
                # (Line 207) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID);
                # (Line 208) }
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID))
                # (Line 210) trg.Main_Wait(80);
            EUDEndIf()
            trg.Main_Wait(80)
            # (Line 212) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 214) if (v.P_LoopMain[playerID] == 16)
            if EUDIf()(v.P_LoopMain[playerID] == 16):
                # (Line 215) {
                # (Line 216) s.CharacterVoice(26);
                s.CharacterVoice(26)
                # (Line 218) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 219) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 220) }
                # (Line 221) }
            EUDEndIf()
            # (Line 222) else if (v.P_CountMain[playerID] == 5)
        if EUDElseIf()(v.P_CountMain[playerID] == 5):
            # (Line 223) {
            # (Line 224) trg.SkillEnd();
            trg.SkillEnd()
            # (Line 225) }
            # (Line 226) }
        EUDEndIf()
        # (Line 228) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
    EUDEndIf()
    # (Line 229) }
    DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
    # (Line 231) function NxNSquareShapeAt(playerID : TrgPlayer, count, Unit : TrgUnit, n, distance, x, y)

# (Line 232) {
@EUDTypedFunc([TrgPlayer, None, TrgUnit, None, None, None, None])
def NxNSquareShapeAt(playerID, count, Unit, n, distance, x, y):
    # (Line 233) adv.Shape_NxNSquareAt2(playerID, count, Unit, n, distance, x, y);
    adv.Shape_NxNSquareAt2(playerID, count, Unit, n, distance, x, y)
    # (Line 234) adv.Shape_NxNSquareAt2(playerID, count, Unit, n, distance, -x, -y);
    adv.Shape_NxNSquareAt2(playerID, count, Unit, n, distance, -x, -y)
    # (Line 235) adv.Shape_NxNSquareAt2(playerID, count, Unit, n, distance, -y, x);
    adv.Shape_NxNSquareAt2(playerID, count, Unit, n, distance, -y, x)
    # (Line 236) adv.Shape_NxNSquareAt2(playerID, count, Unit, n, distance, y, -x);
    adv.Shape_NxNSquareAt2(playerID, count, Unit, n, distance, y, -x)
    # (Line 237) }
