## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import PluginVariables as msqcvar;
import PluginVariables as msqcvar
# (Line 2) import variable as v;
import variable as v
# (Line 3) import func.trig as trg;
from func import trig as trg
# (Line 5) function main(playerID)
# (Line 6) {
@EUDFunc
def f_main(playerID):
    # (Line 7) trg.Debuff_BanReturn();
    trg.Debuff_BanReturn()
    # (Line 8) trg.Debuff_Stop();
    trg.Debuff_Stop()
    # (Line 10) if (v.P_WaitMain[playerID] == 0)
    if EUDIf()(v.P_WaitMain[playerID] == 0):
        # (Line 11) {
        # (Line 12) if (v.P_CountMain[playerID] == 0)
        if EUDIf()(v.P_CountMain[playerID] == 0):
            # (Line 13) {
            # (Line 14) RemoveUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID);
            # (Line 16) var x = 0;
            DoActions(RemoveUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID))
            x = EUDVariable()
            x << (0)
            # (Line 17) var y = 0;
            y = EUDVariable()
            y << (0)
            # (Line 19) if (v.P_LoopMain[playerID] == 0) { x = 50; y = 50; }
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                x << (50)
                y << (50)
                # (Line 20) else if (v.P_LoopMain[playerID] == 1) { x = 0; y = 50; }
            if EUDElseIf()(v.P_LoopMain[playerID] == 1):
                x << (0)
                y << (50)
                # (Line 21) else if (v.P_LoopMain[playerID] == 2) { x = -50; y = 50; }
            if EUDElseIf()(v.P_LoopMain[playerID] == 2):
                x << (-50)
                y << (50)
                # (Line 22) else if (v.P_LoopMain[playerID] == 3) { x = -50; y = 0; }
            if EUDElseIf()(v.P_LoopMain[playerID] == 3):
                x << (-50)
                y << (0)
                # (Line 24) trg.Shape_Double(playerID, 1, "40 + 1n Mojo", x, y);
            EUDEndIf()
            trg.Shape_Double(playerID, 1, "40 + 1n Mojo", x, y)
            # (Line 25) trg.Shape_Double(playerID, 1, "Protoss Dark Archon", x, y);
            trg.Shape_Double(playerID, 1, "Protoss Dark Archon", x, y)
            # (Line 26) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
            # (Line 28) trg.Shape_Double(playerID, 1, "Kakaru (Twilight)", -y, x);
            DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
            trg.Shape_Double(playerID, 1, "Kakaru (Twilight)", -y, x)
            # (Line 29) trg.Shape_Double(playerID, 1, "Rhynadon (Badlands)", -y, x);
            trg.Shape_Double(playerID, 1, "Rhynadon (Badlands)", -y, x)
            # (Line 30) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);
            # (Line 31) KillUnitAt(All, "Rhynadon (Badlands)", "Anywhere", playerID);
            DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID))
            # (Line 33) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
            DoActions(KillUnitAt(All, "Rhynadon (Badlands)", "Anywhere", playerID))
            # (Line 34) Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
            DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
            # (Line 36) trg.Main_Wait(80);
            DoActions(Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
            trg.Main_Wait(80)
            # (Line 38) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 40) if (v.P_LoopMain[playerID] == 4)
            if EUDIf()(v.P_LoopMain[playerID] == 4):
                # (Line 41) {
                # (Line 42) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 43) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 44) }
                # (Line 45) }
            EUDEndIf()
            # (Line 46) else if (v.P_CountMain[playerID] == 1)
        if EUDElseIf()(v.P_CountMain[playerID] == 1):
            # (Line 47) {
            # (Line 48) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 49) {
                # (Line 50) RemoveUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID);
                # (Line 51) }
                DoActions(RemoveUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID))
                # (Line 53) if (v.P_LoopMain[playerID] < 4)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] >= 4, neg=True):
                # (Line 54) {
                # (Line 55) var d = 50 + 50 * (v.P_LoopMain[playerID] % 4);
                d = EUDVariable()
                d << (50 + 50 * (v.P_LoopMain[playerID] % 4))
                # (Line 57) trg.Shape_Square(playerID, 1, "40 + 1n Guardian", d, d);
                trg.Shape_Square(playerID, 1, "40 + 1n Guardian", d, d)
                # (Line 58) trg.Shape_Square(playerID, 1, "60 + 1n Archon", d, d);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", d, d)
                # (Line 59) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
                # (Line 60) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID))
                # (Line 61) }
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                # (Line 62) else if (v.P_LoopMain[playerID] < 8)
            if EUDElseIf()(v.P_LoopMain[playerID] >= 8, neg=True):
                # (Line 63) {
                # (Line 64) var d = 200 - 50 * (v.P_LoopMain[playerID] % 4);
                d = EUDVariable()
                d << (200 - 50 * (v.P_LoopMain[playerID] % 4))
                # (Line 66) trg.Shape_Square(playerID, 1, "40 + 1n Guardian", d, d);
                trg.Shape_Square(playerID, 1, "40 + 1n Guardian", d, d)
                # (Line 67) trg.Shape_Square(playerID, 1, "60 + 1n Archon", d, d);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", d, d)
                # (Line 68) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
                # (Line 69) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID))
                # (Line 70) }
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                # (Line 72) if (v.P_LoopMain[playerID] < 8 && v.P_LoopMain[playerID] % 2 == 0)
            EUDEndIf()
            if EUDIf()(EUDSCAnd()(v.P_LoopMain[playerID] >= 8, neg=True)(v.P_LoopMain[playerID] % 2 == 0)()):
                # (Line 73) {
                # (Line 74) RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 76) var x = 0;
                DoActions(RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                x = EUDVariable()
                x << (0)
                # (Line 77) var y = 0;
                y = EUDVariable()
                y << (0)
                # (Line 79) if (v.P_LoopMain[playerID] / 2 % 2 == 0) { x = 50; y = 50; }
                if EUDIf()(v.P_LoopMain[playerID] // 2 % 2 == 0):
                    x << (50)
                    y << (50)
                    # (Line 80) else if (v.P_LoopMain[playerID] / 2 % 2 == 1) { x = 0; y = 50; }
                if EUDElseIf()(v.P_LoopMain[playerID] // 2 % 2 == 1):
                    x << (0)
                    y << (50)
                    # (Line 82) trg.Shape_Square(playerID, 1, "Bengalaas (Jungle)", -y, x);
                EUDEndIf()
                trg.Shape_Square(playerID, 1, "Bengalaas (Jungle)", -y, x)
                # (Line 83) trg.Shape_Square(playerID, 1, "Target", -y, x);
                trg.Shape_Square(playerID, 1, "Target", -y, x)
                # (Line 84) trg.Shape_Square(playerID, 1, "40 + 1n Wraith", x, y);
                trg.Shape_Square(playerID, 1, "40 + 1n Wraith", x, y)
                # (Line 85) trg.Shape_Square(playerID, 1, "Scantid (Desert)", x, y);
                trg.Shape_Square(playerID, 1, "Scantid (Desert)", x, y)
                # (Line 86) KillUnitAt(All, "Bengalaas (Jungle)", "Anywhere", playerID);
                # (Line 87) KillUnitAt(All, "Target", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "Bengalaas (Jungle)", "Anywhere", playerID))
                # (Line 88) KillUnitAt(All, "Scantid (Desert)", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "Target", "Anywhere", playerID))
                # (Line 90) Order("40 + 1n Wraith", playerID, "Anywhere", Attack, "Anywhere");
                DoActions(KillUnitAt(All, "Scantid (Desert)", "Anywhere", playerID))
                # (Line 92) }
                DoActions(Order("40 + 1n Wraith", playerID, "Anywhere", Attack, "Anywhere"))
                # (Line 94) trg.Main_Wait(80);
            EUDEndIf()
            trg.Main_Wait(80)
            # (Line 96) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 98) if (v.P_LoopMain[playerID] == 8)
            if EUDIf()(v.P_LoopMain[playerID] == 8):
                # (Line 99) {
                # (Line 100) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 101) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 102) }
                # (Line 103) }
            EUDEndIf()
            # (Line 104) else if (v.P_CountMain[playerID] == 2)
        if EUDElseIf()(v.P_CountMain[playerID] == 2):
            # (Line 105) {
            # (Line 106) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 107) {
                # (Line 108) RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 110) trg.Shape_NxNSquare(playerID, 1, "40 + 1n Guardian", 3, 50);
                DoActions(RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                trg.Shape_NxNSquare(playerID, 1, "40 + 1n Guardian", 3, 50)
                # (Line 111) trg.Shape_NxNSquare(playerID, 1, "60 + 1n Archon", 3, 50);
                trg.Shape_NxNSquare(playerID, 1, "60 + 1n Archon", 3, 50)
                # (Line 112) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
                # (Line 113) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID))
                # (Line 114) }
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                # (Line 115) else if (v.P_LoopMain[playerID] >= 2 && v.P_LoopMain[playerID] < 6)
            if EUDElseIf()(EUDSCAnd()(v.P_LoopMain[playerID] >= 2)(v.P_LoopMain[playerID] >= 6, neg=True)()):
                # (Line 116) {
                # (Line 117) var i = (v.P_LoopMain[playerID] - 2);
                i = EUDVariable()
                i << ((v.P_LoopMain[playerID] - 2))
                # (Line 119) trg.Shape_Square(playerID, 1, "40 + 1n Guardian", -100 + 50 * i, 100);
                trg.Shape_Square(playerID, 1, "40 + 1n Guardian", -100 + 50 * i, 100)
                # (Line 120) trg.Shape_Square(playerID, 1, "60 + 1n Archon", -100 + 50 * i, 100);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", -100 + 50 * i, 100)
                # (Line 121) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
                # (Line 122) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID))
                # (Line 123) }
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                # (Line 125) if (v.P_LoopMain[playerID] == 2)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] == 2):
                # (Line 126) {
                # (Line 127) trg.Shape_NxNSquare(playerID, 1, "40 + 1n Wraith", 3, 50);
                trg.Shape_NxNSquare(playerID, 1, "40 + 1n Wraith", 3, 50)
                # (Line 129) Order("40 + 1n Wraith", playerID, "Anywhere", Attack, "Anywhere");
                # (Line 130) }
                DoActions(Order("40 + 1n Wraith", playerID, "Anywhere", Attack, "Anywhere"))
                # (Line 131) else if (v.P_LoopMain[playerID] == 4)
            if EUDElseIf()(v.P_LoopMain[playerID] == 4):
                # (Line 132) {
                # (Line 133) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 135) trg.Shape_NxNSquare(playerID, 1, "40 + 1n Mojo", 3, 50);
                DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                trg.Shape_NxNSquare(playerID, 1, "40 + 1n Mojo", 3, 50)
                # (Line 137) Order("40 + 1n Mojo", playerID, "Anywhere", Attack, "Anywhere");
                # (Line 138) }
                DoActions(Order("40 + 1n Mojo", playerID, "Anywhere", Attack, "Anywhere"))
                # (Line 140) trg.Main_Wait(80);
            EUDEndIf()
            trg.Main_Wait(80)
            # (Line 142) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 144) if (v.P_LoopMain[playerID] == 8)
            if EUDIf()(v.P_LoopMain[playerID] == 8):
                # (Line 145) {
                # (Line 146) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 147) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 148) }
                # (Line 149) }
            EUDEndIf()
            # (Line 150) else if (v.P_CountMain[playerID] == 3)
        if EUDElseIf()(v.P_CountMain[playerID] == 3):
            # (Line 151) {
            # (Line 152) KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID);
            # (Line 154) trg.SkillEnd();
            DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID))
            trg.SkillEnd()
            # (Line 155) }
            # (Line 156) }
        EUDEndIf()
        # (Line 157) }
    EUDEndIf()
