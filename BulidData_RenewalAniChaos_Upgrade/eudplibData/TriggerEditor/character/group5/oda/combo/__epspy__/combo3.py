## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _RELIMP(path, mod_name):
    import inspect, pathlib, importlib.util
    p = pathlib.Path(inspect.getabsfile(inspect.currentframe())).parent
    for s in path.split("."):
        if s == "":  p = p.parent
        else:  p = p / s
    try:
        spec = importlib.util.spec_from_file_location(mod_name, p / (mod_name + ".py"))
        module = importlib.util.module_from_spec(spec)
        spec.loader.exec_module(module)
    except FileNotFoundError:
        loader = EPSLoader(mod_name, str(p / (mod_name + ".eps")))
        spec = importlib.util.spec_from_loader(mod_name, loader)
        module = loader.create_module(spec)
        loader.exec_module(module)
    return module

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import PluginVariables as msqcvar;
import PluginVariables as msqcvar
# (Line 2) import variable as v;
import variable as v
# (Line 3) import func.trig as trg;
from func import trig as trg
# (Line 4) import func.trigepic as epic;
from func import trigepic as epic
# (Line 5) import func.sound as s;
from func import sound as s
# (Line 7) function main(playerID)
# (Line 8) {
@EUDFunc
def f_main(playerID):
    # (Line 9) MoveUnit(All, "50 + 1n Tank", playerID, "Anywhere", "[Skill]HoldPosition");
    # (Line 10) MoveUnit(All, "60 + 1n Dragoon", playerID, "Anywhere", "[Skill]HoldPosition");
    DoActions(MoveUnit(All, "50 + 1n Tank", playerID, "Anywhere", "[Skill]HoldPosition"))
    # (Line 11) MoveUnit(All, "40 + 1n Drone", playerID, "Anywhere", "[Skill]HoldPosition");
    DoActions(MoveUnit(All, "60 + 1n Dragoon", playerID, "Anywhere", "[Skill]HoldPosition"))
    # (Line 13) trg.Debuff_BanReturn();
    DoActions(MoveUnit(All, "40 + 1n Drone", playerID, "Anywhere", "[Skill]HoldPosition"))
    trg.Debuff_BanReturn()
    # (Line 14) trg.Debuff_Stop();
    trg.Debuff_Stop()
    # (Line 16) if (v.P_WaitMain[playerID] == 0)
    if EUDIf()(v.P_WaitMain[playerID] == 0):
        # (Line 17) {
        # (Line 18) if (v.P_CountMain[playerID] == 0)
        if EUDIf()(v.P_CountMain[playerID] == 0):
            # (Line 19) {
            # (Line 20) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 21) {
                # (Line 22) trg.Table_Sin(playerID, 22, 100);
                trg.Table_Sin(playerID, 22, 100)
                # (Line 23) trg.Table_Cos(playerID, 22, 100);
                trg.Table_Cos(playerID, 22, 100)
                # (Line 25) trg.Shape_Square(playerID, 1, "50 + 1n Tank", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", v.P_AngleCos[playerID], v.P_AngleSin[playerID])
                # (Line 26) trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
                trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", v.P_AngleCos[playerID], v.P_AngleSin[playerID])
                # (Line 27) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                # (Line 28) KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                # (Line 30) trg.Table_Sin(playerID, 67, 150);
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID))
                trg.Table_Sin(playerID, 67, 150)
                # (Line 31) trg.Table_Cos(playerID, 67, 150);
                trg.Table_Cos(playerID, 67, 150)
                # (Line 33) trg.Shape_Square(playerID, 1, "60 + 1n Archon", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", v.P_AngleCos[playerID], v.P_AngleSin[playerID])
                # (Line 34) trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", v.P_AngleCos[playerID], v.P_AngleSin[playerID])
                # (Line 35) trg.Shape_Dot(playerID, 1, "50 + 1n Battlecruiser", 0, 0);
                trg.Shape_Dot(playerID, 1, "50 + 1n Battlecruiser", 0, 0)
                # (Line 36) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                # (Line 38) Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, "Anywhere");
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                # (Line 39) }
                DoActions(Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, "Anywhere"))
                # (Line 40) else if (v.P_LoopMain[playerID] == 1)
            if EUDElseIf()(v.P_LoopMain[playerID] == 1):
                # (Line 41) {
                # (Line 42) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
                # (Line 43) }
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                # (Line 44) else if (v.P_LoopMain[playerID] == 2)
            if EUDElseIf()(v.P_LoopMain[playerID] == 2):
                # (Line 45) {
                # (Line 46) trg.Table_Sin(playerID, 67, 100);
                trg.Table_Sin(playerID, 67, 100)
                # (Line 47) trg.Table_Cos(playerID, 67, 100);
                trg.Table_Cos(playerID, 67, 100)
                # (Line 49) trg.Shape_Square(playerID, 1, "50 + 1n Tank", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", v.P_AngleCos[playerID], v.P_AngleSin[playerID])
                # (Line 50) trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
                trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", v.P_AngleCos[playerID], v.P_AngleSin[playerID])
                # (Line 51) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                # (Line 52) KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                # (Line 54) trg.Table_Sin(playerID, 22, 150);
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID))
                trg.Table_Sin(playerID, 22, 150)
                # (Line 55) trg.Table_Cos(playerID, 22, 150);
                trg.Table_Cos(playerID, 22, 150)
                # (Line 57) trg.Shape_Square(playerID, 1, "60 + 1n Archon", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", v.P_AngleCos[playerID], v.P_AngleSin[playerID])
                # (Line 58) trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", v.P_AngleCos[playerID], v.P_AngleSin[playerID])
                # (Line 59) trg.Shape_Dot(playerID, 1, "50 + 1n Battlecruiser", 0, 0);
                trg.Shape_Dot(playerID, 1, "50 + 1n Battlecruiser", 0, 0)
                # (Line 60) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                # (Line 62) Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, "Anywhere");
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                # (Line 63) }
                DoActions(Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, "Anywhere"))
                # (Line 64) else if (v.P_LoopMain[playerID] == 3)
            if EUDElseIf()(v.P_LoopMain[playerID] == 3):
                # (Line 65) {
                # (Line 66) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
                # (Line 67) }
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                # (Line 69) trg.Main_Wait(160);
            EUDEndIf()
            trg.Main_Wait(160)
            # (Line 71) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 73) if (v.P_LoopMain[playerID] == 8)
            if EUDIf()(v.P_LoopMain[playerID] == 8):
                # (Line 74) {
                # (Line 75) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 76) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 77) }
                # (Line 78) }
            EUDEndIf()
            # (Line 79) else if (v.P_CountMain[playerID] == 1)
        if EUDElseIf()(v.P_CountMain[playerID] == 1):
            # (Line 80) {
            # (Line 81) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 82) {
                # (Line 83) trg.Shape_Square(playerID, 1, "60 + 1n Siege", 150, 150);
                trg.Shape_Square(playerID, 1, "60 + 1n Siege", 150, 150)
                # (Line 84) trg.Shape_Square(playerID, 1, "60 + 1n Siege", 75, 150);
                trg.Shape_Square(playerID, 1, "60 + 1n Siege", 75, 150)
                # (Line 85) trg.Shape_Square(playerID, 1, "60 + 1n Siege", 150, 75);
                trg.Shape_Square(playerID, 1, "60 + 1n Siege", 150, 75)
                # (Line 86) }
                # (Line 87) else if (v.P_LoopMain[playerID] == 1)
            if EUDElseIf()(v.P_LoopMain[playerID] == 1):
                # (Line 88) {
                # (Line 89) trg.Shape_Edge(playerID, 1, "60 + 1n Dragoon", 45, 3, 75);
                trg.Shape_Edge(playerID, 1, "60 + 1n Dragoon", 45, 3, 75)
                # (Line 91) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 92) MoveUnit(All, "60 + 1n Dragoon", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 93) Order("60 + 1n Dragoon", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveUnit(All, "60 + 1n Dragoon", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                # (Line 94) }
                DoActions(Order("60 + 1n Dragoon", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 96) if (v.P_LoopMain[playerID] < 8 && v.P_LoopMain[playerID] % 2 == 0)
            EUDEndIf()
            if EUDIf()(EUDSCAnd()(v.P_LoopMain[playerID] >= 8, neg=True)(v.P_LoopMain[playerID] % 2 == 0)()):
                # (Line 97) {
                # (Line 98) var x = 150;
                x = EUDVariable()
                x << (150)
                # (Line 99) var y = 50 * (v.P_LoopMain[playerID] / 2);
                y = EUDVariable()
                y << (50 * (v.P_LoopMain[playerID] // 2))
                # (Line 101) var i = 0;
                i = EUDVariable()
                i << (0)
                # (Line 103) for (; i < 4; i++)
                if EUDWhile()(i >= 4, neg=True):
                    def _t13():
                        i.__iadd__(1)
                    # (Line 104) {
                    # (Line 105) trg.Shape_Square(playerID, 1, "Protoss Dark Archon", x - 50 * i, y - x);
                    trg.Shape_Square(playerID, 1, "Protoss Dark Archon", x - 50 * i, y - x)
                    # (Line 106) trg.Shape_Square(playerID, 1, "40 + 1n Mojo", x - 50 * i, y);
                    trg.Shape_Square(playerID, 1, "40 + 1n Mojo", x - 50 * i, y)
                    # (Line 107) }
                    # (Line 109) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                    EUDSetContinuePoint()
                    _t13()
                EUDEndWhile()
                # (Line 110) KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                # (Line 111) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID))
                # (Line 112) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                # (Line 115) }
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                # (Line 117) if (v.P_LoopMain[playerID] == 9)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] == 9):
                # (Line 118) {
                # (Line 119) trg.Shape_Edge(playerID, 1, "60 + 1n Danimoth", 45, 5, 100);
                trg.Shape_Edge(playerID, 1, "60 + 1n Danimoth", 45, 5, 100)
                # (Line 121) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 122) Order("60 + 1n Danimoth", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 123) }
                DoActions(Order("60 + 1n Danimoth", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 124) else if (v.P_LoopMain[playerID] == 13)
            if EUDElseIf()(v.P_LoopMain[playerID] == 13):
                # (Line 125) {
                # (Line 126) KillUnitAt(All, "60 + 1n Danimoth", "Anywhere", playerID);
                # (Line 127) }
                DoActions(KillUnitAt(All, "60 + 1n Danimoth", "Anywhere", playerID))
                # (Line 129) trg.Main_Wait(80);
            EUDEndIf()
            trg.Main_Wait(80)
            # (Line 131) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 133) if (v.P_LoopMain[playerID] == 22)
            if EUDIf()(v.P_LoopMain[playerID] == 22):
                # (Line 134) {
                # (Line 135) KillUnitAt(All, "60 + 1n Dragoon", "Anywhere", playerID);
                # (Line 137) v.P_CountMain[playerID] += 1;
                DoActions(KillUnitAt(All, "60 + 1n Dragoon", "Anywhere", playerID))
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 138) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 139) }
                # (Line 140) }
            EUDEndIf()
            # (Line 141) else if (v.P_CountMain[playerID] == 2)
        if EUDElseIf()(v.P_CountMain[playerID] == 2):
            # (Line 142) {
            # (Line 143) if (v.P_LoopMain[playerID] == 1)
            if EUDIf()(v.P_LoopMain[playerID] == 1):
                # (Line 144) {
                # (Line 145) trg.Shape_Edge(playerID, 1, "50 + 1n Tank", 45, 3, 75);
                trg.Shape_Edge(playerID, 1, "50 + 1n Tank", 45, 3, 75)
                # (Line 147) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 148) MoveUnit(All, "50 + 1n Tank", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 149) Order("50 + 1n Tank", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveUnit(All, "50 + 1n Tank", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                # (Line 150) }
                DoActions(Order("50 + 1n Tank", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 152) if (v.P_LoopMain[playerID] < 8 && v.P_LoopMain[playerID] % 2 == 0)
            EUDEndIf()
            if EUDIf()(EUDSCAnd()(v.P_LoopMain[playerID] >= 8, neg=True)(v.P_LoopMain[playerID] % 2 == 0)()):
                # (Line 153) {
                # (Line 154) var x = 150;
                x = EUDVariable()
                x << (150)
                # (Line 155) var y = - 50 * (v.P_LoopMain[playerID] / 2);
                y = EUDVariable()
                y << (-50 * (v.P_LoopMain[playerID] // 2))
                # (Line 157) var i = 0;
                i = EUDVariable()
                i << (0)
                # (Line 159) for (; i < 4; i++)
                if EUDWhile()(i >= 4, neg=True):
                    def _t21():
                        i.__iadd__(1)
                    # (Line 160) {
                    # (Line 161) trg.Shape_Square(playerID, 1, "40 + 1n Wraith", x - 50 * i, y);
                    trg.Shape_Square(playerID, 1, "40 + 1n Wraith", x - 50 * i, y)
                    # (Line 162) trg.Shape_Square(playerID, 1, "60 + 1n Archon", x - 50 * i, y + x);
                    trg.Shape_Square(playerID, 1, "60 + 1n Archon", x - 50 * i, y + x)
                    # (Line 163) }
                    # (Line 165) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                    EUDSetContinuePoint()
                    _t21()
                EUDEndWhile()
                # (Line 166) KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                # (Line 167) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID))
                # (Line 168) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                # (Line 170) }
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                # (Line 172) if (v.P_LoopMain[playerID] == 9)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] == 9):
                # (Line 173) {
                # (Line 175) }
                # (Line 176) else if (v.P_LoopMain[playerID] == 11)
                pass
            if EUDElseIf()(v.P_LoopMain[playerID] == 11):
                # (Line 177) {
                # (Line 178) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 179) }
                DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                # (Line 180) else if (v.P_LoopMain[playerID] == 12)
            if EUDElseIf()(v.P_LoopMain[playerID] == 12):
                # (Line 181) {
                # (Line 182) trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 0, 75);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 0, 75)
                # (Line 183) trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 0, 150);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 0, 150)
                # (Line 184) trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 225, 225);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 225, 225)
                # (Line 186) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 187) Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 188) }
                DoActions(Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 189) else if (v.P_LoopMain[playerID] == 16)
            if EUDElseIf()(v.P_LoopMain[playerID] == 16):
                # (Line 190) {
                # (Line 191) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
                # (Line 192) }
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                # (Line 194) trg.Main_Wait(80);
            EUDEndIf()
            trg.Main_Wait(80)
            # (Line 196) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 198) if (v.P_LoopMain[playerID] == 35)
            if EUDIf()(v.P_LoopMain[playerID] == 35):
                # (Line 199) {
                # (Line 200) s.CharacterVoice(16);
                s.CharacterVoice(16)
                # (Line 202) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                # (Line 204) v.P_CountMain[playerID] += 1;
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 205) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 206) }
                # (Line 207) }
            EUDEndIf()
            # (Line 208) else if (v.P_CountMain[playerID] == 3)
        if EUDElseIf()(v.P_CountMain[playerID] == 3):
            # (Line 209) {
            # (Line 210) if (v.P_LoopMain[playerID] < 8 && v.P_LoopMain[playerID] % 2 == 0)
            if EUDIf()(EUDSCAnd()(v.P_LoopMain[playerID] >= 8, neg=True)(v.P_LoopMain[playerID] % 2 == 0)()):
                # (Line 211) {
                # (Line 212) trg.Shape_Square(playerID, 8, "Bengalaas (Jungle)", 160, 0);
                trg.Shape_Square(playerID, 8, "Bengalaas (Jungle)", 160, 0)
                # (Line 213) trg.Shape_Square(playerID, 1, "Target", 160, 0);
                trg.Shape_Square(playerID, 1, "Target", 160, 0)
                # (Line 214) trg.Shape_Dot(playerID, 1, "Target", 0, 0);
                trg.Shape_Dot(playerID, 1, "Target", 0, 0)
                # (Line 216) KillUnitAt(All, "Bengalaas (Jungle)", "Anywhere", playerID);
                # (Line 217) KillUnitAt(All, "Target", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "Bengalaas (Jungle)", "Anywhere", playerID))
                # (Line 219) RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "Target", "Anywhere", playerID))
                # (Line 221) trg.Shape_Square(playerID, 1, "40 + 1n Wraith", 40 + 40 * (v.P_LoopMain[playerID] / 2), 0);
                DoActions(RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                trg.Shape_Square(playerID, 1, "40 + 1n Wraith", 40 + 40 * (v.P_LoopMain[playerID] // 2), 0)
                # (Line 222) trg.Shape_Square(playerID, 1, "40 + 1n Zealot", 40 + 40 * (v.P_LoopMain[playerID] / 2), 0);
                trg.Shape_Square(playerID, 1, "40 + 1n Zealot", 40 + 40 * (v.P_LoopMain[playerID] // 2), 0)
                # (Line 224) epic.Shape_Square(playerID, 1, "Zerg Defiler", 40 + 40 * (v.P_LoopMain[playerID] / 2), 0, 0);
                epic.Shape_Square(playerID, 1, "Zerg Defiler", 40 + 40 * (v.P_LoopMain[playerID] // 2), 0, 0)
                # (Line 226) KillUnitAt(All, "40 + 1n Zealot", "Anywhere", playerID);
                # (Line 228) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "40 + 1n Zealot", "Anywhere", playerID))
                # (Line 229) Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 230) }
                DoActions(Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 231) else if (v.P_LoopMain[playerID] == 8)
            if EUDElseIf()(v.P_LoopMain[playerID] == 8):
                # (Line 232) {
                # (Line 233) RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 235) trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 160, 0);
                DoActions(RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 160, 0)
                # (Line 236) trg.Shape_Square(playerID, 1, "Target", 160, 0);
                trg.Shape_Square(playerID, 1, "Target", 160, 0)
                # (Line 237) trg.Shape_Dot(playerID, 1, "Target", 0, 0);
                trg.Shape_Dot(playerID, 1, "Target", 0, 0)
                # (Line 238) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                # (Line 239) KillUnitAt(All, "Target", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                # (Line 240) }
                DoActions(KillUnitAt(All, "Target", "Anywhere", playerID))
                # (Line 241) else if (v.P_LoopMain[playerID] == 9)
            if EUDElseIf()(v.P_LoopMain[playerID] == 9):
                # (Line 242) {
                # (Line 243) trg.Shape_Square(playerID, 1, "60 + 1n Archon", 160, 0);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", 160, 0)
                # (Line 244) trg.Shape_Square(playerID, 1, "60 + 1n Danimoth", 160, 0);
                trg.Shape_Square(playerID, 1, "60 + 1n Danimoth", 160, 0)
                # (Line 245) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                # (Line 247) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                # (Line 248) Order("60 + 1n Danimoth", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 249) }
                DoActions(Order("60 + 1n Danimoth", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 251) trg.Main_Wait(80);
            EUDEndIf()
            trg.Main_Wait(80)
            # (Line 253) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 255) if (v.P_LoopMain[playerID] == 10)
            if EUDIf()(v.P_LoopMain[playerID] == 10):
                # (Line 256) {
                # (Line 258) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 259) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 260) }
                # (Line 261) }
            EUDEndIf()
            # (Line 262) else if (v.P_CountMain[playerID] == 4)
        if EUDElseIf()(v.P_CountMain[playerID] == 4):
            # (Line 263) {
            # (Line 264) if (v.P_LoopMain[playerID] < 8 && v.P_LoopMain[playerID] % 2 == 0)
            if EUDIf()(EUDSCAnd()(v.P_LoopMain[playerID] >= 8, neg=True)(v.P_LoopMain[playerID] % 2 == 0)()):
                # (Line 265) {
                # (Line 266) trg.Shape_Square(playerID, 8, "Bengalaas (Jungle)", 120, 120);
                trg.Shape_Square(playerID, 8, "Bengalaas (Jungle)", 120, 120)
                # (Line 267) trg.Shape_Square(playerID, 1, "Target", 120, 120);
                trg.Shape_Square(playerID, 1, "Target", 120, 120)
                # (Line 268) trg.Shape_Dot(playerID, 1, "Target", 0, 0);
                trg.Shape_Dot(playerID, 1, "Target", 0, 0)
                # (Line 270) KillUnitAt(All, "Bengalaas (Jungle)", "Anywhere", playerID);
                # (Line 271) KillUnitAt(All, "Target", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "Bengalaas (Jungle)", "Anywhere", playerID))
                # (Line 273) RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "Target", "Anywhere", playerID))
                # (Line 275) trg.Shape_Square(playerID, 1, "40 + 1n Wraith", 30 + 30 * (v.P_LoopMain[playerID] / 2), 30 + 30 * (v.P_LoopMain[playerID] / 2));
                DoActions(RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                trg.Shape_Square(playerID, 1, "40 + 1n Wraith", 30 + 30 * (v.P_LoopMain[playerID] // 2), 30 + 30 * (v.P_LoopMain[playerID] // 2))
                # (Line 276) trg.Shape_Square(playerID, 1, "40 + 1n Zealot", 30 + 30 * (v.P_LoopMain[playerID] / 2), 30 + 30 * (v.P_LoopMain[playerID] / 2));
                trg.Shape_Square(playerID, 1, "40 + 1n Zealot", 30 + 30 * (v.P_LoopMain[playerID] // 2), 30 + 30 * (v.P_LoopMain[playerID] // 2))
                # (Line 278) epic.Shape_Square(playerID, 1, "Zerg Defiler", 30 + 30 * (v.P_LoopMain[playerID] / 2), 30 + 30 * (v.P_LoopMain[playerID] / 2), 0);
                epic.Shape_Square(playerID, 1, "Zerg Defiler", 30 + 30 * (v.P_LoopMain[playerID] // 2), 30 + 30 * (v.P_LoopMain[playerID] // 2), 0)
                # (Line 280) KillUnitAt(All, "40 + 1n Zealot", "Anywhere", playerID);
                # (Line 282) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "40 + 1n Zealot", "Anywhere", playerID))
                # (Line 283) Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 284) }
                DoActions(Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 285) else if (v.P_LoopMain[playerID] == 8)
            if EUDElseIf()(v.P_LoopMain[playerID] == 8):
                # (Line 286) {
                # (Line 287) RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 289) trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 120, 120);
                DoActions(RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 120, 120)
                # (Line 290) trg.Shape_Square(playerID, 1, "Target", 120, 120);
                trg.Shape_Square(playerID, 1, "Target", 120, 120)
                # (Line 291) trg.Shape_Dot(playerID, 1, "Target", 0, 0);
                trg.Shape_Dot(playerID, 1, "Target", 0, 0)
                # (Line 292) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                # (Line 293) KillUnitAt(All, "Target", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                # (Line 294) }
                DoActions(KillUnitAt(All, "Target", "Anywhere", playerID))
                # (Line 295) else if (v.P_LoopMain[playerID] == 9)
            if EUDElseIf()(v.P_LoopMain[playerID] == 9):
                # (Line 296) {
                # (Line 297) trg.Shape_Square(playerID, 1, "60 + 1n Archon", 120, 120);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", 120, 120)
                # (Line 298) trg.Shape_Square(playerID, 1, "60 + 1n Danimoth", 120, 120);
                trg.Shape_Square(playerID, 1, "60 + 1n Danimoth", 120, 120)
                # (Line 299) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                # (Line 301) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                # (Line 302) Order("60 + 1n Danimoth", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 303) }
                DoActions(Order("60 + 1n Danimoth", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 305) trg.Main_Wait(80);
            EUDEndIf()
            trg.Main_Wait(80)
            # (Line 307) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 309) if (v.P_LoopMain[playerID] == 10)
            if EUDIf()(v.P_LoopMain[playerID] == 10):
                # (Line 310) {
                # (Line 311) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 312) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 313) }
                # (Line 314) }
            EUDEndIf()
            # (Line 315) else if (v.P_CountMain[playerID] == 5)
        if EUDElseIf()(v.P_CountMain[playerID] == 5):
            # (Line 316) {
            # (Line 317) if (v.P_LoopMain[playerID] < 8)
            if EUDIf()(v.P_LoopMain[playerID] >= 8, neg=True):
                # (Line 318) {
                # (Line 319) var i = 0;
                i = EUDVariable()
                i << (0)
                # (Line 321) for (; i < 4; i++)
                if EUDWhile()(i >= 4, neg=True):
                    def _t40():
                        i.__iadd__(1)
                    # (Line 322) {
                    # (Line 323) CreateUnit(4, "60 + 3n Siege", dwrand() % 8 + 33, playerID);
                    # (Line 324) CreateUnit(1, "40 + 1n Drone", dwrand() % 8 + 33, playerID);
                    DoActions(CreateUnit(4, "60 + 3n Siege", f_dwrand() % 8 + 33, playerID))
                    # (Line 325) SetInvincibility(Enable, "Any unit", playerID, "[Skill]Unit_Wait_ALL");
                    DoActions(CreateUnit(1, "40 + 1n Drone", f_dwrand() % 8 + 33, playerID))
                    # (Line 326) MoveLocation(v.P_LocationID[playerID], "Zerg Defiler", playerID, "Anywhere");
                    DoActions(SetInvincibility(Enable, "Any unit", playerID, "[Skill]Unit_Wait_ALL"))
                    # (Line 327) RemoveUnitAt(1, "Zerg Defiler", "Anywhere", playerID);
                    DoActions(MoveLocation(v.P_LocationID[playerID], "Zerg Defiler", playerID, "Anywhere"))
                    # (Line 328) MoveUnit(All, "40 + 1n Drone", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                    DoActions(RemoveUnitAt(1, "Zerg Defiler", "Anywhere", playerID))
                    # (Line 329) MoveUnit(All, "60 + 3n Siege", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                    DoActions(MoveUnit(All, "40 + 1n Drone", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                    # (Line 331) }
                    DoActions(MoveUnit(All, "60 + 3n Siege", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                    # (Line 332) KillUnitAt(All, "60 + 3n Siege", "Anywhere", playerID);
                    EUDSetContinuePoint()
                    _t40()
                EUDEndWhile()
                # (Line 334) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "60 + 3n Siege", "Anywhere", playerID))
                # (Line 335) MoveUnit(All, "40 + 1n Drone", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 336) Order("40 + 1n Drone", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveUnit(All, "40 + 1n Drone", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                # (Line 337) }
                DoActions(Order("40 + 1n Drone", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 339) trg.Main_Wait(80);
            EUDEndIf()
            trg.Main_Wait(80)
            # (Line 341) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 343) if (v.P_LoopMain[playerID] == 31)
            if EUDIf()(v.P_LoopMain[playerID] == 31):
                # (Line 344) {
                # (Line 345) KillUnitAt(All, "40 + 1n Drone", "Anywhere", playerID);
                # (Line 346) s.CharacterVoice(17);
                DoActions(KillUnitAt(All, "40 + 1n Drone", "Anywhere", playerID))
                s.CharacterVoice(17)
                # (Line 347) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 348) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 349) }
                # (Line 350) }
            EUDEndIf()
            # (Line 351) else if (v.P_CountMain[playerID] == 6)
        if EUDElseIf()(v.P_CountMain[playerID] == 6):
            # (Line 352) {
            # (Line 353) if (v.P_LoopMain[playerID] < 6)
            if EUDIf()(v.P_LoopMain[playerID] >= 6, neg=True):
                # (Line 354) {
                # (Line 355) trg.Shape_Double(playerID, 1, "Protoss Dark Archon", 150 - 50 * v.P_LoopMain[playerID], 150);
                trg.Shape_Double(playerID, 1, "Protoss Dark Archon", 150 - 50 * v.P_LoopMain[playerID], 150)
                # (Line 356) trg.Shape_Double(playerID, 1, "60 + 1n Archon", -150, 150 - 50 * v.P_LoopMain[playerID]);
                trg.Shape_Double(playerID, 1, "60 + 1n Archon", -150, 150 - 50 * v.P_LoopMain[playerID])
                # (Line 357) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                # (Line 358) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                # (Line 359) }
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                # (Line 362) if (v.P_LoopMain[playerID] == 0)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 363) {
                # (Line 364) KillUnitAt(All, "60 + 1n Danimoth", "Anywhere", playerID);
                # (Line 366) trg.Shape_Edge(playerID, 1, "60 + 1n Dragoon", 45, 3, 75);
                DoActions(KillUnitAt(All, "60 + 1n Danimoth", "Anywhere", playerID))
                trg.Shape_Edge(playerID, 1, "60 + 1n Dragoon", 45, 3, 75)
                # (Line 367) trg.Shape_Edge(playerID, 1, "40 + 1n Mojo", 45, 3, 75);
                trg.Shape_Edge(playerID, 1, "40 + 1n Mojo", 45, 3, 75)
                # (Line 368) KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID);
                # (Line 370) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID))
                # (Line 371) MoveUnit(All, "60 + 1n Dragoon", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 372) Order("60 + 1n Dragoon", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveUnit(All, "60 + 1n Dragoon", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                # (Line 373) }
                DoActions(Order("60 + 1n Dragoon", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 374) else if (v.P_LoopMain[playerID] == 2)
            if EUDElseIf()(v.P_LoopMain[playerID] == 2):
                # (Line 375) {
                # (Line 376) trg.Shape_Edge(playerID, 1, "50 + 1n Tank", 45, 5, 150);
                trg.Shape_Edge(playerID, 1, "50 + 1n Tank", 45, 5, 150)
                # (Line 377) trg.Shape_Edge(playerID, 1, "40 + 1n Mojo", 45, 5, 150);
                trg.Shape_Edge(playerID, 1, "40 + 1n Mojo", 45, 5, 150)
                # (Line 378) KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID);
                # (Line 380) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID))
                # (Line 381) MoveUnit(All, "50 + 1n Tank", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 382) Order("50 + 1n Tank", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveUnit(All, "50 + 1n Tank", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                # (Line 383) }
                DoActions(Order("50 + 1n Tank", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 384) else if (v.P_LoopMain[playerID] == 4)
            if EUDElseIf()(v.P_LoopMain[playerID] == 4):
                # (Line 385) {
                # (Line 386) trg.Shape_Edge(playerID, 1, "Protoss Dark Archon", 22, 3, 75);
                trg.Shape_Edge(playerID, 1, "Protoss Dark Archon", 22, 3, 75)
                # (Line 387) trg.Shape_Edge(playerID, 1, "40 + 1n Gantrithor", 22, 3, 75);
                trg.Shape_Edge(playerID, 1, "40 + 1n Gantrithor", 22, 3, 75)
                # (Line 388) trg.Shape_Dot(playerID, 1, "40 + 1n Gantrithor", 0, 0);
                trg.Shape_Dot(playerID, 1, "40 + 1n Gantrithor", 0, 0)
                # (Line 389) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                # (Line 390) KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                # (Line 391) }
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID))
                # (Line 392) else if (v.P_LoopMain[playerID] == 5)
            if EUDElseIf()(v.P_LoopMain[playerID] == 5):
                # (Line 393) {
                # (Line 394) trg.Shape_Edge(playerID, 1, "60 + 1n Archon", 45, 3, 100);
                trg.Shape_Edge(playerID, 1, "60 + 1n Archon", 45, 3, 100)
                # (Line 395) trg.Shape_Edge(playerID, 1, "50 + 1n Battlecruiser", 45, 3, 100);
                trg.Shape_Edge(playerID, 1, "50 + 1n Battlecruiser", 45, 3, 100)
                # (Line 396) trg.Shape_Dot(playerID, 1, "50 + 1n Battlecruiser", 0, 0);
                trg.Shape_Dot(playerID, 1, "50 + 1n Battlecruiser", 0, 0)
                # (Line 397) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                # (Line 399) Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, "Anywhere");
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                # (Line 400) }
                DoActions(Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, "Anywhere"))
                # (Line 401) else if (v.P_LoopMain[playerID] == 7)
            if EUDElseIf()(v.P_LoopMain[playerID] == 7):
                # (Line 402) {
                # (Line 403) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
                # (Line 404) }
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                # (Line 405) else if (v.P_LoopMain[playerID] == 8)
            if EUDElseIf()(v.P_LoopMain[playerID] == 8):
                # (Line 406) {
                # (Line 407) trg.Shape_Edge(playerID, 1, "Protoss Dark Archon", 45, 3, 50);
                trg.Shape_Edge(playerID, 1, "Protoss Dark Archon", 45, 3, 50)
                # (Line 408) trg.Shape_Edge(playerID, 1, "40 + 1n Gantrithor", 45, 3, 50);
                trg.Shape_Edge(playerID, 1, "40 + 1n Gantrithor", 45, 3, 50)
                # (Line 409) trg.Shape_Dot(playerID, 1, "40 + 1n Gantrithor", 0, 0);
                trg.Shape_Dot(playerID, 1, "40 + 1n Gantrithor", 0, 0)
                # (Line 410) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                # (Line 411) KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                # (Line 412) }
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID))
                # (Line 413) else if (v.P_LoopMain[playerID] == 9)
            if EUDElseIf()(v.P_LoopMain[playerID] == 9):
                # (Line 414) {
                # (Line 415) trg.Shape_Edge(playerID, 1, "60 + 1n Archon", 22, 3, 75);
                trg.Shape_Edge(playerID, 1, "60 + 1n Archon", 22, 3, 75)
                # (Line 416) trg.Shape_Edge(playerID, 1, "50 + 1n Battlecruiser", 22, 3, 75);
                trg.Shape_Edge(playerID, 1, "50 + 1n Battlecruiser", 22, 3, 75)
                # (Line 417) trg.Shape_Dot(playerID, 1, "50 + 1n Battlecruiser", 0, 0);
                trg.Shape_Dot(playerID, 1, "50 + 1n Battlecruiser", 0, 0)
                # (Line 418) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                # (Line 420) Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, "Anywhere");
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                # (Line 421) }
                DoActions(Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, "Anywhere"))
                # (Line 422) else if (v.P_LoopMain[playerID] == 11)
            if EUDElseIf()(v.P_LoopMain[playerID] == 11):
                # (Line 423) {
                # (Line 424) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
                # (Line 425) }
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                # (Line 426) else if (v.P_LoopMain[playerID] == 12)
            if EUDElseIf()(v.P_LoopMain[playerID] == 12):
                # (Line 427) {
                # (Line 428) trg.Shape_Edge(playerID, 1, "Protoss Dark Archon", 22, 3, 75);
                trg.Shape_Edge(playerID, 1, "Protoss Dark Archon", 22, 3, 75)
                # (Line 429) trg.Shape_Edge(playerID, 1, "40 + 1n Gantrithor", 22, 3, 75);
                trg.Shape_Edge(playerID, 1, "40 + 1n Gantrithor", 22, 3, 75)
                # (Line 430) trg.Shape_Dot(playerID, 1, "40 + 1n Gantrithor", 0, 0);
                trg.Shape_Dot(playerID, 1, "40 + 1n Gantrithor", 0, 0)
                # (Line 431) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                # (Line 432) KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                # (Line 433) }
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID))
                # (Line 434) else if (v.P_LoopMain[playerID] == 13)
            if EUDElseIf()(v.P_LoopMain[playerID] == 13):
                # (Line 435) {
                # (Line 436) trg.Shape_Edge(playerID, 1, "60 + 1n Archon", 45, 3, 100);
                trg.Shape_Edge(playerID, 1, "60 + 1n Archon", 45, 3, 100)
                # (Line 437) trg.Shape_Edge(playerID, 1, "50 + 1n Battlecruiser", 45, 3, 100);
                trg.Shape_Edge(playerID, 1, "50 + 1n Battlecruiser", 45, 3, 100)
                # (Line 438) trg.Shape_Dot(playerID, 1, "50 + 1n Battlecruiser", 0, 0);
                trg.Shape_Dot(playerID, 1, "50 + 1n Battlecruiser", 0, 0)
                # (Line 439) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                # (Line 441) Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, "Anywhere");
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                # (Line 442) }
                DoActions(Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, "Anywhere"))
                # (Line 443) else if (v.P_LoopMain[playerID] == 15)
            if EUDElseIf()(v.P_LoopMain[playerID] == 15):
                # (Line 444) {
                # (Line 445) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
                # (Line 446) }
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                # (Line 448) trg.Main_Wait(80);
            EUDEndIf()
            trg.Main_Wait(80)
            # (Line 450) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 452) if (v.P_LoopMain[playerID] == 20)
            if EUDIf()(v.P_LoopMain[playerID] == 20):
                # (Line 453) {
                # (Line 454) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 455) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 456) }
                # (Line 457) }
            EUDEndIf()
            # (Line 459) else if (v.P_CountMain[playerID] == 7)
        if EUDElseIf()(v.P_CountMain[playerID] == 7):
            # (Line 460) {
            # (Line 461) KillUnitAt(All, "60 + 1n Siege", "Anywhere", playerID);
            # (Line 462) KillUnitAt(All, "60 + 1n Dragoon", "Anywhere", playerID);
            DoActions(KillUnitAt(All, "60 + 1n Siege", "Anywhere", playerID))
            # (Line 463) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
            DoActions(KillUnitAt(All, "60 + 1n Dragoon", "Anywhere", playerID))
            # (Line 465) trg.SkillEnd();
            DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
            trg.SkillEnd()
            # (Line 466) }
            # (Line 468) }
        EUDEndIf()
        # (Line 469) }
    EUDEndIf()
