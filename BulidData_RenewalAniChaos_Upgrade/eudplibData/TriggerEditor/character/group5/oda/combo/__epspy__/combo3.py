## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import variable as v;
import variable as v
# (Line 2) import func.trig as trg;
from func import trig as trg
# (Line 3) import func.trigepic as epic;
from func import trigepic as epic
# (Line 4) import func.sound as s;
from func import sound as s
# (Line 6) function main(playerID)
# (Line 7) {
@EUDFunc
def f_main(playerID):
    # (Line 8) MoveUnit(All, "50 + 1n Tank", playerID, "Anywhere", "[Skill]HoldPosition");
    # (Line 9) MoveUnit(All, "60 + 1n Dragoon", playerID, "Anywhere", "[Skill]HoldPosition");
    DoActions(MoveUnit(All, "50 + 1n Tank", playerID, "Anywhere", "[Skill]HoldPosition"))
    # (Line 10) MoveUnit(All, "40 + 1n Drone", playerID, "Anywhere", "[Skill]HoldPosition");
    DoActions(MoveUnit(All, "60 + 1n Dragoon", playerID, "Anywhere", "[Skill]HoldPosition"))
    # (Line 12) trg.Debuff_BanReturn();
    DoActions(MoveUnit(All, "40 + 1n Drone", playerID, "Anywhere", "[Skill]HoldPosition"))
    trg.Debuff_BanReturn()
    # (Line 13) trg.Debuff_Stop();
    trg.Debuff_Stop()
    # (Line 15) if (v.P_WaitMain[playerID] == 0)
    if EUDIf()(v.P_WaitMain[playerID] == 0):
        # (Line 16) {
        # (Line 17) if (v.P_CountMain[playerID] == 0)
        if EUDIf()(v.P_CountMain[playerID] == 0):
            # (Line 18) {
            # (Line 19) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 20) {
                # (Line 21) trg.Table_Sin(playerID, 22, 100);
                trg.Table_Sin(playerID, 22, 100)
                # (Line 22) trg.Table_Cos(playerID, 22, 100);
                trg.Table_Cos(playerID, 22, 100)
                # (Line 24) trg.Shape_Square(playerID, 1, "50 + 1n Tank", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", v.P_AngleCos[playerID], v.P_AngleSin[playerID])
                # (Line 25) trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
                trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", v.P_AngleCos[playerID], v.P_AngleSin[playerID])
                # (Line 26) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                # (Line 27) KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                # (Line 29) trg.Table_Sin(playerID, 67, 150);
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID))
                trg.Table_Sin(playerID, 67, 150)
                # (Line 30) trg.Table_Cos(playerID, 67, 150);
                trg.Table_Cos(playerID, 67, 150)
                # (Line 32) trg.Shape_Square(playerID, 1, "60 + 1n Archon", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", v.P_AngleCos[playerID], v.P_AngleSin[playerID])
                # (Line 33) trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", v.P_AngleCos[playerID], v.P_AngleSin[playerID])
                # (Line 34) trg.Shape_Dot(playerID, 1, "50 + 1n Battlecruiser", 0, 0);
                trg.Shape_Dot(playerID, 1, "50 + 1n Battlecruiser", 0, 0)
                # (Line 35) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                # (Line 37) Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, "Anywhere");
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                # (Line 38) }
                DoActions(Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, "Anywhere"))
                # (Line 39) else if (v.P_LoopMain[playerID] == 1)
            if EUDElseIf()(v.P_LoopMain[playerID] == 1):
                # (Line 40) {
                # (Line 41) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
                # (Line 42) }
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                # (Line 43) else if (v.P_LoopMain[playerID] == 2)
            if EUDElseIf()(v.P_LoopMain[playerID] == 2):
                # (Line 44) {
                # (Line 45) trg.Table_Sin(playerID, 67, 100);
                trg.Table_Sin(playerID, 67, 100)
                # (Line 46) trg.Table_Cos(playerID, 67, 100);
                trg.Table_Cos(playerID, 67, 100)
                # (Line 48) trg.Shape_Square(playerID, 1, "50 + 1n Tank", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", v.P_AngleCos[playerID], v.P_AngleSin[playerID])
                # (Line 49) trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
                trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", v.P_AngleCos[playerID], v.P_AngleSin[playerID])
                # (Line 50) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                # (Line 51) KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                # (Line 53) trg.Table_Sin(playerID, 22, 150);
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID))
                trg.Table_Sin(playerID, 22, 150)
                # (Line 54) trg.Table_Cos(playerID, 22, 150);
                trg.Table_Cos(playerID, 22, 150)
                # (Line 56) trg.Shape_Square(playerID, 1, "60 + 1n Archon", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", v.P_AngleCos[playerID], v.P_AngleSin[playerID])
                # (Line 57) trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", v.P_AngleCos[playerID], v.P_AngleSin[playerID])
                # (Line 58) trg.Shape_Dot(playerID, 1, "50 + 1n Battlecruiser", 0, 0);
                trg.Shape_Dot(playerID, 1, "50 + 1n Battlecruiser", 0, 0)
                # (Line 59) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                # (Line 61) Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, "Anywhere");
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                # (Line 62) }
                DoActions(Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, "Anywhere"))
                # (Line 63) else if (v.P_LoopMain[playerID] == 3)
            if EUDElseIf()(v.P_LoopMain[playerID] == 3):
                # (Line 64) {
                # (Line 65) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
                # (Line 66) }
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                # (Line 68) trg.Main_Wait(160);
            EUDEndIf()
            trg.Main_Wait(160)
            # (Line 70) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 72) if (v.P_LoopMain[playerID] == 8)
            if EUDIf()(v.P_LoopMain[playerID] == 8):
                # (Line 73) {
                # (Line 74) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 75) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 76) }
                # (Line 77) }
            EUDEndIf()
            # (Line 78) else if (v.P_CountMain[playerID] == 1)
        if EUDElseIf()(v.P_CountMain[playerID] == 1):
            # (Line 79) {
            # (Line 80) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 81) {
                # (Line 82) trg.Shape_Square(playerID, 1, "60 + 1n Siege", 150, 150);
                trg.Shape_Square(playerID, 1, "60 + 1n Siege", 150, 150)
                # (Line 83) trg.Shape_Square(playerID, 1, "60 + 1n Siege", 75, 150);
                trg.Shape_Square(playerID, 1, "60 + 1n Siege", 75, 150)
                # (Line 84) trg.Shape_Square(playerID, 1, "60 + 1n Siege", 150, 75);
                trg.Shape_Square(playerID, 1, "60 + 1n Siege", 150, 75)
                # (Line 85) }
                # (Line 86) else if (v.P_LoopMain[playerID] == 1)
            if EUDElseIf()(v.P_LoopMain[playerID] == 1):
                # (Line 87) {
                # (Line 88) trg.Shape_Edge(playerID, 1, "60 + 1n Dragoon", 45, 3, 75);
                trg.Shape_Edge(playerID, 1, "60 + 1n Dragoon", 45, 3, 75)
                # (Line 90) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 91) MoveUnit(All, "60 + 1n Dragoon", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 92) Order("60 + 1n Dragoon", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveUnit(All, "60 + 1n Dragoon", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                # (Line 93) }
                DoActions(Order("60 + 1n Dragoon", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 95) if (v.P_LoopMain[playerID] < 8 && v.P_LoopMain[playerID] % 2 == 0)
            EUDEndIf()
            if EUDIf()(EUDSCAnd()(v.P_LoopMain[playerID] >= 8, neg=True)(v.P_LoopMain[playerID] % 2 == 0)()):
                # (Line 96) {
                # (Line 97) var x = 150;
                x = EUDVariable()
                x << (150)
                # (Line 98) var y = 50 * (v.P_LoopMain[playerID] / 2);
                y = EUDVariable()
                y << (50 * (v.P_LoopMain[playerID] // 2))
                # (Line 100) var i = 0;
                i = EUDVariable()
                i << (0)
                # (Line 102) for (; i < 4; i++)
                if EUDWhile()(i >= 4, neg=True):
                    def _t13():
                        i.__iadd__(1)
                    # (Line 103) {
                    # (Line 104) trg.Shape_Square(playerID, 1, "Protoss Dark Archon", x - 50 * i, y - x);
                    trg.Shape_Square(playerID, 1, "Protoss Dark Archon", x - 50 * i, y - x)
                    # (Line 105) trg.Shape_Square(playerID, 1, "40 + 1n Mojo", x - 50 * i, y);
                    trg.Shape_Square(playerID, 1, "40 + 1n Mojo", x - 50 * i, y)
                    # (Line 106) }
                    # (Line 108) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                    EUDSetContinuePoint()
                    _t13()
                EUDEndWhile()
                # (Line 109) KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                # (Line 110) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID))
                # (Line 111) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                # (Line 114) }
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                # (Line 116) if (v.P_LoopMain[playerID] == 9)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] == 9):
                # (Line 117) {
                # (Line 118) trg.Shape_Edge(playerID, 1, "60 + 1n Danimoth", 45, 5, 100);
                trg.Shape_Edge(playerID, 1, "60 + 1n Danimoth", 45, 5, 100)
                # (Line 120) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 121) Order("60 + 1n Danimoth", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 122) }
                DoActions(Order("60 + 1n Danimoth", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 123) else if (v.P_LoopMain[playerID] == 13)
            if EUDElseIf()(v.P_LoopMain[playerID] == 13):
                # (Line 124) {
                # (Line 125) KillUnitAt(All, "60 + 1n Danimoth", "Anywhere", playerID);
                # (Line 126) }
                DoActions(KillUnitAt(All, "60 + 1n Danimoth", "Anywhere", playerID))
                # (Line 128) trg.Main_Wait(80);
            EUDEndIf()
            trg.Main_Wait(80)
            # (Line 130) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 132) if (v.P_LoopMain[playerID] == 22)
            if EUDIf()(v.P_LoopMain[playerID] == 22):
                # (Line 133) {
                # (Line 134) KillUnitAt(All, "60 + 1n Dragoon", "Anywhere", playerID);
                # (Line 136) v.P_CountMain[playerID] += 1;
                DoActions(KillUnitAt(All, "60 + 1n Dragoon", "Anywhere", playerID))
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 137) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 138) }
                # (Line 139) }
            EUDEndIf()
            # (Line 140) else if (v.P_CountMain[playerID] == 2)
        if EUDElseIf()(v.P_CountMain[playerID] == 2):
            # (Line 141) {
            # (Line 142) if (v.P_LoopMain[playerID] == 1)
            if EUDIf()(v.P_LoopMain[playerID] == 1):
                # (Line 143) {
                # (Line 144) trg.Shape_Edge(playerID, 1, "50 + 1n Tank", 45, 3, 75);
                trg.Shape_Edge(playerID, 1, "50 + 1n Tank", 45, 3, 75)
                # (Line 146) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 147) MoveUnit(All, "50 + 1n Tank", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 148) Order("50 + 1n Tank", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveUnit(All, "50 + 1n Tank", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                # (Line 149) }
                DoActions(Order("50 + 1n Tank", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 151) if (v.P_LoopMain[playerID] < 8 && v.P_LoopMain[playerID] % 2 == 0)
            EUDEndIf()
            if EUDIf()(EUDSCAnd()(v.P_LoopMain[playerID] >= 8, neg=True)(v.P_LoopMain[playerID] % 2 == 0)()):
                # (Line 152) {
                # (Line 153) var x = 150;
                x = EUDVariable()
                x << (150)
                # (Line 154) var y = - 50 * (v.P_LoopMain[playerID] / 2);
                y = EUDVariable()
                y << (-50 * (v.P_LoopMain[playerID] // 2))
                # (Line 156) var i = 0;
                i = EUDVariable()
                i << (0)
                # (Line 158) for (; i < 4; i++)
                if EUDWhile()(i >= 4, neg=True):
                    def _t21():
                        i.__iadd__(1)
                    # (Line 159) {
                    # (Line 160) trg.Shape_Square(playerID, 1, "40 + 1n Wraith", x - 50 * i, y);
                    trg.Shape_Square(playerID, 1, "40 + 1n Wraith", x - 50 * i, y)
                    # (Line 161) trg.Shape_Square(playerID, 1, "60 + 1n Archon", x - 50 * i, y + x);
                    trg.Shape_Square(playerID, 1, "60 + 1n Archon", x - 50 * i, y + x)
                    # (Line 162) }
                    # (Line 164) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                    EUDSetContinuePoint()
                    _t21()
                EUDEndWhile()
                # (Line 165) KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                # (Line 166) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID))
                # (Line 167) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                # (Line 169) }
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                # (Line 171) if (v.P_LoopMain[playerID] == 9)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] == 9):
                # (Line 172) {
                # (Line 174) }
                # (Line 175) else if (v.P_LoopMain[playerID] == 11)
                pass
            if EUDElseIf()(v.P_LoopMain[playerID] == 11):
                # (Line 176) {
                # (Line 177) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 178) }
                DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                # (Line 179) else if (v.P_LoopMain[playerID] == 12)
            if EUDElseIf()(v.P_LoopMain[playerID] == 12):
                # (Line 180) {
                # (Line 181) trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 0, 75);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 0, 75)
                # (Line 182) trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 0, 150);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 0, 150)
                # (Line 183) trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 225, 225);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 225, 225)
                # (Line 185) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 186) Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 187) }
                DoActions(Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 188) else if (v.P_LoopMain[playerID] == 16)
            if EUDElseIf()(v.P_LoopMain[playerID] == 16):
                # (Line 189) {
                # (Line 190) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
                # (Line 191) }
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                # (Line 193) trg.Main_Wait(80);
            EUDEndIf()
            trg.Main_Wait(80)
            # (Line 195) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 197) if (v.P_LoopMain[playerID] == 35)
            if EUDIf()(v.P_LoopMain[playerID] == 35):
                # (Line 198) {
                # (Line 199) s.CharacterVoice(16);
                s.CharacterVoice(16)
                # (Line 201) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                # (Line 203) v.P_CountMain[playerID] += 1;
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 204) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 205) }
                # (Line 206) }
            EUDEndIf()
            # (Line 207) else if (v.P_CountMain[playerID] == 3)
        if EUDElseIf()(v.P_CountMain[playerID] == 3):
            # (Line 208) {
            # (Line 209) if (v.P_LoopMain[playerID] < 8 && v.P_LoopMain[playerID] % 2 == 0)
            if EUDIf()(EUDSCAnd()(v.P_LoopMain[playerID] >= 8, neg=True)(v.P_LoopMain[playerID] % 2 == 0)()):
                # (Line 210) {
                # (Line 211) trg.Shape_Square(playerID, 8, "Bengalaas (Jungle)", 160, 0);
                trg.Shape_Square(playerID, 8, "Bengalaas (Jungle)", 160, 0)
                # (Line 212) trg.Shape_Square(playerID, 1, "Target", 160, 0);
                trg.Shape_Square(playerID, 1, "Target", 160, 0)
                # (Line 213) trg.Shape_Dot(playerID, 1, "Target", 0, 0);
                trg.Shape_Dot(playerID, 1, "Target", 0, 0)
                # (Line 215) KillUnitAt(All, "Bengalaas (Jungle)", "Anywhere", playerID);
                # (Line 216) KillUnitAt(All, "Target", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "Bengalaas (Jungle)", "Anywhere", playerID))
                # (Line 218) RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "Target", "Anywhere", playerID))
                # (Line 220) trg.Shape_Square(playerID, 1, "40 + 1n Wraith", 40 + 40 * (v.P_LoopMain[playerID] / 2), 0);
                DoActions(RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                trg.Shape_Square(playerID, 1, "40 + 1n Wraith", 40 + 40 * (v.P_LoopMain[playerID] // 2), 0)
                # (Line 221) trg.Shape_Square(playerID, 1, "40 + 1n Zealot", 40 + 40 * (v.P_LoopMain[playerID] / 2), 0);
                trg.Shape_Square(playerID, 1, "40 + 1n Zealot", 40 + 40 * (v.P_LoopMain[playerID] // 2), 0)
                # (Line 223) epic.Shape_Square(playerID, 1, "Zerg Defiler", 40 + 40 * (v.P_LoopMain[playerID] / 2), 0, 0);
                epic.Shape_Square(playerID, 1, "Zerg Defiler", 40 + 40 * (v.P_LoopMain[playerID] // 2), 0, 0)
                # (Line 225) KillUnitAt(All, "40 + 1n Zealot", "Anywhere", playerID);
                # (Line 227) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "40 + 1n Zealot", "Anywhere", playerID))
                # (Line 228) Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 229) }
                DoActions(Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 230) else if (v.P_LoopMain[playerID] == 8)
            if EUDElseIf()(v.P_LoopMain[playerID] == 8):
                # (Line 231) {
                # (Line 232) RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 234) trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 160, 0);
                DoActions(RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 160, 0)
                # (Line 235) trg.Shape_Square(playerID, 1, "Target", 160, 0);
                trg.Shape_Square(playerID, 1, "Target", 160, 0)
                # (Line 236) trg.Shape_Dot(playerID, 1, "Target", 0, 0);
                trg.Shape_Dot(playerID, 1, "Target", 0, 0)
                # (Line 237) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                # (Line 238) KillUnitAt(All, "Target", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                # (Line 239) }
                DoActions(KillUnitAt(All, "Target", "Anywhere", playerID))
                # (Line 240) else if (v.P_LoopMain[playerID] == 9)
            if EUDElseIf()(v.P_LoopMain[playerID] == 9):
                # (Line 241) {
                # (Line 242) trg.Shape_Square(playerID, 1, "60 + 1n Archon", 160, 0);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", 160, 0)
                # (Line 243) trg.Shape_Square(playerID, 1, "60 + 1n Danimoth", 160, 0);
                trg.Shape_Square(playerID, 1, "60 + 1n Danimoth", 160, 0)
                # (Line 244) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                # (Line 246) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                # (Line 247) Order("60 + 1n Danimoth", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 248) }
                DoActions(Order("60 + 1n Danimoth", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 250) trg.Main_Wait(80);
            EUDEndIf()
            trg.Main_Wait(80)
            # (Line 252) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 254) if (v.P_LoopMain[playerID] == 10)
            if EUDIf()(v.P_LoopMain[playerID] == 10):
                # (Line 255) {
                # (Line 257) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 258) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 259) }
                # (Line 260) }
            EUDEndIf()
            # (Line 261) else if (v.P_CountMain[playerID] == 4)
        if EUDElseIf()(v.P_CountMain[playerID] == 4):
            # (Line 262) {
            # (Line 263) if (v.P_LoopMain[playerID] < 8 && v.P_LoopMain[playerID] % 2 == 0)
            if EUDIf()(EUDSCAnd()(v.P_LoopMain[playerID] >= 8, neg=True)(v.P_LoopMain[playerID] % 2 == 0)()):
                # (Line 264) {
                # (Line 265) trg.Shape_Square(playerID, 8, "Bengalaas (Jungle)", 120, 120);
                trg.Shape_Square(playerID, 8, "Bengalaas (Jungle)", 120, 120)
                # (Line 266) trg.Shape_Square(playerID, 1, "Target", 120, 120);
                trg.Shape_Square(playerID, 1, "Target", 120, 120)
                # (Line 267) trg.Shape_Dot(playerID, 1, "Target", 0, 0);
                trg.Shape_Dot(playerID, 1, "Target", 0, 0)
                # (Line 269) KillUnitAt(All, "Bengalaas (Jungle)", "Anywhere", playerID);
                # (Line 270) KillUnitAt(All, "Target", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "Bengalaas (Jungle)", "Anywhere", playerID))
                # (Line 272) RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "Target", "Anywhere", playerID))
                # (Line 274) trg.Shape_Square(playerID, 1, "40 + 1n Wraith", 30 + 30 * (v.P_LoopMain[playerID] / 2), 30 + 30 * (v.P_LoopMain[playerID] / 2));
                DoActions(RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                trg.Shape_Square(playerID, 1, "40 + 1n Wraith", 30 + 30 * (v.P_LoopMain[playerID] // 2), 30 + 30 * (v.P_LoopMain[playerID] // 2))
                # (Line 275) trg.Shape_Square(playerID, 1, "40 + 1n Zealot", 30 + 30 * (v.P_LoopMain[playerID] / 2), 30 + 30 * (v.P_LoopMain[playerID] / 2));
                trg.Shape_Square(playerID, 1, "40 + 1n Zealot", 30 + 30 * (v.P_LoopMain[playerID] // 2), 30 + 30 * (v.P_LoopMain[playerID] // 2))
                # (Line 277) epic.Shape_Square(playerID, 1, "Zerg Defiler", 30 + 30 * (v.P_LoopMain[playerID] / 2), 30 + 30 * (v.P_LoopMain[playerID] / 2), 0);
                epic.Shape_Square(playerID, 1, "Zerg Defiler", 30 + 30 * (v.P_LoopMain[playerID] // 2), 30 + 30 * (v.P_LoopMain[playerID] // 2), 0)
                # (Line 279) KillUnitAt(All, "40 + 1n Zealot", "Anywhere", playerID);
                # (Line 281) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "40 + 1n Zealot", "Anywhere", playerID))
                # (Line 282) Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 283) }
                DoActions(Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 284) else if (v.P_LoopMain[playerID] == 8)
            if EUDElseIf()(v.P_LoopMain[playerID] == 8):
                # (Line 285) {
                # (Line 286) RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
                # (Line 288) trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 120, 120);
                DoActions(RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 120, 120)
                # (Line 289) trg.Shape_Square(playerID, 1, "Target", 120, 120);
                trg.Shape_Square(playerID, 1, "Target", 120, 120)
                # (Line 290) trg.Shape_Dot(playerID, 1, "Target", 0, 0);
                trg.Shape_Dot(playerID, 1, "Target", 0, 0)
                # (Line 291) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                # (Line 292) KillUnitAt(All, "Target", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                # (Line 293) }
                DoActions(KillUnitAt(All, "Target", "Anywhere", playerID))
                # (Line 294) else if (v.P_LoopMain[playerID] == 9)
            if EUDElseIf()(v.P_LoopMain[playerID] == 9):
                # (Line 295) {
                # (Line 296) trg.Shape_Square(playerID, 1, "60 + 1n Archon", 120, 120);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", 120, 120)
                # (Line 297) trg.Shape_Square(playerID, 1, "60 + 1n Danimoth", 120, 120);
                trg.Shape_Square(playerID, 1, "60 + 1n Danimoth", 120, 120)
                # (Line 298) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                # (Line 300) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                # (Line 301) Order("60 + 1n Danimoth", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 302) }
                DoActions(Order("60 + 1n Danimoth", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 304) trg.Main_Wait(80);
            EUDEndIf()
            trg.Main_Wait(80)
            # (Line 306) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 308) if (v.P_LoopMain[playerID] == 10)
            if EUDIf()(v.P_LoopMain[playerID] == 10):
                # (Line 309) {
                # (Line 310) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 311) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 312) }
                # (Line 313) }
            EUDEndIf()
            # (Line 314) else if (v.P_CountMain[playerID] == 5)
        if EUDElseIf()(v.P_CountMain[playerID] == 5):
            # (Line 315) {
            # (Line 316) if (v.P_LoopMain[playerID] < 8)
            if EUDIf()(v.P_LoopMain[playerID] >= 8, neg=True):
                # (Line 317) {
                # (Line 318) var i = 0;
                i = EUDVariable()
                i << (0)
                # (Line 320) for (; i < 4; i++)
                if EUDWhile()(i >= 4, neg=True):
                    def _t40():
                        i.__iadd__(1)
                    # (Line 321) {
                    # (Line 322) CreateUnit(4, "60 + 3n Siege", dwrand() % 8 + 33, playerID);
                    # (Line 323) CreateUnit(1, "40 + 1n Drone", dwrand() % 8 + 33, playerID);
                    DoActions(CreateUnit(4, "60 + 3n Siege", f_dwrand() % 8 + 33, playerID))
                    # (Line 324) SetInvincibility(Enable, "Any unit", playerID, "[Skill]Unit_Wait_ALL");
                    DoActions(CreateUnit(1, "40 + 1n Drone", f_dwrand() % 8 + 33, playerID))
                    # (Line 325) MoveLocation(v.P_LocationID[playerID], "Zerg Defiler", playerID, "Anywhere");
                    DoActions(SetInvincibility(Enable, "Any unit", playerID, "[Skill]Unit_Wait_ALL"))
                    # (Line 326) RemoveUnitAt(1, "Zerg Defiler", "Anywhere", playerID);
                    DoActions(MoveLocation(v.P_LocationID[playerID], "Zerg Defiler", playerID, "Anywhere"))
                    # (Line 327) MoveUnit(All, "40 + 1n Drone", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                    DoActions(RemoveUnitAt(1, "Zerg Defiler", "Anywhere", playerID))
                    # (Line 328) MoveUnit(All, "60 + 3n Siege", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                    DoActions(MoveUnit(All, "40 + 1n Drone", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                    # (Line 330) }
                    DoActions(MoveUnit(All, "60 + 3n Siege", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                    # (Line 331) KillUnitAt(All, "60 + 3n Siege", "Anywhere", playerID);
                    EUDSetContinuePoint()
                    _t40()
                EUDEndWhile()
                # (Line 333) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "60 + 3n Siege", "Anywhere", playerID))
                # (Line 334) MoveUnit(All, "40 + 1n Drone", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 335) Order("40 + 1n Drone", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveUnit(All, "40 + 1n Drone", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                # (Line 336) }
                DoActions(Order("40 + 1n Drone", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 338) trg.Main_Wait(80);
            EUDEndIf()
            trg.Main_Wait(80)
            # (Line 340) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 342) if (v.P_LoopMain[playerID] == 31)
            if EUDIf()(v.P_LoopMain[playerID] == 31):
                # (Line 343) {
                # (Line 344) KillUnitAt(All, "40 + 1n Drone", "Anywhere", playerID);
                # (Line 345) s.CharacterVoice(17);
                DoActions(KillUnitAt(All, "40 + 1n Drone", "Anywhere", playerID))
                s.CharacterVoice(17)
                # (Line 346) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 347) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 348) }
                # (Line 349) }
            EUDEndIf()
            # (Line 350) else if (v.P_CountMain[playerID] == 6)
        if EUDElseIf()(v.P_CountMain[playerID] == 6):
            # (Line 351) {
            # (Line 352) if (v.P_LoopMain[playerID] < 6)
            if EUDIf()(v.P_LoopMain[playerID] >= 6, neg=True):
                # (Line 353) {
                # (Line 354) trg.Shape_Double(playerID, 1, "Protoss Dark Archon", 150 - 50 * v.P_LoopMain[playerID], 150);
                trg.Shape_Double(playerID, 1, "Protoss Dark Archon", 150 - 50 * v.P_LoopMain[playerID], 150)
                # (Line 355) trg.Shape_Double(playerID, 1, "60 + 1n Archon", -150, 150 - 50 * v.P_LoopMain[playerID]);
                trg.Shape_Double(playerID, 1, "60 + 1n Archon", -150, 150 - 50 * v.P_LoopMain[playerID])
                # (Line 356) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                # (Line 357) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                # (Line 358) }
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                # (Line 361) if (v.P_LoopMain[playerID] == 0)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 362) {
                # (Line 363) KillUnitAt(All, "60 + 1n Danimoth", "Anywhere", playerID);
                # (Line 365) trg.Shape_Edge(playerID, 1, "60 + 1n Dragoon", 45, 3, 75);
                DoActions(KillUnitAt(All, "60 + 1n Danimoth", "Anywhere", playerID))
                trg.Shape_Edge(playerID, 1, "60 + 1n Dragoon", 45, 3, 75)
                # (Line 366) trg.Shape_Edge(playerID, 1, "40 + 1n Mojo", 45, 3, 75);
                trg.Shape_Edge(playerID, 1, "40 + 1n Mojo", 45, 3, 75)
                # (Line 367) KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID);
                # (Line 369) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID))
                # (Line 370) MoveUnit(All, "60 + 1n Dragoon", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 371) Order("60 + 1n Dragoon", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveUnit(All, "60 + 1n Dragoon", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                # (Line 372) }
                DoActions(Order("60 + 1n Dragoon", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 373) else if (v.P_LoopMain[playerID] == 2)
            if EUDElseIf()(v.P_LoopMain[playerID] == 2):
                # (Line 374) {
                # (Line 375) trg.Shape_Edge(playerID, 1, "50 + 1n Tank", 45, 5, 150);
                trg.Shape_Edge(playerID, 1, "50 + 1n Tank", 45, 5, 150)
                # (Line 376) trg.Shape_Edge(playerID, 1, "40 + 1n Mojo", 45, 5, 150);
                trg.Shape_Edge(playerID, 1, "40 + 1n Mojo", 45, 5, 150)
                # (Line 377) KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID);
                # (Line 379) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID))
                # (Line 380) MoveUnit(All, "50 + 1n Tank", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 381) Order("50 + 1n Tank", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveUnit(All, "50 + 1n Tank", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                # (Line 382) }
                DoActions(Order("50 + 1n Tank", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 383) else if (v.P_LoopMain[playerID] == 4)
            if EUDElseIf()(v.P_LoopMain[playerID] == 4):
                # (Line 384) {
                # (Line 385) trg.Shape_Edge(playerID, 1, "Protoss Dark Archon", 22, 3, 75);
                trg.Shape_Edge(playerID, 1, "Protoss Dark Archon", 22, 3, 75)
                # (Line 386) trg.Shape_Edge(playerID, 1, "40 + 1n Gantrithor", 22, 3, 75);
                trg.Shape_Edge(playerID, 1, "40 + 1n Gantrithor", 22, 3, 75)
                # (Line 387) trg.Shape_Dot(playerID, 1, "40 + 1n Gantrithor", 0, 0);
                trg.Shape_Dot(playerID, 1, "40 + 1n Gantrithor", 0, 0)
                # (Line 388) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                # (Line 389) KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                # (Line 390) }
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID))
                # (Line 391) else if (v.P_LoopMain[playerID] == 5)
            if EUDElseIf()(v.P_LoopMain[playerID] == 5):
                # (Line 392) {
                # (Line 393) trg.Shape_Edge(playerID, 1, "60 + 1n Archon", 45, 3, 100);
                trg.Shape_Edge(playerID, 1, "60 + 1n Archon", 45, 3, 100)
                # (Line 394) trg.Shape_Edge(playerID, 1, "50 + 1n Battlecruiser", 45, 3, 100);
                trg.Shape_Edge(playerID, 1, "50 + 1n Battlecruiser", 45, 3, 100)
                # (Line 395) trg.Shape_Dot(playerID, 1, "50 + 1n Battlecruiser", 0, 0);
                trg.Shape_Dot(playerID, 1, "50 + 1n Battlecruiser", 0, 0)
                # (Line 396) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                # (Line 398) Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, "Anywhere");
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                # (Line 399) }
                DoActions(Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, "Anywhere"))
                # (Line 400) else if (v.P_LoopMain[playerID] == 7)
            if EUDElseIf()(v.P_LoopMain[playerID] == 7):
                # (Line 401) {
                # (Line 402) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
                # (Line 403) }
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                # (Line 404) else if (v.P_LoopMain[playerID] == 8)
            if EUDElseIf()(v.P_LoopMain[playerID] == 8):
                # (Line 405) {
                # (Line 406) trg.Shape_Edge(playerID, 1, "Protoss Dark Archon", 45, 3, 50);
                trg.Shape_Edge(playerID, 1, "Protoss Dark Archon", 45, 3, 50)
                # (Line 407) trg.Shape_Edge(playerID, 1, "40 + 1n Gantrithor", 45, 3, 50);
                trg.Shape_Edge(playerID, 1, "40 + 1n Gantrithor", 45, 3, 50)
                # (Line 408) trg.Shape_Dot(playerID, 1, "40 + 1n Gantrithor", 0, 0);
                trg.Shape_Dot(playerID, 1, "40 + 1n Gantrithor", 0, 0)
                # (Line 409) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                # (Line 410) KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                # (Line 411) }
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID))
                # (Line 412) else if (v.P_LoopMain[playerID] == 9)
            if EUDElseIf()(v.P_LoopMain[playerID] == 9):
                # (Line 413) {
                # (Line 414) trg.Shape_Edge(playerID, 1, "60 + 1n Archon", 22, 3, 75);
                trg.Shape_Edge(playerID, 1, "60 + 1n Archon", 22, 3, 75)
                # (Line 415) trg.Shape_Edge(playerID, 1, "50 + 1n Battlecruiser", 22, 3, 75);
                trg.Shape_Edge(playerID, 1, "50 + 1n Battlecruiser", 22, 3, 75)
                # (Line 416) trg.Shape_Dot(playerID, 1, "50 + 1n Battlecruiser", 0, 0);
                trg.Shape_Dot(playerID, 1, "50 + 1n Battlecruiser", 0, 0)
                # (Line 417) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                # (Line 419) Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, "Anywhere");
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                # (Line 420) }
                DoActions(Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, "Anywhere"))
                # (Line 421) else if (v.P_LoopMain[playerID] == 11)
            if EUDElseIf()(v.P_LoopMain[playerID] == 11):
                # (Line 422) {
                # (Line 423) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
                # (Line 424) }
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                # (Line 425) else if (v.P_LoopMain[playerID] == 12)
            if EUDElseIf()(v.P_LoopMain[playerID] == 12):
                # (Line 426) {
                # (Line 427) trg.Shape_Edge(playerID, 1, "Protoss Dark Archon", 22, 3, 75);
                trg.Shape_Edge(playerID, 1, "Protoss Dark Archon", 22, 3, 75)
                # (Line 428) trg.Shape_Edge(playerID, 1, "40 + 1n Gantrithor", 22, 3, 75);
                trg.Shape_Edge(playerID, 1, "40 + 1n Gantrithor", 22, 3, 75)
                # (Line 429) trg.Shape_Dot(playerID, 1, "40 + 1n Gantrithor", 0, 0);
                trg.Shape_Dot(playerID, 1, "40 + 1n Gantrithor", 0, 0)
                # (Line 430) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                # (Line 431) KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                # (Line 432) }
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID))
                # (Line 433) else if (v.P_LoopMain[playerID] == 13)
            if EUDElseIf()(v.P_LoopMain[playerID] == 13):
                # (Line 434) {
                # (Line 435) trg.Shape_Edge(playerID, 1, "60 + 1n Archon", 45, 3, 100);
                trg.Shape_Edge(playerID, 1, "60 + 1n Archon", 45, 3, 100)
                # (Line 436) trg.Shape_Edge(playerID, 1, "50 + 1n Battlecruiser", 45, 3, 100);
                trg.Shape_Edge(playerID, 1, "50 + 1n Battlecruiser", 45, 3, 100)
                # (Line 437) trg.Shape_Dot(playerID, 1, "50 + 1n Battlecruiser", 0, 0);
                trg.Shape_Dot(playerID, 1, "50 + 1n Battlecruiser", 0, 0)
                # (Line 438) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                # (Line 440) Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, "Anywhere");
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                # (Line 441) }
                DoActions(Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, "Anywhere"))
                # (Line 442) else if (v.P_LoopMain[playerID] == 15)
            if EUDElseIf()(v.P_LoopMain[playerID] == 15):
                # (Line 443) {
                # (Line 444) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
                # (Line 445) }
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                # (Line 447) trg.Main_Wait(80);
            EUDEndIf()
            trg.Main_Wait(80)
            # (Line 449) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 451) if (v.P_LoopMain[playerID] == 20)
            if EUDIf()(v.P_LoopMain[playerID] == 20):
                # (Line 452) {
                # (Line 453) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 454) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 455) }
                # (Line 456) }
            EUDEndIf()
            # (Line 458) else if (v.P_CountMain[playerID] == 7)
        if EUDElseIf()(v.P_CountMain[playerID] == 7):
            # (Line 459) {
            # (Line 460) KillUnitAt(All, "60 + 1n Siege", "Anywhere", playerID);
            # (Line 461) KillUnitAt(All, "60 + 1n Dragoon", "Anywhere", playerID);
            DoActions(KillUnitAt(All, "60 + 1n Siege", "Anywhere", playerID))
            # (Line 462) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
            DoActions(KillUnitAt(All, "60 + 1n Dragoon", "Anywhere", playerID))
            # (Line 464) trg.SkillEnd();
            DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
            trg.SkillEnd()
            # (Line 465) }
            # (Line 467) }
        EUDEndIf()
        # (Line 468) }
    EUDEndIf()
