## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import PluginVariables as msqcvar;
import PluginVariables as msqcvar
# (Line 2) import variable as v;
import variable as v
# (Line 3) import func.trig as trg;
from func import trig as trg
# (Line 4) import func.trigepic as epic;
from func import trigepic as epic
# (Line 5) import func.sound as s;
from func import sound as s
# (Line 7) function main(playerID)
# (Line 8) {
@EUDFunc
def f_main(playerID):
    # (Line 9) trg.Debuff_Stop();
    trg.Debuff_Stop()
    # (Line 10) trg.Debuff_BanReturn();
    trg.Debuff_BanReturn()
    # (Line 12) MoveUnit(All, "40 + 1n Goliath", playerID, "Anywhere", "[Skill]HoldPosition");
    # (Line 13) MoveUnit(All, "50 + 1n Tank", playerID, "Anywhere", "[Skill]HoldPosition");
    DoActions(MoveUnit(All, "40 + 1n Goliath", playerID, "Anywhere", "[Skill]HoldPosition"))
    # (Line 15) trg.Buff_ShieldFix(1);
    DoActions(MoveUnit(All, "50 + 1n Tank", playerID, "Anywhere", "[Skill]HoldPosition"))
    trg.Buff_ShieldFix(1)
    # (Line 17) if (v.P_WaitMain[playerID] == 0)
    if EUDIf()(v.P_WaitMain[playerID] == 0):
        # (Line 18) {
        # (Line 19) if (v.P_CountMain[playerID] == 0)
        if EUDIf()(v.P_CountMain[playerID] == 0):
            # (Line 20) {
            # (Line 21) if (v.P_LoopMain[playerID] > 0)
            if EUDIf()(v.P_LoopMain[playerID] <= 0, neg=True):
                # (Line 22) {
                # (Line 23) SetDeaths(playerID, SetTo, 1, " `ShieldRecharge");
                # (Line 25) trg.Shape_Edge(playerID, 1, "60 + 1n High Templar", 45, 3, 75);
                DoActions(SetDeaths(playerID, SetTo, 1, " `ShieldRecharge"))
                trg.Shape_Edge(playerID, 1, "60 + 1n High Templar", 45, 3, 75)
                # (Line 26) }
                # (Line 27) if (v.P_LoopMain[playerID] > 1)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] <= 1, neg=True):
                # (Line 28) {
                # (Line 29) trg.Shape_Edge(playerID, 1, "60 + 1n High Templar", 45, 5, 150);
                trg.Shape_Edge(playerID, 1, "60 + 1n High Templar", 45, 5, 150)
                # (Line 30) }
                # (Line 31) if (v.P_LoopMain[playerID] > 2)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] <= 2, neg=True):
                # (Line 32) {
                # (Line 33) trg.Shape_Edge(playerID, 1, "60 + 1n High Templar", 45, 7, 225);
                trg.Shape_Edge(playerID, 1, "60 + 1n High Templar", 45, 7, 225)
                # (Line 34) }
                # (Line 35) if (v.P_LoopMain[playerID] > 3)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] <= 3, neg=True):
                # (Line 36) {
                # (Line 37) trg.Shape_Edge(playerID, 1, "60 + 1n High Templar", 45, 9, 300);
                trg.Shape_Edge(playerID, 1, "60 + 1n High Templar", 45, 9, 300)
                # (Line 38) }
                # (Line 39) if (v.P_LoopMain[playerID] > 4)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] <= 4, neg=True):
                # (Line 40) {
                # (Line 41) trg.Shape_Edge(playerID, 1, "60 + 1n High Templar", 45, 11, 375);
                trg.Shape_Edge(playerID, 1, "60 + 1n High Templar", 45, 11, 375)
                # (Line 42) }
                # (Line 43) KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID);
            EUDEndIf()
            # (Line 45) trg.Main_Wait(160);
            DoActions(KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID))
            trg.Main_Wait(160)
            # (Line 47) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 49) if (v.P_LoopMain[playerID] == 32)
            if EUDIf()(v.P_LoopMain[playerID] == 32):
                # (Line 50) {
                # (Line 51) s.CharacterVoice(2);
                s.CharacterVoice(2)
                # (Line 53) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 54) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 55) }
                # (Line 56) }
            EUDEndIf()
            # (Line 57) else if (v.P_CountMain[playerID] == 1)
        if EUDElseIf()(v.P_CountMain[playerID] == 1):
            # (Line 58) {
            # (Line 59) if (v.P_LoopMain[playerID] < 1)
            if EUDIf()(v.P_LoopMain[playerID] >= 1, neg=True):
                # (Line 60) {
                # (Line 61) trg.Shape_Edge(playerID, 1, "60 + 1n High Templar", 45, 3, 75);
                trg.Shape_Edge(playerID, 1, "60 + 1n High Templar", 45, 3, 75)
                # (Line 62) }
                # (Line 63) if (v.P_LoopMain[playerID] < 2)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] >= 2, neg=True):
                # (Line 64) {
                # (Line 65) trg.Shape_Edge(playerID, 1, "60 + 1n High Templar", 45, 5, 150);
                trg.Shape_Edge(playerID, 1, "60 + 1n High Templar", 45, 5, 150)
                # (Line 66) }
                # (Line 67) if (v.P_LoopMain[playerID] < 3)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] >= 3, neg=True):
                # (Line 68) {
                # (Line 69) trg.Shape_Edge(playerID, 1, "60 + 1n High Templar", 45, 7, 225);
                trg.Shape_Edge(playerID, 1, "60 + 1n High Templar", 45, 7, 225)
                # (Line 70) }
                # (Line 71) if (v.P_LoopMain[playerID] < 4)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] >= 4, neg=True):
                # (Line 72) {
                # (Line 73) trg.Shape_Edge(playerID, 1, "60 + 1n High Templar", 45, 9, 300);
                trg.Shape_Edge(playerID, 1, "60 + 1n High Templar", 45, 9, 300)
                # (Line 74) }
                # (Line 75) if (v.P_LoopMain[playerID] < 5)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] >= 5, neg=True):
                # (Line 76) {
                # (Line 77) trg.Shape_Edge(playerID, 1, "60 + 1n High Templar", 45, 11, 375);
                trg.Shape_Edge(playerID, 1, "60 + 1n High Templar", 45, 11, 375)
                # (Line 78) }
                # (Line 80) if (v.P_LoopMain[playerID] == 1)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] == 1):
                # (Line 81) {
                # (Line 82) epic.Shape_Edge(playerID, 1, "40 + 1n Lurker", 45, 3, 75, 0);
                epic.Shape_Edge(playerID, 1, "40 + 1n Lurker", 45, 3, 75, 0)
                # (Line 83) }
                # (Line 84) else if (v.P_LoopMain[playerID] == 2)
            if EUDElseIf()(v.P_LoopMain[playerID] == 2):
                # (Line 85) {
                # (Line 86) epic.Shape_Edge(playerID, 1, "40 + 1n Lurker", 45, 5, 150, 0);
                epic.Shape_Edge(playerID, 1, "40 + 1n Lurker", 45, 5, 150, 0)
                # (Line 87) }
                # (Line 88) else if (v.P_LoopMain[playerID] == 3)
            if EUDElseIf()(v.P_LoopMain[playerID] == 3):
                # (Line 89) {
                # (Line 90) epic.Shape_Edge(playerID, 1, "40 + 1n Lurker", 45, 7, 225, 0);
                epic.Shape_Edge(playerID, 1, "40 + 1n Lurker", 45, 7, 225, 0)
                # (Line 91) }
                # (Line 92) else if (v.P_LoopMain[playerID] == 4)
            if EUDElseIf()(v.P_LoopMain[playerID] == 4):
                # (Line 93) {
                # (Line 94) epic.Shape_Edge(playerID, 1, "40 + 1n Lurker", 45, 9, 300, 0);
                epic.Shape_Edge(playerID, 1, "40 + 1n Lurker", 45, 9, 300, 0)
                # (Line 95) }
                # (Line 96) else if (v.P_LoopMain[playerID] == 5)
            if EUDElseIf()(v.P_LoopMain[playerID] == 5):
                # (Line 97) {
                # (Line 98) epic.Shape_Edge(playerID, 1, "40 + 1n Lurker", 45, 11, 375, 0);
                epic.Shape_Edge(playerID, 1, "40 + 1n Lurker", 45, 11, 375, 0)
                # (Line 99) }
                # (Line 101) KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID);
            EUDEndIf()
            # (Line 103) RemoveUnitAt(All, "40 + 1n Lurker", "[Skill]Unit_Wait_ALL", playerID);
            DoActions(KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID))
            # (Line 105) trg.Main_Wait(160);
            DoActions(RemoveUnitAt(All, "40 + 1n Lurker", "[Skill]Unit_Wait_ALL", playerID))
            trg.Main_Wait(160)
            # (Line 107) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 109) if (v.P_LoopMain[playerID] == 14)
            if EUDIf()(v.P_LoopMain[playerID] == 14):
                # (Line 110) {
                # (Line 111) s.CharacterVoice(3);
                s.CharacterVoice(3)
                # (Line 113) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 114) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 115) }
                # (Line 116) }
            EUDEndIf()
            # (Line 117) else if (v.P_CountMain[playerID] == 2)
        if EUDElseIf()(v.P_CountMain[playerID] == 2):
            # (Line 118) {
            # (Line 119) if (v.P_LoopMain[playerID] < 10)
            if EUDIf()(v.P_LoopMain[playerID] >= 10, neg=True):
                # (Line 120) {
                # (Line 121) if (v.P_LoopMain[playerID] < 4)
                if EUDIf()(v.P_LoopMain[playerID] >= 4, neg=True):
                    # (Line 122) trg.Shape_Line(playerID, 1, "60 + 1n High Templar", 90, 11, 75, 75 * 4 - 75 * v.P_LoopMain[playerID]);
                    trg.Shape_Line(playerID, 1, "60 + 1n High Templar", 90, 11, 75, 75 * 4 - 75 * v.P_LoopMain[playerID])
                    # (Line 123) else
                    # (Line 124) trg.Shape_Line(playerID, 1, "60 + 1n High Templar", 270, 11, 75, -75 * 4 + 75 * v.P_LoopMain[playerID]);
                if EUDElse()():
                    trg.Shape_Line(playerID, 1, "60 + 1n High Templar", 270, 11, 75, -75 * 4 + 75 * v.P_LoopMain[playerID])
                    # (Line 125) }
                EUDEndIf()
                # (Line 127) if (v.P_LoopMain[playerID] < 11)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] >= 11, neg=True):
                # (Line 128) {
                # (Line 129) if (v.P_LoopMain[playerID] < 5)
                if EUDIf()(v.P_LoopMain[playerID] >= 5, neg=True):
                    # (Line 130) trg.Shape_Line(playerID, 1, "60 + 1n Siege", 90, 11, 75, 75 * 5 - 75 * v.P_LoopMain[playerID]);
                    trg.Shape_Line(playerID, 1, "60 + 1n Siege", 90, 11, 75, 75 * 5 - 75 * v.P_LoopMain[playerID])
                    # (Line 131) else
                    # (Line 132) trg.Shape_Line(playerID, 1, "60 + 1n Siege", 270, 11, 75, -75 * 5 + 75 * v.P_LoopMain[playerID]);
                if EUDElse()():
                    trg.Shape_Line(playerID, 1, "60 + 1n Siege", 270, 11, 75, -75 * 5 + 75 * v.P_LoopMain[playerID])
                    # (Line 133) }
                EUDEndIf()
                # (Line 135) KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID);
            EUDEndIf()
            # (Line 137) trg.Main_Wait(160);
            DoActions(KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID))
            trg.Main_Wait(160)
            # (Line 139) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 141) if (v.P_LoopMain[playerID] == 14)
            if EUDIf()(v.P_LoopMain[playerID] == 14):
                # (Line 142) {
                # (Line 143) KillUnitAt(All, "40 + 1n Lurker", "Anywhere", playerID);
                # (Line 145) s.CharacterVoice(4);
                DoActions(KillUnitAt(All, "40 + 1n Lurker", "Anywhere", playerID))
                s.CharacterVoice(4)
                # (Line 147) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 148) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 149) }
                # (Line 150) }
            EUDEndIf()
            # (Line 151) else if (v.P_CountMain[playerID] == 3)
        if EUDElseIf()(v.P_CountMain[playerID] == 3):
            # (Line 152) {
            # (Line 153) if (v.P_LoopMain[playerID] < 5)
            if EUDIf()(v.P_LoopMain[playerID] >= 5, neg=True):
                # (Line 154) {
                # (Line 155) trg.Shape_Edge(playerID, 1, "60 + 1n High Templar", 45, 3 + 2 * v.P_LoopMain[playerID], 75 * (v.P_LoopMain[playerID] + 1));
                trg.Shape_Edge(playerID, 1, "60 + 1n High Templar", 45, 3 + 2 * v.P_LoopMain[playerID], 75 * (v.P_LoopMain[playerID] + 1))
                # (Line 156) }
                # (Line 157) KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID);
            EUDEndIf()
            # (Line 159) if (v.P_LoopMain[playerID] < 6 && v.P_LoopMain[playerID] > 0)
            DoActions(KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID))
            if EUDIf()(EUDSCAnd()(v.P_LoopMain[playerID] >= 6, neg=True)(v.P_LoopMain[playerID] <= 0, neg=True)()):
                # (Line 160) {
                # (Line 161) trg.Shape_Edge(playerID, 1, "50 + 1n Tank", 45, 1 + 2 * v.P_LoopMain[playerID], 75 * v.P_LoopMain[playerID]);
                trg.Shape_Edge(playerID, 1, "50 + 1n Tank", 45, 1 + 2 * v.P_LoopMain[playerID], 75 * v.P_LoopMain[playerID])
                # (Line 162) }
                # (Line 164) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
            EUDEndIf()
            # (Line 165) Order("50 + 1n Tank", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
            DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
            # (Line 167) RemoveUnitAt(All, "50 + 1n Tank", "[Skill]Unit_Wait_ALL", playerID);
            DoActions(Order("50 + 1n Tank", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
            # (Line 169) trg.Main_Wait(160);
            DoActions(RemoveUnitAt(All, "50 + 1n Tank", "[Skill]Unit_Wait_ALL", playerID))
            trg.Main_Wait(160)
            # (Line 171) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 173) if (v.P_LoopMain[playerID] == 22)
            if EUDIf()(v.P_LoopMain[playerID] == 22):
                # (Line 174) {
                # (Line 175) s.CharacterVoice(5);
                s.CharacterVoice(5)
                # (Line 177) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 178) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 179) }
                # (Line 180) }
            EUDEndIf()
            # (Line 181) else if (v.P_CountMain[playerID] == 4)
        if EUDElseIf()(v.P_CountMain[playerID] == 4):
            # (Line 182) {
            # (Line 183) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 184) {
                # (Line 185) trg.Shape_Edge(playerID, 1, "50 + 1n Battlecruiser", 45, 3, 75);
                trg.Shape_Edge(playerID, 1, "50 + 1n Battlecruiser", 45, 3, 75)
                # (Line 186) trg.Shape_Edge(playerID, 1, "80 + 1n Tank", 45, 3, 75);
                trg.Shape_Edge(playerID, 1, "80 + 1n Tank", 45, 3, 75)
                # (Line 188) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 189) Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 190) }
                DoActions(Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 191) else if (v.P_LoopMain[playerID] == 1)
            if EUDElseIf()(v.P_LoopMain[playerID] == 1):
                # (Line 192) {
                # (Line 193) trg.Shape_Edge(playerID, 1, "50 + 1n Battlecruiser", 45, 5, 150);
                trg.Shape_Edge(playerID, 1, "50 + 1n Battlecruiser", 45, 5, 150)
                # (Line 194) trg.Shape_Edge(playerID, 1, "80 + 1n Tank", 45, 5, 150);
                trg.Shape_Edge(playerID, 1, "80 + 1n Tank", 45, 5, 150)
                # (Line 196) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 197) Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 198) }
                DoActions(Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 199) else if (v.P_LoopMain[playerID] == 2)
            if EUDElseIf()(v.P_LoopMain[playerID] == 2):
                # (Line 200) {
                # (Line 201) trg.Shape_Edge(playerID, 1, "50 + 1n Battlecruiser", 45, 7, 225);
                trg.Shape_Edge(playerID, 1, "50 + 1n Battlecruiser", 45, 7, 225)
                # (Line 202) trg.Shape_Edge(playerID, 1, "80 + 1n Tank", 45, 7, 225);
                trg.Shape_Edge(playerID, 1, "80 + 1n Tank", 45, 7, 225)
                # (Line 204) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 205) Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 206) }
                DoActions(Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 207) else if (v.P_LoopMain[playerID] == 3)
            if EUDElseIf()(v.P_LoopMain[playerID] == 3):
                # (Line 208) {
                # (Line 209) trg.Shape_Edge(playerID, 1, "50 + 1n Battlecruiser", 45, 9, 300);
                trg.Shape_Edge(playerID, 1, "50 + 1n Battlecruiser", 45, 9, 300)
                # (Line 210) trg.Shape_Edge(playerID, 1, "80 + 1n Tank", 45, 9, 300);
                trg.Shape_Edge(playerID, 1, "80 + 1n Tank", 45, 9, 300)
                # (Line 212) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 213) Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 214) }
                DoActions(Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 215) else if (v.P_LoopMain[playerID] == 4)
            if EUDElseIf()(v.P_LoopMain[playerID] == 4):
                # (Line 216) {
                # (Line 217) trg.Shape_Edge(playerID, 1, "50 + 1n Battlecruiser", 45, 11, 375);
                trg.Shape_Edge(playerID, 1, "50 + 1n Battlecruiser", 45, 11, 375)
                # (Line 218) trg.Shape_Edge(playerID, 1, "80 + 1n Tank", 45, 11, 375);
                trg.Shape_Edge(playerID, 1, "80 + 1n Tank", 45, 11, 375)
                # (Line 220) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 221) Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 222) }
                DoActions(Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 223) KillUnitAt(All, "80 + 1n Tank", "Anywhere", playerID);
            EUDEndIf()
            # (Line 225) trg.Main_Wait(160);
            DoActions(KillUnitAt(All, "80 + 1n Tank", "Anywhere", playerID))
            trg.Main_Wait(160)
            # (Line 227) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 229) if (v.P_LoopMain[playerID] == 24)
            if EUDIf()(v.P_LoopMain[playerID] == 24):
                # (Line 230) {
                # (Line 231) s.CharacterVoice(6);
                s.CharacterVoice(6)
                # (Line 232) }
                # (Line 234) if (v.P_LoopMain[playerID] == 48)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] == 48):
                # (Line 235) {
                # (Line 236) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
                # (Line 237) KillUnitAt(All, "40 + 1n Lurker", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                # (Line 238) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Lurker", "Anywhere", playerID))
                # (Line 239) KillUnitAt(All, "60 + 1n Siege", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                # (Line 240) SetSwitch("UiltimateSwitch", Clear);
                DoActions(KillUnitAt(All, "60 + 1n Siege", "Anywhere", playerID))
                # (Line 242) v.P_CountMain[playerID] += 1;
                DoActions(SetSwitch("UiltimateSwitch", Clear))
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 243) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 244) }
                # (Line 245) }
            EUDEndIf()
            # (Line 246) else if (v.P_CountMain[playerID] == 5)
        if EUDElseIf()(v.P_CountMain[playerID] == 5):
            # (Line 247) {
            # (Line 250) trg.SkillEnd();
            trg.SkillEnd()
            # (Line 251) }
            # (Line 252) }
        EUDEndIf()
        # (Line 253) }
    EUDEndIf()
