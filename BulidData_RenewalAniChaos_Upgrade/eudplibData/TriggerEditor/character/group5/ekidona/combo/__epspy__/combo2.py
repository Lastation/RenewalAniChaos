## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import PluginVariables as msqcvar;
import PluginVariables as msqcvar
# (Line 2) import func.trig as trg;
from func import trig as trg
# (Line 3) import variable as v;
import variable as v
# (Line 5) function main(playerID)
# (Line 6) {
@EUDFunc
def f_main(playerID):
    # (Line 7) trg.Debuff_BanReturn();
    trg.Debuff_BanReturn()
    # (Line 8) trg.Debuff_Stop();
    trg.Debuff_Stop()
    # (Line 10) if (v.P_WaitMain[playerID] == 0)
    if EUDIf()(v.P_WaitMain[playerID] == 0):
        # (Line 11) {
        # (Line 12) if (v.P_CountMain[playerID] == 0)
        if EUDIf()(v.P_CountMain[playerID] == 0):
            # (Line 13) {
            # (Line 14) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 15) {
                # (Line 16) trg.Shape_Dot(playerID, 1, "40 + 1n Gantrithor", 0, 0);
                trg.Shape_Dot(playerID, 1, "40 + 1n Gantrithor", 0, 0)
                # (Line 17) KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID);
                # (Line 18) }
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID))
                # (Line 20) trg.Main_Wait(80);
            EUDEndIf()
            trg.Main_Wait(80)
            # (Line 22) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 24) if (v.P_LoopMain[playerID] == 15)
            if EUDIf()(v.P_LoopMain[playerID] == 15):
                # (Line 25) {
                # (Line 26) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 27) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 28) }
                # (Line 29) }
            EUDEndIf()
            # (Line 30) else if (v.P_CountMain[playerID] == 1)
        if EUDElseIf()(v.P_CountMain[playerID] == 1):
            # (Line 31) {
            # (Line 32) if (v.P_LoopMain[playerID] < 3)
            if EUDIf()(v.P_LoopMain[playerID] >= 3, neg=True):
                # (Line 33) {
                # (Line 34) trg.Shape_Square(playerID, 8, "Bengalaas (Jungle)", 75, 75);
                trg.Shape_Square(playerID, 8, "Bengalaas (Jungle)", 75, 75)
                # (Line 35) KillUnitAt(All, "Bengalaas (Jungle)", "Anywhere", playerID);
                # (Line 36) }
                DoActions(KillUnitAt(All, "Bengalaas (Jungle)", "Anywhere", playerID))
                # (Line 37) else if (v.P_LoopMain[playerID] < 5)
            if EUDElseIf()(v.P_LoopMain[playerID] >= 5, neg=True):
                # (Line 38) {
                # (Line 39) trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", 75, 75);
                trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", 75, 75)
                # (Line 40) KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID);
                # (Line 41) }
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID))
                # (Line 42) if (v.P_LoopMain[playerID] == 3)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] == 3):
                # (Line 43) {
                # (Line 44) trg.Shape_Square(playerID, 1, "60 + 1n Dragoon", 75, 75);
                trg.Shape_Square(playerID, 1, "60 + 1n Dragoon", 75, 75)
                # (Line 46) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 47) Order("60 + 1n Dragoon", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 48) }
                DoActions(Order("60 + 1n Dragoon", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 50) trg.Main_Wait(80);
            EUDEndIf()
            trg.Main_Wait(80)
            # (Line 52) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 54) if (v.P_LoopMain[playerID] == 11)
            if EUDIf()(v.P_LoopMain[playerID] == 11):
                # (Line 55) {
                # (Line 56) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 57) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 58) }
                # (Line 59) }
            EUDEndIf()
            # (Line 60) else if (v.P_CountMain[playerID] == 2)
        if EUDElseIf()(v.P_CountMain[playerID] == 2):
            # (Line 61) {
            # (Line 62) var x = 225 - 75 * v.P_LoopMain[playerID];
            x = EUDVariable()
            x << (225 - 75 * v.P_LoopMain[playerID])
            # (Line 63) var y = 75 + 75 * v.P_LoopMain[playerID];
            y = EUDVariable()
            y << (75 + 75 * v.P_LoopMain[playerID])
            # (Line 65) if (v.P_LoopMain[playerID] < 4)
            if EUDIf()(v.P_LoopMain[playerID] >= 4, neg=True):
                # (Line 66) {
                # (Line 67) trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", x, y);
                trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", x, y)
                # (Line 68) trg.Shape_Square(playerID, 1, "60 + 1n Siege", x, y);
                trg.Shape_Square(playerID, 1, "60 + 1n Siege", x, y)
                # (Line 70) trg.Shape_Line(playerID, 1, "Kakaru (Twilight)", 45 * v.P_LoopMain[playerID], 7, 50, 0);
                trg.Shape_Line(playerID, 1, "Kakaru (Twilight)", 45 * v.P_LoopMain[playerID], 7, 50, 0)
                # (Line 71) trg.Shape_Line(playerID, 1, "40 + 1n Zergling", 45 * v.P_LoopMain[playerID], 7, 50, 0);
                trg.Shape_Line(playerID, 1, "40 + 1n Zergling", 45 * v.P_LoopMain[playerID], 7, 50, 0)
                # (Line 73) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);
                # (Line 74) KillUnitAt(All, "40 + 1n Zergling", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID))
                # (Line 75) KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Zergling", "Anywhere", playerID))
                # (Line 76) }
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID))
                # (Line 77) if (v.P_LoopMain[playerID] == 6)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] == 6):
                # (Line 78) {
                # (Line 79) trg.Shape_Edge(playerID, 1, "50 + 1n Tank", 0, 3, 100);
                trg.Shape_Edge(playerID, 1, "50 + 1n Tank", 0, 3, 100)
                # (Line 80) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                # (Line 81) }
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                # (Line 82) if (v.P_LoopMain[playerID] == 8)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] == 8):
                # (Line 83) {
                # (Line 84) trg.Shape_Edge(playerID, 1, "Kakaru (Twilight)", 0, 3, 100);
                trg.Shape_Edge(playerID, 1, "Kakaru (Twilight)", 0, 3, 100)
                # (Line 85) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);
                # (Line 87) trg.Shape_Edge(playerID, 1, "40 + 1n Guardian", 0, 5, 200);
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID))
                trg.Shape_Edge(playerID, 1, "40 + 1n Guardian", 0, 5, 200)
                # (Line 88) trg.Shape_Edge(playerID, 1, "60 + 1n Archon", 0, 5, 200);
                trg.Shape_Edge(playerID, 1, "60 + 1n Archon", 0, 5, 200)
                # (Line 89) trg.Shape_Edge(playerID, 1, "Protoss Reaver", 0, 5, 200);
                trg.Shape_Edge(playerID, 1, "Protoss Reaver", 0, 5, 200)
                # (Line 90) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
                # (Line 91) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID))
                # (Line 93) ModifyUnitHangarCount(1, All, "Protoss Reaver", CurrentPlayer, "Anywhere");
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                # (Line 95) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(ModifyUnitHangarCount(1, All, "Protoss Reaver", CurrentPlayer, "Anywhere"))
                # (Line 96) MoveUnit(All, "Protoss Reaver", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 98) }
                DoActions(MoveUnit(All, "Protoss Reaver", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                # (Line 99) if (v.P_LoopMain[playerID] == 13)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] == 13):
                # (Line 100) {
                # (Line 101) KillUnitAt(All, "Protoss Reaver", "Anywhere", playerID);
                # (Line 102) }
                DoActions(KillUnitAt(All, "Protoss Reaver", "Anywhere", playerID))
                # (Line 104) trg.Main_Wait(80);
            EUDEndIf()
            trg.Main_Wait(80)
            # (Line 106) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 108) if (v.P_LoopMain[playerID] == 15)
            if EUDIf()(v.P_LoopMain[playerID] == 15):
                # (Line 109) {
                # (Line 110) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 111) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 112) }
                # (Line 113) }
            EUDEndIf()
            # (Line 114) else if (v.P_CountMain[playerID] == 3)
        if EUDElseIf()(v.P_CountMain[playerID] == 3):
            # (Line 115) {
            # (Line 116) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 117) {
                # (Line 118) trg.Shape_Dot(playerID, 1, "50 + 1n Battlecruiser", 0, 0);
                trg.Shape_Dot(playerID, 1, "50 + 1n Battlecruiser", 0, 0)
                # (Line 119) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
                # (Line 120) }
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                # (Line 122) if (v.P_LoopMain[playerID] < 6)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] >= 6, neg=True):
                # (Line 123) {
                # (Line 124) trg.Table_Sin(playerID, 0, 300 - 50 * v.P_LoopMain[playerID]);
                trg.Table_Sin(playerID, 0, 300 - 50 * v.P_LoopMain[playerID])
                # (Line 125) trg.Table_Cos(playerID, 0, 300 - 50 * v.P_LoopMain[playerID]);
                trg.Table_Cos(playerID, 0, 300 - 50 * v.P_LoopMain[playerID])
                # (Line 127) var x = v.P_AngleCos[playerID];
                x = EUDVariable()
                x << (v.P_AngleCos[playerID])
                # (Line 128) var y = v.P_AngleSin[playerID];
                y = EUDVariable()
                y << (v.P_AngleSin[playerID])
                # (Line 130) trg.Shape_Square(playerID, 1, "Bengalaas (Jungle)", x, y);
                trg.Shape_Square(playerID, 1, "Bengalaas (Jungle)", x, y)
                # (Line 131) KillUnitAt(All, "Bengalaas (Jungle)", "Anywhere", playerID);
                # (Line 133) trg.Table_Sin(playerID, 45, 300 - 50 * v.P_LoopMain[playerID]);
                DoActions(KillUnitAt(All, "Bengalaas (Jungle)", "Anywhere", playerID))
                trg.Table_Sin(playerID, 45, 300 - 50 * v.P_LoopMain[playerID])
                # (Line 134) trg.Table_Cos(playerID, 45, 300 - 50 * v.P_LoopMain[playerID]);
                trg.Table_Cos(playerID, 45, 300 - 50 * v.P_LoopMain[playerID])
                # (Line 136) x = v.P_AngleCos[playerID];
                x << (v.P_AngleCos[playerID])
                # (Line 137) y = v.P_AngleSin[playerID];
                y << (v.P_AngleSin[playerID])
                # (Line 139) trg.Shape_Square(playerID, 1, "Bengalaas (Jungle)", x, y);
                trg.Shape_Square(playerID, 1, "Bengalaas (Jungle)", x, y)
                # (Line 140) KillUnitAt(All, "Bengalaas (Jungle)", "Anywhere", playerID);
                # (Line 141) }
                DoActions(KillUnitAt(All, "Bengalaas (Jungle)", "Anywhere", playerID))
                # (Line 142) if (v.P_LoopMain[playerID] == 6)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] == 6):
                # (Line 143) {
                # (Line 144) trg.Table_Sin(playerID, 0, 100);
                trg.Table_Sin(playerID, 0, 100)
                # (Line 145) trg.Table_Cos(playerID, 0, 100);
                trg.Table_Cos(playerID, 0, 100)
                # (Line 147) var x = v.P_AngleCos[playerID];
                x = EUDVariable()
                x << (v.P_AngleCos[playerID])
                # (Line 148) var y = v.P_AngleSin[playerID];
                y = EUDVariable()
                y << (v.P_AngleSin[playerID])
                # (Line 150) trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", x, y);
                trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", x, y)
                # (Line 151) trg.Shape_Square(playerID, 4, "50 + 1n Tank", x, y);
                trg.Shape_Square(playerID, 4, "50 + 1n Tank", x, y)
                # (Line 152) KillUnitAt(All, "Target", "Anywhere", playerID);
                # (Line 153) KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "Target", "Anywhere", playerID))
                # (Line 155) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID))
                # (Line 156) MoveUnit(All, "50 + 1n Tank", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 157) Order("50 + 1n Tank", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveUnit(All, "50 + 1n Tank", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                # (Line 158) }
                DoActions(Order("50 + 1n Tank", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 159) if (v.P_LoopMain[playerID] == 7)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] == 7):
                # (Line 160) {
                # (Line 161) trg.Table_Sin(playerID, 0, 100);
                trg.Table_Sin(playerID, 0, 100)
                # (Line 162) trg.Table_Cos(playerID, 0, 100);
                trg.Table_Cos(playerID, 0, 100)
                # (Line 164) var x = v.P_AngleCos[playerID];
                x = EUDVariable()
                x << (v.P_AngleCos[playerID])
                # (Line 165) var y = v.P_AngleSin[playerID];
                y = EUDVariable()
                y << (v.P_AngleSin[playerID])
                # (Line 167) trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", x, y);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", x, y)
                # (Line 168) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
                # (Line 169) }
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                # (Line 170) if (v.P_LoopMain[playerID] == 11)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] == 11):
                # (Line 171) {
                # (Line 172) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                # (Line 174) trg.Table_Sin(playerID, 30, 100);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                trg.Table_Sin(playerID, 30, 100)
                # (Line 175) trg.Table_Cos(playerID, 30, 100);
                trg.Table_Cos(playerID, 30, 100)
                # (Line 177) var x = v.P_AngleCos[playerID];
                x = EUDVariable()
                x << (v.P_AngleCos[playerID])
                # (Line 178) var y = v.P_AngleSin[playerID];
                y = EUDVariable()
                y << (v.P_AngleSin[playerID])
                # (Line 180) trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", x, y);
                trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", x, y)
                # (Line 181) trg.Shape_Square(playerID, 4, "50 + 1n Tank", x, y);
                trg.Shape_Square(playerID, 4, "50 + 1n Tank", x, y)
                # (Line 182) KillUnitAt(All, "Target", "Anywhere", playerID);
                # (Line 183) KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "Target", "Anywhere", playerID))
                # (Line 185) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID))
                # (Line 186) MoveUnit(All, "50 + 1n Tank", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 187) Order("50 + 1n Tank", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveUnit(All, "50 + 1n Tank", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                # (Line 188) }
                DoActions(Order("50 + 1n Tank", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 189) if (v.P_LoopMain[playerID] == 12)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] == 12):
                # (Line 190) {
                # (Line 191) trg.Table_Sin(playerID, 30, 100);
                trg.Table_Sin(playerID, 30, 100)
                # (Line 192) trg.Table_Cos(playerID, 30, 100);
                trg.Table_Cos(playerID, 30, 100)
                # (Line 194) var x = v.P_AngleCos[playerID];
                x = EUDVariable()
                x << (v.P_AngleCos[playerID])
                # (Line 195) var y = v.P_AngleSin[playerID];
                y = EUDVariable()
                y << (v.P_AngleSin[playerID])
                # (Line 197) trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", x, y);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", x, y)
                # (Line 198) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
                # (Line 199) }
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                # (Line 200) if (v.P_LoopMain[playerID] == 16)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] == 16):
                # (Line 201) {
                # (Line 202) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                # (Line 204) trg.Table_Sin(playerID, 60, 100);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                trg.Table_Sin(playerID, 60, 100)
                # (Line 205) trg.Table_Cos(playerID, 60, 100);
                trg.Table_Cos(playerID, 60, 100)
                # (Line 207) var x = v.P_AngleCos[playerID];
                x = EUDVariable()
                x << (v.P_AngleCos[playerID])
                # (Line 208) var y = v.P_AngleSin[playerID];
                y = EUDVariable()
                y << (v.P_AngleSin[playerID])
                # (Line 210) trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", x, y);
                trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", x, y)
                # (Line 211) trg.Shape_Square(playerID, 4, "50 + 1n Tank", x, y);
                trg.Shape_Square(playerID, 4, "50 + 1n Tank", x, y)
                # (Line 212) KillUnitAt(All, "Target", "Anywhere", playerID);
                # (Line 213) KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "Target", "Anywhere", playerID))
                # (Line 215) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID))
                # (Line 216) MoveUnit(All, "50 + 1n Tank", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 217) Order("50 + 1n Tank", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveUnit(All, "50 + 1n Tank", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                # (Line 218) }
                DoActions(Order("50 + 1n Tank", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 219) if (v.P_LoopMain[playerID] == 17)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] == 17):
                # (Line 220) {
                # (Line 221) trg.Table_Sin(playerID, 60, 100);
                trg.Table_Sin(playerID, 60, 100)
                # (Line 222) trg.Table_Cos(playerID, 60, 100);
                trg.Table_Cos(playerID, 60, 100)
                # (Line 224) var x = v.P_AngleCos[playerID];
                x = EUDVariable()
                x << (v.P_AngleCos[playerID])
                # (Line 225) var y = v.P_AngleSin[playerID];
                y = EUDVariable()
                y << (v.P_AngleSin[playerID])
                # (Line 227) trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", x, y);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", x, y)
                # (Line 228) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
                # (Line 229) }
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                # (Line 231) trg.Main_Wait(80);
            EUDEndIf()
            trg.Main_Wait(80)
            # (Line 233) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 235) if (v.P_LoopMain[playerID] == 19)
            if EUDIf()(v.P_LoopMain[playerID] == 19):
                # (Line 236) {
                # (Line 237) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 238) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 239) }
                # (Line 240) }
            EUDEndIf()
            # (Line 243) else if (v.P_CountMain[playerID] == 4)
        if EUDElseIf()(v.P_CountMain[playerID] == 4):
            # (Line 244) {
            # (Line 245) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
            # (Line 246) KillUnitAt(All, "60 + 1n Siege", "Anywhere", playerID);
            DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
            # (Line 247) KillUnitAt(All, "60 + 1n Dragoon", "Anywhere", playerID);
            DoActions(KillUnitAt(All, "60 + 1n Siege", "Anywhere", playerID))
            # (Line 249) trg.SkillEnd();
            DoActions(KillUnitAt(All, "60 + 1n Dragoon", "Anywhere", playerID))
            trg.SkillEnd()
            # (Line 250) }
            # (Line 251) }
        EUDEndIf()
        # (Line 252) }
    EUDEndIf()
