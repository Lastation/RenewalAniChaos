## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import PluginVariables as msqcvar;
import PluginVariables as msqcvar
# (Line 2) import variable as v;
import variable as v
# (Line 3) import func.trig as trg;
from func import trig as trg
# (Line 4) import func.trigepic as epic;
from func import trigepic as epic
# (Line 6) function main(playerID)
# (Line 7) {
@EUDFunc
def f_main(playerID):
    # (Line 8) trg.Debuff_BanReturn();
    trg.Debuff_BanReturn()
    # (Line 9) trg.Debuff_Stop();
    trg.Debuff_Stop()
    # (Line 11) MoveUnit(All, "60 + 1n High Templar", playerID, "Anywhere", "[Skill]HoldPosition");
    # (Line 13) if (v.P_WaitMain[playerID] == 0)
    DoActions(MoveUnit(All, "60 + 1n High Templar", playerID, "Anywhere", "[Skill]HoldPosition"))
    if EUDIf()(v.P_WaitMain[playerID] == 0):
        # (Line 14) {
        # (Line 15) if (v.P_CountMain[playerID] == 0)
        if EUDIf()(v.P_CountMain[playerID] == 0):
            # (Line 16) {
            # (Line 17) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 18) {
                # (Line 19) trg.Shape_Square(playerID, 1, "60 + 1n High Templar", 50, 0);
                trg.Shape_Square(playerID, 1, "60 + 1n High Templar", 50, 0)
                # (Line 20) epic.Shape_Square(playerID, 1, "40 + 1n Mojo", 50, 0, 1);
                epic.Shape_Square(playerID, 1, "40 + 1n Mojo", 50, 0, 1)
                # (Line 22) KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID);
                # (Line 24) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID))
                # (Line 25) MoveUnit(All, "60 + 1n High Templar", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 26) Order("60 + 1n High Templar", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveUnit(All, "60 + 1n High Templar", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                # (Line 27) }
                DoActions(Order("60 + 1n High Templar", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 29) if (v.P_LoopMain[playerID] == 2)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] == 2):
                # (Line 30) {
                # (Line 31) trg.Shape_Square(playerID, 1, "60 + 1n High Templar", 100, 100);
                trg.Shape_Square(playerID, 1, "60 + 1n High Templar", 100, 100)
                # (Line 32) epic.Shape_Square(playerID, 1, "40 + 1n Mojo", 100, 100, 1);
                epic.Shape_Square(playerID, 1, "40 + 1n Mojo", 100, 100, 1)
                # (Line 34) KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID);
                # (Line 36) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID))
                # (Line 37) MoveUnit(All, "60 + 1n High Templar", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 38) Order("60 + 1n High Templar", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveUnit(All, "60 + 1n High Templar", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                # (Line 39) }
                DoActions(Order("60 + 1n High Templar", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 41) if (v.P_LoopMain[playerID] == 4)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] == 4):
                # (Line 42) {
                # (Line 43) trg.Shape_Square(playerID, 1, "60 + 1n High Templar", 150, 0);
                trg.Shape_Square(playerID, 1, "60 + 1n High Templar", 150, 0)
                # (Line 44) epic.Shape_Square(playerID, 1, "40 + 1n Mojo", 150, 0, 1);
                epic.Shape_Square(playerID, 1, "40 + 1n Mojo", 150, 0, 1)
                # (Line 46) KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID);
                # (Line 48) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID))
                # (Line 49) MoveUnit(All, "60 + 1n High Templar", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 50) Order("60 + 1n High Templar", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveUnit(All, "60 + 1n High Templar", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                # (Line 51) }
                DoActions(Order("60 + 1n High Templar", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 53) if (v.P_LoopMain[playerID] == 8)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] == 8):
                # (Line 54) {
                # (Line 55) trg.Shape_Square(playerID, 1, " Unit. Hoffnung 25000", 50, 0);
                trg.Shape_Square(playerID, 1, " Unit. Hoffnung 25000", 50, 0)
                # (Line 56) trg.Shape_Square(playerID, 1, " Unit. Hoffnung 25000", 100, 100);
                trg.Shape_Square(playerID, 1, " Unit. Hoffnung 25000", 100, 100)
                # (Line 57) trg.Shape_Square(playerID, 1, " Unit. Hoffnung 25000", 150, 0);
                trg.Shape_Square(playerID, 1, " Unit. Hoffnung 25000", 150, 0)
                # (Line 59) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID);
                # (Line 61) }
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID))
                # (Line 63) trg.Main_Wait(80);
            EUDEndIf()
            trg.Main_Wait(80)
            # (Line 65) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 67) if (v.P_LoopMain[playerID] == 16)
            if EUDIf()(v.P_LoopMain[playerID] == 16):
                # (Line 68) {
                # (Line 69) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 70) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 71) }
                # (Line 72) }
            EUDEndIf()
            # (Line 73) else if (v.P_CountMain[playerID] == 1)
        if EUDElseIf()(v.P_CountMain[playerID] == 1):
            # (Line 74) {
            # (Line 75) RemoveUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID);
            # (Line 77) if (v.P_LoopMain[playerID] < 12)
            DoActions(RemoveUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID))
            if EUDIf()(v.P_LoopMain[playerID] >= 12, neg=True):
                # (Line 78) {
                # (Line 79) if (v.P_LoopMain[playerID] % 2 == 0)
                if EUDIf()(v.P_LoopMain[playerID] % 2 == 0):
                    # (Line 80) {
                    # (Line 81) trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 150 - 8 * v.P_LoopMain[playerID], 0);
                    trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 150 - 8 * v.P_LoopMain[playerID], 0)
                    # (Line 82) }
                    # (Line 83) if (v.P_LoopMain[playerID] % 2 == 1)
                EUDEndIf()
                if EUDIf()(v.P_LoopMain[playerID] % 2 == 1):
                    # (Line 84) {
                    # (Line 85) epic.Shape_Square(playerID, 1, "40 + 1n Mojo", 150 - 8 * v.P_LoopMain[playerID], 0, 1);
                    epic.Shape_Square(playerID, 1, "40 + 1n Mojo", 150 - 8 * v.P_LoopMain[playerID], 0, 1)
                    # (Line 86) }
                    # (Line 87) trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 150 - 8 * v.P_LoopMain[playerID], 0);
                EUDEndIf()
                trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 150 - 8 * v.P_LoopMain[playerID], 0)
                # (Line 88) trg.Shape_Square(playerID, 1, "Rhynadon (Badlands)", 50, 50);
                trg.Shape_Square(playerID, 1, "Rhynadon (Badlands)", 50, 50)
                # (Line 89) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                # (Line 90) KillUnitAt(All, "Rhynadon (Badlands)", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                # (Line 92) trg.MoveLoc("60 + 1n High Templar", playerID, 0, 0);
                DoActions(KillUnitAt(All, "Rhynadon (Badlands)", "Anywhere", playerID))
                trg.MoveLoc("60 + 1n High Templar", playerID, 0, 0)
                # (Line 93) RemoveUnitAt(1, "60 + 1n High Templar", "Anywhere", playerID);
                # (Line 94) trg.SkillUnit(playerID, 1, "40 + 1n Guardian");
                DoActions(RemoveUnitAt(1, "60 + 1n High Templar", "Anywhere", playerID))
                trg.SkillUnit(playerID, 1, "40 + 1n Guardian")
                # (Line 95) trg.SkillUnit(playerID, 1, " Unit. Schnee");
                trg.SkillUnit(playerID, 1, " Unit. Schnee")
                # (Line 96) epic.SkillUnit(playerID, 1, "40 + 1n Lurker", 0);
                epic.SkillUnit(playerID, 1, "40 + 1n Lurker", 0)
                # (Line 97) epic.SkillUnit(playerID, 1, "40 + 1n Drone", 0);
                epic.SkillUnit(playerID, 1, "40 + 1n Drone", 0)
                # (Line 99) KillUnitAt(All, " Unit. Schnee", "Anywhere", playerID);
                # (Line 100) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
                DoActions(KillUnitAt(All, " Unit. Schnee", "Anywhere", playerID))
                # (Line 102) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID))
                # (Line 103) Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 104) }
                DoActions(Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 106) if (v.P_LoopMain[playerID] == 17)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] == 17):
                # (Line 107) {
                # (Line 108) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 109) Order("40 + 1n Drone", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 110) }
                DoActions(Order("40 + 1n Drone", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 112) trg.Main_Wait(80);
            EUDEndIf()
            trg.Main_Wait(80)
            # (Line 114) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 116) if (v.P_LoopMain[playerID] == 42)
            if EUDIf()(v.P_LoopMain[playerID] == 42):
                # (Line 117) {
                # (Line 118) KillUnitAt(All, "40 + 1n Drone", "Anywhere", playerID);
                # (Line 120) v.P_CountMain[playerID] += 1;
                DoActions(KillUnitAt(All, "40 + 1n Drone", "Anywhere", playerID))
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 121) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 122) }
                # (Line 123) }
            EUDEndIf()
            # (Line 124) else if (v.P_CountMain[playerID] == 2)
        if EUDElseIf()(v.P_CountMain[playerID] == 2):
            # (Line 125) {
            # (Line 126) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 127) {
                # (Line 128) trg.Shape_NxNSquare(playerID, 1, "50 + 1n Battlecruiser", 3, 75);
                trg.Shape_NxNSquare(playerID, 1, "50 + 1n Battlecruiser", 3, 75)
                # (Line 130) Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, "Anywhere");
                # (Line 131) }
                DoActions(Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, "Anywhere"))
                # (Line 132) if (v.P_LoopMain[playerID] == 4)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] == 4):
                # (Line 133) {
                # (Line 134) RemoveUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
                # (Line 136) trg.Shape_NxNSquare(playerID, 1, "Kakaru (Twilight)", 3, 75);
                DoActions(RemoveUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                trg.Shape_NxNSquare(playerID, 1, "Kakaru (Twilight)", 3, 75)
                # (Line 137) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);
                # (Line 138) }
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID))
                # (Line 139) if (v.P_LoopMain[playerID] == 6)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] == 6):
                # (Line 140) {
                # (Line 141) trg.Shape_NxNSquare(playerID, 1, "50 + 1n Battlecruiser", 3, 75);
                trg.Shape_NxNSquare(playerID, 1, "50 + 1n Battlecruiser", 3, 75)
                # (Line 143) Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, "Anywhere");
                # (Line 144) }
                DoActions(Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, "Anywhere"))
                # (Line 146) trg.Main_Wait(80);
            EUDEndIf()
            trg.Main_Wait(80)
            # (Line 148) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 150) if (v.P_LoopMain[playerID] == 10)
            if EUDIf()(v.P_LoopMain[playerID] == 10):
                # (Line 151) {
                # (Line 152) RemoveUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
                # (Line 154) trg.Shape_NxNSquare(playerID, 1, "Kakaru (Twilight)", 3, 75);
                DoActions(RemoveUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                trg.Shape_NxNSquare(playerID, 1, "Kakaru (Twilight)", 3, 75)
                # (Line 155) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);
                # (Line 157) v.P_CountMain[playerID] += 1;
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID))
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 158) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 159) }
                # (Line 160) }
            EUDEndIf()
            # (Line 161) else if (v.P_CountMain[playerID] == 3)
        if EUDElseIf()(v.P_CountMain[playerID] == 3):
            # (Line 162) {
            # (Line 163) KillUnitAt(All, "40 + 1n Lurker", "Anywhere", playerID);
            # (Line 165) trg.SkillEnd();
            DoActions(KillUnitAt(All, "40 + 1n Lurker", "Anywhere", playerID))
            trg.SkillEnd()
            # (Line 166) }
            # (Line 167) }
        EUDEndIf()
        # (Line 168) }
    EUDEndIf()
