## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import PluginVariables as msqcvar;
import PluginVariables as msqcvar
# (Line 2) import variable as v;
import variable as v
# (Line 3) import func.trig as trg;
from func import trig as trg
# (Line 4) import func.trigepic as epic;
from func import trigepic as epic
# (Line 5) import func.sound as s;
from func import sound as s
# (Line 7) var x = 0;
x = EUDCreateVariables(1)
_IGVA([x], lambda: [0])
# (Line 8) var y = 0;
y = EUDCreateVariables(1)
_IGVA([y], lambda: [0])
# (Line 10) var d = 75;
d = EUDCreateVariables(1)
_IGVA([d], lambda: [75])
# (Line 12) function main(playerID)
# (Line 13) {
@EUDFunc
def f_main(playerID):
    # (Line 14) MoveUnit(All, "60 + 1n High Templar", playerID, "Anywhere", "[Skill]HoldPosition");
    # (Line 15) MoveUnit(All, "60 + 1n Dragoon", playerID, "Anywhere", "[Skill]HoldPosition");
    DoActions(MoveUnit(All, "60 + 1n High Templar", playerID, "Anywhere", "[Skill]HoldPosition"))
    # (Line 17) trg.Debuff_BanReturn();
    DoActions(MoveUnit(All, "60 + 1n Dragoon", playerID, "Anywhere", "[Skill]HoldPosition"))
    trg.Debuff_BanReturn()
    # (Line 18) trg.Debuff_Stop();
    trg.Debuff_Stop()
    # (Line 20) if (v.P_WaitMain[playerID] == 0)
    if EUDIf()(v.P_WaitMain[playerID] == 0):
        # (Line 21) {
        # (Line 22) if (v.P_CountMain[playerID] == 0)
        if EUDIf()(v.P_CountMain[playerID] == 0):
            # (Line 23) {
            # (Line 24) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 25) {
                # (Line 26) trg.Table_Sin(playerID, 22, d);
                trg.Table_Sin(playerID, 22, d)
                # (Line 27) trg.Table_Cos(playerID, 22, d);
                trg.Table_Cos(playerID, 22, d)
                # (Line 29) x = v.P_AngleCos[playerID];
                x << (v.P_AngleCos[playerID])
                # (Line 30) y = v.P_AngleSin[playerID];
                y << (v.P_AngleSin[playerID])
                # (Line 32) trg.Shape_Square(playerID, 1, "40 + 1n Guardian", x, y);
                trg.Shape_Square(playerID, 1, "40 + 1n Guardian", x, y)
                # (Line 34) trg.Table_Sin(playerID, 67, d);
                trg.Table_Sin(playerID, 67, d)
                # (Line 35) trg.Table_Cos(playerID, 67, d);
                trg.Table_Cos(playerID, 67, d)
                # (Line 37) x = v.P_AngleCos[playerID];
                x << (v.P_AngleCos[playerID])
                # (Line 38) y = v.P_AngleSin[playerID];
                y << (v.P_AngleSin[playerID])
                # (Line 40) trg.Shape_Square(playerID, 1, "40 + 1n Guardian", x, y);
                trg.Shape_Square(playerID, 1, "40 + 1n Guardian", x, y)
                # (Line 41) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
                # (Line 42) }
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID))
                # (Line 43) if (v.P_LoopMain[playerID] == 2)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] == 2):
                # (Line 44) {
                # (Line 45) trg.Table_Sin(playerID, 22, 3 * d);
                trg.Table_Sin(playerID, 22, 3 * d)
                # (Line 46) trg.Table_Cos(playerID, 22, 3 * d);
                trg.Table_Cos(playerID, 22, 3 * d)
                # (Line 48) x = v.P_AngleCos[playerID];
                x << (v.P_AngleCos[playerID])
                # (Line 49) y = v.P_AngleSin[playerID];
                y << (v.P_AngleSin[playerID])
                # (Line 51) trg.Shape_Square(playerID, 1, "60 + 1n Siege", x, y);
                trg.Shape_Square(playerID, 1, "60 + 1n Siege", x, y)
                # (Line 52) trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", x, y);
                trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", x, y)
                # (Line 54) trg.Table_Sin(playerID, 67, 3 * d);
                trg.Table_Sin(playerID, 67, 3 * d)
                # (Line 55) trg.Table_Cos(playerID, 67, 3 * d);
                trg.Table_Cos(playerID, 67, 3 * d)
                # (Line 57) x = v.P_AngleCos[playerID];
                x << (v.P_AngleCos[playerID])
                # (Line 58) y = v.P_AngleSin[playerID];
                y << (v.P_AngleSin[playerID])
                # (Line 60) trg.Shape_Square(playerID, 1, "60 + 1n Siege", x, y);
                trg.Shape_Square(playerID, 1, "60 + 1n Siege", x, y)
                # (Line 61) trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", x, y);
                trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", x, y)
                # (Line 62) KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID);
                # (Line 64) }
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID))
                # (Line 65) if (v.P_LoopMain[playerID] == 4)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] == 4):
                # (Line 66) {
                # (Line 67) trg.Table_Sin(playerID, 22, 2 * d);
                trg.Table_Sin(playerID, 22, 2 * d)
                # (Line 68) trg.Table_Cos(playerID, 22, 2 * d);
                trg.Table_Cos(playerID, 22, 2 * d)
                # (Line 70) x = v.P_AngleCos[playerID];
                x << (v.P_AngleCos[playerID])
                # (Line 71) y = v.P_AngleSin[playerID];
                y << (v.P_AngleSin[playerID])
                # (Line 73) trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", x, y);
                trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", x, y)
                # (Line 75) trg.Table_Sin(playerID, 67, 2 * d);
                trg.Table_Sin(playerID, 67, 2 * d)
                # (Line 76) trg.Table_Cos(playerID, 67, 2 * d);
                trg.Table_Cos(playerID, 67, 2 * d)
                # (Line 78) x = v.P_AngleCos[playerID];
                x << (v.P_AngleCos[playerID])
                # (Line 79) y = v.P_AngleSin[playerID];
                y << (v.P_AngleSin[playerID])
                # (Line 81) trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", x, y);
                trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", x, y)
                # (Line 82) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);
                # (Line 83) }
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID))
                # (Line 84) if (v.P_LoopMain[playerID] < 8)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] >= 8, neg=True):
                # (Line 85) {
                # (Line 86) trg.Table_Sin(playerID, 45 * v.P_LoopMain[playerID], d);
                trg.Table_Sin(playerID, 45 * v.P_LoopMain[playerID], d)
                # (Line 87) trg.Table_Cos(playerID, 45 * v.P_LoopMain[playerID], d);
                trg.Table_Cos(playerID, 45 * v.P_LoopMain[playerID], d)
                # (Line 89) x = v.P_AngleCos[playerID];
                x << (v.P_AngleCos[playerID])
                # (Line 90) y = v.P_AngleSin[playerID];
                y << (v.P_AngleSin[playerID])
                # (Line 92) trg.Shape_Dot(playerID, 1, "60 + 1n Dragoon", x, y);
                trg.Shape_Dot(playerID, 1, "60 + 1n Dragoon", x, y)
                # (Line 93) }
                # (Line 95) trg.Table_Sin(playerID, 45 * v.P_LoopMain[playerID], 2 * d);
            EUDEndIf()
            trg.Table_Sin(playerID, 45 * v.P_LoopMain[playerID], 2 * d)
            # (Line 96) trg.Table_Cos(playerID, 45 * v.P_LoopMain[playerID], 2 * d);
            trg.Table_Cos(playerID, 45 * v.P_LoopMain[playerID], 2 * d)
            # (Line 98) x = v.P_AngleCos[playerID];
            x << (v.P_AngleCos[playerID])
            # (Line 99) y = v.P_AngleSin[playerID];
            y << (v.P_AngleSin[playerID])
            # (Line 101) trg.Shape_Double(playerID, 1, "50 + 1n Battlecruiser", x, y);
            trg.Shape_Double(playerID, 1, "50 + 1n Battlecruiser", x, y)
            # (Line 102) trg.Shape_Double(playerID, 1, "60 + 1n Archon", x, y);
            trg.Shape_Double(playerID, 1, "60 + 1n Archon", x, y)
            # (Line 103) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
            # (Line 104) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
            DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
            # (Line 106) trg.Table_Sin(playerID, 45 * v.P_LoopMain[playerID], d);
            DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
            trg.Table_Sin(playerID, 45 * v.P_LoopMain[playerID], d)
            # (Line 107) trg.Table_Cos(playerID, 45 * v.P_LoopMain[playerID], d);
            trg.Table_Cos(playerID, 45 * v.P_LoopMain[playerID], d)
            # (Line 109) x = v.P_AngleCos[playerID];
            x << (v.P_AngleCos[playerID])
            # (Line 110) y = v.P_AngleSin[playerID];
            y << (v.P_AngleSin[playerID])
            # (Line 112) trg.Shape_Double(playerID, 1, "Kakaru (Twilight)", x, y);
            trg.Shape_Double(playerID, 1, "Kakaru (Twilight)", x, y)
            # (Line 113) trg.Shape_Double(playerID, 1, "Protoss Dark Archon", x, y);
            trg.Shape_Double(playerID, 1, "Protoss Dark Archon", x, y)
            # (Line 114) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);
            # (Line 115) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
            DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID))
            # (Line 117) if (v.P_LoopMain[playerID] % 2 == 0)
            DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
            if EUDIf()(v.P_LoopMain[playerID] % 2 == 0):
                # (Line 118) {
                # (Line 119) trg.Shape_Dot(playerID, 1, "40 + 1n Guardian", 0, 0);
                trg.Shape_Dot(playerID, 1, "40 + 1n Guardian", 0, 0)
                # (Line 120) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
                # (Line 121) }
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID))
                # (Line 123) trg.Main_Wait(80);
            EUDEndIf()
            trg.Main_Wait(80)
            # (Line 125) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 127) if (v.P_LoopMain[playerID] == 60)
            if EUDIf()(v.P_LoopMain[playerID] == 60):
                # (Line 128) {
                # (Line 129) KillUnitAt(All, "60 + 1n Dragoon", "Anywhere", playerID);
                # (Line 131) v.P_CountMain[playerID] += 1;
                DoActions(KillUnitAt(All, "60 + 1n Dragoon", "Anywhere", playerID))
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 132) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 133) }
                # (Line 134) }
            EUDEndIf()
            # (Line 135) else if (v.P_CountMain[playerID] == 1)
        if EUDElseIf()(v.P_CountMain[playerID] == 1):
            # (Line 136) {
            # (Line 137) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 138) {
                # (Line 139) trg.Table_Sin(playerID, 22, d);
                trg.Table_Sin(playerID, 22, d)
                # (Line 140) trg.Table_Cos(playerID, 22, d);
                trg.Table_Cos(playerID, 22, d)
                # (Line 142) x = v.P_AngleCos[playerID];
                x << (v.P_AngleCos[playerID])
                # (Line 143) y = v.P_AngleSin[playerID];
                y << (v.P_AngleSin[playerID])
                # (Line 145) trg.Shape_Square(playerID, 1, "40 + 1n Guardian", x, y);
                trg.Shape_Square(playerID, 1, "40 + 1n Guardian", x, y)
                # (Line 146) trg.Shape_Square(playerID, 1, "60 + 1n High Templar", x, y);
                trg.Shape_Square(playerID, 1, "60 + 1n High Templar", x, y)
                # (Line 148) trg.Table_Sin(playerID, 67, d);
                trg.Table_Sin(playerID, 67, d)
                # (Line 149) trg.Table_Cos(playerID, 67, d);
                trg.Table_Cos(playerID, 67, d)
                # (Line 151) x = v.P_AngleCos[playerID];
                x << (v.P_AngleCos[playerID])
                # (Line 152) y = v.P_AngleSin[playerID];
                y << (v.P_AngleSin[playerID])
                # (Line 154) trg.Shape_Square(playerID, 1, "40 + 1n Guardian", x, y);
                trg.Shape_Square(playerID, 1, "40 + 1n Guardian", x, y)
                # (Line 155) trg.Shape_Square(playerID, 1, "60 + 1n High Templar", x, y);
                trg.Shape_Square(playerID, 1, "60 + 1n High Templar", x, y)
                # (Line 156) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
                # (Line 157) }
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID))
                # (Line 158) if (v.P_LoopMain[playerID] == 2)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] == 2):
                # (Line 159) {
                # (Line 160) trg.Table_Sin(playerID, 22, 3 * d);
                trg.Table_Sin(playerID, 22, 3 * d)
                # (Line 161) trg.Table_Cos(playerID, 22, 3 * d);
                trg.Table_Cos(playerID, 22, 3 * d)
                # (Line 163) x = v.P_AngleCos[playerID];
                x << (v.P_AngleCos[playerID])
                # (Line 164) y = v.P_AngleSin[playerID];
                y << (v.P_AngleSin[playerID])
                # (Line 166) trg.Shape_Square(playerID, 1, "40 + 1n Guardian", x, y);
                trg.Shape_Square(playerID, 1, "40 + 1n Guardian", x, y)
                # (Line 167) trg.Shape_Square(playerID, 1, "60 + 1n Archon", x, y);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", x, y)
                # (Line 169) trg.Table_Sin(playerID, 67, 3 * d);
                trg.Table_Sin(playerID, 67, 3 * d)
                # (Line 170) trg.Table_Cos(playerID, 67, 3 * d);
                trg.Table_Cos(playerID, 67, 3 * d)
                # (Line 172) x = v.P_AngleCos[playerID];
                x << (v.P_AngleCos[playerID])
                # (Line 173) y = v.P_AngleSin[playerID];
                y << (v.P_AngleSin[playerID])
                # (Line 175) trg.Shape_Square(playerID, 1, "40 + 1n Guardian", x, y);
                trg.Shape_Square(playerID, 1, "40 + 1n Guardian", x, y)
                # (Line 176) trg.Shape_Square(playerID, 1, "60 + 1n Archon", x, y);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", x, y)
                # (Line 177) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
                # (Line 178) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID))
                # (Line 179) }
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                # (Line 180) if (v.P_LoopMain[playerID] == 4)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] == 4):
                # (Line 181) {
                # (Line 182) trg.Table_Sin(playerID, 22, d);
                trg.Table_Sin(playerID, 22, d)
                # (Line 183) trg.Table_Cos(playerID, 22, d);
                trg.Table_Cos(playerID, 22, d)
                # (Line 185) x = v.P_AngleCos[playerID];
                x << (v.P_AngleCos[playerID])
                # (Line 186) y = v.P_AngleSin[playerID];
                y << (v.P_AngleSin[playerID])
                # (Line 188) trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", x, y);
                trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", x, y)
                # (Line 190) trg.Table_Sin(playerID, 67, d);
                trg.Table_Sin(playerID, 67, d)
                # (Line 191) trg.Table_Cos(playerID, 67, d);
                trg.Table_Cos(playerID, 67, d)
                # (Line 193) x = v.P_AngleCos[playerID];
                x << (v.P_AngleCos[playerID])
                # (Line 194) y = v.P_AngleSin[playerID];
                y << (v.P_AngleSin[playerID])
                # (Line 196) trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", x, y);
                trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", x, y)
                # (Line 197) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);
                # (Line 199) trg.Table_Sin(playerID, 0, 3 * d);
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID))
                trg.Table_Sin(playerID, 0, 3 * d)
                # (Line 200) trg.Table_Cos(playerID, 0, 3 * d);
                trg.Table_Cos(playerID, 0, 3 * d)
                # (Line 202) x = v.P_AngleCos[playerID];
                x << (v.P_AngleCos[playerID])
                # (Line 203) y = v.P_AngleSin[playerID];
                y << (v.P_AngleSin[playerID])
                # (Line 205) trg.Shape_Square(playerID, 1, "60 + 1n Siege", x, y);
                trg.Shape_Square(playerID, 1, "60 + 1n Siege", x, y)
                # (Line 206) trg.Shape_Square(playerID, 1, "50 + 1n Tank", x, y);
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", x, y)
                # (Line 207) trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", x, y);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", x, y)
                # (Line 209) trg.Table_Sin(playerID, 45, 3 * d);
                trg.Table_Sin(playerID, 45, 3 * d)
                # (Line 210) trg.Table_Cos(playerID, 45, 3 * d);
                trg.Table_Cos(playerID, 45, 3 * d)
                # (Line 212) x = v.P_AngleCos[playerID];
                x << (v.P_AngleCos[playerID])
                # (Line 213) y = v.P_AngleSin[playerID];
                y << (v.P_AngleSin[playerID])
                # (Line 215) trg.Shape_Square(playerID, 1, "60 + 1n Siege", x, y);
                trg.Shape_Square(playerID, 1, "60 + 1n Siege", x, y)
                # (Line 216) trg.Shape_Square(playerID, 1, "50 + 1n Tank", x, y);
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", x, y)
                # (Line 217) trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", x, y);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", x, y)
                # (Line 218) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
                # (Line 219) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                # (Line 220) }
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                # (Line 221) if (v.P_LoopMain[playerID] < 8)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] >= 8, neg=True):
                # (Line 222) {
                # (Line 223) trg.Table_Sin(playerID, 45 * v.P_LoopMain[playerID], 2 * d);
                trg.Table_Sin(playerID, 45 * v.P_LoopMain[playerID], 2 * d)
                # (Line 224) trg.Table_Cos(playerID, 45 * v.P_LoopMain[playerID], 2 * d);
                trg.Table_Cos(playerID, 45 * v.P_LoopMain[playerID], 2 * d)
                # (Line 226) x = v.P_AngleCos[playerID];
                x << (v.P_AngleCos[playerID])
                # (Line 227) y = v.P_AngleSin[playerID];
                y << (v.P_AngleSin[playerID])
                # (Line 229) trg.Shape_Dot(playerID, 1, "60 + 1n Dragoon", x, y);
                trg.Shape_Dot(playerID, 1, "60 + 1n Dragoon", x, y)
                # (Line 230) }
                # (Line 232) trg.Table_Sin(playerID, 45 * v.P_LoopMain[playerID], d);
            EUDEndIf()
            trg.Table_Sin(playerID, 45 * v.P_LoopMain[playerID], d)
            # (Line 233) trg.Table_Cos(playerID, 45 * v.P_LoopMain[playerID], d);
            trg.Table_Cos(playerID, 45 * v.P_LoopMain[playerID], d)
            # (Line 235) x = v.P_AngleCos[playerID];
            x << (v.P_AngleCos[playerID])
            # (Line 236) y = v.P_AngleSin[playerID];
            y << (v.P_AngleSin[playerID])
            # (Line 238) trg.Shape_Double(playerID, 1, "40 + 1n Zealot", x, y);
            trg.Shape_Double(playerID, 1, "40 + 1n Zealot", x, y)
            # (Line 239) KillUnitAt(All, "40 + 1n Zealot", "Anywhere", playerID);
            # (Line 241) trg.Table_Sin(playerID, 45 * v.P_LoopMain[playerID], 2 * d);
            DoActions(KillUnitAt(All, "40 + 1n Zealot", "Anywhere", playerID))
            trg.Table_Sin(playerID, 45 * v.P_LoopMain[playerID], 2 * d)
            # (Line 242) trg.Table_Cos(playerID, 45 * v.P_LoopMain[playerID], 2 * d);
            trg.Table_Cos(playerID, 45 * v.P_LoopMain[playerID], 2 * d)
            # (Line 244) x = v.P_AngleCos[playerID];
            x << (v.P_AngleCos[playerID])
            # (Line 245) y = v.P_AngleSin[playerID];
            y << (v.P_AngleSin[playerID])
            # (Line 247) trg.Shape_Double(playerID, 1, "40 + 1n Gantrithor", x, y);
            trg.Shape_Double(playerID, 1, "40 + 1n Gantrithor", x, y)
            # (Line 248) trg.Shape_Double(playerID, 1, "Protoss Dark Archon", x, y);
            trg.Shape_Double(playerID, 1, "Protoss Dark Archon", x, y)
            # (Line 249) KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID);
            # (Line 250) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
            DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID))
            # (Line 252) if (v.P_LoopMain[playerID] % 2 == 0)
            DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
            if EUDIf()(v.P_LoopMain[playerID] % 2 == 0):
                # (Line 253) {
                # (Line 254) trg.Shape_Dot(playerID, 1, "40 + 1n Guardian", 0, 0);
                trg.Shape_Dot(playerID, 1, "40 + 1n Guardian", 0, 0)
                # (Line 255) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
                # (Line 256) }
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID))
                # (Line 258) trg.Main_Wait(80);
            EUDEndIf()
            trg.Main_Wait(80)
            # (Line 260) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 262) if (v.P_LoopMain[playerID] == 47)
            if EUDIf()(v.P_LoopMain[playerID] == 47):
                # (Line 263) {
                # (Line 264) s.CharacterVoice(10);
                s.CharacterVoice(10)
                # (Line 265) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 266) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 267) }
                # (Line 268) }
            EUDEndIf()
            # (Line 270) else if (v.P_CountMain[playerID] == 2)
        if EUDElseIf()(v.P_CountMain[playerID] == 2):
            # (Line 271) {
            # (Line 272) if (v.P_LoopMain[playerID] < 8)
            if EUDIf()(v.P_LoopMain[playerID] >= 8, neg=True):
                # (Line 273) {
                # (Line 274) trg.MoveLoc("60 + 1n Siege", playerID, 0, 0);
                trg.MoveLoc("60 + 1n Siege", playerID, 0, 0)
                # (Line 275) RemoveUnitAt(1, "60 + 1n Siege", "Anywhere", playerID);
                # (Line 276) trg.SkillUnit(playerID, 1, "60 + 1n Archon");
                DoActions(RemoveUnitAt(1, "60 + 1n Siege", "Anywhere", playerID))
                trg.SkillUnit(playerID, 1, "60 + 1n Archon")
                # (Line 277) trg.SkillUnit(playerID, 1, "40 + 1n Guardian");
                trg.SkillUnit(playerID, 1, "40 + 1n Guardian")
                # (Line 278) epic.SkillUnit(playerID, 1, "40 + 1n Drone", 1);
                epic.SkillUnit(playerID, 1, "40 + 1n Drone", 1)
                # (Line 279) epic.SkillUnit(playerID, 1, "40 + 1n Lurker", 0);
                epic.SkillUnit(playerID, 1, "40 + 1n Lurker", 0)
                # (Line 281) trg.MoveLoc("60 + 1n Siege", playerID, 0, 0);
                trg.MoveLoc("60 + 1n Siege", playerID, 0, 0)
                # (Line 282) RemoveUnitAt(1, "60 + 1n Siege", "Anywhere", playerID);
                # (Line 283) trg.SkillUnit(playerID, 1, "60 + 1n Archon");
                DoActions(RemoveUnitAt(1, "60 + 1n Siege", "Anywhere", playerID))
                trg.SkillUnit(playerID, 1, "60 + 1n Archon")
                # (Line 284) trg.SkillUnit(playerID, 1, "40 + 1n Guardian");
                trg.SkillUnit(playerID, 1, "40 + 1n Guardian")
                # (Line 285) epic.SkillUnit(playerID, 1, "40 + 1n Drone", 1);
                epic.SkillUnit(playerID, 1, "40 + 1n Drone", 1)
                # (Line 286) epic.SkillUnit(playerID, 1, "40 + 1n Lurker", 0);
                epic.SkillUnit(playerID, 1, "40 + 1n Lurker", 0)
                # (Line 288) trg.MoveLoc("60 + 1n Dragoon", playerID, 0, 0);
                trg.MoveLoc("60 + 1n Dragoon", playerID, 0, 0)
                # (Line 289) RemoveUnitAt(1, "60 + 1n Dragoon", "Anywhere", playerID);
                # (Line 290) trg.SkillUnit(playerID, 1, "60 + 1n Archon");
                DoActions(RemoveUnitAt(1, "60 + 1n Dragoon", "Anywhere", playerID))
                trg.SkillUnit(playerID, 1, "60 + 1n Archon")
                # (Line 291) trg.SkillUnit(playerID, 1, "40 + 1n Guardian");
                trg.SkillUnit(playerID, 1, "40 + 1n Guardian")
                # (Line 292) epic.SkillUnit(playerID, 1, "40 + 1n Drone", 1);
                epic.SkillUnit(playerID, 1, "40 + 1n Drone", 1)
                # (Line 293) epic.SkillUnit(playerID, 1, "40 + 1n Lurker", 0);
                epic.SkillUnit(playerID, 1, "40 + 1n Lurker", 0)
                # (Line 295) trg.MoveLoc("60 + 1n High Templar", playerID, 0, 0);
                trg.MoveLoc("60 + 1n High Templar", playerID, 0, 0)
                # (Line 296) RemoveUnitAt(1, "60 + 1n High Templar", "Anywhere", playerID);
                # (Line 297) trg.SkillUnit(playerID, 1, "60 + 1n Archon");
                DoActions(RemoveUnitAt(1, "60 + 1n High Templar", "Anywhere", playerID))
                trg.SkillUnit(playerID, 1, "60 + 1n Archon")
                # (Line 298) trg.SkillUnit(playerID, 1, "40 + 1n Guardian");
                trg.SkillUnit(playerID, 1, "40 + 1n Guardian")
                # (Line 299) epic.SkillUnit(playerID, 1, "40 + 1n Drone", 1);
                epic.SkillUnit(playerID, 1, "40 + 1n Drone", 1)
                # (Line 300) epic.SkillUnit(playerID, 1, "40 + 1n Lurker", 0);
                epic.SkillUnit(playerID, 1, "40 + 1n Lurker", 0)
                # (Line 302) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
                # (Line 303) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID))
                # (Line 305) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                # (Line 306) MoveUnit(All, "40 + 1n Drone", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 307) Order("40 + 1n Drone", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveUnit(All, "40 + 1n Drone", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                # (Line 308) }
                DoActions(Order("40 + 1n Drone", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 310) trg.Main_Wait(80);
            EUDEndIf()
            trg.Main_Wait(80)
            # (Line 312) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 314) if (v.P_LoopMain[playerID] == 36)
            if EUDIf()(v.P_LoopMain[playerID] == 36):
                # (Line 315) {
                # (Line 316) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 317) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 318) }
                # (Line 319) }
            EUDEndIf()
            # (Line 320) else if (v.P_CountMain[playerID] == 3)
        if EUDElseIf()(v.P_CountMain[playerID] == 3):
            # (Line 321) {
            # (Line 322) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 323) {
                # (Line 324) for (var i = 0; i < 32; i++)
                i = EUDVariable()
                i << (0)
                if EUDWhile()(i >= 32, neg=True):
                    def _t22():
                        i.__iadd__(1)
                    # (Line 325) {
                    # (Line 326) trg.MoveLoc("40 + 1n Lurker", playerID, 0, 0);
                    trg.MoveLoc("40 + 1n Lurker", playerID, 0, 0)
                    # (Line 327) RemoveUnitAt(1, "40 + 1n Lurker", "Anywhere", playerID);
                    # (Line 328) trg.SkillUnit(playerID, 1, "60 + 1n Danimoth");
                    DoActions(RemoveUnitAt(1, "40 + 1n Lurker", "Anywhere", playerID))
                    trg.SkillUnit(playerID, 1, "60 + 1n Danimoth")
                    # (Line 329) if (i % 2 == 0)
                    if EUDIf()(i % 2 == 0):
                        # (Line 330) trg.SkillUnit(playerID, 1, "Protoss Dark Archon");
                        trg.SkillUnit(playerID, 1, "Protoss Dark Archon")
                        # (Line 331) else
                        # (Line 332) trg.SkillUnit(playerID, 1, "60 + 1n Archon");
                    if EUDElse()():
                        trg.SkillUnit(playerID, 1, "60 + 1n Archon")
                        # (Line 333) }
                    EUDEndIf()
                    # (Line 335) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                    EUDSetContinuePoint()
                    _t22()
                EUDEndWhile()
                # (Line 336) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                # (Line 338) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                # (Line 339) Order("60 + 1n Danimoth", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 340) }
                DoActions(Order("60 + 1n Danimoth", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 341) if (v.P_LoopMain[playerID] == 1)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] == 1):
                # (Line 342) {
                # (Line 343) for (var i = 0; i < 32; i++)
                i = EUDVariable()
                i << (0)
                if EUDWhile()(i >= 32, neg=True):
                    def _t26():
                        i.__iadd__(1)
                    # (Line 344) {
                    # (Line 345) trg.MoveLoc("60 + 1n Danimoth", playerID, 0, 0);
                    trg.MoveLoc("60 + 1n Danimoth", playerID, 0, 0)
                    # (Line 346) RemoveUnitAt(1, "60 + 1n Danimoth", "Anywhere", playerID);
                    # (Line 347) trg.SkillUnit(playerID, 1, "Kakaru (Twilight)");
                    DoActions(RemoveUnitAt(1, "60 + 1n Danimoth", "Anywhere", playerID))
                    trg.SkillUnit(playerID, 1, "Kakaru (Twilight)")
                    # (Line 348) }
                    # (Line 350) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);
                    EUDSetContinuePoint()
                    _t26()
                EUDEndWhile()
                # (Line 351) }
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID))
                # (Line 353) if (v.P_LoopMain[playerID] == 2)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] == 2):
                # (Line 354) {
                # (Line 355) for (var i = 0; i < 32; i++)
                i = EUDVariable()
                i << (0)
                if EUDWhile()(i >= 32, neg=True):
                    def _t29():
                        i.__iadd__(1)
                    # (Line 356) {
                    # (Line 357) trg.MoveLoc("40 + 1n Drone", playerID, 0, 0);
                    trg.MoveLoc("40 + 1n Drone", playerID, 0, 0)
                    # (Line 358) RemoveUnitAt(1, "40 + 1n Drone", "Anywhere", playerID);
                    # (Line 359) if (i % 2 == 0)
                    DoActions(RemoveUnitAt(1, "40 + 1n Drone", "Anywhere", playerID))
                    if EUDIf()(i % 2 == 0):
                        # (Line 360) trg.SkillUnit(playerID, 1, "40 + 1n Mojo");
                        trg.SkillUnit(playerID, 1, "40 + 1n Mojo")
                        # (Line 361) trg.SkillUnit(playerID, 1, "60 + 1n Hydralisk");
                    EUDEndIf()
                    trg.SkillUnit(playerID, 1, "60 + 1n Hydralisk")
                    # (Line 362) }
                    # (Line 364) KillUnitAt(All, "60 + 1n Hydralisk", "Anywhere", playerID);
                    EUDSetContinuePoint()
                    _t29()
                EUDEndWhile()
                # (Line 366) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "60 + 1n Hydralisk", "Anywhere", playerID))
                # (Line 367) Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 368) }
                DoActions(Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 369) if (v.P_LoopMain[playerID] == 3)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] == 3):
                # (Line 370) {
                # (Line 371) for (var i = 0; i < 16; i++)
                i = EUDVariable()
                i << (0)
                if EUDWhile()(i >= 16, neg=True):
                    def _t33():
                        i.__iadd__(1)
                    # (Line 372) {
                    # (Line 373) trg.MoveLoc("40 + 1n Mojo", playerID, 0, 0);
                    trg.MoveLoc("40 + 1n Mojo", playerID, 0, 0)
                    # (Line 374) RemoveUnitAt(1, "40 + 1n Mojo", "Anywhere", playerID);
                    # (Line 375) trg.SkillUnit(playerID, 1, "Kakaru (Twilight)");
                    DoActions(RemoveUnitAt(1, "40 + 1n Mojo", "Anywhere", playerID))
                    trg.SkillUnit(playerID, 1, "Kakaru (Twilight)")
                    # (Line 376) }
                    # (Line 378) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);
                    EUDSetContinuePoint()
                    _t33()
                EUDEndWhile()
                # (Line 379) }
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID))
                # (Line 382) trg.Main_Wait(80);
            EUDEndIf()
            trg.Main_Wait(80)
            # (Line 384) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 386) if (v.P_LoopMain[playerID] == 4)
            if EUDIf()(v.P_LoopMain[playerID] == 4):
                # (Line 387) {
                # (Line 388) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 389) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 390) }
                # (Line 391) }
            EUDEndIf()
            # (Line 392) else if (v.P_CountMain[playerID] == 4)
        if EUDElseIf()(v.P_CountMain[playerID] == 4):
            # (Line 393) {
            # (Line 394) trg.SkillEnd();
            trg.SkillEnd()
            # (Line 395) }
            # (Line 396) }
        EUDEndIf()
        # (Line 397) }
    EUDEndIf()
