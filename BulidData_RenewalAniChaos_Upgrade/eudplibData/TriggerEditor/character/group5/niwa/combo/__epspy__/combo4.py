## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import variable as v;
import variable as v
# (Line 2) import func.trig as trg;
from func import trig as trg
# (Line 3) import func.trigepic as epic;
from func import trigepic as epic
# (Line 4) import func.sound as s;
from func import sound as s
# (Line 6) var x = 0;
x = EUDCreateVariables(1)
_IGVA([x], lambda: [0])
# (Line 7) var y = 0;
y = EUDCreateVariables(1)
_IGVA([y], lambda: [0])
# (Line 9) var d = 75;
d = EUDCreateVariables(1)
_IGVA([d], lambda: [75])
# (Line 11) function main(playerID)
# (Line 12) {
@EUDFunc
def f_main(playerID):
    # (Line 13) MoveUnit(All, "60 + 1n High Templar", playerID, "Anywhere", "[Skill]HoldPosition");
    # (Line 14) MoveUnit(All, "60 + 1n Dragoon", playerID, "Anywhere", "[Skill]HoldPosition");
    DoActions(MoveUnit(All, "60 + 1n High Templar", playerID, "Anywhere", "[Skill]HoldPosition"))
    # (Line 16) trg.Debuff_BanReturn();
    DoActions(MoveUnit(All, "60 + 1n Dragoon", playerID, "Anywhere", "[Skill]HoldPosition"))
    trg.Debuff_BanReturn()
    # (Line 17) trg.Debuff_Stop();
    trg.Debuff_Stop()
    # (Line 19) if (v.P_WaitMain[playerID] == 0)
    if EUDIf()(v.P_WaitMain[playerID] == 0):
        # (Line 20) {
        # (Line 21) if (v.P_CountMain[playerID] == 0)
        if EUDIf()(v.P_CountMain[playerID] == 0):
            # (Line 22) {
            # (Line 23) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 24) {
                # (Line 25) trg.Table_Sin(playerID, 22, d);
                trg.Table_Sin(playerID, 22, d)
                # (Line 26) trg.Table_Cos(playerID, 22, d);
                trg.Table_Cos(playerID, 22, d)
                # (Line 28) x = v.P_AngleCos[playerID];
                x << (v.P_AngleCos[playerID])
                # (Line 29) y = v.P_AngleSin[playerID];
                y << (v.P_AngleSin[playerID])
                # (Line 31) trg.Shape_Square(playerID, 1, "40 + 1n Guardian", x, y);
                trg.Shape_Square(playerID, 1, "40 + 1n Guardian", x, y)
                # (Line 33) trg.Table_Sin(playerID, 67, d);
                trg.Table_Sin(playerID, 67, d)
                # (Line 34) trg.Table_Cos(playerID, 67, d);
                trg.Table_Cos(playerID, 67, d)
                # (Line 36) x = v.P_AngleCos[playerID];
                x << (v.P_AngleCos[playerID])
                # (Line 37) y = v.P_AngleSin[playerID];
                y << (v.P_AngleSin[playerID])
                # (Line 39) trg.Shape_Square(playerID, 1, "40 + 1n Guardian", x, y);
                trg.Shape_Square(playerID, 1, "40 + 1n Guardian", x, y)
                # (Line 40) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
                # (Line 41) }
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID))
                # (Line 42) if (v.P_LoopMain[playerID] == 2)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] == 2):
                # (Line 43) {
                # (Line 44) trg.Table_Sin(playerID, 22, 3 * d);
                trg.Table_Sin(playerID, 22, 3 * d)
                # (Line 45) trg.Table_Cos(playerID, 22, 3 * d);
                trg.Table_Cos(playerID, 22, 3 * d)
                # (Line 47) x = v.P_AngleCos[playerID];
                x << (v.P_AngleCos[playerID])
                # (Line 48) y = v.P_AngleSin[playerID];
                y << (v.P_AngleSin[playerID])
                # (Line 50) trg.Shape_Square(playerID, 1, "60 + 1n Siege", x, y);
                trg.Shape_Square(playerID, 1, "60 + 1n Siege", x, y)
                # (Line 51) trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", x, y);
                trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", x, y)
                # (Line 53) trg.Table_Sin(playerID, 67, 3 * d);
                trg.Table_Sin(playerID, 67, 3 * d)
                # (Line 54) trg.Table_Cos(playerID, 67, 3 * d);
                trg.Table_Cos(playerID, 67, 3 * d)
                # (Line 56) x = v.P_AngleCos[playerID];
                x << (v.P_AngleCos[playerID])
                # (Line 57) y = v.P_AngleSin[playerID];
                y << (v.P_AngleSin[playerID])
                # (Line 59) trg.Shape_Square(playerID, 1, "60 + 1n Siege", x, y);
                trg.Shape_Square(playerID, 1, "60 + 1n Siege", x, y)
                # (Line 60) trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", x, y);
                trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", x, y)
                # (Line 61) KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID);
                # (Line 63) }
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID))
                # (Line 64) if (v.P_LoopMain[playerID] == 4)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] == 4):
                # (Line 65) {
                # (Line 66) trg.Table_Sin(playerID, 22, 2 * d);
                trg.Table_Sin(playerID, 22, 2 * d)
                # (Line 67) trg.Table_Cos(playerID, 22, 2 * d);
                trg.Table_Cos(playerID, 22, 2 * d)
                # (Line 69) x = v.P_AngleCos[playerID];
                x << (v.P_AngleCos[playerID])
                # (Line 70) y = v.P_AngleSin[playerID];
                y << (v.P_AngleSin[playerID])
                # (Line 72) trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", x, y);
                trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", x, y)
                # (Line 74) trg.Table_Sin(playerID, 67, 2 * d);
                trg.Table_Sin(playerID, 67, 2 * d)
                # (Line 75) trg.Table_Cos(playerID, 67, 2 * d);
                trg.Table_Cos(playerID, 67, 2 * d)
                # (Line 77) x = v.P_AngleCos[playerID];
                x << (v.P_AngleCos[playerID])
                # (Line 78) y = v.P_AngleSin[playerID];
                y << (v.P_AngleSin[playerID])
                # (Line 80) trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", x, y);
                trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", x, y)
                # (Line 81) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);
                # (Line 82) }
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID))
                # (Line 83) if (v.P_LoopMain[playerID] < 8)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] >= 8, neg=True):
                # (Line 84) {
                # (Line 85) trg.Table_Sin(playerID, 45 * v.P_LoopMain[playerID], d);
                trg.Table_Sin(playerID, 45 * v.P_LoopMain[playerID], d)
                # (Line 86) trg.Table_Cos(playerID, 45 * v.P_LoopMain[playerID], d);
                trg.Table_Cos(playerID, 45 * v.P_LoopMain[playerID], d)
                # (Line 88) x = v.P_AngleCos[playerID];
                x << (v.P_AngleCos[playerID])
                # (Line 89) y = v.P_AngleSin[playerID];
                y << (v.P_AngleSin[playerID])
                # (Line 91) trg.Shape_Dot(playerID, 1, "60 + 1n Dragoon", x, y);
                trg.Shape_Dot(playerID, 1, "60 + 1n Dragoon", x, y)
                # (Line 92) }
                # (Line 94) trg.Table_Sin(playerID, 45 * v.P_LoopMain[playerID], 2 * d);
            EUDEndIf()
            trg.Table_Sin(playerID, 45 * v.P_LoopMain[playerID], 2 * d)
            # (Line 95) trg.Table_Cos(playerID, 45 * v.P_LoopMain[playerID], 2 * d);
            trg.Table_Cos(playerID, 45 * v.P_LoopMain[playerID], 2 * d)
            # (Line 97) x = v.P_AngleCos[playerID];
            x << (v.P_AngleCos[playerID])
            # (Line 98) y = v.P_AngleSin[playerID];
            y << (v.P_AngleSin[playerID])
            # (Line 100) trg.Shape_Double(playerID, 1, "50 + 1n Battlecruiser", x, y);
            trg.Shape_Double(playerID, 1, "50 + 1n Battlecruiser", x, y)
            # (Line 101) trg.Shape_Double(playerID, 1, "60 + 1n Archon", x, y);
            trg.Shape_Double(playerID, 1, "60 + 1n Archon", x, y)
            # (Line 102) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
            # (Line 103) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
            DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
            # (Line 105) trg.Table_Sin(playerID, 45 * v.P_LoopMain[playerID], d);
            DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
            trg.Table_Sin(playerID, 45 * v.P_LoopMain[playerID], d)
            # (Line 106) trg.Table_Cos(playerID, 45 * v.P_LoopMain[playerID], d);
            trg.Table_Cos(playerID, 45 * v.P_LoopMain[playerID], d)
            # (Line 108) x = v.P_AngleCos[playerID];
            x << (v.P_AngleCos[playerID])
            # (Line 109) y = v.P_AngleSin[playerID];
            y << (v.P_AngleSin[playerID])
            # (Line 111) trg.Shape_Double(playerID, 1, "Kakaru (Twilight)", x, y);
            trg.Shape_Double(playerID, 1, "Kakaru (Twilight)", x, y)
            # (Line 112) trg.Shape_Double(playerID, 1, "Protoss Dark Archon", x, y);
            trg.Shape_Double(playerID, 1, "Protoss Dark Archon", x, y)
            # (Line 113) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);
            # (Line 114) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
            DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID))
            # (Line 116) if (v.P_LoopMain[playerID] % 2 == 0)
            DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
            if EUDIf()(v.P_LoopMain[playerID] % 2 == 0):
                # (Line 117) {
                # (Line 118) trg.Shape_Dot(playerID, 1, "40 + 1n Guardian", 0, 0);
                trg.Shape_Dot(playerID, 1, "40 + 1n Guardian", 0, 0)
                # (Line 119) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
                # (Line 120) }
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID))
                # (Line 122) trg.Main_Wait(80);
            EUDEndIf()
            trg.Main_Wait(80)
            # (Line 124) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 126) if (v.P_LoopMain[playerID] == 60)
            if EUDIf()(v.P_LoopMain[playerID] == 60):
                # (Line 127) {
                # (Line 128) KillUnitAt(All, "60 + 1n Dragoon", "Anywhere", playerID);
                # (Line 130) v.P_CountMain[playerID] += 1;
                DoActions(KillUnitAt(All, "60 + 1n Dragoon", "Anywhere", playerID))
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 131) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 132) }
                # (Line 133) }
            EUDEndIf()
            # (Line 134) else if (v.P_CountMain[playerID] == 1)
        if EUDElseIf()(v.P_CountMain[playerID] == 1):
            # (Line 135) {
            # (Line 136) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 137) {
                # (Line 138) trg.Table_Sin(playerID, 22, d);
                trg.Table_Sin(playerID, 22, d)
                # (Line 139) trg.Table_Cos(playerID, 22, d);
                trg.Table_Cos(playerID, 22, d)
                # (Line 141) x = v.P_AngleCos[playerID];
                x << (v.P_AngleCos[playerID])
                # (Line 142) y = v.P_AngleSin[playerID];
                y << (v.P_AngleSin[playerID])
                # (Line 144) trg.Shape_Square(playerID, 1, "40 + 1n Guardian", x, y);
                trg.Shape_Square(playerID, 1, "40 + 1n Guardian", x, y)
                # (Line 145) trg.Shape_Square(playerID, 1, "60 + 1n High Templar", x, y);
                trg.Shape_Square(playerID, 1, "60 + 1n High Templar", x, y)
                # (Line 147) trg.Table_Sin(playerID, 67, d);
                trg.Table_Sin(playerID, 67, d)
                # (Line 148) trg.Table_Cos(playerID, 67, d);
                trg.Table_Cos(playerID, 67, d)
                # (Line 150) x = v.P_AngleCos[playerID];
                x << (v.P_AngleCos[playerID])
                # (Line 151) y = v.P_AngleSin[playerID];
                y << (v.P_AngleSin[playerID])
                # (Line 153) trg.Shape_Square(playerID, 1, "40 + 1n Guardian", x, y);
                trg.Shape_Square(playerID, 1, "40 + 1n Guardian", x, y)
                # (Line 154) trg.Shape_Square(playerID, 1, "60 + 1n High Templar", x, y);
                trg.Shape_Square(playerID, 1, "60 + 1n High Templar", x, y)
                # (Line 155) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
                # (Line 156) }
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID))
                # (Line 157) if (v.P_LoopMain[playerID] == 2)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] == 2):
                # (Line 158) {
                # (Line 159) trg.Table_Sin(playerID, 22, 3 * d);
                trg.Table_Sin(playerID, 22, 3 * d)
                # (Line 160) trg.Table_Cos(playerID, 22, 3 * d);
                trg.Table_Cos(playerID, 22, 3 * d)
                # (Line 162) x = v.P_AngleCos[playerID];
                x << (v.P_AngleCos[playerID])
                # (Line 163) y = v.P_AngleSin[playerID];
                y << (v.P_AngleSin[playerID])
                # (Line 165) trg.Shape_Square(playerID, 1, "40 + 1n Guardian", x, y);
                trg.Shape_Square(playerID, 1, "40 + 1n Guardian", x, y)
                # (Line 166) trg.Shape_Square(playerID, 1, "60 + 1n Archon", x, y);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", x, y)
                # (Line 168) trg.Table_Sin(playerID, 67, 3 * d);
                trg.Table_Sin(playerID, 67, 3 * d)
                # (Line 169) trg.Table_Cos(playerID, 67, 3 * d);
                trg.Table_Cos(playerID, 67, 3 * d)
                # (Line 171) x = v.P_AngleCos[playerID];
                x << (v.P_AngleCos[playerID])
                # (Line 172) y = v.P_AngleSin[playerID];
                y << (v.P_AngleSin[playerID])
                # (Line 174) trg.Shape_Square(playerID, 1, "40 + 1n Guardian", x, y);
                trg.Shape_Square(playerID, 1, "40 + 1n Guardian", x, y)
                # (Line 175) trg.Shape_Square(playerID, 1, "60 + 1n Archon", x, y);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", x, y)
                # (Line 176) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
                # (Line 177) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID))
                # (Line 178) }
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                # (Line 179) if (v.P_LoopMain[playerID] == 4)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] == 4):
                # (Line 180) {
                # (Line 181) trg.Table_Sin(playerID, 22, d);
                trg.Table_Sin(playerID, 22, d)
                # (Line 182) trg.Table_Cos(playerID, 22, d);
                trg.Table_Cos(playerID, 22, d)
                # (Line 184) x = v.P_AngleCos[playerID];
                x << (v.P_AngleCos[playerID])
                # (Line 185) y = v.P_AngleSin[playerID];
                y << (v.P_AngleSin[playerID])
                # (Line 187) trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", x, y);
                trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", x, y)
                # (Line 189) trg.Table_Sin(playerID, 67, d);
                trg.Table_Sin(playerID, 67, d)
                # (Line 190) trg.Table_Cos(playerID, 67, d);
                trg.Table_Cos(playerID, 67, d)
                # (Line 192) x = v.P_AngleCos[playerID];
                x << (v.P_AngleCos[playerID])
                # (Line 193) y = v.P_AngleSin[playerID];
                y << (v.P_AngleSin[playerID])
                # (Line 195) trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", x, y);
                trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", x, y)
                # (Line 196) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);
                # (Line 198) trg.Table_Sin(playerID, 0, 3 * d);
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID))
                trg.Table_Sin(playerID, 0, 3 * d)
                # (Line 199) trg.Table_Cos(playerID, 0, 3 * d);
                trg.Table_Cos(playerID, 0, 3 * d)
                # (Line 201) x = v.P_AngleCos[playerID];
                x << (v.P_AngleCos[playerID])
                # (Line 202) y = v.P_AngleSin[playerID];
                y << (v.P_AngleSin[playerID])
                # (Line 204) trg.Shape_Square(playerID, 1, "60 + 1n Siege", x, y);
                trg.Shape_Square(playerID, 1, "60 + 1n Siege", x, y)
                # (Line 205) trg.Shape_Square(playerID, 1, "50 + 1n Tank", x, y);
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", x, y)
                # (Line 206) trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", x, y);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", x, y)
                # (Line 208) trg.Table_Sin(playerID, 45, 3 * d);
                trg.Table_Sin(playerID, 45, 3 * d)
                # (Line 209) trg.Table_Cos(playerID, 45, 3 * d);
                trg.Table_Cos(playerID, 45, 3 * d)
                # (Line 211) x = v.P_AngleCos[playerID];
                x << (v.P_AngleCos[playerID])
                # (Line 212) y = v.P_AngleSin[playerID];
                y << (v.P_AngleSin[playerID])
                # (Line 214) trg.Shape_Square(playerID, 1, "60 + 1n Siege", x, y);
                trg.Shape_Square(playerID, 1, "60 + 1n Siege", x, y)
                # (Line 215) trg.Shape_Square(playerID, 1, "50 + 1n Tank", x, y);
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", x, y)
                # (Line 216) trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", x, y);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", x, y)
                # (Line 217) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
                # (Line 218) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                # (Line 219) }
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                # (Line 220) if (v.P_LoopMain[playerID] < 8)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] >= 8, neg=True):
                # (Line 221) {
                # (Line 222) trg.Table_Sin(playerID, 45 * v.P_LoopMain[playerID], 2 * d);
                trg.Table_Sin(playerID, 45 * v.P_LoopMain[playerID], 2 * d)
                # (Line 223) trg.Table_Cos(playerID, 45 * v.P_LoopMain[playerID], 2 * d);
                trg.Table_Cos(playerID, 45 * v.P_LoopMain[playerID], 2 * d)
                # (Line 225) x = v.P_AngleCos[playerID];
                x << (v.P_AngleCos[playerID])
                # (Line 226) y = v.P_AngleSin[playerID];
                y << (v.P_AngleSin[playerID])
                # (Line 228) trg.Shape_Dot(playerID, 1, "60 + 1n Dragoon", x, y);
                trg.Shape_Dot(playerID, 1, "60 + 1n Dragoon", x, y)
                # (Line 229) }
                # (Line 231) trg.Table_Sin(playerID, 45 * v.P_LoopMain[playerID], d);
            EUDEndIf()
            trg.Table_Sin(playerID, 45 * v.P_LoopMain[playerID], d)
            # (Line 232) trg.Table_Cos(playerID, 45 * v.P_LoopMain[playerID], d);
            trg.Table_Cos(playerID, 45 * v.P_LoopMain[playerID], d)
            # (Line 234) x = v.P_AngleCos[playerID];
            x << (v.P_AngleCos[playerID])
            # (Line 235) y = v.P_AngleSin[playerID];
            y << (v.P_AngleSin[playerID])
            # (Line 237) trg.Shape_Double(playerID, 1, "40 + 1n Zealot", x, y);
            trg.Shape_Double(playerID, 1, "40 + 1n Zealot", x, y)
            # (Line 238) KillUnitAt(All, "40 + 1n Zealot", "Anywhere", playerID);
            # (Line 240) trg.Table_Sin(playerID, 45 * v.P_LoopMain[playerID], 2 * d);
            DoActions(KillUnitAt(All, "40 + 1n Zealot", "Anywhere", playerID))
            trg.Table_Sin(playerID, 45 * v.P_LoopMain[playerID], 2 * d)
            # (Line 241) trg.Table_Cos(playerID, 45 * v.P_LoopMain[playerID], 2 * d);
            trg.Table_Cos(playerID, 45 * v.P_LoopMain[playerID], 2 * d)
            # (Line 243) x = v.P_AngleCos[playerID];
            x << (v.P_AngleCos[playerID])
            # (Line 244) y = v.P_AngleSin[playerID];
            y << (v.P_AngleSin[playerID])
            # (Line 246) trg.Shape_Double(playerID, 1, "40 + 1n Gantrithor", x, y);
            trg.Shape_Double(playerID, 1, "40 + 1n Gantrithor", x, y)
            # (Line 247) trg.Shape_Double(playerID, 1, "Protoss Dark Archon", x, y);
            trg.Shape_Double(playerID, 1, "Protoss Dark Archon", x, y)
            # (Line 248) KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID);
            # (Line 249) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
            DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID))
            # (Line 251) if (v.P_LoopMain[playerID] % 2 == 0)
            DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
            if EUDIf()(v.P_LoopMain[playerID] % 2 == 0):
                # (Line 252) {
                # (Line 253) trg.Shape_Dot(playerID, 1, "40 + 1n Guardian", 0, 0);
                trg.Shape_Dot(playerID, 1, "40 + 1n Guardian", 0, 0)
                # (Line 254) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
                # (Line 255) }
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID))
                # (Line 257) trg.Main_Wait(80);
            EUDEndIf()
            trg.Main_Wait(80)
            # (Line 259) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 261) if (v.P_LoopMain[playerID] == 47)
            if EUDIf()(v.P_LoopMain[playerID] == 47):
                # (Line 262) {
                # (Line 263) s.CharacterVoice(10);
                s.CharacterVoice(10)
                # (Line 264) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 265) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 266) }
                # (Line 267) }
            EUDEndIf()
            # (Line 269) else if (v.P_CountMain[playerID] == 2)
        if EUDElseIf()(v.P_CountMain[playerID] == 2):
            # (Line 270) {
            # (Line 271) if (v.P_LoopMain[playerID] < 8)
            if EUDIf()(v.P_LoopMain[playerID] >= 8, neg=True):
                # (Line 272) {
                # (Line 273) trg.MoveLoc("60 + 1n Siege", playerID, 0, 0);
                trg.MoveLoc("60 + 1n Siege", playerID, 0, 0)
                # (Line 274) RemoveUnitAt(1, "60 + 1n Siege", "Anywhere", playerID);
                # (Line 275) trg.SkillUnit(playerID, 1, "60 + 1n Archon");
                DoActions(RemoveUnitAt(1, "60 + 1n Siege", "Anywhere", playerID))
                trg.SkillUnit(playerID, 1, "60 + 1n Archon")
                # (Line 276) trg.SkillUnit(playerID, 1, "40 + 1n Guardian");
                trg.SkillUnit(playerID, 1, "40 + 1n Guardian")
                # (Line 277) epic.SkillUnit(playerID, 1, "40 + 1n Drone", 1);
                epic.SkillUnit(playerID, 1, "40 + 1n Drone", 1)
                # (Line 278) epic.SkillUnit(playerID, 1, "40 + 1n Lurker", 0);
                epic.SkillUnit(playerID, 1, "40 + 1n Lurker", 0)
                # (Line 280) trg.MoveLoc("60 + 1n Siege", playerID, 0, 0);
                trg.MoveLoc("60 + 1n Siege", playerID, 0, 0)
                # (Line 281) RemoveUnitAt(1, "60 + 1n Siege", "Anywhere", playerID);
                # (Line 282) trg.SkillUnit(playerID, 1, "60 + 1n Archon");
                DoActions(RemoveUnitAt(1, "60 + 1n Siege", "Anywhere", playerID))
                trg.SkillUnit(playerID, 1, "60 + 1n Archon")
                # (Line 283) trg.SkillUnit(playerID, 1, "40 + 1n Guardian");
                trg.SkillUnit(playerID, 1, "40 + 1n Guardian")
                # (Line 284) epic.SkillUnit(playerID, 1, "40 + 1n Drone", 1);
                epic.SkillUnit(playerID, 1, "40 + 1n Drone", 1)
                # (Line 285) epic.SkillUnit(playerID, 1, "40 + 1n Lurker", 0);
                epic.SkillUnit(playerID, 1, "40 + 1n Lurker", 0)
                # (Line 287) trg.MoveLoc("60 + 1n Dragoon", playerID, 0, 0);
                trg.MoveLoc("60 + 1n Dragoon", playerID, 0, 0)
                # (Line 288) RemoveUnitAt(1, "60 + 1n Dragoon", "Anywhere", playerID);
                # (Line 289) trg.SkillUnit(playerID, 1, "60 + 1n Archon");
                DoActions(RemoveUnitAt(1, "60 + 1n Dragoon", "Anywhere", playerID))
                trg.SkillUnit(playerID, 1, "60 + 1n Archon")
                # (Line 290) trg.SkillUnit(playerID, 1, "40 + 1n Guardian");
                trg.SkillUnit(playerID, 1, "40 + 1n Guardian")
                # (Line 291) epic.SkillUnit(playerID, 1, "40 + 1n Drone", 1);
                epic.SkillUnit(playerID, 1, "40 + 1n Drone", 1)
                # (Line 292) epic.SkillUnit(playerID, 1, "40 + 1n Lurker", 0);
                epic.SkillUnit(playerID, 1, "40 + 1n Lurker", 0)
                # (Line 294) trg.MoveLoc("60 + 1n High Templar", playerID, 0, 0);
                trg.MoveLoc("60 + 1n High Templar", playerID, 0, 0)
                # (Line 295) RemoveUnitAt(1, "60 + 1n High Templar", "Anywhere", playerID);
                # (Line 296) trg.SkillUnit(playerID, 1, "60 + 1n Archon");
                DoActions(RemoveUnitAt(1, "60 + 1n High Templar", "Anywhere", playerID))
                trg.SkillUnit(playerID, 1, "60 + 1n Archon")
                # (Line 297) trg.SkillUnit(playerID, 1, "40 + 1n Guardian");
                trg.SkillUnit(playerID, 1, "40 + 1n Guardian")
                # (Line 298) epic.SkillUnit(playerID, 1, "40 + 1n Drone", 1);
                epic.SkillUnit(playerID, 1, "40 + 1n Drone", 1)
                # (Line 299) epic.SkillUnit(playerID, 1, "40 + 1n Lurker", 0);
                epic.SkillUnit(playerID, 1, "40 + 1n Lurker", 0)
                # (Line 301) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
                # (Line 302) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID))
                # (Line 304) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                # (Line 305) MoveUnit(All, "40 + 1n Drone", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 306) Order("40 + 1n Drone", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveUnit(All, "40 + 1n Drone", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                # (Line 307) }
                DoActions(Order("40 + 1n Drone", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 309) trg.Main_Wait(80);
            EUDEndIf()
            trg.Main_Wait(80)
            # (Line 311) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 313) if (v.P_LoopMain[playerID] == 36)
            if EUDIf()(v.P_LoopMain[playerID] == 36):
                # (Line 314) {
                # (Line 315) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 316) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 317) }
                # (Line 318) }
            EUDEndIf()
            # (Line 319) else if (v.P_CountMain[playerID] == 3)
        if EUDElseIf()(v.P_CountMain[playerID] == 3):
            # (Line 320) {
            # (Line 321) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 322) {
                # (Line 323) for (var i = 0; i < 32; i++)
                i = EUDVariable()
                i << (0)
                if EUDWhile()(i >= 32, neg=True):
                    def _t22():
                        i.__iadd__(1)
                    # (Line 324) {
                    # (Line 325) trg.MoveLoc("40 + 1n Lurker", playerID, 0, 0);
                    trg.MoveLoc("40 + 1n Lurker", playerID, 0, 0)
                    # (Line 326) RemoveUnitAt(1, "40 + 1n Lurker", "Anywhere", playerID);
                    # (Line 327) trg.SkillUnit(playerID, 1, "60 + 1n Danimoth");
                    DoActions(RemoveUnitAt(1, "40 + 1n Lurker", "Anywhere", playerID))
                    trg.SkillUnit(playerID, 1, "60 + 1n Danimoth")
                    # (Line 328) if (i % 2 == 0)
                    if EUDIf()(i % 2 == 0):
                        # (Line 329) trg.SkillUnit(playerID, 1, "Protoss Dark Archon");
                        trg.SkillUnit(playerID, 1, "Protoss Dark Archon")
                        # (Line 330) else
                        # (Line 331) trg.SkillUnit(playerID, 1, "60 + 1n Archon");
                    if EUDElse()():
                        trg.SkillUnit(playerID, 1, "60 + 1n Archon")
                        # (Line 332) }
                    EUDEndIf()
                    # (Line 334) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                    EUDSetContinuePoint()
                    _t22()
                EUDEndWhile()
                # (Line 335) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                # (Line 337) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                # (Line 338) Order("60 + 1n Danimoth", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 339) }
                DoActions(Order("60 + 1n Danimoth", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 340) if (v.P_LoopMain[playerID] == 1)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] == 1):
                # (Line 341) {
                # (Line 342) for (var i = 0; i < 32; i++)
                i = EUDVariable()
                i << (0)
                if EUDWhile()(i >= 32, neg=True):
                    def _t26():
                        i.__iadd__(1)
                    # (Line 343) {
                    # (Line 344) trg.MoveLoc("60 + 1n Danimoth", playerID, 0, 0);
                    trg.MoveLoc("60 + 1n Danimoth", playerID, 0, 0)
                    # (Line 345) RemoveUnitAt(1, "60 + 1n Danimoth", "Anywhere", playerID);
                    # (Line 346) trg.SkillUnit(playerID, 1, "Kakaru (Twilight)");
                    DoActions(RemoveUnitAt(1, "60 + 1n Danimoth", "Anywhere", playerID))
                    trg.SkillUnit(playerID, 1, "Kakaru (Twilight)")
                    # (Line 347) }
                    # (Line 349) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);
                    EUDSetContinuePoint()
                    _t26()
                EUDEndWhile()
                # (Line 350) }
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID))
                # (Line 352) if (v.P_LoopMain[playerID] == 2)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] == 2):
                # (Line 353) {
                # (Line 354) for (var i = 0; i < 32; i++)
                i = EUDVariable()
                i << (0)
                if EUDWhile()(i >= 32, neg=True):
                    def _t29():
                        i.__iadd__(1)
                    # (Line 355) {
                    # (Line 356) trg.MoveLoc("40 + 1n Drone", playerID, 0, 0);
                    trg.MoveLoc("40 + 1n Drone", playerID, 0, 0)
                    # (Line 357) RemoveUnitAt(1, "40 + 1n Drone", "Anywhere", playerID);
                    # (Line 358) if (i % 2 == 0)
                    DoActions(RemoveUnitAt(1, "40 + 1n Drone", "Anywhere", playerID))
                    if EUDIf()(i % 2 == 0):
                        # (Line 359) trg.SkillUnit(playerID, 1, "40 + 1n Mojo");
                        trg.SkillUnit(playerID, 1, "40 + 1n Mojo")
                        # (Line 360) trg.SkillUnit(playerID, 1, "60 + 1n Hydralisk");
                    EUDEndIf()
                    trg.SkillUnit(playerID, 1, "60 + 1n Hydralisk")
                    # (Line 361) }
                    # (Line 363) KillUnitAt(All, "60 + 1n Hydralisk", "Anywhere", playerID);
                    EUDSetContinuePoint()
                    _t29()
                EUDEndWhile()
                # (Line 365) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "60 + 1n Hydralisk", "Anywhere", playerID))
                # (Line 366) Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 367) }
                DoActions(Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 368) if (v.P_LoopMain[playerID] == 3)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] == 3):
                # (Line 369) {
                # (Line 370) for (var i = 0; i < 16; i++)
                i = EUDVariable()
                i << (0)
                if EUDWhile()(i >= 16, neg=True):
                    def _t33():
                        i.__iadd__(1)
                    # (Line 371) {
                    # (Line 372) trg.MoveLoc("40 + 1n Mojo", playerID, 0, 0);
                    trg.MoveLoc("40 + 1n Mojo", playerID, 0, 0)
                    # (Line 373) RemoveUnitAt(1, "40 + 1n Mojo", "Anywhere", playerID);
                    # (Line 374) trg.SkillUnit(playerID, 1, "Kakaru (Twilight)");
                    DoActions(RemoveUnitAt(1, "40 + 1n Mojo", "Anywhere", playerID))
                    trg.SkillUnit(playerID, 1, "Kakaru (Twilight)")
                    # (Line 375) }
                    # (Line 377) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);
                    EUDSetContinuePoint()
                    _t33()
                EUDEndWhile()
                # (Line 378) }
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID))
                # (Line 381) trg.Main_Wait(80);
            EUDEndIf()
            trg.Main_Wait(80)
            # (Line 383) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 385) if (v.P_LoopMain[playerID] == 4)
            if EUDIf()(v.P_LoopMain[playerID] == 4):
                # (Line 386) {
                # (Line 387) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 388) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 389) }
                # (Line 390) }
            EUDEndIf()
            # (Line 391) else if (v.P_CountMain[playerID] == 4)
        if EUDElseIf()(v.P_CountMain[playerID] == 4):
            # (Line 392) {
            # (Line 393) trg.SkillEnd();
            trg.SkillEnd()
            # (Line 394) }
            # (Line 395) }
        EUDEndIf()
        # (Line 396) }
    EUDEndIf()
