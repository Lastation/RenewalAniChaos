## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import PluginVariables as msqcvar;
import PluginVariables as msqcvar
# (Line 2) import variable as v;
import variable as v
# (Line 3) import func.trig as trg;
from func import trig as trg
# (Line 4) import func.trigadv as adv;
from func import trigadv as adv
# (Line 5) import func.sound as s;
from func import sound as s
# (Line 7) function EdgeShapeAt(playerID : TrgPlayer, count, Unit : TrgUnit, degree, n, interval, x, y);
# (Line 9) function main(playerID)
# (Line 10) {
@EUDFunc
def f_main(playerID):
    # (Line 11) trg.Debuff_BanReturn();
    trg.Debuff_BanReturn()
    # (Line 13) if (v.P_WaitMain[playerID] == 0)
    if EUDIf()(v.P_WaitMain[playerID] == 0):
        # (Line 14) {
        # (Line 15) if (v.P_CountMain[playerID] == 0)
        if EUDIf()(v.P_CountMain[playerID] == 0):
            # (Line 16) {
            # (Line 17) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 18) {
                # (Line 19) SetSwitch("ComputerAlliy", Set);
                # (Line 20) SetAllianceStatus(P1, Ally);
                DoActions(SetSwitch("ComputerAlliy", Set))
                # (Line 21) SetAllianceStatus(P2, Ally);
                DoActions(SetAllianceStatus(P1, Ally))
                # (Line 22) SetAllianceStatus(P3, Ally);
                DoActions(SetAllianceStatus(P2, Ally))
                # (Line 23) SetAllianceStatus(P4, Ally);
                DoActions(SetAllianceStatus(P3, Ally))
                # (Line 24) SetAllianceStatus(P5, Ally);
                DoActions(SetAllianceStatus(P4, Ally))
                # (Line 25) SetAllianceStatus(P6, Ally);
                DoActions(SetAllianceStatus(P5, Ally))
                # (Line 26) }
                DoActions(SetAllianceStatus(P6, Ally))
                # (Line 28) if (v.P_LoopMain[playerID] < 10)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] >= 10, neg=True):
                # (Line 29) {
                # (Line 30) trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", 100, 100);
                trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", 100, 100)
                # (Line 31) trg.Shape_Square(playerID, 1, "60 + 1n Archon", 100, 100);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", 100, 100)
                # (Line 32) KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID);
                # (Line 33) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID))
                # (Line 34) }
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                # (Line 36) trg.Main_Wait(80);
            EUDEndIf()
            trg.Main_Wait(80)
            # (Line 38) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 40) if (v.P_LoopMain[playerID] == 10)
            if EUDIf()(v.P_LoopMain[playerID] == 10):
                # (Line 41) {
                # (Line 42) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 43) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 44) }
                # (Line 45) }
            EUDEndIf()
            # (Line 46) else if (v.P_CountMain[playerID] == 1)
        if EUDElseIf()(v.P_CountMain[playerID] == 1):
            # (Line 47) {
            # (Line 48) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 49) {
                # (Line 50) EdgeShapeAt(playerID, 1, "Target", 22, 3, 32, 100, 100);
                EdgeShapeAt(playerID, 1, "Target", 22, 3, 32, 100, 100)
                # (Line 51) trg.Shape_Square(playerID, 1, "60 + 1n Archon", 100, 100);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", 100, 100)
                # (Line 52) KillUnitAt(All, "Target", "Anywhere", playerID);
                # (Line 53) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "Target", "Anywhere", playerID))
                # (Line 54) }
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                # (Line 55) if (v.P_LoopMain[playerID] == 1)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] == 1):
                # (Line 56) {
                # (Line 57) EdgeShapeAt(playerID, 1, "Kakaru (Twilight)", 22, 3, 32, 100, 100);
                EdgeShapeAt(playerID, 1, "Kakaru (Twilight)", 22, 3, 32, 100, 100)
                # (Line 58) trg.Shape_Square(playerID, 1, "60 + 1n Archon", 100, 100);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", 100, 100)
                # (Line 59) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);
                # (Line 60) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID))
                # (Line 61) }
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                # (Line 63) trg.Main_Wait(80);
            EUDEndIf()
            trg.Main_Wait(80)
            # (Line 65) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 67) if (v.P_LoopMain[playerID] == 5)
            if EUDIf()(v.P_LoopMain[playerID] == 5):
                # (Line 68) {
                # (Line 69) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 70) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 71) }
                # (Line 72) }
            EUDEndIf()
            # (Line 73) else if (v.P_CountMain[playerID] == 2)
        if EUDElseIf()(v.P_CountMain[playerID] == 2):
            # (Line 74) {
            # (Line 75) if (v.P_LoopMain[playerID] < 6)
            if EUDIf()(v.P_LoopMain[playerID] >= 6, neg=True):
                # (Line 76) {
                # (Line 77) trg.Shape_Edge(playerID, 1, "40 + 1n Gantrithor", 0, 1 + 2 * v.P_LoopMain[playerID], 50 * v.P_LoopMain[playerID]);
                trg.Shape_Edge(playerID, 1, "40 + 1n Gantrithor", 0, 1 + 2 * v.P_LoopMain[playerID], 50 * v.P_LoopMain[playerID])
                # (Line 78) trg.Shape_Edge(playerID, 1, "60 + 1n Archon", 0, 1 + 2 * v.P_LoopMain[playerID], 50 * v.P_LoopMain[playerID]);
                trg.Shape_Edge(playerID, 1, "60 + 1n Archon", 0, 1 + 2 * v.P_LoopMain[playerID], 50 * v.P_LoopMain[playerID])
                # (Line 79) KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID);
                # (Line 80) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID))
                # (Line 81) }
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                # (Line 82) if (v.P_LoopMain[playerID] == 5)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] == 5):
                # (Line 83) {
                # (Line 84) for (var i = 0; i < 3; i++)
                i = EUDVariable()
                i << (0)
                if EUDWhile()(i >= 3, neg=True):
                    def _t14():
                        i.__iadd__(1)
                    # (Line 85) {
                    # (Line 86) var x = -0 - 100 * i;
                    x = EUDVariable()
                    x << (-0 - 100 * i)
                    # (Line 87) var y = 300 - 100 * i;
                    y = EUDVariable()
                    y << (300 - 100 * i)
                    # (Line 89) EdgeShapeAt(playerID, 1, "60 + 1n Siege", 0, 3, 50, x, y);
                    EdgeShapeAt(playerID, 1, "60 + 1n Siege", 0, 3, 50, x, y)
                    # (Line 90) }
                    # (Line 91) }
                    EUDSetContinuePoint()
                    _t14()
                EUDEndWhile()
                # (Line 92) trg.Main_Wait(80);
            EUDEndIf()
            trg.Main_Wait(80)
            # (Line 94) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 96) if (v.P_LoopMain[playerID] == 15)
            if EUDIf()(v.P_LoopMain[playerID] == 15):
                # (Line 97) {
                # (Line 98) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 99) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 100) }
                # (Line 101) }
            EUDEndIf()
            # (Line 102) else if (v.P_CountMain[playerID] == 3)
        if EUDElseIf()(v.P_CountMain[playerID] == 3):
            # (Line 103) {
            # (Line 104) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
            # (Line 106) if (v.P_LoopMain[playerID] < 6)
            DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
            if EUDIf()(v.P_LoopMain[playerID] >= 6, neg=True):
                # (Line 107) {
                # (Line 108) var x = -50 - 50 * v.P_LoopMain[playerID];
                x = EUDVariable()
                x << (-50 - 50 * v.P_LoopMain[playerID])
                # (Line 109) var y = 250 - 50 * v.P_LoopMain[playerID];
                y = EUDVariable()
                y << (250 - 50 * v.P_LoopMain[playerID])
                # (Line 111) EdgeShapeAt(playerID, 1, "50 + 1n Battlecruiser", 0, 3, 50, x, y);
                EdgeShapeAt(playerID, 1, "50 + 1n Battlecruiser", 0, 3, 50, x, y)
                # (Line 112) EdgeShapeAt(playerID, 1, "50 + 1n Tank", 0, 3, 50, x, y);
                EdgeShapeAt(playerID, 1, "50 + 1n Tank", 0, 3, 50, x, y)
                # (Line 114) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
                # (Line 116) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                # (Line 117) Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 118) }
                DoActions(Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 120) trg.Main_Wait(80);
            EUDEndIf()
            trg.Main_Wait(80)
            # (Line 122) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 124) if (v.P_LoopMain[playerID] == 11)
            if EUDIf()(v.P_LoopMain[playerID] == 11):
                # (Line 125) {
                # (Line 126) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 127) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 128) }
                # (Line 129) }
            EUDEndIf()
            # (Line 130) else if (v.P_CountMain[playerID] == 4)
        if EUDElseIf()(v.P_CountMain[playerID] == 4):
            # (Line 131) {
            # (Line 132) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 133) {
                # (Line 134) for (var i = 0; i < 3; i++)
                i = EUDVariable()
                i << (0)
                if EUDWhile()(i >= 3, neg=True):
                    def _t22():
                        i.__iadd__(1)
                    # (Line 135) {
                    # (Line 136) var x = -0 - 100 * i;
                    x = EUDVariable()
                    x << (-0 - 100 * i)
                    # (Line 137) var y = 300 - 100 * i;
                    y = EUDVariable()
                    y << (300 - 100 * i)
                    # (Line 139) EdgeShapeAt(playerID, 1, "40 + 1n Gantrithor", 0, 3, 50, x, y);
                    EdgeShapeAt(playerID, 1, "40 + 1n Gantrithor", 0, 3, 50, x, y)
                    # (Line 140) EdgeShapeAt(playerID, 1, "60 + 1n Hydralisk", 0, 3, 50, x, y);
                    EdgeShapeAt(playerID, 1, "60 + 1n Hydralisk", 0, 3, 50, x, y)
                    # (Line 141) EdgeShapeAt(playerID, 1, "60 + 1n Archon", 0, 3, 50, x, y);
                    EdgeShapeAt(playerID, 1, "60 + 1n Archon", 0, 3, 50, x, y)
                    # (Line 142) }
                    # (Line 144) KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID);
                    EUDSetContinuePoint()
                    _t22()
                EUDEndWhile()
                # (Line 145) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID))
                # (Line 147) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                # (Line 148) MoveUnit(All, "60 + 1n Hydralisk", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 149) Order("60 + 1n Hydralisk", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveUnit(All, "60 + 1n Hydralisk", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                # (Line 150) }
                DoActions(Order("60 + 1n Hydralisk", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 151) if (v.P_LoopMain[playerID] == 2)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] == 2):
                # (Line 152) {
                # (Line 153) for (var i = 0; i < 3; i++)
                i = EUDVariable()
                i << (0)
                if EUDWhile()(i >= 3, neg=True):
                    def _t25():
                        i.__iadd__(1)
                    # (Line 154) {
                    # (Line 155) var x = -0 - 100 * i;
                    x = EUDVariable()
                    x << (-0 - 100 * i)
                    # (Line 156) var y = 300 - 100 * i;
                    y = EUDVariable()
                    y << (300 - 100 * i)
                    # (Line 158) EdgeShapeAt(playerID, 1, "80 + 1n Artanis", 0, 3, 50, x, y);
                    EdgeShapeAt(playerID, 1, "80 + 1n Artanis", 0, 3, 50, x, y)
                    # (Line 159) EdgeShapeAt(playerID, 1, "60 + 1n Archon", 0, 3, 50, x, y);
                    EdgeShapeAt(playerID, 1, "60 + 1n Archon", 0, 3, 50, x, y)
                    # (Line 160) }
                    # (Line 161) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                    EUDSetContinuePoint()
                    _t25()
                EUDEndWhile()
                # (Line 162) Order("80 + 1n Artanis", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 163) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                DoActions(Order("80 + 1n Artanis", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 164) }
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                # (Line 165) if (v.P_LoopMain[playerID] == 4)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] == 4):
                # (Line 166) {
                # (Line 167) RemoveUnitAt(All, "80 + 1n Artanis", "Anywhere", playerID);
                # (Line 168) for (var i = 0; i < 3; i++)
                DoActions(RemoveUnitAt(All, "80 + 1n Artanis", "Anywhere", playerID))
                i = EUDVariable()
                i << (0)
                if EUDWhile()(i >= 3, neg=True):
                    def _t28():
                        i.__iadd__(1)
                    # (Line 169) {
                    # (Line 170) var x = -0 - 100 * i;
                    x = EUDVariable()
                    x << (-0 - 100 * i)
                    # (Line 171) var y = 300 - 100 * i;
                    y = EUDVariable()
                    y << (300 - 100 * i)
                    # (Line 173) EdgeShapeAt(playerID, 1, "40 + 1n Gantrithor", 0, 3, 50, x, y);
                    EdgeShapeAt(playerID, 1, "40 + 1n Gantrithor", 0, 3, 50, x, y)
                    # (Line 174) EdgeShapeAt(playerID, 1, "60 + 1n Archon", 0, 3, 50, x, y);
                    EdgeShapeAt(playerID, 1, "60 + 1n Archon", 0, 3, 50, x, y)
                    # (Line 175) }
                    # (Line 177) KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID);
                    EUDSetContinuePoint()
                    _t28()
                EUDEndWhile()
                # (Line 178) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID))
                # (Line 179) }
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                # (Line 180) if (v.P_LoopMain[playerID] == 6)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] == 6):
                # (Line 181) {
                # (Line 182) for (var i = 0; i < 3; i++)
                i = EUDVariable()
                i << (0)
                if EUDWhile()(i >= 3, neg=True):
                    def _t31():
                        i.__iadd__(1)
                    # (Line 183) {
                    # (Line 184) var x = -0 - 100 * i;
                    x = EUDVariable()
                    x << (-0 - 100 * i)
                    # (Line 185) var y = 300 - 100 * i;
                    y = EUDVariable()
                    y << (300 - 100 * i)
                    # (Line 187) EdgeShapeAt(playerID, 1, "80 + 1n Artanis", 0, 3, 50, x, y);
                    EdgeShapeAt(playerID, 1, "80 + 1n Artanis", 0, 3, 50, x, y)
                    # (Line 188) EdgeShapeAt(playerID, 1, "60 + 1n Archon", 0, 3, 50, x, y);
                    EdgeShapeAt(playerID, 1, "60 + 1n Archon", 0, 3, 50, x, y)
                    # (Line 189) }
                    # (Line 190) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                    EUDSetContinuePoint()
                    _t31()
                EUDEndWhile()
                # (Line 191) Order("80 + 1n Artanis", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 192) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                DoActions(Order("80 + 1n Artanis", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 193) }
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                # (Line 194) if (v.P_LoopMain[playerID] == 8)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] == 8):
                # (Line 195) {
                # (Line 196) RemoveUnitAt(All, "80 + 1n Artanis", "Anywhere", playerID);
                # (Line 197) for (var i = 0; i < 3; i++)
                DoActions(RemoveUnitAt(All, "80 + 1n Artanis", "Anywhere", playerID))
                i = EUDVariable()
                i << (0)
                if EUDWhile()(i >= 3, neg=True):
                    def _t34():
                        i.__iadd__(1)
                    # (Line 198) {
                    # (Line 199) var x = -0 - 100 * i;
                    x = EUDVariable()
                    x << (-0 - 100 * i)
                    # (Line 200) var y = 300 - 100 * i;
                    y = EUDVariable()
                    y << (300 - 100 * i)
                    # (Line 202) EdgeShapeAt(playerID, 1, "Kakaru (Twilight)", 0, 3, 50, x, y);
                    EdgeShapeAt(playerID, 1, "Kakaru (Twilight)", 0, 3, 50, x, y)
                    # (Line 203) }
                    # (Line 204) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);
                    EUDSetContinuePoint()
                    _t34()
                EUDEndWhile()
                # (Line 205) }
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID))
                # (Line 208) trg.Main_Wait(80);
            EUDEndIf()
            trg.Main_Wait(80)
            # (Line 210) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 212) if (v.P_LoopMain[playerID] == 16)
            if EUDIf()(v.P_LoopMain[playerID] == 16):
                # (Line 213) {
                # (Line 214) SetSwitch("ComputerAlliy", Clear);
                # (Line 216) if (playerID < 3)
                DoActions(SetSwitch("ComputerAlliy", Clear))
                if EUDIf()(playerID >= 3, neg=True):
                    # (Line 217) {
                    # (Line 218) SetAllianceStatus(P4, Enemy);
                    # (Line 219) SetAllianceStatus(P5, Enemy);
                    DoActions(SetAllianceStatus(P4, Enemy))
                    # (Line 220) SetAllianceStatus(P6, Enemy);
                    DoActions(SetAllianceStatus(P5, Enemy))
                    # (Line 221) }
                    DoActions(SetAllianceStatus(P6, Enemy))
                    # (Line 222) else if (playerID >= 3)
                if EUDElseIf()(playerID >= 3):
                    # (Line 223) {
                    # (Line 224) SetAllianceStatus(P1, Enemy);
                    # (Line 225) SetAllianceStatus(P2, Enemy);
                    DoActions(SetAllianceStatus(P1, Enemy))
                    # (Line 226) SetAllianceStatus(P3, Enemy);
                    DoActions(SetAllianceStatus(P2, Enemy))
                    # (Line 227) }
                    DoActions(SetAllianceStatus(P3, Enemy))
                    # (Line 229) v.P_CountMain[playerID] += 1;
                EUDEndIf()
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 230) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 231) }
                # (Line 232) }
            EUDEndIf()
            # (Line 233) else if (v.P_CountMain[playerID] == 5)
        if EUDElseIf()(v.P_CountMain[playerID] == 5):
            # (Line 234) {
            # (Line 235) if (Bring(playerID, AtLeast, 2, "Protoss Arbiter", "[Skill]UseSkill")
            _t39 = EUDIf()
            # (Line 236) && v.P_UltimateGauge[playerID] >= v.P_Ultimate2[playerID])
            if _t39(EUDSCAnd()(Bring(playerID, AtLeast, 2, "Protoss Arbiter", "[Skill]UseSkill"))(v.P_UltimateGauge[playerID] >= v.P_Ultimate2[playerID])()):
                # (Line 237) {
                # (Line 238) s.CharacterVoice(3);
                s.CharacterVoice(3)
                # (Line 239) v.P_SkillDelay[playerID] = 0;
                _ARRW(v.P_SkillDelay, playerID) << (0)
                # (Line 240) v.P_CountMain[playerID] = 0;
                _ARRW(v.P_CountMain, playerID) << (0)
                # (Line 241) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 242) v.P_Step[playerID] = 320;
                _ARRW(v.P_Step, playerID) << (320)
                # (Line 243) SetDeaths(playerID, Subtract, v.P_Ultimate2[playerID], " `UltimateCoolTime");
                # (Line 244) KillUnitAt(2, "Protoss Arbiter", "[Skill]UseSkill", playerID);
                DoActions(SetDeaths(playerID, Subtract, v.P_Ultimate2[playerID], " `UltimateCoolTime"))
                # (Line 245) }
                DoActions(KillUnitAt(2, "Protoss Arbiter", "[Skill]UseSkill", playerID))
                # (Line 246) else
                # (Line 247) {
            if EUDElse()():
                # (Line 248) KillUnitAt(All, "60 + 1n Siege", "Anywhere", playerID);
                # (Line 249) KillUnitAt(All, "60 + 1n Hydralisk", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "60 + 1n Siege", "Anywhere", playerID))
                # (Line 250) SetSwitch("UiltimateSwitch", Clear);
                DoActions(KillUnitAt(All, "60 + 1n Hydralisk", "Anywhere", playerID))
                # (Line 251) trg.SkillEnd();
                DoActions(SetSwitch("UiltimateSwitch", Clear))
                trg.SkillEnd()
                # (Line 252) }
                # (Line 253) }
            EUDEndIf()
            # (Line 254) }
        EUDEndIf()
        # (Line 255) }
    EUDEndIf()
    # (Line 257) function EdgeShapeAt(playerID : TrgPlayer, count, Unit : TrgUnit, degree, n, interval, x, y)

# (Line 258) {
@EUDTypedFunc([TrgPlayer, None, TrgUnit, None, None, None, None, None])
def EdgeShapeAt(playerID, count, Unit, degree, n, interval, x, y):
    # (Line 259) adv.Shape_EdgeAt(playerID, count, Unit, degree, n, interval, x, y);
    adv.Shape_EdgeAt(playerID, count, Unit, degree, n, interval, x, y)
    # (Line 260) adv.Shape_EdgeAt(playerID, count, Unit, degree, n, interval, -x, -y);
    adv.Shape_EdgeAt(playerID, count, Unit, degree, n, interval, -x, -y)
    # (Line 261) adv.Shape_EdgeAt(playerID, count, Unit, degree, n, interval, -y, x);
    adv.Shape_EdgeAt(playerID, count, Unit, degree, n, interval, -y, x)
    # (Line 262) adv.Shape_EdgeAt(playerID, count, Unit, degree, n, interval, y, -x);
    adv.Shape_EdgeAt(playerID, count, Unit, degree, n, interval, y, -x)
    # (Line 264) trg.Shape_Dot(playerID, count, Unit, x, y);
    trg.Shape_Dot(playerID, count, Unit, x, y)
    # (Line 265) trg.Shape_Dot(playerID, count, Unit, -x, -y);
    trg.Shape_Dot(playerID, count, Unit, -x, -y)
    # (Line 266) trg.Shape_Dot(playerID, count, Unit, -y, x);
    trg.Shape_Dot(playerID, count, Unit, -y, x)
    # (Line 267) trg.Shape_Dot(playerID, count, Unit, y, -x);
    trg.Shape_Dot(playerID, count, Unit, y, -x)
    # (Line 268) }
