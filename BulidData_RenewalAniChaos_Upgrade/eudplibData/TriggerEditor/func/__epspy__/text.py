## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _RELIMP(path, mod_name):
    import inspect, pathlib, importlib.util
    p = pathlib.Path(inspect.getabsfile(inspect.currentframe())).parent
    for s in path.split("."):
        if s == "":  p = p.parent
        else:  p = p / s
    try:
        spec = importlib.util.spec_from_file_location(mod_name, p / (mod_name + ".py"))
        module = importlib.util.module_from_spec(spec)
        spec.loader.exec_module(module)
    except FileNotFoundError:
        loader = EPSLoader(mod_name, str(p / (mod_name + ".eps")))
        spec = importlib.util.spec_from_loader(mod_name, loader)
        module = loader.create_module(spec)
        loader.exec_module(module)
    return module

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import PluginVariables as msqcvar;
import PluginVariables as msqcvar
# (Line 2) import variable as v;
import variable as v
# (Line 4) const T_CharaterNum = PVariable();
T_CharaterNum = _CGFW(lambda: [PVariable()], 1)[0]
# (Line 6) const T_CharacterName =
# (Line 7) [Db("#REF"),
# (Line 8) Db("루살카 슈베게린"),
# (Line 9) Db("크톨리 노타 세니오리스"),
# (Line 10) Db("텐카와 마이히메"),
# (Line 11) Db("히나나위 텐시"),
# (Line 12) Db("소네 미유키"),
# (Line 13) Db("네게브"),
# (Line 14) Db("세실리아"),
# (Line 15) Db("후타바 안즈"),
# (Line 16) Db("호토 모카"),
# (Line 17) Db("수수께끼의 얼터에고 Λ"),
# (Line 18) Db("류즈"),
# (Line 19) Db("토키사키 쿠루미"),
# (Line 20) Db("마토 사쿠라"),
# (Line 21) Db("야시로 가쿠"),
# (Line 22) Db("린"),
# (Line 23) Db("세라핌"),
# (Line 24) Db("키아나 카스라나"),
# (Line 25) Db("이와후네 텐케이"),
# (Line 26) Db("마르고트 나이트 & 마르가 나르제"),
# (Line 27) Db("에메트셀크"),
# (Line 28) Db("마젤란"),
# (Line 29) Db("유우키 유우나"),
# (Line 30) Db("시이나 마유리"),
# (Line 31) Db("나나미 치아키"),
# (Line 32) Db("밀림 나바"),
# (Line 33) Db("츠바쿠로 유메"),
# (Line 34) Db("치쿠조인 마가네"),
# (Line 35) Db("오다 사쿠노스케"),
# (Line 36) Db("에키드나"),
# (Line 37) Db("니와 료카"),
# (Line 38) Db("박 일표"),
# (Line 39) Db("모리시마 호다카"),
# (Line 40) Db("아가츠마 젠이츠"),
# (Line 41) Db("유자키 츠카사"),
# (Line 42) Db("엔데버"),
# (Line 43) Db("트라팔가 로우"),
# (Line 44) Db("마츠자카 사토"),
# (Line 45) Db("토카이 테이오"),
# (Line 46) Db("하네사키 아야노"),
# (Line 47) Db("레이첼 가드너"),
# (Line 48) Db("고죠 사토루"),
# (Line 49) Db("절망왕"),
# (Line 50) Db("타냐 데그레쟈프"),
# (Line 51) Db("카토 메구미"),
# (Line 52) Db("앨리스리제 루 네뷸리스 9세"),
# (Line 53) Db("#REF")];
T_CharacterName = _CGFW(lambda: [_ARR(FlattenList([Db("#REF"), Db("루살카 슈베게린"), Db("크톨리 노타 세니오리스"), Db("텐카와 마이히메"), Db("히나나위 텐시"), Db("소네 미유키"), Db("네게브"), Db("세실리아"), Db("후타바 안즈"), Db("호토 모카"), Db("수수께끼의 얼터에고 Λ"), Db("류즈"), Db("토키사키 쿠루미"), Db("마토 사쿠라"), Db("야시로 가쿠"), Db("린"), Db("세라핌"), Db("키아나 카스라나"), Db("이와후네 텐케이"), Db("마르고트 나이트 & 마르가 나르제"), Db("에메트셀크"), Db("마젤란"), Db("유우키 유우나"), Db("시이나 마유리"), Db("나나미 치아키"), Db("밀림 나바"), Db("츠바쿠로 유메"), Db("치쿠조인 마가네"), Db("오다 사쿠노스케"), Db("에키드나"), Db("니와 료카"), Db("박 일표"), Db("모리시마 호다카"), Db("아가츠마 젠이츠"), Db("유자키 츠카사"), Db("엔데버"), Db("트라팔가 로우"), Db("마츠자카 사토"), Db("토카이 테이오"), Db("하네사키 아야노"), Db("레이첼 가드너"), Db("고죠 사토루"), Db("절망왕"), Db("타냐 데그레쟈프"), Db("카토 메구미"), Db("앨리스리제 루 네뷸리스 9세"), Db("#REF")]))], 1)[0]
# (Line 55) const T_CharacterTitle =
# (Line 56) [Db("#REF"),
# (Line 57) Db("Dies irae"),
# (Line 58) Db("종말에 뭐 하세요? 바쁘세요? 구해 주실 수 있나요?"),
# (Line 59) Db("퀄리디아 코드"),
# (Line 60) Db("동방 스카이 아레나"),
# (Line 61) Db("당신과 그녀와 그녀의 사랑"),
# (Line 62) Db("소녀전선"),
# (Line 63) Db("킹스레이드"),
# (Line 64) Db("PROJECT iM@S CINDERELLA GIRLS"),
# (Line 65) Db("주문은 토끼입니까?"),
# (Line 66) Db("Fate Grand Order"),
# (Line 67) Db("클락워크 플레닛"),
# (Line 68) Db("DATE A LIVE"),
# (Line 69) Db("Fate/stay night"),
# (Line 70) Db("나만이 없는 거리"),
# (Line 71) Db("Shelter"),
# (Line 72) Db("영원한 7일의 도시"),
# (Line 73) Db("붕괴 3rd"),
# (Line 74) Db("K"),
# (Line 75) Db("경계선상의 호라이즌"),
# (Line 76) Db("Final Fantasy XIV"),
# (Line 77) Db("Arknights"),
# (Line 78) Db("유우키 유우나는 용사다"),
# (Line 79) Db("슈타인즈 게이트"),
# (Line 80) Db("단간론파"),
# (Line 81) Db("전생했더니 슬라임이었던 건에 대하여"),
# (Line 82) Db("도사의 무녀"),
# (Line 83) Db("Re : CREATORS"),
# (Line 84) Db("문호 스트레이독스"),
# (Line 85) Db("Re: 제로부터 시작하는 이세계 생활"),
# (Line 86) Db("십이대전"),
# (Line 87) Db("갓 오브 하이스쿨"),
# (Line 88) Db("날씨의 아이"),
# (Line 89) Db("귀멸의 칼날"),
# (Line 90) Db("어쨋든 귀여워"),
# (Line 91) Db("나의 히어로 아카데미아"),
# (Line 92) Db("원피스"),
# (Line 93) Db("해피슈가라이프"),
# (Line 94) Db("우마무스메"),
# (Line 95) Db("하네배드!"),
# (Line 96) Db("살육의 천사"),
# (Line 97) Db("주술회전"),
# (Line 98) Db("혈계전선"),
# (Line 99) Db("유녀전기"),
# (Line 100) Db("시원찮은 그녀를 위한 육성 방법"),
# (Line 101) Db("너와 나의 최후의 전장, 혹은 세계가 시작되는 성전"),
# (Line 102) Db("#REF")];
T_CharacterTitle = _CGFW(lambda: [_ARR(FlattenList([Db("#REF"), Db("Dies irae"), Db("종말에 뭐 하세요? 바쁘세요? 구해 주실 수 있나요?"), Db("퀄리디아 코드"), Db("동방 스카이 아레나"), Db("당신과 그녀와 그녀의 사랑"), Db("소녀전선"), Db("킹스레이드"), Db("PROJECT iM@S CINDERELLA GIRLS"), Db("주문은 토끼입니까?"), Db("Fate Grand Order"), Db("클락워크 플레닛"), Db("DATE A LIVE"), Db("Fate/stay night"), Db("나만이 없는 거리"), Db("Shelter"), Db("영원한 7일의 도시"), Db("붕괴 3rd"), Db("K"), Db("경계선상의 호라이즌"), Db("Final Fantasy XIV"), Db("Arknights"), Db("유우키 유우나는 용사다"), Db("슈타인즈 게이트"), Db("단간론파"), Db("전생했더니 슬라임이었던 건에 대하여"), Db("도사의 무녀"), Db("Re : CREATORS"), Db("문호 스트레이독스"), Db("Re: 제로부터 시작하는 이세계 생활"), Db("십이대전"), Db("갓 오브 하이스쿨"), Db("날씨의 아이"), Db("귀멸의 칼날"), Db("어쨋든 귀여워"), Db("나의 히어로 아카데미아"), Db("원피스"), Db("해피슈가라이프"), Db("우마무스메"), Db("하네배드!"), Db("살육의 천사"), Db("주술회전"), Db("혈계전선"), Db("유녀전기"), Db("시원찮은 그녀를 위한 육성 방법"), Db("너와 나의 최후의 전장, 혹은 세계가 시작되는 성전"), Db("#REF")]))], 1)[0]
# (Line 104) const T_CharacterType =
# (Line 105) [Db("#REF"),
# (Line 106) Db("공성전"),
# (Line 107) Db("공성전"),
# (Line 108) Db("대인전"),
# (Line 109) Db("모든전투"),
# (Line 110) Db("대인전"),
# (Line 111) Db("모든전투"),
# (Line 112) Db("대인전"),
# (Line 113) Db("공성전"),
# (Line 114) Db("공성전"),
# (Line 115) Db("공성전"),
# (Line 116) Db("대인전"),
# (Line 117) Db("모든전투"),
# (Line 118) Db("공성전"),
# (Line 119) Db("대인전"),
# (Line 120) Db("공성전"),
# (Line 121) Db("모든전투"),
# (Line 122) Db("모든전투"),
# (Line 123) Db("대인전"),
# (Line 124) Db("모든전투"),
# (Line 125) Db("공성전"),
# (Line 126) Db("공성전"),
# (Line 127) Db("모든전투"),
# (Line 128) Db("대인전"),
# (Line 129) Db("공성전"),
# (Line 130) Db("공성전"),
# (Line 132) Db("대인전"),
# (Line 133) Db("대인전"),
# (Line 134) Db("공성전"),
# (Line 135) Db("공성전"),
# (Line 136) Db("공성전"),
# (Line 138) Db("대인전"),
# (Line 139) Db("모든전투"),
# (Line 140) Db("대인전"),
# (Line 141) Db("공성전"),
# (Line 142) Db("공성전"),
# (Line 143) Db("모든전투"),
# (Line 144) Db("공성전"),
# (Line 145) Db("공성전"),
# (Line 146) Db("대인전"),
# (Line 147) Db("대인전"),
# (Line 149) Db("대인전"),
# (Line 150) Db("대인전"),
# (Line 151) Db("대인전"),
# (Line 152) Db("공성전"),
# (Line 153) Db("??전"),
# (Line 154) Db("#REF")];
T_CharacterType = _CGFW(lambda: [_ARR(FlattenList([Db("#REF"), Db("공성전"), Db("공성전"), Db("대인전"), Db("모든전투"), Db("대인전"), Db("모든전투"), Db("대인전"), Db("공성전"), Db("공성전"), Db("공성전"), Db("대인전"), Db("모든전투"), Db("공성전"), Db("대인전"), Db("공성전"), Db("모든전투"), Db("모든전투"), Db("대인전"), Db("모든전투"), Db("공성전"), Db("공성전"), Db("모든전투"), Db("대인전"), Db("공성전"), Db("공성전"), Db("대인전"), Db("대인전"), Db("공성전"), Db("공성전"), Db("공성전"), Db("대인전"), Db("모든전투"), Db("대인전"), Db("공성전"), Db("공성전"), Db("모든전투"), Db("공성전"), Db("공성전"), Db("대인전"), Db("대인전"), Db("대인전"), Db("대인전"), Db("대인전"), Db("공성전"), Db("??전"), Db("#REF")]))], 1)[0]
# (Line 156) const T_CharacterNeed =
# (Line 157) [Db("#REF"),
# (Line 158) Db("처음하는"),
# (Line 159) Db("적응된"),
# (Line 160) Db("숙련된"),
# (Line 161) Db("숙련된"),
# (Line 162) Db("숙련된"),
# (Line 163) Db("처음하는"),
# (Line 164) Db("숙련된"),
# (Line 165) Db("처음하는"),
# (Line 166) Db("처음하는"),
# (Line 167) Db("적응된"),
# (Line 168) Db("숙련된"),
# (Line 169) Db("적응된"),
# (Line 170) Db("적응된"),
# (Line 171) Db("숙련된"),
# (Line 172) Db("적응된"),
# (Line 173) Db("적응된"),
# (Line 174) Db("적응된"),
# (Line 175) Db("숙련된"),
# (Line 176) Db("숙련된"),
# (Line 177) Db("적응된"),
# (Line 179) Db("처음하는"),
# (Line 180) Db("숙련된"),
# (Line 181) Db("숙련된"),
# (Line 182) Db("숙련된"),
# (Line 183) Db("적응된"),
# (Line 185) Db("숙련된"),
# (Line 186) Db("숙련된"),
# (Line 187) Db("숙련된"),
# (Line 188) Db("적응된"),
# (Line 189) Db("적응된"),
# (Line 191) Db("숙련된"),
# (Line 192) Db("처음하는"),
# (Line 193) Db("숙련된"),
# (Line 194) Db("적응된"),
# (Line 195) Db("적응된"),
# (Line 196) Db("적응된"),
# (Line 197) Db("숙련된"),
# (Line 198) Db("처음하는"),
# (Line 199) Db("숙련된"),
# (Line 200) Db("숙련된"),
# (Line 202) Db("숙련된"),
# (Line 203) Db("숙련된"),
# (Line 204) Db("숙련된"),
# (Line 205) Db("적응된"),
# (Line 206) Db("???"),
# (Line 207) Db("#REF")];
T_CharacterNeed = _CGFW(lambda: [_ARR(FlattenList([Db("#REF"), Db("처음하는"), Db("적응된"), Db("숙련된"), Db("숙련된"), Db("숙련된"), Db("처음하는"), Db("숙련된"), Db("처음하는"), Db("처음하는"), Db("적응된"), Db("숙련된"), Db("적응된"), Db("적응된"), Db("숙련된"), Db("적응된"), Db("적응된"), Db("적응된"), Db("숙련된"), Db("숙련된"), Db("적응된"), Db("처음하는"), Db("숙련된"), Db("숙련된"), Db("숙련된"), Db("적응된"), Db("숙련된"), Db("숙련된"), Db("숙련된"), Db("적응된"), Db("적응된"), Db("숙련된"), Db("처음하는"), Db("숙련된"), Db("적응된"), Db("적응된"), Db("적응된"), Db("숙련된"), Db("처음하는"), Db("숙련된"), Db("숙련된"), Db("숙련된"), Db("숙련된"), Db("숙련된"), Db("적응된"), Db("???"), Db("#REF")]))], 1)[0]
# (Line 209) const T_CharacterTrait =
# (Line 210) [Db("#REF"),
# (Line 212) Db("\x1F#\x04공성특화 \x1F#\x04순간딜 \x1F#\x04설치 \x1F#\x04조작쉬움"),
# (Line 213) Db("\x1F#\x04공성특화 \x1F#\x04지속딜 \x1F#\x04전투속행 \x1F#\x04조작어려움"),
# (Line 214) Db("\x1F#\x04대인특화 \x1F#\x04지속딜 \x1F#\x04보조 \x1F#\x04조작보통"),
# (Line 215) Db("\x1F#\x04만능 \x1F#\x04순간딜 \x1F#\x04설치 \x1F#\x04조작어려움"),
# (Line 216) Db("\x1F#\x04대인특화 \x1F#\x04순간딜 \x1F#\x04디버프 \x1F#\x04조작어려움"),
# (Line 218) Db("\x1F#\x04만능 \x1F#\x04순간딜 \x1F#\x04보조 \x1F#\x04조작보통"),
# (Line 219) Db("\x1F#\x04대인특화 \x1F#\x04순간딜 \x1F#\x04부활 \x1F#\x04조작어려움"),
# (Line 220) Db("\x1F#\x04공성특화 \x1F#\x04지속딜 \x1F#\x04보조 \x1F#\x04조작쉬움"),
# (Line 221) Db("\x1F#\x04공성특화 \x1F#\x04순간딜 \x1F#\x04보조 \x1F#\x04조작보통"),
# (Line 222) Db("\x1F#\x04공성특화 \x1F#\x04지속딜 \x1F#\x04버프 \x1F#\x04조작보통"),
# (Line 224) Db("\x1F#\x04대인특화 \x1F#\x04순간딜 \x1F#\x04디버프 \x1F#\x04조작쉬움"),
# (Line 225) Db("\x1F#\x04공성전 \x1F#\x04순간딜 \x1F#\x04영구각성 \x1F#\x04조작보통"),
# (Line 226) Db("\x1F#\x04공성특화 \x1F#\x04지속딜 \x1F#\x04디버프 \x1F#\x04조작쉬움"),
# (Line 227) Db("\x1F#\x04대인특화 \x1F#\x04순간딜 \x1F#\x04조작보통"),
# (Line 228) Db("\x1F#\x04공성특화 \x1F#\x04지속딜 \x1F#\x04희생 \x1F#\x04조작어려움"),
# (Line 230) Db("\x1F#\x04만능 \x1F#\x04순간딜 \x1F#\x04영원한 7일 \x1F#\x04조작보통"),
# (Line 231) Db("\x1F#\x04만능 \x1F#\x04지속딜 \x1F#\x04조작보통"),
# (Line 232) Db("\x1F#\x04대인특화 \x1F#\x04순간딜 \x1F#\x04무적의 사나이 \x1F#\x04조작보통"),
# (Line 233) Db("\x1F#\x04만능 \x1F#\x04지속딜 \x1F#\x04저격 \x1F#\x04조작어려움"),
# (Line 234) Db("\x1F#\x04공성특화 \x1F#\x04지속딜 \x1F#\x04귀환 \x1F#\x04조작어려움"),
# (Line 236) Db("\x1F#\x04공성특화 \x1F#\x04순간딜 \x1F#\x04드론 \x1F#\x04조작보통"),
# (Line 237) Db("\x1F#\x04만능 \x1F#\x04지속딜 \x1F#\x04하이리스크 \x1F#\x04하이리턴 \x1F#\x04조작어려움"),
# (Line 238) Db("\x1F#\x04대인특화 \x1F#\x04순간딜 \x1F#\x04고정 \x1F#\x04조작어려움"),
# (Line 239) Db("\x1F#\x04공성특화 \x1F#\x04지속딜 \x1F#\x04서포트 \x1F#\x04조작보통"),
# (Line 240) Db("\x1F#\x04모든전투 \x1F#\x04지속딜 \x1F#\x04기동성 \x1F#\x04조작보통"),
# (Line 242) Db("\x1F#\x04대인특화 \x1F#\x04순간딜 \x1F#\x04기동성 \x1F#\x04조작어려움"),
# (Line 243) Db("\x1F#\x04대인특화 \x1F#\x04순간딜 \x1F#\x04무효화 \x1F#\x04조작보통"),
# (Line 244) Db("\x1F#\x04공성특화 \x1F#\x04지속딜 \x1F#\x04영구각성 \x1F#\x04조작어려움"),
# (Line 245) Db("\x1F#\x04공성특화 \x1F#\x04지속딜 \x1F#\x04계약 \x1F#\x04조작보통"),
# (Line 246) Db("\x1F#\x04공성특화 \x1F#\x04지속딜 \x1F#\x04버프 \x1F#\x04조작쉬움"),
# (Line 248) Db("\x1F#\x04대인특화 \x1F#\x04순간딜 \x1F#\x04기동성 \x1F#\x04조작어려움"),
# (Line 249) Db("\x1F#\x04만능 \x1F#\x04순간딜 \x1F#\x04디버프 \x1F#\x04조작쉬움"),
# (Line 250) Db("\x1F#\x04대인특화 \x1F#\x04순간딜 \x1F#\x04기동성 \x1F#\x04조작어려움"),
# (Line 251) Db("\x1F#\x04공성특화 \x1F#\x04지속딜 \x1F#\x04조작어려움"),
# (Line 252) Db("\x1F#\x04공성특화 \x1F#\x04지속딜 \x1F#\x04조작보통"),
# (Line 253) Db("\x1F#\x04만능 \x1F#\x04조작보통"),
# (Line 254) Db("\x1F#\x04공성특화 \x1F#\x04지속딜 \x1F#\x04조작어려움"),
# (Line 255) Db("\x1F#\x04공성특화 \x1F#\x04지속딜 \x1F#\x04순간딜 \x1F#\x04조작쉬움"),
# (Line 256) Db("\x1F#\x04대인특화 \x1F#\x04순간딜 \x1F#\x04지속딜 \x1F#\x04조작어려움"),
# (Line 257) Db("\x1F#\x04대인특화 \x1F#\x04순간딜 \x1F#\x04지속딜 \x1F#\x04조작어려움"),
# (Line 259) Db("\x1F#\x04대인특화 \x1F#\x04순간딜 \x1F#\x04지속딜 \x1F#\x04조작어려움"),
# (Line 260) Db("\x1F#\x04대인특화 \x1F#\x04순간딜 \x1F#\x04지속딜 \x1F#\x04조작어려움"),
# (Line 261) Db("\x1F#\x04대인특화 \x1F#\x04저격 \x1F#\x04조작어려움"),
# (Line 262) Db("\x1F#\x04공성특화 \x1F#\x04지속딜 \x1F#\x04조작보통"),
# (Line 263) Db("\x1F#\x04??? \x1F#\x04>??? \x1F#\x04조작??"),
# (Line 264) Db("#REF")];
T_CharacterTrait = _CGFW(lambda: [_ARR(FlattenList([Db("#REF"), Db("\x1F#\x04공성특화 \x1F#\x04순간딜 \x1F#\x04설치 \x1F#\x04조작쉬움"), Db("\x1F#\x04공성특화 \x1F#\x04지속딜 \x1F#\x04전투속행 \x1F#\x04조작어려움"), Db("\x1F#\x04대인특화 \x1F#\x04지속딜 \x1F#\x04보조 \x1F#\x04조작보통"), Db("\x1F#\x04만능 \x1F#\x04순간딜 \x1F#\x04설치 \x1F#\x04조작어려움"), Db("\x1F#\x04대인특화 \x1F#\x04순간딜 \x1F#\x04디버프 \x1F#\x04조작어려움"), Db("\x1F#\x04만능 \x1F#\x04순간딜 \x1F#\x04보조 \x1F#\x04조작보통"), Db("\x1F#\x04대인특화 \x1F#\x04순간딜 \x1F#\x04부활 \x1F#\x04조작어려움"), Db("\x1F#\x04공성특화 \x1F#\x04지속딜 \x1F#\x04보조 \x1F#\x04조작쉬움"), Db("\x1F#\x04공성특화 \x1F#\x04순간딜 \x1F#\x04보조 \x1F#\x04조작보통"), Db("\x1F#\x04공성특화 \x1F#\x04지속딜 \x1F#\x04버프 \x1F#\x04조작보통"), Db("\x1F#\x04대인특화 \x1F#\x04순간딜 \x1F#\x04디버프 \x1F#\x04조작쉬움"), Db("\x1F#\x04공성전 \x1F#\x04순간딜 \x1F#\x04영구각성 \x1F#\x04조작보통"), Db("\x1F#\x04공성특화 \x1F#\x04지속딜 \x1F#\x04디버프 \x1F#\x04조작쉬움"), Db("\x1F#\x04대인특화 \x1F#\x04순간딜 \x1F#\x04조작보통"), Db("\x1F#\x04공성특화 \x1F#\x04지속딜 \x1F#\x04희생 \x1F#\x04조작어려움"), Db("\x1F#\x04만능 \x1F#\x04순간딜 \x1F#\x04영원한 7일 \x1F#\x04조작보통"), Db("\x1F#\x04만능 \x1F#\x04지속딜 \x1F#\x04조작보통"), Db("\x1F#\x04대인특화 \x1F#\x04순간딜 \x1F#\x04무적의 사나이 \x1F#\x04조작보통"), Db("\x1F#\x04만능 \x1F#\x04지속딜 \x1F#\x04저격 \x1F#\x04조작어려움"), Db("\x1F#\x04공성특화 \x1F#\x04지속딜 \x1F#\x04귀환 \x1F#\x04조작어려움"), Db("\x1F#\x04공성특화 \x1F#\x04순간딜 \x1F#\x04드론 \x1F#\x04조작보통"), Db("\x1F#\x04만능 \x1F#\x04지속딜 \x1F#\x04하이리스크 \x1F#\x04하이리턴 \x1F#\x04조작어려움"), Db("\x1F#\x04대인특화 \x1F#\x04순간딜 \x1F#\x04고정 \x1F#\x04조작어려움"), Db("\x1F#\x04공성특화 \x1F#\x04지속딜 \x1F#\x04서포트 \x1F#\x04조작보통"), Db("\x1F#\x04모든전투 \x1F#\x04지속딜 \x1F#\x04기동성 \x1F#\x04조작보통"), Db("\x1F#\x04대인특화 \x1F#\x04순간딜 \x1F#\x04기동성 \x1F#\x04조작어려움"), Db("\x1F#\x04대인특화 \x1F#\x04순간딜 \x1F#\x04무효화 \x1F#\x04조작보통"), Db("\x1F#\x04공성특화 \x1F#\x04지속딜 \x1F#\x04영구각성 \x1F#\x04조작어려움"), Db("\x1F#\x04공성특화 \x1F#\x04지속딜 \x1F#\x04계약 \x1F#\x04조작보통"), Db("\x1F#\x04공성특화 \x1F#\x04지속딜 \x1F#\x04버프 \x1F#\x04조작쉬움"), Db("\x1F#\x04대인특화 \x1F#\x04순간딜 \x1F#\x04기동성 \x1F#\x04조작어려움"), Db("\x1F#\x04만능 \x1F#\x04순간딜 \x1F#\x04디버프 \x1F#\x04조작쉬움"), Db("\x1F#\x04대인특화 \x1F#\x04순간딜 \x1F#\x04기동성 \x1F#\x04조작어려움"), Db("\x1F#\x04공성특화 \x1F#\x04지속딜 \x1F#\x04조작어려움"), Db("\x1F#\x04공성특화 \x1F#\x04지속딜 \x1F#\x04조작보통"), Db("\x1F#\x04만능 \x1F#\x04조작보통"), Db("\x1F#\x04공성특화 \x1F#\x04지속딜 \x1F#\x04조작어려움"), Db("\x1F#\x04공성특화 \x1F#\x04지속딜 \x1F#\x04순간딜 \x1F#\x04조작쉬움"), Db("\x1F#\x04대인특화 \x1F#\x04순간딜 \x1F#\x04지속딜 \x1F#\x04조작어려움"), Db("\x1F#\x04대인특화 \x1F#\x04순간딜 \x1F#\x04지속딜 \x1F#\x04조작어려움"), Db("\x1F#\x04대인특화 \x1F#\x04순간딜 \x1F#\x04지속딜 \x1F#\x04조작어려움"), Db("\x1F#\x04대인특화 \x1F#\x04순간딜 \x1F#\x04지속딜 \x1F#\x04조작어려움"), Db("\x1F#\x04대인특화 \x1F#\x04저격 \x1F#\x04조작어려움"), Db("\x1F#\x04공성특화 \x1F#\x04지속딜 \x1F#\x04조작보통"), Db("\x1F#\x04??? \x1F#\x04>??? \x1F#\x04조작??"), Db("#REF")]))], 1)[0]
# (Line 266) const T_SubText =
# (Line 267) [Db("#REF"),
# (Line 268) Db("\x04에 특화 되어있습니다."),
# (Line 269) Db(" 플레이어에게 추천합니다.")];
T_SubText = _CGFW(lambda: [_ARR(FlattenList([Db("#REF"), Db("\x04에 특화 되어있습니다."), Db(" 플레이어에게 추천합니다.")]))], 1)[0]
