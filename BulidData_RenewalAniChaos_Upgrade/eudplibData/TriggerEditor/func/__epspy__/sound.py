## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import variable as v;
import variable as v
# (Line 3) import character.group1.rusaruka.text as rusaruka;
from character.group1.rusaruka import text as rusaruka
# (Line 4) import character.group1.chtholly.text as chtholly;
from character.group1.chtholly import text as chtholly
# (Line 5) import character.group1.maihime.text as maihime;
from character.group1.maihime import text as maihime
# (Line 6) import character.etc.tenshi as tenshi;
from character.etc import tenshi as tenshi
# (Line 7) import character.etc.miyuki as miyuki;
from character.etc import miyuki as miyuki
# (Line 9) import character.etc.negev as negev;
from character.etc import negev as negev
# (Line 10) import character.etc.cecillia as cecillia;
from character.etc import cecillia as cecillia
# (Line 11) import character.etc.anzu as anzu;
from character.etc import anzu as anzu
# (Line 12) import character.etc.hotomoka as hotomoka;
from character.etc import hotomoka as hotomoka
# (Line 13) import character.etc.alterego as alterego;
from character.etc import alterego as alterego
# (Line 15) import character.etc.ryuzu as ryuzu;
from character.etc import ryuzu as ryuzu
# (Line 16) import character.group3.kurumi.text as kurumi;
from character.group3.kurumi import text as kurumi
# (Line 17) import character.etc.sakura as sakura;
from character.etc import sakura as sakura
# (Line 18) import character.etc.yashiro as yashiro;
from character.etc import yashiro as yashiro
# (Line 19) import character.etc.rin as rin;
from character.etc import rin as rin
# (Line 21) import character.etc.seraphim as seraphim;
from character.etc import seraphim as seraphim
# (Line 23) import character.etc.iwahune as iwahune;
from character.etc import iwahune as iwahune
# (Line 24) import character.etc.mn as mn;
from character.etc import mn as mn
# (Line 25) import character.etc.emetselch as emetselch;
from character.etc import emetselch as emetselch
# (Line 27) import character.etc.magellan as magellan;
from character.etc import magellan as magellan
# (Line 28) import character.group4.yuuna.text as yuuna;
from character.group4.yuuna import text as yuuna
# (Line 29) import character.group4.mayuri.text as mayuri;
from character.group4.mayuri import text as mayuri
# (Line 30) import character.group4.nanami.text as nanami;
from character.group4.nanami import text as nanami
# (Line 31) import character.group4.milim.text as milim;
from character.group4.milim import text as milim
# (Line 33) import character.group5.yume.text as yume;
from character.group5.yume import text as yume
# (Line 34) import character.group5.magane.text as magane;
from character.group5.magane import text as magane
# (Line 35) import character.group5.oda.text as oda;
from character.group5.oda import text as oda
# (Line 36) import character.group5.ekidona.text as ekidona;
from character.group5.ekidona import text as ekidona
# (Line 37) import character.group5.niwa.text as niwa;
from character.group5.niwa import text as niwa
# (Line 39) import character.group6.park.text as park;
from character.group6.park import text as park
# (Line 40) import character.group6.hodaka.text 	as hodaka;
from character.group6.hodaka import text as hodaka
# (Line 41) import character.group6.tsukasa.text 	as tsukasa;
from character.group6.tsukasa import text as tsukasa
# (Line 43) function CharacterVoice(count : TrgCount)
# (Line 44) {
@EUDTypedFunc([TrgCount])
def CharacterVoice(count):
    # (Line 45) var playerID = getcurpl();
    playerID = EUDVariable()
    playerID << (f_getcurpl())
    # (Line 47) foreach(idx : EUDLoopRange(6))
    for idx in EUDLoopRange(6):
        # (Line 48) {
        # (Line 49) if 		(v.P_HeroID[playerID] == 1)	{ rusaruka.	P_player[idx] = count; rusaruka.	P_observer[idx] = count; }
        if EUDIf()(v.P_HeroID[playerID] == 1):
            _ARRW(rusaruka.P_player, idx) << (count)
            _ARRW(rusaruka.P_observer, idx) << (count)
            # (Line 50) else if 	(v.P_HeroID[playerID] == 2)	{ chtholly.	P_player[idx] = count; chtholly.	P_observer[idx] = count; 	}
        if EUDElseIf()(v.P_HeroID[playerID] == 2):
            _ARRW(chtholly.P_player, idx) << (count)
            _ARRW(chtholly.P_observer, idx) << (count)
            # (Line 51) else if 	(v.P_HeroID[playerID] == 3)	{ maihime.	P_player[idx] = count; maihime.	P_observer[idx] = count; 	}
        if EUDElseIf()(v.P_HeroID[playerID] == 3):
            _ARRW(maihime.P_player, idx) << (count)
            _ARRW(maihime.P_observer, idx) << (count)
            # (Line 54) else if 	(v.P_HeroID[playerID] == 12)	{ kurumi.	P_player[idx] = count; kurumi.	P_observer[idx] = count; 	}
        if EUDElseIf()(v.P_HeroID[playerID] == 12):
            _ARRW(kurumi.P_player, idx) << (count)
            _ARRW(kurumi.P_observer, idx) << (count)
            # (Line 56) else if 	(v.P_HeroID[playerID] == 22)	{ yuuna.		P_player[idx] = count; yuuna.		P_observer[idx] = count; 	}
        if EUDElseIf()(v.P_HeroID[playerID] == 22):
            _ARRW(yuuna.P_player, idx) << (count)
            _ARRW(yuuna.P_observer, idx) << (count)
            # (Line 57) else if 	(v.P_HeroID[playerID] == 23)	{ mayuri.	P_player[idx] = count; mayuri.	P_observer[idx] = count; 	}
        if EUDElseIf()(v.P_HeroID[playerID] == 23):
            _ARRW(mayuri.P_player, idx) << (count)
            _ARRW(mayuri.P_observer, idx) << (count)
            # (Line 58) else if 	(v.P_HeroID[playerID] == 24)	{ nanami.	P_player[idx] = count; nanami.	P_observer[idx] = count; 	}
        if EUDElseIf()(v.P_HeroID[playerID] == 24):
            _ARRW(nanami.P_player, idx) << (count)
            _ARRW(nanami.P_observer, idx) << (count)
            # (Line 59) else if 	(v.P_HeroID[playerID] == 25)	{ milim.		P_player[idx] = count; milim.		P_observer[idx] = count; 	}
        if EUDElseIf()(v.P_HeroID[playerID] == 25):
            _ARRW(milim.P_player, idx) << (count)
            _ARRW(milim.P_observer, idx) << (count)
            # (Line 61) else if 	(v.P_HeroID[playerID] == 26)	{ yume.		P_player[idx] = count; yume.		P_observer[idx] = count; 	}
        if EUDElseIf()(v.P_HeroID[playerID] == 26):
            _ARRW(yume.P_player, idx) << (count)
            _ARRW(yume.P_observer, idx) << (count)
            # (Line 62) else if 	(v.P_HeroID[playerID] == 27)	{ magane.	P_player[idx] = count; magane.	P_observer[idx] = count; 	}
        if EUDElseIf()(v.P_HeroID[playerID] == 27):
            _ARRW(magane.P_player, idx) << (count)
            _ARRW(magane.P_observer, idx) << (count)
            # (Line 63) else if 	(v.P_HeroID[playerID] == 28)	{ oda.		P_player[idx] = count; oda.		P_observer[idx] = count; 	}
        if EUDElseIf()(v.P_HeroID[playerID] == 28):
            _ARRW(oda.P_player, idx) << (count)
            _ARRW(oda.P_observer, idx) << (count)
            # (Line 64) else if 	(v.P_HeroID[playerID] == 29)	{ ekidona.	P_player[idx] = count; ekidona.	P_observer[idx] = count; 	}
        if EUDElseIf()(v.P_HeroID[playerID] == 29):
            _ARRW(ekidona.P_player, idx) << (count)
            _ARRW(ekidona.P_observer, idx) << (count)
            # (Line 65) else if 	(v.P_HeroID[playerID] == 30)	{ niwa.		P_player[idx] = count; niwa.		P_observer[idx] = count; 	}
        if EUDElseIf()(v.P_HeroID[playerID] == 30):
            _ARRW(niwa.P_player, idx) << (count)
            _ARRW(niwa.P_observer, idx) << (count)
            # (Line 67) else if 	(v.P_HeroID[playerID] == 31)	{ park.		P_player[idx] = count; park.		P_observer[idx] = count; 	}
        if EUDElseIf()(v.P_HeroID[playerID] == 31):
            _ARRW(park.P_player, idx) << (count)
            _ARRW(park.P_observer, idx) << (count)
            # (Line 68) else if 	(v.P_HeroID[playerID] == 32)	{ hodaka.	P_player[idx] = count; hodaka.	P_observer[idx] = count; 	}
        if EUDElseIf()(v.P_HeroID[playerID] == 32):
            _ARRW(hodaka.P_player, idx) << (count)
            _ARRW(hodaka.P_observer, idx) << (count)
            # (Line 69) else if 	(v.P_HeroID[playerID] == 34)	{ tsukasa.	P_player[idx] = count; tsukasa.	P_observer[idx] = count; 	}
        if EUDElseIf()(v.P_HeroID[playerID] == 34):
            _ARRW(tsukasa.P_player, idx) << (count)
            _ARRW(tsukasa.P_observer, idx) << (count)
            # (Line 70) }
        EUDEndIf()
        # (Line 71) }

    # (Line 73) function OldCharacterVoiceNormal()

# (Line 74) {
@EUDFunc
def OldCharacterVoiceNormal():
    # (Line 75) var count;
    count = EUDVariable()
    # (Line 77) if (Deaths(P7, AtLeast, 1, " `SkillText"))
    if EUDIf()(Deaths(P7, AtLeast, 1, " `SkillText")):
        # (Line 78) {
        # (Line 79) count = dwread_epd(EPD(0x58A364 + 48 * 186 + 4 * 7));
        count << (f_dwread_epd(EPD(0x58A364 + 48 * 186 + 4 * 7)))
        # (Line 81) foreach(idx : EUDLoopRange(6))
        for idx in EUDLoopRange(6):
            # (Line 82) {
            # (Line 83) tenshi.P_type[idx] = 1;  		tenshi.P_player[idx] = count; 			tenshi.P_observer[idx] = count;
            _ARRW(tenshi.P_type, idx) << (1)
            _ARRW(tenshi.P_player, idx) << (count)
            _ARRW(tenshi.P_observer, idx) << (count)
            # (Line 84) miyuki.P_type[idx] = 1;  		miyuki.P_player[idx] = count; 		miyuki.P_observer[idx] = count;
            _ARRW(miyuki.P_type, idx) << (1)
            _ARRW(miyuki.P_player, idx) << (count)
            _ARRW(miyuki.P_observer, idx) << (count)
            # (Line 85) negev.P_type[idx] = 1;  		negev.P_player[idx] = count; 			negev.P_observer[idx] = count;
            _ARRW(negev.P_type, idx) << (1)
            _ARRW(negev.P_player, idx) << (count)
            _ARRW(negev.P_observer, idx) << (count)
            # (Line 86) }
            # (Line 87) SetDeaths(6, SetTo, 0, 186);

        # (Line 88) }
        DoActions(SetDeaths(6, SetTo, 0, 186))
        # (Line 89) if (Deaths(P7, AtLeast, 1, " `SkillText2"))
    EUDEndIf()
    if EUDIf()(Deaths(P7, AtLeast, 1, " `SkillText2")):
        # (Line 90) {
        # (Line 91) count = dwread_epd(EPD(0x58A364 + 48 * 174 + 4 * 7));
        count << (f_dwread_epd(EPD(0x58A364 + 48 * 174 + 4 * 7)))
        # (Line 93) foreach(idx : EUDLoopRange(6))
        for idx in EUDLoopRange(6):
            # (Line 94) {
            # (Line 95) cecillia.P_type[idx] = 1;  		cecillia.P_player[idx] = count; 		cecillia.P_observer[idx] = count;
            _ARRW(cecillia.P_type, idx) << (1)
            _ARRW(cecillia.P_player, idx) << (count)
            _ARRW(cecillia.P_observer, idx) << (count)
            # (Line 96) anzu.P_type[idx] = 1; 		anzu.P_player[idx] = count; 			anzu.P_observer[idx] = count;
            _ARRW(anzu.P_type, idx) << (1)
            _ARRW(anzu.P_player, idx) << (count)
            _ARRW(anzu.P_observer, idx) << (count)
            # (Line 97) hotomoka.P_type[idx] = 1;  	hotomoka.P_player[idx] = count; 		hotomoka.P_observer[idx] = count;
            _ARRW(hotomoka.P_type, idx) << (1)
            _ARRW(hotomoka.P_player, idx) << (count)
            _ARRW(hotomoka.P_observer, idx) << (count)
            # (Line 98) alterego.P_type[idx] = 1;  	alterego.P_player[idx] = count; 		alterego.P_observer[idx] = count;
            _ARRW(alterego.P_type, idx) << (1)
            _ARRW(alterego.P_player, idx) << (count)
            _ARRW(alterego.P_observer, idx) << (count)
            # (Line 99) ryuzu.P_type[idx] = 1; 		ryuzu.P_player[idx] = count; 			ryuzu.P_observer[idx] = count;
            _ARRW(ryuzu.P_type, idx) << (1)
            _ARRW(ryuzu.P_player, idx) << (count)
            _ARRW(ryuzu.P_observer, idx) << (count)
            # (Line 101) }
            # (Line 102) SetDeaths(6, SetTo, 0, 174);

        # (Line 103) }
        DoActions(SetDeaths(6, SetTo, 0, 174))
        # (Line 104) if (Deaths(P7, AtLeast, 1, " `SkillText3"))
    EUDEndIf()
    if EUDIf()(Deaths(P7, AtLeast, 1, " `SkillText3")):
        # (Line 105) {
        # (Line 106) count = dwread_epd(EPD(0x58A364 + 48 * 117 + 4 * 7));
        count << (f_dwread_epd(EPD(0x58A364 + 48 * 117 + 4 * 7)))
        # (Line 108) foreach(idx : EUDLoopRange(6))
        for idx in EUDLoopRange(6):
            # (Line 109) {
            # (Line 110) sakura.P_type[idx] = 1;  		sakura.P_player[idx] = count; 		sakura.P_observer[idx] = count;
            _ARRW(sakura.P_type, idx) << (1)
            _ARRW(sakura.P_player, idx) << (count)
            _ARRW(sakura.P_observer, idx) << (count)
            # (Line 111) yashiro.P_type[idx] = 1; 		yashiro.P_player[idx] = count; 		yashiro.P_observer[idx] = count;
            _ARRW(yashiro.P_type, idx) << (1)
            _ARRW(yashiro.P_player, idx) << (count)
            _ARRW(yashiro.P_observer, idx) << (count)
            # (Line 112) rin.P_type[idx] = 1;  			rin.P_player[idx] = count; 			rin.P_observer[idx] = count;
            _ARRW(rin.P_type, idx) << (1)
            _ARRW(rin.P_player, idx) << (count)
            _ARRW(rin.P_observer, idx) << (count)
            # (Line 113) seraphim.P_type[idx] = 1;  	seraphim.P_player[idx] = count; 		seraphim.P_observer[idx] = count;
            _ARRW(seraphim.P_type, idx) << (1)
            _ARRW(seraphim.P_player, idx) << (count)
            _ARRW(seraphim.P_observer, idx) << (count)
            # (Line 115) iwahune.P_type[idx] = 1;  	iwahune.P_player[idx] = count; 		iwahune.P_observer[idx] = count;
            _ARRW(iwahune.P_type, idx) << (1)
            _ARRW(iwahune.P_player, idx) << (count)
            _ARRW(iwahune.P_observer, idx) << (count)
            # (Line 116) }
            # (Line 117) SetDeaths(6, SetTo, 0, 117);

        # (Line 118) }
        DoActions(SetDeaths(6, SetTo, 0, 117))
        # (Line 119) if (Deaths(P7, AtLeast, 1, " `SkillText4"))
    EUDEndIf()
    if EUDIf()(Deaths(P7, AtLeast, 1, " `SkillText4")):
        # (Line 120) {
        # (Line 121) count = dwread_epd(EPD(0x58A364 + 48 * 157 + 4 * 7));
        count << (f_dwread_epd(EPD(0x58A364 + 48 * 157 + 4 * 7)))
        # (Line 123) foreach(idx : EUDLoopRange(6))
        for idx in EUDLoopRange(6):
            # (Line 124) {
            # (Line 125) mn.P_type[idx] = 1;  			mn.P_player[idx] = count; 			mn.P_observer[idx] = count;
            _ARRW(mn.P_type, idx) << (1)
            _ARRW(mn.P_player, idx) << (count)
            _ARRW(mn.P_observer, idx) << (count)
            # (Line 126) emetselch.P_type[idx] = 1; 	emetselch.P_player[idx] = count; 		emetselch.P_observer[idx] = count;
            _ARRW(emetselch.P_type, idx) << (1)
            _ARRW(emetselch.P_player, idx) << (count)
            _ARRW(emetselch.P_observer, idx) << (count)
            # (Line 127) magellan.P_type[idx] = 1;  	magellan.P_player[idx] = count; 		magellan.P_observer[idx] = count;
            _ARRW(magellan.P_type, idx) << (1)
            _ARRW(magellan.P_player, idx) << (count)
            _ARRW(magellan.P_observer, idx) << (count)
            # (Line 128) }
            # (Line 129) SetDeaths(6, SetTo, 0, 157);

        # (Line 130) }
        DoActions(SetDeaths(6, SetTo, 0, 157))
        # (Line 131) }
    EUDEndIf()
    # (Line 133) function OldCharacterVoiceUltimate()

# (Line 134) {
@EUDFunc
def OldCharacterVoiceUltimate():
    # (Line 135) var count;
    count = EUDVariable()
    # (Line 137) if (Deaths(P7, AtLeast, 1, " `SkillText_Uiltimate"))
    if EUDIf()(Deaths(P7, AtLeast, 1, " `SkillText_Uiltimate")):
        # (Line 138) {
        # (Line 139) count = dwread_epd(EPD(0x58A364 + 48 * 222 + 4 * 7));
        count << (f_dwread_epd(EPD(0x58A364 + 48 * 222 + 4 * 7)))
        # (Line 141) foreach(idx : EUDLoopRange(6))
        for idx in EUDLoopRange(6):
            # (Line 142) {
            # (Line 143) tenshi.P_type[idx] = 2;  		tenshi.P_player[idx] = count; 			tenshi.P_observer[idx] = count;
            _ARRW(tenshi.P_type, idx) << (2)
            _ARRW(tenshi.P_player, idx) << (count)
            _ARRW(tenshi.P_observer, idx) << (count)
            # (Line 144) miyuki.P_type[idx] = 2;  		miyuki.P_player[idx] = count; 		miyuki.P_observer[idx] = count;
            _ARRW(miyuki.P_type, idx) << (2)
            _ARRW(miyuki.P_player, idx) << (count)
            _ARRW(miyuki.P_observer, idx) << (count)
            # (Line 145) negev.P_type[idx] = 2;  		negev.P_player[idx] = count; 			negev.P_observer[idx] = count;
            _ARRW(negev.P_type, idx) << (2)
            _ARRW(negev.P_player, idx) << (count)
            _ARRW(negev.P_observer, idx) << (count)
            # (Line 146) cecillia.P_type[idx] = 2;  		cecillia.P_player[idx] = count; 		cecillia.P_observer[idx] = count;
            _ARRW(cecillia.P_type, idx) << (2)
            _ARRW(cecillia.P_player, idx) << (count)
            _ARRW(cecillia.P_observer, idx) << (count)
            # (Line 147) anzu.P_type[idx] = 2; 		anzu.P_player[idx] = count; 			anzu.P_observer[idx] = count;
            _ARRW(anzu.P_type, idx) << (2)
            _ARRW(anzu.P_player, idx) << (count)
            _ARRW(anzu.P_observer, idx) << (count)
            # (Line 148) hotomoka.P_type[idx] = 2;  	hotomoka.P_player[idx] = count; 		hotomoka.P_observer[idx] = count;
            _ARRW(hotomoka.P_type, idx) << (2)
            _ARRW(hotomoka.P_player, idx) << (count)
            _ARRW(hotomoka.P_observer, idx) << (count)
            # (Line 149) alterego.P_type[idx] = 2;  	alterego.P_player[idx] = count; 		alterego.P_observer[idx] = count;
            _ARRW(alterego.P_type, idx) << (2)
            _ARRW(alterego.P_player, idx) << (count)
            _ARRW(alterego.P_observer, idx) << (count)
            # (Line 150) ryuzu.P_type[idx] = 2; 		ryuzu.P_player[idx] = count; 			ryuzu.P_observer[idx] = count;
            _ARRW(ryuzu.P_type, idx) << (2)
            _ARRW(ryuzu.P_player, idx) << (count)
            _ARRW(ryuzu.P_observer, idx) << (count)
            # (Line 152) sakura.P_type[idx] = 2;  		sakura.P_player[idx] = count; 		sakura.P_observer[idx] = count;
            _ARRW(sakura.P_type, idx) << (2)
            _ARRW(sakura.P_player, idx) << (count)
            _ARRW(sakura.P_observer, idx) << (count)
            # (Line 153) yashiro.P_type[idx] = 2; 		yashiro.P_player[idx] = count; 		yashiro.P_observer[idx] = count;
            _ARRW(yashiro.P_type, idx) << (2)
            _ARRW(yashiro.P_player, idx) << (count)
            _ARRW(yashiro.P_observer, idx) << (count)
            # (Line 154) rin.P_type[idx] = 2;  			rin.P_player[idx] = count; 			rin.P_observer[idx] = count;
            _ARRW(rin.P_type, idx) << (2)
            _ARRW(rin.P_player, idx) << (count)
            _ARRW(rin.P_observer, idx) << (count)
            # (Line 155) seraphim.P_type[idx] = 2;  	seraphim.P_player[idx] = count; 		seraphim.P_observer[idx] = count;
            _ARRW(seraphim.P_type, idx) << (2)
            _ARRW(seraphim.P_player, idx) << (count)
            _ARRW(seraphim.P_observer, idx) << (count)
            # (Line 157) iwahune.P_type[idx] = 2;  	iwahune.P_player[idx] = count; 		iwahune.P_observer[idx] = count;
            _ARRW(iwahune.P_type, idx) << (2)
            _ARRW(iwahune.P_player, idx) << (count)
            _ARRW(iwahune.P_observer, idx) << (count)
            # (Line 158) mn.P_type[idx] = 2;  			mn.P_player[idx] = count; 			mn.P_observer[idx] = count;
            _ARRW(mn.P_type, idx) << (2)
            _ARRW(mn.P_player, idx) << (count)
            _ARRW(mn.P_observer, idx) << (count)
            # (Line 159) emetselch.P_type[idx] = 2; 	emetselch.P_player[idx] = count; 		emetselch.P_observer[idx] = count;
            _ARRW(emetselch.P_type, idx) << (2)
            _ARRW(emetselch.P_player, idx) << (count)
            _ARRW(emetselch.P_observer, idx) << (count)
            # (Line 160) magellan.P_type[idx] = 2;  	magellan.P_player[idx] = count; 		magellan.P_observer[idx] = count;
            _ARRW(magellan.P_type, idx) << (2)
            _ARRW(magellan.P_player, idx) << (count)
            _ARRW(magellan.P_observer, idx) << (count)
            # (Line 161) }
            # (Line 163) SetDeaths(6, SetTo, 0, 222);

        # (Line 164) }
        DoActions(SetDeaths(6, SetTo, 0, 222))
        # (Line 165) }
    EUDEndIf()
    # (Line 167) function OldCharacterVoiceUnique()

# (Line 168) {
@EUDFunc
def OldCharacterVoiceUnique():
    # (Line 169) var count;
    count = EUDVariable()
    # (Line 171) if (Deaths(P7, AtLeast, 1, " `SkillText_Unique"))
    if EUDIf()(Deaths(P7, AtLeast, 1, " `SkillText_Unique")):
        # (Line 172) {
        # (Line 173) count = dwread_epd(EPD(0x58A364 + 48 * 188 + 4 * 7));
        count << (f_dwread_epd(EPD(0x58A364 + 48 * 188 + 4 * 7)))
        # (Line 175) foreach(idx : EUDLoopRange(6))
        for idx in EUDLoopRange(6):
            # (Line 176) {
            # (Line 177) tenshi.P_type[idx] = 3;  		tenshi.P_player[idx] = count; 			tenshi.P_observer[idx] = count;
            _ARRW(tenshi.P_type, idx) << (3)
            _ARRW(tenshi.P_player, idx) << (count)
            _ARRW(tenshi.P_observer, idx) << (count)
            # (Line 178) miyuki.P_type[idx] = 3;  		miyuki.P_player[idx] = count; 		miyuki.P_observer[idx] = count;
            _ARRW(miyuki.P_type, idx) << (3)
            _ARRW(miyuki.P_player, idx) << (count)
            _ARRW(miyuki.P_observer, idx) << (count)
            # (Line 179) negev.P_type[idx] = 3;  		negev.P_player[idx] = count; 			negev.P_observer[idx] = count;
            _ARRW(negev.P_type, idx) << (3)
            _ARRW(negev.P_player, idx) << (count)
            _ARRW(negev.P_observer, idx) << (count)
            # (Line 180) cecillia.P_type[idx] = 3;  		cecillia.P_player[idx] = count; 		cecillia.P_observer[idx] = count;
            _ARRW(cecillia.P_type, idx) << (3)
            _ARRW(cecillia.P_player, idx) << (count)
            _ARRW(cecillia.P_observer, idx) << (count)
            # (Line 181) anzu.P_type[idx] = 3; 		anzu.P_player[idx] = count; 			anzu.P_observer[idx] = count;
            _ARRW(anzu.P_type, idx) << (3)
            _ARRW(anzu.P_player, idx) << (count)
            _ARRW(anzu.P_observer, idx) << (count)
            # (Line 182) hotomoka.P_type[idx] = 3;  	hotomoka.P_player[idx] = count; 		hotomoka.P_observer[idx] = count;
            _ARRW(hotomoka.P_type, idx) << (3)
            _ARRW(hotomoka.P_player, idx) << (count)
            _ARRW(hotomoka.P_observer, idx) << (count)
            # (Line 183) alterego.P_type[idx] = 3;  	alterego.P_player[idx] = count; 		alterego.P_observer[idx] = count;
            _ARRW(alterego.P_type, idx) << (3)
            _ARRW(alterego.P_player, idx) << (count)
            _ARRW(alterego.P_observer, idx) << (count)
            # (Line 184) ryuzu.P_type[idx] = 3; 		ryuzu.P_player[idx] = count; 			ryuzu.P_observer[idx] = count;
            _ARRW(ryuzu.P_type, idx) << (3)
            _ARRW(ryuzu.P_player, idx) << (count)
            _ARRW(ryuzu.P_observer, idx) << (count)
            # (Line 186) sakura.P_type[idx] = 3;  		sakura.P_player[idx] = count; 		sakura.P_observer[idx] = count;
            _ARRW(sakura.P_type, idx) << (3)
            _ARRW(sakura.P_player, idx) << (count)
            _ARRW(sakura.P_observer, idx) << (count)
            # (Line 187) yashiro.P_type[idx] = 3; 		yashiro.P_player[idx] = count; 		yashiro.P_observer[idx] = count;
            _ARRW(yashiro.P_type, idx) << (3)
            _ARRW(yashiro.P_player, idx) << (count)
            _ARRW(yashiro.P_observer, idx) << (count)
            # (Line 188) rin.P_type[idx] = 3;  			rin.P_player[idx] = count; 			rin.P_observer[idx] = count;
            _ARRW(rin.P_type, idx) << (3)
            _ARRW(rin.P_player, idx) << (count)
            _ARRW(rin.P_observer, idx) << (count)
            # (Line 189) seraphim.P_type[idx] = 3;  	seraphim.P_player[idx] = count; 		seraphim.P_observer[idx] = count;
            _ARRW(seraphim.P_type, idx) << (3)
            _ARRW(seraphim.P_player, idx) << (count)
            _ARRW(seraphim.P_observer, idx) << (count)
            # (Line 191) iwahune.P_type[idx] = 3;  	iwahune.P_player[idx] = count; 		iwahune.P_observer[idx] = count;
            _ARRW(iwahune.P_type, idx) << (3)
            _ARRW(iwahune.P_player, idx) << (count)
            _ARRW(iwahune.P_observer, idx) << (count)
            # (Line 192) mn.P_type[idx] = 3;  			mn.P_player[idx] = count; 			mn.P_observer[idx] = count;
            _ARRW(mn.P_type, idx) << (3)
            _ARRW(mn.P_player, idx) << (count)
            _ARRW(mn.P_observer, idx) << (count)
            # (Line 193) emetselch.P_type[idx] = 3; 	emetselch.P_player[idx] = count; 		emetselch.P_observer[idx] = count;
            _ARRW(emetselch.P_type, idx) << (3)
            _ARRW(emetselch.P_player, idx) << (count)
            _ARRW(emetselch.P_observer, idx) << (count)
            # (Line 194) magellan.P_type[idx] = 3;  	magellan.P_player[idx] = count; 		magellan.P_observer[idx] = count;
            _ARRW(magellan.P_type, idx) << (3)
            _ARRW(magellan.P_player, idx) << (count)
            _ARRW(magellan.P_observer, idx) << (count)
            # (Line 195) }
            # (Line 197) SetDeaths(6, SetTo, 0, 188);

        # (Line 198) }
        DoActions(SetDeaths(6, SetTo, 0, 188))
        # (Line 199) }
    EUDEndIf()
    # (Line 203) function OldVoicemain()

# (Line 204) {
@EUDFunc
def OldVoicemain():
    # (Line 205) OldCharacterVoiceNormal();
    OldCharacterVoiceNormal()
    # (Line 206) OldCharacterVoiceUltimate();
    OldCharacterVoiceUltimate()
    # (Line 207) OldCharacterVoiceUnique();
    OldCharacterVoiceUnique()
    # (Line 208) }
    # (Line 210) function BGMRoutine(cp)

# (Line 211) {
@EUDFunc
def BGMRoutine(cp):
    # (Line 212) if (Bring(cp, AtLeast, 1, "Terran SCV", "[BGM]ON"))
    if EUDIf()(Bring(cp, AtLeast, 1, "Terran SCV", "[BGM]ON")):
        # (Line 213) {
        # (Line 214) if (v.bgmWait[cp] == 0)
        if EUDIf()(v.bgmWait[cp] == 0):
            # (Line 215) {
            # (Line 216) PlayWAV("BGM03.ogg");
            # (Line 217) v.stb.print("　　\x04\x1F# N\x04ow \x04Playing... \x04");
            DoActions(PlayWAV("BGM03.ogg"))
            v.stb.print("　　\x04\x1F# N\x04ow \x04Playing... \x04")
            # (Line 218) v.bgmWait[cp] = 2712;
            _ARRW(v.bgmWait, cp) << (2712)
            # (Line 219) }
            # (Line 220) }
        EUDEndIf()
        # (Line 222) if (v.bgmWait[cp] > 0)
    EUDEndIf()
    if EUDIf()(v.bgmWait[cp] <= 0, neg=True):
        # (Line 223) {
        # (Line 224) v.bgmWait[cp] -= 1;
        _ARRW(v.bgmWait, cp).__isub__(1)
        # (Line 225) }
        # (Line 226) }
    EUDEndIf()
    # (Line 228) function main(playerID)

# (Line 229) {
@EUDFunc
def f_main(playerID):
    # (Line 231) rusaruka.main(playerID);
    rusaruka.f_main(playerID)
    # (Line 232) chtholly.main(playerID);
    chtholly.f_main(playerID)
    # (Line 233) maihime.main(playerID);
    maihime.f_main(playerID)
    # (Line 234) tenshi.main(playerID);
    tenshi.f_main(playerID)
    # (Line 235) miyuki.main(playerID);
    miyuki.f_main(playerID)
    # (Line 238) negev.main(playerID);
    negev.f_main(playerID)
    # (Line 239) cecillia.main(playerID);
    cecillia.f_main(playerID)
    # (Line 240) anzu.main(playerID);
    anzu.f_main(playerID)
    # (Line 241) hotomoka.main(playerID);
    hotomoka.f_main(playerID)
    # (Line 242) alterego.main(playerID);
    alterego.f_main(playerID)
    # (Line 245) ryuzu.main(playerID);
    ryuzu.f_main(playerID)
    # (Line 246) kurumi.main(playerID);
    kurumi.f_main(playerID)
    # (Line 247) sakura.main(playerID);
    sakura.f_main(playerID)
    # (Line 248) yashiro.main(playerID);
    yashiro.f_main(playerID)
    # (Line 249) rin.main(playerID);
    rin.f_main(playerID)
    # (Line 252) seraphim.main(playerID);
    seraphim.f_main(playerID)
    # (Line 254) iwahune.main(playerID);
    iwahune.f_main(playerID)
    # (Line 255) mn.main(playerID);
    mn.f_main(playerID)
    # (Line 256) emetselch.main(playerID);
    emetselch.f_main(playerID)
    # (Line 259) magellan.main(playerID);
    magellan.f_main(playerID)
    # (Line 260) yuuna.main(playerID);
    yuuna.f_main(playerID)
    # (Line 261) mayuri.main(playerID);
    mayuri.f_main(playerID)
    # (Line 262) nanami.main(playerID);
    nanami.f_main(playerID)
    # (Line 263) milim.main(playerID);
    milim.f_main(playerID)
    # (Line 266) yume.main(playerID);
    yume.f_main(playerID)
    # (Line 267) magane.main(playerID);
    magane.f_main(playerID)
    # (Line 268) oda.main(playerID);
    oda.f_main(playerID)
    # (Line 269) ekidona.main(playerID);
    ekidona.f_main(playerID)
    # (Line 270) niwa.main(playerID);
    niwa.f_main(playerID)
    # (Line 273) park.main(playerID);
    park.f_main(playerID)
    # (Line 274) hodaka.main(playerID);
    hodaka.f_main(playerID)
    # (Line 275) tsukasa.main(playerID);
    tsukasa.f_main(playerID)
    # (Line 277) BGMRoutine(playerID);
    BGMRoutine(playerID)
    # (Line 278) }
