## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _RELIMP(path, mod_name):
    import inspect, pathlib, importlib.util
    p = pathlib.Path(inspect.getabsfile(inspect.currentframe())).parent
    for s in path.split("."):
        if s == "":  p = p.parent
        else:  p = p / s
    try:
        spec = importlib.util.spec_from_file_location(mod_name, p / (mod_name + ".py"))
        module = importlib.util.module_from_spec(spec)
        spec.loader.exec_module(module)
    except FileNotFoundError:
        loader = EPSLoader(mod_name, str(p / (mod_name + ".eps")))
        spec = importlib.util.spec_from_loader(mod_name, loader)
        module = loader.create_module(spec)
        loader.exec_module(module)
    return module

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import PluginVariables as msqcvar;
import PluginVariables as msqcvar
# (Line 2) import variable as v;
import variable as v
# (Line 3) import func.text as t;
from func import text as t
# (Line 4) import system.getUnitID as unitID;
from system import getUnitID as unitID
# (Line 6) function SelectText(playerID)
# (Line 7) {
@EUDFunc
def SelectText(playerID):
    # (Line 8) switch (unitID.UnitID[playerID])
    EUDSwitch(unitID.UnitID[playerID])
    # (Line 9) {
    # (Line 10) case 51:		// Infested Kerrigan
    _t1 = EUDSwitchCase()
    # (Line 11) if (unitID.UnitHP[playerID] == 2450)
    if _t1(51):
        if EUDIf()(unitID.UnitHP[playerID] == 2450):
            # (Line 12) {
            # (Line 13) if 		(unitID.PlayerID[playerID] == 8) 		{ t.T_CharaterNum[playerID] = 1;   }	// Rusaruka
            if EUDIf()(unitID.PlayerID[playerID] == 8):
                _ARRW(t.T_CharaterNum, playerID) << (1)
                # (Line 14) else if 	(unitID.PlayerID[playerID] == 9)		{ t.T_CharaterNum[playerID] = 8;   }	// Anzu
            if EUDElseIf()(unitID.PlayerID[playerID] == 9):
                _ARRW(t.T_CharaterNum, playerID) << (8)
                # (Line 15) else if 	(unitID.PlayerID[playerID] == 10)		{ t.T_CharaterNum[playerID] = 9;   }	// HotoMoka
            if EUDElseIf()(unitID.PlayerID[playerID] == 10):
                _ARRW(t.T_CharaterNum, playerID) << (9)
                # (Line 16) else if 	(unitID.PlayerID[playerID] == 11) 		{ t.T_CharaterNum[playerID] = 19; }	// Margot & Naruge
            if EUDElseIf()(unitID.PlayerID[playerID] == 11):
                _ARRW(t.T_CharaterNum, playerID) << (19)
                # (Line 17) else 										{ t.T_CharaterNum[playerID] = v.P_HeroID[unitID.PlayerID[playerID]]; }
            if EUDElse()():
                _ARRW(t.T_CharaterNum, playerID) << (v.P_HeroID[unitID.PlayerID[playerID]])
                # (Line 18) }
            EUDEndIf()
            # (Line 19) else 	// Upper 5th
            # (Line 20) {
        if EUDElse()():
            # (Line 21) if 		(unitID.PlayerID[playerID] == 8) 		{ t.T_CharaterNum[playerID] = 43; }	// Tanya
            if EUDIf()(unitID.PlayerID[playerID] == 8):
                _ARRW(t.T_CharaterNum, playerID) << (43)
                # (Line 22) else 										{ t.T_CharaterNum[playerID] = v.P_HeroID[unitID.PlayerID[playerID]]; }
            if EUDElse()():
                _ARRW(t.T_CharaterNum, playerID) << (v.P_HeroID[unitID.PlayerID[playerID]])
                # (Line 23) }
            EUDEndIf()
            # (Line 24) unitID.UnitID[playerID] = 0;
        EUDEndIf()
        _ARRW(unitID.UnitID, playerID) << (0)
        # (Line 25) break;
        EUDBreak()
        # (Line 26) case 77:		// Fenix (Zealot)
    _t8 = EUDSwitchCase()
    # (Line 27) if (unitID.UnitHP[playerID] == 2450)
    if _t8(77):
        if EUDIf()(unitID.UnitHP[playerID] == 2450):
            # (Line 28) {
            # (Line 29) if 		(unitID.PlayerID[playerID] == 8) 		{ t.T_CharaterNum[playerID] = 2;   }	// Chtholly
            if EUDIf()(unitID.PlayerID[playerID] == 8):
                _ARRW(t.T_CharaterNum, playerID) << (2)
                # (Line 30) else if 	(unitID.PlayerID[playerID] == 9) 		{ t.T_CharaterNum[playerID] = 7;   }	// Cecilia
            if EUDElseIf()(unitID.PlayerID[playerID] == 9):
                _ARRW(t.T_CharaterNum, playerID) << (7)
                # (Line 31) else if 	(unitID.PlayerID[playerID] == 10)		{ t.T_CharaterNum[playerID] = 10; }	// Alther Ago
            if EUDElseIf()(unitID.PlayerID[playerID] == 10):
                _ARRW(t.T_CharaterNum, playerID) << (10)
                # (Line 32) else if 	(unitID.PlayerID[playerID] == 11) 		{ t.T_CharaterNum[playerID] = 17; }	// Kiana
            if EUDElseIf()(unitID.PlayerID[playerID] == 11):
                _ARRW(t.T_CharaterNum, playerID) << (17)
                # (Line 33) else 										{ t.T_CharaterNum[playerID] = v.P_HeroID[unitID.PlayerID[playerID]]; }
            if EUDElse()():
                _ARRW(t.T_CharaterNum, playerID) << (v.P_HeroID[unitID.PlayerID[playerID]])
                # (Line 34) }
            EUDEndIf()
            # (Line 35) else 	// Upper 5th
            # (Line 36) {
        if EUDElse()():
            # (Line 37) if 		(unitID.PlayerID[playerID] == 8) 		{ t.T_CharaterNum[playerID] = 39; }	// Ayano
            if EUDIf()(unitID.PlayerID[playerID] == 8):
                _ARRW(t.T_CharaterNum, playerID) << (39)
                # (Line 38) else 										{ t.T_CharaterNum[playerID] = v.P_HeroID[unitID.PlayerID[playerID]]; }
            if EUDElse()():
                _ARRW(t.T_CharaterNum, playerID) << (v.P_HeroID[unitID.PlayerID[playerID]])
                # (Line 39) }
            EUDEndIf()
            # (Line 40) unitID.UnitID[playerID] = 0;
        EUDEndIf()
        _ARRW(unitID.UnitID, playerID) << (0)
        # (Line 41) break;
        EUDBreak()
        # (Line 42) case 74:		// Dark Templar (Hero)
    _t15 = EUDSwitchCase()
    # (Line 43) if (unitID.UnitHP[playerID] == 2450)
    if _t15(74):
        if EUDIf()(unitID.UnitHP[playerID] == 2450):
            # (Line 44) {
            # (Line 45) if 		 (unitID.PlayerID[playerID] == 8) 		{ t.T_CharaterNum[playerID] = 3;   }	// Maihime
            if EUDIf()(unitID.PlayerID[playerID] == 8):
                _ARRW(t.T_CharaterNum, playerID) << (3)
                # (Line 46) else if 	 (unitID.PlayerID[playerID] == 9) 		{ t.T_CharaterNum[playerID] = 4;   }	// Tenshi
            if EUDElseIf()(unitID.PlayerID[playerID] == 9):
                _ARRW(t.T_CharaterNum, playerID) << (4)
                # (Line 47) else if 	 (unitID.PlayerID[playerID] == 10) 	{ t.T_CharaterNum[playerID] = 5;   }	// Miyuki
            if EUDElseIf()(unitID.PlayerID[playerID] == 10):
                _ARRW(t.T_CharaterNum, playerID) << (5)
                # (Line 48) else if 	 (unitID.PlayerID[playerID] == 11) 	{ t.T_CharaterNum[playerID] = 26; }	// Yume
            if EUDElseIf()(unitID.PlayerID[playerID] == 11):
                _ARRW(t.T_CharaterNum, playerID) << (26)
                # (Line 49) else 										{ t.T_CharaterNum[playerID] = v.P_HeroID[unitID.PlayerID[playerID]]; }
            if EUDElse()():
                _ARRW(t.T_CharaterNum, playerID) << (v.P_HeroID[unitID.PlayerID[playerID]])
                # (Line 50) }
            EUDEndIf()
            # (Line 51) else 	// Upper 5th
            # (Line 52) {
        if EUDElse()():
            # (Line 53) if 	 (unitID.PlayerID[playerID] == 8) 	{ t.T_CharaterNum[playerID] = 42; }	// king
            if EUDIf()(unitID.PlayerID[playerID] == 8):
                _ARRW(t.T_CharaterNum, playerID) << (42)
                # (Line 54) else 										{ t.T_CharaterNum[playerID] = v.P_HeroID[unitID.PlayerID[playerID]]; }
            if EUDElse()():
                _ARRW(t.T_CharaterNum, playerID) << (v.P_HeroID[unitID.PlayerID[playerID]])
                # (Line 55) }
            EUDEndIf()
            # (Line 57) unitID.UnitID[playerID] = 0;
        EUDEndIf()
        _ARRW(unitID.UnitID, playerID) << (0)
        # (Line 58) break;
        EUDBreak()
        # (Line 59) case 16:		// Sarah Kerrigan (Ghost)
    _t22 = EUDSwitchCase()
    # (Line 60) if 		(unitID.PlayerID[playerID] == 8) 		{ t.T_CharaterNum[playerID] = 6;   }	// Negev
    if _t22(16):
        if EUDIf()(unitID.PlayerID[playerID] == 8):
            _ARRW(t.T_CharaterNum, playerID) << (6)
            # (Line 61) else if 	(unitID.PlayerID[playerID] == 9) 		{ t.T_CharaterNum[playerID] = 12; }	// Kurumi
        if EUDElseIf()(unitID.PlayerID[playerID] == 9):
            _ARRW(t.T_CharaterNum, playerID) << (12)
            # (Line 62) else if 	(unitID.PlayerID[playerID] == 10) 		{ t.T_CharaterNum[playerID] = 13; }	// Sakura
        if EUDElseIf()(unitID.PlayerID[playerID] == 10):
            _ARRW(t.T_CharaterNum, playerID) << (13)
            # (Line 63) else if 	(unitID.PlayerID[playerID] == 11) 		{ t.T_CharaterNum[playerID] = 16; }	// Seraphim
        if EUDElseIf()(unitID.PlayerID[playerID] == 11):
            _ARRW(t.T_CharaterNum, playerID) << (16)
            # (Line 64) else 										{ t.T_CharaterNum[playerID] = v.P_HeroID[unitID.PlayerID[playerID]]; }
        if EUDElse()():
            _ARRW(t.T_CharaterNum, playerID) << (v.P_HeroID[unitID.PlayerID[playerID]])
            # (Line 65) unitID.UnitID[playerID] = 0;
        EUDEndIf()
        _ARRW(unitID.UnitID, playerID) << (0)
        # (Line 66) break;
        EUDBreak()
        # (Line 67) case 54:		// Devouring One (Zergling)
    _t27 = EUDSwitchCase()
    # (Line 68) if (unitID.UnitHP[playerID] == 2450)
    if _t27(54):
        if EUDIf()(unitID.UnitHP[playerID] == 2450):
            # (Line 69) {
            # (Line 70) if 		(unitID.PlayerID[playerID] == 8) 		{ t.T_CharaterNum[playerID] = 11; }	// Ryuzu
            if EUDIf()(unitID.PlayerID[playerID] == 8):
                _ARRW(t.T_CharaterNum, playerID) << (11)
                # (Line 71) else if 	(unitID.PlayerID[playerID] == 9) 		{ t.T_CharaterNum[playerID] = 15; }	// Rin
            if EUDElseIf()(unitID.PlayerID[playerID] == 9):
                _ARRW(t.T_CharaterNum, playerID) << (15)
                # (Line 72) else if 	(unitID.PlayerID[playerID] == 10) 		{ t.T_CharaterNum[playerID] = 22; }	// Yuuna
            if EUDElseIf()(unitID.PlayerID[playerID] == 10):
                _ARRW(t.T_CharaterNum, playerID) << (22)
                # (Line 73) else if 	(unitID.PlayerID[playerID] == 11) 		{ t.T_CharaterNum[playerID] = 25; }	// Milim
            if EUDElseIf()(unitID.PlayerID[playerID] == 11):
                _ARRW(t.T_CharaterNum, playerID) << (25)
                # (Line 74) else 										{ t.T_CharaterNum[playerID] = v.P_HeroID[unitID.PlayerID[playerID]]; }
            if EUDElse()():
                _ARRW(t.T_CharaterNum, playerID) << (v.P_HeroID[unitID.PlayerID[playerID]])
                # (Line 75) }
            EUDEndIf()
            # (Line 76) else 	// Upper 5th
            # (Line 77) {
        if EUDElse()():
            # (Line 78) if 		(unitID.PlayerID[playerID] == 8) 		{ t.T_CharaterNum[playerID] = 33; }	// Zenitsu
            if EUDIf()(unitID.PlayerID[playerID] == 8):
                _ARRW(t.T_CharaterNum, playerID) << (33)
                # (Line 79) else if 	(unitID.PlayerID[playerID] == 9) 		{ t.T_CharaterNum[playerID] = 38; }	// Teio
            if EUDElseIf()(unitID.PlayerID[playerID] == 9):
                _ARRW(t.T_CharaterNum, playerID) << (38)
                # (Line 80) else 										{ t.T_CharaterNum[playerID] = v.P_HeroID[unitID.PlayerID[playerID]]; }
            if EUDElse()():
                _ARRW(t.T_CharaterNum, playerID) << (v.P_HeroID[unitID.PlayerID[playerID]])
                # (Line 81) }
            EUDEndIf()
            # (Line 82) unitID.UnitID[playerID] = 0;
        EUDEndIf()
        _ARRW(unitID.UnitID, playerID) << (0)
        # (Line 83) break;
        EUDBreak()
        # (Line 84) case 99:		// Samir Duran (Ghost)
    _t35 = EUDSwitchCase()
    # (Line 85) if (unitID.UnitHP[playerID] == 2450)
    if _t35(99):
        if EUDIf()(unitID.UnitHP[playerID] == 2450):
            # (Line 86) {
            # (Line 87) if 		(unitID.PlayerID[playerID] == 8) 		{ t.T_CharaterNum[playerID] = 14; }	// Yashiro
            if EUDIf()(unitID.PlayerID[playerID] == 8):
                _ARRW(t.T_CharaterNum, playerID) << (14)
                # (Line 88) else if 	(unitID.PlayerID[playerID] == 9) 		{ t.T_CharaterNum[playerID] = 18; }	// Tenkai
            if EUDElseIf()(unitID.PlayerID[playerID] == 9):
                _ARRW(t.T_CharaterNum, playerID) << (18)
                # (Line 89) else if 	(unitID.PlayerID[playerID] == 10) 		{ t.T_CharaterNum[playerID] = 20; }	// EmetSelch
            if EUDElseIf()(unitID.PlayerID[playerID] == 10):
                _ARRW(t.T_CharaterNum, playerID) << (20)
                # (Line 90) else if 	(unitID.PlayerID[playerID] == 11) 		{ t.T_CharaterNum[playerID] = 28; }	// Oda
            if EUDElseIf()(unitID.PlayerID[playerID] == 11):
                _ARRW(t.T_CharaterNum, playerID) << (28)
                # (Line 91) else 										{ t.T_CharaterNum[playerID] = v.P_HeroID[unitID.PlayerID[playerID]]; }
            if EUDElse()():
                _ARRW(t.T_CharaterNum, playerID) << (v.P_HeroID[unitID.PlayerID[playerID]])
                # (Line 92) }
            EUDEndIf()
            # (Line 93) else 	// Upper 5th
            # (Line 94) {
        if EUDElse()():
            # (Line 95) if 		(unitID.PlayerID[playerID] == 8) 		{ t.T_CharaterNum[playerID] = 41; }	// Gozo
            if EUDIf()(unitID.PlayerID[playerID] == 8):
                _ARRW(t.T_CharaterNum, playerID) << (41)
                # (Line 96) else 										{ t.T_CharaterNum[playerID] = v.P_HeroID[unitID.PlayerID[playerID]]; }
            if EUDElse()():
                _ARRW(t.T_CharaterNum, playerID) << (v.P_HeroID[unitID.PlayerID[playerID]])
                # (Line 97) }
            EUDEndIf()
            # (Line 98) unitID.UnitID[playerID] = 0;
        EUDEndIf()
        _ARRW(unitID.UnitID, playerID) << (0)
        # (Line 99) break;
        EUDBreak()
        # (Line 100) case 64:		// Probe
    _t42 = EUDSwitchCase()
    # (Line 101) if 		(unitID.PlayerID[playerID] == 8) 		{ t.T_CharaterNum[playerID] = 21; }	// Magellan
    if _t42(64):
        if EUDIf()(unitID.PlayerID[playerID] == 8):
            _ARRW(t.T_CharaterNum, playerID) << (21)
            # (Line 102) else if 	(unitID.PlayerID[playerID] == 9) 		{ t.T_CharaterNum[playerID] = 23; }	// Mayuri
        if EUDElseIf()(unitID.PlayerID[playerID] == 9):
            _ARRW(t.T_CharaterNum, playerID) << (23)
            # (Line 103) else if 	(unitID.PlayerID[playerID] == 10) 		{ t.T_CharaterNum[playerID] = 24; }	// Chiaki
        if EUDElseIf()(unitID.PlayerID[playerID] == 10):
            _ARRW(t.T_CharaterNum, playerID) << (24)
            # (Line 104) else if 	(unitID.PlayerID[playerID] == 11) 		{ t.T_CharaterNum[playerID] = 44; }	// Megumi
        if EUDElseIf()(unitID.PlayerID[playerID] == 11):
            _ARRW(t.T_CharaterNum, playerID) << (44)
            # (Line 105) else 										{ t.T_CharaterNum[playerID] = v.P_HeroID[unitID.PlayerID[playerID]]; }
        if EUDElse()():
            _ARRW(t.T_CharaterNum, playerID) << (v.P_HeroID[unitID.PlayerID[playerID]])
            # (Line 106) unitID.UnitID[playerID] = 0;
        EUDEndIf()
        _ARRW(unitID.UnitID, playerID) << (0)
        # (Line 107) break;
        EUDBreak()
        # (Line 108) case 53:		// Hunter Killer (Hydralisk)
    _t47 = EUDSwitchCase()
    # (Line 109) if (unitID.UnitHP[playerID] == 2450)
    if _t47(53):
        if EUDIf()(unitID.UnitHP[playerID] == 2450):
            # (Line 110) {
            # (Line 111) if 		(unitID.PlayerID[playerID] == 8) 		{ t.T_CharaterNum[playerID] = 27; }	// Magane
            if EUDIf()(unitID.PlayerID[playerID] == 8):
                _ARRW(t.T_CharaterNum, playerID) << (27)
                # (Line 112) else if 	(unitID.PlayerID[playerID] == 9) 		{ t.T_CharaterNum[playerID] = 30; }	// Niwa
            if EUDElseIf()(unitID.PlayerID[playerID] == 9):
                _ARRW(t.T_CharaterNum, playerID) << (30)
                # (Line 113) else if 	(unitID.PlayerID[playerID] == 10) 		{ t.T_CharaterNum[playerID] = 34; }	// Tsukasa
            if EUDElseIf()(unitID.PlayerID[playerID] == 10):
                _ARRW(t.T_CharaterNum, playerID) << (34)
                # (Line 114) else if 	(unitID.PlayerID[playerID] == 11) 		{ t.T_CharaterNum[playerID] = 36; }	// Law
            if EUDElseIf()(unitID.PlayerID[playerID] == 11):
                _ARRW(t.T_CharaterNum, playerID) << (36)
                # (Line 115) else 										{ t.T_CharaterNum[playerID] = v.P_HeroID[unitID.PlayerID[playerID]]; }
            if EUDElse()():
                _ARRW(t.T_CharaterNum, playerID) << (v.P_HeroID[unitID.PlayerID[playerID]])
                # (Line 116) }
            EUDEndIf()
            # (Line 117) else 	// Upper 5th
            # (Line 118) {
        if EUDElse()():
            # (Line 119) if 		(unitID.PlayerID[playerID] == 8) 		{ t.T_CharaterNum[playerID] = 37; }	// Sato
            if EUDIf()(unitID.PlayerID[playerID] == 8):
                _ARRW(t.T_CharaterNum, playerID) << (37)
                # (Line 120) else 										{ t.T_CharaterNum[playerID] = v.P_HeroID[unitID.PlayerID[playerID]]; }
            if EUDElse()():
                _ARRW(t.T_CharaterNum, playerID) << (v.P_HeroID[unitID.PlayerID[playerID]])
                # (Line 121) }
            EUDEndIf()
            # (Line 122) unitID.UnitID[playerID] = 0;
        EUDEndIf()
        _ARRW(unitID.UnitID, playerID) << (0)
        # (Line 123) break;
        EUDBreak()
        # (Line 124) case 34:		// High Templar
    _t54 = EUDSwitchCase()
    # (Line 125) if 		(unitID.PlayerID[playerID] == 8) 		{ t.T_CharaterNum[playerID] = 29; }	// Ekidona
    if _t54(34):
        if EUDIf()(unitID.PlayerID[playerID] == 8):
            _ARRW(t.T_CharaterNum, playerID) << (29)
            # (Line 126) else if 		(unitID.PlayerID[playerID] == 9) 		{ t.T_CharaterNum[playerID] = 40; }	// Reichel
        if EUDElseIf()(unitID.PlayerID[playerID] == 9):
            _ARRW(t.T_CharaterNum, playerID) << (40)
            # (Line 127) else 										{ t.T_CharaterNum[playerID] = v.P_HeroID[unitID.PlayerID[playerID]]; }
        if EUDElse()():
            _ARRW(t.T_CharaterNum, playerID) << (v.P_HeroID[unitID.PlayerID[playerID]])
            # (Line 128) unitID.UnitID[playerID] = 0;
        EUDEndIf()
        _ARRW(unitID.UnitID, playerID) << (0)
        # (Line 129) break;
        EUDBreak()
        # (Line 130) case 10:		// Gui Montag (Firebat)
    _t57 = EUDSwitchCase()
    # (Line 131) if 		(unitID.PlayerID[playerID] == 8) 		{ t.T_CharaterNum[playerID] = 31; }	// Park
    if _t57(10):
        if EUDIf()(unitID.PlayerID[playerID] == 8):
            _ARRW(t.T_CharaterNum, playerID) << (31)
            # (Line 132) else if 	(unitID.PlayerID[playerID] == 9) 		{ t.T_CharaterNum[playerID] = 32; }	// Hodaka
        if EUDElseIf()(unitID.PlayerID[playerID] == 9):
            _ARRW(t.T_CharaterNum, playerID) << (32)
            # (Line 133) else if 	(unitID.PlayerID[playerID] == 10) 		{ t.T_CharaterNum[playerID] = 35; }	// Endeavor
        if EUDElseIf()(unitID.PlayerID[playerID] == 10):
            _ARRW(t.T_CharaterNum, playerID) << (35)
            # (Line 134) else 										{ t.T_CharaterNum[playerID] = v.P_HeroID[unitID.PlayerID[playerID]]; }
        if EUDElse()():
            _ARRW(t.T_CharaterNum, playerID) << (v.P_HeroID[unitID.PlayerID[playerID]])
            # (Line 135) unitID.UnitID[playerID] = 0;
        EUDEndIf()
        _ARRW(unitID.UnitID, playerID) << (0)
        # (Line 136) break;
        EUDBreak()
        # (Line 137) }
    # (Line 139) if (t.T_CharaterNum[playerID] > 0 && Switch("StartSwitch", Cleared))
    EUDEndSwitch()
    if EUDIf()(EUDSCAnd()(t.T_CharaterNum[playerID] <= 0, neg=True)(Switch("StartSwitch", Cleared))()):
        # (Line 140) {
        # (Line 141) v.stb.printAt(0, "\x13\x17[ \x04",ptr2s(t.T_CharacterName[t.T_CharaterNum[playerID]])," \x17]");
        v.stb.printAt(0, "\x13\x17[ \x04", ptr2s(t.T_CharacterName[t.T_CharaterNum[playerID]]), " \x17]")
        # (Line 142) v.stb.printAt(1, "\x13\x04- \x17", ptr2s(t.T_CharacterTitle[t.T_CharaterNum[playerID]]) , " \x04-");
        v.stb.printAt(1, "\x13\x04- \x17", ptr2s(t.T_CharacterTitle[t.T_CharaterNum[playerID]]), " \x04-")
        # (Line 143) v.stb.printAt(2, "\n");
        v.stb.printAt(2, "\n")
        # (Line 144) v.stb.printAt(3, "\x13\x17", ptr2s(t.T_CharacterType[t.T_CharaterNum[playerID]]), ptr2s(t.T_SubText[1]));
        v.stb.printAt(3, "\x13\x17", ptr2s(t.T_CharacterType[t.T_CharaterNum[playerID]]), ptr2s(t.T_SubText[1]))
        # (Line 145) v.stb.printAt(4, "\x13\x04", ptr2s(t.T_CharacterNeed[t.T_CharaterNum[playerID]]), ptr2s(t.T_SubText[2]));
        v.stb.printAt(4, "\x13\x04", ptr2s(t.T_CharacterNeed[t.T_CharaterNum[playerID]]), ptr2s(t.T_SubText[2]))
        # (Line 146) v.stb.printAt(5, "\n");
        v.stb.printAt(5, "\n")
        # (Line 147) v.stb.printAt(6, "\x13", ptr2s(t.T_CharacterTrait[t.T_CharaterNum[playerID]]));
        v.stb.printAt(6, "\x13", ptr2s(t.T_CharacterTrait[t.T_CharaterNum[playerID]]))
        # (Line 148) v.stb.printAt(7, "\n");
        v.stb.printAt(7, "\n")
        # (Line 150) t.T_CharaterNum[playerID] = 0;
        _ARRW(t.T_CharaterNum, playerID) << (0)
        # (Line 151) }
        # (Line 152) }
    EUDEndIf()
