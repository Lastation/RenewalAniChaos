## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _RELIMP(path, mod_name):
    import inspect, pathlib, importlib.util
    p = pathlib.Path(inspect.getabsfile(inspect.currentframe())).parent
    for s in path.split("."):
        if s == "":  p = p.parent
        else:  p = p / s
    try:
        spec = importlib.util.spec_from_file_location(mod_name, p / (mod_name + ".py"))
        module = importlib.util.module_from_spec(spec)
        spec.loader.exec_module(module)
    except FileNotFoundError:
        loader = EPSLoader(mod_name, str(p / (mod_name + ".eps")))
        spec = importlib.util.spec_from_loader(mod_name, loader)
        module = loader.create_module(spec)
        loader.exec_module(module)
    return module

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import PluginVariables as msqcvar;
import PluginVariables as msqcvar
# (Line 2) import variable as v;
import variable as v
# (Line 3) import func.trig as trg;
from func import trig as trg
# (Line 4) import func.trigepic as epic;
from func import trigepic as epic
# (Line 5) import func.trigadv as adv;
from func import trigadv as adv
# (Line 6) import func.sound as s;
from func import sound as s
# (Line 8) var x = 0;
x = EUDCreateVariables(1)
_IGVA([x], lambda: [0])
# (Line 9) var y = 0;
y = EUDCreateVariables(1)
_IGVA([y], lambda: [0])
# (Line 11) var d = 0;
d = EUDCreateVariables(1)
_IGVA([d], lambda: [0])
# (Line 13) function main(playerID)
# (Line 14) {
@EUDFunc
def f_main(playerID):
    # (Line 15) trg.Debuff_BanReturn();
    trg.Debuff_BanReturn()
    # (Line 16) trg.Buff_ShieldFix(1);
    trg.Buff_ShieldFix(1)
    # (Line 17) if (v.P_CountMain[playerID] >= 1)
    if EUDIf()(v.P_CountMain[playerID] >= 1):
        # (Line 18) {
        # (Line 19) trg.Debuff_Stop();
        trg.Debuff_Stop()
        # (Line 20) }
        # (Line 22) if (v.P_CountMain[playerID] < 2)
    EUDEndIf()
    if EUDIf()(v.P_CountMain[playerID] >= 2, neg=True):
        # (Line 23) {
        # (Line 24) MoveLocation(v.P_HoldLocation[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
        # (Line 25) trg.Effect_Recall();
        DoActions(MoveLocation(v.P_HoldLocation[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
        trg.Effect_Recall()
        # (Line 26) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
        # (Line 27) if (v.P_LoopMain[playerID] < 23)
        DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
        if EUDIf()(v.P_LoopMain[playerID] >= 23, neg=True):
            # (Line 28) {
            # (Line 29) Order("40 + 1n Mojo", P7, "Anywhere", Move, v.P_LocationID[playerID]);
            # (Line 30) Order("40 + 1n Mojo", P8, "Anywhere", Move, v.P_LocationID[playerID]);
            DoActions(Order("40 + 1n Mojo", P7, "Anywhere", Move, v.P_LocationID[playerID]))
            # (Line 31) }
            DoActions(Order("40 + 1n Mojo", P8, "Anywhere", Move, v.P_LocationID[playerID]))
            # (Line 32) else if (v.P_LoopMain[playerID] < 40)
        if EUDElseIf()(v.P_LoopMain[playerID] >= 40, neg=True):
            # (Line 33) {
            # (Line 34) Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
            # (Line 35) }
            DoActions(Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
            # (Line 36) }
        EUDEndIf()
        # (Line 38) if (v.P_WaitMain[playerID] == 0)
    EUDEndIf()
    if EUDIf()(v.P_WaitMain[playerID] == 0):
        # (Line 39) {
        # (Line 40) if (v.P_CountMain[playerID] == 0)
        if EUDIf()(v.P_CountMain[playerID] == 0):
            # (Line 41) {
            # (Line 42) trg.Main_Wait(160);
            trg.Main_Wait(160)
            # (Line 44) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 46) if (v.P_LoopMain[playerID] == 26)
            if EUDIf()(v.P_LoopMain[playerID] == 26):
                # (Line 47) {
                # (Line 48) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 49) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 50) }
                # (Line 51) }
            EUDEndIf()
            # (Line 52) else if (v.P_CountMain[playerID] == 1)
        if EUDElseIf()(v.P_CountMain[playerID] == 1):
            # (Line 53) {
            # (Line 54) if (v.P_LoopMain[playerID] < 4)
            if EUDIf()(v.P_LoopMain[playerID] >= 4, neg=True):
                # (Line 55) {
                # (Line 56) trg.Shape_NxNSquare(playerID, 1, "40 + 1n Gantrithor", (3 + 2 * v.P_LoopMain[playerID]), 75);
                trg.Shape_NxNSquare(playerID, 1, "40 + 1n Gantrithor", (3 + 2 * v.P_LoopMain[playerID]), 75)
                # (Line 57) epic.Shape_NxNSquare(playerID, 1, "60 + 1n Archon", (3 + 2 * v.P_LoopMain[playerID]), 75, 1);
                epic.Shape_NxNSquare(playerID, 1, "60 + 1n Archon", (3 + 2 * v.P_LoopMain[playerID]), 75, 1)
                # (Line 58) KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID);
                # (Line 59) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID))
                # (Line 61) if (v.P_LoopMain[playerID] % 2 == 0)
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                if EUDIf()(v.P_LoopMain[playerID] % 2 == 0):
                    # (Line 62) {
                    # (Line 63) trg.Shape_NxNSquare(playerID, 1, "40 + 1n Mojo", (3 + 2 * v.P_LoopMain[playerID]), 75);
                    trg.Shape_NxNSquare(playerID, 1, "40 + 1n Mojo", (3 + 2 * v.P_LoopMain[playerID]), 75)
                    # (Line 64) if (playerID < 3)
                    if EUDIf()(playerID >= 3, neg=True):
                        # (Line 65) GiveUnits(All, "40 + 1n Mojo", playerID, "Anywhere", P7);
                        # (Line 66) else
                        DoActions(GiveUnits(All, "40 + 1n Mojo", playerID, "Anywhere", P7))
                        # (Line 67) GiveUnits(All, "40 + 1n Mojo", playerID, "Anywhere", P8);
                    if EUDElse()():
                        # (Line 68) }
                        DoActions(GiveUnits(All, "40 + 1n Mojo", playerID, "Anywhere", P8))
                    EUDEndIf()
                    # (Line 70) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                EUDEndIf()
                # (Line 71) Order("40 + 1n Mojo", P7, "Anywhere", Move, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 72) Order("40 + 1n Mojo", P8, "Anywhere", Move, v.P_LocationID[playerID]);
                DoActions(Order("40 + 1n Mojo", P7, "Anywhere", Move, v.P_LocationID[playerID]))
                # (Line 73) }
                DoActions(Order("40 + 1n Mojo", P8, "Anywhere", Move, v.P_LocationID[playerID]))
                # (Line 74) else if (v.P_LoopMain[playerID] == 4)
            if EUDElseIf()(v.P_LoopMain[playerID] == 4):
                # (Line 75) {
                # (Line 76) trg.Shape_Edge(playerID, 1, "60 + 1n Dragoon", 45, 11, 250);
                trg.Shape_Edge(playerID, 1, "60 + 1n Dragoon", 45, 11, 250)
                # (Line 77) trg.Shape_Circle(playerID, 1, "60 + 1n Dragoon", 45, 20, 175);
                trg.Shape_Circle(playerID, 1, "60 + 1n Dragoon", 45, 20, 175)
                # (Line 78) adv.Shape_NxNSquareAt2(playerID, 1, "60 + 1n Dragoon", 3, 50, 200, 200);
                adv.Shape_NxNSquareAt2(playerID, 1, "60 + 1n Dragoon", 3, 50, 200, 200)
                # (Line 79) adv.Shape_NxNSquareAt2(playerID, 1, "60 + 1n Dragoon", 3, 50, -200, -200);
                adv.Shape_NxNSquareAt2(playerID, 1, "60 + 1n Dragoon", 3, 50, -200, -200)
                # (Line 80) adv.Shape_NxNSquareAt2(playerID, 1, "60 + 1n Dragoon", 3, 50, -200, 200);
                adv.Shape_NxNSquareAt2(playerID, 1, "60 + 1n Dragoon", 3, 50, -200, 200)
                # (Line 81) adv.Shape_NxNSquareAt2(playerID, 1, "60 + 1n Dragoon", 3, 50, 200, -200);
                adv.Shape_NxNSquareAt2(playerID, 1, "60 + 1n Dragoon", 3, 50, 200, -200)
                # (Line 82) trg.Shape_Square(playerID, 6, "60 + 1n High Templar", 200, 0);
                trg.Shape_Square(playerID, 6, "60 + 1n High Templar", 200, 0)
                # (Line 83) trg.Shape_Square(playerID, 6, "60 + 1n High Templar", 200, 200);
                trg.Shape_Square(playerID, 6, "60 + 1n High Templar", 200, 200)
                # (Line 84) trg.Shape_Edge(playerID, 1, "60 + 1n Archon", 45, 11, 250);
                trg.Shape_Edge(playerID, 1, "60 + 1n Archon", 45, 11, 250)
                # (Line 85) trg.Shape_Circle(playerID, 1, "60 + 1n Archon", 45, 20, 175);
                trg.Shape_Circle(playerID, 1, "60 + 1n Archon", 45, 20, 175)
                # (Line 87) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 88) MoveUnit(All, "60 + 1n High Templar", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 89) MoveUnit(All, "60 + 1n Archon", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                DoActions(MoveUnit(All, "60 + 1n High Templar", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                # (Line 90) Order("60 + 1n High Templar", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveUnit(All, "60 + 1n Archon", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                # (Line 91) Order("60 + 1n Archon", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(Order("60 + 1n High Templar", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 92) Order("60 + 1n Dragoon", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(Order("60 + 1n Archon", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 93) }
                DoActions(Order("60 + 1n Dragoon", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 95) if (v.P_LoopMain[playerID] == 0)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 96) {
                # (Line 97) s.CharacterVoice(9);
                s.CharacterVoice(9)
                # (Line 98) }
                # (Line 100) if (v.P_LoopMain[playerID] == 23)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] == 23):
                # (Line 101) {
                # (Line 102) s.CharacterVoice(10);
                s.CharacterVoice(10)
                # (Line 103) SetSwitch("JunkYardDog", Set);
                # (Line 104) }
                DoActions(SetSwitch("JunkYardDog", Set))
                # (Line 105) else if (v.P_LoopMain[playerID] == 24)
            if EUDElseIf()(v.P_LoopMain[playerID] == 24):
                # (Line 106) {
                # (Line 107) SetSwitch("JunkYardDog", Clear);
                # (Line 108) }
                DoActions(SetSwitch("JunkYardDog", Clear))
                # (Line 109) if (v.P_LoopMain[playerID] == 32)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] == 32):
                # (Line 110) {
                # (Line 111) SetSwitch("JunkYardDog", Set);
                # (Line 112) }
                DoActions(SetSwitch("JunkYardDog", Set))
                # (Line 113) else if (v.P_LoopMain[playerID] == 33)
            if EUDElseIf()(v.P_LoopMain[playerID] == 33):
                # (Line 114) {
                # (Line 115) SetSwitch("JunkYardDog", Clear);
                # (Line 116) }
                DoActions(SetSwitch("JunkYardDog", Clear))
                # (Line 118) if (v.P_LoopMain[playerID] == 37)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] == 37):
                # (Line 119) {
                # (Line 120) if (playerID < 3)
                if EUDIf()(playerID >= 3, neg=True):
                    # (Line 121) GiveUnits(All, "40 + 1n Mojo", P7, "Anywhere", playerID);
                    # (Line 122) else
                    DoActions(GiveUnits(All, "40 + 1n Mojo", P7, "Anywhere", playerID))
                    # (Line 123) GiveUnits(All, "40 + 1n Mojo", P8, "Anywhere", playerID);
                if EUDElse()():
                    # (Line 125) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                    DoActions(GiveUnits(All, "40 + 1n Mojo", P8, "Anywhere", playerID))
                EUDEndIf()
                # (Line 126) Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 127) }
                DoActions(Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 128) if (v.P_LoopMain[playerID] > 37 || v.P_LoopMain[playerID] < 55)
            EUDEndIf()
            if EUDIf()(EUDSCOr()(v.P_LoopMain[playerID] <= 37, neg=True)(v.P_LoopMain[playerID] >= 55, neg=True)()):
                # (Line 129) {
                # (Line 130) if (Bring(playerID, AtLeast, 1, "40 + 1n Mojo", "Anywhere"))
                if EUDIf()(Bring(playerID, AtLeast, 1, "40 + 1n Mojo", "Anywhere")):
                    # (Line 131) {
                    # (Line 132) for (var i = 0; i < 12; i++)
                    i = EUDVariable()
                    i << (0)
                    if EUDWhile()(i >= 12, neg=True):
                        def _t23():
                            i.__iadd__(1)
                        # (Line 133) {
                        # (Line 134) trg.MoveLoc("40 + 1n Mojo", playerID, 0, 0);
                        trg.MoveLoc("40 + 1n Mojo", playerID, 0, 0)
                        # (Line 135) RemoveUnitAt(1, "40 + 1n Mojo", "Anywhere", playerID);
                        # (Line 136) trg.SkillUnit(playerID, 1, "80 + 1n Artanis");
                        DoActions(RemoveUnitAt(1, "40 + 1n Mojo", "Anywhere", playerID))
                        trg.SkillUnit(playerID, 1, "80 + 1n Artanis")
                        # (Line 137) trg.SkillUnit(playerID, 1, "130 + 1n Arbiter");
                        trg.SkillUnit(playerID, 1, "130 + 1n Arbiter")
                        # (Line 138) if (i % 3 == 0)
                        if EUDIf()(i % 3 == 0):
                            # (Line 139) {
                            # (Line 140) trg.SkillUnit(playerID, 1, "120 + 1n Archon");
                            trg.SkillUnit(playerID, 1, "120 + 1n Archon")
                            # (Line 141) }
                            # (Line 142) else if (i % 3 == 1)
                        if EUDElseIf()(i % 3 == 1):
                            # (Line 143) {
                            # (Line 144) trg.SkillUnit(playerID, 1, "Kakaru (Twilight)");
                            trg.SkillUnit(playerID, 1, "Kakaru (Twilight)")
                            # (Line 145) }
                            # (Line 146) else if (i % 3 == 2)
                        if EUDElseIf()(i % 3 == 2):
                            # (Line 147) {
                            # (Line 148) trg.SkillUnit(playerID, 1, "100 + 1n Dragoon");
                            trg.SkillUnit(playerID, 1, "100 + 1n Dragoon")
                            # (Line 149) }
                            # (Line 150) }
                        EUDEndIf()
                        # (Line 152) KillUnitAt(All, "100 + 1n Dragoon", "Anywhere", playerID);
                        EUDSetContinuePoint()
                        _t23()
                    EUDEndWhile()
                    # (Line 153) KillUnitAt(All, "120 + 1n Archon", "Anywhere", playerID);
                    DoActions(KillUnitAt(All, "100 + 1n Dragoon", "Anywhere", playerID))
                    # (Line 154) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);
                    DoActions(KillUnitAt(All, "120 + 1n Archon", "Anywhere", playerID))
                    # (Line 156) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                    DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID))
                    # (Line 157) Order("80 + 1n Artanis", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                    DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                    # (Line 158) Order("130 + 1n Arbiter", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                    DoActions(Order("80 + 1n Artanis", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                    # (Line 159) }
                    DoActions(Order("130 + 1n Arbiter", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                    # (Line 160) }
                EUDEndIf()
                # (Line 162) trg.Main_Wait(160);
            EUDEndIf()
            trg.Main_Wait(160)
            # (Line 164) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 166) if (v.P_LoopMain[playerID] == 55)
            if EUDIf()(v.P_LoopMain[playerID] == 55):
                # (Line 167) {
                # (Line 168) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 169) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 170) }
                # (Line 171) }
            EUDEndIf()
            # (Line 172) else if (v.P_CountMain[playerID] == 2)
        if EUDElseIf()(v.P_CountMain[playerID] == 2):
            # (Line 173) {
            # (Line 174) KillUnitAt(All, "60 + 1n Dragoon", "Anywhere", playerID);
            # (Line 175) KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID);
            DoActions(KillUnitAt(All, "60 + 1n Dragoon", "Anywhere", playerID))
            # (Line 176) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
            DoActions(KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID))
            # (Line 177) KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID);
            DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
            # (Line 178) KillUnitAt(All, "80 + 1n Artanis", "Anywhere", playerID);
            DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID))
            # (Line 179) KillUnitAt(All, "130 + 1n Arbiter", "Anywhere", playerID);
            DoActions(KillUnitAt(All, "80 + 1n Artanis", "Anywhere", playerID))
            # (Line 180) SetSwitch(53 + playerID, Clear);
            DoActions(KillUnitAt(All, "130 + 1n Arbiter", "Anywhere", playerID))
            # (Line 181) SetSwitch("UiltimateSwitch", Clear);
            DoActions(SetSwitch(53 + playerID, Clear))
            # (Line 182) trg.SkillEnd();
            DoActions(SetSwitch("UiltimateSwitch", Clear))
            trg.SkillEnd()
            # (Line 183) }
            # (Line 184) }
        EUDEndIf()
        # (Line 185) }
    EUDEndIf()
