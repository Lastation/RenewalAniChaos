## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import variable as v;
import variable as v
# (Line 2) import func.trig as trg;
from func import trig as trg
# (Line 3) import func.trigepic as epic;
from func import trigepic as epic
# (Line 4) import func.trigadv as adv;
from func import trigadv as adv
# (Line 6) function main(playerID)
# (Line 7) {
@EUDFunc
def f_main(playerID):
    # (Line 8) trg.Debuff_BanReturn();
    trg.Debuff_BanReturn()
    # (Line 9) trg.Debuff_Stop();
    trg.Debuff_Stop()
    # (Line 11) if (v.P_WaitMain[playerID] == 0)
    if EUDIf()(v.P_WaitMain[playerID] == 0):
        # (Line 12) {
        # (Line 13) if (v.P_CountMain[playerID] == 0)
        if EUDIf()(v.P_CountMain[playerID] == 0):
            # (Line 14) {
            # (Line 15) RemoveUnitAt(All, "60 + 1n Danimoth", "Anywhere", playerID);
            # (Line 16) RemoveUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID);
            DoActions(RemoveUnitAt(All, "60 + 1n Danimoth", "Anywhere", playerID))
            # (Line 18) if (v.P_LoopMain[playerID] < 4)
            DoActions(RemoveUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID))
            if EUDIf()(v.P_LoopMain[playerID] >= 4, neg=True):
                # (Line 19) {
                # (Line 20) var x = 50 - 50 * v.P_LoopMain[playerID];
                x = EUDVariable()
                x << (50 - 50 * v.P_LoopMain[playerID])
                # (Line 21) var y = 100;
                y = EUDVariable()
                y << (100)
                # (Line 23) if (v.P_LoopMain[playerID] % 2 == 0){
                if EUDIf()(v.P_LoopMain[playerID] % 2 == 0):
                    # (Line 24) epic.Shape_Dot(playerID, 1, "60 + 1n Archon", x, y, 1);
                    epic.Shape_Dot(playerID, 1, "60 + 1n Archon", x, y, 1)
                    # (Line 25) } else {
                if EUDElse()():
                    # (Line 26) trg.Shape_Dot(playerID, 1, "60 + 1n Archon", x, y);
                    trg.Shape_Dot(playerID, 1, "60 + 1n Archon", x, y)
                    # (Line 27) }
                    # (Line 29) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                EUDEndIf()
                # (Line 30) }
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                # (Line 31) if (v.P_LoopMain[playerID] == 0)
            EUDEndIf()
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 32) {
                # (Line 33) trg.Shape_Line(playerID, 1, "60 + 1n Danimoth", 45, 5, 50, 75);
                trg.Shape_Line(playerID, 1, "60 + 1n Danimoth", 45, 5, 50, 75)
                # (Line 34) trg.Shape_Line(playerID, 1, "60 + 1n Danimoth", 225, 5, 50, 75);
                trg.Shape_Line(playerID, 1, "60 + 1n Danimoth", 225, 5, 50, 75)
                # (Line 35) trg.Shape_Line(playerID, 1, "60 + 1n High Templar", 45, 5, 50, 75);
                trg.Shape_Line(playerID, 1, "60 + 1n High Templar", 45, 5, 50, 75)
                # (Line 36) trg.Shape_Line(playerID, 1, "60 + 1n High Templar", 225, 5, 50, 75);
                trg.Shape_Line(playerID, 1, "60 + 1n High Templar", 225, 5, 50, 75)
                # (Line 38) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 39) Order("60 + 1n Danimoth", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 41) KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID);
                DoActions(Order("60 + 1n Danimoth", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 42) }
                DoActions(KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID))
                # (Line 43) else if (v.P_LoopMain[playerID] == 1)
            if EUDElseIf()(v.P_LoopMain[playerID] == 1):
                # (Line 44) {
                # (Line 45) trg.Shape_Line(playerID, 1, "40 + 1n Mojo", 135, 5, 50, 75);
                trg.Shape_Line(playerID, 1, "40 + 1n Mojo", 135, 5, 50, 75)
                # (Line 46) trg.Shape_Line(playerID, 1, "40 + 1n Mojo", 315, 5, 50, 75);
                trg.Shape_Line(playerID, 1, "40 + 1n Mojo", 315, 5, 50, 75)
                # (Line 47) trg.Shape_Line(playerID, 1, "Protoss Dark Templar", 135, 5, 50, 75);
                trg.Shape_Line(playerID, 1, "Protoss Dark Templar", 135, 5, 50, 75)
                # (Line 48) trg.Shape_Line(playerID, 1, "Protoss Dark Templar", 315, 5, 50, 75);
                trg.Shape_Line(playerID, 1, "Protoss Dark Templar", 315, 5, 50, 75)
                # (Line 50) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 51) Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 53) KillUnitAt(All, "Protoss Dark Templar", "Anywhere", playerID);
                DoActions(Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 54) }
                DoActions(KillUnitAt(All, "Protoss Dark Templar", "Anywhere", playerID))
                # (Line 55) else if (v.P_LoopMain[playerID] == 2)
            if EUDElseIf()(v.P_LoopMain[playerID] == 2):
                # (Line 56) {
                # (Line 57) trg.Shape_Cross(playerID, 1, "60 + 1n Danimoth", 0, 5, 50);
                trg.Shape_Cross(playerID, 1, "60 + 1n Danimoth", 0, 5, 50)
                # (Line 58) trg.Shape_Cross(playerID, 1, "60 + 1n High Templar", 0, 5, 50);
                trg.Shape_Cross(playerID, 1, "60 + 1n High Templar", 0, 5, 50)
                # (Line 60) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 61) Order("60 + 1n Danimoth", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 63) KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID);
                DoActions(Order("60 + 1n Danimoth", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 64) }
                DoActions(KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID))
                # (Line 65) else if (v.P_LoopMain[playerID] == 3)
            if EUDElseIf()(v.P_LoopMain[playerID] == 3):
                # (Line 66) {
                # (Line 67) trg.Shape_Cross(playerID, 1, "40 + 1n Mojo", 45, 5, 50);
                trg.Shape_Cross(playerID, 1, "40 + 1n Mojo", 45, 5, 50)
                # (Line 68) trg.Shape_Cross(playerID, 1, "Protoss Dark Templar", 45, 5, 50);
                trg.Shape_Cross(playerID, 1, "Protoss Dark Templar", 45, 5, 50)
                # (Line 70) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 71) Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 73) KillUnitAt(All, "Protoss Dark Templar", "Anywhere", playerID);
                DoActions(Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 74) }
                DoActions(KillUnitAt(All, "Protoss Dark Templar", "Anywhere", playerID))
                # (Line 75) else if (v.P_LoopMain[playerID] == 4)
            if EUDElseIf()(v.P_LoopMain[playerID] == 4):
                # (Line 76) {
                # (Line 77) epic.Shape_Line(playerID, 1, "60 + 1n Danimoth", 45, 5, 50, 75, 1);
                epic.Shape_Line(playerID, 1, "60 + 1n Danimoth", 45, 5, 50, 75, 1)
                # (Line 78) epic.Shape_Line(playerID, 1, "60 + 1n Danimoth", 225, 5, 50, 75, 1);
                epic.Shape_Line(playerID, 1, "60 + 1n Danimoth", 225, 5, 50, 75, 1)
                # (Line 79) trg.Shape_Line(playerID, 1, "60 + 1n High Templar", 45, 5, 50, 75);
                trg.Shape_Line(playerID, 1, "60 + 1n High Templar", 45, 5, 50, 75)
                # (Line 80) trg.Shape_Line(playerID, 1, "60 + 1n High Templar", 225, 5, 50, 75);
                trg.Shape_Line(playerID, 1, "60 + 1n High Templar", 225, 5, 50, 75)
                # (Line 82) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 83) Order("60 + 1n Danimoth", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 85) KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID);
                DoActions(Order("60 + 1n Danimoth", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 86) }
                DoActions(KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID))
                # (Line 87) else if (v.P_LoopMain[playerID] == 5)
            if EUDElseIf()(v.P_LoopMain[playerID] == 5):
                # (Line 88) {
                # (Line 89) epic.Shape_Line(playerID, 1, "40 + 1n Mojo", 135, 5, 50, 75, 1);
                epic.Shape_Line(playerID, 1, "40 + 1n Mojo", 135, 5, 50, 75, 1)
                # (Line 90) epic.Shape_Line(playerID, 1, "40 + 1n Mojo", 315, 5, 50, 75, 1);
                epic.Shape_Line(playerID, 1, "40 + 1n Mojo", 315, 5, 50, 75, 1)
                # (Line 91) trg.Shape_Line(playerID, 1, "Protoss Dark Templar", 135, 5, 50, 75);
                trg.Shape_Line(playerID, 1, "Protoss Dark Templar", 135, 5, 50, 75)
                # (Line 92) trg.Shape_Line(playerID, 1, "Protoss Dark Templar", 315, 5, 50, 75);
                trg.Shape_Line(playerID, 1, "Protoss Dark Templar", 315, 5, 50, 75)
                # (Line 94) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 95) Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 97) KillUnitAt(All, "Protoss Dark Templar", "Anywhere", playerID);
                DoActions(Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 98) }
                DoActions(KillUnitAt(All, "Protoss Dark Templar", "Anywhere", playerID))
                # (Line 101) trg.Main_Wait(160);
            EUDEndIf()
            trg.Main_Wait(160)
            # (Line 103) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 105) if (v.P_LoopMain[playerID] == 14)
            if EUDIf()(v.P_LoopMain[playerID] == 14):
                # (Line 106) {
                # (Line 107) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 108) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 109) }
                # (Line 110) }
            EUDEndIf()
            # (Line 111) else if (v.P_CountMain[playerID] == 1)
        if EUDElseIf()(v.P_CountMain[playerID] == 1):
            # (Line 112) {
            # (Line 114) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 115) {
                # (Line 116) RemoveUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID);
                # (Line 118) var x = 100;
                DoActions(RemoveUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID))
                x = EUDVariable()
                x << (100)
                # (Line 120) adv.Shape_NxNSquareAt2(playerID, 1, "60 + 1n Danimoth", 2, 50, x, x);
                adv.Shape_NxNSquareAt2(playerID, 1, "60 + 1n Danimoth", 2, 50, x, x)
                # (Line 121) adv.Shape_NxNSquareAt2(playerID, 1, "60 + 1n Danimoth", 2, 50, -x, x);
                adv.Shape_NxNSquareAt2(playerID, 1, "60 + 1n Danimoth", 2, 50, -x, x)
                # (Line 122) adv.Shape_NxNSquareAt2(playerID, 1, "60 + 1n Danimoth", 2, 50, x, -x);
                adv.Shape_NxNSquareAt2(playerID, 1, "60 + 1n Danimoth", 2, 50, x, -x)
                # (Line 123) adv.Shape_NxNSquareAt2(playerID, 1, "60 + 1n Danimoth", 2, 50, -x, -x);
                adv.Shape_NxNSquareAt2(playerID, 1, "60 + 1n Danimoth", 2, 50, -x, -x)
                # (Line 124) adv.Shape_NxNSquareAt2(playerID, 1, "60 + 1n Archon", 2, 50, x, x);
                adv.Shape_NxNSquareAt2(playerID, 1, "60 + 1n Archon", 2, 50, x, x)
                # (Line 125) adv.Shape_NxNSquareAt2(playerID, 1, "60 + 1n Archon", 2, 50, -x, x);
                adv.Shape_NxNSquareAt2(playerID, 1, "60 + 1n Archon", 2, 50, -x, x)
                # (Line 126) adv.Shape_NxNSquareAt2(playerID, 1, "60 + 1n Archon", 2, 50, x, -x);
                adv.Shape_NxNSquareAt2(playerID, 1, "60 + 1n Archon", 2, 50, x, -x)
                # (Line 127) adv.Shape_NxNSquareAt2(playerID, 1, "60 + 1n Archon", 2, 50, -x, -x);
                adv.Shape_NxNSquareAt2(playerID, 1, "60 + 1n Archon", 2, 50, -x, -x)
                # (Line 129) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 130) Order("60 + 1n Danimoth", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 132) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                DoActions(Order("60 + 1n Danimoth", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 133) }
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                # (Line 134) else if (v.P_LoopMain[playerID] == 1)
            if EUDElseIf()(v.P_LoopMain[playerID] == 1):
                # (Line 135) {
                # (Line 136) KillUnitAt(All, "60 + 1n Danimoth", "Anywhere", playerID);
                # (Line 138) var x = 75;
                DoActions(KillUnitAt(All, "60 + 1n Danimoth", "Anywhere", playerID))
                x = EUDVariable()
                x << (75)
                # (Line 139) var y = 0;
                y = EUDVariable()
                y << (0)
                # (Line 141) adv.Shape_NxNSquareAt2(playerID, 1, "40 + 1n Mojo", 2, 50, x, y);
                adv.Shape_NxNSquareAt2(playerID, 1, "40 + 1n Mojo", 2, 50, x, y)
                # (Line 142) adv.Shape_NxNSquareAt2(playerID, 1, "40 + 1n Mojo", 2, 50, -x, -y);
                adv.Shape_NxNSquareAt2(playerID, 1, "40 + 1n Mojo", 2, 50, -x, -y)
                # (Line 143) adv.Shape_NxNSquareAt2(playerID, 1, "40 + 1n Mojo", 2, 50, -y, x);
                adv.Shape_NxNSquareAt2(playerID, 1, "40 + 1n Mojo", 2, 50, -y, x)
                # (Line 144) adv.Shape_NxNSquareAt2(playerID, 1, "40 + 1n Mojo", 2, 50, y, -x);
                adv.Shape_NxNSquareAt2(playerID, 1, "40 + 1n Mojo", 2, 50, y, -x)
                # (Line 145) adv.Shape_NxNSquareAt2(playerID, 1, "60 + 1n Archon", 2, 50, x, y);
                adv.Shape_NxNSquareAt2(playerID, 1, "60 + 1n Archon", 2, 50, x, y)
                # (Line 146) adv.Shape_NxNSquareAt2(playerID, 1, "60 + 1n Archon", 2, 50, -x, -y);
                adv.Shape_NxNSquareAt2(playerID, 1, "60 + 1n Archon", 2, 50, -x, -y)
                # (Line 147) adv.Shape_NxNSquareAt2(playerID, 1, "60 + 1n Archon", 2, 50, -y, x);
                adv.Shape_NxNSquareAt2(playerID, 1, "60 + 1n Archon", 2, 50, -y, x)
                # (Line 148) adv.Shape_NxNSquareAt2(playerID, 1, "60 + 1n Archon", 2, 50, y, -x);
                adv.Shape_NxNSquareAt2(playerID, 1, "60 + 1n Archon", 2, 50, y, -x)
                # (Line 150) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
                # (Line 151) Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
                # (Line 153) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
                DoActions(Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 154) }
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                # (Line 156) trg.Main_Wait(160);
            EUDEndIf()
            trg.Main_Wait(160)
            # (Line 158) v.P_LoopMain[playerID] += 1;
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 160) if (v.P_LoopMain[playerID] == 2)
            if EUDIf()(v.P_LoopMain[playerID] == 2):
                # (Line 161) {
                # (Line 162) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 163) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 164) }
                # (Line 165) }
            EUDEndIf()
            # (Line 166) else if (v.P_CountMain[playerID] == 2)
        if EUDElseIf()(v.P_CountMain[playerID] == 2):
            # (Line 167) {
            # (Line 168) KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID);
            # (Line 170) trg.SkillEnd();
            DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID))
            trg.SkillEnd()
            # (Line 171) }
            # (Line 172) }
        EUDEndIf()
        # (Line 173) }
    EUDEndIf()
