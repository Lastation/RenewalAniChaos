## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import PluginVariables as msqcvar;
import PluginVariables as msqcvar
# (Line 2) import variable as v;
import variable as v
# (Line 3) import func.trig as trg;
from func import trig as trg
# (Line 4) import func.sound as s;
from func import sound as s
# (Line 6) var x = 0;
x = EUDCreateVariables(1)
_IGVA([x], lambda: [0])
# (Line 7) function main(playerID)
# (Line 8) {
@EUDFunc
def f_main(playerID):
    # (Line 9) if (v.P_WaitMain[playerID] == 0)
    if EUDIf()(v.P_WaitMain[playerID] == 0):
        # (Line 10) {
        # (Line 12) if (v.P_CountMain[playerID] == 0)
        if EUDIf()(v.P_CountMain[playerID] == 0):
            # (Line 13) {
            # (Line 14) KillUnitAt(All,"40 + 1n Mojo","Anywhere",playerID);
            # (Line 15) KillUnitAt(All,"50 + 1n Battlecruiser","Anywhere",playerID);
            DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID))
            # (Line 16) if (v.P_LoopMain[playerID] == 0)
            DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 17) {
                # (Line 18) trg.Shape_Square(playerID,1,"40 + 1n Mojo",64,64);
                trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 64, 64)
                # (Line 19) trg.MoveLoc(v.P_UnitID[playerID],playerID,0,0);
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 20) Order("40 + 1n Mojo",playerID,"Anywhere",Attack,v.P_LocationID[playerID]);
                # (Line 21) trg.Main_Wait(125);
                DoActions(Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(125)
                # (Line 22) }
                # (Line 23) else if (v.P_LoopMain[playerID] == 1)
            if EUDElseIf()(v.P_LoopMain[playerID] == 1):
                # (Line 24) {
                # (Line 25) trg.Shape_Square(playerID,1,"40 + 1n Mojo",64,0);
                trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 64, 0)
                # (Line 26) trg.MoveLoc(v.P_UnitID[playerID],playerID,0,0);
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 27) Order("40 + 1n Mojo",playerID,"Anywhere",Attack,v.P_LocationID[playerID]);
                # (Line 28) trg.Main_Wait(125);
                DoActions(Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(125)
                # (Line 29) }
                # (Line 30) else if (v.P_LoopMain[playerID] == 2)
            if EUDElseIf()(v.P_LoopMain[playerID] == 2):
                # (Line 31) {
                # (Line 32) trg.Main_Wait(125);
                trg.Main_Wait(125)
                # (Line 33) }
                # (Line 34) else if (v.P_LoopMain[playerID] == 3)
            if EUDElseIf()(v.P_LoopMain[playerID] == 3):
                # (Line 35) {
                # (Line 36) trg.Shape_NxNSquare(playerID,1,"50 + 1n Battlecruiser",3,64);
                trg.Shape_NxNSquare(playerID, 1, "50 + 1n Battlecruiser", 3, 64)
                # (Line 37) trg.MoveLoc(v.P_UnitID[playerID],playerID,0,0);
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 38) Order("50 + 1n Battlecruiser",playerID,"Anywhere",Attack,v.P_LocationID[playerID]);
                # (Line 39) trg.Main_Wait(375);
                DoActions(Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(375)
                # (Line 40) }
                # (Line 41) else if (v.P_LoopMain[playerID] <= 8)
            if EUDElseIf()(v.P_LoopMain[playerID] <= 8):
                # (Line 42) {
                # (Line 43) KillUnitAt(All,"50 + 1n Battlecruiser","Anywhere",playerID);
                # (Line 45) trg.Shape_Square(playerID,1,"80 + 1n Artanis",48*x,0);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                trg.Shape_Square(playerID, 1, "80 + 1n Artanis", 48 * x, 0)
                # (Line 46) x += 1;
                x.__iadd__(1)
                # (Line 47) KillUnitAt(All,"80 + 1n Artanis","Anywhere",playerID);
                # (Line 49) trg.Main_Wait(60);
                DoActions(KillUnitAt(All, "80 + 1n Artanis", "Anywhere", playerID))
                trg.Main_Wait(60)
                # (Line 50) }
                # (Line 51) else if(v.P_LoopMain[playerID] == 9)
            if EUDElseIf()(v.P_LoopMain[playerID] == 9):
                # (Line 52) {
                # (Line 53) x = 0;
                x << (0)
                # (Line 54) }
                # (Line 55) else if (v.P_LoopMain[playerID] <= 14)
            if EUDElseIf()(v.P_LoopMain[playerID] <= 14):
                # (Line 56) {
                # (Line 58) trg.Shape_Square(playerID,1,"80 + 1n Artanis",48*x,48*x);
                trg.Shape_Square(playerID, 1, "80 + 1n Artanis", 48 * x, 48 * x)
                # (Line 59) x += 1;
                x.__iadd__(1)
                # (Line 60) KillUnitAt(All,"80 + 1n Artanis","Anywhere",playerID);
                # (Line 63) trg.Main_Wait(60);
                DoActions(KillUnitAt(All, "80 + 1n Artanis", "Anywhere", playerID))
                trg.Main_Wait(60)
                # (Line 64) }
                # (Line 65) else if(v.P_LoopMain[playerID] == 15)
            if EUDElseIf()(v.P_LoopMain[playerID] == 15):
                # (Line 66) {
                # (Line 67) x = 0;
                x << (0)
                # (Line 68) }
                # (Line 69) else if(v.P_LoopMain[playerID] == 16)
            if EUDElseIf()(v.P_LoopMain[playerID] == 16):
                # (Line 70) {
                # (Line 71) RemoveUnitAt(All,"40 + 1n Marine","Anywhere",playerID);
                # (Line 72) trg.Shape_Square(playerID,1,"40 + 1n Mojo",48,0);
                DoActions(RemoveUnitAt(All, "40 + 1n Marine", "Anywhere", playerID))
                trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 48, 0)
                # (Line 73) trg.Shape_Square(playerID,1,"40 + 1n Mojo",96,0);
                trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 96, 0)
                # (Line 74) trg.Shape_Square(playerID,1,"40 + 1n Mojo",144,0);
                trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 144, 0)
                # (Line 75) trg.Shape_Square(playerID,1,"40 + 1n Mojo",192,0);
                trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 192, 0)
                # (Line 76) trg.Shape_Square(playerID,1,"40 + 1n Mojo",240,0);
                trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 240, 0)
                # (Line 78) trg.Shape_Square(playerID,1,"40 + 1n Mojo",48,48);
                trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 48, 48)
                # (Line 79) trg.Shape_Square(playerID,1,"40 + 1n Mojo",96,96);
                trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 96, 96)
                # (Line 80) trg.Shape_Square(playerID,1,"40 + 1n Mojo",144,144);
                trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 144, 144)
                # (Line 81) trg.Shape_Square(playerID,1,"40 + 1n Mojo",192,192);
                trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 192, 192)
                # (Line 82) trg.Shape_Square(playerID,1,"40 + 1n Mojo",240,240);
                trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 240, 240)
                # (Line 84) trg.MoveLoc(v.P_UnitID[playerID],playerID,0,0);
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 85) Order("40 + 1n Mojo",playerID,"Anywhere",Attack,v.P_LocationID[playerID]);
                # (Line 86) trg.Main_Wait(125);
                DoActions(Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(125)
                # (Line 87) }
                # (Line 88) else if(v.P_LoopMain[playerID] == 17)
            if EUDElseIf()(v.P_LoopMain[playerID] == 17):
                # (Line 89) {
                # (Line 90) trg.Main_Wait(300);
                trg.Main_Wait(300)
                # (Line 91) }
                # (Line 92) else if(v.P_LoopMain[playerID] == 18)
            if EUDElseIf()(v.P_LoopMain[playerID] == 18):
                # (Line 93) {
                # (Line 94) trg.Shape_Square(playerID,1,"50 + 1n Battlecruiser",64,64);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 64, 64)
                # (Line 95) trg.MoveLoc(v.P_UnitID[playerID],playerID,0,0);
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 96) Order("50 + 1n Battlecruiser",playerID,"Anywhere",Attack,v.P_LocationID[playerID]);
                # (Line 97) trg.Main_Wait(600);
                DoActions(Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(600)
                # (Line 98) }
                # (Line 99) else if(v.P_LoopMain[playerID] <= 28)
            if EUDElseIf()(v.P_LoopMain[playerID] <= 28):
                # (Line 100) {
                # (Line 101) trg.Shape_Line(playerID,1,"40 + 1n Mojo",30 * v.P_LoopMain[playerID],4,64,0);
                trg.Shape_Line(playerID, 1, "40 + 1n Mojo", 30 * v.P_LoopMain[playerID], 4, 64, 0)
                # (Line 102) trg.Shape_Line(playerID,1,"40 + 1n Zealot",30 * v.P_LoopMain[playerID],4,64,0);
                trg.Shape_Line(playerID, 1, "40 + 1n Zealot", 30 * v.P_LoopMain[playerID], 4, 64, 0)
                # (Line 103) KillUnitAt(All,"40 + 1n Zealot","Anywhere",playerID);
                # (Line 104) trg.MoveLoc(v.P_UnitID[playerID],playerID,0,0);
                DoActions(KillUnitAt(All, "40 + 1n Zealot", "Anywhere", playerID))
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 105) Order("40 + 1n Mojo",playerID,"Anywhere",Attack,v.P_LocationID[playerID]);
                # (Line 106) trg.Main_Wait(125);
                DoActions(Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(125)
                # (Line 107) }
                # (Line 108) else if(v.P_LoopMain[playerID] == 29)
            if EUDElseIf()(v.P_LoopMain[playerID] == 29):
                # (Line 109) {
                # (Line 110) trg.Shape_Square(playerID,1,"60 + 1n Siege",256,0);
                trg.Shape_Square(playerID, 1, "60 + 1n Siege", 256, 0)
                # (Line 111) trg.Shape_Square(playerID,1,"60 + 1n Siege",192,64);
                trg.Shape_Square(playerID, 1, "60 + 1n Siege", 192, 64)
                # (Line 112) trg.Shape_Square(playerID,1,"60 + 1n Siege",128,128);
                trg.Shape_Square(playerID, 1, "60 + 1n Siege", 128, 128)
                # (Line 113) trg.Shape_Square(playerID,1,"60 + 1n Siege",64,192);
                trg.Shape_Square(playerID, 1, "60 + 1n Siege", 64, 192)
                # (Line 114) trg.MoveLoc(v.P_UnitID[playerID],playerID,0,0);
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 115) Order("60 + 1n Siege",playerID,"Anywhere",Attack,v.P_LocationID[playerID]);
                # (Line 116) trg.Main_Wait(300);
                DoActions(Order("60 + 1n Siege", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(300)
                # (Line 117) }
                # (Line 118) else if (v.P_LoopMain[playerID] == 30
            _t16 = EUDElseIf()
            # (Line 119) && Bring(playerID, AtLeast, 2,"Protoss Arbiter", "[Skill]UseSkill"))
            if _t16(EUDSCAnd()(v.P_LoopMain[playerID] == 30)(Bring(playerID, AtLeast, 2, "Protoss Arbiter", "[Skill]UseSkill"))()):
                # (Line 120) {
                # (Line 122) s.CharacterVoice(5);
                s.CharacterVoice(5)
                # (Line 123) KillUnitAt(2, "Protoss Arbiter", "[Skill]UseSkill", playerID);
                # (Line 126) v.P_Step[playerID] = 220;
                DoActions(KillUnitAt(2, "Protoss Arbiter", "[Skill]UseSkill", playerID))
                _ARRW(v.P_Step, playerID) << (220)
                # (Line 127) v.P_CountMain[playerID] = 0;
                _ARRW(v.P_CountMain, playerID) << (0)
                # (Line 128) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 129) }
                # (Line 130) else if(v.P_LoopMain[playerID] == 30)
            if EUDElseIf()(v.P_LoopMain[playerID] == 30):
                # (Line 131) {
                # (Line 132) KillUnitAt(All,"60 + 1n Siege","Anywhere",playerID);
                # (Line 133) x = 0;
                DoActions(KillUnitAt(All, "60 + 1n Siege", "Anywhere", playerID))
                x << (0)
                # (Line 134) trg.SkillEnd();
                trg.SkillEnd()
                # (Line 135) }
                # (Line 137) v.P_LoopMain[playerID] += 1;
            EUDEndIf()
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 138) }
            # (Line 141) }
        EUDEndIf()
        # (Line 142) }
    EUDEndIf()
