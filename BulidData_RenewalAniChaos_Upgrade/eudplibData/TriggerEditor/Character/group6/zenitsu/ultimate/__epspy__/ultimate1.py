## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import PluginVariables as msqcvar;
import PluginVariables as msqcvar
# (Line 2) import variable as v;
import variable as v
# (Line 3) import func.trig as trg;
from func import trig as trg
# (Line 4) import func.trigadv as adv;
from func import trigadv as adv
# (Line 5) import func.sound as s;
from func import sound as s
# (Line 7) var x=0;
x = EUDCreateVariables(1)
_IGVA([x], lambda: [0])
# (Line 8) function main(playerID)
# (Line 9) {
@EUDFunc
def f_main(playerID):
    # (Line 10) trg.Buff_ShieldFix(20);
    trg.Buff_ShieldFix(20)
    # (Line 11) if (v.P_WaitMain[playerID] == 0)
    if EUDIf()(v.P_WaitMain[playerID] == 0):
        # (Line 12) {
        # (Line 13) if (v.P_CountMain[playerID] == 0)
        if EUDIf()(v.P_CountMain[playerID] == 0):
            # (Line 14) {
            # (Line 15) KillUnitAt(All,"80 + 1n Artanis","Anywhere",playerID);
            # (Line 16) RemoveUnitAt(All,"60 + 3n Ghost","Anywhere",playerID);
            DoActions(KillUnitAt(All, "80 + 1n Artanis", "Anywhere", playerID))
            # (Line 17) RemoveUnitAt(All,"80 + 1n Ghost","Anywhere",playerID);
            DoActions(RemoveUnitAt(All, "60 + 3n Ghost", "Anywhere", playerID))
            # (Line 18) KillUnitAt(All,"60 + 1n Archon","Anywhere",playerID);
            DoActions(RemoveUnitAt(All, "80 + 1n Ghost", "Anywhere", playerID))
            # (Line 19) if (v.P_LoopMain[playerID] <= 3)
            DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
            if EUDIf()(v.P_LoopMain[playerID] <= 3):
                # (Line 20) {
                # (Line 21) trg.ComputerAlly(1);
                trg.ComputerAlly(1)
                # (Line 22) trg.Shape_Square(playerID,1,"80 + 1n Artanis",0+32*v.P_LoopMain[playerID],128- 32*v.P_LoopMain[playerID]);
                trg.Shape_Square(playerID, 1, "80 + 1n Artanis", 0 + 32 * v.P_LoopMain[playerID], 128 - 32 * v.P_LoopMain[playerID])
                # (Line 23) trg.Shape_Square(playerID,1,"60 + 3n Ghost",0+32*v.P_LoopMain[playerID],128- 32*v.P_LoopMain[playerID]);
                trg.Shape_Square(playerID, 1, "60 + 3n Ghost", 0 + 32 * v.P_LoopMain[playerID], 128 - 32 * v.P_LoopMain[playerID])
                # (Line 24) trg.Shape_Square(playerID,1,"60 + 1n Archon",128-32*v.P_LoopMain[playerID],0+ 32*v.P_LoopMain[playerID]);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", 128 - 32 * v.P_LoopMain[playerID], 0 + 32 * v.P_LoopMain[playerID])
                # (Line 25) trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0);
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 26) Order("80 + 1n Artanis", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                # (Line 27) Order("60 + 3n Ghost", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(Order("80 + 1n Artanis", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 28) trg.Main_Wait(125);
                DoActions(Order("60 + 3n Ghost", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(125)
                # (Line 29) }
                # (Line 31) else if (v.P_LoopMain[playerID] <= 6)
            if EUDElseIf()(v.P_LoopMain[playerID] <= 6):
                # (Line 32) {
                # (Line 33) trg.Shape_Square(playerID,1,"80 + 1n Artanis",0+32*x,128- 32*x);
                trg.Shape_Square(playerID, 1, "80 + 1n Artanis", 0 + 32 * x, 128 - 32 * x)
                # (Line 34) trg.Shape_Square(playerID,1,"60 + 3n Ghost",0+32*x,128- 32*x);
                trg.Shape_Square(playerID, 1, "60 + 3n Ghost", 0 + 32 * x, 128 - 32 * x)
                # (Line 35) trg.Shape_Square(playerID,1,"60 + 1n Archon",128-32*x,0+ 32*x);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", 128 - 32 * x, 0 + 32 * x)
                # (Line 36) trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0);
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 37) Order("80 + 1n Artanis", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                # (Line 38) Order("60 + 3n Ghost", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(Order("80 + 1n Artanis", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 39) x += 1;
                DoActions(Order("60 + 3n Ghost", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                x.__iadd__(1)
                # (Line 40) trg.Main_Wait(125);
                trg.Main_Wait(125)
                # (Line 41) }
                # (Line 42) else if (v.P_LoopMain[playerID] <= 9)
            if EUDElseIf()(v.P_LoopMain[playerID] <= 9):
                # (Line 43) {
                # (Line 44) trg.Shape_Square(playerID,1,"80 + 1n Artanis",0+32*x,128- 32*x);
                trg.Shape_Square(playerID, 1, "80 + 1n Artanis", 0 + 32 * x, 128 - 32 * x)
                # (Line 45) trg.Shape_Square(playerID,1,"60 + 3n Ghost",0+32*x,128- 32*x);
                trg.Shape_Square(playerID, 1, "60 + 3n Ghost", 0 + 32 * x, 128 - 32 * x)
                # (Line 46) trg.Shape_Square(playerID,1,"60 + 1n Archon",128-32*x,0+ 32*x);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", 128 - 32 * x, 0 + 32 * x)
                # (Line 47) trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0);
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 48) Order("80 + 1n Artanis", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                # (Line 49) Order("60 + 3n Ghost", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(Order("80 + 1n Artanis", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 50) x += 1;
                DoActions(Order("60 + 3n Ghost", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                x.__iadd__(1)
                # (Line 51) trg.Main_Wait(125);
                trg.Main_Wait(125)
                # (Line 52) }
                # (Line 53) else if (v.P_LoopMain[playerID] <= 12)
            if EUDElseIf()(v.P_LoopMain[playerID] <= 12):
                # (Line 54) {
                # (Line 55) trg.Shape_Square(playerID,1,"80 + 1n Artanis",0+32*x,128- 32*x);
                trg.Shape_Square(playerID, 1, "80 + 1n Artanis", 0 + 32 * x, 128 - 32 * x)
                # (Line 56) trg.Shape_Square(playerID,1,"60 + 3n Ghost",0+32*x,128- 32*x);
                trg.Shape_Square(playerID, 1, "60 + 3n Ghost", 0 + 32 * x, 128 - 32 * x)
                # (Line 57) trg.Shape_Square(playerID,1,"60 + 1n Archon",128-32*x,0+ 32*x);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", 128 - 32 * x, 0 + 32 * x)
                # (Line 58) trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0);
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 59) Order("80 + 1n Artanis", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                # (Line 60) Order("60 + 3n Ghost", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(Order("80 + 1n Artanis", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 61) x += 1;
                DoActions(Order("60 + 3n Ghost", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                x.__iadd__(1)
                # (Line 62) trg.Main_Wait(125);
                trg.Main_Wait(125)
                # (Line 63) }
                # (Line 64) else if (v.P_LoopMain[playerID] == 13)
            if EUDElseIf()(v.P_LoopMain[playerID] == 13):
                # (Line 65) {
                # (Line 66) trg.Shape_NxNSquare(playerID,1,"40 + 1n Mojo",10,48);
                trg.Shape_NxNSquare(playerID, 1, "40 + 1n Mojo", 10, 48)
                # (Line 67) trg.Shape_NxNSquare(playerID,1,"80 + 1n Ghost",10,48);
                trg.Shape_NxNSquare(playerID, 1, "80 + 1n Ghost", 10, 48)
                # (Line 68) trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0);
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 69) Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                # (Line 70) Order("80 + 1n Ghost", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 71) x = 0;
                DoActions(Order("80 + 1n Ghost", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                x << (0)
                # (Line 72) trg.Main_Wait(250);
                trg.Main_Wait(250)
                # (Line 73) }
                # (Line 74) else if (v.P_LoopMain[playerID] <= 16)
            if EUDElseIf()(v.P_LoopMain[playerID] <= 16):
                # (Line 75) {
                # (Line 76) RemoveUnitAt(All,"40 + 1n Mojo","Anywhere",playerID);
                # (Line 77) trg.Shape_Square(playerID,1,"80 + 1n Artanis",0+32*x,128- 32*x);
                DoActions(RemoveUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID))
                trg.Shape_Square(playerID, 1, "80 + 1n Artanis", 0 + 32 * x, 128 - 32 * x)
                # (Line 78) trg.Shape_Square(playerID,1,"60 + 3n Ghost",0+32*x,128- 32*x);
                trg.Shape_Square(playerID, 1, "60 + 3n Ghost", 0 + 32 * x, 128 - 32 * x)
                # (Line 79) trg.Shape_Square(playerID,1,"60 + 1n Archon",128-32*x,0+ 32*x);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", 128 - 32 * x, 0 + 32 * x)
                # (Line 80) trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0);
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 81) Order("80 + 1n Artanis", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                # (Line 82) Order("60 + 3n Ghost", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(Order("80 + 1n Artanis", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 83) x += 1;
                DoActions(Order("60 + 3n Ghost", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                x.__iadd__(1)
                # (Line 84) trg.Main_Wait(125);
                trg.Main_Wait(125)
                # (Line 85) }
                # (Line 86) else if(v.P_LoopMain[playerID] == 17)
            if EUDElseIf()(v.P_LoopMain[playerID] == 17):
                # (Line 87) {
                # (Line 88) x = 0;
                x << (0)
                # (Line 89) }
                # (Line 90) else if (v.P_LoopMain[playerID] <= 20)
            if EUDElseIf()(v.P_LoopMain[playerID] <= 20):
                # (Line 91) {
                # (Line 92) trg.Shape_Square(playerID,1,"80 + 1n Artanis",0+32*x,128- 32*x);
                trg.Shape_Square(playerID, 1, "80 + 1n Artanis", 0 + 32 * x, 128 - 32 * x)
                # (Line 93) trg.Shape_Square(playerID,1,"60 + 3n Ghost",0+32*x,128- 32*x);
                trg.Shape_Square(playerID, 1, "60 + 3n Ghost", 0 + 32 * x, 128 - 32 * x)
                # (Line 94) trg.Shape_Square(playerID,1,"60 + 1n Archon",128-32*x,0+ 32*x);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", 128 - 32 * x, 0 + 32 * x)
                # (Line 95) trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0);
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 96) Order("80 + 1n Artanis", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                # (Line 97) Order("60 + 3n Ghost", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(Order("80 + 1n Artanis", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 98) x += 1;
                DoActions(Order("60 + 3n Ghost", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                x.__iadd__(1)
                # (Line 99) trg.Main_Wait(125);
                trg.Main_Wait(125)
                # (Line 100) }
                # (Line 101) else if(v.P_LoopMain[playerID] == 21)
            if EUDElseIf()(v.P_LoopMain[playerID] == 21):
                # (Line 102) {
                # (Line 103) x = 0;
                x << (0)
                # (Line 104) }
                # (Line 105) else if (v.P_LoopMain[playerID] <= 24)
            if EUDElseIf()(v.P_LoopMain[playerID] <= 24):
                # (Line 106) {
                # (Line 107) trg.Shape_Square(playerID,1,"80 + 1n Artanis",0+32*x,128- 32*x);
                trg.Shape_Square(playerID, 1, "80 + 1n Artanis", 0 + 32 * x, 128 - 32 * x)
                # (Line 108) trg.Shape_Square(playerID,1,"60 + 3n Ghost",0+32*x,128- 32*x);
                trg.Shape_Square(playerID, 1, "60 + 3n Ghost", 0 + 32 * x, 128 - 32 * x)
                # (Line 109) trg.Shape_Square(playerID,1,"60 + 1n Archon",128-32*x,0+ 32*x);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", 128 - 32 * x, 0 + 32 * x)
                # (Line 110) trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0);
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 111) Order("80 + 1n Artanis", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                # (Line 112) Order("60 + 3n Ghost", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(Order("80 + 1n Artanis", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 113) x += 1;
                DoActions(Order("60 + 3n Ghost", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                x.__iadd__(1)
                # (Line 114) trg.Main_Wait(125);
                trg.Main_Wait(125)
                # (Line 115) }
                # (Line 116) else if(v.P_LoopMain[playerID] == 25)
            if EUDElseIf()(v.P_LoopMain[playerID] == 25):
                # (Line 117) {
                # (Line 118) x = 0;
                x << (0)
                # (Line 119) }
                # (Line 120) else if (v.P_LoopMain[playerID] <= 28)
            if EUDElseIf()(v.P_LoopMain[playerID] <= 28):
                # (Line 121) {
                # (Line 122) trg.Shape_Square(playerID,1,"80 + 1n Artanis",0+32*x,128- 32*x);
                trg.Shape_Square(playerID, 1, "80 + 1n Artanis", 0 + 32 * x, 128 - 32 * x)
                # (Line 123) trg.Shape_Square(playerID,1,"60 + 3n Ghost",0+32*x,128- 32*x);
                trg.Shape_Square(playerID, 1, "60 + 3n Ghost", 0 + 32 * x, 128 - 32 * x)
                # (Line 124) trg.Shape_Square(playerID,1,"60 + 1n Archon",128-32*x,0+ 32*x);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", 128 - 32 * x, 0 + 32 * x)
                # (Line 125) trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0);
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 126) Order("80 + 1n Artanis", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                # (Line 127) Order("60 + 3n Ghost", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(Order("80 + 1n Artanis", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 128) x += 1;
                DoActions(Order("60 + 3n Ghost", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                x.__iadd__(1)
                # (Line 129) trg.Main_Wait(125);
                trg.Main_Wait(125)
                # (Line 130) }
                # (Line 131) else if (v.P_LoopMain[playerID] == 29)
            if EUDElseIf()(v.P_LoopMain[playerID] == 29):
                # (Line 132) {
                # (Line 133) trg.Shape_NxNSquare(playerID,1,"40 + 1n Mojo",10,48);
                trg.Shape_NxNSquare(playerID, 1, "40 + 1n Mojo", 10, 48)
                # (Line 134) trg.Shape_NxNSquare(playerID,1,"80 + 1n Ghost",10,48);
                trg.Shape_NxNSquare(playerID, 1, "80 + 1n Ghost", 10, 48)
                # (Line 135) trg.Shape_NxNSquare(playerID,1,"Protoss Dark Archon",10,48);
                trg.Shape_NxNSquare(playerID, 1, "Protoss Dark Archon", 10, 48)
                # (Line 136) KillUnitAt(All,"Protoss Dark Archon","Anywhere",playerID);
                # (Line 137) trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 138) Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                # (Line 139) Order("80 + 1n Ghost", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 140) x = 0;
                DoActions(Order("80 + 1n Ghost", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                x << (0)
                # (Line 141) trg.Main_Wait(250);
                trg.Main_Wait(250)
                # (Line 142) }
                # (Line 143) else if (v.P_LoopMain[playerID] <= 32)
            if EUDElseIf()(v.P_LoopMain[playerID] <= 32):
                # (Line 144) {
                # (Line 145) RemoveUnitAt(All,"40 + 1n Mojo","Anywhere",playerID);
                # (Line 146) trg.Shape_Square(playerID,1,"80 + 1n Artanis",0+32*x,128- 32*x);
                DoActions(RemoveUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID))
                trg.Shape_Square(playerID, 1, "80 + 1n Artanis", 0 + 32 * x, 128 - 32 * x)
                # (Line 147) trg.Shape_Square(playerID,1,"60 + 3n Ghost",0+32*x,128- 32*x);
                trg.Shape_Square(playerID, 1, "60 + 3n Ghost", 0 + 32 * x, 128 - 32 * x)
                # (Line 148) trg.Shape_Square(playerID,1,"60 + 1n Archon",128-32*x,0+ 32*x);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", 128 - 32 * x, 0 + 32 * x)
                # (Line 149) trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0);
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 150) Order("80 + 1n Artanis", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                # (Line 151) Order("60 + 3n Ghost", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(Order("80 + 1n Artanis", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 152) x += 1;
                DoActions(Order("60 + 3n Ghost", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                x.__iadd__(1)
                # (Line 153) trg.Main_Wait(125);
                trg.Main_Wait(125)
                # (Line 154) }
                # (Line 155) else if(v.P_LoopMain[playerID] == 33)
            if EUDElseIf()(v.P_LoopMain[playerID] == 33):
                # (Line 156) {
                # (Line 157) x = 0;
                x << (0)
                # (Line 158) }
                # (Line 159) else if (v.P_LoopMain[playerID] <= 36)
            if EUDElseIf()(v.P_LoopMain[playerID] <= 36):
                # (Line 160) {
                # (Line 161) trg.Shape_Square(playerID,1,"80 + 1n Artanis",0+32*x,128- 32*x);
                trg.Shape_Square(playerID, 1, "80 + 1n Artanis", 0 + 32 * x, 128 - 32 * x)
                # (Line 162) trg.Shape_Square(playerID,1,"60 + 3n Ghost",0+32*x,128- 32*x);
                trg.Shape_Square(playerID, 1, "60 + 3n Ghost", 0 + 32 * x, 128 - 32 * x)
                # (Line 163) trg.Shape_Square(playerID,1,"60 + 1n Archon",128-32*x,0+ 32*x);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", 128 - 32 * x, 0 + 32 * x)
                # (Line 164) trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0);
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 165) Order("80 + 1n Artanis", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                # (Line 166) Order("60 + 3n Ghost", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(Order("80 + 1n Artanis", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 167) x += 1;
                DoActions(Order("60 + 3n Ghost", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                x.__iadd__(1)
                # (Line 168) trg.Main_Wait(125);
                trg.Main_Wait(125)
                # (Line 169) }
                # (Line 170) else if(v.P_LoopMain[playerID] == 37)
            if EUDElseIf()(v.P_LoopMain[playerID] == 37):
                # (Line 171) {
                # (Line 172) x = 0;
                x << (0)
                # (Line 173) }
                # (Line 174) else if (v.P_LoopMain[playerID] <= 40)
            if EUDElseIf()(v.P_LoopMain[playerID] <= 40):
                # (Line 175) {
                # (Line 176) trg.Shape_Square(playerID,1,"80 + 1n Artanis",0+32*x,128- 32*x);
                trg.Shape_Square(playerID, 1, "80 + 1n Artanis", 0 + 32 * x, 128 - 32 * x)
                # (Line 177) trg.Shape_Square(playerID,1,"60 + 3n Ghost",0+32*x,128- 32*x);
                trg.Shape_Square(playerID, 1, "60 + 3n Ghost", 0 + 32 * x, 128 - 32 * x)
                # (Line 178) trg.Shape_Square(playerID,1,"60 + 1n Archon",128-32*x,0+ 32*x);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", 128 - 32 * x, 0 + 32 * x)
                # (Line 179) trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0);
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 180) Order("80 + 1n Artanis", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                # (Line 181) Order("60 + 3n Ghost", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(Order("80 + 1n Artanis", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 182) x += 1;
                DoActions(Order("60 + 3n Ghost", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                x.__iadd__(1)
                # (Line 183) trg.Main_Wait(125);
                trg.Main_Wait(125)
                # (Line 184) }
                # (Line 185) else if(v.P_LoopMain[playerID] == 41)
            if EUDElseIf()(v.P_LoopMain[playerID] == 41):
                # (Line 186) {
                # (Line 187) x = 0;
                x << (0)
                # (Line 188) }
                # (Line 189) else if (v.P_LoopMain[playerID] <= 44)
            if EUDElseIf()(v.P_LoopMain[playerID] <= 44):
                # (Line 190) {
                # (Line 191) trg.Shape_Square(playerID,1,"80 + 1n Artanis",0+32*x,128- 32*x);
                trg.Shape_Square(playerID, 1, "80 + 1n Artanis", 0 + 32 * x, 128 - 32 * x)
                # (Line 192) trg.Shape_Square(playerID,1,"60 + 3n Ghost",0+32*x,128- 32*x);
                trg.Shape_Square(playerID, 1, "60 + 3n Ghost", 0 + 32 * x, 128 - 32 * x)
                # (Line 193) trg.Shape_Square(playerID,1,"60 + 1n Archon",128-32*x,0+ 32*x);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", 128 - 32 * x, 0 + 32 * x)
                # (Line 194) trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0);
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 195) Order("80 + 1n Artanis", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                # (Line 196) Order("60 + 3n Ghost", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(Order("80 + 1n Artanis", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 197) x += 1;
                DoActions(Order("60 + 3n Ghost", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                x.__iadd__(1)
                # (Line 198) trg.Main_Wait(125);
                trg.Main_Wait(125)
                # (Line 199) }
                # (Line 200) else if(v.P_LoopMain[playerID] == 45)
            if EUDElseIf()(v.P_LoopMain[playerID] == 45):
                # (Line 201) {
                # (Line 202) x = 0;
                x << (0)
                # (Line 203) }
                # (Line 204) else if (v.P_LoopMain[playerID] <= 48)
            if EUDElseIf()(v.P_LoopMain[playerID] <= 48):
                # (Line 205) {
                # (Line 206) trg.Shape_Square(playerID,1,"80 + 1n Artanis",0+32*x,128- 32*x);
                trg.Shape_Square(playerID, 1, "80 + 1n Artanis", 0 + 32 * x, 128 - 32 * x)
                # (Line 207) trg.Shape_Square(playerID,1,"60 + 3n Ghost",0+32*x,128- 32*x);
                trg.Shape_Square(playerID, 1, "60 + 3n Ghost", 0 + 32 * x, 128 - 32 * x)
                # (Line 208) trg.Shape_Square(playerID,1,"60 + 1n Archon",128-32*x,0+ 32*x);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", 128 - 32 * x, 0 + 32 * x)
                # (Line 209) trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0);
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 210) Order("80 + 1n Artanis", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                # (Line 211) Order("60 + 3n Ghost", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(Order("80 + 1n Artanis", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 212) x += 1;
                DoActions(Order("60 + 3n Ghost", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                x.__iadd__(1)
                # (Line 213) trg.Main_Wait(125);
                trg.Main_Wait(125)
                # (Line 214) }
                # (Line 215) else if(v.P_LoopMain[playerID] == 49)
            if EUDElseIf()(v.P_LoopMain[playerID] == 49):
                # (Line 216) {
                # (Line 217) x = 0;
                x << (0)
                # (Line 218) }
                # (Line 219) else if (v.P_LoopMain[playerID] <= 52)
            if EUDElseIf()(v.P_LoopMain[playerID] <= 52):
                # (Line 220) {
                # (Line 221) trg.Shape_Square(playerID,1,"80 + 1n Artanis",0+32*x,128- 32*x);
                trg.Shape_Square(playerID, 1, "80 + 1n Artanis", 0 + 32 * x, 128 - 32 * x)
                # (Line 222) trg.Shape_Square(playerID,1,"60 + 3n Ghost",0+32*x,128- 32*x);
                trg.Shape_Square(playerID, 1, "60 + 3n Ghost", 0 + 32 * x, 128 - 32 * x)
                # (Line 223) trg.Shape_Square(playerID,1,"60 + 1n Archon",128-32*x,0+ 32*x);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", 128 - 32 * x, 0 + 32 * x)
                # (Line 224) trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0);
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 225) Order("80 + 1n Artanis", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                # (Line 226) Order("60 + 3n Ghost", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(Order("80 + 1n Artanis", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 227) x += 1;
                DoActions(Order("60 + 3n Ghost", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                x.__iadd__(1)
                # (Line 228) trg.Main_Wait(125);
                trg.Main_Wait(125)
                # (Line 229) }
                # (Line 230) else if (v.P_LoopMain[playerID] == 53)
            if EUDElseIf()(v.P_LoopMain[playerID] == 53):
                # (Line 231) {
                # (Line 232) trg.Shape_NxNSquare(playerID,1,"130 + 1n Norad",7,64);
                trg.Shape_NxNSquare(playerID, 1, "130 + 1n Norad", 7, 64)
                # (Line 233) trg.Shape_NxNSquare(playerID,1,"80 + 1n Ghost",10,48);
                trg.Shape_NxNSquare(playerID, 1, "80 + 1n Ghost", 10, 48)
                # (Line 234) trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0);
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 235) Order("130 + 1n Norad", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                # (Line 236) Order("80 + 1n Ghost", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(Order("130 + 1n Norad", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 237) x = 0;
                DoActions(Order("80 + 1n Ghost", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                x << (0)
                # (Line 238) trg.Main_Wait(250);
                trg.Main_Wait(250)
                # (Line 239) }
                # (Line 240) else if(v.P_LoopMain[playerID] == 54)
            if EUDElseIf()(v.P_LoopMain[playerID] == 54):
                # (Line 241) {
                # (Line 242) trg.ComputerAlly(0);
                trg.ComputerAlly(0)
                # (Line 243) }
                # (Line 244) else if(v.P_LoopMain[playerID] == 55)
            if EUDElseIf()(v.P_LoopMain[playerID] == 55):
                # (Line 245) {
                # (Line 246) KillUnitAt(All,"130 + 1n Norad","Anywhere",playerID);
                # (Line 247) RemoveUnitAt(All,"80 + 1n Ghost","Anywhere",playerID);
                DoActions(KillUnitAt(All, "130 + 1n Norad", "Anywhere", playerID))
                # (Line 248) trg.SkillEnd();
                DoActions(RemoveUnitAt(All, "80 + 1n Ghost", "Anywhere", playerID))
                trg.SkillEnd()
                # (Line 249) }
                # (Line 250) v.P_LoopMain[playerID] += 1;
            EUDEndIf()
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 251) }
            # (Line 252) }
        EUDEndIf()
        # (Line 253) }
    EUDEndIf()
