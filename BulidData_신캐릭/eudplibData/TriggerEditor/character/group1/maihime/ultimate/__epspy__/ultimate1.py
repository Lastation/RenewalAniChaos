## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import PluginVariables as msqcvar;
import PluginVariables as msqcvar
# (Line 2) import variable as v;
import variable as v
# (Line 3) import func.trig as trg;
from func import trig as trg
# (Line 4) import func.trigadv as adv;
from func import trigadv as adv
# (Line 5) import func.sound as s;
from func import sound as s
# (Line 7) var x = 0;
x = EUDCreateVariables(1)
_IGVA([x], lambda: [0])
# (Line 8) function main(playerID)
# (Line 9) {
@EUDFunc
def f_main(playerID):
    # (Line 10) trg.Buff_ShieldFix(1);
    trg.Buff_ShieldFix(1)
    # (Line 11) trg.Debuff_BanReturn();
    trg.Debuff_BanReturn()
    # (Line 12) trg.Debuff_Stop();
    trg.Debuff_Stop()
    # (Line 13) if (v.P_WaitMain[playerID] == 0)
    if EUDIf()(v.P_WaitMain[playerID] == 0):
        # (Line 14) {
        # (Line 15) MoveUnit(All,"60 + 1n Dragoon", playerID, "Anywhere", "[Skill]HoldPosition");
        # (Line 16) if (v.P_CountMain[playerID] == 0)
        DoActions(MoveUnit(All, "60 + 1n Dragoon", playerID, "Anywhere", "[Skill]HoldPosition"))
        if EUDIf()(v.P_CountMain[playerID] == 0):
            # (Line 17) {
            # (Line 18) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 19) {
                # (Line 20) trg.Shape_NxNSquare(playerID,1,"Terran Science Vessel",5,128);
                trg.Shape_NxNSquare(playerID, 1, "Terran Science Vessel", 5, 128)
                # (Line 21) KillUnitAt(All,"Terran Science Vessel","Anywhere",playerID);
                # (Line 22) trg.Main_Wait(1000);
                DoActions(KillUnitAt(All, "Terran Science Vessel", "Anywhere", playerID))
                trg.Main_Wait(1000)
                # (Line 23) }
                # (Line 25) else if (v.P_LoopMain[playerID] <= 5)
            if EUDElseIf()(v.P_LoopMain[playerID] <= 5):
                # (Line 26) {
                # (Line 27) trg.Shape_Square(playerID,1,"50 + 1n Battlecruiser",96*x,0);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 96 * x, 0)
                # (Line 28) trg.Shape_Square(playerID,1,"50 + 1n Battlecruiser",96*x,96*x);
                trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 96 * x, 96 * x)
                # (Line 29) x += 1;
                x.__iadd__(1)
                # (Line 30) trg.MoveLoc(v.P_UnitID[playerID],playerID,0,0);
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 31) Order("50 + 1n Battlecruiser",playerID,"Anywhere",Attack,v.P_LocationID[playerID]);
                # (Line 32) trg.Main_Wait(60);
                DoActions(Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(60)
                # (Line 33) }
                # (Line 34) else if (v.P_LoopMain[playerID] == 6)
            if EUDElseIf()(v.P_LoopMain[playerID] == 6):
                # (Line 35) {
                # (Line 36) KillUnitAt(All,"50 + 1n Battlecruiser","Anywhere",playerID);
                # (Line 37) trg.Shape_Line(playerID,1,"60 + 1n Siege",0,10,128,0);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                trg.Shape_Line(playerID, 1, "60 + 1n Siege", 0, 10, 128, 0)
                # (Line 38) trg.Shape_Line(playerID,1,"60 + 1n Siege",90,10,128,0);
                trg.Shape_Line(playerID, 1, "60 + 1n Siege", 90, 10, 128, 0)
                # (Line 39) trg.Shape_Line(playerID,1,"60 + 1n Siege",45,10,128,0);
                trg.Shape_Line(playerID, 1, "60 + 1n Siege", 45, 10, 128, 0)
                # (Line 40) trg.Shape_Line(playerID,1,"60 + 1n Siege",135,10,128,0);
                trg.Shape_Line(playerID, 1, "60 + 1n Siege", 135, 10, 128, 0)
                # (Line 41) x = 0;
                x << (0)
                # (Line 42) trg.Main_Wait(1300);
                trg.Main_Wait(1300)
                # (Line 43) }
                # (Line 44) else if (v.P_LoopMain[playerID] <= 14)
            if EUDElseIf()(v.P_LoopMain[playerID] <= 14):
                # (Line 45) {
                # (Line 46) KillUnitAt(All,"60 + 1n Siege","Anywhere",playerID);
                # (Line 47) trg.Shape_Double(playerID,1,"60 + 1n Dragoon",256 - x * 32, 0 + x * 32);
                DoActions(KillUnitAt(All, "60 + 1n Siege", "Anywhere", playerID))
                trg.Shape_Double(playerID, 1, "60 + 1n Dragoon", 256 - x * 32, 0 + x * 32)
                # (Line 48) trg.Shape_Double(playerID,1,"60 + 1n Dragoon",0 - x * 32, 256 - x * 32);
                trg.Shape_Double(playerID, 1, "60 + 1n Dragoon", 0 - x * 32, 256 - x * 32)
                # (Line 49) trg.Shape_Double(playerID,1,"40 + 1n Gantrithor",256 - x * 32, 0 + x * 32);
                trg.Shape_Double(playerID, 1, "40 + 1n Gantrithor", 256 - x * 32, 0 + x * 32)
                # (Line 50) trg.Shape_Double(playerID,1,"40 + 1n Gantrithor",0 - x * 32, 256 - x * 32);
                trg.Shape_Double(playerID, 1, "40 + 1n Gantrithor", 0 - x * 32, 256 - x * 32)
                # (Line 51) x += 1;
                x.__iadd__(1)
                # (Line 52) KillUnitAt(All,"40 + 1n Gantrithor","Anywhere",playerID);
                # (Line 53) trg.Main_Wait(30);
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID))
                trg.Main_Wait(30)
                # (Line 54) }
                # (Line 55) else if(v.P_LoopMain[playerID] == 15)
            if EUDElseIf()(v.P_LoopMain[playerID] == 15):
                # (Line 56) {
                # (Line 57) trg.Shape_NxNSquare(playerID,1,"100 + 1n Hyperion",3,64);
                trg.Shape_NxNSquare(playerID, 1, "100 + 1n Hyperion", 3, 64)
                # (Line 58) trg.MoveLoc(v.P_UnitID[playerID],playerID,0,0);
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 59) Order("100 + 1n Hyperion",playerID,"Anywhere",Attack,v.P_LocationID[playerID]);
                # (Line 60) trg.Main_Wait(700);
                DoActions(Order("100 + 1n Hyperion", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(700)
                # (Line 61) }
                # (Line 62) else if(v.P_LoopMain[playerID] == 16)
            if EUDElseIf()(v.P_LoopMain[playerID] == 16):
                # (Line 63) {
                # (Line 64) x = 0;
                x << (0)
                # (Line 65) trg.Shape_NxNSquare(playerID,1,"60 + 1n Siege",10,64);
                trg.Shape_NxNSquare(playerID, 1, "60 + 1n Siege", 10, 64)
                # (Line 66) KillUnitAt(All,"60 + 1n Siege","Anywhere",playerID);
                # (Line 67) trg.Shape_Double(playerID,1,"50 + 1n Battlecruiser",384,0);
                DoActions(KillUnitAt(All, "60 + 1n Siege", "Anywhere", playerID))
                trg.Shape_Double(playerID, 1, "50 + 1n Battlecruiser", 384, 0)
                # (Line 68) trg.Shape_Double(playerID,1,"50 + 1n Battlecruiser",0,384);
                trg.Shape_Double(playerID, 1, "50 + 1n Battlecruiser", 0, 384)
                # (Line 69) trg.Shape_Double(playerID,1,"50 + 1n Battlecruiser",320,0);
                trg.Shape_Double(playerID, 1, "50 + 1n Battlecruiser", 320, 0)
                # (Line 70) trg.Shape_Double(playerID,1,"50 + 1n Battlecruiser",0,320);
                trg.Shape_Double(playerID, 1, "50 + 1n Battlecruiser", 0, 320)
                # (Line 71) trg.Shape_Double(playerID,1,"50 + 1n Battlecruiser",448,0);
                trg.Shape_Double(playerID, 1, "50 + 1n Battlecruiser", 448, 0)
                # (Line 72) trg.Shape_Double(playerID,1,"50 + 1n Battlecruiser",0,448);
                trg.Shape_Double(playerID, 1, "50 + 1n Battlecruiser", 0, 448)
                # (Line 73) trg.Shape_Double(playerID,1,"50 + 1n Battlecruiser",384,64);
                trg.Shape_Double(playerID, 1, "50 + 1n Battlecruiser", 384, 64)
                # (Line 74) trg.Shape_Double(playerID,1,"50 + 1n Battlecruiser",64,384);
                trg.Shape_Double(playerID, 1, "50 + 1n Battlecruiser", 64, 384)
                # (Line 75) trg.Shape_Double(playerID,1,"50 + 1n Battlecruiser",384,-64);
                trg.Shape_Double(playerID, 1, "50 + 1n Battlecruiser", 384, -64)
                # (Line 76) trg.Shape_Double(playerID,1,"50 + 1n Battlecruiser",-64,384);
                trg.Shape_Double(playerID, 1, "50 + 1n Battlecruiser", -64, 384)
                # (Line 77) trg.Shape_Double(playerID,1,"50 + 1n Battlecruiser",320,64);
                trg.Shape_Double(playerID, 1, "50 + 1n Battlecruiser", 320, 64)
                # (Line 78) trg.Shape_Double(playerID,1,"50 + 1n Battlecruiser",64,320);
                trg.Shape_Double(playerID, 1, "50 + 1n Battlecruiser", 64, 320)
                # (Line 79) trg.Shape_Double(playerID,1,"50 + 1n Battlecruiser",320,-64);
                trg.Shape_Double(playerID, 1, "50 + 1n Battlecruiser", 320, -64)
                # (Line 80) trg.Shape_Double(playerID,1,"50 + 1n Battlecruiser",-64,320);
                trg.Shape_Double(playerID, 1, "50 + 1n Battlecruiser", -64, 320)
                # (Line 81) trg.Shape_Double(playerID,1,"50 + 1n Battlecruiser",448,64);
                trg.Shape_Double(playerID, 1, "50 + 1n Battlecruiser", 448, 64)
                # (Line 82) trg.Shape_Double(playerID,1,"50 + 1n Battlecruiser",64,448);
                trg.Shape_Double(playerID, 1, "50 + 1n Battlecruiser", 64, 448)
                # (Line 83) trg.Shape_Double(playerID,1,"50 + 1n Battlecruiser",448,-64);
                trg.Shape_Double(playerID, 1, "50 + 1n Battlecruiser", 448, -64)
                # (Line 84) trg.Shape_Double(playerID,1,"50 + 1n Battlecruiser",-64,448);
                trg.Shape_Double(playerID, 1, "50 + 1n Battlecruiser", -64, 448)
                # (Line 87) trg.Shape_Double(playerID,1,"50 + 1n Battlecruiser",192,192);
                trg.Shape_Double(playerID, 1, "50 + 1n Battlecruiser", 192, 192)
                # (Line 88) trg.Shape_Double(playerID,1,"50 + 1n Battlecruiser",-192,192);
                trg.Shape_Double(playerID, 1, "50 + 1n Battlecruiser", -192, 192)
                # (Line 89) trg.Shape_Double(playerID,1,"50 + 1n Battlecruiser",128,192);
                trg.Shape_Double(playerID, 1, "50 + 1n Battlecruiser", 128, 192)
                # (Line 90) trg.Shape_Double(playerID,1,"50 + 1n Battlecruiser",-128,192);
                trg.Shape_Double(playerID, 1, "50 + 1n Battlecruiser", -128, 192)
                # (Line 91) trg.Shape_Double(playerID,1,"50 + 1n Battlecruiser",256,192);
                trg.Shape_Double(playerID, 1, "50 + 1n Battlecruiser", 256, 192)
                # (Line 92) trg.Shape_Double(playerID,1,"50 + 1n Battlecruiser",-256,192);
                trg.Shape_Double(playerID, 1, "50 + 1n Battlecruiser", -256, 192)
                # (Line 93) trg.Shape_Double(playerID,1,"50 + 1n Battlecruiser",192,128);
                trg.Shape_Double(playerID, 1, "50 + 1n Battlecruiser", 192, 128)
                # (Line 94) trg.Shape_Double(playerID,1,"50 + 1n Battlecruiser",-192,128);
                trg.Shape_Double(playerID, 1, "50 + 1n Battlecruiser", -192, 128)
                # (Line 95) trg.Shape_Double(playerID,1,"50 + 1n Battlecruiser",128,128);
                trg.Shape_Double(playerID, 1, "50 + 1n Battlecruiser", 128, 128)
                # (Line 96) trg.Shape_Double(playerID,1,"50 + 1n Battlecruiser",-128,128);
                trg.Shape_Double(playerID, 1, "50 + 1n Battlecruiser", -128, 128)
                # (Line 97) trg.Shape_Double(playerID,1,"50 + 1n Battlecruiser",256,128);
                trg.Shape_Double(playerID, 1, "50 + 1n Battlecruiser", 256, 128)
                # (Line 98) trg.Shape_Double(playerID,1,"50 + 1n Battlecruiser",-256,128);
                trg.Shape_Double(playerID, 1, "50 + 1n Battlecruiser", -256, 128)
                # (Line 99) trg.Shape_Double(playerID,1,"50 + 1n Battlecruiser",192,256);
                trg.Shape_Double(playerID, 1, "50 + 1n Battlecruiser", 192, 256)
                # (Line 100) trg.Shape_Double(playerID,1,"50 + 1n Battlecruiser",-192,256);
                trg.Shape_Double(playerID, 1, "50 + 1n Battlecruiser", -192, 256)
                # (Line 101) trg.Shape_Double(playerID,1,"50 + 1n Battlecruiser",128,256);
                trg.Shape_Double(playerID, 1, "50 + 1n Battlecruiser", 128, 256)
                # (Line 102) trg.Shape_Double(playerID,1,"50 + 1n Battlecruiser",-128,256);
                trg.Shape_Double(playerID, 1, "50 + 1n Battlecruiser", -128, 256)
                # (Line 103) trg.Shape_Double(playerID,1,"50 + 1n Battlecruiser",256,256);
                trg.Shape_Double(playerID, 1, "50 + 1n Battlecruiser", 256, 256)
                # (Line 104) trg.Shape_Double(playerID,1,"50 + 1n Battlecruiser",-256,256);
                trg.Shape_Double(playerID, 1, "50 + 1n Battlecruiser", -256, 256)
                # (Line 106) trg.MoveLoc(v.P_UnitID[playerID],playerID,0,0);
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 107) Order("50 + 1n Battlecruiser",playerID,"Anywhere",Attack,v.P_LocationID[playerID]);
                # (Line 108) trg.Main_Wait(1000);
                DoActions(Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(1000)
                # (Line 109) }
                # (Line 110) else if(v.P_LoopMain[playerID] <= 19)
            if EUDElseIf()(v.P_LoopMain[playerID] <= 19):
                # (Line 111) {
                # (Line 112) KillUnitAt(3,"50 + 1n Battlecruiser","Anywhere",playerID);
                # (Line 113) trg.Main_Wait(80);
                DoActions(KillUnitAt(3, "50 + 1n Battlecruiser", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 114) }
                # (Line 115) else if(v.P_LoopMain[playerID] <= 28)
            if EUDElseIf()(v.P_LoopMain[playerID] <= 28):
                # (Line 116) {
                # (Line 117) KillUnitAt(6,"50 + 1n Battlecruiser","Anywhere",playerID);
                # (Line 118) trg.Main_Wait(80);
                DoActions(KillUnitAt(6, "50 + 1n Battlecruiser", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 119) }
                # (Line 120) else if(v.P_LoopMain[playerID] <= 31)
            if EUDElseIf()(v.P_LoopMain[playerID] <= 31):
                # (Line 121) {
                # (Line 122) KillUnitAt(3,"50 + 1n Battlecruiser","Anywhere",playerID);
                # (Line 123) trg.Main_Wait(80);
                DoActions(KillUnitAt(3, "50 + 1n Battlecruiser", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 124) }
                # (Line 125) else if(v.P_LoopMain[playerID] == 32)
            if EUDElseIf()(v.P_LoopMain[playerID] == 32):
                # (Line 126) {
                # (Line 127) KillUnitAt(All,"60 + 1n Dragoon","Anywhere",playerID);
                # (Line 128) KillUnitAt(All,"100 + 1n Hyperion","Anywhere",playerID);
                DoActions(KillUnitAt(All, "60 + 1n Dragoon", "Anywhere", playerID))
                # (Line 129) trg.Main_Wait(1800);
                DoActions(KillUnitAt(All, "100 + 1n Hyperion", "Anywhere", playerID))
                trg.Main_Wait(1800)
                # (Line 130) }
                # (Line 131) else if(v.P_LoopMain[playerID] == 33)
            if EUDElseIf()(v.P_LoopMain[playerID] == 33):
                # (Line 132) {
                # (Line 133) trg.Shape_NxNSquare(playerID,1,"60 + 1n Siege",8,128);
                trg.Shape_NxNSquare(playerID, 1, "60 + 1n Siege", 8, 128)
                # (Line 134) trg.Shape_NxNSquare(playerID,1,"Protoss Dark Templar",8,128);
                trg.Shape_NxNSquare(playerID, 1, "Protoss Dark Templar", 8, 128)
                # (Line 135) KillUnitAt(All,"Protoss Dark Templar","Anywhere",playerID);
                # (Line 136) trg.Main_Wait(1500);
                DoActions(KillUnitAt(All, "Protoss Dark Templar", "Anywhere", playerID))
                trg.Main_Wait(1500)
                # (Line 137) }
                # (Line 138) else if(v.P_LoopMain[playerID] == 34)
            if EUDElseIf()(v.P_LoopMain[playerID] == 34):
                # (Line 139) {
                # (Line 140) trg.Shape_NxNSquare(playerID,1,"60 + 1n Dragoon",8,128);
                trg.Shape_NxNSquare(playerID, 1, "60 + 1n Dragoon", 8, 128)
                # (Line 141) trg.Shape_NxNSquare(playerID,1,"40 + 1n Mojo",8,128);
                trg.Shape_NxNSquare(playerID, 1, "40 + 1n Mojo", 8, 128)
                # (Line 142) KillUnitAt(All,"40 + 1n Mojo","Anywhere",playerID);
                # (Line 143) trg.Main_Wait(800);
                DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID))
                trg.Main_Wait(800)
                # (Line 144) }
                # (Line 145) else if(v.P_LoopMain[playerID] == 35)
            if EUDElseIf()(v.P_LoopMain[playerID] == 35):
                # (Line 146) {
                # (Line 147) trg.Shape_NxNSquare(playerID,1,"100 + 1n Hyperion",6,128);
                trg.Shape_NxNSquare(playerID, 1, "100 + 1n Hyperion", 6, 128)
                # (Line 148) trg.Shape_NxNSquare(playerID,1,"40 + 1n Gantrithor",6,128);
                trg.Shape_NxNSquare(playerID, 1, "40 + 1n Gantrithor", 6, 128)
                # (Line 149) KillUnitAt(All,"40 + 1n Gantrithor","Anywhere",playerID);
                # (Line 150) trg.MoveLoc(v.P_UnitID[playerID],playerID,0,0);
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID))
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 151) Order("100 + 1n Hyperion",playerID,"Anywhere",Attack,v.P_LocationID[playerID]);
                # (Line 152) trg.Main_Wait(1100);
                DoActions(Order("100 + 1n Hyperion", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(1100)
                # (Line 153) }
                # (Line 154) else if(v.P_LoopMain[playerID] == 36)
            if EUDElseIf()(v.P_LoopMain[playerID] == 36):
                # (Line 155) {
                # (Line 156) trg.Shape_NxNSquare(playerID,1,"40 + 1n Gantrithor",6,128);
                trg.Shape_NxNSquare(playerID, 1, "40 + 1n Gantrithor", 6, 128)
                # (Line 157) ModifyUnitHangarCount(6,All,"40 + 1n Gantrithor",playerID,"Anywhere");
                # (Line 158) trg.Shape_NxNSquare(playerID,1,"50 + 1n Battlecruiser",6,128);
                DoActions(ModifyUnitHangarCount(6, All, "40 + 1n Gantrithor", playerID, "Anywhere"))
                trg.Shape_NxNSquare(playerID, 1, "50 + 1n Battlecruiser", 6, 128)
                # (Line 159) KillUnitAt(All,"50 + 1n Battlecruiser","Anywhere",playerID);
                # (Line 160) trg.MoveLoc(v.P_UnitID[playerID],playerID,0,0);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 161) Order("40 + 1n Gantrithor",playerID,"Anywhere",Attack,v.P_LocationID[playerID]);
                # (Line 162) trg.Main_Wait(5800);
                DoActions(Order("40 + 1n Gantrithor", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(5800)
                # (Line 163) }
                # (Line 164) else if(v.P_LoopMain[playerID] == 37)
            if EUDElseIf()(v.P_LoopMain[playerID] == 37):
                # (Line 165) {
                # (Line 166) KillUnitAt(All,"40 + 1n Gantrithor","Anywhere",playerID);
                # (Line 167) KillUnitAt(All,"100 + 1n Hyperion","Anywhere",playerID);
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID))
                # (Line 168) KillUnitAt(All,"60 + 1n Siege","Anywhere",playerID);
                DoActions(KillUnitAt(All, "100 + 1n Hyperion", "Anywhere", playerID))
                # (Line 169) KillUnitAt(All,"60 + 1n Dragoon","Anywhere",playerID);
                DoActions(KillUnitAt(All, "60 + 1n Siege", "Anywhere", playerID))
                # (Line 170) SetSwitch("UiltimateSwitch", Clear);
                DoActions(KillUnitAt(All, "60 + 1n Dragoon", "Anywhere", playerID))
                # (Line 171) SetSwitch("Recall - MaiHime",Clear);
                DoActions(SetSwitch("UiltimateSwitch", Clear))
                # (Line 172) trg.SkillEnd();
                DoActions(SetSwitch("Recall - MaiHime", Clear))
                trg.SkillEnd()
                # (Line 173) }
                # (Line 174) v.P_LoopMain[playerID] += 1;
            EUDEndIf()
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 175) }
            # (Line 176) }
        EUDEndIf()
        # (Line 177) }
    EUDEndIf()
