## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import PluginVariables as msqcvar;
import PluginVariables as msqcvar
# (Line 2) import variable as v;
import variable as v
# (Line 3) import func.trig as trg;
from func import trig as trg
# (Line 4) import func.sound as s;
from func import sound as s
# (Line 6) var x = 0;
x = EUDCreateVariables(1)
_IGVA([x], lambda: [0])
# (Line 7) function main(playerID)
# (Line 8) {
@EUDFunc
def f_main(playerID):
    # (Line 9) trg.Debuff_BanReturn();
    trg.Debuff_BanReturn()
    # (Line 10) trg.Buff_ShieldFix(1);
    trg.Buff_ShieldFix(1)
    # (Line 12) if (v.P_WaitMain[playerID] == 0)
    if EUDIf()(v.P_WaitMain[playerID] == 0):
        # (Line 13) {
        # (Line 14) if(v.P_CountMain[playerID] == 0)
        if EUDIf()(v.P_CountMain[playerID] == 0):
            # (Line 15) {
            # (Line 16) KillUnitAt(All,"130 + 1n Norad","Anywhere",playerID);
            # (Line 17) KillUnitAt(All,"40 + 1n Mojo","Anywhere",playerID);
            DoActions(KillUnitAt(All, "130 + 1n Norad", "Anywhere", playerID))
            # (Line 18) KillUnitAt(All,"60 + 1n Danimoth","Anywhere",playerID);
            DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID))
            # (Line 19) if (v.P_LoopMain[playerID] == 0)
            DoActions(KillUnitAt(All, "60 + 1n Danimoth", "Anywhere", playerID))
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 20) {
                # (Line 21) trg.Shape_Dot(playerID,1,"130 + 1n Norad",0,0);
                trg.Shape_Dot(playerID, 1, "130 + 1n Norad", 0, 0)
                # (Line 22) trg.Shape_Square(playerID,1,"40 + 1n Zergling",32,0);
                trg.Shape_Square(playerID, 1, "40 + 1n Zergling", 32, 0)
                # (Line 23) trg.Shape_Square(playerID,1,"40 + 1n Zergling",32,32);
                trg.Shape_Square(playerID, 1, "40 + 1n Zergling", 32, 32)
                # (Line 24) KillUnitAt(All,"40 + 1n Zergling","Anywhere",playerID);
                # (Line 25) trg.MoveLoc(v.P_UnitID[playerID],playerID,0,0);
                DoActions(KillUnitAt(All, "40 + 1n Zergling", "Anywhere", playerID))
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 26) Order("130 + 1n Norad",playerID,"Anywhere",Attack,v.P_LocationID[playerID]);
                # (Line 27) trg.Main_Wait(1300);
                DoActions(Order("130 + 1n Norad", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(1300)
                # (Line 28) }
                # (Line 29) else if (v.P_LoopMain[playerID] == 1)
            if EUDElseIf()(v.P_LoopMain[playerID] == 1):
                # (Line 30) {
                # (Line 31) trg.Shape_NxNSquare(playerID,1,"40 + 1n Mojo",10,48);
                trg.Shape_NxNSquare(playerID, 1, "40 + 1n Mojo", 10, 48)
                # (Line 32) trg.Shape_NxNSquare(playerID,1," Unit. Hoffnung 25000",10,48);
                trg.Shape_NxNSquare(playerID, 1, " Unit. Hoffnung 25000", 10, 48)
                # (Line 33) KillUnitAt(All," Unit. Hoffnung 25000","Anywhere",playerID);
                # (Line 34) trg.MoveLoc(v.P_UnitID[playerID],playerID,0,0);
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID))
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 35) Order("40 + 1n Mojo",playerID,"Anywhere",Attack,v.P_LocationID[playerID]);
                # (Line 36) trg.Main_Wait(200);
                DoActions(Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(200)
                # (Line 37) }
                # (Line 38) else if (v.P_LoopMain[playerID] == 2)
            if EUDElseIf()(v.P_LoopMain[playerID] == 2):
                # (Line 39) {
                # (Line 40) SetSwitch("Recall - MaiHime",Set);
                # (Line 41) trg.Main_Wait(11100);
                DoActions(SetSwitch("Recall - MaiHime", Set))
                trg.Main_Wait(11100)
                # (Line 42) }
                # (Line 43) else if (v.P_LoopMain[playerID] <= 32)
            if EUDElseIf()(v.P_LoopMain[playerID] <= 32):
                # (Line 44) {
                # (Line 45) SetSwitch("Recall - MaiHime",Clear);
                # (Line 46) trg.Shape_Line(playerID,1,"40 + 1n Gantrithor",45 * v.P_LoopMain[playerID],3,196,0);
                DoActions(SetSwitch("Recall - MaiHime", Clear))
                trg.Shape_Line(playerID, 1, "40 + 1n Gantrithor", 45 * v.P_LoopMain[playerID], 3, 196, 0)
                # (Line 47) trg.Shape_Line(playerID,1,"60 + 1n Danimoth",45 * v.P_LoopMain[playerID],3,196,0);
                trg.Shape_Line(playerID, 1, "60 + 1n Danimoth", 45 * v.P_LoopMain[playerID], 3, 196, 0)
                # (Line 48) Order("60 + 1n Danimoth",playerID,"Anywhere",Attack,v.P_LocationID[playerID]);
                # (Line 49) trg.MoveLoc(v.P_UnitID[playerID],playerID,0,0);
                DoActions(Order("60 + 1n Danimoth", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 50) KillUnitAt(All,"40 + 1n Gantrithor","Anywhere",playerID);
                # (Line 51) trg.Main_Wait(400);
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID))
                trg.Main_Wait(400)
                # (Line 52) }
                # (Line 53) else if (v.P_LoopMain[playerID] <= 72)
            if EUDElseIf()(v.P_LoopMain[playerID] <= 72):
                # (Line 54) {
                # (Line 55) trg.Shape_Line(playerID,1,"40 + 1n Mojo",45 * v.P_LoopMain[playerID],10,128,0);
                trg.Shape_Line(playerID, 1, "40 + 1n Mojo", 45 * v.P_LoopMain[playerID], 10, 128, 0)
                # (Line 56) trg.Shape_Line(playerID,1,"Protoss Dark Archon",45 * v.P_LoopMain[playerID],10,128,0);
                trg.Shape_Line(playerID, 1, "Protoss Dark Archon", 45 * v.P_LoopMain[playerID], 10, 128, 0)
                # (Line 57) KillUnitAt(All,"Protoss Dark Archon","Anywhere",playerID);
                # (Line 58) Order("40 + 1n Mojo",playerID,"Anywhere",Attack,v.P_LocationID[playerID]);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                # (Line 59) trg.MoveLoc(v.P_UnitID[playerID],playerID,0,0);
                DoActions(Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 60) trg.Main_Wait(125);
                trg.Main_Wait(125)
                # (Line 61) }
                # (Line 62) else if(v.P_LoopMain[playerID] == 73)
            if EUDElseIf()(v.P_LoopMain[playerID] == 73):
                # (Line 63) {
                # (Line 64) trg.Debuff_Stop();
                trg.Debuff_Stop()
                # (Line 65) trg.Shape_Dot(playerID,1,"60 + 3n Siege",0,0);
                trg.Shape_Dot(playerID, 1, "60 + 3n Siege", 0, 0)
                # (Line 66) trg.Shape_Dot(playerID,1,"130 + 1n Norad",0,0);
                trg.Shape_Dot(playerID, 1, "130 + 1n Norad", 0, 0)
                # (Line 67) trg.MoveLoc(v.P_UnitID[playerID],playerID,0,0);
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 68) Order("130 + 1n Norad",playerID,"Anywhere",Attack,v.P_LocationID[playerID]);
                # (Line 69) trg.Main_Wait(330);
                DoActions(Order("130 + 1n Norad", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(330)
                # (Line 70) }
                # (Line 71) else if(v.P_LoopMain[playerID] == 74)
            if EUDElseIf()(v.P_LoopMain[playerID] == 74):
                # (Line 72) {
                # (Line 73) trg.Shape_Edge(playerID,1,"60 + 3n Siege",45,3,128);
                trg.Shape_Edge(playerID, 1, "60 + 3n Siege", 45, 3, 128)
                # (Line 74) trg.Shape_Dot(playerID,1,"130 + 1n Norad",0,0);
                trg.Shape_Dot(playerID, 1, "130 + 1n Norad", 0, 0)
                # (Line 75) trg.Shape_Edge(playerID,1,"130 + 1n Norad",45,3,128);
                trg.Shape_Edge(playerID, 1, "130 + 1n Norad", 45, 3, 128)
                # (Line 76) trg.MoveLoc(v.P_UnitID[playerID],playerID,0,0);
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 77) Order("130 + 1n Norad",playerID,"Anywhere",Attack,v.P_LocationID[playerID]);
                # (Line 78) trg.Main_Wait(330);
                DoActions(Order("130 + 1n Norad", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(330)
                # (Line 79) }
                # (Line 80) else if(v.P_LoopMain[playerID] == 75)
            if EUDElseIf()(v.P_LoopMain[playerID] == 75):
                # (Line 81) {
                # (Line 82) KillUnitAt(All,"80 + 1n Tom Kazansky","Anywhere",playerID);
                # (Line 83) trg.Shape_Edge(playerID,1,"60 + 3n Siege",45,5,256);
                DoActions(KillUnitAt(All, "80 + 1n Tom Kazansky", "Anywhere", playerID))
                trg.Shape_Edge(playerID, 1, "60 + 3n Siege", 45, 5, 256)
                # (Line 84) trg.Shape_Dot(playerID,1,"130 + 1n Norad",0,0);
                trg.Shape_Dot(playerID, 1, "130 + 1n Norad", 0, 0)
                # (Line 85) trg.Shape_Edge(playerID,1,"130 + 1n Norad",45,3,128);
                trg.Shape_Edge(playerID, 1, "130 + 1n Norad", 45, 3, 128)
                # (Line 86) trg.Shape_Edge(playerID,1,"130 + 1n Norad",45,5,256);
                trg.Shape_Edge(playerID, 1, "130 + 1n Norad", 45, 5, 256)
                # (Line 87) trg.MoveLoc(v.P_UnitID[playerID],playerID,0,0);
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 88) Order("130 + 1n Norad",playerID,"Anywhere",Attack,v.P_LocationID[playerID]);
                # (Line 89) trg.Main_Wait(330);
                DoActions(Order("130 + 1n Norad", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(330)
                # (Line 90) }
                # (Line 91) else if(v.P_LoopMain[playerID] == 76)
            if EUDElseIf()(v.P_LoopMain[playerID] == 76):
                # (Line 92) {
                # (Line 93) trg.Main_Wait(7600);
                trg.Main_Wait(7600)
                # (Line 94) }
                # (Line 95) else if(v.P_LoopMain[playerID] == 77)
            if EUDElseIf()(v.P_LoopMain[playerID] == 77):
                # (Line 96) {
                # (Line 97) KillUnitAt(All,"60 + 3n Siege","Anywhere",playerID);
                # (Line 98) trg.Shape_NxNSquare(playerID,1,"130 + 1n Norad",3,64);
                DoActions(KillUnitAt(All, "60 + 3n Siege", "Anywhere", playerID))
                trg.Shape_NxNSquare(playerID, 1, "130 + 1n Norad", 3, 64)
                # (Line 99) trg.MoveLoc(v.P_UnitID[playerID],playerID,0,0);
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 100) Order("130 + 1n Norad",playerID,"Anywhere",Attack,v.P_LocationID[playerID]);
                # (Line 101) trg.Main_Wait(300);
                DoActions(Order("130 + 1n Norad", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(300)
                # (Line 102) }
                # (Line 103) else if(v.P_LoopMain[playerID] == 78)
            if EUDElseIf()(v.P_LoopMain[playerID] == 78):
                # (Line 104) {
                # (Line 105) trg.Main_Wait(1300);
                trg.Main_Wait(1300)
                # (Line 106) }
                # (Line 107) else if(v.P_LoopMain[playerID] <= 88)
            if EUDElseIf()(v.P_LoopMain[playerID] <= 88):
                # (Line 108) {
                # (Line 109) trg.Shape_Square(playerID,1,"100 + 1n Dragoon",64+(x*64),0);
                trg.Shape_Square(playerID, 1, "100 + 1n Dragoon", 64 + (x * 64), 0)
                # (Line 110) trg.Shape_Square(playerID,1,"Protoss Observer",64+(x*64),0);
                trg.Shape_Square(playerID, 1, "Protoss Observer", 64 + (x * 64), 0)
                # (Line 111) KillUnitAt(All,"Protoss Observer","Anywhere",playerID);
                # (Line 112) trg.MoveLoc(v.P_UnitID[playerID],playerID,0,0);
                DoActions(KillUnitAt(All, "Protoss Observer", "Anywhere", playerID))
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 113) Order("100 + 1n Dragoon",playerID,"Anywhere",Attack,v.P_LocationID[playerID]);
                # (Line 114) x += 1;
                DoActions(Order("100 + 1n Dragoon", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                x.__iadd__(1)
                # (Line 115) trg.Main_Wait(80);
                trg.Main_Wait(80)
                # (Line 116) }
                # (Line 117) else if(v.P_LoopMain[playerID] == 89)
            if EUDElseIf()(v.P_LoopMain[playerID] == 89):
                # (Line 118) {
                # (Line 119) trg.Shape_Square(playerID,1,"50 + 1n Tank",320,48);
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", 320, 48)
                # (Line 120) trg.Shape_Square(playerID,1,"50 + 1n Tank",288,80);
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", 288, 80)
                # (Line 121) trg.Shape_Square(playerID,1,"50 + 1n Tank",256,112);
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", 256, 112)
                # (Line 122) trg.Shape_Square(playerID,1,"50 + 1n Tank",224,144);
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", 224, 144)
                # (Line 123) trg.Shape_Square(playerID,1,"50 + 1n Tank",192,176);
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", 192, 176)
                # (Line 124) trg.Shape_Square(playerID,1,"50 + 1n Tank",160,208);
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", 160, 208)
                # (Line 125) trg.Shape_Square(playerID,1,"50 + 1n Tank",128,240);
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", 128, 240)
                # (Line 126) trg.Shape_Square(playerID,1,"50 + 1n Tank",96,272);
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", 96, 272)
                # (Line 127) trg.Shape_Square(playerID,1,"50 + 1n Tank",64,304);
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", 64, 304)
                # (Line 128) trg.Shape_Square(playerID,1,"50 + 1n Tank",32,336);
                trg.Shape_Square(playerID, 1, "50 + 1n Tank", 32, 336)
                # (Line 130) trg.Shape_Square(playerID,1,"60 + 1n Archon",320,48);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", 320, 48)
                # (Line 131) trg.Shape_Square(playerID,1,"60 + 1n Archon",288,80);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", 288, 80)
                # (Line 132) trg.Shape_Square(playerID,1,"60 + 1n Archon",256,112);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", 256, 112)
                # (Line 133) trg.Shape_Square(playerID,1,"60 + 1n Archon",224,144);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", 224, 144)
                # (Line 134) trg.Shape_Square(playerID,1,"60 + 1n Archon",192,176);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", 192, 176)
                # (Line 135) trg.Shape_Square(playerID,1,"60 + 1n Archon",160,208);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", 160, 208)
                # (Line 136) trg.Shape_Square(playerID,1,"60 + 1n Archon",128,240);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", 128, 240)
                # (Line 137) trg.Shape_Square(playerID,1,"60 + 1n Archon",96,272);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", 96, 272)
                # (Line 138) trg.Shape_Square(playerID,1,"60 + 1n Archon",64,304);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", 64, 304)
                # (Line 139) trg.Shape_Square(playerID,1,"60 + 1n Archon",32,336);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", 32, 336)
                # (Line 140) KillUnitAt(All,"60 + 1n Archon","Anywhere",playerID);
                # (Line 141) trg.MoveLoc(v.P_UnitID[playerID],playerID,0,0);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 142) Order("50 + 1n Tank",playerID,"Anywhere",Attack,v.P_LocationID[playerID]);
                # (Line 143) trg.Main_Wait(1875);
                DoActions(Order("50 + 1n Tank", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(1875)
                # (Line 144) x = 0;
                x << (0)
                # (Line 145) }
                # (Line 146) else if(v.P_LoopMain[playerID] == 90)
            if EUDElseIf()(v.P_LoopMain[playerID] == 90):
                # (Line 147) {
                # (Line 148) trg.Shape_NxNSquare(playerID,1,"40 + 1n Gantrithor",4,128);
                trg.Shape_NxNSquare(playerID, 1, "40 + 1n Gantrithor", 4, 128)
                # (Line 149) ModifyUnitHangarCount(8,All,"40 + 1n Gantrithor",playerID,"Anywhere");
                # (Line 150) trg.MoveLoc(v.P_UnitID[playerID],playerID,0,0);
                DoActions(ModifyUnitHangarCount(8, All, "40 + 1n Gantrithor", playerID, "Anywhere"))
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 151) Order("40 + 1n Gantrithor",playerID,"Anywhere",Attack,v.P_LocationID[playerID]);
                # (Line 152) trg.Main_Wait(1500);
                DoActions(Order("40 + 1n Gantrithor", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(1500)
                # (Line 153) }
                # (Line 154) else if(v.P_LoopMain[playerID] <= 93)
            if EUDElseIf()(v.P_LoopMain[playerID] <= 93):
                # (Line 155) {
                # (Line 156) trg.Shape_NxNSquare(playerID,1,"130 + 1n Norad",3,64+(x*64));
                trg.Shape_NxNSquare(playerID, 1, "130 + 1n Norad", 3, 64 + (x * 64))
                # (Line 157) trg.MoveLoc(v.P_UnitID[playerID],playerID,0,0);
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 158) Order("130 + 1n Norad",playerID,"Anywhere",Attack,v.P_LocationID[playerID]);
                # (Line 159) trg.Main_Wait(250);
                DoActions(Order("130 + 1n Norad", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(250)
                # (Line 160) x += 1;
                x.__iadd__(1)
                # (Line 161) }
                # (Line 162) else if(v.P_LoopMain[playerID] == 94)
            if EUDElseIf()(v.P_LoopMain[playerID] == 94):
                # (Line 163) {
                # (Line 164) x = 0;
                x << (0)
                # (Line 165) trg.Main_Wait(1850);
                trg.Main_Wait(1850)
                # (Line 166) }
                # (Line 167) else if(v.P_LoopMain[playerID] <= 114)
            if EUDElseIf()(v.P_LoopMain[playerID] <= 114):
                # (Line 168) {
                # (Line 169) KillUnitAt(All,"100 + 1n Dragoon","Anywhere",playerID);
                # (Line 170) KillUnitAt(All,"50 + 1n Tank","Anywhere",playerID);
                DoActions(KillUnitAt(All, "100 + 1n Dragoon", "Anywhere", playerID))
                # (Line 171) trg.Shape_Square(playerID,1,"40 + 1n Wraith",196,196);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                trg.Shape_Square(playerID, 1, "40 + 1n Wraith", 196, 196)
                # (Line 172) trg.Shape_Square(playerID,1,"80 + 1n Artanis",196,196);
                trg.Shape_Square(playerID, 1, "80 + 1n Artanis", 196, 196)
                # (Line 173) trg.Shape_Square(playerID,1,"60 + 1n Danimoth",196,196);
                trg.Shape_Square(playerID, 1, "60 + 1n Danimoth", 196, 196)
                # (Line 174) trg.Shape_Square(playerID,1,"40 + 1n Wraith",392,0);
                trg.Shape_Square(playerID, 1, "40 + 1n Wraith", 392, 0)
                # (Line 175) trg.Shape_Square(playerID,1,"80 + 1n Artanis",392,0);
                trg.Shape_Square(playerID, 1, "80 + 1n Artanis", 392, 0)
                # (Line 176) trg.Shape_Square(playerID,1,"60 + 1n Danimoth",392,0);
                trg.Shape_Square(playerID, 1, "60 + 1n Danimoth", 392, 0)
                # (Line 177) trg.MoveLoc(v.P_UnitID[playerID],playerID,0,0);
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 178) Order("40 + 1n Wraith",playerID,"Anywhere",Attack,v.P_LocationID[playerID]);
                # (Line 179) Order("80 + 1n Artanis",playerID,"Anywhere",Attack,v.P_LocationID[playerID]);
                DoActions(Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 180) trg.Main_Wait(50);
                DoActions(Order("80 + 1n Artanis", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(50)
                # (Line 181) }
                # (Line 182) else if(v.P_LoopMain[playerID] == 115)
            if EUDElseIf()(v.P_LoopMain[playerID] == 115):
                # (Line 183) {
                # (Line 184) x = 0;
                x << (0)
                # (Line 185) trg.Main_Wait(400);
                trg.Main_Wait(400)
                # (Line 186) }
                # (Line 187) else if(v.P_LoopMain[playerID] == 116)
            if EUDElseIf()(v.P_LoopMain[playerID] == 116):
                # (Line 188) {
                # (Line 189) KillUnitAt(All,"40 + 1n Wraith","Anywhere",playerID);
                # (Line 190) KillUnitAt(All,"80 + 1n Artanis","Anywhere",playerID);
                DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
                # (Line 191) KillUnitAt(All,"40 + 1n Gantrithor","Anywhere",playerID);
                DoActions(KillUnitAt(All, "80 + 1n Artanis", "Anywhere", playerID))
                # (Line 192) trg.Shape_NxNSquare(playerID,1,"130 + 1n Norad",5,96);
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID))
                trg.Shape_NxNSquare(playerID, 1, "130 + 1n Norad", 5, 96)
                # (Line 193) trg.MoveLoc(v.P_UnitID[playerID],playerID,0,0);
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 194) Order("130 + 1n Norad",playerID,"Anywhere",Attack,v.P_LocationID[playerID]);
                # (Line 195) trg.Main_Wait(400);
                DoActions(Order("130 + 1n Norad", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(400)
                # (Line 196) }
                # (Line 197) else if(v.P_LoopMain[playerID] == 117)
            if EUDElseIf()(v.P_LoopMain[playerID] == 117):
                # (Line 198) {
                # (Line 199) trg.Shape_NxNSquare(playerID,1,"130 + 1n Norad",5,96);
                trg.Shape_NxNSquare(playerID, 1, "130 + 1n Norad", 5, 96)
                # (Line 200) trg.MoveLoc(v.P_UnitID[playerID],playerID,0,0);
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 201) Order("130 + 1n Norad",playerID,"Anywhere",Attack,v.P_LocationID[playerID]);
                # (Line 202) trg.Main_Wait(400);
                DoActions(Order("130 + 1n Norad", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(400)
                # (Line 203) }
                # (Line 204) else if(v.P_LoopMain[playerID] == 118)
            if EUDElseIf()(v.P_LoopMain[playerID] == 118):
                # (Line 205) {
                # (Line 206) trg.Shape_NxNSquare(playerID,1,"80 + 1n Goliath",10,64);
                trg.Shape_NxNSquare(playerID, 1, "80 + 1n Goliath", 10, 64)
                # (Line 207) trg.Shape_NxNSquare(playerID,1,"40 + 1n Gantrithor",10,64);
                trg.Shape_NxNSquare(playerID, 1, "40 + 1n Gantrithor", 10, 64)
                # (Line 208) KillUnitAt(All,"40 + 1n Gantrithor","Anywhere",playerID);
                # (Line 209) trg.MoveLoc(v.P_UnitID[playerID],playerID,0,0);
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID))
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 210) Order("80 + 1n Goliath",playerID,"Anywhere",Attack,v.P_LocationID[playerID]);
                # (Line 211) trg.Main_Wait(300);
                DoActions(Order("80 + 1n Goliath", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(300)
                # (Line 212) }
                # (Line 213) else if(v.P_LoopMain[playerID] == 119)
            if EUDElseIf()(v.P_LoopMain[playerID] == 119):
                # (Line 214) {
                # (Line 215) KillUnitAt(All,"80 + 1n Goliath","Anywhere",playerID);
                # (Line 216) trg.SkillEnd();
                DoActions(KillUnitAt(All, "80 + 1n Goliath", "Anywhere", playerID))
                trg.SkillEnd()
                # (Line 217) }
                # (Line 218) v.P_LoopMain[playerID] += 1;
            EUDEndIf()
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 219) }
            # (Line 220) }
        EUDEndIf()
        # (Line 221) }
    EUDEndIf()
