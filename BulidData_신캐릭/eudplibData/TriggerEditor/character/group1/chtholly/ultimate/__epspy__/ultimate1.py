## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import PluginVariables as msqcvar;
import PluginVariables as msqcvar
# (Line 2) import variable as v;
import variable as v
# (Line 3) import func.trig as trg;
from func import trig as trg
# (Line 4) import func.trigadv as adv;
from func import trigadv as adv
# (Line 5) import func.sound as s;
from func import sound as s
# (Line 6) import func.trigepic as epic;
from func import trigepic as epic
# (Line 8) var x=0;
x = EUDCreateVariables(1)
_IGVA([x], lambda: [0])
# (Line 9) function main(playerID)
# (Line 10) {
@EUDFunc
def f_main(playerID):
    # (Line 11) trg.Buff_ShieldFix(1);
    trg.Buff_ShieldFix(1)
    # (Line 12) trg.Debuff_BanReturn();
    trg.Debuff_BanReturn()
    # (Line 13) if (v.P_WaitMain[playerID] == 0)
    if EUDIf()(v.P_WaitMain[playerID] == 0):
        # (Line 14) {
        # (Line 15) if (v.P_CountMain[playerID] == 0)
        if EUDIf()(v.P_CountMain[playerID] == 0):
            # (Line 16) {
            # (Line 17) RemoveUnitAt(All,"130 + 1n Arbiter","Anywhere",playerID);
            # (Line 18) RemoveUnitAt(All,"80 + 1n Artanis","Anywhere",playerID);
            DoActions(RemoveUnitAt(All, "130 + 1n Arbiter", "Anywhere", playerID))
            # (Line 19) if (v.P_LoopMain[playerID] == 0)
            DoActions(RemoveUnitAt(All, "80 + 1n Artanis", "Anywhere", playerID))
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 20) {
                # (Line 21) trg.Main_Wait(4000);
                trg.Main_Wait(4000)
                # (Line 22) }
                # (Line 23) else if (v.P_LoopMain[playerID] == 1)
            if EUDElseIf()(v.P_LoopMain[playerID] == 1):
                # (Line 24) {
                # (Line 25) trg.Shape_Dot(playerID,1,"Protoss Observer",0,0);
                trg.Shape_Dot(playerID, 1, "Protoss Observer", 0, 0)
                # (Line 26) KillUnitAt(All,"Protoss Observer","Anywhere",playerID);
                # (Line 27) trg.Main_Wait(1800);
                DoActions(KillUnitAt(All, "Protoss Observer", "Anywhere", playerID))
                trg.Main_Wait(1800)
                # (Line 28) }
                # (Line 29) else if (v.P_LoopMain[playerID] <= 8)
            if EUDElseIf()(v.P_LoopMain[playerID] <= 8):
                # (Line 30) {
                # (Line 31) trg.Shape_Edge(playerID,1,"40 + 1n Drone",45,3+x,64+x*32);
                trg.Shape_Edge(playerID, 1, "40 + 1n Drone", 45, 3 + x, 64 + x * 32)
                # (Line 32) trg.Shape_NxNSquare(playerID,1,"Protoss Reaver",3+x,64+x*32);
                trg.Shape_NxNSquare(playerID, 1, "Protoss Reaver", 3 + x, 64 + x * 32)
                # (Line 33) KillUnitAt(All,"Protoss Reaver","Anywhere",playerID);
                # (Line 34) x += 1;
                DoActions(KillUnitAt(All, "Protoss Reaver", "Anywhere", playerID))
                x.__iadd__(1)
                # (Line 35) trg.Main_Wait(80);
                trg.Main_Wait(80)
                # (Line 36) }
                # (Line 37) else if (v.P_LoopMain[playerID] <= 26)
            if EUDElseIf()(v.P_LoopMain[playerID] <= 26):
                # (Line 38) {
                # (Line 39) for(var i =0; i < 8; i++)
                i = EUDVariable()
                i << (0)
                if EUDWhile()(i >= 8, neg=True):
                    def _t8():
                        i.__iadd__(1)
                    # (Line 40) {
                    # (Line 41) MoveLocation(v.P_LocationID[playerID],"40 + 1n Drone",playerID,"Anywhere");
                    # (Line 42) RemoveUnitAt(1,"40 + 1n Drone","Anywhere",playerID);
                    DoActions(MoveLocation(v.P_LocationID[playerID], "40 + 1n Drone", playerID, "Anywhere"))
                    # (Line 43) epic.SkillUnit(playerID,1,"40 + 1n Lurker",0);
                    DoActions(RemoveUnitAt(1, "40 + 1n Drone", "Anywhere", playerID))
                    epic.SkillUnit(playerID, 1, "40 + 1n Lurker", 0)
                    # (Line 44) trg.SkillUnit(playerID,1,"40 + 1n Mojo");
                    trg.SkillUnit(playerID, 1, "40 + 1n Mojo")
                    # (Line 45) trg.SkillUnit(playerID,1,"Protoss Observer");
                    trg.SkillUnit(playerID, 1, "Protoss Observer")
                    # (Line 46) KillUnitAt(All,"Protoss Observer","Anywhere",playerID);
                    # (Line 47) }
                    DoActions(KillUnitAt(All, "Protoss Observer", "Anywhere", playerID))
                    # (Line 48) trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0);
                    EUDSetContinuePoint()
                    _t8()
                EUDEndWhile()
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 49) Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                # (Line 50) trg.Main_Wait(20);
                DoActions(Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(20)
                # (Line 51) }
                # (Line 52) else if (v.P_LoopMain[playerID] == 27)
            if EUDElseIf()(v.P_LoopMain[playerID] == 27):
                # (Line 53) {
                # (Line 54) RemoveUnitAt(All,"40 + 1n Mojo","Anywhere",playerID);
                # (Line 55) trg.Shape_NxNSquare(playerID,2,"60 + 1n Hydralisk",10,64);
                DoActions(RemoveUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID))
                trg.Shape_NxNSquare(playerID, 2, "60 + 1n Hydralisk", 10, 64)
                # (Line 56) trg.Shape_NxNSquare(playerID,1,"80 + 1n Artanis",10,64);
                trg.Shape_NxNSquare(playerID, 1, "80 + 1n Artanis", 10, 64)
                # (Line 57) epic.Shape_NxNSquare(playerID,1,"40 + 1n Gantrithor",10,64,1);
                epic.Shape_NxNSquare(playerID, 1, "40 + 1n Gantrithor", 10, 64, 1)
                # (Line 58) KillUnitAt(All,"40 + 1n Gantrithor","Anywhere",playerID);
                # (Line 59) trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0);
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID))
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 60) Order("80 + 1n Artanis", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                # (Line 61) Order("60 + 1n Hydralisk", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
                DoActions(Order("80 + 1n Artanis", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 62) trg.Main_Wait(300);
                DoActions(Order("60 + 1n Hydralisk", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(300)
                # (Line 63) }
                # (Line 64) else if (v.P_LoopMain[playerID] == 28)
            if EUDElseIf()(v.P_LoopMain[playerID] == 28):
                # (Line 65) {
                # (Line 66) x = 0;
                x << (0)
                # (Line 67) trg.Main_Wait(2200);
                trg.Main_Wait(2200)
                # (Line 68) }
                # (Line 69) else if (v.P_LoopMain[playerID] <= 39)
            if EUDElseIf()(v.P_LoopMain[playerID] <= 39):
                # (Line 70) {
                # (Line 71) for(var i =0; i < 14; i++)
                i = EUDVariable()
                i << (0)
                if EUDWhile()(i >= 14, neg=True):
                    def _t13():
                        i.__iadd__(1)
                    # (Line 72) {
                    # (Line 73) MoveLocation(v.P_LocationID[playerID],"40 + 1n Lurker",playerID,"Anywhere");
                    # (Line 74) RemoveUnitAt(1,"40 + 1n Lurker","Anywhere",playerID);
                    DoActions(MoveLocation(v.P_LocationID[playerID], "40 + 1n Lurker", playerID, "Anywhere"))
                    # (Line 75) trg.SkillUnit(playerID,1,"60 + 1n High Templar");
                    DoActions(RemoveUnitAt(1, "40 + 1n Lurker", "Anywhere", playerID))
                    trg.SkillUnit(playerID, 1, "60 + 1n High Templar")
                    # (Line 76) KillUnitAt(All,"60 + 1n High Templar","Anywhere",playerID);
                    # (Line 77) }
                    DoActions(KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID))
                    # (Line 78) trg.Main_Wait(80);
                    EUDSetContinuePoint()
                    _t13()
                EUDEndWhile()
                trg.Main_Wait(80)
                # (Line 79) }
                # (Line 80) else if (v.P_LoopMain[playerID] == 40)
            if EUDElseIf()(v.P_LoopMain[playerID] == 40):
                # (Line 81) {
                # (Line 82) trg.Main_Wait(400);
                trg.Main_Wait(400)
                # (Line 83) }
                # (Line 84) else if (v.P_LoopMain[playerID] <= 65)
            if EUDElseIf()(v.P_LoopMain[playerID] <= 65):
                # (Line 85) {
                # (Line 86) for(var i =0; i < 8; i++)
                i = EUDVariable()
                i << (0)
                if EUDWhile()(i >= 8, neg=True):
                    def _t17():
                        i.__iadd__(1)
                    # (Line 87) {
                    # (Line 88) MoveLocation(v.P_LocationID[playerID],"60 + 1n Hydralisk",playerID,"Anywhere");
                    # (Line 89) RemoveUnitAt(1,"60 + 1n Hydralisk","Anywhere",playerID);
                    DoActions(MoveLocation(v.P_LocationID[playerID], "60 + 1n Hydralisk", playerID, "Anywhere"))
                    # (Line 90) epic.SkillUnit(playerID,1,"Protoss Observer",1);
                    DoActions(RemoveUnitAt(1, "60 + 1n Hydralisk", "Anywhere", playerID))
                    epic.SkillUnit(playerID, 1, "Protoss Observer", 1)
                    # (Line 91) KillUnitAt(All,"Protoss Observer","Anywhere",playerID);
                    # (Line 92) }
                    DoActions(KillUnitAt(All, "Protoss Observer", "Anywhere", playerID))
                    # (Line 93) trg.Main_Wait(80);
                    EUDSetContinuePoint()
                    _t17()
                EUDEndWhile()
                trg.Main_Wait(80)
                # (Line 94) }
                # (Line 95) else if(v.P_LoopMain[playerID] == 66)
            if EUDElseIf()(v.P_LoopMain[playerID] == 66):
                # (Line 96) {
                # (Line 97) SetSwitch("Recall - Chtholly",Clear);
                # (Line 98) SetSwitch("UiltimateSwitch", Clear);
                DoActions(SetSwitch("Recall - Chtholly", Clear))
                # (Line 99) trg.SkillEnd();
                DoActions(SetSwitch("UiltimateSwitch", Clear))
                trg.SkillEnd()
                # (Line 100) }
                # (Line 101) v.P_LoopMain[playerID] += 1;
            EUDEndIf()
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 102) }
            # (Line 103) }
        EUDEndIf()
        # (Line 104) }
    EUDEndIf()
