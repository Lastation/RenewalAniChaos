## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import PluginVariables as msqcvar;
import PluginVariables as msqcvar
# (Line 2) import variable as v;
import variable as v
# (Line 3) import func.trig as trg;
from func import trig as trg
# (Line 4) import func.sound as s;
from func import sound as s
# (Line 5) import func.trigepic as epic;
from func import trigepic as epic
# (Line 7) var x = 0;
x = EUDCreateVariables(1)
_IGVA([x], lambda: [0])
# (Line 8) function main(playerID)
# (Line 9) {
@EUDFunc
def f_main(playerID):
    # (Line 10) trg.Debuff_Stop();
    trg.Debuff_Stop()
    # (Line 11) trg.Debuff_BanReturn();
    trg.Debuff_BanReturn()
    # (Line 12) if (v.P_WaitMain[playerID] == 0)
    if EUDIf()(v.P_WaitMain[playerID] == 0):
        # (Line 13) {
        # (Line 14) MoveUnit(All,"50 + 1n Tank", playerID, "Anywhere", "[Skill]HoldPosition");
        # (Line 15) MoveUnit(All,"60 + 1n Hydralisk", playerID, "Anywhere", "[Skill]HoldPosition");
        DoActions(MoveUnit(All, "50 + 1n Tank", playerID, "Anywhere", "[Skill]HoldPosition"))
        # (Line 16) if (v.P_CountMain[playerID] == 0)
        DoActions(MoveUnit(All, "60 + 1n Hydralisk", playerID, "Anywhere", "[Skill]HoldPosition"))
        if EUDIf()(v.P_CountMain[playerID] == 0):
            # (Line 17) {
            # (Line 19) if(v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 20) {
                # (Line 21) trg.Main_Wait(800);
                trg.Main_Wait(800)
                # (Line 22) }
                # (Line 23) else if(v.P_LoopMain[playerID] == 1)
            if EUDElseIf()(v.P_LoopMain[playerID] == 1):
                # (Line 24) {
                # (Line 25) s.CharacterVoice(13);
                s.CharacterVoice(13)
                # (Line 26) trg.Main_Wait(0);
                trg.Main_Wait(0)
                # (Line 27) }
                # (Line 28) else if(v.P_LoopMain[playerID] <= 16)
            if EUDElseIf()(v.P_LoopMain[playerID] <= 16):
                # (Line 29) {
                # (Line 30) if(v.P_LoopMain[playerID] % 2 == 0)
                if EUDIf()(v.P_LoopMain[playerID] % 2 == 0):
                    # (Line 31) {
                    # (Line 32) trg.Shape_Line(playerID,1,"60 + 1n Hydralisk",0+30*v.P_LoopMain[playerID],2,128+x,0);
                    trg.Shape_Line(playerID, 1, "60 + 1n Hydralisk", 0 + 30 * v.P_LoopMain[playerID], 2, 128 + x, 0)
                    # (Line 33) trg.Shape_Line(playerID,1,"60 + 1n Hydralisk",90+30*v.P_LoopMain[playerID],2,128+x,0);
                    trg.Shape_Line(playerID, 1, "60 + 1n Hydralisk", 90 + 30 * v.P_LoopMain[playerID], 2, 128 + x, 0)
                    # (Line 34) }
                    # (Line 35) trg.Shape_Line(playerID,1,"Protoss Observer",0+30*v.P_LoopMain[playerID],2,128+x,0);
                EUDEndIf()
                trg.Shape_Line(playerID, 1, "Protoss Observer", 0 + 30 * v.P_LoopMain[playerID], 2, 128 + x, 0)
                # (Line 36) trg.Shape_Line(playerID,1,"Protoss Observer",90+30*v.P_LoopMain[playerID],2,128+x,0);
                trg.Shape_Line(playerID, 1, "Protoss Observer", 90 + 30 * v.P_LoopMain[playerID], 2, 128 + x, 0)
                # (Line 37) x += 64;
                x.__iadd__(64)
                # (Line 38) KillUnitAt(All,"Protoss Observer","Anywhere",playerID);
                # (Line 39) trg.Main_Wait(150);
                DoActions(KillUnitAt(All, "Protoss Observer", "Anywhere", playerID))
                trg.Main_Wait(150)
                # (Line 40) }
                # (Line 41) else if(v.P_LoopMain[playerID] <= 26)
            if EUDElseIf()(v.P_LoopMain[playerID] <= 26):
                # (Line 42) {
                # (Line 43) trg.Shape_Line(playerID,1,"60 + 1n Siege",0+v.P_LoopMain[playerID] *15,2,640,0);
                trg.Shape_Line(playerID, 1, "60 + 1n Siege", 0 + v.P_LoopMain[playerID] * 15, 2, 640, 0)
                # (Line 44) trg.Shape_Line(playerID,1,"60 + 1n Siege",90+v.P_LoopMain[playerID] *15,2,640,0);
                trg.Shape_Line(playerID, 1, "60 + 1n Siege", 90 + v.P_LoopMain[playerID] * 15, 2, 640, 0)
                # (Line 46) trg.Shape_Line(playerID,1,"Protoss Observer",0+v.P_LoopMain[playerID] *15,2,640,0);
                trg.Shape_Line(playerID, 1, "Protoss Observer", 0 + v.P_LoopMain[playerID] * 15, 2, 640, 0)
                # (Line 47) trg.Shape_Line(playerID,1,"Protoss Observer",90+v.P_LoopMain[playerID] *15,2,640,0);
                trg.Shape_Line(playerID, 1, "Protoss Observer", 90 + v.P_LoopMain[playerID] * 15, 2, 640, 0)
                # (Line 48) KillUnitAt(All,"Protoss Observer","Anywhere",playerID);
                # (Line 49) trg.Main_Wait(100);
                DoActions(KillUnitAt(All, "Protoss Observer", "Anywhere", playerID))
                trg.Main_Wait(100)
                # (Line 50) }
                # (Line 51) else if(v.P_LoopMain[playerID] == 27)
            if EUDElseIf()(v.P_LoopMain[playerID] == 27):
                # (Line 52) {
                # (Line 53) x = 0;
                x << (0)
                # (Line 54) trg.Main_Wait(1700);
                trg.Main_Wait(1700)
                # (Line 55) }
                # (Line 56) else if(v.P_LoopMain[playerID] == 28)
            if EUDElseIf()(v.P_LoopMain[playerID] == 28):
                # (Line 57) {
                # (Line 58) trg.Shape_Square(playerID,1,"40 + 1n Gantrithor",128,128);
                trg.Shape_Square(playerID, 1, "40 + 1n Gantrithor", 128, 128)
                # (Line 59) trg.Shape_Square(playerID,1,"60 + 1n Archon",128,128);
                trg.Shape_Square(playerID, 1, "60 + 1n Archon", 128, 128)
                # (Line 60) ModifyUnitHangarCount(3,All,"40 + 1n Gantrithor",playerID,"Anywhere");
                # (Line 61) KillUnitAt(All,"60 + 1n Archon","Anywhere",playerID);
                DoActions(ModifyUnitHangarCount(3, All, "40 + 1n Gantrithor", playerID, "Anywhere"))
                # (Line 62) trg.MoveLoc(v.P_UnitID[playerID],playerID,0,0);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 63) Order("40 + 1n Gantrithor",playerID,"Anywhere",Attack,v.P_LocationID[playerID]);
                # (Line 64) trg.Main_Wait(1800);
                DoActions(Order("40 + 1n Gantrithor", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(1800)
                # (Line 65) }
                # (Line 66) else if(v.P_LoopMain[playerID] <= 38)
            if EUDElseIf()(v.P_LoopMain[playerID] <= 38):
                # (Line 67) {
                # (Line 68) for(var i =0; i < 4; i++)
                i = EUDVariable()
                i << (0)
                if EUDWhile()(i >= 4, neg=True):
                    def _t12():
                        i.__iadd__(1)
                    # (Line 69) {
                    # (Line 70) MoveLocation(v.P_LocationID[playerID],"60 + 1n Hydralisk",playerID,"Anywhere");
                    # (Line 71) RemoveUnitAt(1,"60 + 1n Hydralisk","Anywhere",playerID);
                    DoActions(MoveLocation(v.P_LocationID[playerID], "60 + 1n Hydralisk", playerID, "Anywhere"))
                    # (Line 72) epic.SkillUnit(playerID,1,"40 + 1n Lurker",0);
                    DoActions(RemoveUnitAt(1, "60 + 1n Hydralisk", "Anywhere", playerID))
                    epic.SkillUnit(playerID, 1, "40 + 1n Lurker", 0)
                    # (Line 73) trg.SkillUnit(playerID,1,"60 + 3n Siege");
                    trg.SkillUnit(playerID, 1, "60 + 3n Siege")
                    # (Line 74) KillUnitAt(All,"60 + 3n Siege","Anywhere",playerID);
                    # (Line 75) }
                    DoActions(KillUnitAt(All, "60 + 3n Siege", "Anywhere", playerID))
                    # (Line 76) trg.Main_Wait(140);
                    EUDSetContinuePoint()
                    _t12()
                EUDEndWhile()
                trg.Main_Wait(140)
                # (Line 77) }
                # (Line 78) else if(v.P_LoopMain[playerID] <= 48)
            if EUDElseIf()(v.P_LoopMain[playerID] <= 48):
                # (Line 79) {
                # (Line 80) for(var i =0; i < 4; i++)
                i = EUDVariable()
                i << (0)
                if EUDWhile()(i >= 4, neg=True):
                    def _t15():
                        i.__iadd__(1)
                    # (Line 81) {
                    # (Line 82) MoveLocation(v.P_LocationID[playerID],"60 + 1n Siege",playerID,"Anywhere");
                    # (Line 83) RemoveUnitAt(1,"60 + 1n Siege","Anywhere",playerID);
                    DoActions(MoveLocation(v.P_LocationID[playerID], "60 + 1n Siege", playerID, "Anywhere"))
                    # (Line 84) trg.SkillUnit(playerID,1,"50 + 1n Tank");
                    DoActions(RemoveUnitAt(1, "60 + 1n Siege", "Anywhere", playerID))
                    trg.SkillUnit(playerID, 1, "50 + 1n Tank")
                    # (Line 85) trg.SkillUnit(playerID,1,"60 + 3n Siege");
                    trg.SkillUnit(playerID, 1, "60 + 3n Siege")
                    # (Line 86) KillUnitAt(All,"60 + 3n Siege","Anywhere",playerID);
                    # (Line 87) }
                    DoActions(KillUnitAt(All, "60 + 3n Siege", "Anywhere", playerID))
                    # (Line 88) trg.Main_Wait(80);
                    EUDSetContinuePoint()
                    _t15()
                EUDEndWhile()
                trg.Main_Wait(80)
                # (Line 89) }
                # (Line 90) else if(v.P_LoopMain[playerID] <= 58)
            if EUDElseIf()(v.P_LoopMain[playerID] <= 58):
                # (Line 91) {
                # (Line 92) KillUnitAt(All,"40 + 1n Gantrithor","Anywhere",playerID);
                # (Line 93) for(var i =0; i < 4; i++)
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID))
                i = EUDVariable()
                i << (0)
                if EUDWhile()(i >= 4, neg=True):
                    def _t18():
                        i.__iadd__(1)
                    # (Line 94) {
                    # (Line 95) MoveLocation(v.P_LocationID[playerID],"50 + 1n Tank",playerID,"Anywhere");
                    # (Line 96) RemoveUnitAt(1,"50 + 1n Tank","Anywhere",playerID);
                    DoActions(MoveLocation(v.P_LocationID[playerID], "50 + 1n Tank", playerID, "Anywhere"))
                    # (Line 97) trg.SkillUnit(playerID,1,"40 + 1n Mutalisk");
                    DoActions(RemoveUnitAt(1, "50 + 1n Tank", "Anywhere", playerID))
                    trg.SkillUnit(playerID, 1, "40 + 1n Mutalisk")
                    # (Line 98) trg.SkillUnit(playerID,1,"80 + 1n Mutalisk");
                    trg.SkillUnit(playerID, 1, "80 + 1n Mutalisk")
                    # (Line 99) KillUnitAt(All,"80 + 1n Mutalisk","Anywhere",playerID);
                    # (Line 100) }
                    DoActions(KillUnitAt(All, "80 + 1n Mutalisk", "Anywhere", playerID))
                    # (Line 101) trg.MoveLoc(v.P_UnitID[playerID],playerID,0,0);
                    EUDSetContinuePoint()
                    _t18()
                EUDEndWhile()
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 102) Order("40 + 1n Mutalisk",playerID,"Anywhere",Attack,v.P_LocationID[playerID]);
                # (Line 103) trg.Main_Wait(80);
                DoActions(Order("40 + 1n Mutalisk", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(80)
                # (Line 104) }
                # (Line 105) else if(v.P_LoopMain[playerID] == 59)
            if EUDElseIf()(v.P_LoopMain[playerID] == 59):
                # (Line 106) {
                # (Line 107) trg.Main_Wait(900);
                trg.Main_Wait(900)
                # (Line 108) }
                # (Line 109) else if(v.P_LoopMain[playerID] <= 69)
            if EUDElseIf()(v.P_LoopMain[playerID] <= 69):
                # (Line 110) {
                # (Line 111) for(var i =0; i < 4; i++)
                i = EUDVariable()
                i << (0)
                if EUDWhile()(i >= 4, neg=True):
                    def _t22():
                        i.__iadd__(1)
                    # (Line 112) {
                    # (Line 113) MoveLocation(v.P_LocationID[playerID],"40 + 1n Lurker",playerID,"Anywhere");
                    # (Line 114) RemoveUnitAt(1,"40 + 1n Lurker","Anywhere",playerID);
                    DoActions(MoveLocation(v.P_LocationID[playerID], "40 + 1n Lurker", playerID, "Anywhere"))
                    # (Line 115) trg.SkillUnit(playerID,1,"Protoss Observer");
                    DoActions(RemoveUnitAt(1, "40 + 1n Lurker", "Anywhere", playerID))
                    trg.SkillUnit(playerID, 1, "Protoss Observer")
                    # (Line 116) KillUnitAt(All,"Protoss Observer","Anywhere",playerID);
                    # (Line 117) }
                    DoActions(KillUnitAt(All, "Protoss Observer", "Anywhere", playerID))
                    # (Line 118) KillUnitAt(4,"40 + 1n Mutalisk","Anywhere",playerID);
                    EUDSetContinuePoint()
                    _t22()
                EUDEndWhile()
                # (Line 119) trg.Main_Wait(80);
                DoActions(KillUnitAt(4, "40 + 1n Mutalisk", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 120) }
                # (Line 121) else if(v.P_LoopMain[playerID] == 70)
            if EUDElseIf()(v.P_LoopMain[playerID] == 70):
                # (Line 122) {
                # (Line 123) x = 0;
                x << (0)
                # (Line 124) trg.SkillEnd();
                trg.SkillEnd()
                # (Line 125) }
                # (Line 127) v.P_LoopMain[playerID] += 1;
            EUDEndIf()
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 128) }
            # (Line 129) }
        EUDEndIf()
        # (Line 130) }
    EUDEndIf()
