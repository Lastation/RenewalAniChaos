## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import PluginVariables as msqcvar;
import PluginVariables as msqcvar
# (Line 2) import variable as v;
import variable as v
# (Line 3) import func.trig as trg;
from func import trig as trg
# (Line 4) import func.sound as s;
from func import sound as s
# (Line 5) import func.trigepic as epic;
from func import trigepic as epic
# (Line 7) function main(playerID)
# (Line 8) {
@EUDFunc
def f_main(playerID):
    # (Line 9) trg.Debuff_Stop();
    trg.Debuff_Stop()
    # (Line 10) trg.Debuff_BanReturn();
    trg.Debuff_BanReturn()
    # (Line 11) if (v.P_WaitMain[playerID] == 0)
    if EUDIf()(v.P_WaitMain[playerID] == 0):
        # (Line 12) {
        # (Line 13) MoveUnit(All,"50 + 1n Tank", playerID, "Anywhere", "[Skill]HoldPosition");
        # (Line 14) MoveUnit(All,"40 + 1n Drone", playerID, "Anywhere", "[Skill]HoldPosition");
        DoActions(MoveUnit(All, "50 + 1n Tank", playerID, "Anywhere", "[Skill]HoldPosition"))
        # (Line 15) if(v.P_CountMain[playerID] == 0)
        DoActions(MoveUnit(All, "40 + 1n Drone", playerID, "Anywhere", "[Skill]HoldPosition"))
        if EUDIf()(v.P_CountMain[playerID] == 0):
            # (Line 16) {
            # (Line 17) if (v.P_LoopMain[playerID] <= 30)
            if EUDIf()(v.P_LoopMain[playerID] <= 30):
                # (Line 18) {
                # (Line 19) if(v.P_LoopMain[playerID] % 6 == 0)
                if EUDIf()(v.P_LoopMain[playerID] % 6 == 0):
                    # (Line 20) {
                    # (Line 21) trg.Shape_Line(playerID,1,"40 + 1n Drone",0+v.P_LoopMain[playerID] *15,2,256,0);
                    trg.Shape_Line(playerID, 1, "40 + 1n Drone", 0 + v.P_LoopMain[playerID] * 15, 2, 256, 0)
                    # (Line 22) }
                    # (Line 23) trg.Shape_Line(playerID,1,"40 + 1n Gantrithor",0+v.P_LoopMain[playerID] *15,2,256,0);
                EUDEndIf()
                trg.Shape_Line(playerID, 1, "40 + 1n Gantrithor", 0 + v.P_LoopMain[playerID] * 15, 2, 256, 0)
                # (Line 24) trg.Shape_Line(playerID,1,"40 + 1n Gantrithor",90+v.P_LoopMain[playerID] *15,2,256,0);
                trg.Shape_Line(playerID, 1, "40 + 1n Gantrithor", 90 + v.P_LoopMain[playerID] * 15, 2, 256, 0)
                # (Line 25) KillUnitAt(All,"40 + 1n Gantrithor","Anywhere",playerID);
                # (Line 26) trg.Main_Wait(100);
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID))
                trg.Main_Wait(100)
                # (Line 27) }
                # (Line 28) else if (v.P_LoopMain[playerID] <= 85)
            if EUDElseIf()(v.P_LoopMain[playerID] <= 85):
                # (Line 29) {
                # (Line 30) if(v.P_LoopMain[playerID] % 5 == 0)
                if EUDIf()(v.P_LoopMain[playerID] % 5 == 0):
                    # (Line 31) {
                    # (Line 32) trg.Shape_Line(playerID,1,"50 + 1n Tank",0+v.P_LoopMain[playerID] *15,2,384,0);
                    trg.Shape_Line(playerID, 1, "50 + 1n Tank", 0 + v.P_LoopMain[playerID] * 15, 2, 384, 0)
                    # (Line 33) }
                    # (Line 34) trg.Shape_Line(playerID,1,"40 + 1n Gantrithor",0+v.P_LoopMain[playerID] *15,2,384,0);
                EUDEndIf()
                trg.Shape_Line(playerID, 1, "40 + 1n Gantrithor", 0 + v.P_LoopMain[playerID] * 15, 2, 384, 0)
                # (Line 35) trg.Shape_Line(playerID,1,"40 + 1n Gantrithor",90+v.P_LoopMain[playerID] *15,2,384,0);
                trg.Shape_Line(playerID, 1, "40 + 1n Gantrithor", 90 + v.P_LoopMain[playerID] * 15, 2, 384, 0)
                # (Line 36) KillUnitAt(All,"40 + 1n Gantrithor","Anywhere",playerID);
                # (Line 37) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 38) }
                # (Line 40) else if (v.P_LoopMain[playerID] <= 135)
            if EUDElseIf()(v.P_LoopMain[playerID] <= 135):
                # (Line 41) {
                # (Line 42) if(v.P_LoopMain[playerID] % 5 == 0)
                if EUDIf()(v.P_LoopMain[playerID] % 5 == 0):
                    # (Line 43) {
                    # (Line 44) trg.Shape_Line(playerID,1,"60 + 1n Siege",0+v.P_LoopMain[playerID] *15,2,512,0);
                    trg.Shape_Line(playerID, 1, "60 + 1n Siege", 0 + v.P_LoopMain[playerID] * 15, 2, 512, 0)
                    # (Line 45) epic.Shape_Line(playerID,1,"60 + 1n Siege",90+v.P_LoopMain[playerID]
                    # (Line 46) *15,2,512,0,1);
                    epic.Shape_Line(playerID, 1, "60 + 1n Siege", 90 + v.P_LoopMain[playerID] * 15, 2, 512, 0, 1)
                    # (Line 47) epic.Shape_Line(playerID,1,"40 + 1n Lurker",90+v.P_LoopMain[playerID]*15,2,512,0,0);
                    epic.Shape_Line(playerID, 1, "40 + 1n Lurker", 90 + v.P_LoopMain[playerID] * 15, 2, 512, 0, 0)
                    # (Line 48) }
                    # (Line 49) trg.Shape_Line(playerID,1,"40 + 1n Gantrithor",0+v.P_LoopMain[playerID] *15,2,512,0);
                EUDEndIf()
                trg.Shape_Line(playerID, 1, "40 + 1n Gantrithor", 0 + v.P_LoopMain[playerID] * 15, 2, 512, 0)
                # (Line 50) trg.Shape_Line(playerID,1,"40 + 1n Gantrithor",90+v.P_LoopMain[playerID] *15,2,512,0);
                trg.Shape_Line(playerID, 1, "40 + 1n Gantrithor", 90 + v.P_LoopMain[playerID] * 15, 2, 512, 0)
                # (Line 51) KillUnitAt(All,"40 + 1n Gantrithor","Anywhere",playerID);
                # (Line 52) trg.Main_Wait(60);
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID))
                trg.Main_Wait(60)
                # (Line 53) }
                # (Line 54) else if(v.P_LoopMain[playerID] == 136)
            if EUDElseIf()(v.P_LoopMain[playerID] == 136):
                # (Line 55) {
                # (Line 56) trg.Main_Wait(4000);
                trg.Main_Wait(4000)
                # (Line 57) }
                # (Line 58) else if (v.P_LoopMain[playerID] == 137)
            if EUDElseIf()(v.P_LoopMain[playerID] == 137):
                # (Line 59) {
                # (Line 60) KillUnitAt(All,"50 + 1n Tank", "Anywhere", playerID);
                # (Line 61) KillUnitAt(All,"40 + 1n Drone", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                # (Line 62) KillUnitAt(All,"40 + 1n Lurker", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Drone", "Anywhere", playerID))
                # (Line 63) KillUnitAt(All,"60 + 1n Siege", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Lurker", "Anywhere", playerID))
                # (Line 64) trg.SkillEnd();
                DoActions(KillUnitAt(All, "60 + 1n Siege", "Anywhere", playerID))
                trg.SkillEnd()
                # (Line 65) }
                # (Line 66) v.P_LoopMain[playerID] += 1;
            EUDEndIf()
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 67) }
            # (Line 68) }
        EUDEndIf()
        # (Line 69) }
    EUDEndIf()
