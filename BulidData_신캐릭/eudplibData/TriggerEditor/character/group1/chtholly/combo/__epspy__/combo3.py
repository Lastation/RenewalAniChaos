## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import PluginVariables as msqcvar;
import PluginVariables as msqcvar
# (Line 2) import variable as v;
import variable as v
# (Line 3) import func.trig as trg;
from func import trig as trg
# (Line 4) import func.sound as s;
from func import sound as s
# (Line 5) import func.trigepic as epic;
from func import trigepic as epic
# (Line 7) var x = 0;
x = EUDCreateVariables(1)
_IGVA([x], lambda: [0])
# (Line 8) function main(playerID)
# (Line 9) {
@EUDFunc
def f_main(playerID):
    # (Line 10) trg.Debuff_Stop();
    trg.Debuff_Stop()
    # (Line 11) trg.Debuff_BanReturn();
    trg.Debuff_BanReturn()
    # (Line 12) if (v.P_WaitMain[playerID] == 0)
    if EUDIf()(v.P_WaitMain[playerID] == 0):
        # (Line 13) {
        # (Line 14) if (v.P_CountMain[playerID] == 0)
        if EUDIf()(v.P_CountMain[playerID] == 0):
            # (Line 15) {
            # (Line 16) KillUnitAt(All," Creep. Dunkelheit","Anywhere",playerID);
            # (Line 17) RemoveUnitAt(All,"40 + 1n Mutalisk","Anywhere",playerID);
            DoActions(KillUnitAt(All, " Creep. Dunkelheit", "Anywhere", playerID))
            # (Line 18) RemoveUnitAt(All,"40 + 1n Guardian","Anywhere",playerID);
            DoActions(RemoveUnitAt(All, "40 + 1n Mutalisk", "Anywhere", playerID))
            # (Line 19) KillUnitAt(All,"50 + 1n Battlecruiser","Anywhere",playerID);
            DoActions(RemoveUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID))
            # (Line 20) if(v.P_LoopMain[playerID] == 0)
            DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 21) {
                # (Line 22) trg.Main_Wait(200);
                trg.Main_Wait(200)
                # (Line 23) }
                # (Line 24) else if(v.P_LoopMain[playerID] == 1)
            if EUDElseIf()(v.P_LoopMain[playerID] == 1):
                # (Line 25) {
                # (Line 26) trg.Shape_NxNSquare(playerID,1," Unit. Hoffnung 25000",4,96);
                trg.Shape_NxNSquare(playerID, 1, " Unit. Hoffnung 25000", 4, 96)
                # (Line 27) KillUnitAt(All," Unit. Hoffnung 25000","Anywhere",playerID);
                # (Line 28) trg.Main_Wait(1600);
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID))
                trg.Main_Wait(1600)
                # (Line 29) }
                # (Line 30) else if(v.P_LoopMain[playerID] <= 5)
            if EUDElseIf()(v.P_LoopMain[playerID] <= 5):
                # (Line 31) {
                # (Line 32) trg.Shape_Line(playerID,1,"40 + 1n Guardian",120 - x,2,256,0);
                trg.Shape_Line(playerID, 1, "40 + 1n Guardian", 120 - x, 2, 256, 0)
                # (Line 33) trg.Shape_Line(playerID,1,"60 + 1n Archon",120 - x,2,256,0);
                trg.Shape_Line(playerID, 1, "60 + 1n Archon", 120 - x, 2, 256, 0)
                # (Line 34) trg.Shape_Line(playerID,1,"60 + 1n Archon",120 - x,2,128,0);
                trg.Shape_Line(playerID, 1, "60 + 1n Archon", 120 - x, 2, 128, 0)
                # (Line 35) trg.Shape_Dot(playerID,1,"60 + 1n Archon",0,0);
                trg.Shape_Dot(playerID, 1, "60 + 1n Archon", 0, 0)
                # (Line 36) KillUnitAt(All,"60 + 1n Archon","Anywhere",playerID);
                # (Line 37) x += 30;
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                x.__iadd__(30)
                # (Line 38) trg.MoveLoc(v.P_UnitID[playerID],playerID,0,0);
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 39) Order("40 + 1n Guardian",playerID,"Anywhere",Attack,v.P_LocationID[playerID]);
                # (Line 40) trg.Main_Wait(120);
                DoActions(Order("40 + 1n Guardian", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(120)
                # (Line 41) }
                # (Line 42) else if(v.P_LoopMain[playerID] == 6)
            if EUDElseIf()(v.P_LoopMain[playerID] == 6):
                # (Line 43) {
                # (Line 44) x = 0;
                x << (0)
                # (Line 45) trg.Main_Wait(400);
                trg.Main_Wait(400)
                # (Line 46) }
                # (Line 47) else if(v.P_LoopMain[playerID] <= 12)
            if EUDElseIf()(v.P_LoopMain[playerID] <= 12):
                # (Line 48) {
                # (Line 49) trg.Shape_Line(playerID,1,"40 + 1n Mutalisk",0 + x,4,82,0);
                trg.Shape_Line(playerID, 1, "40 + 1n Mutalisk", 0 + x, 4, 82, 0)
                # (Line 50) trg.Shape_Line(playerID,1,"Protoss Dark Archon",0 + x,4,82,0);
                trg.Shape_Line(playerID, 1, "Protoss Dark Archon", 0 + x, 4, 82, 0)
                # (Line 51) KillUnitAt(All,"Protoss Dark Archon","Anywhere",playerID);
                # (Line 52) x += 30;
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                x.__iadd__(30)
                # (Line 53) trg.MoveLoc(v.P_UnitID[playerID],playerID,0,0);
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 54) Order("40 + 1n Mutalisk",playerID,"Anywhere",Attack,v.P_LocationID[playerID]);
                # (Line 55) trg.Main_Wait(60);
                DoActions(Order("40 + 1n Mutalisk", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(60)
                # (Line 56) }
                # (Line 57) else if(v.P_LoopMain[playerID] == 13)
            if EUDElseIf()(v.P_LoopMain[playerID] == 13):
                # (Line 58) {
                # (Line 59) trg.Shape_NxNSquare(playerID,1,"50 + 1n Battlecruiser",3,64);
                trg.Shape_NxNSquare(playerID, 1, "50 + 1n Battlecruiser", 3, 64)
                # (Line 60) x = 0;
                x << (0)
                # (Line 61) trg.MoveLoc(v.P_UnitID[playerID],playerID,0,0);
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 62) Order("50 + 1n Battlecruiser",playerID,"Anywhere",Attack,v.P_LocationID[playerID]);
                # (Line 63) trg.Main_Wait(250);
                DoActions(Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(250)
                # (Line 64) }
                # (Line 65) else if(v.P_LoopMain[playerID] == 14)
            if EUDElseIf()(v.P_LoopMain[playerID] == 14):
                # (Line 66) {
                # (Line 67) trg.Main_Wait(600);
                trg.Main_Wait(600)
                # (Line 68) }
                # (Line 69) else if(v.P_LoopMain[playerID] == 15)
            if EUDElseIf()(v.P_LoopMain[playerID] == 15):
                # (Line 70) {
                # (Line 71) trg.Shape_NxNSquare(playerID,1,"50 + 1n Battlecruiser",6,64);
                trg.Shape_NxNSquare(playerID, 1, "50 + 1n Battlecruiser", 6, 64)
                # (Line 72) KillUnitAt(All,"50 + 1n Battlecruiser","Anywhere",playerID);
                # (Line 73) trg.Shape_Edge(playerID,3," Creep. Licht",45,3,192);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                trg.Shape_Edge(playerID, 3, " Creep. Licht", 45, 3, 192)
                # (Line 74) trg.Shape_Edge(playerID,3," Creep. Licht",45,3,224);
                trg.Shape_Edge(playerID, 3, " Creep. Licht", 45, 3, 224)
                # (Line 75) trg.Shape_Edge(playerID,3," Creep. Licht",45,3,160);
                trg.Shape_Edge(playerID, 3, " Creep. Licht", 45, 3, 160)
                # (Line 76) trg.Shape_Edge(playerID,3," Creep. Licht",45,3,176);
                trg.Shape_Edge(playerID, 3, " Creep. Licht", 45, 3, 176)
                # (Line 77) trg.Shape_Edge(playerID,3," Creep. Licht",45,3,208);
                trg.Shape_Edge(playerID, 3, " Creep. Licht", 45, 3, 208)
                # (Line 79) trg.Shape_Edge(playerID,1," Unit. Hoffnung 25000",45,3,192);
                trg.Shape_Edge(playerID, 1, " Unit. Hoffnung 25000", 45, 3, 192)
                # (Line 80) trg.Shape_Edge(playerID,1," Unit. Hoffnung 25000",45,3,224);
                trg.Shape_Edge(playerID, 1, " Unit. Hoffnung 25000", 45, 3, 224)
                # (Line 81) trg.Shape_Edge(playerID,1," Unit. Hoffnung 25000",45,3,160);
                trg.Shape_Edge(playerID, 1, " Unit. Hoffnung 25000", 45, 3, 160)
                # (Line 82) trg.Shape_Edge(playerID,1," Unit. Hoffnung 25000",45,3,176);
                trg.Shape_Edge(playerID, 1, " Unit. Hoffnung 25000", 45, 3, 176)
                # (Line 83) trg.Shape_Edge(playerID,1," Unit. Hoffnung 25000",45,3,208);
                trg.Shape_Edge(playerID, 1, " Unit. Hoffnung 25000", 45, 3, 208)
                # (Line 85) trg.MoveLoc(v.P_UnitID[playerID],playerID,0,0);
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 86) MoveUnit(All," Creep. Licht", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                # (Line 87) MoveUnit(All," Unit. Hoffnung 25000", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
                DoActions(MoveUnit(All, " Creep. Licht", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                # (Line 88) Order(" Unit. Hoffnung 25000",playerID,"Anywhere",Attack,v.P_LocationID[playerID]);
                DoActions(MoveUnit(All, " Unit. Hoffnung 25000", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]))
                # (Line 89) Order(" Creep. Licht",playerID,"Anywhere",Attack,v.P_LocationID[playerID]);
                DoActions(Order(" Unit. Hoffnung 25000", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 90) trg.Main_Wait(800);
                DoActions(Order(" Creep. Licht", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(800)
                # (Line 91) }
                # (Line 92) else if(v.P_LoopMain[playerID] <= 25)
            if EUDElseIf()(v.P_LoopMain[playerID] <= 25):
                # (Line 93) {
                # (Line 94) for(var i = 0; i < 4; i++)
                i = EUDVariable()
                i << (0)
                if EUDWhile()(i >= 4, neg=True):
                    def _t13():
                        i.__iadd__(1)
                    # (Line 95) {
                    # (Line 96) MoveLocation(v.P_LocationID[playerID]," Unit. Hoffnung 25000",playerID,"Anywhere");
                    # (Line 97) RemoveUnitAt(1," Unit. Hoffnung 25000","Anywhere",playerID);
                    DoActions(MoveLocation(v.P_LocationID[playerID], " Unit. Hoffnung 25000", playerID, "Anywhere"))
                    # (Line 98) if(v.P_LoopMain[playerID] % 2 == 0)
                    DoActions(RemoveUnitAt(1, " Unit. Hoffnung 25000", "Anywhere", playerID))
                    if EUDIf()(v.P_LoopMain[playerID] % 2 == 0):
                        # (Line 99) {
                        # (Line 100) trg.SkillUnit(playerID,1,"40 + 1n Drone");
                        trg.SkillUnit(playerID, 1, "40 + 1n Drone")
                        # (Line 101) trg.SkillUnit(playerID,1,"Torrasque");
                        trg.SkillUnit(playerID, 1, "Torrasque")
                        # (Line 102) KillUnitAt(All,"Torrasque","Anywhere",playerID);
                        # (Line 103) }
                        DoActions(KillUnitAt(All, "Torrasque", "Anywhere", playerID))
                        # (Line 104) else if(v.P_LoopMain[playerID] % 2 == 1)
                    if EUDElseIf()(v.P_LoopMain[playerID] % 2 == 1):
                        # (Line 105) {
                        # (Line 106) epic.SkillUnit(playerID,1,"40 + 1n Drone",1);
                        epic.SkillUnit(playerID, 1, "40 + 1n Drone", 1)
                        # (Line 107) trg.SkillUnit(playerID,1,"Torrasque");
                        trg.SkillUnit(playerID, 1, "Torrasque")
                        # (Line 108) KillUnitAt(All,"Torrasque","Anywhere",playerID);
                        # (Line 109) }
                        DoActions(KillUnitAt(All, "Torrasque", "Anywhere", playerID))
                        # (Line 110) trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0);
                    EUDEndIf()
                    trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                    # (Line 111) }
                    # (Line 112) KillUnitAt(12," Creep. Licht","Anywhere",playerID);
                    EUDSetContinuePoint()
                    _t13()
                EUDEndWhile()
                # (Line 113) Order("40 + 1n Drone",playerID,"Anywhere",Attack,v.P_LocationID[playerID]);
                DoActions(KillUnitAt(12, " Creep. Licht", "Anywhere", playerID))
                # (Line 114) trg.Main_Wait(80);
                DoActions(Order("40 + 1n Drone", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(80)
                # (Line 115) }
                # (Line 116) else if(v.P_LoopMain[playerID] <= 35)
            if EUDElseIf()(v.P_LoopMain[playerID] <= 35):
                # (Line 117) {
                # (Line 118) KillUnitAt(4,"40 + 1n Drone","Anywhere",playerID);
                # (Line 119) trg.Main_Wait(80);
                DoActions(KillUnitAt(4, "40 + 1n Drone", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 120) }
                # (Line 121) else if(v.P_LoopMain[playerID] == 36)
            if EUDElseIf()(v.P_LoopMain[playerID] == 36):
                # (Line 122) {
                # (Line 123) x = 0;
                x << (0)
                # (Line 124) trg.SkillEnd();
                trg.SkillEnd()
                # (Line 125) }
                # (Line 127) v.P_LoopMain[playerID] += 1;
            EUDEndIf()
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 128) }
            # (Line 129) }
        EUDEndIf()
        # (Line 130) }
    EUDEndIf()
