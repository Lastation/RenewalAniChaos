## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import PluginVariables as msqcvar;
import PluginVariables as msqcvar
# (Line 2) import variable as v;
import variable as v
# (Line 3) import func.trig as trg;
from func import trig as trg
# (Line 4) import func.sound as s;
from func import sound as s
# (Line 5) import func.trigepic as epic;
from func import trigepic as epic
# (Line 7) var x = 0;
x = EUDCreateVariables(1)
_IGVA([x], lambda: [0])
# (Line 8) function main(playerID)
# (Line 9) {
@EUDFunc
def f_main(playerID):
    # (Line 10) trg.Debuff_BanReturn();
    trg.Debuff_BanReturn()
    # (Line 11) trg.Buff_ShieldFix(1);
    trg.Buff_ShieldFix(1)
    # (Line 12) if (v.P_WaitMain[playerID] == 0)
    if EUDIf()(v.P_WaitMain[playerID] == 0):
        # (Line 13) {
        # (Line 14) if (v.P_CountMain[playerID] == 0)
        if EUDIf()(v.P_CountMain[playerID] == 0):
            # (Line 15) {
            # (Line 16) KillUnitAt(All,"40 + 1n Guardian","Anywhere",playerID);
            # (Line 17) if(v.P_LoopMain[playerID] == 0)
            DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID))
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 18) {
                # (Line 19) trg.Main_Wait(200);
                trg.Main_Wait(200)
                # (Line 20) }
                # (Line 21) else if(v.P_LoopMain[playerID] <= 17)
            if EUDElseIf()(v.P_LoopMain[playerID] <= 17):
                # (Line 22) {
                # (Line 23) if(v.P_LoopMain[playerID] % 2 == 0)
                if EUDIf()(v.P_LoopMain[playerID] % 2 == 0):
                    # (Line 24) {
                    # (Line 25) trg.Shape_Line(playerID,1,"40 + 1n Mutalisk",0+30*v.P_LoopMain[playerID],2,128+x,0);
                    trg.Shape_Line(playerID, 1, "40 + 1n Mutalisk", 0 + 30 * v.P_LoopMain[playerID], 2, 128 + x, 0)
                    # (Line 26) trg.Shape_Line(playerID,1,"40 + 1n Mutalisk",90+30*v.P_LoopMain[playerID],2,128+x,0);
                    trg.Shape_Line(playerID, 1, "40 + 1n Mutalisk", 90 + 30 * v.P_LoopMain[playerID], 2, 128 + x, 0)
                    # (Line 27) trg.Shape_Line(playerID,1,"40 + 1n Mutalisk",45+30*v.P_LoopMain[playerID],2,128+x,0);
                    trg.Shape_Line(playerID, 1, "40 + 1n Mutalisk", 45 + 30 * v.P_LoopMain[playerID], 2, 128 + x, 0)
                    # (Line 28) trg.Shape_Line(playerID,1,"40 + 1n Mutalisk",135+30*v.P_LoopMain[playerID],2,128+x,0);
                    trg.Shape_Line(playerID, 1, "40 + 1n Mutalisk", 135 + 30 * v.P_LoopMain[playerID], 2, 128 + x, 0)
                    # (Line 29) }
                    # (Line 30) trg.Shape_Line(playerID,1,"Protoss Observer",0+30*v.P_LoopMain[playerID],2,128+x,0);
                EUDEndIf()
                trg.Shape_Line(playerID, 1, "Protoss Observer", 0 + 30 * v.P_LoopMain[playerID], 2, 128 + x, 0)
                # (Line 31) trg.Shape_Line(playerID,1,"Protoss Observer",45+30*v.P_LoopMain[playerID],2,128+x,0);
                trg.Shape_Line(playerID, 1, "Protoss Observer", 45 + 30 * v.P_LoopMain[playerID], 2, 128 + x, 0)
                # (Line 32) trg.Shape_Line(playerID,1,"Protoss Observer",90+30*v.P_LoopMain[playerID],2,128+x,0);
                trg.Shape_Line(playerID, 1, "Protoss Observer", 90 + 30 * v.P_LoopMain[playerID], 2, 128 + x, 0)
                # (Line 33) trg.Shape_Line(playerID,1,"Protoss Observer",135+30*v.P_LoopMain[playerID],2,128+x,0);
                trg.Shape_Line(playerID, 1, "Protoss Observer", 135 + 30 * v.P_LoopMain[playerID], 2, 128 + x, 0)
                # (Line 34) KillUnitAt(All,"Protoss Observer","Anywhere",playerID);
                # (Line 35) trg.MoveLoc(v.P_UnitID[playerID],playerID,0,0);
                DoActions(KillUnitAt(All, "Protoss Observer", "Anywhere", playerID))
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 36) Order("40 + 1n Mutalisk",playerID,"Anywhere",Attack,v.P_LocationID[playerID]);
                # (Line 37) x += 48;
                DoActions(Order("40 + 1n Mutalisk", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                x.__iadd__(48)
                # (Line 38) trg.Main_Wait(80);
                trg.Main_Wait(80)
                # (Line 39) }
                # (Line 40) else if(v.P_LoopMain[playerID] <= 25)
            if EUDElseIf()(v.P_LoopMain[playerID] <= 25):
                # (Line 41) {
                # (Line 42) KillUnitAt(8,"40 + 1n Mutalisk","Anywhere",playerID);
                # (Line 43) trg.Main_Wait(60);
                DoActions(KillUnitAt(8, "40 + 1n Mutalisk", "Anywhere", playerID))
                trg.Main_Wait(60)
                # (Line 44) }
                # (Line 45) else if(v.P_LoopMain[playerID] == 26)
            if EUDElseIf()(v.P_LoopMain[playerID] == 26):
                # (Line 46) {
                # (Line 47) trg.Main_Wait(400);
                trg.Main_Wait(400)
                # (Line 48) }
                # (Line 49) else if(v.P_LoopMain[playerID] == 27)
            if EUDElseIf()(v.P_LoopMain[playerID] == 27):
                # (Line 50) {
                # (Line 51) trg.Shape_Square(playerID,1,"40 + 1n Guardian",48,0);
                trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 48, 0)
                # (Line 52) trg.Shape_Square(playerID,1,"40 + 1n Guardian",96,0);
                trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 96, 0)
                # (Line 53) trg.Shape_Square(playerID,1,"40 + 1n Guardian",144,0);
                trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 144, 0)
                # (Line 54) trg.Shape_Square(playerID,1,"40 + 1n Guardian",48,48);
                trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 48, 48)
                # (Line 55) trg.Shape_Square(playerID,1,"40 + 1n Guardian",96,96);
                trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 96, 96)
                # (Line 56) trg.Shape_Square(playerID,1,"40 + 1n Guardian",144,144);
                trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 144, 144)
                # (Line 58) epic.Shape_Square(playerID,1,"60 + 1n Hydralisk",48,0,0);
                epic.Shape_Square(playerID, 1, "60 + 1n Hydralisk", 48, 0, 0)
                # (Line 59) epic.Shape_Square(playerID,1,"60 + 1n Hydralisk",96,0,0);
                epic.Shape_Square(playerID, 1, "60 + 1n Hydralisk", 96, 0, 0)
                # (Line 60) epic.Shape_Square(playerID,1,"60 + 1n Hydralisk",48,48,0);
                epic.Shape_Square(playerID, 1, "60 + 1n Hydralisk", 48, 48, 0)
                # (Line 61) epic.Shape_Square(playerID,1,"60 + 1n Hydralisk",96,96,0);
                epic.Shape_Square(playerID, 1, "60 + 1n Hydralisk", 96, 96, 0)
                # (Line 62) epic.Shape_Square(playerID,1,"60 + 1n Hydralisk",144,144,0);
                epic.Shape_Square(playerID, 1, "60 + 1n Hydralisk", 144, 144, 0)
                # (Line 64) trg.MoveLoc(v.P_UnitID[playerID],playerID,0,0);
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 65) Order("40 + 1n Guardian",playerID,"Anywhere",Attack,v.P_LocationID[playerID]);
                # (Line 66) trg.Main_Wait(200);
                DoActions(Order("40 + 1n Guardian", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(200)
                # (Line 67) }
                # (Line 68) else if(v.P_LoopMain[playerID] == 28)
            if EUDElseIf()(v.P_LoopMain[playerID] == 28):
                # (Line 69) {
                # (Line 70) for(var i =0; i < 20; i++)
                i = EUDVariable()
                i << (0)
                if EUDWhile()(i >= 20, neg=True):
                    def _t11():
                        i.__iadd__(1)
                    # (Line 71) {
                    # (Line 72) MoveLocation(v.P_LocationID[playerID],"60 + 1n Hydralisk",playerID,"Anywhere");
                    # (Line 73) RemoveUnitAt(1,"60 + 1n Hydralisk","Anywhere",playerID);
                    DoActions(MoveLocation(v.P_LocationID[playerID], "60 + 1n Hydralisk", playerID, "Anywhere"))
                    # (Line 74) trg.SkillUnit(playerID,1,"40 + 1n Drone");
                    DoActions(RemoveUnitAt(1, "60 + 1n Hydralisk", "Anywhere", playerID))
                    trg.SkillUnit(playerID, 1, "40 + 1n Drone")
                    # (Line 75) trg.SkillUnit(playerID,1,"60 + 1n Danimoth");
                    trg.SkillUnit(playerID, 1, "60 + 1n Danimoth")
                    # (Line 76) KillUnitAt(All,"60 + 1n Danimoth","Anywhere",playerID);
                    # (Line 77) }
                    DoActions(KillUnitAt(All, "60 + 1n Danimoth", "Anywhere", playerID))
                    # (Line 78) trg.Main_Wait(60);
                    EUDSetContinuePoint()
                    _t11()
                EUDEndWhile()
                trg.Main_Wait(60)
                # (Line 79) }
                # (Line 80) else if(v.P_LoopMain[playerID] == 29)
            if EUDElseIf()(v.P_LoopMain[playerID] == 29):
                # (Line 81) {
                # (Line 82) trg.Main_Wait(2200);
                trg.Main_Wait(2200)
                # (Line 83) }
                # (Line 84) else if(v.P_LoopMain[playerID] <= 49)
            if EUDElseIf()(v.P_LoopMain[playerID] <= 49):
                # (Line 85) {
                # (Line 86) MoveLocation(v.P_LocationID[playerID],"40 + 1n Drone",playerID,"Anywhere");
                # (Line 87) RemoveUnitAt(1,"40 + 1n Drone","Anywhere",playerID);
                DoActions(MoveLocation(v.P_LocationID[playerID], "40 + 1n Drone", playerID, "Anywhere"))
                # (Line 88) trg.SkillUnit(playerID,1,"40 + 1n Guardian");
                DoActions(RemoveUnitAt(1, "40 + 1n Drone", "Anywhere", playerID))
                trg.SkillUnit(playerID, 1, "40 + 1n Guardian")
                # (Line 89) trg.SkillUnit(playerID,1,"60 + 1n Archon");
                trg.SkillUnit(playerID, 1, "60 + 1n Archon")
                # (Line 90) KillUnitAt(All,"60 + 1n Archon","Anywhere",playerID);
                # (Line 91) trg.MoveLoc(v.P_UnitID[playerID],playerID,0,0);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 92) Order("40 + 1n Guardian",playerID,"Anywhere",Attack,v.P_LocationID[playerID]);
                # (Line 93) trg.Main_Wait(90);
                DoActions(Order("40 + 1n Guardian", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                trg.Main_Wait(90)
                # (Line 94) }
                # (Line 95) else if (Bring(playerID, AtLeast, 1,"Protoss Corsair", "[Skill]UseSkill")
            _t14 = EUDElseIf()
            # (Line 96) && v.P_LoopMain[playerID] == 50
            # (Line 97) && v.P_UltimateGauge[playerID] >= v.P_Ultimate2[playerID]
            # (Line 98) && v.P_Step[playerID] == 330)
            if _t14(EUDSCAnd()(Bring(playerID, AtLeast, 1, "Protoss Corsair", "[Skill]UseSkill"))(v.P_LoopMain[playerID] == 50)(v.P_UltimateGauge[playerID] >= v.P_Ultimate2[playerID])(v.P_Step[playerID] == 330)()):
                # (Line 99) {
                # (Line 100) if (Switch("UiltimateSwitch", Cleared))
                if EUDIf()(Switch("UiltimateSwitch", Cleared)):
                    # (Line 101) {
                    # (Line 102) s.CharacterVoice(18);
                    s.CharacterVoice(18)
                    # (Line 103) SetSwitch("UiltimateSwitch", Set);
                    # (Line 104) CreateUnit(1, " Item. Flag", "[Uiltimate]Flag", CurrentPlayer);
                    DoActions(SetSwitch("UiltimateSwitch", Set))
                    # (Line 105) SetSwitch("Recall - Chtholly",Set);
                    DoActions(CreateUnit(1, " Item. Flag", "[Uiltimate]Flag", CurrentPlayer))
                    # (Line 106) v.P_Step[playerID] = 340;
                    DoActions(SetSwitch("Recall - Chtholly", Set))
                    _ARRW(v.P_Step, playerID) << (340)
                    # (Line 107) v.P_SkillDelay[playerID] = 0;
                    _ARRW(v.P_SkillDelay, playerID) << (0)
                    # (Line 108) v.P_UltimateGauge[playerID] -= v.P_Ultimate2[playerID];
                    _ARRW(v.P_UltimateGauge, playerID).__isub__(v.P_Ultimate2[playerID])
                    # (Line 109) v.P_CountMain[playerID] = 0;
                    _ARRW(v.P_CountMain, playerID) << (0)
                    # (Line 110) v.P_LoopMain[playerID] = 0;
                    _ARRW(v.P_LoopMain, playerID) << (0)
                    # (Line 111) x = 0;
                    x << (0)
                    # (Line 112) KillUnitAt(1, "Protoss Corsair", "[Skill]UseSkill", playerID);
                    # (Line 113) trg.Main_Wait(4000);
                    DoActions(KillUnitAt(1, "Protoss Corsair", "[Skill]UseSkill", playerID))
                    trg.Main_Wait(4000)
                    # (Line 114) }
                    # (Line 115) else
                    # (Line 116) {
                if EUDElse()():
                    # (Line 117) SetResources(CurrentPlayer, Add, 60, Gas);
                    # (Line 118) KillUnitAt(1, "Protoss Corsair", "[Skill]UseSkill", playerID);
                    DoActions(SetResources(CurrentPlayer, Add, 60, Gas))
                    # (Line 119) SetDeaths(CurrentPlayer, SetTo, 999, " `SYSTEMTEXT");
                    DoActions(KillUnitAt(1, "Protoss Corsair", "[Skill]UseSkill", playerID))
                    # (Line 120) trg.SkillEnd();
                    DoActions(SetDeaths(CurrentPlayer, SetTo, 999, " `SYSTEMTEXT"))
                    trg.SkillEnd()
                    # (Line 121) }
                    # (Line 122) }
                EUDEndIf()
                # (Line 123) else if(v.P_LoopMain[playerID] == 50)
            if EUDElseIf()(v.P_LoopMain[playerID] == 50):
                # (Line 124) {
                # (Line 125) x = 0;
                x << (0)
                # (Line 126) trg.SkillEnd();
                trg.SkillEnd()
                # (Line 127) }
                # (Line 129) v.P_LoopMain[playerID] += 1;
            EUDEndIf()
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 130) }
            # (Line 131) }
        EUDEndIf()
        # (Line 132) }
    EUDEndIf()
