## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import PluginVariables as msqcvar;
import PluginVariables as msqcvar
# (Line 2) import variable as v;
import variable as v
# (Line 3) import func.trig as trg;
from func import trig as trg
# (Line 4) import func.sound as s;
from func import sound as s
# (Line 6) var x = 0;
x = EUDCreateVariables(1)
_IGVA([x], lambda: [0])
# (Line 7) function main(playerID)
# (Line 8) {
@EUDFunc
def f_main(playerID):
    # (Line 9) trg.Debuff_Stop();
    trg.Debuff_Stop()
    # (Line 10) trg.Debuff_BanReturn();
    trg.Debuff_BanReturn()
    # (Line 12) if (v.P_WaitMain[playerID] == 0)
    if EUDIf()(v.P_WaitMain[playerID] == 0):
        # (Line 13) {
        # (Line 14) MoveUnit(All,"50 + 1n Tank", playerID, "Anywhere", "[Skill]HoldPosition");
        # (Line 15) if (v.P_CountMain[playerID] == 0)
        DoActions(MoveUnit(All, "50 + 1n Tank", playerID, "Anywhere", "[Skill]HoldPosition"))
        if EUDIf()(v.P_CountMain[playerID] == 0):
            # (Line 16) {
            # (Line 17) MoveUnit(All,"50 + 1n Tank", playerID, "Anywhere", "[Skill]HoldPosition");
            # (Line 18) RemoveUnitAt(All,"60 + 1n Danimoth","Anywhere",playerID);
            DoActions(MoveUnit(All, "50 + 1n Tank", playerID, "Anywhere", "[Skill]HoldPosition"))
            # (Line 19) RemoveUnitAt(All,"40 + 1n Wraith","Anywhere",playerID);
            DoActions(RemoveUnitAt(All, "60 + 1n Danimoth", "Anywhere", playerID))
            # (Line 20) KillUnitAt(All,"50 + 1n Battlecruiser","Anywhere",playerID);
            DoActions(RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID))
            # (Line 21) if (v.P_LoopMain[playerID] <= 6)
            DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
            if EUDIf()(v.P_LoopMain[playerID] <= 6):
                # (Line 22) {
                # (Line 23) trg.Shape_Line(playerID,1,"60 + 1n Siege",0+30*x,2,384,0);
                trg.Shape_Line(playerID, 1, "60 + 1n Siege", 0 + 30 * x, 2, 384, 0)
                # (Line 24) trg.Shape_Line(playerID,1,"Protoss Dark Archon",0+30*x,2,384,0);
                trg.Shape_Line(playerID, 1, "Protoss Dark Archon", 0 + 30 * x, 2, 384, 0)
                # (Line 25) KillUnitAt(All,"Protoss Dark Archon","Anywhere",playerID);
                # (Line 26) x += 1;
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                x.__iadd__(1)
                # (Line 27) trg.Main_Wait(120);
                trg.Main_Wait(120)
                # (Line 28) }
                # (Line 29) else if (v.P_LoopMain[playerID] == 7)
            if EUDElseIf()(v.P_LoopMain[playerID] == 7):
                # (Line 30) {
                # (Line 31) x = 0;
                x << (0)
                # (Line 32) trg.Main_Wait(0);
                trg.Main_Wait(0)
                # (Line 33) }
                # (Line 34) else if (v.P_LoopMain[playerID] <= 27)
            if EUDElseIf()(v.P_LoopMain[playerID] <= 27):
                # (Line 35) {
                # (Line 36) trg.Shape_Line(playerID,1,"Protoss Dark Archon",0+15*x,2,600 - 30 * x,0);
                trg.Shape_Line(playerID, 1, "Protoss Dark Archon", 0 + 15 * x, 2, 600 - 30 * x, 0)
                # (Line 37) trg.Shape_Line(playerID,1,"Protoss Dark Archon",90+15*x,2,600 - 30 * x,0);
                trg.Shape_Line(playerID, 1, "Protoss Dark Archon", 90 + 15 * x, 2, 600 - 30 * x, 0)
                # (Line 38) trg.Shape_Line(playerID,1,"40 + 1n Firebat",0+15*x,2,600 - 30 * x,0);
                trg.Shape_Line(playerID, 1, "40 + 1n Firebat", 0 + 15 * x, 2, 600 - 30 * x, 0)
                # (Line 39) trg.Shape_Line(playerID,1,"40 + 1n Firebat",90+15*x,2,600 - 30 * x,0);
                trg.Shape_Line(playerID, 1, "40 + 1n Firebat", 90 + 15 * x, 2, 600 - 30 * x, 0)
                # (Line 40) trg.Shape_Line(playerID,1,"60 + 1n Danimoth",0+15*x,2,600 - 30 * x,0);
                trg.Shape_Line(playerID, 1, "60 + 1n Danimoth", 0 + 15 * x, 2, 600 - 30 * x, 0)
                # (Line 41) trg.Shape_Line(playerID,1,"60 + 1n Danimoth",90+15*x,2,600 - 30 * x,0);
                trg.Shape_Line(playerID, 1, "60 + 1n Danimoth", 90 + 15 * x, 2, 600 - 30 * x, 0)
                # (Line 42) KillUnitAt(All,"Protoss Dark Archon","Anywhere",playerID);
                # (Line 43) KillUnitAt(All,"60 + 1n Danimoth","Anywhere",playerID);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                # (Line 44) Order("60 + 1n Danimoth",playerID,"Anywhere",Move,v.P_LocationID[playerID]);
                DoActions(KillUnitAt(All, "60 + 1n Danimoth", "Anywhere", playerID))
                # (Line 45) x += 1;
                DoActions(Order("60 + 1n Danimoth", playerID, "Anywhere", Move, v.P_LocationID[playerID]))
                x.__iadd__(1)
                # (Line 46) trg.Main_Wait(80);
                trg.Main_Wait(80)
                # (Line 47) }
                # (Line 49) else if(v.P_LoopMain[playerID] == 28)
            if EUDElseIf()(v.P_LoopMain[playerID] == 28):
                # (Line 50) {
                # (Line 51) KillUnitAt(All,"40 + 1n Firebat","Anywhere",playerID);
                # (Line 52) trg.Shape_Dot(playerID,1,"50 + 1n Battlecruiser",0,0);
                DoActions(KillUnitAt(All, "40 + 1n Firebat", "Anywhere", playerID))
                trg.Shape_Dot(playerID, 1, "50 + 1n Battlecruiser", 0, 0)
                # (Line 53) x = 0;
                x << (0)
                # (Line 54) KillUnitAt(All,"50 + 1n Battlecruiser","Anywhere",playerID);
                # (Line 55) trg.Main_Wait(80);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                trg.Main_Wait(80)
                # (Line 56) }
                # (Line 57) else if(v.P_LoopMain[playerID] <= 68)
            if EUDElseIf()(v.P_LoopMain[playerID] <= 68):
                # (Line 58) {
                # (Line 59) trg.Shape_Line(playerID,1,"Protoss Dark Archon",0+15*x,2,128 + 8 * x,0);
                trg.Shape_Line(playerID, 1, "Protoss Dark Archon", 0 + 15 * x, 2, 128 + 8 * x, 0)
                # (Line 60) trg.Shape_Line(playerID,1,"Protoss Dark Archon",90+15*x,2,128 + 8 * x,0);
                trg.Shape_Line(playerID, 1, "Protoss Dark Archon", 90 + 15 * x, 2, 128 + 8 * x, 0)
                # (Line 61) trg.Shape_Line(playerID,1,"60 + 1n Archon",135+15*x,2,128 + 8 * x,0);
                trg.Shape_Line(playerID, 1, "60 + 1n Archon", 135 + 15 * x, 2, 128 + 8 * x, 0)
                # (Line 62) trg.Shape_Line(playerID,1,"60 + 1n Archon",45+15*x,2,128 + 8 * x,0);
                trg.Shape_Line(playerID, 1, "60 + 1n Archon", 45 + 15 * x, 2, 128 + 8 * x, 0)
                # (Line 63) trg.Shape_Line(playerID,1,"60 + 1n Danimoth",135+15*x,2,128 + 8 * x,0);
                trg.Shape_Line(playerID, 1, "60 + 1n Danimoth", 135 + 15 * x, 2, 128 + 8 * x, 0)
                # (Line 64) trg.Shape_Line(playerID,1,"60 + 1n Danimoth",45+15*x,2,128 + 8 * x,0);
                trg.Shape_Line(playerID, 1, "60 + 1n Danimoth", 45 + 15 * x, 2, 128 + 8 * x, 0)
                # (Line 65) trg.Shape_Line(playerID,1,"40 + 1n Wraith",0+15*x,2,128 + 8* x,0);
                trg.Shape_Line(playerID, 1, "40 + 1n Wraith", 0 + 15 * x, 2, 128 + 8 * x, 0)
                # (Line 66) trg.Shape_Line(playerID,1,"40 + 1n Wraith",90+15*x,2,128 + 8 * x,0);
                trg.Shape_Line(playerID, 1, "40 + 1n Wraith", 90 + 15 * x, 2, 128 + 8 * x, 0)
                # (Line 67) trg.MoveLoc(v.P_UnitID[playerID],playerID,0,0);
                trg.MoveLoc(v.P_UnitID[playerID], playerID, 0, 0)
                # (Line 68) Order("40 + 1n Wraith",playerID,"Anywhere",Attack,v.P_LocationID[playerID]);
                # (Line 69) Order("60 + 1n Danimoth",playerID,"Anywhere",Move,v.P_LocationID[playerID]);
                DoActions(Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
                # (Line 70) KillUnitAt(All,"50 + 1n Battlecruiser","Anywhere",playerID);
                DoActions(Order("60 + 1n Danimoth", playerID, "Anywhere", Move, v.P_LocationID[playerID]))
                # (Line 71) KillUnitAt(All,"Protoss Dark Archon","Anywhere",playerID);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                # (Line 72) KillUnitAt(All,"60 + 1n Archon","Anywhere",playerID);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                # (Line 73) x += 1;
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
                x.__iadd__(1)
                # (Line 74) trg.Main_Wait(220 - 5 * x);
                trg.Main_Wait(220 - 5 * x)
                # (Line 75) }
                # (Line 76) else if(v.P_LoopMain[playerID] == 69)
            if EUDElseIf()(v.P_LoopMain[playerID] == 69):
                # (Line 77) {
                # (Line 78) x = 0;
                x << (0)
                # (Line 79) KillUnitAt(All,"50 + 1n Tank","Anywhere",playerID);
                # (Line 80) KillUnitAt(All,"60 + 1n Siege","Anywhere",playerID);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
                # (Line 81) trg.SkillEnd();
                DoActions(KillUnitAt(All, "60 + 1n Siege", "Anywhere", playerID))
                trg.SkillEnd()
                # (Line 82) }
                # (Line 84) v.P_LoopMain[playerID] += 1;
            EUDEndIf()
            _ARRW(v.P_LoopMain, playerID).__iadd__(1)
            # (Line 85) }
            # (Line 86) }
        EUDEndIf()
        # (Line 87) }
    EUDEndIf()
