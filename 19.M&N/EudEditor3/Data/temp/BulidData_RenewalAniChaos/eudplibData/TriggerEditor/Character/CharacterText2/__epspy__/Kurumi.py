## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

<<<<<<< HEAD:19.M&N/EudEditor3/Data/temp/BulidData_RenewalAniChaos/eudplibData/TriggerEditor/Character/CharacterText2/__epspy__/Kurumi.py
# (Line 1) import customText as tct;
import customText as tct
# (Line 2) import Variable as v;
import Variable as v
# (Line 4) var txtPtr, btnPtr, btnPos, oldCP;
txtPtr, btnPtr, btnPos, oldCP = EUDCreateVariables(4)
# (Line 6) function NormalText(cp)
# (Line 7) {
@EUDFunc
def NormalText(cp):
    # (Line 9) }
    # (Line 11) function UiltimateText(cp)
    pass

# (Line 12) {
@EUDFunc
def UiltimateText(cp):
    # (Line 14) }
    # (Line 16) function UniqueText(cp)
    pass

# (Line 17) {
@EUDFunc
def UniqueText(cp):
    # (Line 19) }
    pass
=======
# (Line 1) import Player.shop as sp;
from Player import shop as sp
# (Line 2) import Player.sound as sd;
from Player import sound as sd
# (Line 3) import Player.title as te;
from Player import title as te
# (Line 4) import Player.titleInfo as teinfo;
from Player import titleInfo as teinfo
# (Line 5) import Player.lesson as ln;
from Player import lesson as ln
# (Line 6) import Player.event as et;
from Player import event as et
# (Line 7) import Player.cloth as cl;
from Player import cloth as cl
# (Line 9) function main(cp)
# (Line 10) {
@EUDFunc
def f_main(cp):
    # (Line 11) sp.Marge(cp);
    sp.Marge(cp)
    # (Line 12) ln.Marge(cp);
    ln.Marge(cp)
    # (Line 14) sd.PlaySound(cp);
    sd.PlaySound(cp)
    # (Line 15) te.Title_Effect(cp);
    te.Title_Effect(cp)
    # (Line 16) teinfo.Title_Info(cp);
    teinfo.Title_Info(cp)
    # (Line 17) et.event_score(cp);
    et.f_event_score(cp)
    # (Line 18) cl.Cloth_Ticket(cp);
    cl.Cloth_Ticket(cp)
    # (Line 19) cl.Producer_Buff(cp);
    cl.Producer_Buff(cp)
    # (Line 20) }
>>>>>>> origin/master:EudEditor3/Data/temp/BulidData_MILLIONSTARS/eudplibData/TriggerEditor/Player/__epspy__/playermain.py
