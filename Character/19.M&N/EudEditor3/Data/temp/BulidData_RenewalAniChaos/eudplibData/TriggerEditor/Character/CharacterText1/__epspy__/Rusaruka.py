## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import customText as tct;
import customText as tct
# (Line 2) import Variable as v;
import Variable as v
# (Line 4) var txtPtr, btnPtr, btnPos, oldCP;
txtPtr, btnPtr, btnPos, oldCP = EUDCreateVariables(4)
# (Line 6) function NormalText(cp)
# (Line 7) {
@EUDFunc
def NormalText(cp):
    # (Line 8) switch (v.Sound_Text1[cp])
    EUDSwitch(v.Sound_Text1[cp])
    # (Line 9) {
    # (Line 10) case 1000:
    _t1 = EUDSwitchCase()
    # (Line 11) PlayWAV("Rusaruka_1.ogg");
    if _t1(1000):
        # (Line 12) v.Sound_Text1[cp] = 0;
        DoActions(PlayWAV("Rusaruka_1.ogg"))
        _ARRW(v.Sound_Text1, cp) << (0)
        # (Line 13) tct.print("\x13\x1BRusaruka Schwagerin\n\x13\x04[ \x06너무 얕보면... 먹어버릴거야? \x04]");
        tct.f_print("\x13\x1BRusaruka Schwagerin\n\x13\x04[ \x06너무 얕보면... 먹어버릴거야? \x04]")
        # (Line 14) break;
        EUDBreak()
        # (Line 15) case 1100:
    _t2 = EUDSwitchCase()
    # (Line 16) PlayWAV("Rusaruka_2.ogg");
    if _t2(1100):
        # (Line 17) v.Sound_Text1[cp] = 0;
        DoActions(PlayWAV("Rusaruka_2.ogg"))
        _ARRW(v.Sound_Text1, cp) << (0)
        # (Line 18) tct.print("\x13\x1BRusaruka Schwagerin\n\x13\x04[ \x06좋아, 내가 시험해줄게. 술래잡기를 계속하도록 할까? \x04]");
        tct.f_print("\x13\x1BRusaruka Schwagerin\n\x13\x04[ \x06좋아, 내가 시험해줄게. 술래잡기를 계속하도록 할까? \x04]")
        # (Line 19) break;
        EUDBreak()
        # (Line 20) case 1200:
    _t3 = EUDSwitchCase()
    # (Line 21) PlayWAV("Rusaruka_3.ogg");
    if _t3(1200):
        # (Line 22) v.Sound_Text1[cp] = 0;
        DoActions(PlayWAV("Rusaruka_3.ogg"))
        _ARRW(v.Sound_Text1, cp) << (0)
        # (Line 23) tct.print("\n\x13\x1BRusaruka Schwagerin\n\x13\x04[ \x06조금 아프겠지만, 참으렴...! \x04]\n\n");
        tct.f_print("\n\x13\x1BRusaruka Schwagerin\n\x13\x04[ \x06조금 아프겠지만, 참으렴...! \x04]\n\n")
        # (Line 24) break;
        EUDBreak()
        # (Line 25) case 1500:
    _t4 = EUDSwitchCase()
    # (Line 26) PlayWAV("Rusaruka_4.ogg");
    if _t4(1500):
        # (Line 27) v.Sound_Text1[cp] = 0;
        DoActions(PlayWAV("Rusaruka_4.ogg"))
        _ARRW(v.Sound_Text1, cp) << (0)
        # (Line 28) tct.print("\x13\x1BRusaruka Schwagerin\r\n\x13\x04[ 당신 여기서 \x06살해\x04당하고 싶어...? \x04]");
        tct.f_print("\x13\x1BRusaruka Schwagerin\r\n\x13\x04[ 당신 여기서 \x06살해\x04당하고 싶어...? \x04]")
        # (Line 29) break;
        EUDBreak()
        # (Line 30) }
    # (Line 31) }
    EUDEndSwitch()
    # (Line 33) function UiltimateText(cp)

# (Line 34) {
@EUDFunc
def UiltimateText(cp):
    # (Line 35) switch (v.Sound_Text_Uilti[cp])
    EUDSwitch(v.Sound_Text_Uilti[cp])
    # (Line 36) {
    # (Line 37) case 1300:
    _t1 = EUDSwitchCase()
    # (Line 38) PlayWAV("Rusalka_Ultimate.ogg");
    if _t1(1300):
        # (Line 39) v.Sound_Text_Uilti[cp] = 0;
        DoActions(PlayWAV("Rusalka_Ultimate.ogg"))
        _ARRW(v.Sound_Text_Uilti, cp) << (0)
        # (Line 40) tct.print("\n\n\n\x13\x1BRusaruka Schwagerin\n\n\x13\x06무서웠단 말이야! 놔두고 가버릴지!\n\x13\x06싫단 말이야! 떠밀려버리면!\n\x13\x06나... 걷는 거 느리단 말이야─!\n\n\n");
        tct.f_print("\n\n\n\x13\x1BRusaruka Schwagerin\n\n\x13\x06무서웠단 말이야! 놔두고 가버릴지!\n\x13\x06싫단 말이야! 떠밀려버리면!\n\x13\x06나... 걷는 거 느리단 말이야─!\n\n\n")
        # (Line 41) break;
        EUDBreak()
        # (Line 42) case 1400:
    _t2 = EUDSwitchCase()
    # (Line 43) v.Sound_Text_Uilti[cp] = 0;
    if _t2(1400):
        _ARRW(v.Sound_Text_Uilti, cp) << (0)
        # (Line 44) tct.print("\n\n\n\x13\x1BRusaruka Schwagerin\n\n\x13\x06따라 잡을 수 없다면,\n\x13\x06아예 멈춰 세우겠다고!\n\x13\x06그렇게 생각했어! 불만있어!?\n\n\n");
        tct.f_print("\n\n\n\x13\x1BRusaruka Schwagerin\n\n\x13\x06따라 잡을 수 없다면,\n\x13\x06아예 멈춰 세우겠다고!\n\x13\x06그렇게 생각했어! 불만있어!?\n\n\n")
        # (Line 45) break;
        EUDBreak()
        # (Line 46) }
    # (Line 47) }
    EUDEndSwitch()
    # (Line 49) function UniqueText(cp)

# (Line 50) {
@EUDFunc
def UniqueText(cp):
    # (Line 51) switch (v.Sound_Text_Uniq[cp])
    EUDSwitch(v.Sound_Text_Uniq[cp])
    # (Line 52) {
    # (Line 53) case 1400:
    _t1 = EUDSwitchCase()
    # (Line 54) PlayWAV("Rusalka_Unique.ogg");
    if _t1(1400):
        # (Line 55) v.Sound_Text_Uniq[cp] = 0;
        DoActions(PlayWAV("Rusalka_Unique.ogg"))
        _ARRW(v.Sound_Text_Uniq, cp) << (0)
        # (Line 56) txtPtr = dwread_epd(EPD(0x640B58));
        txtPtr << (f_dwread_epd(EPD(0x640B58)))
        # (Line 57) tct.print("\n\n\x13\x1BRusaruka Schwagerin\n\n\x13\x05In der Nacht, wo alles schlaft\n\x13\x04모든것이 잠드는 밤에\n\n\x13\x05Wie schon, den Meeresboden zu verlassen.\n\x13\x04물밑을 벗어나는것이야 말로 아름다움이니.\n\n");
        tct.f_print("\n\n\x13\x1BRusaruka Schwagerin\n\n\x13\x05In der Nacht, wo alles schlaft\n\x13\x04모든것이 잠드는 밤에\n\n\x13\x05Wie schon, den Meeresboden zu verlassen.\n\x13\x04물밑을 벗어나는것이야 말로 아름다움이니.\n\n")
        # (Line 58) SetMemory(0x640B58, SetTo, txtPtr);
        # (Line 59) break;
        DoActions(SetMemory(0x640B58, SetTo, txtPtr))
        EUDBreak()
        # (Line 60) case 1401:
    _t2 = EUDSwitchCase()
    # (Line 61) v.Sound_Text_Uniq[cp] = 0;
    if _t2(1401):
        _ARRW(v.Sound_Text_Uniq, cp) << (0)
        # (Line 62) txtPtr = dwread_epd(EPD(0x640B58));
        txtPtr << (f_dwread_epd(EPD(0x640B58)))
        # (Line 63) tct.print("\n\n\x13\x1BRusaruka Schwagerin\n\n\x13\x05Ich hebe den Kopf uber das Wasser\n\x13\x04수면에 고개 들어\n\n\x13\x05Welch Freude, das Spiel der Wasserwellen\n\x13\x04물장구치며 놀자, 즐기어라.\n\n");
        tct.f_print("\n\n\x13\x1BRusaruka Schwagerin\n\n\x13\x05Ich hebe den Kopf uber das Wasser\n\x13\x04수면에 고개 들어\n\n\x13\x05Welch Freude, das Spiel der Wasserwellen\n\x13\x04물장구치며 놀자, 즐기어라.\n\n")
        # (Line 64) SetMemory(0x640B58, SetTo, txtPtr);
        # (Line 65) break;
        DoActions(SetMemory(0x640B58, SetTo, txtPtr))
        EUDBreak()
        # (Line 66) case 1402:
    _t3 = EUDSwitchCase()
    # (Line 67) v.Sound_Text_Uniq[cp] = 0;
    if _t3(1402):
        _ARRW(v.Sound_Text_Uniq, cp) << (0)
        # (Line 68) txtPtr = dwread_epd(EPD(0x640B58));
        txtPtr << (f_dwread_epd(EPD(0x640B58)))
        # (Line 69) tct.print("\n\n\x13\x1BRusaruka Schwagerin\n\n\x13\x05Durch die nun zerbrochene Stille\n\x13\x04맑은 대기를 울리고\n\n\x13\x05Rufen wir unsere Namen\n\x13\x04서로 크게 불러\n\n");
        tct.f_print("\n\n\x13\x1BRusaruka Schwagerin\n\n\x13\x05Durch die nun zerbrochene Stille\n\x13\x04맑은 대기를 울리고\n\n\x13\x05Rufen wir unsere Namen\n\x13\x04서로 크게 불러\n\n")
        # (Line 70) SetMemory(0x640B58, SetTo, txtPtr);
        # (Line 71) break;
        DoActions(SetMemory(0x640B58, SetTo, txtPtr))
        EUDBreak()
        # (Line 72) case 1403:
    _t4 = EUDSwitchCase()
    # (Line 73) v.Sound_Text_Uniq[cp] = 0;
    if _t4(1403):
        _ARRW(v.Sound_Text_Uniq, cp) << (0)
        # (Line 74) txtPtr = dwread_epd(EPD(0x640B58));
        txtPtr << (f_dwread_epd(EPD(0x640B58)))
        # (Line 75) tct.print("\n\n\x13\x1BRusaruka Schwagerin\r\n\n\x13\x05Pechschwarzes Haar wirbelt im Wind\n\x13\x04새까만 젖은 머리를 털어……\n\n\x13\x05Welch Freude, sie trocknen zu sehen\n\x13\x04말리며 놀자, 즐겨라\n\n");
        tct.f_print("\n\n\x13\x1BRusaruka Schwagerin\r\n\n\x13\x05Pechschwarzes Haar wirbelt im Wind\n\x13\x04새까만 젖은 머리를 털어……\n\n\x13\x05Welch Freude, sie trocknen zu sehen\n\x13\x04말리며 놀자, 즐겨라\n\n")
        # (Line 76) SetMemory(0x640B58, SetTo, txtPtr);
        # (Line 77) break;
        DoActions(SetMemory(0x640B58, SetTo, txtPtr))
        EUDBreak()
        # (Line 78) case 1404:
    _t5 = EUDSwitchCase()
    # (Line 79) v.Sound_Text_Uniq[cp] = 0;
    if _t5(1404):
        _ARRW(v.Sound_Text_Uniq, cp) << (0)
        # (Line 80) txtPtr = dwread_epd(EPD(0x640B58));
        txtPtr << (f_dwread_epd(EPD(0x640B58)))
        # (Line 81) tct.print("\n\n\x13\x1BRusaruka Schwagerin\r\n\n\x13\x05Briah――\n\x13\x04창조\n\n\x13\x05Csejte Ungarn Nachtzehrer\n\x13\x04체터성의 식인그림자\n\n");
        tct.f_print("\n\n\x13\x1BRusaruka Schwagerin\r\n\n\x13\x05Briah――\n\x13\x04창조\n\n\x13\x05Csejte Ungarn Nachtzehrer\n\x13\x04체터성의 식인그림자\n\n")
        # (Line 82) SetMemory(0x640B58, SetTo, txtPtr);
        # (Line 83) break;
        DoActions(SetMemory(0x640B58, SetTo, txtPtr))
        EUDBreak()
        # (Line 84) }
    # (Line 85) }
    EUDEndSwitch()
