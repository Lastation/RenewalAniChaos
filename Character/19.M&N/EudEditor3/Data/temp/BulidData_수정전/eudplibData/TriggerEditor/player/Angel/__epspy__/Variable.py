## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) const Unit_ID				= [54, 5, 100, 16, 76, 55, 44, 53, 86, 56, 48, 52, 37];			// 유닛 ID
Unit_ID = _CGFW(lambda: [_ARR(FlattenList([54, 5, 100, 16, 76, 55, 44, 53, 86, 56, 48, 52, 37]))], 1)[0]
# (Line 4) const Unit_Rank				= [5, 5, 4, 4, 3, 2, 2, 2, 1, 1, 0, 0, 0];							// 레어도
Unit_Rank = _CGFW(lambda: [_ARR(FlattenList([5, 5, 4, 4, 3, 2, 2, 2, 1, 1, 0, 0, 0]))], 1)[0]
# (Line 5) const Unit_AtkID			= [36, 11, 116, 3, 71, 49, 46, 39, 78, 47, 41, 50, 35];			// 무기 ID
Unit_AtkID = _CGFW(lambda: [_ARR(FlattenList([36, 11, 116, 3, 71, 49, 46, 39, 78, 47, 41, 50, 35]))], 1)[0]
# (Line 6) const Unit_Atk				= [381, 330, 146, 143, 84, 85, 84, 86, 82, 59, 58, 55, 51];		// 공격력
Unit_Atk = _CGFW(lambda: [_ARR(FlattenList([381, 330, 146, 143, 84, 85, 84, 86, 82, 59, 58, 55, 51]))], 1)[0]
# (Line 7) const Unit_Atkbouns			= [48, 101, 36, 58, 22, 13, 10, 9, 15, 8, 6, 5, 5];				// 공격력 증가량
Unit_Atkbouns = _CGFW(lambda: [_ARR(FlattenList([48, 101, 36, 58, 22, 13, 10, 9, 15, 8, 6, 5, 5]))], 1)[0]
# (Line 8) const Unit_Atkspeed			= [12, 30, 28, 24, 16, 20, 18, 14, 36, 16, 14, 12, 17];			// 공격 속도
Unit_Atkspeed = _CGFW(lambda: [_ARR(FlattenList([12, 30, 28, 24, 16, 20, 18, 14, 36, 16, 14, 12, 17]))], 1)[0]
# (Line 9) const Unit_Atktype			= [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3];							// 공격 타입
Unit_Atktype = _CGFW(lambda: [_ARR(FlattenList([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]))], 1)[0]
# (Line 10) const Unit_AtkExplosion		= [1, 3, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1];							// 공격 스플 o,x
Unit_AtkExplosion = _CGFW(lambda: [_ARR(FlattenList([1, 3, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1]))], 1)[0]
# (Line 11) const Unit_Atksplash			= [0, 32, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0];						// 공격 스플 범위
Unit_Atksplash = _CGFW(lambda: [_ARR(FlattenList([0, 32, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0]))], 1)[0]
# (Line 12) const Unit_AtkRange			= [6, 6, 6, 5, 6, 6, 5, 6, 5, 5, 6, 6, 6];							// 공격 범위
Unit_AtkRange = _CGFW(lambda: [_ARR(FlattenList([6, 6, 6, 5, 6, 6, 5, 6, 5, 5, 6, 6, 6]))], 1)[0]
# (Line 14) const Unit_AtkPercent		= [128, 192, 256];										// 공격 %
Unit_AtkPercent = _CGFW(lambda: [_ARR(FlattenList([128, 192, 256]))], 1)[0]
# (Line 15) const Unit_AtkPercentFlag	= [0, 0, 0, 0];												// 공격 % Flag
Unit_AtkPercentFlag = _CGFW(lambda: [_ARR(FlattenList([0, 0, 0, 0]))], 1)[0]
# (Line 18) const Base_Atk				= [381, 330, 146, 143, 84, 85, 84, 86, 82, 59, 58, 55, 51];		// 공격력
Base_Atk = _CGFW(lambda: [_ARR(FlattenList([381, 330, 146, 143, 84, 85, 84, 86, 82, 59, 58, 55, 51]))], 1)[0]
# (Line 19) const Base_Atkspeed		= [12, 30, 28, 24, 16, 20, 18, 14, 36, 16, 14, 12, 17];			// 공격 속도
Base_Atkspeed = _CGFW(lambda: [_ARR(FlattenList([12, 30, 28, 24, 16, 20, 18, 14, 36, 16, 14, 12, 17]))], 1)[0]
# (Line 20) const Base_AtkPercent		= [128, 192, 256];										// 공격 %
Base_AtkPercent = _CGFW(lambda: [_ARR(FlattenList([128, 192, 256]))], 1)[0]
# (Line 22) const Dear_Level			= EUDArray(13);
Dear_Level = _CGFW(lambda: [EUDArray(13)], 1)[0]
# (Line 23) const Dear_Now				= EUDArray(13);
Dear_Now = _CGFW(lambda: [EUDArray(13)], 1)[0]
# (Line 24) const Dear_Need			= [100, 200, 300, 400, 500, 600, 700, 800, 900, 1000];
Dear_Need = _CGFW(lambda: [_ARR(FlattenList([100, 200, 300, 400, 500, 600, 700, 800, 900, 1000]))], 1)[0]
# (Line 25) const Dear_Ablity			= [0, 1, 2, 0, 0, 0, 0, 2, 1, 0, 2, 0, 2];
Dear_Ablity = _CGFW(lambda: [_ARR(FlattenList([0, 1, 2, 0, 0, 0, 0, 2, 1, 0, 2, 0, 2]))], 1)[0]
# (Line 26) const Dear_Multiply			= [90, 6, 20, 90, 75, 75, 75, 15, 4, 50, 10, 50, 10];
Dear_Multiply = _CGFW(lambda: [_ARR(FlattenList([90, 6, 20, 90, 75, 75, 75, 15, 4, 50, 10, 50, 10]))], 1)[0]
# (Line 28) const Dear_Text 			=
# (Line 29) [Db(u2b("Wake up_rabbit!")),
# (Line 30) Db(u2b("숙녀의 소양")),
# (Line 31) Db(u2b("반짝반짝 쇼타임")),
# (Line 32) Db(u2b("어른의 매력")),
# (Line 33) Db(u2b("정성을 담아서")),
# (Line 34) Db(u2b("리버시 헌팅")),
# (Line 35) Db(u2b("짠 하고 등장!")),
# (Line 36) Db(u2b("트리플 코디")),
# (Line 37) Db(u2b("뇌쇄적인 멘트")),
# (Line 38) Db(u2b("로맨틱 플뢰르")),
# (Line 39) Db(u2b("프레쉬 러브!")),
# (Line 40) Db(u2b("스마일 충전")),
# (Line 41) Db(u2b("두근두근 리딩"))];
Dear_Text = _CGFW(lambda: [_ARR(FlattenList([Db(u2b("Wake up_rabbit!")), Db(u2b("숙녀의 소양")), Db(u2b("반짝반짝 쇼타임")), Db(u2b("어른의 매력")), Db(u2b("정성을 담아서")), Db(u2b("리버시 헌팅")), Db(u2b("짠 하고 등장!")), Db(u2b("트리플 코디")), Db(u2b("뇌쇄적인 멘트")), Db(u2b("로맨틱 플뢰르")), Db(u2b("프레쉬 러브!")), Db(u2b("스마일 충전")), Db(u2b("두근두근 리딩"))]))], 1)[0]
# (Line 43) const Dear_SubText			=
# (Line 44) [Db(u2b("기본 공격력이")),
# (Line 45) Db(u2b("범위공격 범위가")),
# (Line 46) Db(u2b("공격속도가"))];
Dear_SubText = _CGFW(lambda: [_ARR(FlattenList([Db(u2b("기본 공격력이")), Db(u2b("범위공격 범위가")), Db(u2b("공격속도가"))]))], 1)[0]
# (Line 48) const Dear_EndText 			=
# (Line 49) [Db(u2b("% \x04증가합니다.")),
# (Line 50) Db(u2b(" \x04증가합니다.")),
# (Line 51) Db(u2b("% \x04증가합니다."))];
Dear_EndText = _CGFW(lambda: [_ARR(FlattenList([Db(u2b("% \x04증가합니다.")), Db(u2b(" \x04증가합니다.")), Db(u2b("% \x04증가합니다."))]))], 1)[0]
# (Line 53) const Album_Level 		= EUDArray(13);
Album_Level = _CGFW(lambda: [EUDArray(13)], 1)[0]
# (Line 54) const Album_Now 		= EUDArray(13);
Album_Now = _CGFW(lambda: [EUDArray(13)], 1)[0]
# (Line 55) const Album_Delay		= EUDArray(13);
Album_Delay = _CGFW(lambda: [EUDArray(13)], 1)[0]
# (Line 56) const Album_EffectTime	= EUDArray(13);
Album_EffectTime = _CGFW(lambda: [EUDArray(13)], 1)[0]
# (Line 57) const Album_Need 		= [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
Album_Need = _CGFW(lambda: [_ARR(FlattenList([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))], 1)[0]
# (Line 58) const Album_Ablity		= [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];
Album_Ablity = _CGFW(lambda: [_ARR(FlattenList([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]))], 1)[0]
# (Line 59) const Album_Multiply	= [20, 50, 60, 5, 2, 1, 20, 2, 2, 20, 10, 5, 1];
Album_Multiply = _CGFW(lambda: [_ARR(FlattenList([20, 50, 60, 5, 2, 1, 20, 2, 2, 20, 10, 5, 1]))], 1)[0]
# (Line 61) const Album_Text		=
# (Line 62) [Db(u2b("비빗또 이쿠요!")),
# (Line 63) Db(u2b("정의여, 전율하라")),
# (Line 64) Db(u2b("해피니스 클로버")),
# (Line 65) Db(u2b("엔젤 코디")),
# (Line 66) Db(u2b("엔젤 하모니")),
# (Line 67) Db(u2b("엔젤 샤인")),
# (Line 68) Db(u2b("강한, 소망")),
# (Line 69) Db(u2b("세일링 데이")),
# (Line 70) Db(u2b("플로럴 아쿠아")),
# (Line 71) Db(u2b("꿈빛의 시간")),
# (Line 72) Db(u2b("팝de냐냐냥!")),
# (Line 73) Db(u2b("스위티 스마일")),
# (Line 74) Db(u2b("엔젤 차지")),
# (Line 75) Db(u2b(" 단계"))];
Album_Text = _CGFW(lambda: [_ARR(FlattenList([Db(u2b("비빗또 이쿠요!")), Db(u2b("정의여, 전율하라")), Db(u2b("해피니스 클로버")), Db(u2b("엔젤 코디")), Db(u2b("엔젤 하모니")), Db(u2b("엔젤 샤인")), Db(u2b("강한, 소망")), Db(u2b("세일링 데이")), Db(u2b("플로럴 아쿠아")), Db(u2b("꿈빛의 시간")), Db(u2b("팝de냐냐냥!")), Db(u2b("스위티 스마일")), Db(u2b("엔젤 차지")), Db(u2b(" 단계"))]))], 1)[0]
# (Line 77) const Album_SubText			=
# (Line 78) [Db(u2b("60초마다 10초간 공격속도가")),
# (Line 79) Db(u2b("60초마다 5초간 공격력이")),
# (Line 80) Db(u2b("60초마다")),
# (Line 81) Db(u2b("엔젤 타입의 비주얼 어필이")),
# (Line 82) Db(u2b("엔젤 타입의 보컬 어필이")),
# (Line 83) Db(u2b("엔젤 타입의 모든 어필이")),
# (Line 84) Db(u2b("")),
# (Line 85) Db(u2b("비주얼 스케줄의 체력이")),
# (Line 86) Db(u2b("엔젤 타입의 댄스 어필이")),
# (Line 87) Db(u2b("60초마다 5초간 공격력이")),
# (Line 88) Db(u2b("60초마다 10초간 공격속도가")),
# (Line 89) Db(u2b("엔젤 타입의 이벤트 점수가")),
# (Line 90) Db(u2b("엔젤 타입의 높은 유닛이 뜰 확률이"))];
Album_SubText = _CGFW(lambda: [_ARR(FlattenList([Db(u2b("60초마다 10초간 공격속도가")), Db(u2b("60초마다 5초간 공격력이")), Db(u2b("60초마다")), Db(u2b("엔젤 타입의 비주얼 어필이")), Db(u2b("엔젤 타입의 보컬 어필이")), Db(u2b("엔젤 타입의 모든 어필이")), Db(u2b("")), Db(u2b("비주얼 스케줄의 체력이")), Db(u2b("엔젤 타입의 댄스 어필이")), Db(u2b("60초마다 5초간 공격력이")), Db(u2b("60초마다 10초간 공격속도가")), Db(u2b("엔젤 타입의 이벤트 점수가")), Db(u2b("엔젤 타입의 높은 유닛이 뜰 확률이"))]))], 1)[0]
# (Line 92) const Album_EndText 			=
# (Line 93) [Db(u2b("% \x04증가합니다.")),
# (Line 94) Db(u2b("% \x04증가합니다.")),
# (Line 95) Db(u2b("골드\x04를 얻습니다.")),
# (Line 96) Db(u2b("% \x04증가합니다.")),
# (Line 97) Db(u2b("% \x04증가합니다.")),
# (Line 98) Db(u2b("% \x04증가합니다.")),
# (Line 99) Db(u2b("\x04초마다 비쥬얼 스케줄의 체력을 1%로 만듭니다.")),
# (Line 100) Db(u2b("% \x04감소합니다.")),
# (Line 101) Db(u2b("% \x04증가합니다.")),
# (Line 102) Db(u2b("% \x04증가합니다.")),
# (Line 103) Db(u2b("% \x04증가합니다.")),
# (Line 104) Db(u2b("% \x04증가합니다.")),
# (Line 105) Db(u2b("% \x04증가합니다."))];
Album_EndText = _CGFW(lambda: [_ARR(FlattenList([Db(u2b("% \x04증가합니다.")), Db(u2b("% \x04증가합니다.")), Db(u2b("골드\x04를 얻습니다.")), Db(u2b("% \x04증가합니다.")), Db(u2b("% \x04증가합니다.")), Db(u2b("% \x04증가합니다.")), Db(u2b("\x04초마다 비쥬얼 스케줄의 체력을 1%로 만듭니다.")), Db(u2b("% \x04감소합니다.")), Db(u2b("% \x04증가합니다.")), Db(u2b("% \x04증가합니다.")), Db(u2b("% \x04증가합니다.")), Db(u2b("% \x04증가합니다.")), Db(u2b("% \x04증가합니다."))]))], 1)[0]
# (Line 107) const Create_Text =
# (Line 108) [Db(u2b("안나, 노래 좋아해요.. 잘 부탁해, 요..")),
# (Line 109) Db(u2b("제가 아이돌이라니, 아직 실감나지 않지만.. 믿으며, 도전해볼래요.")),
# (Line 110) Db(u2b("다양한 악기의 음색이 어우러져 반짝반짝 빛나는 심포니가 돼요! ")),
# (Line 111) Db(u2b("미리 말해두는데, 난 어린이가 아냐. 레이디라구, 레이디!")),
# (Line 112) Db(u2b("오늘은 레슨보다, 모두 함께 산책해봐요~.")),
# (Line 113) Db(u2b("저기, 나도 이런 포즈 취하면 인기 있어질까? 봐줘 봐줘~")),
# (Line 114) Db(u2b("산보, 와산보, 와산본~♪ 에헤헤, 어때요, 이 노래! 저 작사에 소질있죠?")),
# (Line 115) Db(u2b("모두의 활기는 내 활기라GU! 같이 재밌게 놀자!")),
# (Line 116) Db(u2b("저, 많은 사람들에게 용기와 희망을 주는 아이돌이 되고 싶어요!")),
# (Line 117) Db(u2b("드, 드디어 아이돌로서 진짜 화려한 모습으로..")),
# (Line 118) Db(u2b("짜안~! 프로쨩의 놀란 얼굴이 보고 싶은 노노하라 아카네쨩 등자ㅡ앙!")),
# (Line 119) Db(u2b("나에게 충분히 감당할 수 있을까 ... 응! 노력 해볼께요!")),
# (Line 120) Db(u2b("쿠후후.. 이제부터 잔뜩 놀자구, 두목!"))];
Create_Text = _CGFW(lambda: [_ARR(FlattenList([Db(u2b("안나, 노래 좋아해요.. 잘 부탁해, 요..")), Db(u2b("제가 아이돌이라니, 아직 실감나지 않지만.. 믿으며, 도전해볼래요.")), Db(u2b("다양한 악기의 음색이 어우러져 반짝반짝 빛나는 심포니가 돼요! ")), Db(u2b("미리 말해두는데, 난 어린이가 아냐. 레이디라구, 레이디!")), Db(u2b("오늘은 레슨보다, 모두 함께 산책해봐요~.")), Db(u2b("저기, 나도 이런 포즈 취하면 인기 있어질까? 봐줘 봐줘~")), Db(u2b("산보, 와산보, 와산본~♪ 에헤헤, 어때요, 이 노래! 저 작사에 소질있죠?")), Db(u2b("모두의 활기는 내 활기라GU! 같이 재밌게 놀자!")), Db(u2b("저, 많은 사람들에게 용기와 희망을 주는 아이돌이 되고 싶어요!")), Db(u2b("드, 드디어 아이돌로서 진짜 화려한 모습으로..")), Db(u2b("짜안~! 프로쨩의 놀란 얼굴이 보고 싶은 노노하라 아카네쨩 등자ㅡ앙!")), Db(u2b("나에게 충분히 감당할 수 있을까 ... 응! 노력 해볼께요!")), Db(u2b("쿠후후.. 이제부터 잔뜩 놀자구, 두목!"))]))], 1)[0]
