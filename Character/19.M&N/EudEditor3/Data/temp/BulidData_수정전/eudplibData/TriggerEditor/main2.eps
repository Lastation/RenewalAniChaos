import SCArchive as sca;
import Alliance as ally;

const nameInventory = EUDArray(24 * 6);
const amountInventory = EUDArray(24 * 6);

const userCharacter = PVariable();
const userLevel 	= PVariable();
const userExp 		= PVariable();
const userJob		= PVariable();
const userGold 		= PVariable();
const userMaxHp		= PVariable();
const userMaxMP		= PVariable();
const userCurMP		= PVariable();
const userAtk		= PVariable();
const userDef		= PVariable();
const userWeapon	= PVariable();
const userArmor 	= PVariable();
const userUseHPptn	= PVariable();
const userUesMPptn	= PVariable();
const userError 	= PVariable();

const isAlive 		= PVariable();

const openedInven 	= PVariable();
const openedSetting = PVariable();
const openedQuest 	= PVariable();

const MaxExp = [10, 20, 30, 40, 50, 60, 70, 80, 90];

const maxInventorySlot = 24;

const s = StringBuffer(1000);

function KillCheck();
function LevelCheck();
function NewCharacter();
function ResetInventory();
function NewCharacter();

function onPluginStart()
{
	sca.Init();
	ally.SetAlliance();
	ResetInventory();
	EUDPlayerLoop()();
	NewCharacter();
	EUDEndPlayerLoop();
	
}
function beforeTriggerExec()
{
	sca.Exec();
	EUDPlayerLoop()();
	LevelCheck();
	KillCheck();
	EUDEndPlayerLoop();
	
	SetMemory(0x5124F0, SetTo, 21);
}

function ResetInventory()
{
	const cp = getcurpl();
	for(var i = 0; i < 24; i++)
	{
		nameInventory[maxInventorySlot * cp + i] = Db("-");
		amountInventory[maxInventorySlot * cp + i] = 0;
	}
	s.print("\x04인벤토리 초기화 완료");
}

function NewCharacter()
{
	const cp = getcurpl();
	
	userLevel[cp] = 1;
	userMaxHp[cp] = 320;
	userJob[cp] = 1;
	userCharacter[cp] = epdread_epd(EPD(0x628438));
	
	switch(cp)
	{
		case 0:
			dwwrite(0x65FD00 + 9808 + 0 * 4, userMaxHp[getcurpl()] * 256);
			CreateUnit(1, "Terran Marine", "Start", CurrentPlayer);
			break;
		case 1:
			CreateUnit(1, "Terran Ghost", "Start", CurrentPlayer);
			break;
		case 2:
			CreateUnit(1, "Sarah Kerrigan", "Start", CurrentPlayer);
			break;
	}

	s.print("\x04플레이어들의 유닛을 생성합니다.");
	
	isAlive[cp] = 1;
}

function LevelCheck()
{
	const cp = getcurpl();
	if(userExp[cp] >= MaxExp[userLevel[cp] - 1] && userLevel[cp] < 100)
	{
		userExp[cp] -= MaxExp[userLevel[cp] - 1];
		userLevel[cp] += 1;
	}
}

function KillCheck()
{
	if(Kills(CurrentPlayer, AtLeast, 1, "Zerg Drone"))
	{
		SetKills(CurrentPlayer, Subtract, 1, "Zerg Drone");
		
	}
	if(Kills(CurrentPlayer, AtLeast, 1, "Zerg Broodling"))
	{
		SetKills(CurrentPlayer, Subtract, 1, "Zerg Broodling");
		
	}
	if(Kills(CurrentPlayer, AtLeast, 1, "Zerg Zergling"))
	{
		SetKills(CurrentPlayer, Subtract, 1, "Zerg Zergling");
		
	}
	if(Kills(CurrentPlayer, AtLeast, 1, "Zerg Hydralisk"))
	{
		SetKills(CurrentPlayer, Subtract, 1, "Zerg Hydralisk");
		
	}
	if(Kills(CurrentPlayer, AtLeast, 1, "Zerg Defiler"))
	{
		SetKills(CurrentPlayer, Subtract, 1, "Zerg Defiler");
		
	}
	if(Kills(CurrentPlayer, AtLeast, 1, "Devouring One (Zergling)"))
	{
		SetKills(CurrentPlayer, Subtract, 1, "Devouring One (Zergling)");
		
	}
	if(Kills(CurrentPlayer, AtLeast, 1, "Protoss Zealot"))
	{
		SetKills(CurrentPlayer, Subtract, 1, "Protoss Zealot");
		
	}
}