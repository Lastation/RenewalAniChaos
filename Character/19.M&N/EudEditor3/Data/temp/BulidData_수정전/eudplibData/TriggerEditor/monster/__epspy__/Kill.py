## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

<<<<<<< HEAD:19.M&N/EudEditor3/Data/temp/BulidData_수정전/eudplibData/TriggerEditor/monster/__epspy__/Kill.py
# (Line 1) function KillCheck()
# (Line 2) {
@EUDTracedFunc
def KillCheck():
    # (Line 3) if(Kills(CurrentPlayer, AtLeast, 1, "Zerg Drone"))
    _t1 = EUDIf()
    EUDTraceLog(3)
    if _t1(Kills(CurrentPlayer, AtLeast, 1, "Zerg Drone")):
        # (Line 4) {
        # (Line 5) SetKills(CurrentPlayer, Subtract, 1, "Zerg Drone");
        # (Line 7) }
        EUDTraceLog(5)
        DoActions(SetKills(CurrentPlayer, Subtract, 1, "Zerg Drone"))
        # (Line 8) if(Kills(CurrentPlayer, AtLeast, 1, "Zerg Broodling"))
    EUDEndIf()
    _t2 = EUDIf()
    EUDTraceLog(8)
    if _t2(Kills(CurrentPlayer, AtLeast, 1, "Zerg Broodling")):
        # (Line 9) {
        # (Line 10) SetKills(CurrentPlayer, Subtract, 1, "Zerg Broodling");
        # (Line 12) }
        EUDTraceLog(10)
        DoActions(SetKills(CurrentPlayer, Subtract, 1, "Zerg Broodling"))
        # (Line 13) if(Kills(CurrentPlayer, AtLeast, 1, "Zerg Zergling"))
    EUDEndIf()
    _t3 = EUDIf()
    EUDTraceLog(13)
    if _t3(Kills(CurrentPlayer, AtLeast, 1, "Zerg Zergling")):
        # (Line 14) {
        # (Line 15) SetKills(CurrentPlayer, Subtract, 1, "Zerg Zergling");
        # (Line 17) }
        EUDTraceLog(15)
        DoActions(SetKills(CurrentPlayer, Subtract, 1, "Zerg Zergling"))
        # (Line 18) if(Kills(CurrentPlayer, AtLeast, 1, "Zerg Hydralisk"))
    EUDEndIf()
    _t4 = EUDIf()
    EUDTraceLog(18)
    if _t4(Kills(CurrentPlayer, AtLeast, 1, "Zerg Hydralisk")):
        # (Line 19) {
        # (Line 20) SetKills(CurrentPlayer, Subtract, 1, "Zerg Hydralisk");
        # (Line 22) }
        EUDTraceLog(20)
        DoActions(SetKills(CurrentPlayer, Subtract, 1, "Zerg Hydralisk"))
        # (Line 23) if(Kills(CurrentPlayer, AtLeast, 1, "Zerg Defiler"))
    EUDEndIf()
    _t5 = EUDIf()
    EUDTraceLog(23)
    if _t5(Kills(CurrentPlayer, AtLeast, 1, "Zerg Defiler")):
        # (Line 24) {
        # (Line 25) SetKills(CurrentPlayer, Subtract, 1, "Zerg Defiler");
        # (Line 27) }
        EUDTraceLog(25)
        DoActions(SetKills(CurrentPlayer, Subtract, 1, "Zerg Defiler"))
        # (Line 28) if(Kills(CurrentPlayer, AtLeast, 1, "Devouring One (Zergling)"))
    EUDEndIf()
    _t6 = EUDIf()
    EUDTraceLog(28)
    if _t6(Kills(CurrentPlayer, AtLeast, 1, "Devouring One (Zergling)")):
        # (Line 29) {
        # (Line 30) SetKills(CurrentPlayer, Subtract, 1, "Devouring One (Zergling)");
        # (Line 32) }
        EUDTraceLog(30)
        DoActions(SetKills(CurrentPlayer, Subtract, 1, "Devouring One (Zergling)"))
        # (Line 33) if(Kills(CurrentPlayer, AtLeast, 1, "Protoss Zealot"))
    EUDEndIf()
    _t7 = EUDIf()
    EUDTraceLog(33)
    if _t7(Kills(CurrentPlayer, AtLeast, 1, "Protoss Zealot")):
        # (Line 34) {
        # (Line 35) SetKills(CurrentPlayer, Subtract, 1, "Protoss Zealot");
        # (Line 37) }
        EUDTraceLog(35)
        DoActions(SetKills(CurrentPlayer, Subtract, 1, "Protoss Zealot"))
        # (Line 38) }
    EUDEndIf()
=======
# (Line 1) import Angel.ButtonText as abt;
from Angel import ButtonText as abt
# (Line 3) var cp;
cp = EUDVariable()
# (Line 5) function onPluginStart()
# (Line 6) {
@EUDFunc
def onPluginStart():
    # (Line 7) abt.Init_ButtonText();
    abt.Init_ButtonText()
    # (Line 8) }
    # (Line 10) function beforeTriggerExec()

# (Line 11) {
@EUDFunc
def beforeTriggerExec():
    # (Line 12) cp = getcurpl();
    cp << (f_getcurpl())
    # (Line 14) EUDPlayerLoop()();
    EUDPlayerLoop()()
    # (Line 16) abt.Update_ButtomText(cp);
    abt.Update_ButtomText(cp)
    # (Line 18) EUDEndPlayerLoop();
    EUDEndPlayerLoop()
    # (Line 19) }
    # (Line 21) function afterTriggerExec()

# (Line 22) {
@EUDFunc
def afterTriggerExec():
    # (Line 23) }
    pass
>>>>>>> origin/master:EudEditor3/Data/temp/BulidData_MILLIONSTARS/eudplibData/TriggerEditor/__epspy__/main.py
