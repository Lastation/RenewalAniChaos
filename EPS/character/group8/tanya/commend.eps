import PluginVariables as msqcvar;
import variable as v;
import func.sound as s;
import func.trig as trg;
import character.group8.tanya.main as tanya;

function main(playerID)
{
	if (Bring(playerID, AtLeast, 1, "Protoss Corsair", "[Skill]UseSkill"))
	{
		tanya.targetChange(playerID);
		v.stb.printAt(9, "\x13\x19현재 타겟 : \x08P", playerID < 3 ? tanya.target + 4 : tanya.target + 1);
	
		KillUnitAt(1, "Protoss Corsair", "[Skill]UseSkill", playerID);
	}

	if (v.P_WaitMain[playerID] == 0 && v.P_Step[playerID] == 0)
	{		
		if (Bring(playerID, AtLeast, 1, "Protoss Scout", "[Skill]UseSkill"))
		{
			v.P_Step[playerID] = 100;
			KillUnitAt(1, "Protoss Scout", "[Skill]UseSkill", playerID);
		}
		else if (Bring(playerID, AtLeast, 1, "Protoss Carrier", "[Skill]UseSkill"))
		{
			v.P_Step[playerID] = 200;
			KillUnitAt(1, "Protoss Carrier", "[Skill]UseSkill", playerID);
		}
		else if (Bring(playerID, AtLeast, 1, "Protoss Arbiter", "[Skill]UseSkill"))
		{
			s.CharacterVoice(1);
			v.P_Step[playerID] = 300;
			KillUnitAt(1, "Protoss Arbiter", "[Skill]UseSkill", playerID);
		}
		
	}
	
	// Combo
	if (v.P_SkillDelay[playerID] >= 2 && v.P_CountMain[playerID] == 0)
	{
		if (Bring(playerID, AtLeast, 2, "Protoss Scout", "[Skill]UseSkill") &&  v.P_Step[playerID] == 100)
		{
			s.CharacterVoice(2);
			v.P_SkillDelay[playerID] = 0;
			v.P_Step[playerID] = 110;
			KillUnitAt(2, "Protoss Scout", "[Skill]UseSkill", playerID);
		}
		else if (Bring(playerID, AtLeast, 1, "Protoss Carrier", "[Skill]UseSkill")
		&& Bring(playerID, AtLeast, 2,"Protoss Arbiter", "[Skill]UseSkill")
		&& Accumulate(playerID, AtLeast, 200, Gas)
		&&  v.P_Step[playerID] == 200)
		{
			s.CharacterVoice(3);
			v.P_SkillDelay[playerID] = 0;
			v.P_Step[playerID] = 210;
			SetResources(playerID, Subtract, 200, Gas);
			KillUnitAt(1, "Protoss Carrier", "[Skill]UseSkill", playerID);
			KillUnitAt(2, "Protoss Arbiter", "[Skill]UseSkill", playerID);
		}
		else if (Bring(playerID, AtLeast, 1, "Protoss Scout", "[Skill]UseSkill")
		&&  v.P_Step[playerID] == 300)
		{
			if (Deaths(CurrentPlayer, AtLeast, 1, " `UniqueCoolTime") || v.P_UniqueCondition[playerID] == 0)
			{
				SetResources(playerID, Add, 100, Gas);
				KillUnitAt(1, "Protoss Scout", "[Skill]UseSkill", playerID);
			}
			else
			{
				s.CharacterVoice(5);
				v.P_SkillDelay[playerID] = 0;
				v.P_Step[playerID] = 310;
         			SetDeaths(playerID, SetTo, 720, " `UniqueCoolTime");
				KillUnitAt(1, "Protoss Scout", "[Skill]UseSkill", playerID);
			}
		}
		
		// Ultimate
		else if (Bring(playerID, AtLeast, 2, "Protoss Arbiter", "[Skill]UseSkill")
		&& v.P_UltimateGauge[playerID] >= v.P_Ultimate1[playerID]
		&& v.P_Step[playerID] == 300)
		{
			trg.ResizeLocation(playerID, 25, 25);
			MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");

                    var target = playerID < 3 ? tanya.target + 3 : tanya.target;
			if (Bring(target, AtLeast, 1, v.P_UnitID[target], v.P_LocationID[playerID]))
			{
				s.CharacterVoice(10);
				v.P_Step[playerID] = 320;
				v.P_SkillDelay[playerID] = 0;
				SetDeaths(playerID, Subtract, v.P_Ultimate1[playerID], " `UltimateCoolTime");
				KillUnitAt(2,  "Protoss Arbiter", "[Skill]UseSkill", playerID);
			}
			else
			{
				v.stb.printAt(9, "\x13\x04범위 안에 표적이 존재하지 않습니다");
				SetResources(CurrentPlayer, Add, 600, Gas);
				RemoveUnitAt(2,  "Protoss Arbiter", "[Skill]UseSkill", playerID);
			}

			trg.ResizeLocation(playerID, 2, 2);
		}	
		else if (Bring(playerID, AtLeast, 2, "Protoss Arbiter", "[Skill]UseSkill") 
		&&	Bring(playerID, AtLeast, 1, "Protoss Scout", "[Skill]UseSkill") 
		&& v.P_UltimateGauge[playerID] >= v.P_Ultimate2[playerID]
		&& v.P_Step[playerID] == 200)
		{
			if (Switch("UiltimateSwitch", Cleared))
			{
				s.CharacterVoice(12);
				SetSwitch("UiltimateSwitch", Set);
               		CreateUnit(1, " Item. Flag", "[Uiltimate]Flag", CurrentPlayer);
				v.P_Step[playerID] = 220;
				v.P_SkillDelay[playerID] = 0;
				SetDeaths(playerID, Subtract, v.P_Ultimate2[playerID], " `UltimateCoolTime");
				KillUnitAt(2, "Protoss Arbiter", "[Skill]UseSkill", playerID);
				KillUnitAt(1, "Protoss Scout", "[Skill]UseSkill", playerID);
			}
			else
			{
				SetResources(CurrentPlayer, Add, 700, Gas);
				KillUnitAt(2, "Protoss Arbiter", "[Skill]UseSkill", playerID);
				KillUnitAt(1, "Protoss Scout", "[Skill]UseSkill", playerID);
				SetDeaths(CurrentPlayer, SetTo, 999, " `SYSTEMTEXT");
			}
		}
	}
}