import PluginVariables as msqcvar;
import variable as v;
import func.trig as trg;

function main(playerID)
{
   if (v.P_WaitMain[playerID] == 0)
   {
      if (v.P_CountMain[playerID] == 0)
      {
         RemoveUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);

         if (v.P_LoopMain[playerID] == 0) { trg.Table_Sin(playerID, 45, 50); trg.Table_Cos(playerID, 45, 50); }
         else if (v.P_LoopMain[playerID] == 1) { trg.Table_Sin(playerID, 22, 125); trg.Table_Cos(playerID, 22, 125); }
         else if (v.P_LoopMain[playerID] == 2) { trg.Table_Sin(playerID, 90, 50); trg.Table_Cos(playerID, 90, 50); }
         else if (v.P_LoopMain[playerID] == 3) { trg.Table_Sin(playerID, 67, 125); trg.Table_Cos(playerID, 67, 125); }

         trg.Shape_Square(playerID, 1, "40 + 1n Guardian", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
         trg.Shape_Square(playerID, 1, "Protoss Dark Archon", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
         KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);

         if (v.P_LoopMain[playerID] == 1) { trg.Table_Sin(playerID, 45, 50); trg.Table_Cos(playerID, 45, 50); }
         else if (v.P_LoopMain[playerID] == 2) { trg.Table_Sin(playerID, 22, 125); trg.Table_Cos(playerID, 22, 125); }
         else if (v.P_LoopMain[playerID] == 3) { trg.Table_Sin(playerID, 90, 50); trg.Table_Cos(playerID, 90, 50); }

         trg.Shape_Square(playerID, 1, "Kakaru (Twilight)", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
         KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);

         trg.Shape_Square(playerID, 1, " Unit. Hoffnung 25000", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
         KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID);

         MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
         Order("40 + 1n Guardian", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);

         trg.Main_Wait(320);

         v.P_LoopMain[playerID] += 1;

         if (v.P_LoopMain[playerID] == 4)
         {
            v.P_CountMain[playerID] += 1;
            v.P_LoopMain[playerID] = 0;
         }
      }
      else if (v.P_CountMain[playerID] == 1)
      {
         if (v.P_LoopMain[playerID] < 4)
         {       
            var x = 64 - 32 * v.P_LoopMain[playerID];
            var y = 64;

            trg.Shape_Square(playerID, 1, "40 + 1n Guardian", x, y);
            trg.Shape_Square(playerID, 1, "Protoss Dark Archon", x, y);
            KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
            KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);

            trg.Main_Wait(80);
            v.P_LoopMain[playerID] += 1;
         }
         else if (v.P_LoopMain[playerID] < 8)
         {         
            trg.Shape_NxNSquare(playerID, 1, "40 + 1n Guardian", 3, 32);
            trg.Shape_NxNSquare(playerID, 1, "Protoss Dark Archon", 3, 32);
            KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
            KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);

            trg.Main_Wait(160);

            v.P_LoopMain[playerID] += 1;
         }
         else if (v.P_LoopMain[playerID] == 8)
         {         
            trg.Shape_NxNSquare(playerID, 1, "40 + 1n Guardian", 5, 50);
            KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);

            trg.Main_Wait(80);

            v.P_LoopMain[playerID] += 1;
         }
         else if (v.P_LoopMain[playerID] == 9)
         {         
            trg.Shape_NxNSquare(playerID, 1, "40 + 1n Guardian", 7, 50);
            KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);

            trg.Table_Sin(playerID, 22, 75);
            trg.Table_Cos(playerID, 22, 75);

            trg.Shape_Square(playerID, 1, "40 + 1n Drone", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);

            trg.Table_Sin(playerID, 67, 150);
            trg.Table_Cos(playerID, 67, 150);

            trg.Shape_Square(playerID, 1, "40 + 1n Drone", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);

            MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
            MoveUnit(All, "40 + 1n Drone", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
            Order("40 + 1n Drone", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);

            trg.Main_Wait(960);

            v.P_LoopMain[playerID] += 1;
         }
         else if (v.P_LoopMain[playerID] < 14)
         {         
            trg.Table_Sin(playerID, 22, 75);
            trg.Table_Cos(playerID, 22, 75);

            trg.Shape_Square(playerID, 4, "Protoss Dark Templar", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);

            trg.Table_Sin(playerID, 22 + 45 * v.P_LoopMain[playerID], 150);
            trg.Table_Cos(playerID, 22 + 45 * v.P_LoopMain[playerID], 150);

            trg.Shape_Square(playerID, 4, "Protoss Dark Templar", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);

            KillUnitAt(All, "Protoss Dark Templar", "Anywhere", playerID);

            trg.Main_Wait(160);

            v.P_LoopMain[playerID] += 1;
         }
         else if (v.P_LoopMain[playerID] == 14)
         {         
            trg.Main_Wait(320);

            v.P_CountMain[playerID] += 1;
            v.P_LoopMain[playerID] = 0;
         }
      }
      else if (v.P_CountMain[playerID] == 2)
      {
         KillUnitAt(All, "40 + 1n Drone", "Anywhere", playerID);

         trg.SkillEnd();
      }
   }
}