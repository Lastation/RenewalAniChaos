import PluginVariables as msqcvar;
import variable as v;
import func.sound as s;

function main(playerID)
{
	if (v.P_WaitMain[playerID] == 0 && v.P_Step[playerID] == 0)
	{		
		if (Bring(playerID, AtLeast, 1, "Protoss Corsair", "[Skill]UseSkill"))
		{
			
			if (Deaths(CurrentPlayer, AtLeast, 1, " `UniqueCoolTime") || v.P_UniqueCondition[playerID] == 0)
			{
				SetResources(playerID, Add, 60, Gas);
			}
			else
			{
				if (playerID < 3) 	{ SetResources(0, Add, 200, Gas); SetResources(1, Add, 200, Gas); SetResources(2, Add, 200, Gas); }
				else				{ SetResources(3, Add, 200, Gas); SetResources(4, Add, 200, Gas); SetResources(5, Add, 200, Gas); }
				
				s.CharacterVoice(1);
         			SetDeaths(playerID, SetTo, 1440, " `UniqueCoolTime");
			}
			KillUnitAt(1, "Protoss Corsair", "[Skill]UseSkill", playerID);
		}
		else if (Bring(playerID, AtLeast, 1, "Protoss Corsair", "[Skill]UseSkill"))
		{
			SetResources(CurrentPlayer, Add, 60, Gas);
			KillUnitAt(1, "Protoss Corsair", "[Skill]UseSkill", playerID);
		}
		else if (Bring(playerID, AtLeast, 1, "Protoss Scout", "[Skill]UseSkill"))
		{
			v.P_Step[playerID] = 100;
			KillUnitAt(1, "Protoss Scout", "[Skill]UseSkill", playerID);
		}
		else if (Bring(playerID, AtLeast, 1, "Protoss Carrier", "[Skill]UseSkill"))
		{
			v.P_Step[playerID] = 200;
			KillUnitAt(1, "Protoss Carrier", "[Skill]UseSkill", playerID);
		}
		else if (Bring(playerID, AtLeast, 1, "Protoss Arbiter", "[Skill]UseSkill"))
		{
			v.P_Step[playerID] = 300;
			KillUnitAt(1, "Protoss Arbiter", "[Skill]UseSkill", playerID);
		}
		
	}
	
	// Combo
	if (v.P_SkillDelay[playerID] >= 2 && v.P_CountMain[playerID] == 0)
	{
		if (Bring(playerID, AtLeast, 2, "Protoss Carrier", "[Skill]UseSkill") &&  v.P_Step[playerID] == 100)
		{
			s.CharacterVoice(2);
			v.P_SkillDelay[playerID] = 0;
			v.P_Step[playerID] = 110;
			KillUnitAt(2, "Protoss Carrier", "[Skill]UseSkill", playerID);
		}
		else if (Bring(playerID, AtLeast, 1, "Protoss Carrier", "[Skill]UseSkill")
		&& Bring(playerID, AtLeast, 2,"Protoss Arbiter", "[Skill]UseSkill")
		&& Accumulate(playerID, AtLeast, 400, Gas)
		&&  v.P_Step[playerID] == 200)
		{
			s.CharacterVoice(3);
			v.P_SkillDelay[playerID] = 0;
			v.P_Step[playerID] = 210;
			SetResources(playerID, Subtract, 400, Gas);
			KillUnitAt(1, "Protoss Carrier", "[Skill]UseSkill", playerID);
			KillUnitAt(2, "Protoss Arbiter", "[Skill]UseSkill", playerID);
		}
		else if (Bring(playerID, AtLeast, 2,"Protoss Arbiter", "[Skill]UseSkill")
		&&  v.P_Step[playerID] == 210)
		{
			v.P_SkillDelay[playerID] = 0;
			v.P_Step[playerID] = 220;
			KillUnitAt(2, "Protoss Arbiter", "[Skill]UseSkill", playerID);
		}
		
		// Ultimate
		else if (Bring(playerID, AtLeast, 3, "Protoss Arbiter", "[Skill]UseSkill") 
		&& v.P_UltimateGauge[playerID] >= v.P_Ultimate1[playerID]
		&& v.P_Step[playerID] == 300)
		{
			if (Switch("UiltimateSwitch", Cleared))
			{
				s.CharacterVoice(9);
				SetSwitch("UiltimateSwitch", Set);
               		CreateUnit(1, " Item. Flag", "[Uiltimate]Flag", CurrentPlayer);
				v.P_Step[playerID] = 310;
				v.P_SkillDelay[playerID] = 0;
				v.P_CountSub1[playerID] = 0;
				SetDeaths(playerID, Subtract, v.P_Ultimate1[playerID], " `UltimateCoolTime");
				KillUnitAt(3, "Protoss Arbiter", "[Skill]UseSkill", playerID);
			}
			else
			{
				SetResources(CurrentPlayer, Add, 900, Gas);
				KillUnitAt(3, "Protoss Arbiter", "[Skill]UseSkill", playerID);
				SetDeaths(CurrentPlayer, SetTo, 999, " `SYSTEMTEXT");
			}
		}
		else if (Bring(playerID, AtLeast, 3, "Protoss Arbiter", "[Skill]UseSkill")
		&& v.P_UltimateGauge[playerID] >= v.P_Ultimate2[playerID]
		&& v.P_Step[playerID] == 310)
		{
				s.CharacterVoice(15);
				v.P_Step[playerID] = 320;
				SetSwitch("UiltimateSwitch", Set);
				CreateUnit(1, " Item. Flag", "[Uiltimate]Flag", CurrentPlayer);
				v.P_SkillDelay[playerID] = 0;
				SetDeaths(playerID, Subtract, v.P_Ultimate2[playerID], " `UltimateCoolTime");
				KillUnitAt(3,  "Protoss Arbiter", "[Skill]UseSkill", playerID);
		}	
	}
}