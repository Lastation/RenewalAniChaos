import PluginVariables as msqcvar;
import func.shape as s;

function MoveLoc(Unit : TrgUnit, cp : TrgPlayer, x, y);
function SkillUnit(cp : TrgPlayer, count, Unit : TrgUnit);
function Shape_SquareAt(cp : TrgPlayer, count, Unit : TrgUnit, x, y, distanceX, distanceY);
function Shape_NxNSquareAt(cp : TrgPlayer, count, Unit : TrgUnit, n, interval, distanceX, distanceY);

var i = 0;

function main(playerID)
{
   MoveLocation("26.Yume_Bozo", v.P_CharacterID[playerID], playerID, "Anywhere");

   if (cp < 3)
   {
      if (Bring(3, AtLeast, 1, v.P_CharacterID[3], "26.Yume_Bozo"))
      {
         KillUnitAt(All, "Protoss Observer", "Anywhere", 3);
      }
      if (Bring(4, AtLeast, 1, v.P_CharacterID[4], "26.Yume_Bozo"))
      {
         KillUnitAt(All, "Protoss Observer", "Anywhere", 4);
      }
      if (Bring(5, AtLeast, 1, v.P_CharacterID[5], "26.Yume_Bozo"))
      {
         KillUnitAt(All, "Protoss Observer", "Anywhere", 5);
      }
   }
   else if (cp >= 3)
   {
      if (Bring(0, AtLeast, 1, v.P_CharacterID[0], "26.Yume_Bozo"))
      {
         KillUnitAt(All, "Protoss Observer", "Anywhere", 0);
      }
      if (Bring(1, AtLeast, 1, v.P_CharacterID[1], "26.Yume_Bozo"))
      {
         KillUnitAt(All, "Protoss Observer", "Anywhere", 1);
      }
      if (Bring(2, AtLeast, 1, v.P_CharacterID[2], "26.Yume_Bozo"))
      {
         KillUnitAt(All, "Protoss Observer", "Anywhere", 2);
      }
   }

   if (v.P_Delay[playerID] == 0)
   {
      if (v.P_CountMain[playerID] == 0)
      {
         if (v.P_LoopMain[playerID] == 0)
         {             
            SetSwitch("ComputerAlliy", Set);

            SetAllianceStatus(P7, Ally);
            SetAllianceStatus(P8, Ally);
            
            s.Shape_Dot(playerID, 1, "40 + 1n Gantrithor", 0, 0);
            KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID);

            SetInvincibility(Enable, v.P_CharacterID[playerID], playerID, "Anywhere");

            s.SkillWait(560);

            v.P_LoopMain[playerID] += 1;
         }
         else if (v.P_LoopMain[playerID] == 1)
         {
            MoveLocation("26.Yume_Bozo", v.P_CharacterID[playerID], playerID, "Anywhere");

            i = 0;

            if (cp < 3)
            {
               if (Bring(3, AtLeast, 1, v.P_CharacterID[3], "26.Yume_Bozo"))
               {
                  CreateUnitWithProperties(1, "Zerg Defiler", "[Skill]Unit_Wait_1", playerID, UnitProperty(burrowed=True));
                  SetInvincibility(Enable, "Any unit", playerID, "[Skill]Unit_Wait_ALL");
                  MoveLocation(v.P_LocationID[playerID], v.P_CharacterID[3], 3, "Anywhere");
                  MoveUnit(All, "Zerg Defiler", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);

                  i += 1;
               }
               if (Bring(4, AtLeast, 1, v.P_CharacterID[4], "26.Yume_Bozo"))
               {
                  CreateUnitWithProperties(1, "Zerg Defiler", "[Skill]Unit_Wait_1", playerID, UnitProperty(burrowed=True));
                  SetInvincibility(Enable, "Any unit", playerID, "[Skill]Unit_Wait_ALL");
                  MoveLocation(v.P_LocationID[playerID], v.P_CharacterID[4], 4, "Anywhere");
                  MoveUnit(All, "Zerg Defiler", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);

                  i += 1;
               }
               if (Bring(5, AtLeast, 1, v.P_CharacterID[5], "26.Yume_Bozo"))
               {
                  CreateUnitWithProperties(1, "Zerg Defiler", "[Skill]Unit_Wait_1", playerID, UnitProperty(burrowed=True));
                  SetInvincibility(Enable, "Any unit", playerID, "[Skill]Unit_Wait_ALL");
                  MoveLocation(v.P_LocationID[playerID], v.P_CharacterID[5], 5, "Anywhere");
                  MoveUnit(All, "Zerg Defiler", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);

                  i += 1;
               }

            }
            else if (cp >= 3)
            {
               if (Bring(0, AtLeast, 1, v.P_CharacterID[0], "26.Yume_Bozo"))
               {
                  CreateUnitWithProperties(1, "Zerg Defiler", "[Skill]Unit_Wait_1", playerID, UnitProperty(burrowed=True));
                  SetInvincibility(Enable, "Any unit", playerID, "[Skill]Unit_Wait_ALL");
                  MoveLocation(v.P_LocationID[playerID], v.P_CharacterID[0], 0, "Anywhere");
                  MoveUnit(All, "Zerg Defiler", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);

                  i += 1;                  
               }
               if (Bring(1, AtLeast, 1, v.P_CharacterID[1], "26.Yume_Bozo"))
               {
                  CreateUnitWithProperties(1, "Zerg Defiler", "[Skill]Unit_Wait_1", playerID, UnitProperty(burrowed=True));
                  SetInvincibility(Enable, "Any unit", playerID, "[Skill]Unit_Wait_ALL");
                  MoveLocation(v.P_LocationID[playerID], v.P_CharacterID[1], 1, "Anywhere");
                  MoveUnit(All, "Zerg Defiler", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);

                  i += 1;                  
               }
               if (Bring(2, AtLeast, 1, v.P_CharacterID[2], "26.Yume_Bozo"))
               {
                  CreateUnitWithProperties(1, "Zerg Defiler", "[Skill]Unit_Wait_1", playerID, UnitProperty(burrowed=True));
                  SetInvincibility(Enable, "Any unit", playerID, "[Skill]Unit_Wait_ALL");
                  MoveLocation(v.P_LocationID[playerID], v.P_CharacterID[2], 2, "Anywhere");
                  MoveUnit(All, "Zerg Defiler", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);

                  i += 1;                  
               }
            }

            s.SkillWait(80);

            v.P_CountMain[playerID] += 1;
            v.P_LoopMain[playerID] = 0;
         }
      }
      else if (v.P_CountMain[playerID] == 1)
      {
         if (v.P_LoopMain[playerID] < 4)
         {        
            RemoveUnitAt(All, "80 + 1n Artanis", "Anywhere", playerID);
            RemoveUnitAt(All, "80 + 1n Tom Kazansky", "Anywhere", playerID);

            var j = 0;    

            for (; j < i; j++)
            {
               if (v.P_LoopMain[playerID] == 0)
               {
                  s.Table_Sin(playerID, 22, 100);
                  s.Table_Cos(playerID, 22, 100);

                  var x = v.P_AngleCos[playerID];
                  var y = v.P_AngleSin[playerID];

                  Shape_NxNSquareAt(playerID, 1, "80 + 1n Artanis", 4, 50, x, y);
                  Shape_NxNSquareAt(playerID, 1, "80 + 1n Artanis", 4, 50, -x, -y);
                  Shape_NxNSquareAt(playerID, 1, "80 + 1n Artanis", 4, 50, -y, x);
                  Shape_NxNSquareAt(playerID, 1, "80 + 1n Artanis", 4, 50, y, -x);
                  Shape_NxNSquareAt(playerID, 1, " Unit. Hoffnung 25000", 4, 50, x, y);
                  Shape_NxNSquareAt(playerID, 1, " Unit. Hoffnung 25000", 4, 50, -x, -y);
                  Shape_NxNSquareAt(playerID, 1, " Unit. Hoffnung 25000", 4, 50, -y, x);
                  Shape_NxNSquareAt(playerID, 1, " Unit. Hoffnung 25000", 4, 50, y, -x);
               }
               else if (v.P_LoopMain[playerID] == 1)
               {
                  s.Table_Sin(playerID, 22, 100);
                  s.Table_Cos(playerID, 22, 100);

                  var x = v.P_AngleCos[playerID];
                  var y = v.P_AngleSin[playerID];

                  Shape_NxNSquareAt(playerID, 1, "Kakaru (Twilight)", 4, 50, x, y);
                  Shape_NxNSquareAt(playerID, 1, "Kakaru (Twilight)", 4, 50, -x, -y);
                  Shape_NxNSquareAt(playerID, 1, "Kakaru (Twilight)", 4, 50, -y, x);
                  Shape_NxNSquareAt(playerID, 1, "Kakaru (Twilight)", 4, 50, y, -x);
               }
               else if (v.P_LoopMain[playerID] == 2)
               {
                  s.Table_Sin(playerID, 67, 100);
                  s.Table_Cos(playerID, 67, 100);

                  var x = v.P_AngleCos[playerID];
                  var y = v.P_AngleSin[playerID];

                  Shape_NxNSquareAt(playerID, 1, "80 + 1n Tom Kazansky", 4, 50, x, y);
                  Shape_NxNSquareAt(playerID, 1, "80 + 1n Tom Kazansky", 4, 50, -x, -y);
                  Shape_NxNSquareAt(playerID, 1, "80 + 1n Tom Kazansky", 4, 50, -y, x);
                  Shape_NxNSquareAt(playerID, 1, "80 + 1n Tom Kazansky", 4, 50, y, -x);
                  Shape_NxNSquareAt(playerID, 1, " Unit. Hoffnung 25000", 4, 50, x, y);
                  Shape_NxNSquareAt(playerID, 1, " Unit. Hoffnung 25000", 4, 50, -x, -y);
                  Shape_NxNSquareAt(playerID, 1, " Unit. Hoffnung 25000", 4, 50, -y, x);
                  Shape_NxNSquareAt(playerID, 1, " Unit. Hoffnung 25000", 4, 50, y, -x);
               }
               else if (v.P_LoopMain[playerID] == 3)
               {
                  s.Table_Sin(playerID, 67, 100);
                  s.Table_Cos(playerID, 67, 100);

                  var x = v.P_AngleCos[playerID];
                  var y = v.P_AngleSin[playerID];

                  Shape_NxNSquareAt(playerID, 1, "Kakaru (Twilight)", 4, 50, x, y);
                  Shape_NxNSquareAt(playerID, 1, "Kakaru (Twilight)", 4, 50, -x, -y);
                  Shape_NxNSquareAt(playerID, 1, "Kakaru (Twilight)", 4, 50, -y, x);
                  Shape_NxNSquareAt(playerID, 1, "Kakaru (Twilight)", 4, 50, y, -x);
               }

               CreateUnitWithProperties(1, "40 + 1n Zergling", "[Skill]Unit_Wait_1", playerID, UnitProperty(burrowed=True));
               SetInvincibility(Enable, "Any unit", playerID, "[Skill]Unit_Wait_ALL");
               MoveLocation(v.P_LocationID[playerID], "Zerg Defiler", playerID, "Anywhere");
               RemoveUnitAt(1, "Zerg Defiler", "Anywhere", playerID);
               MoveUnit(All, "40 + 1n Zergling", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);

            }

            Order("80 + 1n Artanis", playerID, "Anywhere", Attack, "Anywhere");
            Order("80 + 1n Tom Kazansky", playerID, "Anywhere", Attack, "Anywhere");

            KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID);
            KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);

            j = 0;

            for (; j < i; j++)
            {
               CreateUnitWithProperties(1, "Zerg Defiler", "[Skill]Unit_Wait_1", playerID, UnitProperty(burrowed=True));
               SetInvincibility(Enable, "Any unit", playerID, "[Skill]Unit_Wait_ALL");
               MoveLocation(v.P_LocationID[playerID], "40 + 1n Zergling", playerID, "Anywhere");
               RemoveUnitAt(1, "40 + 1n Zergling", "Anywhere", playerID);
               MoveUnit(All, "Zerg Defiler", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
            }

            s.SkillWait(80);

            v.P_LoopMain[playerID] += 1;
         }
         else if (v.P_LoopMain[playerID] == 4)
         {
            RemoveUnitAt(All, "80 + 1n Artanis", "Anywhere", playerID);
            RemoveUnitAt(All, "80 + 1n Tom Kazansky", "Anywhere", playerID);
            RemoveUnitAt(All, "Zerg Defiler", "Anywhere", playerID);

            s.SkillWait(2320);

            v.P_CountMain[playerID] += 1;
            v.P_LoopMain[playerID] = 0;
         }
      }
      else if (v.P_CountMain[playerID] == 2)
      {
         if (v.P_LoopMain[playerID] == 0)
         {         
            s.Shape_Dot(playerID, 1, "40 + 1n Gantrithor", 0, 0);
            KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID);

            SetInvincibility(Disable, v.P_CharacterID[playerID], playerID, "Anywhere");

            s.SkillWait(480);

            v.P_LoopMain[playerID] += 1;
         }
         else if (v.P_LoopMain[playerID] == 1)
         {         
            s.Voice_Routine(playerID, 6);

            s.SkillWait(80);

            v.P_CountMain[playerID] += 1;
            v.P_LoopMain[playerID] = 0;
         }
      }
      else if (v.P_CountMain[playerID] == 3)
      {
         SetSwitch("ComputerAlliy", Clear);

         if (cp < 3)
         {
            SetAllianceStatus(P8, Enemy);
         }
         else if (cp >= 3)
         {
            SetAllianceStatus(P7, Enemy);
         }

         s.SkillEnd();
      }
   }
}



function MoveLoc(Unit : TrgUnit, cp : TrgPlayer, x, y)
{
   MoveLocation(v.P_LocationID[playerID], "Zerg Defiler", playerID, "Anywhere");
   addloc(v.P_LocationID[playerID], x, y);
}

function SkillUnit(cp : TrgPlayer, count, Unit : TrgUnit)
{
   CreateUnit(count, Unit, dwrand() % 8 + 33, playerID);
   SetInvincibility(Enable, Unit, playerID, "[Skill]Unit_Wait_ALL");
   MoveUnit(count, Unit, playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
}

function Shape_SquareAt(cp : TrgPlayer, count, Unit : TrgUnit, x, y, distanceX, distanceY)
{
   MoveLoc(v.P_CharacterID[playerID], playerID, x + distanceX, y + distanceY);
   SkillUnit(playerID, count, Unit);
   MoveLoc(v.P_CharacterID[playerID], playerID, -y + distanceX, x + distanceY);
   SkillUnit(playerID, count, Unit);
   MoveLoc(v.P_CharacterID[playerID], playerID, -x + distanceX, -y + distanceY);
   SkillUnit(playerID, count, Unit);
   MoveLoc(v.P_CharacterID[playerID], playerID, y + distanceX, -x + distanceY);
   SkillUnit(playerID, count, Unit);
}

function Shape_NxNSquareAt(cp : TrgPlayer, count, Unit : TrgUnit, n, interval, distanceX, distanceY)
{
   var i = 0;
   var destX, destY; 
   var distance = interval / 2;
   var size = n * n;
   
   for (; i < size / 4; i++)
   {
      if (n == 1)
      {
         MoveLoc(v.P_CharacterID[playerID] ,playerID, distanceX, distanceY);
         SkillUnit(playerID, count, Unit);
      }
      else if (n % 2 == 0)
      {
         destX = i % (n / 2) + 1;
         destY = i / (n / 2) + 1;
         
         if (destX == 1)
         {
            Shape_SquareAt(playerID, count, Unit, distance, destY * interval - distance, distanceX, distanceY);
         }
         else if (destY == 1)
         {
            Shape_SquareAt(playerID, count, Unit, destX * interval - distance, distance, distanceX, distanceY);
         }
         else
         {
            Shape_SquareAt(playerID, count, Unit, destX * interval - distance, destY * interval - distance, distanceX, distanceY);
         }
      }
      else if (n % 2 == 1)
      {
         destX = i % (n / 2);
         destY = i / (n / 2);
   
         if (i == 0)
         {
            MoveLoc(v.P_CharacterID[playerID] ,playerID, distanceX, distanceY);
            SkillUnit(playerID, count, Unit);
         }
         else if (destY == 0)
         {
            Shape_SquareAt(playerID, count, Unit, destX * interval, 0, distanceX, distanceY);
         }
         else
         {
            Shape_SquareAt(playerID, count, Unit, destX * interval + interval, destY * interval, distanceX, distanceY);
         }
         
         if (i == size / 4 - 1)
         {
            Shape_SquareAt(playerID, count, Unit, (n / 2) * interval, 0, distanceX, distanceY);
         }
      }
   }
}