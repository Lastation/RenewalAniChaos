import PluginVariables as msqcvar;
import Variable as v;
import func.shape as s;
import Character.Sound as s;

import Character.Rusaruka.Main 		as rusarukaMain;
import Character.Chtholly.Main 		as chthollyMain;
import Character.Kiana.Main 			as kianaMain;
import Character.Yuuna.Main 		as yuunaMain;
import Character.Mayuri.Main 		as mayuriMain;
import Character.Nanami.Main 		as nanamiMain;
import Character.Milim.Main 		as milimMain;
import Character.Yume.Main 		as yumeMain;
import Character.Magane.Main 		as maganeMain;
import Character.Oda.Main 			as odaMain;
import Character.Ekidona.Main 		as ekidonaMain;
import Character.Niwa.Main 			as niwaMain;
import Character.Park.Main 			as parkMain;

const bgmWait		= PVariable();			

function SetVoice(playerID);
function MargeSound(playerID);
function SkillWait(playerID);
function SkillDelay(playerID);
function BGMRoutine(playerID);

function main(playerID)
{
	switch(v.Hero_Num[playerID])
	{
	case 1:
		rusarukaMain.main(playerID);
		break;
	case 2:
		chthollyMain.main(playerID);
		break;
	case 17:
		kianaMain.main(playerID);
		break;
	case 22:
		yuunaMain.main(playerID);
		break;
	case 23:
		mayuriMain.main(playerID);
		break;
	case 24:
		nanamiMain.main(playerID);
		break;
	case 25:
		milimMain.main(playerID);
		break;
	case 26:
		yumeMain.main(playerID);
		break;
	case 27:
		maganeMain.main(playerID);
		break;
	case 28:
		odaMain.main(playerID);
		break;
	case 29:
		ekidonaMain.main(playerID);
		break;
	case 30:
		niwaMain.main(playerID);
		break;
	case 31:
		parkMain.main(playerID);
		break;
	}
	
	SkillWait(playerID);
	SkillDelay(playerID);
	
	SetVoice(playerID);
	s.main(playerID);
	BGMRoutine(playerID);
}

function SetVoice(playerID)
{
	if (cp < 6)
	{
		if (Deaths(playerID, AtLeast, 1, (186)))
		{
			v.Sound_Text1[playerID] = dwread_epd(EPD(0x58A364 + 48 * 186 + 4 * playerID));
			v.Sound_Text1[8 + playerID] = v.Sound_Text1[playerID];
			SetDeaths(playerID, SetTo, 0, (186));
		}
		if (Deaths(playerID, AtLeast, 1, (174)))
		{
			v.Sound_Text2[playerID] = dwread_epd(EPD(0x58A364 + 48 * 174 + 4 * playerID));
			v.Sound_Text2[8 + playerID] = v.Sound_Text2[playerID];
			SetDeaths(playerID, SetTo, 0, (174));
		}
		if (Deaths(playerID, AtLeast, 1, (117)))
		{
			v.Sound_Text3[playerID] = dwread_epd(EPD(0x58A364 + 48 * 117 + 4 * playerID));
			v.Sound_Text3[8 + playerID] = v.Sound_Text3[playerID];
			SetDeaths(playerID, SetTo, 0, (117));
		}
		if (Deaths(playerID, AtLeast, 1, (157)))
		{
			v.Sound_Text4[playerID] = dwread_epd(EPD(0x58A364 + 48 * 157 + 4 * playerID));
			v.Sound_Text4[8 + playerID] = v.Sound_Text4[playerID];
			SetDeaths(playerID, SetTo, 0, (157));
		}
		if (Deaths(playerID, AtLeast, 1, (222)))
		{
			v.Sound_Text_Uilti[playerID] = dwread_epd(EPD(0x58A364 + 48 * 222 + 4 * playerID));
			v.Sound_Text_Uilti[8 + playerID] = v.Sound_Text_Uilti[playerID];
			SetDeaths(playerID, SetTo, 0, (222));
		}
		if (Deaths(playerID, AtLeast, 1, (188)))
		{
			v.Sound_Text_Uniq[playerID] = dwread_epd(EPD(0x58A364 + 48 * 188 + 4 * playerID));
			v.Sound_Text_Uniq[8 + playerID] = v.Sound_Text_Uniq[playerID];
			SetDeaths(playerID, SetTo, 0, (188));
		}
	}
}

function BGMRoutine(playerID)
{
	if (Bring(playerID, AtLeast, 1, "Terran SCV", "[BGM]ON"))
	{
		if (bgmWait[playerID] == 0)
		{
			s.stb.print("　　\x04\x1F# N\x04ow \x04Playing... ' \x08化\x02身の\x04獣 [ \x19십\x04이대전 ed ]\x04");
			PlayWAV("BGM.ogg");
			bgmWait[playerID] = 2424;
		}
	}
	
	if (bgmWait[playerID] > 0)
	{
		bgmWait[playerID] -= 1;
	}
}

function SkillWait(playerID)
{
	if (v.P_Delay[playerID] == 0)
	{
		if (v.P_CountMain[playerID] == 999)
		{
			s.SkillWait(500);
			v.P_CountMain[playerID] = 1000;
		}
		else if (v.P_CountMain[playerID] == 1000)
		{
			v.P_CountMain[playerID] = 0;
			v.P_LoopMain[playerID] = 0;
			s.wait[playerID] = 12;
		}
	}
	
	if (s.wait[playerID] >= 2)
	{
		s.wait[playerID] -= 1;
	}
	else if (s.wait[playerID] == 1)
	{
		s.wait[playerID] = 0;
		s.step[playerID] = 0;
	}
}

function SkillDelay(playerID)
{
	if (v.P_Delay[playerID] >= 1) { v.P_Delay[playerID] -= 1; }
	if (v.P_DelayB[playerID] >= 1) { v.P_DelayB[playerID] -= 1; }
	if (v.P_DelayC[playerID] >= 1) { v.P_DelayC[playerID] -= 1; }
}