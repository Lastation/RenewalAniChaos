## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import Function as f;
import Function as f
# (Line 3) function main(cp)
# (Line 4) {
@EUDFunc
def f_main(cp):
    # (Line 5) if (f.delay[cp] == 0)
    if EUDIf()(f.delay[cp] == 0):
        # (Line 6) {
        # (Line 7) if (cp < 3)
        if EUDIf()(cp >= 3, neg=True):
            # (Line 8) { MoveUnit(All, f.heroID[cp], cp, "Anywhere", "[Unique]Position_Team1"); }
            DoActions(MoveUnit(All, f.heroID[cp], cp, "Anywhere", "[Unique]Position_Team1"))
            # (Line 9) else
            # (Line 10) { MoveUnit(All, f.heroID[cp], cp, "Anywhere", "[Unique]Position_Team2"); }
        if EUDElse()():
            DoActions(MoveUnit(All, f.heroID[cp], cp, "Anywhere", "[Unique]Position_Team2"))
            # (Line 12) if (f.count[cp] == 0)
        EUDEndIf()
        if EUDIf()(f.count[cp] == 0):
            # (Line 13) {
            # (Line 14) if (f.loop[cp] == 0)
            if EUDIf()(f.loop[cp] == 0):
                # (Line 15) {
                # (Line 16) SetInvincibility(Enable, f.heroID[cp], cp, "Anywhere");
                # (Line 17) f.Voice_Routine(cp, 7);
                DoActions(SetInvincibility(Enable, f.heroID[cp], cp, "Anywhere"))
                f.Voice_Routine(cp, 7)
                # (Line 18) f.SkillWait(cp, 5800);
                f.SkillWait(cp, 5800)
                # (Line 19) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 20) }
                # (Line 21) else if (f.loop[cp] == 1)
            if EUDElseIf()(f.loop[cp] == 1):
                # (Line 22) {
                # (Line 23) f.Voice_Routine(cp, 8);
                f.Voice_Routine(cp, 8)
                # (Line 24) f.SkillWait(cp, 5600);
                f.SkillWait(cp, 5600)
                # (Line 25) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 26) }
                # (Line 27) else if (f.loop[cp] == 2)
            if EUDElseIf()(f.loop[cp] == 2):
                # (Line 28) {
                # (Line 29) f.Voice_Routine(cp, 9);
                f.Voice_Routine(cp, 9)
                # (Line 30) f.SkillWait(cp, 6100);
                f.SkillWait(cp, 6100)
                # (Line 31) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 32) }
                # (Line 33) else if (f.loop[cp] == 3)
            if EUDElseIf()(f.loop[cp] == 3):
                # (Line 34) {
                # (Line 35) f.Voice_Routine(cp, 10);
                f.Voice_Routine(cp, 10)
                # (Line 36) f.SkillWait(cp, 6200);
                f.SkillWait(cp, 6200)
                # (Line 37) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 38) }
                # (Line 39) else if (f.loop[cp] == 4)
            if EUDElseIf()(f.loop[cp] == 4):
                # (Line 40) {
                # (Line 41) f.Voice_Routine(cp, 11);
                f.Voice_Routine(cp, 11)
                # (Line 42) f.SkillWait(cp, 0);
                f.SkillWait(cp, 0)
                # (Line 43) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 44) }
                # (Line 45) else if (f.loop[cp] == 5)
            if EUDElseIf()(f.loop[cp] == 5):
                # (Line 46) {
                # (Line 47) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 48) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 49) }
                # (Line 50) }
            EUDEndIf()
            # (Line 51) else if (f.count[cp] == 1)
        if EUDElseIf()(f.count[cp] == 1):
            # (Line 52) {
            # (Line 53) if (f.loop[cp] == 0)
            if EUDIf()(f.loop[cp] == 0):
                # (Line 54) {
                # (Line 55) f.SkillUnit(cp, 1, "50 + 1n Battlecruiser");
                f.SkillUnit(cp, 1, "50 + 1n Battlecruiser")
                # (Line 56) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp);
                # (Line 57) f.SkillWait(cp, 0);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp))
                f.SkillWait(cp, 0)
                # (Line 58) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 59) }
                # (Line 60) else if (f.loop[cp] == 1)
            if EUDElseIf()(f.loop[cp] == 1):
                # (Line 61) {
                # (Line 62) f.NxNSquareShape(cp, 1, "50 + 1n Battlecruiser", 1, 64);
                f.NxNSquareShape(cp, 1, "50 + 1n Battlecruiser", 1, 64)
                # (Line 63) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp);
                # (Line 64) f.SkillWait(cp, 0);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp))
                f.SkillWait(cp, 0)
                # (Line 65) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 66) }
                # (Line 67) else if (f.loop[cp] == 2)
            if EUDElseIf()(f.loop[cp] == 2):
                # (Line 68) {
                # (Line 69) f.NxNSquareShape(cp, 1, "50 + 1n Battlecruiser", 3, 64);
                f.NxNSquareShape(cp, 1, "50 + 1n Battlecruiser", 3, 64)
                # (Line 70) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp);
                # (Line 71) f.SkillWait(cp, 0);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp))
                f.SkillWait(cp, 0)
                # (Line 72) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 73) }
                # (Line 74) else if (f.loop[cp] == 3)
            if EUDElseIf()(f.loop[cp] == 3):
                # (Line 75) {
                # (Line 76) f.NxNSquareShape(cp, 1, "50 + 1n Battlecruiser", 5, 64);
                f.NxNSquareShape(cp, 1, "50 + 1n Battlecruiser", 5, 64)
                # (Line 77) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp);
                # (Line 78) f.SkillWait(cp, 0);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp))
                f.SkillWait(cp, 0)
                # (Line 79) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 80) }
                # (Line 81) else if (f.loop[cp] == 4)
            if EUDElseIf()(f.loop[cp] == 4):
                # (Line 82) {
                # (Line 83) f.NxNSquareShape(cp, 1, "50 + 1n Battlecruiser", 7, 64);
                f.NxNSquareShape(cp, 1, "50 + 1n Battlecruiser", 7, 64)
                # (Line 84) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp);
                # (Line 85) f.SkillWait(cp, 0);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp))
                f.SkillWait(cp, 0)
                # (Line 86) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 87) }
                # (Line 88) else if (f.loop[cp] == 5)
            if EUDElseIf()(f.loop[cp] == 5):
                # (Line 89) {
                # (Line 90) if (cp < 3)
                if EUDIf()(cp >= 3, neg=True):
                    # (Line 91) {
                    # (Line 92) CreateUnit(1, "Csejte Ungarn Nachtzehrer", "[Skill]Unit_Wait_8", P7);
                    # (Line 93) MoveUnit(1, f.heroID[cp], cp, "Anywhere", "[Potal]Base7");
                    DoActions(CreateUnit(1, "Csejte Ungarn Nachtzehrer", "[Skill]Unit_Wait_8", P7))
                    # (Line 94) MoveUnit(1, "Csejte Ungarn Nachtzehrer", P7, "[Skill]Unit_Wait_ALL", "[Unique]Position_Team1");
                    DoActions(MoveUnit(1, f.heroID[cp], cp, "Anywhere", "[Potal]Base7"))
                    # (Line 95) MoveUnit(1, f.heroID[cp], cp, "Anywhere", "[Unique]Position_Team1");
                    DoActions(MoveUnit(1, "Csejte Ungarn Nachtzehrer", P7, "[Skill]Unit_Wait_ALL", "[Unique]Position_Team1"))
                    # (Line 96) }
                    DoActions(MoveUnit(1, f.heroID[cp], cp, "Anywhere", "[Unique]Position_Team1"))
                    # (Line 97) else
                    # (Line 98) {
                if EUDElse()():
                    # (Line 99) CreateUnit(1, "Csejte Ungarn Nachtzehrer", "[Skill]Unit_Wait_8", P8);
                    # (Line 100) MoveUnit(1, f.heroID[cp], cp, "Anywhere", "[Potal]Base8");
                    DoActions(CreateUnit(1, "Csejte Ungarn Nachtzehrer", "[Skill]Unit_Wait_8", P8))
                    # (Line 101) MoveUnit(1, "Csejte Ungarn Nachtzehrer", P8, "[Skill]Unit_Wait_ALL", "[Unique]Position_Team2");
                    DoActions(MoveUnit(1, f.heroID[cp], cp, "Anywhere", "[Potal]Base8"))
                    # (Line 102) MoveUnit(1, f.heroID[cp], cp, "Anywhere", "[Unique]Position_Team2");
                    DoActions(MoveUnit(1, "Csejte Ungarn Nachtzehrer", P8, "[Skill]Unit_Wait_ALL", "[Unique]Position_Team2"))
                    # (Line 103) }
                    DoActions(MoveUnit(1, f.heroID[cp], cp, "Anywhere", "[Unique]Position_Team2"))
                    # (Line 104) f.SkillWait(cp, 0);
                EUDEndIf()
                f.SkillWait(cp, 0)
                # (Line 105) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 106) }
                # (Line 107) else if (f.loop[cp] == 6)
            if EUDElseIf()(f.loop[cp] == 6):
                # (Line 108) {
                # (Line 109) SetInvincibility(Disable, f.heroID[cp], cp, "Anywhere");
                # (Line 110) f.SkillEnd(cp);
                DoActions(SetInvincibility(Disable, f.heroID[cp], cp, "Anywhere"))
                f.SkillEnd(cp)
                # (Line 111) }
                # (Line 112) }
            EUDEndIf()
            # (Line 113) }
        EUDEndIf()
        # (Line 114) }
    EUDEndIf()
