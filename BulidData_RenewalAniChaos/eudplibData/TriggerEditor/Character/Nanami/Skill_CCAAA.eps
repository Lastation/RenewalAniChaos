import PluginVariables as msqcvar;
import func.shape as s;

function main(playerID)
{
   s.HoldPosition(playerID);
   s.BanReturn(playerID);
   MoveLocation("24.Nanami_Bozo", v.P_CharacterID[playerID], playerID, "Anywhere");
   
   if (v.P_Delay[playerID] == 0)
   {
      if (v.P_CountMain[playerID] == 0)
      {
         if (v.P_LoopMain[playerID] == 0)
         {         
            if (cp < 3) SetSwitch("Passive - Nanami1", Set);
            else SetSwitch("Passive - Nanami2", Set);

            s.Shape_Dot(playerID, 1, "60 + 1n Archon", -100, 100);
            s.Shape_Dot(playerID, 1, "60 + 1n Siege", -100, 100);
            KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);

            s.SkillWait(160);

            v.P_LoopMain[playerID] += 1;
         }
         else if (v.P_LoopMain[playerID] == 1)
         {         
            s.Shape_Dot(playerID, 1, "60 + 1n Archon", 100, -100);
            s.Shape_Dot(playerID, 1, "60 + 1n Siege", 100, -100);
            KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);

            s.SkillWait(160);

            v.P_LoopMain[playerID] += 1;
         }
         else if (v.P_LoopMain[playerID] == 2)
         {         
            s.Shape_Dot(playerID, 1, "60 + 1n Archon", 100, 100);
            s.Shape_Dot(playerID, 1, "60 + 1n Siege", 100, 100);
            KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);

            s.SkillWait(160);

            v.P_LoopMain[playerID] += 1;
         }
         else if (v.P_LoopMain[playerID] == 3)
         {         
            s.Shape_Dot(playerID, 1, "60 + 1n Archon", -100, -100);
            s.Shape_Dot(playerID, 1, "60 + 1n Siege", -100, -100);
            KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);

            s.SkillWait(160);

            v.P_LoopMain[playerID] += 1;
         }
         else if (v.P_LoopMain[playerID] == 4)
         {         
            s.Shape_Dot(playerID, 1, " Unit. Hoffnung 25000", -200, 0);
            s.Shape_Dot(playerID, 1, "60 + 1n Siege", -200, 0);
            KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID);

            s.SkillWait(160);

            v.P_LoopMain[playerID] += 1;
         }
         else if (v.P_LoopMain[playerID] == 5)
         {         
            s.Shape_Dot(playerID, 1, " Unit. Hoffnung 25000", 200, 0);
            s.Shape_Dot(playerID, 1, "60 + 1n Siege", 200, 0);
            KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID);

            s.SkillWait(160);

            v.P_LoopMain[playerID] += 1;
         }
         else if (v.P_LoopMain[playerID] == 6)
         {
            s.Shape_Dot(playerID, 1, " Unit. Hoffnung 25000", 0, 200);
            s.Shape_Dot(playerID, 1, "60 + 1n Siege", 0, 200);
            KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID);

            s.SkillWait(160);

            v.P_LoopMain[playerID] += 1;
         }
         else if (v.P_LoopMain[playerID] == 7)
         {
            s.Shape_Dot(playerID, 1, " Unit. Hoffnung 25000", 0, -200);
            s.Shape_Dot(playerID, 1, "60 + 1n Siege", 0, -200);
            KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID);

            s.SkillWait(160);

            v.P_LoopMain[playerID] += 1;
         }
         else if (v.P_LoopMain[playerID] == 8)
         {
            s.EdgeShape(playerID, 1, " Unit. Hoffnung 25000", 0, 7, 150);
            KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID);

            s.SkillWait(160);

            v.P_LoopMain[playerID] += 1;
         }
         else if (v.P_LoopMain[playerID] == 9)
         {
            s.EdgeShape(playerID, 1, " Unit. Hoffnung 25000", 45, 7, 150);
            KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID);
            s.EdgeShape(playerID, 1, "60 + 1n Danimoth", 0, 3, 150);

            MoveLocation(v.P_LocationID[playerID], v.P_CharacterID[playerID], playerID, "Anywhere");
            Order("60 + 1n Danimoth", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);

            s.SkillWait(1840);

            v.P_LoopMain[playerID] += 1;
         }
         else if (v.P_LoopMain[playerID] == 10)
         {
            s.SkillWait(80);

            v.P_CountMain[playerID] += 1;
            v.P_LoopMain[playerID] = 0;
         }
      }
      else if (v.P_CountMain[playerID] == 1)
      {
         if (v.P_LoopMain[playerID] == 0)
         {         
            s.EdgeShape(playerID, 1, "60 + 1n High Templar", 45, 5, 100);
            KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID);

            s.SkillWait(160);

            v.P_LoopMain[playerID] += 1;
         }
         else if (v.P_LoopMain[playerID] == 1)
         {         
            s.EdgeShape(playerID, 1, "60 + 1n High Templar", 0, 5, 100);
            KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID);

            s.SkillWait(160);

            v.P_LoopMain[playerID] += 1;
         }
         else if (v.P_LoopMain[playerID] == 2)
         {         
            s.EdgeShape(playerID, 1, "60 + 1n High Templar", 45, 5, 150);
            KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID);

            s.SkillWait(160);

            v.P_LoopMain[playerID] += 1;
         }
         else if (v.P_LoopMain[playerID] == 3)
         {         
            s.EdgeShape(playerID, 1, "60 + 1n High Templar", 0, 5, 150);
            KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID);

            s.SkillWait(160);

            v.P_LoopMain[playerID] += 1;
         }
         else if (v.P_LoopMain[playerID] == 4)
         {
            s.EdgeShape(playerID, 1, "100 + 1n Dragoon", 45, 5, 150);
            KillUnitAt(All, "100 + 1n Dragoon", "Anywhere", playerID);

            s.EdgeShape(playerID, 1, "40 + 1n Mojo", 45, 3, 150);
            MoveLocation(v.P_LocationID[playerID], v.P_CharacterID[playerID], playerID, "Anywhere");
            Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);

            s.SkillWait(160);

            v.P_LoopMain[playerID] += 1;
         }
         else if (v.P_LoopMain[playerID] == 5)
         {
            s.EdgeShape(playerID, 1, "100 + 1n Dragoon", 0, 5, 150);
            KillUnitAt(All, "100 + 1n Dragoon", "Anywhere", playerID);

            s.SkillWait(1120);

            v.P_LoopMain[playerID] += 1;
         }
         else if (v.P_LoopMain[playerID] == 6)
         {
            s.SkillWait(80);

            s.Voice_Routine(playerID, 7);

            v.P_CountMain[playerID] += 1;
            v.P_LoopMain[playerID] = 0;
            v.P_LoopMainC[playerID] = 0;
         }

      }
      else if (v.P_CountMain[playerID] == 2)
      {
         if (v.P_LoopMain[playerID] == 0)
         {
            s.EdgeShape(playerID, 1, "60 + 1n High Templar", 45, 3, 100);
            MoveLocation(v.P_LocationID[playerID], v.P_CharacterID[playerID], playerID, "Anywhere");
            MoveUnit(All, "60 + 1n High Templar", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
            Order("60 + 1n High Templar", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);

            s.SkillWait(3120);

            v.P_LoopMain[playerID] += 1;
         }
         else if (v.P_LoopMain[playerID] == 1)
         {
            s.SkillWait(80);

            v.P_CountMain[playerID] += 1;
            v.P_LoopMain[playerID] = 0;
         }

      }

      else if (v.P_CountMain[playerID] == 3)
      {
         KillUnitAt(All, "60 + 1n Danimoth", "Anywhere", playerID);
         KillUnitAt(All, "60 + 1n Siege", "Anywhere", playerID);
         KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID);
         KillUnitAt(All, "60 + 1n High Templar", "Anywhere", playerID);
         SetSwitch("Passive - Nanami1", Clear);
         SetSwitch("Passive - Nanami2", Clear);

         s.SkillEnd();
      }
   }
   if (v.P_DelayB[playerID] == 0)
   {
      if (v.P_CountMain[playerID] < 3)
      {
         if (v.P_LoopMainB[playerID] == 0)
         {
            s.Shape_Square(playerID, 1, " Unit. Schnee", 75, 75);

            KillUnitAt(All, " Unit. Schnee", "Anywhere", playerID);

            s.SkillWaitB(playerID, 160);

            v.P_LoopMainB[playerID] += 1;
         }
         else if (v.P_LoopMainB[playerID] == 1)
         {
            s.Shape_Square(playerID, 1, "60 + 1n Archon", 150, 0);

            KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);

            s.SkillWaitB(playerID, 160);

            v.P_LoopMainB[playerID] += 1;
         }
         else if (v.P_LoopMainB[playerID] == 2)
         {
            s.Shape_Square(playerID, 1, "Protoss Dark Archon", 150, 75);

            KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);

            s.SkillWaitB(playerID, 160);

            v.P_LoopMainB[playerID] += 1;
         }
         else if (v.P_LoopMainB[playerID] == 3)
         {
            s.Shape_Square(playerID, 1, "60 + 1n Archon", 150, 150);

            KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);

            s.SkillWaitB(playerID, 160);

            v.P_LoopMainB[playerID] += 1;
         }
         else if (v.P_LoopMainB[playerID] == 4)
         {
            s.Shape_Square(playerID, 1, "Protoss Dark Archon", 75, 150);

            KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);

            s.SkillWaitB(playerID, 160);

            v.P_LoopMainB[playerID] = 0;
         }
      }
   }
   if (v.P_DelayC[playerID] == 0)
   {
      if (v.P_CountMain[playerID] < 2 && v.P_CountMain[playerID] > 0)
      {
         if (v.P_LoopMainC[playerID] == 8) v.P_LoopMainC[playerID] = 0;
         if (v.P_LoopMainC[playerID] < 4)
         {
            s.Shape_Dot(playerID, 1, " Unit. Schnee", 160 - 40 * v.P_LoopMainC[playerID], 40 * v.P_LoopMainC[playerID]);
            s.Shape_Dot(playerID, 1, " Unit. Schnee", -160 + 40 * v.P_LoopMainC[playerID], -40 * v.P_LoopMainC[playerID]);
            s.Shape_Dot(playerID, 1, "40 + 1n Zealot", -40 * v.P_LoopMainC[playerID], 160 - 40 * v.P_LoopMainC[playerID]);
            s.Shape_Dot(playerID, 1, "40 + 1n Zealot", 40 * v.P_LoopMainC[playerID], -160 + 40 * v.P_LoopMainC[playerID]);

            KillUnitAt(All, " Unit. Schnee", "Anywhere", playerID);
            KillUnitAt(All, "40 + 1n Zealot", "Anywhere", playerID);

            s.SkillWaitC(playerID, 320);

            v.P_LoopMainC[playerID] += 1;
         }
         else if (v.P_LoopMainC[playerID] < 8)
         {
            s.Shape_Dot(playerID, 1, " Unit. Schnee", -40 * (v.P_LoopMainC[playerID] - 4), 160 - 40 * (v.P_LoopMainC[playerID] - 4));
            s.Shape_Dot(playerID, 1, " Unit. Schnee", 40 * (v.P_LoopMainC[playerID] - 4), -160 + 40 * (v.P_LoopMainC[playerID] - 4));
            s.Shape_Dot(playerID, 1, "40 + 1n Zealot", 160 - 40 * (v.P_LoopMainC[playerID] - 4), 40 * (v.P_LoopMainC[playerID] - 4));
            s.Shape_Dot(playerID, 1, "40 + 1n Zealot", -160 + 40 * (v.P_LoopMainC[playerID] - 4), -40 * (v.P_LoopMainC[playerID] - 4));

            KillUnitAt(All, " Unit. Schnee", "Anywhere", playerID);
            KillUnitAt(All, "40 + 1n Zealot", "Anywhere", playerID);

            s.SkillWaitC(playerID, 320);

            v.P_LoopMainC[playerID] += 1;
         }
      }
      else if (v.P_CountMain[playerID] < 3 && v.P_CountMain[playerID] > 1)
      {
         if (v.P_LoopMainC[playerID] == 2) v.P_LoopMainC[playerID] = 0;
         if (v.P_LoopMainC[playerID] < 2)
         {
            s.Table_Sin(playerID, 22 + 45 * v.P_LoopMainC[playerID], 100 + 50 * v.P_LoopMainC[playerID]);
            s.Table_Cos(playerID, 22 + 45 * v.P_LoopMainC[playerID], 100 + 50 * v.P_LoopMainC[playerID]);

            s.Shape_NxNSquareAt(playerID, 1, " Unit. Schnee", 3, 32, v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
            s.Shape_NxNSquareAt(playerID, 1, " Unit. Schnee", 3, 32, -v.P_AngleCos[playerID], -v.P_AngleSin[playerID]);
            s.Shape_NxNSquareAt(playerID, 1, " Unit. Schnee", 3, 32, -v.P_AngleSin[playerID], v.P_AngleCos[playerID]);
            s.Shape_NxNSquareAt(playerID, 1, " Unit. Schnee", 3, 32, v.P_AngleSin[playerID], -v.P_AngleCos[playerID]);

            KillUnitAt(All, " Unit. Schnee", "Anywhere", playerID);

            s.SkillWaitC(playerID, 320);

            v.P_LoopMainC[playerID] += 1;
         }
      }


   }
}