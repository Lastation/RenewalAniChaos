## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import Function as f;
import Function as f
# (Line 3) function main(cp)
# (Line 4) {
@EUDFunc
def f_main(cp):
    # (Line 5) MoveLocation("24.Nanami_Bozo", f.heroID[cp], cp, "Anywhere");
    # (Line 7) if (f.delay[cp] == 0)
    DoActions(MoveLocation("24.Nanami_Bozo", f.heroID[cp], cp, "Anywhere"))
    if EUDIf()(f.delay[cp] == 0):
        # (Line 8) {
        # (Line 9) if (f.count[cp] == 0)
        if EUDIf()(f.count[cp] == 0):
            # (Line 10) {
            # (Line 11) if (f.loop[cp] == 0)
            if EUDIf()(f.loop[cp] == 0):
                # (Line 12) {
                # (Line 13) if (cp < 3) SetSwitch("Passive - Nanami1", Set);
                if EUDIf()(cp >= 3, neg=True):
                    # (Line 14) else SetSwitch("Passive - Nanami2", Set);
                    DoActions(SetSwitch("Passive - Nanami1", Set))
                if EUDElse()():
                    # (Line 16) f.NxNSquareShapeAt(cp, 1, "60 + 1n Danimoth", 2, 50, -100, 100);
                    DoActions(SetSwitch("Passive - Nanami2", Set))
                EUDEndIf()
                f.NxNSquareShapeAt(cp, 1, "60 + 1n Danimoth", 2, 50, -100, 100)
                # (Line 17) f.DotShape(cp, 1, "60 + 1n Dragoon", -100, 100);
                f.DotShape(cp, 1, "60 + 1n Dragoon", -100, 100)
                # (Line 19) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                # (Line 20) Order("60 + 1n Danimoth", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 21) Order("60 + 1n Dragoon", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(Order("60 + 1n Danimoth", cp, "Anywhere", Attack, f.location[cp]))
                # (Line 23) f.SkillWait(cp, 160);
                DoActions(Order("60 + 1n Dragoon", cp, "Anywhere", Attack, f.location[cp]))
                f.SkillWait(cp, 160)
                # (Line 25) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 26) }
                # (Line 27) else if (f.loop[cp] == 1)
            if EUDElseIf()(f.loop[cp] == 1):
                # (Line 28) {
                # (Line 29) KillUnitAt(All, "60 + 1n Danimoth", "Anywhere", cp);
                # (Line 31) f.NxNSquareShapeAt(cp, 1, "60 + 1n Danimoth", 2, 50, 100, -100);
                DoActions(KillUnitAt(All, "60 + 1n Danimoth", "Anywhere", cp))
                f.NxNSquareShapeAt(cp, 1, "60 + 1n Danimoth", 2, 50, 100, -100)
                # (Line 32) f.DotShape(cp, 1, "60 + 1n Dragoon", 100, -100);
                f.DotShape(cp, 1, "60 + 1n Dragoon", 100, -100)
                # (Line 34) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                # (Line 35) Order("60 + 1n Danimoth", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 36) Order("60 + 1n Dragoon", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(Order("60 + 1n Danimoth", cp, "Anywhere", Attack, f.location[cp]))
                # (Line 38) f.SkillWait(cp, 160);
                DoActions(Order("60 + 1n Dragoon", cp, "Anywhere", Attack, f.location[cp]))
                f.SkillWait(cp, 160)
                # (Line 40) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 41) }
                # (Line 42) else if (f.loop[cp] == 2)
            if EUDElseIf()(f.loop[cp] == 2):
                # (Line 43) {
                # (Line 44) KillUnitAt(All, "60 + 1n Danimoth", "Anywhere", cp);
                # (Line 46) f.NxNSquareShapeAt(cp, 1, "60 + 1n Danimoth", 2, 50, 100, 100);
                DoActions(KillUnitAt(All, "60 + 1n Danimoth", "Anywhere", cp))
                f.NxNSquareShapeAt(cp, 1, "60 + 1n Danimoth", 2, 50, 100, 100)
                # (Line 47) f.DotShape(cp, 1, "60 + 1n Dragoon", 100, 100);
                f.DotShape(cp, 1, "60 + 1n Dragoon", 100, 100)
                # (Line 49) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                # (Line 50) Order("60 + 1n Danimoth", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 51) Order("60 + 1n Dragoon", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(Order("60 + 1n Danimoth", cp, "Anywhere", Attack, f.location[cp]))
                # (Line 53) f.SkillWait(cp, 160);
                DoActions(Order("60 + 1n Dragoon", cp, "Anywhere", Attack, f.location[cp]))
                f.SkillWait(cp, 160)
                # (Line 55) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 56) }
                # (Line 57) else if (f.loop[cp] == 3)
            if EUDElseIf()(f.loop[cp] == 3):
                # (Line 58) {
                # (Line 59) KillUnitAt(All, "60 + 1n Danimoth", "Anywhere", cp);
                # (Line 61) f.NxNSquareShapeAt(cp, 1, "60 + 1n Danimoth", 2, 50, -100, -100);
                DoActions(KillUnitAt(All, "60 + 1n Danimoth", "Anywhere", cp))
                f.NxNSquareShapeAt(cp, 1, "60 + 1n Danimoth", 2, 50, -100, -100)
                # (Line 62) f.DotShape(cp, 1, "60 + 1n Dragoon", -100, -100);
                f.DotShape(cp, 1, "60 + 1n Dragoon", -100, -100)
                # (Line 64) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                # (Line 65) Order("60 + 1n Danimoth", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 66) Order("60 + 1n Dragoon", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(Order("60 + 1n Danimoth", cp, "Anywhere", Attack, f.location[cp]))
                # (Line 68) f.SkillWait(cp, 160);
                DoActions(Order("60 + 1n Dragoon", cp, "Anywhere", Attack, f.location[cp]))
                f.SkillWait(cp, 160)
                # (Line 70) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 71) }
                # (Line 72) else if (f.loop[cp] == 4)
            if EUDElseIf()(f.loop[cp] == 4):
                # (Line 73) {
                # (Line 74) KillUnitAt(All, "60 + 1n Danimoth", "Anywhere", cp);
                # (Line 76) f.SkillWait(cp, 400);
                DoActions(KillUnitAt(All, "60 + 1n Danimoth", "Anywhere", cp))
                f.SkillWait(cp, 400)
                # (Line 78) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 79) }
                # (Line 80) else if (f.loop[cp] == 5)
            if EUDElseIf()(f.loop[cp] == 5):
                # (Line 81) {
                # (Line 82) f.Table_Sin(cp, 22, 75);
                f.Table_Sin(cp, 22, 75)
                # (Line 83) f.Table_Cos(cp, 22, 75);
                f.Table_Cos(cp, 22, 75)
                # (Line 85) f.SquareShape(cp, 1, "100 + 1n Dragoon", f.CosAngle[cp], f.SinAngle[cp]);
                f.SquareShape(cp, 1, "100 + 1n Dragoon", f.CosAngle[cp], f.SinAngle[cp])
                # (Line 86) KillUnitAt(All, "100 + 1n Dragoon", "Anywhere", cp);
                # (Line 88) f.SquareShape(cp, 1, "40 + 1n Mojo", f.CosAngle[cp], f.SinAngle[cp]);
                DoActions(KillUnitAt(All, "100 + 1n Dragoon", "Anywhere", cp))
                f.SquareShape(cp, 1, "40 + 1n Mojo", f.CosAngle[cp], f.SinAngle[cp])
                # (Line 89) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                # (Line 90) Order("40 + 1n Mojo", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 92) f.SkillWait(cp, 320);
                DoActions(Order("40 + 1n Mojo", cp, "Anywhere", Attack, f.location[cp]))
                f.SkillWait(cp, 320)
                # (Line 94) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 95) }
                # (Line 96) else if (f.loop[cp] == 6)
            if EUDElseIf()(f.loop[cp] == 6):
                # (Line 97) {
                # (Line 98) f.Table_Sin(cp, 67, 125);
                f.Table_Sin(cp, 67, 125)
                # (Line 99) f.Table_Cos(cp, 67, 125);
                f.Table_Cos(cp, 67, 125)
                # (Line 101) f.SquareShape(cp, 1, "100 + 1n Dragoon", f.CosAngle[cp], f.SinAngle[cp]);
                f.SquareShape(cp, 1, "100 + 1n Dragoon", f.CosAngle[cp], f.SinAngle[cp])
                # (Line 102) KillUnitAt(All, "100 + 1n Dragoon", "Anywhere", cp);
                # (Line 104) f.SquareShape(cp, 1, "60 + 1n Danimoth", f.CosAngle[cp], f.SinAngle[cp]);
                DoActions(KillUnitAt(All, "100 + 1n Dragoon", "Anywhere", cp))
                f.SquareShape(cp, 1, "60 + 1n Danimoth", f.CosAngle[cp], f.SinAngle[cp])
                # (Line 105) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                # (Line 106) Order("60 + 1n Danimoth", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 108) f.SkillWait(cp, 320);
                DoActions(Order("60 + 1n Danimoth", cp, "Anywhere", Attack, f.location[cp]))
                f.SkillWait(cp, 320)
                # (Line 110) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 111) }
                # (Line 112) else if (f.loop[cp] == 7)
            if EUDElseIf()(f.loop[cp] == 7):
                # (Line 113) {
                # (Line 114) f.Table_Sin(cp, 22, 175);
                f.Table_Sin(cp, 22, 175)
                # (Line 115) f.Table_Cos(cp, 22, 175);
                f.Table_Cos(cp, 22, 175)
                # (Line 117) f.SquareShape(cp, 1, "100 + 1n Dragoon", f.CosAngle[cp], f.SinAngle[cp]);
                f.SquareShape(cp, 1, "100 + 1n Dragoon", f.CosAngle[cp], f.SinAngle[cp])
                # (Line 118) KillUnitAt(All, "100 + 1n Dragoon", "Anywhere", cp);
                # (Line 120) f.SquareShape(cp, 1, "40 + 1n Mojo", f.CosAngle[cp], f.SinAngle[cp]);
                DoActions(KillUnitAt(All, "100 + 1n Dragoon", "Anywhere", cp))
                f.SquareShape(cp, 1, "40 + 1n Mojo", f.CosAngle[cp], f.SinAngle[cp])
                # (Line 121) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                # (Line 122) Order("40 + 1n Mojo", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 124) f.SkillWait(cp, 320);
                DoActions(Order("40 + 1n Mojo", cp, "Anywhere", Attack, f.location[cp]))
                f.SkillWait(cp, 320)
                # (Line 126) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 127) }
                # (Line 128) else if (f.loop[cp] == 8)
            if EUDElseIf()(f.loop[cp] == 8):
                # (Line 129) {
                # (Line 130) f.Table_Sin(cp, 67, 225);
                f.Table_Sin(cp, 67, 225)
                # (Line 131) f.Table_Cos(cp, 67, 225);
                f.Table_Cos(cp, 67, 225)
                # (Line 133) f.SquareShape(cp, 1, "100 + 1n Dragoon", f.CosAngle[cp], f.SinAngle[cp]);
                f.SquareShape(cp, 1, "100 + 1n Dragoon", f.CosAngle[cp], f.SinAngle[cp])
                # (Line 134) KillUnitAt(All, "100 + 1n Dragoon", "Anywhere", cp);
                # (Line 136) f.SquareShape(cp, 1, "60 + 1n Danimoth", f.CosAngle[cp], f.SinAngle[cp]);
                DoActions(KillUnitAt(All, "100 + 1n Dragoon", "Anywhere", cp))
                f.SquareShape(cp, 1, "60 + 1n Danimoth", f.CosAngle[cp], f.SinAngle[cp])
                # (Line 137) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                # (Line 138) Order("60 + 1n Danimoth", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 140) f.SkillWait(cp, 320);
                DoActions(Order("60 + 1n Danimoth", cp, "Anywhere", Attack, f.location[cp]))
                f.SkillWait(cp, 320)
                # (Line 142) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 143) }
                # (Line 144) else if (f.loop[cp] == 9)
            if EUDElseIf()(f.loop[cp] == 9):
                # (Line 145) {
                # (Line 146) f.Table_Sin(cp, 22, 250);
                f.Table_Sin(cp, 22, 250)
                # (Line 147) f.Table_Cos(cp, 22, 250);
                f.Table_Cos(cp, 22, 250)
                # (Line 149) f.SquareShape(cp, 1, "100 + 1n Dragoon", f.CosAngle[cp], f.SinAngle[cp]);
                f.SquareShape(cp, 1, "100 + 1n Dragoon", f.CosAngle[cp], f.SinAngle[cp])
                # (Line 150) KillUnitAt(All, "100 + 1n Dragoon", "Anywhere", cp);
                # (Line 152) f.SquareShape(cp, 1, "40 + 1n Gantrithor", f.CosAngle[cp], f.SinAngle[cp]);
                DoActions(KillUnitAt(All, "100 + 1n Dragoon", "Anywhere", cp))
                f.SquareShape(cp, 1, "40 + 1n Gantrithor", f.CosAngle[cp], f.SinAngle[cp])
                # (Line 153) ModifyUnitHangarCount(2, All, "40 + 1n Gantrithor", CurrentPlayer, "Anywhere");
                # (Line 154) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                DoActions(ModifyUnitHangarCount(2, All, "40 + 1n Gantrithor", CurrentPlayer, "Anywhere"))
                # (Line 155) Order("40 + 1n Gantrithor", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 157) f.SkillWait(cp, 320);
                DoActions(Order("40 + 1n Gantrithor", cp, "Anywhere", Attack, f.location[cp]))
                f.SkillWait(cp, 320)
                # (Line 159) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 160) }
                # (Line 161) else if (f.loop[cp] == 10)
            if EUDElseIf()(f.loop[cp] == 10):
                # (Line 162) {
                # (Line 163) f.Table_Sin(cp, 67, 275);
                f.Table_Sin(cp, 67, 275)
                # (Line 164) f.Table_Cos(cp, 67, 275);
                f.Table_Cos(cp, 67, 275)
                # (Line 166) f.SquareShape(cp, 1, "100 + 1n Dragoon", f.CosAngle[cp], f.SinAngle[cp]);
                f.SquareShape(cp, 1, "100 + 1n Dragoon", f.CosAngle[cp], f.SinAngle[cp])
                # (Line 167) KillUnitAt(All, "100 + 1n Dragoon", "Anywhere", cp);
                # (Line 169) f.SquareShape(cp, 1, "40 + 1n Gantrithor", f.CosAngle[cp], f.SinAngle[cp]);
                DoActions(KillUnitAt(All, "100 + 1n Dragoon", "Anywhere", cp))
                f.SquareShape(cp, 1, "40 + 1n Gantrithor", f.CosAngle[cp], f.SinAngle[cp])
                # (Line 170) ModifyUnitHangarCount(2, All, "40 + 1n Gantrithor", CurrentPlayer, "Anywhere");
                # (Line 171) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                DoActions(ModifyUnitHangarCount(2, All, "40 + 1n Gantrithor", CurrentPlayer, "Anywhere"))
                # (Line 172) Order("40 + 1n Gantrithor", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 174) f.SkillWait(cp, 720);
                DoActions(Order("40 + 1n Gantrithor", cp, "Anywhere", Attack, f.location[cp]))
                f.SkillWait(cp, 720)
                # (Line 176) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 177) }
                # (Line 178) else if (f.loop[cp] == 11)
            if EUDElseIf()(f.loop[cp] == 11):
                # (Line 179) {
                # (Line 180) f.SkillWait(cp, 80);
                f.SkillWait(cp, 80)
                # (Line 182) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 183) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 184) }
                # (Line 185) }
            EUDEndIf()
            # (Line 186) else if (f.count[cp] == 1)
        if EUDElseIf()(f.count[cp] == 1):
            # (Line 187) {
            # (Line 188) if (f.loop[cp] < 8)
            if EUDIf()(f.loop[cp] >= 8, neg=True):
                # (Line 189) {
                # (Line 216) f.SkillWait(cp, 160);
                f.SkillWait(cp, 160)
                # (Line 218) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 219) }
                # (Line 220) else if (f.loop[cp] == 8)
            if EUDElseIf()(f.loop[cp] == 8):
                # (Line 221) {
                # (Line 222) f.SkillWait(cp, 2160);
                f.SkillWait(cp, 2160)
                # (Line 224) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 225) }
                # (Line 226) else if (f.loop[cp] == 9)
            if EUDElseIf()(f.loop[cp] == 9):
                # (Line 227) {
                # (Line 228) f.SkillWait(cp, 80);
                f.SkillWait(cp, 80)
                # (Line 230) f.Voice_Routine(cp, 9);
                f.Voice_Routine(cp, 9)
                # (Line 232) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 233) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 234) }
                # (Line 236) }
            EUDEndIf()
            # (Line 237) else if (f.count[cp] == 2)
        if EUDElseIf()(f.count[cp] == 2):
            # (Line 238) {
            # (Line 239) if (f.loop[cp] == 0)
            if EUDIf()(f.loop[cp] == 0):
                # (Line 240) {
                # (Line 241) KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", cp);
                # (Line 243) f.SkillWait(cp, 1600);
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", cp))
                f.SkillWait(cp, 1600)
                # (Line 245) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 246) }
                # (Line 247) else if (f.loop[cp] == 1)
            if EUDElseIf()(f.loop[cp] == 1):
                # (Line 248) {
                # (Line 249) KillUnitAt(All, "60 + 1n Dragoon", "Anywhere", cp);
                # (Line 251) f.SkillWait(cp, 1600);
                DoActions(KillUnitAt(All, "60 + 1n Dragoon", "Anywhere", cp))
                f.SkillWait(cp, 1600)
                # (Line 253) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 254) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 255) }
                # (Line 257) }
            EUDEndIf()
            # (Line 259) else if (f.count[cp] == 3)
        if EUDElseIf()(f.count[cp] == 3):
            # (Line 260) {
            # (Line 261) KillUnitAt(All, "60 + 1n Danimoth", "Anywhere", cp);
            # (Line 262) KillUnitAt(All, "40 + 1n Mojo", "Anywhere", cp);
            DoActions(KillUnitAt(All, "60 + 1n Danimoth", "Anywhere", cp))
            # (Line 263) KillUnitAt(All, "60 + 1n High Templar", "Anywhere", cp);
            DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", cp))
            # (Line 264) KillUnitAt(All, "40 + 1n Zealot", "Anywhere", cp);
            DoActions(KillUnitAt(All, "60 + 1n High Templar", "Anywhere", cp))
            # (Line 265) SetSwitch("Passive - Nanami1", Clear);
            DoActions(KillUnitAt(All, "40 + 1n Zealot", "Anywhere", cp))
            # (Line 266) SetSwitch("Passive - Nanami2", Clear);
            DoActions(SetSwitch("Passive - Nanami1", Clear))
            # (Line 268) f.SkillEnd(cp);
            DoActions(SetSwitch("Passive - Nanami2", Clear))
            f.SkillEnd(cp)
            # (Line 269) }
            # (Line 270) }
        EUDEndIf()
        # (Line 271) if (f.delayB[cp] == 0)
    EUDEndIf()
    if EUDIf()(f.delayB[cp] == 0):
        # (Line 272) {
        # (Line 273) if (f.count[cp] < 3)
        if EUDIf()(f.count[cp] >= 3, neg=True):
            # (Line 274) {
            # (Line 275) if (f.loopB[cp] == 0)
            if EUDIf()(f.loopB[cp] == 0):
                # (Line 276) {
                # (Line 277) f.SquareShape(cp, 1, " Unit. Schnee", 75, 75);
                f.SquareShape(cp, 1, " Unit. Schnee", 75, 75)
                # (Line 279) KillUnitAt(All, " Unit. Schnee", "Anywhere", cp);
                # (Line 281) f.SkillWaitB(cp, 160);
                DoActions(KillUnitAt(All, " Unit. Schnee", "Anywhere", cp))
                f.SkillWaitB(cp, 160)
                # (Line 283) f.loopB[cp] += 1;
                _ARRW(f.loopB, cp).__iadd__(1)
                # (Line 284) }
                # (Line 285) else if (f.loopB[cp] == 1)
            if EUDElseIf()(f.loopB[cp] == 1):
                # (Line 286) {
                # (Line 287) f.SquareShape(cp, 1, "60 + 1n Archon", 150, 0);
                f.SquareShape(cp, 1, "60 + 1n Archon", 150, 0)
                # (Line 289) KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp);
                # (Line 291) f.SkillWaitB(cp, 160);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp))
                f.SkillWaitB(cp, 160)
                # (Line 293) f.loopB[cp] += 1;
                _ARRW(f.loopB, cp).__iadd__(1)
                # (Line 294) }
                # (Line 295) else if (f.loopB[cp] == 2)
            if EUDElseIf()(f.loopB[cp] == 2):
                # (Line 296) {
                # (Line 297) f.SquareShape(cp, 1, "Protoss Dark Archon", 150, 75);
                f.SquareShape(cp, 1, "Protoss Dark Archon", 150, 75)
                # (Line 299) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp);
                # (Line 301) f.SkillWaitB(cp, 160);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp))
                f.SkillWaitB(cp, 160)
                # (Line 303) f.loopB[cp] += 1;
                _ARRW(f.loopB, cp).__iadd__(1)
                # (Line 304) }
                # (Line 305) else if (f.loopB[cp] == 3)
            if EUDElseIf()(f.loopB[cp] == 3):
                # (Line 306) {
                # (Line 307) f.SquareShape(cp, 1, "60 + 1n Archon", 150, 150);
                f.SquareShape(cp, 1, "60 + 1n Archon", 150, 150)
                # (Line 309) KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp);
                # (Line 311) f.SkillWaitB(cp, 160);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp))
                f.SkillWaitB(cp, 160)
                # (Line 313) f.loopB[cp] += 1;
                _ARRW(f.loopB, cp).__iadd__(1)
                # (Line 314) }
                # (Line 315) else if (f.loopB[cp] == 4)
            if EUDElseIf()(f.loopB[cp] == 4):
                # (Line 316) {
                # (Line 317) f.SquareShape(cp, 1, "Protoss Dark Archon", 75, 150);
                f.SquareShape(cp, 1, "Protoss Dark Archon", 75, 150)
                # (Line 319) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp);
                # (Line 321) f.SkillWaitB(cp, 160);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp))
                f.SkillWaitB(cp, 160)
                # (Line 323) f.loopB[cp] = 0;
                _ARRW(f.loopB, cp) << (0)
                # (Line 324) }
                # (Line 325) }
            EUDEndIf()
            # (Line 326) }
        EUDEndIf()
        # (Line 327) if (f.delayC[cp] == 0)
    EUDEndIf()
    if EUDIf()(f.delayC[cp] == 0):
        # (Line 328) {
        # (Line 329) if (f.count[cp] < 1)
        if EUDIf()(f.count[cp] >= 1, neg=True):
            # (Line 330) {
            # (Line 331) if (f.loopC[cp] == 8) f.loopC[cp] = 0;
            if EUDIf()(f.loopC[cp] == 8):
                _ARRW(f.loopC, cp) << (0)
                # (Line 332) if (f.loopC[cp] < 4)
            EUDEndIf()
            if EUDIf()(f.loopC[cp] >= 4, neg=True):
                # (Line 333) {
                # (Line 334) f.DotShape(cp, 1, " Unit. Schnee", 160 - 40 * f.loopC[cp], 40 * f.loopC[cp]);
                f.DotShape(cp, 1, " Unit. Schnee", 160 - 40 * f.loopC[cp], 40 * f.loopC[cp])
                # (Line 335) f.DotShape(cp, 1, " Unit. Schnee", -160 + 40 * f.loopC[cp], -40 * f.loopC[cp]);
                f.DotShape(cp, 1, " Unit. Schnee", -160 + 40 * f.loopC[cp], -40 * f.loopC[cp])
                # (Line 336) f.DotShape(cp, 1, "40 + 3n Zeratul", -40 * f.loopC[cp], 160 - 40 * f.loopC[cp]);
                f.DotShape(cp, 1, "40 + 3n Zeratul", -40 * f.loopC[cp], 160 - 40 * f.loopC[cp])
                # (Line 337) f.DotShape(cp, 1, "40 + 3n Zeratul", 40 * f.loopC[cp], -160 + 40 * f.loopC[cp]);
                f.DotShape(cp, 1, "40 + 3n Zeratul", 40 * f.loopC[cp], -160 + 40 * f.loopC[cp])
                # (Line 339) KillUnitAt(All, " Unit. Schnee", "Anywhere", cp);
                # (Line 340) KillUnitAt(All, "40 + 3n Zeratul", "Anywhere", cp);
                DoActions(KillUnitAt(All, " Unit. Schnee", "Anywhere", cp))
                # (Line 342) f.SkillWaitC(cp, 320);
                DoActions(KillUnitAt(All, "40 + 3n Zeratul", "Anywhere", cp))
                f.SkillWaitC(cp, 320)
                # (Line 344) f.loopC[cp] += 1;
                _ARRW(f.loopC, cp).__iadd__(1)
                # (Line 345) }
                # (Line 346) else if (f.loopC[cp] < 8)
            if EUDElseIf()(f.loopC[cp] >= 8, neg=True):
                # (Line 347) {
                # (Line 348) f.DotShape(cp, 1, " Unit. Schnee", -40 * (f.loopC[cp] - 4), 160 - 40 * (f.loopC[cp] - 4));
                f.DotShape(cp, 1, " Unit. Schnee", -40 * (f.loopC[cp] - 4), 160 - 40 * (f.loopC[cp] - 4))
                # (Line 349) f.DotShape(cp, 1, " Unit. Schnee", 40 * (f.loopC[cp] - 4), -160 + 40 * (f.loopC[cp] - 4));
                f.DotShape(cp, 1, " Unit. Schnee", 40 * (f.loopC[cp] - 4), -160 + 40 * (f.loopC[cp] - 4))
                # (Line 350) f.DotShape(cp, 1, "40 + 3n Zeratul", 160 - 40 * (f.loopC[cp] - 4), 40 * (f.loopC[cp] - 4));
                f.DotShape(cp, 1, "40 + 3n Zeratul", 160 - 40 * (f.loopC[cp] - 4), 40 * (f.loopC[cp] - 4))
                # (Line 351) f.DotShape(cp, 1, "40 + 3n Zeratul", -160 + 40 * (f.loopC[cp] - 4), -40 * (f.loopC[cp] - 4));
                f.DotShape(cp, 1, "40 + 3n Zeratul", -160 + 40 * (f.loopC[cp] - 4), -40 * (f.loopC[cp] - 4))
                # (Line 353) KillUnitAt(All, " Unit. Schnee", "Anywhere", cp);
                # (Line 354) KillUnitAt(All, "40 + 3n Zeratul", "Anywhere", cp);
                DoActions(KillUnitAt(All, " Unit. Schnee", "Anywhere", cp))
                # (Line 356) f.SkillWaitC(cp, 320);
                DoActions(KillUnitAt(All, "40 + 3n Zeratul", "Anywhere", cp))
                f.SkillWaitC(cp, 320)
                # (Line 358) f.loopC[cp] += 1;
                _ARRW(f.loopC, cp).__iadd__(1)
                # (Line 359) }
                # (Line 360) }
            EUDEndIf()
            # (Line 361) else if (f.count[cp] < 2 && f.count[cp] > 0)
        if EUDElseIf()(EUDSCAnd()(f.count[cp] >= 2, neg=True)(f.count[cp] <= 0, neg=True)()):
            # (Line 362) {
            # (Line 363) if (f.loopC[cp] == 8) f.loopC[cp] = 0;
            if EUDIf()(f.loopC[cp] == 8):
                _ARRW(f.loopC, cp) << (0)
                # (Line 364) if (f.loopC[cp] < 4)
            EUDEndIf()
            if EUDIf()(f.loopC[cp] >= 4, neg=True):
                # (Line 365) {
                # (Line 366) f.DotShape(cp, 1, " Unit. Hoffnung 25000", 160 - 40 * f.loopC[cp], 40 * f.loopC[cp]);
                f.DotShape(cp, 1, " Unit. Hoffnung 25000", 160 - 40 * f.loopC[cp], 40 * f.loopC[cp])
                # (Line 367) f.DotShape(cp, 1, " Unit. Hoffnung 25000", -160 + 40 * f.loopC[cp], -40 * f.loopC[cp]);
                f.DotShape(cp, 1, " Unit. Hoffnung 25000", -160 + 40 * f.loopC[cp], -40 * f.loopC[cp])
                # (Line 368) f.DotShape(cp, 1, "100 + 1n Dragoon", -40 * f.loopC[cp], 160 - 40 * f.loopC[cp]);
                f.DotShape(cp, 1, "100 + 1n Dragoon", -40 * f.loopC[cp], 160 - 40 * f.loopC[cp])
                # (Line 369) f.DotShape(cp, 1, "100 + 1n Dragoon", 40 * f.loopC[cp], -160 + 40 * f.loopC[cp]);
                f.DotShape(cp, 1, "100 + 1n Dragoon", 40 * f.loopC[cp], -160 + 40 * f.loopC[cp])
                # (Line 371) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp);
                # (Line 372) KillUnitAt(All, "100 + 1n Dragoon", "Anywhere", cp);
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp))
                # (Line 374) f.SkillWaitC(cp, 320);
                DoActions(KillUnitAt(All, "100 + 1n Dragoon", "Anywhere", cp))
                f.SkillWaitC(cp, 320)
                # (Line 376) f.loopC[cp] += 1;
                _ARRW(f.loopC, cp).__iadd__(1)
                # (Line 377) }
                # (Line 378) else if (f.loopC[cp] < 8)
            if EUDElseIf()(f.loopC[cp] >= 8, neg=True):
                # (Line 379) {
                # (Line 380) f.DotShape(cp, 1, " Unit. Hoffnung 25000", -40 * (f.loopC[cp] - 4), 160 - 40 * (f.loopC[cp] - 4));
                f.DotShape(cp, 1, " Unit. Hoffnung 25000", -40 * (f.loopC[cp] - 4), 160 - 40 * (f.loopC[cp] - 4))
                # (Line 381) f.DotShape(cp, 1, " Unit. Hoffnung 25000", 40 * (f.loopC[cp] - 4), -160 + 40 * (f.loopC[cp] - 4));
                f.DotShape(cp, 1, " Unit. Hoffnung 25000", 40 * (f.loopC[cp] - 4), -160 + 40 * (f.loopC[cp] - 4))
                # (Line 382) f.DotShape(cp, 1, "100 + 1n Dragoon", 160 - 40 * (f.loopC[cp] - 4), 40 * (f.loopC[cp] - 4));
                f.DotShape(cp, 1, "100 + 1n Dragoon", 160 - 40 * (f.loopC[cp] - 4), 40 * (f.loopC[cp] - 4))
                # (Line 383) f.DotShape(cp, 1, "100 + 1n Dragoon", -160 + 40 * (f.loopC[cp] - 4), -40 * (f.loopC[cp] - 4));
                f.DotShape(cp, 1, "100 + 1n Dragoon", -160 + 40 * (f.loopC[cp] - 4), -40 * (f.loopC[cp] - 4))
                # (Line 385) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp);
                # (Line 386) KillUnitAt(All, "100 + 1n Dragoon", "Anywhere", cp);
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp))
                # (Line 388) f.SkillWaitC(cp, 320);
                DoActions(KillUnitAt(All, "100 + 1n Dragoon", "Anywhere", cp))
                f.SkillWaitC(cp, 320)
                # (Line 390) f.loopC[cp] += 1;
                _ARRW(f.loopC, cp).__iadd__(1)
                # (Line 391) }
                # (Line 392) }
            EUDEndIf()
            # (Line 395) }
        EUDEndIf()
        # (Line 396) }
    EUDEndIf()
