## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import Function as f;
import Function as f
# (Line 3) function main(cp)
# (Line 4) {
@EUDFunc
def f_main(cp):
    # (Line 5) f.HoldPosition(cp);
    f.HoldPosition(cp)
    # (Line 6) f.BanReturn(cp);
    f.BanReturn(cp)
    # (Line 7) MoveLocation("24.Nanami_Bozo", f.heroID[cp], cp, "Anywhere");
    # (Line 9) if (f.delay[cp] == 0)
    DoActions(MoveLocation("24.Nanami_Bozo", f.heroID[cp], cp, "Anywhere"))
    if EUDIf()(f.delay[cp] == 0):
        # (Line 10) {
        # (Line 11) if (f.count[cp] == 0)
        if EUDIf()(f.count[cp] == 0):
            # (Line 12) {
            # (Line 13) if (f.loop[cp] == 0)
            if EUDIf()(f.loop[cp] == 0):
                # (Line 14) {
                # (Line 15) if (cp < 3) SetSwitch("Passive - Nanami1", Set);
                if EUDIf()(cp >= 3, neg=True):
                    # (Line 16) else SetSwitch("Passive - Nanami2", Set);
                    DoActions(SetSwitch("Passive - Nanami1", Set))
                if EUDElse()():
                    # (Line 18) f.DotShape(cp, 1, "60 + 1n Archon", -100, 100);
                    DoActions(SetSwitch("Passive - Nanami2", Set))
                EUDEndIf()
                f.DotShape(cp, 1, "60 + 1n Archon", -100, 100)
                # (Line 19) f.DotShape(cp, 1, "60 + 1n Siege", -100, 100);
                f.DotShape(cp, 1, "60 + 1n Siege", -100, 100)
                # (Line 20) KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp);
                # (Line 22) f.SkillWait(cp, 160);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp))
                f.SkillWait(cp, 160)
                # (Line 24) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 25) }
                # (Line 26) else if (f.loop[cp] == 1)
            if EUDElseIf()(f.loop[cp] == 1):
                # (Line 27) {
                # (Line 28) f.DotShape(cp, 1, "60 + 1n Archon", 100, -100);
                f.DotShape(cp, 1, "60 + 1n Archon", 100, -100)
                # (Line 29) f.DotShape(cp, 1, "60 + 1n Siege", 100, -100);
                f.DotShape(cp, 1, "60 + 1n Siege", 100, -100)
                # (Line 30) KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp);
                # (Line 32) f.SkillWait(cp, 160);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp))
                f.SkillWait(cp, 160)
                # (Line 34) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 35) }
                # (Line 36) else if (f.loop[cp] == 2)
            if EUDElseIf()(f.loop[cp] == 2):
                # (Line 37) {
                # (Line 38) f.DotShape(cp, 1, "60 + 1n Archon", 100, 100);
                f.DotShape(cp, 1, "60 + 1n Archon", 100, 100)
                # (Line 39) f.DotShape(cp, 1, "60 + 1n Siege", 100, 100);
                f.DotShape(cp, 1, "60 + 1n Siege", 100, 100)
                # (Line 40) KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp);
                # (Line 42) f.SkillWait(cp, 160);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp))
                f.SkillWait(cp, 160)
                # (Line 44) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 45) }
                # (Line 46) else if (f.loop[cp] == 3)
            if EUDElseIf()(f.loop[cp] == 3):
                # (Line 47) {
                # (Line 48) f.DotShape(cp, 1, "60 + 1n Archon", -100, -100);
                f.DotShape(cp, 1, "60 + 1n Archon", -100, -100)
                # (Line 49) f.DotShape(cp, 1, "60 + 1n Siege", -100, -100);
                f.DotShape(cp, 1, "60 + 1n Siege", -100, -100)
                # (Line 50) KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp);
                # (Line 52) f.SkillWait(cp, 160);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp))
                f.SkillWait(cp, 160)
                # (Line 54) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 55) }
                # (Line 56) else if (f.loop[cp] == 4)
            if EUDElseIf()(f.loop[cp] == 4):
                # (Line 57) {
                # (Line 58) f.DotShape(cp, 1, " Unit. Hoffnung 25000", -200, 0);
                f.DotShape(cp, 1, " Unit. Hoffnung 25000", -200, 0)
                # (Line 59) f.DotShape(cp, 1, "60 + 1n Siege", -200, 0);
                f.DotShape(cp, 1, "60 + 1n Siege", -200, 0)
                # (Line 60) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp);
                # (Line 62) f.SkillWait(cp, 160);
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp))
                f.SkillWait(cp, 160)
                # (Line 64) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 65) }
                # (Line 66) else if (f.loop[cp] == 5)
            if EUDElseIf()(f.loop[cp] == 5):
                # (Line 67) {
                # (Line 68) f.DotShape(cp, 1, " Unit. Hoffnung 25000", 200, 0);
                f.DotShape(cp, 1, " Unit. Hoffnung 25000", 200, 0)
                # (Line 69) f.DotShape(cp, 1, "60 + 1n Siege", 200, 0);
                f.DotShape(cp, 1, "60 + 1n Siege", 200, 0)
                # (Line 70) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp);
                # (Line 72) f.SkillWait(cp, 160);
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp))
                f.SkillWait(cp, 160)
                # (Line 74) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 75) }
                # (Line 76) else if (f.loop[cp] == 6)
            if EUDElseIf()(f.loop[cp] == 6):
                # (Line 77) {
                # (Line 78) f.DotShape(cp, 1, " Unit. Hoffnung 25000", 0, 200);
                f.DotShape(cp, 1, " Unit. Hoffnung 25000", 0, 200)
                # (Line 79) f.DotShape(cp, 1, "60 + 1n Siege", 0, 200);
                f.DotShape(cp, 1, "60 + 1n Siege", 0, 200)
                # (Line 80) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp);
                # (Line 82) f.SkillWait(cp, 160);
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp))
                f.SkillWait(cp, 160)
                # (Line 84) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 85) }
                # (Line 86) else if (f.loop[cp] == 7)
            if EUDElseIf()(f.loop[cp] == 7):
                # (Line 87) {
                # (Line 88) f.DotShape(cp, 1, " Unit. Hoffnung 25000", 0, -200);
                f.DotShape(cp, 1, " Unit. Hoffnung 25000", 0, -200)
                # (Line 89) f.DotShape(cp, 1, "60 + 1n Siege", 0, -200);
                f.DotShape(cp, 1, "60 + 1n Siege", 0, -200)
                # (Line 90) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp);
                # (Line 92) f.SkillWait(cp, 160);
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp))
                f.SkillWait(cp, 160)
                # (Line 94) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 95) }
                # (Line 96) else if (f.loop[cp] == 8)
            if EUDElseIf()(f.loop[cp] == 8):
                # (Line 97) {
                # (Line 98) f.EdgeShape(cp, 1, " Unit. Hoffnung 25000", 0, 7, 150);
                f.EdgeShape(cp, 1, " Unit. Hoffnung 25000", 0, 7, 150)
                # (Line 99) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp);
                # (Line 101) f.SkillWait(cp, 160);
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp))
                f.SkillWait(cp, 160)
                # (Line 103) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 104) }
                # (Line 105) else if (f.loop[cp] == 9)
            if EUDElseIf()(f.loop[cp] == 9):
                # (Line 106) {
                # (Line 107) f.EdgeShape(cp, 1, " Unit. Hoffnung 25000", 45, 7, 150);
                f.EdgeShape(cp, 1, " Unit. Hoffnung 25000", 45, 7, 150)
                # (Line 108) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp);
                # (Line 109) f.EdgeShape(cp, 1, "60 + 1n Danimoth", 0, 3, 150);
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp))
                f.EdgeShape(cp, 1, "60 + 1n Danimoth", 0, 3, 150)
                # (Line 111) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                # (Line 112) Order("60 + 1n Danimoth", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 114) f.SkillWait(cp, 1840);
                DoActions(Order("60 + 1n Danimoth", cp, "Anywhere", Attack, f.location[cp]))
                f.SkillWait(cp, 1840)
                # (Line 116) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 117) }
                # (Line 118) else if (f.loop[cp] == 10)
            if EUDElseIf()(f.loop[cp] == 10):
                # (Line 119) {
                # (Line 120) f.SkillWait(cp, 80);
                f.SkillWait(cp, 80)
                # (Line 122) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 123) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 124) }
                # (Line 125) }
            EUDEndIf()
            # (Line 126) else if (f.count[cp] == 1)
        if EUDElseIf()(f.count[cp] == 1):
            # (Line 127) {
            # (Line 128) if (f.loop[cp] == 0)
            if EUDIf()(f.loop[cp] == 0):
                # (Line 129) {
                # (Line 130) f.EdgeShape(cp, 1, "60 + 1n High Templar", 45, 5, 100);
                f.EdgeShape(cp, 1, "60 + 1n High Templar", 45, 5, 100)
                # (Line 131) KillUnitAt(All, "60 + 1n High Templar", "Anywhere", cp);
                # (Line 133) f.SkillWait(cp, 160);
                DoActions(KillUnitAt(All, "60 + 1n High Templar", "Anywhere", cp))
                f.SkillWait(cp, 160)
                # (Line 135) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 136) }
                # (Line 137) else if (f.loop[cp] == 1)
            if EUDElseIf()(f.loop[cp] == 1):
                # (Line 138) {
                # (Line 139) f.EdgeShape(cp, 1, "60 + 1n High Templar", 0, 5, 100);
                f.EdgeShape(cp, 1, "60 + 1n High Templar", 0, 5, 100)
                # (Line 140) KillUnitAt(All, "60 + 1n High Templar", "Anywhere", cp);
                # (Line 142) f.SkillWait(cp, 160);
                DoActions(KillUnitAt(All, "60 + 1n High Templar", "Anywhere", cp))
                f.SkillWait(cp, 160)
                # (Line 144) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 145) }
                # (Line 146) else if (f.loop[cp] == 2)
            if EUDElseIf()(f.loop[cp] == 2):
                # (Line 147) {
                # (Line 148) f.EdgeShape(cp, 1, "60 + 1n High Templar", 45, 5, 150);
                f.EdgeShape(cp, 1, "60 + 1n High Templar", 45, 5, 150)
                # (Line 149) KillUnitAt(All, "60 + 1n High Templar", "Anywhere", cp);
                # (Line 151) f.SkillWait(cp, 160);
                DoActions(KillUnitAt(All, "60 + 1n High Templar", "Anywhere", cp))
                f.SkillWait(cp, 160)
                # (Line 153) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 154) }
                # (Line 155) else if (f.loop[cp] == 3)
            if EUDElseIf()(f.loop[cp] == 3):
                # (Line 156) {
                # (Line 157) f.EdgeShape(cp, 1, "60 + 1n High Templar", 0, 5, 150);
                f.EdgeShape(cp, 1, "60 + 1n High Templar", 0, 5, 150)
                # (Line 158) KillUnitAt(All, "60 + 1n High Templar", "Anywhere", cp);
                # (Line 160) f.SkillWait(cp, 160);
                DoActions(KillUnitAt(All, "60 + 1n High Templar", "Anywhere", cp))
                f.SkillWait(cp, 160)
                # (Line 162) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 163) }
                # (Line 164) else if (f.loop[cp] == 4)
            if EUDElseIf()(f.loop[cp] == 4):
                # (Line 165) {
                # (Line 166) f.EdgeShape(cp, 1, "100 + 1n Dragoon", 45, 5, 150);
                f.EdgeShape(cp, 1, "100 + 1n Dragoon", 45, 5, 150)
                # (Line 167) KillUnitAt(All, "100 + 1n Dragoon", "Anywhere", cp);
                # (Line 169) f.EdgeShape(cp, 1, "40 + 1n Mojo", 45, 3, 150);
                DoActions(KillUnitAt(All, "100 + 1n Dragoon", "Anywhere", cp))
                f.EdgeShape(cp, 1, "40 + 1n Mojo", 45, 3, 150)
                # (Line 170) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                # (Line 171) Order("40 + 1n Mojo", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 173) f.SkillWait(cp, 160);
                DoActions(Order("40 + 1n Mojo", cp, "Anywhere", Attack, f.location[cp]))
                f.SkillWait(cp, 160)
                # (Line 175) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 176) }
                # (Line 177) else if (f.loop[cp] == 5)
            if EUDElseIf()(f.loop[cp] == 5):
                # (Line 178) {
                # (Line 179) f.EdgeShape(cp, 1, "100 + 1n Dragoon", 0, 5, 150);
                f.EdgeShape(cp, 1, "100 + 1n Dragoon", 0, 5, 150)
                # (Line 180) KillUnitAt(All, "100 + 1n Dragoon", "Anywhere", cp);
                # (Line 182) f.SkillWait(cp, 1120);
                DoActions(KillUnitAt(All, "100 + 1n Dragoon", "Anywhere", cp))
                f.SkillWait(cp, 1120)
                # (Line 184) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 185) }
                # (Line 186) else if (f.loop[cp] == 6)
            if EUDElseIf()(f.loop[cp] == 6):
                # (Line 187) {
                # (Line 188) f.SkillWait(cp, 80);
                f.SkillWait(cp, 80)
                # (Line 190) f.Voice_Routine(cp, 7);
                f.Voice_Routine(cp, 7)
                # (Line 192) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 193) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 194) f.loopC[cp] = 0;
                _ARRW(f.loopC, cp) << (0)
                # (Line 195) }
                # (Line 197) }
            EUDEndIf()
            # (Line 198) else if (f.count[cp] == 2)
        if EUDElseIf()(f.count[cp] == 2):
            # (Line 199) {
            # (Line 200) if (f.loop[cp] == 0)
            if EUDIf()(f.loop[cp] == 0):
                # (Line 201) {
                # (Line 202) f.EdgeShape(cp, 1, "60 + 1n High Templar", 45, 3, 100);
                f.EdgeShape(cp, 1, "60 + 1n High Templar", 45, 3, 100)
                # (Line 203) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                # (Line 204) MoveUnit(All, "60 + 1n High Templar", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 205) Order("60 + 1n High Templar", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveUnit(All, "60 + 1n High Templar", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                # (Line 207) f.SkillWait(cp, 3120);
                DoActions(Order("60 + 1n High Templar", cp, "Anywhere", Attack, f.location[cp]))
                f.SkillWait(cp, 3120)
                # (Line 209) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 210) }
                # (Line 211) else if (f.loop[cp] == 1)
            if EUDElseIf()(f.loop[cp] == 1):
                # (Line 212) {
                # (Line 213) f.SkillWait(cp, 80);
                f.SkillWait(cp, 80)
                # (Line 215) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 216) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 217) }
                # (Line 219) }
            EUDEndIf()
            # (Line 221) else if (f.count[cp] == 3)
        if EUDElseIf()(f.count[cp] == 3):
            # (Line 222) {
            # (Line 223) KillUnitAt(All, "60 + 1n Danimoth", "Anywhere", cp);
            # (Line 224) KillUnitAt(All, "60 + 1n Siege", "Anywhere", cp);
            DoActions(KillUnitAt(All, "60 + 1n Danimoth", "Anywhere", cp))
            # (Line 225) KillUnitAt(All, "40 + 1n Mojo", "Anywhere", cp);
            DoActions(KillUnitAt(All, "60 + 1n Siege", "Anywhere", cp))
            # (Line 226) KillUnitAt(All, "60 + 1n High Templar", "Anywhere", cp);
            DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", cp))
            # (Line 227) SetSwitch("Passive - Nanami1", Clear);
            DoActions(KillUnitAt(All, "60 + 1n High Templar", "Anywhere", cp))
            # (Line 228) SetSwitch("Passive - Nanami2", Clear);
            DoActions(SetSwitch("Passive - Nanami1", Clear))
            # (Line 230) f.SkillEnd(cp);
            DoActions(SetSwitch("Passive - Nanami2", Clear))
            f.SkillEnd(cp)
            # (Line 231) }
            # (Line 232) }
        EUDEndIf()
        # (Line 233) if (f.delayB[cp] == 0)
    EUDEndIf()
    if EUDIf()(f.delayB[cp] == 0):
        # (Line 234) {
        # (Line 235) if (f.count[cp] < 3)
        if EUDIf()(f.count[cp] >= 3, neg=True):
            # (Line 236) {
            # (Line 237) if (f.loopB[cp] == 0)
            if EUDIf()(f.loopB[cp] == 0):
                # (Line 238) {
                # (Line 239) f.SquareShape(cp, 1, " Unit. Schnee", 75, 75);
                f.SquareShape(cp, 1, " Unit. Schnee", 75, 75)
                # (Line 241) KillUnitAt(All, " Unit. Schnee", "Anywhere", cp);
                # (Line 243) f.SkillWaitB(cp, 160);
                DoActions(KillUnitAt(All, " Unit. Schnee", "Anywhere", cp))
                f.SkillWaitB(cp, 160)
                # (Line 245) f.loopB[cp] += 1;
                _ARRW(f.loopB, cp).__iadd__(1)
                # (Line 246) }
                # (Line 247) else if (f.loopB[cp] == 1)
            if EUDElseIf()(f.loopB[cp] == 1):
                # (Line 248) {
                # (Line 249) f.SquareShape(cp, 1, "60 + 1n Archon", 150, 0);
                f.SquareShape(cp, 1, "60 + 1n Archon", 150, 0)
                # (Line 251) KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp);
                # (Line 253) f.SkillWaitB(cp, 160);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp))
                f.SkillWaitB(cp, 160)
                # (Line 255) f.loopB[cp] += 1;
                _ARRW(f.loopB, cp).__iadd__(1)
                # (Line 256) }
                # (Line 257) else if (f.loopB[cp] == 2)
            if EUDElseIf()(f.loopB[cp] == 2):
                # (Line 258) {
                # (Line 259) f.SquareShape(cp, 1, "Protoss Dark Archon", 150, 75);
                f.SquareShape(cp, 1, "Protoss Dark Archon", 150, 75)
                # (Line 261) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp);
                # (Line 263) f.SkillWaitB(cp, 160);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp))
                f.SkillWaitB(cp, 160)
                # (Line 265) f.loopB[cp] += 1;
                _ARRW(f.loopB, cp).__iadd__(1)
                # (Line 266) }
                # (Line 267) else if (f.loopB[cp] == 3)
            if EUDElseIf()(f.loopB[cp] == 3):
                # (Line 268) {
                # (Line 269) f.SquareShape(cp, 1, "60 + 1n Archon", 150, 150);
                f.SquareShape(cp, 1, "60 + 1n Archon", 150, 150)
                # (Line 271) KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp);
                # (Line 273) f.SkillWaitB(cp, 160);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp))
                f.SkillWaitB(cp, 160)
                # (Line 275) f.loopB[cp] += 1;
                _ARRW(f.loopB, cp).__iadd__(1)
                # (Line 276) }
                # (Line 277) else if (f.loopB[cp] == 4)
            if EUDElseIf()(f.loopB[cp] == 4):
                # (Line 278) {
                # (Line 279) f.SquareShape(cp, 1, "Protoss Dark Archon", 75, 150);
                f.SquareShape(cp, 1, "Protoss Dark Archon", 75, 150)
                # (Line 281) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp);
                # (Line 283) f.SkillWaitB(cp, 160);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp))
                f.SkillWaitB(cp, 160)
                # (Line 285) f.loopB[cp] = 0;
                _ARRW(f.loopB, cp) << (0)
                # (Line 286) }
                # (Line 287) }
            EUDEndIf()
            # (Line 288) }
        EUDEndIf()
        # (Line 289) if (f.delayC[cp] == 0)
    EUDEndIf()
    if EUDIf()(f.delayC[cp] == 0):
        # (Line 290) {
        # (Line 291) if (f.count[cp] < 2 && f.count[cp] > 0)
        if EUDIf()(EUDSCAnd()(f.count[cp] >= 2, neg=True)(f.count[cp] <= 0, neg=True)()):
            # (Line 292) {
            # (Line 293) if (f.loopC[cp] == 8) f.loopC[cp] = 0;
            if EUDIf()(f.loopC[cp] == 8):
                _ARRW(f.loopC, cp) << (0)
                # (Line 294) if (f.loopC[cp] < 4)
            EUDEndIf()
            if EUDIf()(f.loopC[cp] >= 4, neg=True):
                # (Line 295) {
                # (Line 296) f.DotShape(cp, 1, " Unit. Schnee", 160 - 40 * f.loopC[cp], 40 * f.loopC[cp]);
                f.DotShape(cp, 1, " Unit. Schnee", 160 - 40 * f.loopC[cp], 40 * f.loopC[cp])
                # (Line 297) f.DotShape(cp, 1, " Unit. Schnee", -160 + 40 * f.loopC[cp], -40 * f.loopC[cp]);
                f.DotShape(cp, 1, " Unit. Schnee", -160 + 40 * f.loopC[cp], -40 * f.loopC[cp])
                # (Line 298) f.DotShape(cp, 1, "40 + 1n Zealot", -40 * f.loopC[cp], 160 - 40 * f.loopC[cp]);
                f.DotShape(cp, 1, "40 + 1n Zealot", -40 * f.loopC[cp], 160 - 40 * f.loopC[cp])
                # (Line 299) f.DotShape(cp, 1, "40 + 1n Zealot", 40 * f.loopC[cp], -160 + 40 * f.loopC[cp]);
                f.DotShape(cp, 1, "40 + 1n Zealot", 40 * f.loopC[cp], -160 + 40 * f.loopC[cp])
                # (Line 301) KillUnitAt(All, " Unit. Schnee", "Anywhere", cp);
                # (Line 302) KillUnitAt(All, "40 + 1n Zealot", "Anywhere", cp);
                DoActions(KillUnitAt(All, " Unit. Schnee", "Anywhere", cp))
                # (Line 304) f.SkillWaitC(cp, 320);
                DoActions(KillUnitAt(All, "40 + 1n Zealot", "Anywhere", cp))
                f.SkillWaitC(cp, 320)
                # (Line 306) f.loopC[cp] += 1;
                _ARRW(f.loopC, cp).__iadd__(1)
                # (Line 307) }
                # (Line 308) else if (f.loopC[cp] < 8)
            if EUDElseIf()(f.loopC[cp] >= 8, neg=True):
                # (Line 309) {
                # (Line 310) f.DotShape(cp, 1, " Unit. Schnee", -40 * (f.loopC[cp] - 4), 160 - 40 * (f.loopC[cp] - 4));
                f.DotShape(cp, 1, " Unit. Schnee", -40 * (f.loopC[cp] - 4), 160 - 40 * (f.loopC[cp] - 4))
                # (Line 311) f.DotShape(cp, 1, " Unit. Schnee", 40 * (f.loopC[cp] - 4), -160 + 40 * (f.loopC[cp] - 4));
                f.DotShape(cp, 1, " Unit. Schnee", 40 * (f.loopC[cp] - 4), -160 + 40 * (f.loopC[cp] - 4))
                # (Line 312) f.DotShape(cp, 1, "40 + 1n Zealot", 160 - 40 * (f.loopC[cp] - 4), 40 * (f.loopC[cp] - 4));
                f.DotShape(cp, 1, "40 + 1n Zealot", 160 - 40 * (f.loopC[cp] - 4), 40 * (f.loopC[cp] - 4))
                # (Line 313) f.DotShape(cp, 1, "40 + 1n Zealot", -160 + 40 * (f.loopC[cp] - 4), -40 * (f.loopC[cp] - 4));
                f.DotShape(cp, 1, "40 + 1n Zealot", -160 + 40 * (f.loopC[cp] - 4), -40 * (f.loopC[cp] - 4))
                # (Line 315) KillUnitAt(All, " Unit. Schnee", "Anywhere", cp);
                # (Line 316) KillUnitAt(All, "40 + 1n Zealot", "Anywhere", cp);
                DoActions(KillUnitAt(All, " Unit. Schnee", "Anywhere", cp))
                # (Line 318) f.SkillWaitC(cp, 320);
                DoActions(KillUnitAt(All, "40 + 1n Zealot", "Anywhere", cp))
                f.SkillWaitC(cp, 320)
                # (Line 320) f.loopC[cp] += 1;
                _ARRW(f.loopC, cp).__iadd__(1)
                # (Line 321) }
                # (Line 322) }
            EUDEndIf()
            # (Line 323) else if (f.count[cp] < 3 && f.count[cp] > 1)
        if EUDElseIf()(EUDSCAnd()(f.count[cp] >= 3, neg=True)(f.count[cp] <= 1, neg=True)()):
            # (Line 324) {
            # (Line 325) if (f.loopC[cp] == 2) f.loopC[cp] = 0;
            if EUDIf()(f.loopC[cp] == 2):
                _ARRW(f.loopC, cp) << (0)
                # (Line 326) if (f.loopC[cp] < 2)
            EUDEndIf()
            if EUDIf()(f.loopC[cp] >= 2, neg=True):
                # (Line 327) {
                # (Line 328) f.Table_Sin(cp, 22 + 45 * f.loopC[cp], 100 + 50 * f.loopC[cp]);
                f.Table_Sin(cp, 22 + 45 * f.loopC[cp], 100 + 50 * f.loopC[cp])
                # (Line 329) f.Table_Cos(cp, 22 + 45 * f.loopC[cp], 100 + 50 * f.loopC[cp]);
                f.Table_Cos(cp, 22 + 45 * f.loopC[cp], 100 + 50 * f.loopC[cp])
                # (Line 331) f.NxNSquareShapeAt(cp, 1, " Unit. Schnee", 3, 32, f.CosAngle[cp], f.SinAngle[cp]);
                f.NxNSquareShapeAt(cp, 1, " Unit. Schnee", 3, 32, f.CosAngle[cp], f.SinAngle[cp])
                # (Line 332) f.NxNSquareShapeAt(cp, 1, " Unit. Schnee", 3, 32, -f.CosAngle[cp], -f.SinAngle[cp]);
                f.NxNSquareShapeAt(cp, 1, " Unit. Schnee", 3, 32, -f.CosAngle[cp], -f.SinAngle[cp])
                # (Line 333) f.NxNSquareShapeAt(cp, 1, " Unit. Schnee", 3, 32, -f.SinAngle[cp], f.CosAngle[cp]);
                f.NxNSquareShapeAt(cp, 1, " Unit. Schnee", 3, 32, -f.SinAngle[cp], f.CosAngle[cp])
                # (Line 334) f.NxNSquareShapeAt(cp, 1, " Unit. Schnee", 3, 32, f.SinAngle[cp], -f.CosAngle[cp]);
                f.NxNSquareShapeAt(cp, 1, " Unit. Schnee", 3, 32, f.SinAngle[cp], -f.CosAngle[cp])
                # (Line 336) KillUnitAt(All, " Unit. Schnee", "Anywhere", cp);
                # (Line 338) f.SkillWaitC(cp, 320);
                DoActions(KillUnitAt(All, " Unit. Schnee", "Anywhere", cp))
                f.SkillWaitC(cp, 320)
                # (Line 340) f.loopC[cp] += 1;
                _ARRW(f.loopC, cp).__iadd__(1)
                # (Line 341) }
                # (Line 342) }
            EUDEndIf()
            # (Line 345) }
        EUDEndIf()
        # (Line 346) }
    EUDEndIf()
