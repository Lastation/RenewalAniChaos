## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import Function as f;
import Function as f
# (Line 3) function main(cp)
# (Line 4) {
@EUDFunc
def f_main(cp):
    # (Line 5) f.HoldPosition(cp);
    f.HoldPosition(cp)
    # (Line 6) f.BanReturn(cp);
    f.BanReturn(cp)
    # (Line 7) MoveLocation("24.Nanami_Bozo", f.heroID[cp], cp, "Anywhere");
    # (Line 9) if (f.delay[cp] == 0)
    DoActions(MoveLocation("24.Nanami_Bozo", f.heroID[cp], cp, "Anywhere"))
    if EUDIf()(f.delay[cp] == 0):
        # (Line 10) {
        # (Line 11) if (f.count[cp] == 0)
        if EUDIf()(f.count[cp] == 0):
            # (Line 12) {
            # (Line 13) if (f.loop[cp] == 0)
            if EUDIf()(f.loop[cp] == 0):
                # (Line 14) {
                # (Line 15) if (cp < 3) SetSwitch("Passive - Nanami1", Set);
                if EUDIf()(cp >= 3, neg=True):
                    # (Line 16) else SetSwitch("Passive - Nanami2", Set);
                    DoActions(SetSwitch("Passive - Nanami1", Set))
                if EUDElse()():
                    # (Line 18) f.EdgeShape(cp, 1, "60 + 1n High Templar", 45, 5, 100);
                    DoActions(SetSwitch("Passive - Nanami2", Set))
                EUDEndIf()
                f.EdgeShape(cp, 1, "60 + 1n High Templar", 45, 5, 100)
                # (Line 19) KillUnitAt(All, "60 + 1n High Templar", "Anywhere", cp);
                # (Line 21) f.SkillWait(cp, 320);
                DoActions(KillUnitAt(All, "60 + 1n High Templar", "Anywhere", cp))
                f.SkillWait(cp, 320)
                # (Line 23) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 24) }
                # (Line 25) else if (f.loop[cp] == 1)
            if EUDElseIf()(f.loop[cp] == 1):
                # (Line 26) {
                # (Line 27) f.EdgeShape(cp, 1, "60 + 1n High Templar", 0, 5, 100);
                f.EdgeShape(cp, 1, "60 + 1n High Templar", 0, 5, 100)
                # (Line 28) KillUnitAt(All, "60 + 1n High Templar", "Anywhere", cp);
                # (Line 30) f.SkillWait(cp, 320);
                DoActions(KillUnitAt(All, "60 + 1n High Templar", "Anywhere", cp))
                f.SkillWait(cp, 320)
                # (Line 32) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 33) }
                # (Line 34) else if (f.loop[cp] == 2)
            if EUDElseIf()(f.loop[cp] == 2):
                # (Line 35) {
                # (Line 36) f.EdgeShape(cp, 1, "60 + 1n High Templar", 45, 5, 150);
                f.EdgeShape(cp, 1, "60 + 1n High Templar", 45, 5, 150)
                # (Line 37) KillUnitAt(All, "60 + 1n High Templar", "Anywhere", cp);
                # (Line 39) f.SkillWait(cp, 320);
                DoActions(KillUnitAt(All, "60 + 1n High Templar", "Anywhere", cp))
                f.SkillWait(cp, 320)
                # (Line 41) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 42) }
                # (Line 43) else if (f.loop[cp] == 3)
            if EUDElseIf()(f.loop[cp] == 3):
                # (Line 44) {
                # (Line 45) f.EdgeShape(cp, 1, "60 + 1n High Templar", 0, 5, 150);
                f.EdgeShape(cp, 1, "60 + 1n High Templar", 0, 5, 150)
                # (Line 46) KillUnitAt(All, "60 + 1n High Templar", "Anywhere", cp);
                # (Line 48) f.SkillWait(cp, 320);
                DoActions(KillUnitAt(All, "60 + 1n High Templar", "Anywhere", cp))
                f.SkillWait(cp, 320)
                # (Line 50) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 51) }
                # (Line 52) else if (f.loop[cp] == 4)
            if EUDElseIf()(f.loop[cp] == 4):
                # (Line 53) {
                # (Line 54) f.Table_Sin(cp, 22, 75);
                f.Table_Sin(cp, 22, 75)
                # (Line 55) f.Table_Cos(cp, 22, 75);
                f.Table_Cos(cp, 22, 75)
                # (Line 57) f.SquareShape(cp, 1, "60 + 1n High Templar", f.CosAngle[cp], f.SinAngle[cp]);
                f.SquareShape(cp, 1, "60 + 1n High Templar", f.CosAngle[cp], f.SinAngle[cp])
                # (Line 58) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                # (Line 59) MoveUnit(All, "60 + 1n High Templar", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 60) Order("60 + 1n High Templar", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveUnit(All, "60 + 1n High Templar", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                # (Line 62) f.SkillWait(cp, 160);
                DoActions(Order("60 + 1n High Templar", cp, "Anywhere", Attack, f.location[cp]))
                f.SkillWait(cp, 160)
                # (Line 64) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 65) }
                # (Line 66) else if (f.loop[cp] == 5)
            if EUDElseIf()(f.loop[cp] == 5):
                # (Line 67) {
                # (Line 68) f.Table_Sin(cp, 67, 150);
                f.Table_Sin(cp, 67, 150)
                # (Line 69) f.Table_Cos(cp, 67, 150);
                f.Table_Cos(cp, 67, 150)
                # (Line 71) f.SquareShape(cp, 1, "60 + 1n Dragoon", f.CosAngle[cp], f.SinAngle[cp]);
                f.SquareShape(cp, 1, "60 + 1n Dragoon", f.CosAngle[cp], f.SinAngle[cp])
                # (Line 72) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                # (Line 73) MoveUnit(All, "60 + 1n Dragoon", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 74) Order("60 + 1n Dragoon", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveUnit(All, "60 + 1n Dragoon", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                # (Line 76) f.SkillWait(cp, 160);
                DoActions(Order("60 + 1n Dragoon", cp, "Anywhere", Attack, f.location[cp]))
                f.SkillWait(cp, 160)
                # (Line 78) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 79) }
                # (Line 80) else if (f.loop[cp] == 6)
            if EUDElseIf()(f.loop[cp] == 6):
                # (Line 81) {
                # (Line 82) f.EdgeShape(cp, 1, "100 + 1n Dragoon", 45, 5, 150);
                f.EdgeShape(cp, 1, "100 + 1n Dragoon", 45, 5, 150)
                # (Line 83) KillUnitAt(All, "100 + 1n Dragoon", "Anywhere", cp);
                # (Line 85) f.Table_Sin(cp, 22, 225);
                DoActions(KillUnitAt(All, "100 + 1n Dragoon", "Anywhere", cp))
                f.Table_Sin(cp, 22, 225)
                # (Line 86) f.Table_Cos(cp, 22, 225);
                f.Table_Cos(cp, 22, 225)
                # (Line 88) f.SquareShape(cp, 1, "40 + 1n Mojo", f.CosAngle[cp], f.SinAngle[cp]);
                f.SquareShape(cp, 1, "40 + 1n Mojo", f.CosAngle[cp], f.SinAngle[cp])
                # (Line 89) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                # (Line 90) Order("40 + 1n Mojo", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 92) f.SkillWait(cp, 160);
                DoActions(Order("40 + 1n Mojo", cp, "Anywhere", Attack, f.location[cp]))
                f.SkillWait(cp, 160)
                # (Line 94) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 95) }
                # (Line 96) else if (f.loop[cp] == 7)
            if EUDElseIf()(f.loop[cp] == 7):
                # (Line 97) {
                # (Line 98) f.EdgeShape(cp, 1, "100 + 1n Dragoon", 0, 5, 150);
                f.EdgeShape(cp, 1, "100 + 1n Dragoon", 0, 5, 150)
                # (Line 99) KillUnitAt(All, "100 + 1n Dragoon", "Anywhere", cp);
                # (Line 101) f.Table_Sin(cp, 22, 275);
                DoActions(KillUnitAt(All, "100 + 1n Dragoon", "Anywhere", cp))
                f.Table_Sin(cp, 22, 275)
                # (Line 102) f.Table_Cos(cp, 22, 275);
                f.Table_Cos(cp, 22, 275)
                # (Line 104) f.SquareShape(cp, 1, "60 + 1n Danimoth", f.CosAngle[cp], f.SinAngle[cp]);
                f.SquareShape(cp, 1, "60 + 1n Danimoth", f.CosAngle[cp], f.SinAngle[cp])
                # (Line 105) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                # (Line 106) Order("60 + 1n Danimoth", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 108) f.SkillWait(cp, 1120);
                DoActions(Order("60 + 1n Danimoth", cp, "Anywhere", Attack, f.location[cp]))
                f.SkillWait(cp, 1120)
                # (Line 110) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 111) }
                # (Line 112) else if (f.loop[cp] == 8)
            if EUDElseIf()(f.loop[cp] == 8):
                # (Line 113) {
                # (Line 114) f.SkillWait(cp, 80);
                f.SkillWait(cp, 80)
                # (Line 116) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 117) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 118) }
                # (Line 119) }
            EUDEndIf()
            # (Line 120) else if (f.count[cp] == 1)
        if EUDElseIf()(f.count[cp] == 1):
            # (Line 121) {
            # (Line 122) if (f.loop[cp] < 14)
            if EUDIf()(f.loop[cp] >= 14, neg=True):
                # (Line 123) {
                # (Line 124) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", cp);
                # (Line 126) if ((f.loop[cp] / 4) % 2 == 0)
                DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", cp))
                if EUDIf()((f.loop[cp] // 4) % 2 == 0):
                    # (Line 127) {
                    # (Line 128) f.DotShape(cp, 1, "40 + 1n Wraith", 160 - 40 * (f.loop[cp] % 4) , 40 * (f.loop[cp] % 4));
                    f.DotShape(cp, 1, "40 + 1n Wraith", 160 - 40 * (f.loop[cp] % 4), 40 * (f.loop[cp] % 4))
                    # (Line 129) f.DotShape(cp, 1, "40 + 1n Wraith", -160 + 40 * (f.loop[cp] % 4), -40 * (f.loop[cp] % 4));
                    f.DotShape(cp, 1, "40 + 1n Wraith", -160 + 40 * (f.loop[cp] % 4), -40 * (f.loop[cp] % 4))
                    # (Line 130) }
                    # (Line 131) else if ((f.loop[cp] / 4) % 2 == 1)
                if EUDElseIf()((f.loop[cp] // 4) % 2 == 1):
                    # (Line 132) {
                    # (Line 133) f.DotShape(cp, 1, "40 + 1n Wraith", -40 * (f.loop[cp] % 4), 160 - 40 * (f.loop[cp] % 4));
                    f.DotShape(cp, 1, "40 + 1n Wraith", -40 * (f.loop[cp] % 4), 160 - 40 * (f.loop[cp] % 4))
                    # (Line 134) f.DotShape(cp, 1, "40 + 1n Wraith", 40 * (f.loop[cp] % 4), -160 + 40 * (f.loop[cp] % 4));
                    f.DotShape(cp, 1, "40 + 1n Wraith", 40 * (f.loop[cp] % 4), -160 + 40 * (f.loop[cp] % 4))
                    # (Line 135) }
                    # (Line 137) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                EUDEndIf()
                # (Line 138) Order("40 + 1n Wraith", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 140) f.SkillWait(cp, 320);
                DoActions(Order("40 + 1n Wraith", cp, "Anywhere", Attack, f.location[cp]))
                f.SkillWait(cp, 320)
                # (Line 142) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 143) }
                # (Line 144) else if (f.loop[cp] == 14)
            if EUDElseIf()(f.loop[cp] == 14):
                # (Line 145) {
                # (Line 146) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", cp);
                # (Line 148) f.Voice_Routine(cp, 5);
                DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", cp))
                f.Voice_Routine(cp, 5)
                # (Line 150) f.SkillWait(cp, 80);
                f.SkillWait(cp, 80)
                # (Line 152) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 153) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 154) }
                # (Line 155) }
            EUDEndIf()
            # (Line 156) else if (f.count[cp] == 2)
        if EUDElseIf()(f.count[cp] == 2):
            # (Line 157) {
            # (Line 158) if (f.loop[cp] < 8)
            if EUDIf()(f.loop[cp] >= 8, neg=True):
                # (Line 159) {
                # (Line 160) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", cp);
                # (Line 162) if ((f.loop[cp] / 4) % 2 == 0)
                DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", cp))
                if EUDIf()((f.loop[cp] // 4) % 2 == 0):
                    # (Line 163) {
                    # (Line 164) f.DotShape(cp, 1, "40 + 1n Wraith", 160 - 40 * (f.loop[cp] % 4) , 40 * (f.loop[cp] % 4));
                    f.DotShape(cp, 1, "40 + 1n Wraith", 160 - 40 * (f.loop[cp] % 4), 40 * (f.loop[cp] % 4))
                    # (Line 165) f.DotShape(cp, 1, "40 + 1n Wraith", -160 + 40 * (f.loop[cp] % 4), -40 * (f.loop[cp] % 4));
                    f.DotShape(cp, 1, "40 + 1n Wraith", -160 + 40 * (f.loop[cp] % 4), -40 * (f.loop[cp] % 4))
                    # (Line 166) }
                    # (Line 167) else if ((f.loop[cp] / 4) % 2 == 1)
                if EUDElseIf()((f.loop[cp] // 4) % 2 == 1):
                    # (Line 168) {
                    # (Line 169) f.DotShape(cp, 1, "40 + 1n Wraith", -40 * (f.loop[cp] % 4), 160 - 40 * (f.loop[cp] % 4));
                    f.DotShape(cp, 1, "40 + 1n Wraith", -40 * (f.loop[cp] % 4), 160 - 40 * (f.loop[cp] % 4))
                    # (Line 170) f.DotShape(cp, 1, "40 + 1n Wraith", 40 * (f.loop[cp] % 4), -160 + 40 * (f.loop[cp] % 4));
                    f.DotShape(cp, 1, "40 + 1n Wraith", 40 * (f.loop[cp] % 4), -160 + 40 * (f.loop[cp] % 4))
                    # (Line 171) }
                    # (Line 173) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                EUDEndIf()
                # (Line 174) Order("40 + 1n Wraith", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 176) f.SkillWait(cp, 320);
                DoActions(Order("40 + 1n Wraith", cp, "Anywhere", Attack, f.location[cp]))
                f.SkillWait(cp, 320)
                # (Line 178) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 179) }
                # (Line 180) else if (f.loop[cp] == 8)
            if EUDElseIf()(f.loop[cp] == 8):
                # (Line 181) {
                # (Line 182) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", cp);
                # (Line 184) f.SkillWait(cp, 80);
                DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", cp))
                f.SkillWait(cp, 80)
                # (Line 186) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 187) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 188) }
                # (Line 189) }
            EUDEndIf()
            # (Line 191) else if (f.count[cp] == 3)
        if EUDElseIf()(f.count[cp] == 3):
            # (Line 192) {
            # (Line 193) KillUnitAt(All, "40 + 1n Mojo", "Anywhere", cp);
            # (Line 194) KillUnitAt(All, "60 + 1n Danimoth", "Anywhere", cp);
            DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", cp))
            # (Line 195) KillUnitAt(All, "60 + 1n High Templar", "Anywhere", cp);
            DoActions(KillUnitAt(All, "60 + 1n Danimoth", "Anywhere", cp))
            # (Line 196) KillUnitAt(All, "60 + 1n Dragoon", "Anywhere", cp);
            DoActions(KillUnitAt(All, "60 + 1n High Templar", "Anywhere", cp))
            # (Line 197) SetSwitch("Passive - Nanami1", Clear);
            DoActions(KillUnitAt(All, "60 + 1n Dragoon", "Anywhere", cp))
            # (Line 198) SetSwitch("Passive - Nanami2", Clear);
            DoActions(SetSwitch("Passive - Nanami1", Clear))
            # (Line 200) f.SkillEnd(cp);
            DoActions(SetSwitch("Passive - Nanami2", Clear))
            f.SkillEnd(cp)
            # (Line 201) }
            # (Line 202) }
        EUDEndIf()
        # (Line 203) if (f.delayB[cp] == 0)
    EUDEndIf()
    if EUDIf()(f.delayB[cp] == 0):
        # (Line 204) {
        # (Line 205) if (f.count[cp] < 3)
        if EUDIf()(f.count[cp] >= 3, neg=True):
            # (Line 206) {
            # (Line 207) if (f.loopB[cp] == 0)
            if EUDIf()(f.loopB[cp] == 0):
                # (Line 208) {
                # (Line 209) f.SquareShape(cp, 1, "60 + 1n High Templar", 75, 75);
                f.SquareShape(cp, 1, "60 + 1n High Templar", 75, 75)
                # (Line 211) KillUnitAt(All, "60 + 1n High Templar", "Anywhere", cp);
                # (Line 213) f.SkillWaitB(cp, 160);
                DoActions(KillUnitAt(All, "60 + 1n High Templar", "Anywhere", cp))
                f.SkillWaitB(cp, 160)
                # (Line 215) f.loopB[cp] += 1;
                _ARRW(f.loopB, cp).__iadd__(1)
                # (Line 216) }
                # (Line 217) else if (f.loopB[cp] == 1)
            if EUDElseIf()(f.loopB[cp] == 1):
                # (Line 218) {
                # (Line 219) f.SquareShape(cp, 1, "60 + 1n Archon", 150, 0);
                f.SquareShape(cp, 1, "60 + 1n Archon", 150, 0)
                # (Line 221) KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp);
                # (Line 223) f.SkillWaitB(cp, 160);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp))
                f.SkillWaitB(cp, 160)
                # (Line 225) f.loopB[cp] += 1;
                _ARRW(f.loopB, cp).__iadd__(1)
                # (Line 226) }
                # (Line 227) else if (f.loopB[cp] == 2)
            if EUDElseIf()(f.loopB[cp] == 2):
                # (Line 228) {
                # (Line 229) f.SquareShape(cp, 1, "Protoss Dark Archon", 150, 75);
                f.SquareShape(cp, 1, "Protoss Dark Archon", 150, 75)
                # (Line 231) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp);
                # (Line 233) f.SkillWaitB(cp, 160);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp))
                f.SkillWaitB(cp, 160)
                # (Line 235) f.loopB[cp] += 1;
                _ARRW(f.loopB, cp).__iadd__(1)
                # (Line 236) }
                # (Line 237) else if (f.loopB[cp] == 3)
            if EUDElseIf()(f.loopB[cp] == 3):
                # (Line 238) {
                # (Line 239) f.SquareShape(cp, 1, "60 + 1n Archon", 150, 150);
                f.SquareShape(cp, 1, "60 + 1n Archon", 150, 150)
                # (Line 241) KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp);
                # (Line 243) f.SkillWaitB(cp, 160);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp))
                f.SkillWaitB(cp, 160)
                # (Line 245) f.loopB[cp] += 1;
                _ARRW(f.loopB, cp).__iadd__(1)
                # (Line 246) }
                # (Line 247) else if (f.loopB[cp] == 4)
            if EUDElseIf()(f.loopB[cp] == 4):
                # (Line 248) {
                # (Line 249) f.SquareShape(cp, 1, "Protoss Dark Archon", 75, 150);
                f.SquareShape(cp, 1, "Protoss Dark Archon", 75, 150)
                # (Line 251) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp);
                # (Line 253) f.SkillWaitB(cp, 160);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp))
                f.SkillWaitB(cp, 160)
                # (Line 255) f.loopB[cp] = 0;
                _ARRW(f.loopB, cp) << (0)
                # (Line 256) }
                # (Line 257) }
            EUDEndIf()
            # (Line 258) }
        EUDEndIf()
        # (Line 259) if (f.delayC[cp] == 0)
    EUDEndIf()
    if EUDIf()(f.delayC[cp] == 0):
        # (Line 260) {
        # (Line 261) if (f.count[cp] < 2 && f.count[cp] > 0)
        if EUDIf()(EUDSCAnd()(f.count[cp] >= 2, neg=True)(f.count[cp] <= 0, neg=True)()):
            # (Line 262) {
            # (Line 263) if (f.loopC[cp] == 8) f.loopC[cp] = 0;
            if EUDIf()(f.loopC[cp] == 8):
                _ARRW(f.loopC, cp) << (0)
                # (Line 264) if (f.loopC[cp] < 4)
            EUDEndIf()
            if EUDIf()(f.loopC[cp] >= 4, neg=True):
                # (Line 265) {
                # (Line 266) f.DotShape(cp, 1, " Unit. Schnee", 160 - 40 * f.loopC[cp], 40 * f.loopC[cp]);
                f.DotShape(cp, 1, " Unit. Schnee", 160 - 40 * f.loopC[cp], 40 * f.loopC[cp])
                # (Line 267) f.DotShape(cp, 1, " Unit. Schnee", -160 + 40 * f.loopC[cp], -40 * f.loopC[cp]);
                f.DotShape(cp, 1, " Unit. Schnee", -160 + 40 * f.loopC[cp], -40 * f.loopC[cp])
                # (Line 268) f.DotShape(cp, 1, "40 + 1n Zealot", -40 * f.loopC[cp], 160 - 40 * f.loopC[cp]);
                f.DotShape(cp, 1, "40 + 1n Zealot", -40 * f.loopC[cp], 160 - 40 * f.loopC[cp])
                # (Line 269) f.DotShape(cp, 1, "40 + 1n Zealot", 40 * f.loopC[cp], -160 + 40 * f.loopC[cp]);
                f.DotShape(cp, 1, "40 + 1n Zealot", 40 * f.loopC[cp], -160 + 40 * f.loopC[cp])
                # (Line 271) KillUnitAt(All, " Unit. Schnee", "Anywhere", cp);
                # (Line 272) KillUnitAt(All, "40 + 1n Zealot", "Anywhere", cp);
                DoActions(KillUnitAt(All, " Unit. Schnee", "Anywhere", cp))
                # (Line 274) f.SkillWaitC(cp, 320);
                DoActions(KillUnitAt(All, "40 + 1n Zealot", "Anywhere", cp))
                f.SkillWaitC(cp, 320)
                # (Line 276) f.loopC[cp] += 1;
                _ARRW(f.loopC, cp).__iadd__(1)
                # (Line 277) }
                # (Line 278) else if (f.loopC[cp] < 8)
            if EUDElseIf()(f.loopC[cp] >= 8, neg=True):
                # (Line 279) {
                # (Line 280) f.DotShape(cp, 1, " Unit. Schnee", -40 * (f.loopC[cp] - 4), 160 - 40 * (f.loopC[cp] - 4));
                f.DotShape(cp, 1, " Unit. Schnee", -40 * (f.loopC[cp] - 4), 160 - 40 * (f.loopC[cp] - 4))
                # (Line 281) f.DotShape(cp, 1, " Unit. Schnee", 40 * (f.loopC[cp] - 4), -160 + 40 * (f.loopC[cp] - 4));
                f.DotShape(cp, 1, " Unit. Schnee", 40 * (f.loopC[cp] - 4), -160 + 40 * (f.loopC[cp] - 4))
                # (Line 282) f.DotShape(cp, 1, "40 + 1n Zealot", 160 - 40 * (f.loopC[cp] - 4), 40 * (f.loopC[cp] - 4));
                f.DotShape(cp, 1, "40 + 1n Zealot", 160 - 40 * (f.loopC[cp] - 4), 40 * (f.loopC[cp] - 4))
                # (Line 283) f.DotShape(cp, 1, "40 + 1n Zealot", -160 + 40 * (f.loopC[cp] - 4), -40 * (f.loopC[cp] - 4));
                f.DotShape(cp, 1, "40 + 1n Zealot", -160 + 40 * (f.loopC[cp] - 4), -40 * (f.loopC[cp] - 4))
                # (Line 285) KillUnitAt(All, " Unit. Schnee", "Anywhere", cp);
                # (Line 286) KillUnitAt(All, "40 + 1n Zealot", "Anywhere", cp);
                DoActions(KillUnitAt(All, " Unit. Schnee", "Anywhere", cp))
                # (Line 288) f.SkillWaitC(cp, 320);
                DoActions(KillUnitAt(All, "40 + 1n Zealot", "Anywhere", cp))
                f.SkillWaitC(cp, 320)
                # (Line 290) f.loopC[cp] += 1;
                _ARRW(f.loopC, cp).__iadd__(1)
                # (Line 291) }
                # (Line 292) }
            EUDEndIf()
            # (Line 293) else if (f.count[cp] < 3 && f.count[cp] > 1)
        if EUDElseIf()(EUDSCAnd()(f.count[cp] >= 3, neg=True)(f.count[cp] <= 1, neg=True)()):
            # (Line 294) {
            # (Line 295) if (f.loopC[cp] == 8) f.loopC[cp] = 0;
            if EUDIf()(f.loopC[cp] == 8):
                _ARRW(f.loopC, cp) << (0)
                # (Line 296) if (f.loopC[cp] < 4)
            EUDEndIf()
            if EUDIf()(f.loopC[cp] >= 4, neg=True):
                # (Line 297) {
                # (Line 298) f.DotShape(cp, 1, " Unit. Hoffnung 25000", 160 - 40 * f.loopC[cp], 40 * f.loopC[cp]);
                f.DotShape(cp, 1, " Unit. Hoffnung 25000", 160 - 40 * f.loopC[cp], 40 * f.loopC[cp])
                # (Line 299) f.DotShape(cp, 1, " Unit. Hoffnung 25000", -160 + 40 * f.loopC[cp], -40 * f.loopC[cp]);
                f.DotShape(cp, 1, " Unit. Hoffnung 25000", -160 + 40 * f.loopC[cp], -40 * f.loopC[cp])
                # (Line 300) f.DotShape(cp, 1, "100 + 1n Dragoon", -40 * f.loopC[cp], 160 - 40 * f.loopC[cp]);
                f.DotShape(cp, 1, "100 + 1n Dragoon", -40 * f.loopC[cp], 160 - 40 * f.loopC[cp])
                # (Line 301) f.DotShape(cp, 1, "100 + 1n Dragoon", 40 * f.loopC[cp], -160 + 40 * f.loopC[cp]);
                f.DotShape(cp, 1, "100 + 1n Dragoon", 40 * f.loopC[cp], -160 + 40 * f.loopC[cp])
                # (Line 303) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp);
                # (Line 304) KillUnitAt(All, "100 + 1n Dragoon", "Anywhere", cp);
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp))
                # (Line 306) f.SkillWaitC(cp, 320);
                DoActions(KillUnitAt(All, "100 + 1n Dragoon", "Anywhere", cp))
                f.SkillWaitC(cp, 320)
                # (Line 308) f.loopC[cp] += 1;
                _ARRW(f.loopC, cp).__iadd__(1)
                # (Line 309) }
                # (Line 310) else if (f.loopC[cp] < 8)
            if EUDElseIf()(f.loopC[cp] >= 8, neg=True):
                # (Line 311) {
                # (Line 312) f.DotShape(cp, 1, " Unit. Hoffnung 25000", -40 * (f.loopC[cp] - 4), 160 - 40 * (f.loopC[cp] - 4));
                f.DotShape(cp, 1, " Unit. Hoffnung 25000", -40 * (f.loopC[cp] - 4), 160 - 40 * (f.loopC[cp] - 4))
                # (Line 313) f.DotShape(cp, 1, " Unit. Hoffnung 25000", 40 * (f.loopC[cp] - 4), -160 + 40 * (f.loopC[cp] - 4));
                f.DotShape(cp, 1, " Unit. Hoffnung 25000", 40 * (f.loopC[cp] - 4), -160 + 40 * (f.loopC[cp] - 4))
                # (Line 314) f.DotShape(cp, 1, "100 + 1n Dragoon", 160 - 40 * (f.loopC[cp] - 4), 40 * (f.loopC[cp] - 4));
                f.DotShape(cp, 1, "100 + 1n Dragoon", 160 - 40 * (f.loopC[cp] - 4), 40 * (f.loopC[cp] - 4))
                # (Line 315) f.DotShape(cp, 1, "100 + 1n Dragoon", -160 + 40 * (f.loopC[cp] - 4), -40 * (f.loopC[cp] - 4));
                f.DotShape(cp, 1, "100 + 1n Dragoon", -160 + 40 * (f.loopC[cp] - 4), -40 * (f.loopC[cp] - 4))
                # (Line 317) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp);
                # (Line 318) KillUnitAt(All, "100 + 1n Dragoon", "Anywhere", cp);
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp))
                # (Line 320) f.SkillWaitC(cp, 320);
                DoActions(KillUnitAt(All, "100 + 1n Dragoon", "Anywhere", cp))
                f.SkillWaitC(cp, 320)
                # (Line 322) f.loopC[cp] += 1;
                _ARRW(f.loopC, cp).__iadd__(1)
                # (Line 323) }
                # (Line 324) }
            EUDEndIf()
            # (Line 327) }
        EUDEndIf()
        # (Line 328) }
    EUDEndIf()
