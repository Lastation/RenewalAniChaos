## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import Function as f;
import Function as f
# (Line 3) const s = StringBuffer();
s = _CGFW(lambda: [StringBuffer()], 1)[0]
# (Line 5) function main(cp)
# (Line 6) {
@EUDFunc
def f_main(cp):
    # (Line 7) if (f.delay[cp] == 0)
    if EUDIf()(f.delay[cp] == 0):
        # (Line 8) {
        # (Line 9) if (f.count[cp] == 0)
        if EUDIf()(f.count[cp] == 0):
            # (Line 10) {
            # (Line 11) if (f.loop[cp] == 0)
            if EUDIf()(f.loop[cp] == 0):
                # (Line 12) {
                # (Line 13) var x = 50;
                x = EUDVariable()
                x << (50)
                # (Line 14) var y = 125;
                y = EUDVariable()
                y << (125)
                # (Line 16) f.DotShape(cp, 1, "50 + 1n Battlecruiser", -x, x);
                f.DotShape(cp, 1, "50 + 1n Battlecruiser", -x, x)
                # (Line 17) f.DotShape(cp, 1, "50 + 1n Battlecruiser", -x, y);
                f.DotShape(cp, 1, "50 + 1n Battlecruiser", -x, y)
                # (Line 18) f.DotShape(cp, 1, "50 + 1n Battlecruiser", -y, x);
                f.DotShape(cp, 1, "50 + 1n Battlecruiser", -y, x)
                # (Line 19) f.DotShape(cp, 1, "50 + 1n Battlecruiser", -y, y);
                f.DotShape(cp, 1, "50 + 1n Battlecruiser", -y, y)
                # (Line 20) f.DotShape(cp, 1, "50 + 1n Tank", -x, x);
                f.DotShape(cp, 1, "50 + 1n Tank", -x, x)
                # (Line 21) f.DotShape(cp, 1, "50 + 1n Tank", -x, y);
                f.DotShape(cp, 1, "50 + 1n Tank", -x, y)
                # (Line 22) f.DotShape(cp, 1, "50 + 1n Tank", -y, x);
                f.DotShape(cp, 1, "50 + 1n Tank", -y, x)
                # (Line 23) f.DotShape(cp, 1, "50 + 1n Tank", -y, y);
                f.DotShape(cp, 1, "50 + 1n Tank", -y, y)
                # (Line 25) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                # (Line 26) MoveUnit(All, "50 + 1n Tank", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 27) Order("50 + 1n Battlecruiser", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveUnit(All, "50 + 1n Tank", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                # (Line 28) Order("50 + 1n Tank", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(Order("50 + 1n Battlecruiser", cp, "Anywhere", Attack, f.location[cp]))
                # (Line 30) f.SkillWait(cp, 320);
                DoActions(Order("50 + 1n Tank", cp, "Anywhere", Attack, f.location[cp]))
                f.SkillWait(cp, 320)
                # (Line 32) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 33) }
                # (Line 34) else if (f.loop[cp] == 1)
            if EUDElseIf()(f.loop[cp] == 1):
                # (Line 35) {
                # (Line 36) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp);
                # (Line 38) var x = 50;
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp))
                x = EUDVariable()
                x << (50)
                # (Line 39) var y = 125;
                y = EUDVariable()
                y << (125)
                # (Line 41) f.DotShape(cp, 1, "50 + 1n Battlecruiser", x, -x);
                f.DotShape(cp, 1, "50 + 1n Battlecruiser", x, -x)
                # (Line 42) f.DotShape(cp, 1, "50 + 1n Battlecruiser", x, -y);
                f.DotShape(cp, 1, "50 + 1n Battlecruiser", x, -y)
                # (Line 43) f.DotShape(cp, 1, "50 + 1n Battlecruiser", y, -x);
                f.DotShape(cp, 1, "50 + 1n Battlecruiser", y, -x)
                # (Line 44) f.DotShape(cp, 1, "50 + 1n Battlecruiser", y, -y);
                f.DotShape(cp, 1, "50 + 1n Battlecruiser", y, -y)
                # (Line 45) f.DotShape(cp, 1, "50 + 1n Tank", x, -x);
                f.DotShape(cp, 1, "50 + 1n Tank", x, -x)
                # (Line 46) f.DotShape(cp, 1, "50 + 1n Tank", x, -y);
                f.DotShape(cp, 1, "50 + 1n Tank", x, -y)
                # (Line 47) f.DotShape(cp, 1, "50 + 1n Tank", y, -x);
                f.DotShape(cp, 1, "50 + 1n Tank", y, -x)
                # (Line 48) f.DotShape(cp, 1, "50 + 1n Tank", y, -y);
                f.DotShape(cp, 1, "50 + 1n Tank", y, -y)
                # (Line 50) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                # (Line 51) MoveUnit(All, "50 + 1n Tank", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 52) Order("50 + 1n Battlecruiser", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveUnit(All, "50 + 1n Tank", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                # (Line 53) Order("50 + 1n Tank", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(Order("50 + 1n Battlecruiser", cp, "Anywhere", Attack, f.location[cp]))
                # (Line 55) f.SkillWait(cp, 320);
                DoActions(Order("50 + 1n Tank", cp, "Anywhere", Attack, f.location[cp]))
                f.SkillWait(cp, 320)
                # (Line 57) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 58) }
                # (Line 59) else if (f.loop[cp] == 2)
            if EUDElseIf()(f.loop[cp] == 2):
                # (Line 60) {
                # (Line 61) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp);
                # (Line 63) var x = 50;
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp))
                x = EUDVariable()
                x << (50)
                # (Line 64) var y = 125;
                y = EUDVariable()
                y << (125)
                # (Line 66) f.DotShape(cp, 1, "50 + 1n Battlecruiser", -x, -x);
                f.DotShape(cp, 1, "50 + 1n Battlecruiser", -x, -x)
                # (Line 67) f.DotShape(cp, 1, "50 + 1n Battlecruiser", -x, -y);
                f.DotShape(cp, 1, "50 + 1n Battlecruiser", -x, -y)
                # (Line 68) f.DotShape(cp, 1, "50 + 1n Battlecruiser", -y, -x);
                f.DotShape(cp, 1, "50 + 1n Battlecruiser", -y, -x)
                # (Line 69) f.DotShape(cp, 1, "50 + 1n Battlecruiser", -y, -y);
                f.DotShape(cp, 1, "50 + 1n Battlecruiser", -y, -y)
                # (Line 70) f.DotShape(cp, 1, "50 + 1n Tank", -x, -x);
                f.DotShape(cp, 1, "50 + 1n Tank", -x, -x)
                # (Line 71) f.DotShape(cp, 1, "50 + 1n Tank", -x, -y);
                f.DotShape(cp, 1, "50 + 1n Tank", -x, -y)
                # (Line 72) f.DotShape(cp, 1, "50 + 1n Tank", -y, -x);
                f.DotShape(cp, 1, "50 + 1n Tank", -y, -x)
                # (Line 73) f.DotShape(cp, 1, "50 + 1n Tank", -y, -y);
                f.DotShape(cp, 1, "50 + 1n Tank", -y, -y)
                # (Line 75) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                # (Line 76) MoveUnit(All, "50 + 1n Tank", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 77) Order("50 + 1n Battlecruiser", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveUnit(All, "50 + 1n Tank", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                # (Line 78) Order("50 + 1n Tank", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(Order("50 + 1n Battlecruiser", cp, "Anywhere", Attack, f.location[cp]))
                # (Line 80) f.SkillWait(cp, 320);
                DoActions(Order("50 + 1n Tank", cp, "Anywhere", Attack, f.location[cp]))
                f.SkillWait(cp, 320)
                # (Line 82) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 83) }
                # (Line 84) else if (f.loop[cp] == 3)
            if EUDElseIf()(f.loop[cp] == 3):
                # (Line 85) {
                # (Line 86) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp);
                # (Line 88) var x = 50;
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp))
                x = EUDVariable()
                x << (50)
                # (Line 89) var y = 125;
                y = EUDVariable()
                y << (125)
                # (Line 91) f.DotShape(cp, 1, "50 + 1n Battlecruiser", x, x);
                f.DotShape(cp, 1, "50 + 1n Battlecruiser", x, x)
                # (Line 92) f.DotShape(cp, 1, "50 + 1n Battlecruiser", x, y);
                f.DotShape(cp, 1, "50 + 1n Battlecruiser", x, y)
                # (Line 93) f.DotShape(cp, 1, "50 + 1n Battlecruiser", y, x);
                f.DotShape(cp, 1, "50 + 1n Battlecruiser", y, x)
                # (Line 94) f.DotShape(cp, 1, "50 + 1n Battlecruiser", y, y);
                f.DotShape(cp, 1, "50 + 1n Battlecruiser", y, y)
                # (Line 95) f.DotShape(cp, 1, "50 + 1n Tank", x, x);
                f.DotShape(cp, 1, "50 + 1n Tank", x, x)
                # (Line 96) f.DotShape(cp, 1, "50 + 1n Tank", x, y);
                f.DotShape(cp, 1, "50 + 1n Tank", x, y)
                # (Line 97) f.DotShape(cp, 1, "50 + 1n Tank", y, x);
                f.DotShape(cp, 1, "50 + 1n Tank", y, x)
                # (Line 98) f.DotShape(cp, 1, "50 + 1n Tank", y, y);
                f.DotShape(cp, 1, "50 + 1n Tank", y, y)
                # (Line 100) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                # (Line 101) MoveUnit(All, "50 + 1n Tank", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 102) Order("50 + 1n Battlecruiser", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveUnit(All, "50 + 1n Tank", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                # (Line 103) Order("50 + 1n Tank", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(Order("50 + 1n Battlecruiser", cp, "Anywhere", Attack, f.location[cp]))
                # (Line 105) f.SkillWait(cp, 320);
                DoActions(Order("50 + 1n Tank", cp, "Anywhere", Attack, f.location[cp]))
                f.SkillWait(cp, 320)
                # (Line 107) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 108) }
                # (Line 109) else if (f.loop[cp] == 4)
            if EUDElseIf()(f.loop[cp] == 4):
                # (Line 110) {
                # (Line 111) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp);
                # (Line 113) f.NxNSquareShape(cp, 1, "40 + 1n Wraith", 4, 75);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp))
                f.NxNSquareShape(cp, 1, "40 + 1n Wraith", 4, 75)
                # (Line 114) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", cp);
                # (Line 116) f.SkillWait(cp, 80);
                DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", cp))
                f.SkillWait(cp, 80)
                # (Line 118) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 119) }
                # (Line 120) else if (f.loop[cp] == 5)
            if EUDElseIf()(f.loop[cp] == 5):
                # (Line 121) {
                # (Line 122) f.NxNSquareShape(cp, 1, "40 + 1n Guardian", 4, 75);
                f.NxNSquareShape(cp, 1, "40 + 1n Guardian", 4, 75)
                # (Line 123) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp);
                # (Line 125) f.SkillWait(cp, 320);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp))
                f.SkillWait(cp, 320)
                # (Line 127) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 128) }
                # (Line 129) else if (f.loop[cp] == 6)
            if EUDElseIf()(f.loop[cp] == 6):
                # (Line 130) {
                # (Line 131) KillUnitAt(All, "50 + 1n Tank", "Anywhere", cp);
                # (Line 133) f.NxNSquareShape(cp, 1, " Unit. Hoffnung 25000", 4, 75);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", cp))
                f.NxNSquareShape(cp, 1, " Unit. Hoffnung 25000", 4, 75)
                # (Line 134) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp);
                # (Line 136) f.SkillWait(cp, 80);
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp))
                f.SkillWait(cp, 80)
                # (Line 138) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 139) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 140) }
                # (Line 141) }
            EUDEndIf()
            # (Line 142) else if (f.count[cp] == 1)
        if EUDElseIf()(f.count[cp] == 1):
            # (Line 143) {
            # (Line 144) f.SkillEnd(cp);
            f.SkillEnd(cp)
            # (Line 145) }
            # (Line 146) }
        EUDEndIf()
        # (Line 147) }
    EUDEndIf()
