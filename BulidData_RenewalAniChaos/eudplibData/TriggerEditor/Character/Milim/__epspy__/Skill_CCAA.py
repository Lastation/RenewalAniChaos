## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import Function as f;
import Function as f
# (Line 3) const s = StringBuffer();
s = _CGFW(lambda: [StringBuffer()], 1)[0]
# (Line 5) function main(cp)
# (Line 6) {
@EUDFunc
def f_main(cp):
    # (Line 7) if (Switch("Unique - Milim", Cleared))
    if EUDIf()(Switch("Unique - Milim", Cleared)):
        # (Line 8) {
        # (Line 9) f.HoldPosition(cp);
        f.HoldPosition(cp)
        # (Line 10) }
        # (Line 11) f.BanReturn(cp);
    EUDEndIf()
    f.BanReturn(cp)
    # (Line 13) if (f.delay[cp] == 0)
    if EUDIf()(f.delay[cp] == 0):
        # (Line 14) {
        # (Line 15) if (f.count[cp] == 0)
        if EUDIf()(f.count[cp] == 0):
            # (Line 16) {
            # (Line 17) if (f.loop[cp] == 0)
            if EUDIf()(f.loop[cp] == 0):
                # (Line 18) {
                # (Line 19) var x = 32;
                x = EUDVariable()
                x << (32)
                # (Line 20) var y = 32;
                y = EUDVariable()
                y << (32)
                # (Line 21) var x2 = 32;
                x2 = EUDVariable()
                x2 << (32)
                # (Line 22) var y2 = 0;
                y2 = EUDVariable()
                y2 << (0)
                # (Line 24) f.SquareShape(cp, 1, "40 + 1n Mojo", x, y);
                f.SquareShape(cp, 1, "40 + 1n Mojo", x, y)
                # (Line 25) f.SquareShape(cp, 1, "60 + 1n Archon", x, y);
                f.SquareShape(cp, 1, "60 + 1n Archon", x, y)
                # (Line 26) f.SquareShape(cp, 1, "Kakaru (Twilight)", x2, y2);
                f.SquareShape(cp, 1, "Kakaru (Twilight)", x2, y2)
                # (Line 28) KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp);
                # (Line 29) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", cp);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp))
                # (Line 31) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", cp))
                # (Line 32) Order("40 + 1n Mojo", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 34) f.SkillWait(cp, 160);
                DoActions(Order("40 + 1n Mojo", cp, "Anywhere", Attack, f.location[cp]))
                f.SkillWait(cp, 160)
                # (Line 36) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 37) }
                # (Line 38) else if (f.loop[cp] == 1)
            if EUDElseIf()(f.loop[cp] == 1):
                # (Line 39) {
                # (Line 40) KillUnitAt(All, "40 + 1n Mojo", "Anywhere", cp);
                # (Line 42) var x = 64;
                DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", cp))
                x = EUDVariable()
                x << (64)
                # (Line 43) var y = 0;
                y = EUDVariable()
                y << (0)
                # (Line 44) var x2 = 64;
                x2 = EUDVariable()
                x2 << (64)
                # (Line 45) var y2 = 64;
                y2 = EUDVariable()
                y2 << (64)
                # (Line 47) f.SquareShape(cp, 1, "40 + 1n Mojo", x, y);
                f.SquareShape(cp, 1, "40 + 1n Mojo", x, y)
                # (Line 48) f.SquareShape(cp, 1, "60 + 1n Archon", x, y);
                f.SquareShape(cp, 1, "60 + 1n Archon", x, y)
                # (Line 49) f.SquareShape(cp, 1, "Kakaru (Twilight)", x2, y2);
                f.SquareShape(cp, 1, "Kakaru (Twilight)", x2, y2)
                # (Line 51) KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp);
                # (Line 52) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", cp);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp))
                # (Line 54) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", cp))
                # (Line 55) Order("40 + 1n Mojo", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 57) f.SkillWait(cp, 160);
                DoActions(Order("40 + 1n Mojo", cp, "Anywhere", Attack, f.location[cp]))
                f.SkillWait(cp, 160)
                # (Line 58) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 59) }
                # (Line 60) else if (f.loop[cp] == 2)
            if EUDElseIf()(f.loop[cp] == 2):
                # (Line 61) {
                # (Line 62) KillUnitAt(All, "40 + 1n Mojo", "Anywhere", cp);
                # (Line 64) var x = 32;
                DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", cp))
                x = EUDVariable()
                x << (32)
                # (Line 65) var y = 0;
                y = EUDVariable()
                y << (0)
                # (Line 66) var x2 = 32;
                x2 = EUDVariable()
                x2 << (32)
                # (Line 67) var y2 = 32;
                y2 = EUDVariable()
                y2 << (32)
                # (Line 69) f.SquareShape(cp, 1, "Target", x, y);
                f.SquareShape(cp, 1, "Target", x, y)
                # (Line 70) f.SquareShape(cp, 1, "40 + 1n Goliath", x, y);
                f.SquareShape(cp, 1, "40 + 1n Goliath", x, y)
                # (Line 71) f.SquareShape(cp, 1, "Kakaru (Twilight)", x2, y2);
                f.SquareShape(cp, 1, "Kakaru (Twilight)", x2, y2)
                # (Line 73) KillUnitAt(All, "Target", "Anywhere", cp);
                # (Line 74) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", cp);
                DoActions(KillUnitAt(All, "Target", "Anywhere", cp))
                # (Line 76) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", cp))
                # (Line 77) MoveUnit(All, "40 + 1n Goliath", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 78) Order("40 + 1n Goliath", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveUnit(All, "40 + 1n Goliath", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                # (Line 80) f.SkillWait(cp, 160);
                DoActions(Order("40 + 1n Goliath", cp, "Anywhere", Attack, f.location[cp]))
                f.SkillWait(cp, 160)
                # (Line 82) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 83) }
                # (Line 84) else if (f.loop[cp] == 3)
            if EUDElseIf()(f.loop[cp] == 3):
                # (Line 85) {
                # (Line 86) KillUnitAt(All, "40 + 1n Goliath", "Anywhere", cp);
                # (Line 88) f.SquareShape(cp, 1, "Target", 96, 0);
                DoActions(KillUnitAt(All, "40 + 1n Goliath", "Anywhere", cp))
                f.SquareShape(cp, 1, "Target", 96, 0)
                # (Line 89) f.SquareShape(cp, 1, "Target", 64, 32);
                f.SquareShape(cp, 1, "Target", 64, 32)
                # (Line 90) f.SquareShape(cp, 1, "Target", 32, 64);
                f.SquareShape(cp, 1, "Target", 32, 64)
                # (Line 91) f.SquareShape(cp, 1, "60 + 1n Archon", 96, 0);
                f.SquareShape(cp, 1, "60 + 1n Archon", 96, 0)
                # (Line 92) f.SquareShape(cp, 1, "60 + 1n Archon", 64, 32);
                f.SquareShape(cp, 1, "60 + 1n Archon", 64, 32)
                # (Line 93) f.SquareShape(cp, 1, "60 + 1n Archon", 32, 64);
                f.SquareShape(cp, 1, "60 + 1n Archon", 32, 64)
                # (Line 95) f.SquareShape(cp, 1, "40 + 1n Goliath", 32, 32);
                f.SquareShape(cp, 1, "40 + 1n Goliath", 32, 32)
                # (Line 97) KillUnitAt(All, "Target", "Anywhere", cp);
                # (Line 98) KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp);
                DoActions(KillUnitAt(All, "Target", "Anywhere", cp))
                # (Line 100) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp))
                # (Line 101) MoveUnit(All, "40 + 1n Goliath", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 102) Order("40 + 1n Goliath", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveUnit(All, "40 + 1n Goliath", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                # (Line 104) f.SkillWait(cp, 160);
                DoActions(Order("40 + 1n Goliath", cp, "Anywhere", Attack, f.location[cp]))
                f.SkillWait(cp, 160)
                # (Line 105) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 106) }
                # (Line 107) else if (f.loop[cp] == 4)
            if EUDElseIf()(f.loop[cp] == 4):
                # (Line 108) {
                # (Line 109) KillUnitAt(All, "40 + 1n Goliath", "Anywhere", cp);
                # (Line 111) f.EdgeShape(cp, 1, "60 + 1n High Templar", 0, 4, 100);
                DoActions(KillUnitAt(All, "40 + 1n Goliath", "Anywhere", cp))
                f.EdgeShape(cp, 1, "60 + 1n High Templar", 0, 4, 100)
                # (Line 112) KillUnitAt(All, "60 + 1n High Templar", "Anywhere", cp);
                # (Line 114) f.SkillWait(cp, 160);
                DoActions(KillUnitAt(All, "60 + 1n High Templar", "Anywhere", cp))
                f.SkillWait(cp, 160)
                # (Line 116) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 117) }
                # (Line 118) else if (f.loop[cp] == 5)
            if EUDElseIf()(f.loop[cp] == 5):
                # (Line 119) {
                # (Line 120) var x = 100;
                x = EUDVariable()
                x << (100)
                # (Line 121) var y = 150;
                y = EUDVariable()
                y << (150)
                # (Line 123) var x2 = 150;
                x2 = EUDVariable()
                x2 << (150)
                # (Line 124) var y2 = 200;
                y2 = EUDVariable()
                y2 << (200)
                # (Line 126) f.SquareShape(cp, 1, "60 + 1n High Templar", x, y);
                f.SquareShape(cp, 1, "60 + 1n High Templar", x, y)
                # (Line 127) f.SquareShape(cp, 1, "60 + 1n High Templar", y, x);
                f.SquareShape(cp, 1, "60 + 1n High Templar", y, x)
                # (Line 128) f.SquareShape(cp, 1, "60 + 1n High Templar", x2, y2);
                f.SquareShape(cp, 1, "60 + 1n High Templar", x2, y2)
                # (Line 129) f.SquareShape(cp, 1, "60 + 1n High Templar", y2, x2);
                f.SquareShape(cp, 1, "60 + 1n High Templar", y2, x2)
                # (Line 130) KillUnitAt(All, "60 + 1n High Templar", "Anywhere", cp);
                # (Line 132) f.SkillWait(cp, 160);
                DoActions(KillUnitAt(All, "60 + 1n High Templar", "Anywhere", cp))
                f.SkillWait(cp, 160)
                # (Line 133) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 134) }
                # (Line 135) else if (f.loop[cp] == 6)
            if EUDElseIf()(f.loop[cp] == 6):
                # (Line 136) {
                # (Line 137) f.EdgeShape(cp, 1, "40 + 1n Mojo", 0, 4, 100);
                f.EdgeShape(cp, 1, "40 + 1n Mojo", 0, 4, 100)
                # (Line 138) f.EdgeShape(cp, 1, "60 + 1n Archon", 0, 5, 100);
                f.EdgeShape(cp, 1, "60 + 1n Archon", 0, 5, 100)
                # (Line 139) KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp);
                # (Line 141) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp))
                # (Line 142) Order("40 + 1n Mojo", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 144) f.SkillWait(cp, 160);
                DoActions(Order("40 + 1n Mojo", cp, "Anywhere", Attack, f.location[cp]))
                f.SkillWait(cp, 160)
                # (Line 145) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 146) }
                # (Line 147) else if (f.loop[cp] == 7)
            if EUDElseIf()(f.loop[cp] == 7):
                # (Line 148) {
                # (Line 149) KillUnitAt(All, "40 + 1n Mojo", "Anywhere", cp);
                # (Line 151) f.EdgeShape(cp, 1, "40 + 1n Mojo", 0, 5, 150);
                DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", cp))
                f.EdgeShape(cp, 1, "40 + 1n Mojo", 0, 5, 150)
                # (Line 152) f.EdgeShape(cp, 1, "60 + 1n Archon", 0, 7, 150);
                f.EdgeShape(cp, 1, "60 + 1n Archon", 0, 7, 150)
                # (Line 153) KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp);
                # (Line 155) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp))
                # (Line 156) Order("40 + 1n Mojo", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 158) f.SkillWait(cp, 160);
                DoActions(Order("40 + 1n Mojo", cp, "Anywhere", Attack, f.location[cp]))
                f.SkillWait(cp, 160)
                # (Line 159) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 160) }
                # (Line 161) else if (f.loop[cp] == 8)
            if EUDElseIf()(f.loop[cp] == 8):
                # (Line 162) {
                # (Line 163) KillUnitAt(All, "40 + 1n Mojo", "Anywhere", cp);
                # (Line 165) f.EdgeShape(cp, 1, "60 + 1n Danimoth", 0, 5, 150);
                DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", cp))
                f.EdgeShape(cp, 1, "60 + 1n Danimoth", 0, 5, 150)
                # (Line 166) f.EdgeShape(cp, 1, "50 + 1n Tank", 0, 5, 150);
                f.EdgeShape(cp, 1, "50 + 1n Tank", 0, 5, 150)
                # (Line 168) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                # (Line 169) MoveUnit(All, "50 + 1n Tank", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 170) Order("60 + 1n Danimoth", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveUnit(All, "50 + 1n Tank", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                # (Line 171) Order("50 + 1n Tank", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(Order("60 + 1n Danimoth", cp, "Anywhere", Attack, f.location[cp]))
                # (Line 173) f.SkillWait(cp, 160);
                DoActions(Order("50 + 1n Tank", cp, "Anywhere", Attack, f.location[cp]))
                f.SkillWait(cp, 160)
                # (Line 175) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 176) }
                # (Line 177) else if (f.loop[cp] == 9)
            if EUDElseIf()(f.loop[cp] == 9):
                # (Line 178) {
                # (Line 179) var x = 100;
                x = EUDVariable()
                x << (100)
                # (Line 180) var y = 150;
                y = EUDVariable()
                y << (150)
                # (Line 182) f.SquareShape(cp, 1, "40 + 1n Mojo", x, y);
                f.SquareShape(cp, 1, "40 + 1n Mojo", x, y)
                # (Line 183) f.SquareShape(cp, 1, "40 + 1n Mojo", y, x);
                f.SquareShape(cp, 1, "40 + 1n Mojo", y, x)
                # (Line 184) f.SquareShape(cp, 1, "60 + 1n Archon", x, y);
                f.SquareShape(cp, 1, "60 + 1n Archon", x, y)
                # (Line 185) f.SquareShape(cp, 1, "60 + 1n Archon", y, x);
                f.SquareShape(cp, 1, "60 + 1n Archon", y, x)
                # (Line 186) KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp);
                # (Line 188) f.EdgeShape(cp, 1, "Target", 45, 5, 100);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp))
                f.EdgeShape(cp, 1, "Target", 45, 5, 100)
                # (Line 189) KillUnitAt(All, "Target", "Anywhere", cp);
                # (Line 191) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                DoActions(KillUnitAt(All, "Target", "Anywhere", cp))
                # (Line 192) Order("40 + 1n Mojo", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 194) f.SkillWait(cp, 160);
                DoActions(Order("40 + 1n Mojo", cp, "Anywhere", Attack, f.location[cp]))
                f.SkillWait(cp, 160)
                # (Line 196) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 197) }
                # (Line 198) else if (f.loop[cp] == 10)
            if EUDElseIf()(f.loop[cp] == 10):
                # (Line 199) {
                # (Line 200) KillUnitAt(All, "40 + 1n Mojo", "Anywhere", cp);
                # (Line 202) var x = 150;
                DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", cp))
                x = EUDVariable()
                x << (150)
                # (Line 203) var y = 200;
                y = EUDVariable()
                y << (200)
                # (Line 205) f.SquareShape(cp, 1, "40 + 1n Mojo", x, y);
                f.SquareShape(cp, 1, "40 + 1n Mojo", x, y)
                # (Line 206) f.SquareShape(cp, 1, "40 + 1n Mojo", y, x);
                f.SquareShape(cp, 1, "40 + 1n Mojo", y, x)
                # (Line 207) f.SquareShape(cp, 1, "60 + 1n Archon", x, y);
                f.SquareShape(cp, 1, "60 + 1n Archon", x, y)
                # (Line 208) f.SquareShape(cp, 1, "60 + 1n Archon", y, x);
                f.SquareShape(cp, 1, "60 + 1n Archon", y, x)
                # (Line 209) KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp);
                # (Line 211) f.EdgeShape(cp, 1, "Target", 0, 5, 100);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp))
                f.EdgeShape(cp, 1, "Target", 0, 5, 100)
                # (Line 212) KillUnitAt(All, "Target", "Anywhere", cp);
                # (Line 214) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                DoActions(KillUnitAt(All, "Target", "Anywhere", cp))
                # (Line 215) Order("40 + 1n Mojo", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 217) f.SkillWait(cp, 160);
                DoActions(Order("40 + 1n Mojo", cp, "Anywhere", Attack, f.location[cp]))
                f.SkillWait(cp, 160)
                # (Line 219) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 220) }
                # (Line 221) else if (f.loop[cp] == 11)
            if EUDElseIf()(f.loop[cp] == 11):
                # (Line 222) {
                # (Line 223) KillUnitAt(All, "40 + 1n Mojo", "Anywhere", cp);
                # (Line 226) var x = 125;
                DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", cp))
                x = EUDVariable()
                x << (125)
                # (Line 227) var y = 175;
                y = EUDVariable()
                y << (175)
                # (Line 229) var x2 = 200;
                x2 = EUDVariable()
                x2 << (200)
                # (Line 230) var y2 = 250;
                y2 = EUDVariable()
                y2 << (250)
                # (Line 232) f.SquareShape(cp, 1, "60 + 1n Siege", x, y);
                f.SquareShape(cp, 1, "60 + 1n Siege", x, y)
                # (Line 233) f.SquareShape(cp, 1, "60 + 1n Siege", y, x);
                f.SquareShape(cp, 1, "60 + 1n Siege", y, x)
                # (Line 234) f.SquareShape(cp, 1, "60 + 1n Siege", x2, y2);
                f.SquareShape(cp, 1, "60 + 1n Siege", x2, y2)
                # (Line 235) f.SquareShape(cp, 1, "60 + 1n Siege", y2, x2);
                f.SquareShape(cp, 1, "60 + 1n Siege", y2, x2)
                # (Line 236) f.SquareShape(cp, 1, "50 + 1n Battlecruiser", x, y);
                f.SquareShape(cp, 1, "50 + 1n Battlecruiser", x, y)
                # (Line 237) f.SquareShape(cp, 1, "50 + 1n Battlecruiser", y, x);
                f.SquareShape(cp, 1, "50 + 1n Battlecruiser", y, x)
                # (Line 238) f.SquareShape(cp, 1, "50 + 1n Battlecruiser", x2, y2);
                f.SquareShape(cp, 1, "50 + 1n Battlecruiser", x2, y2)
                # (Line 239) f.SquareShape(cp, 1, "50 + 1n Battlecruiser", y2, x2);
                f.SquareShape(cp, 1, "50 + 1n Battlecruiser", y2, x2)
                # (Line 241) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                # (Line 242) Order("50 + 1n Battlecruiser", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 244) f.SkillWait(cp, 800);
                DoActions(Order("50 + 1n Battlecruiser", cp, "Anywhere", Attack, f.location[cp]))
                f.SkillWait(cp, 800)
                # (Line 246) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 247) }
                # (Line 248) else if (f.loop[cp] == 12)
            if EUDElseIf()(f.loop[cp] == 12):
                # (Line 249) {
                # (Line 250) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp);
                # (Line 251) KillUnitAt(All, "60 + 1n Danimoth", "Anywhere", cp);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp))
                # (Line 253) f.SkillWait(cp, 80);
                DoActions(KillUnitAt(All, "60 + 1n Danimoth", "Anywhere", cp))
                f.SkillWait(cp, 80)
                # (Line 255) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 256) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 257) }
                # (Line 260) }
            EUDEndIf()
            # (Line 261) else if (f.count[cp] == 1)
        if EUDElseIf()(f.count[cp] == 1):
            # (Line 262) {
            # (Line 263) if (f.loop[cp] < 4)
            if EUDIf()(f.loop[cp] >= 4, neg=True):
                # (Line 264) {
                # (Line 265) f.Table_Sin(cp, 22 + 45 * f.loop[cp], 75 + 75 * f.loop[cp]);
                f.Table_Sin(cp, 22 + 45 * f.loop[cp], 75 + 75 * f.loop[cp])
                # (Line 266) f.Table_Cos(cp, 22 + 45 * f.loop[cp], 75 + 75 * f.loop[cp]);
                f.Table_Cos(cp, 22 + 45 * f.loop[cp], 75 + 75 * f.loop[cp])
                # (Line 268) f.SquareShape(cp, 8, "60 + 1n High Templar", f.CosAngle[cp], f.SinAngle[cp]);
                f.SquareShape(cp, 8, "60 + 1n High Templar", f.CosAngle[cp], f.SinAngle[cp])
                # (Line 269) KillUnitAt(All, "60 + 1n High Templar", "Anywhere", cp);
                # (Line 271) f.SkillWait(cp, 160);
                DoActions(KillUnitAt(All, "60 + 1n High Templar", "Anywhere", cp))
                f.SkillWait(cp, 160)
                # (Line 272) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 273) }
                # (Line 274) else if (f.loop[cp] == 4)
            if EUDElseIf()(f.loop[cp] == 4):
                # (Line 275) {
                # (Line 276) f.Table_Sin(cp, 22, 75);
                f.Table_Sin(cp, 22, 75)
                # (Line 277) f.Table_Cos(cp, 22, 75);
                f.Table_Cos(cp, 22, 75)
                # (Line 279) f.SquareShape(cp, 4, " Unit. Hoffnung 25000", f.CosAngle[cp], f.SinAngle[cp]);
                f.SquareShape(cp, 4, " Unit. Hoffnung 25000", f.CosAngle[cp], f.SinAngle[cp])
                # (Line 281) f.Table_Sin(cp, 67, 150);
                f.Table_Sin(cp, 67, 150)
                # (Line 282) f.Table_Cos(cp, 67, 150);
                f.Table_Cos(cp, 67, 150)
                # (Line 284) f.SquareShape(cp, 4, " Unit. Hoffnung 25000", f.CosAngle[cp], f.SinAngle[cp]);
                f.SquareShape(cp, 4, " Unit. Hoffnung 25000", f.CosAngle[cp], f.SinAngle[cp])
                # (Line 286) f.Table_Sin(cp, 22, 225);
                f.Table_Sin(cp, 22, 225)
                # (Line 287) f.Table_Cos(cp, 22, 225);
                f.Table_Cos(cp, 22, 225)
                # (Line 289) f.SquareShape(cp, 4, " Unit. Hoffnung 25000", f.CosAngle[cp], f.SinAngle[cp]);
                f.SquareShape(cp, 4, " Unit. Hoffnung 25000", f.CosAngle[cp], f.SinAngle[cp])
                # (Line 291) f.Table_Sin(cp, 67, 300);
                f.Table_Sin(cp, 67, 300)
                # (Line 292) f.Table_Cos(cp, 67, 300);
                f.Table_Cos(cp, 67, 300)
                # (Line 294) f.SquareShape(cp, 4, " Unit. Hoffnung 25000", f.CosAngle[cp], f.SinAngle[cp]);
                f.SquareShape(cp, 4, " Unit. Hoffnung 25000", f.CosAngle[cp], f.SinAngle[cp])
                # (Line 296) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp);
                # (Line 298) f.SkillWait(cp, 80);
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp))
                f.SkillWait(cp, 80)
                # (Line 299) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 300) }
                # (Line 301) else if (f.loop[cp] == 5)
            if EUDElseIf()(f.loop[cp] == 5):
                # (Line 302) {
                # (Line 303) f.Table_Sin(cp, 22, 75);
                f.Table_Sin(cp, 22, 75)
                # (Line 304) f.Table_Cos(cp, 22, 75);
                f.Table_Cos(cp, 22, 75)
                # (Line 306) f.SquareShape(cp, 1, "40 + 1n Marine", f.CosAngle[cp], f.SinAngle[cp]);
                f.SquareShape(cp, 1, "40 + 1n Marine", f.CosAngle[cp], f.SinAngle[cp])
                # (Line 308) f.Table_Sin(cp, 67, 150);
                f.Table_Sin(cp, 67, 150)
                # (Line 309) f.Table_Cos(cp, 67, 150);
                f.Table_Cos(cp, 67, 150)
                # (Line 311) f.SquareShape(cp, 1, "40 + 1n Marine", f.CosAngle[cp], f.SinAngle[cp]);
                f.SquareShape(cp, 1, "40 + 1n Marine", f.CosAngle[cp], f.SinAngle[cp])
                # (Line 313) f.Table_Sin(cp, 22, 225);
                f.Table_Sin(cp, 22, 225)
                # (Line 314) f.Table_Cos(cp, 22, 225);
                f.Table_Cos(cp, 22, 225)
                # (Line 316) f.SquareShape(cp, 1, "40 + 1n Marine", f.CosAngle[cp], f.SinAngle[cp]);
                f.SquareShape(cp, 1, "40 + 1n Marine", f.CosAngle[cp], f.SinAngle[cp])
                # (Line 318) f.Table_Sin(cp, 67, 300);
                f.Table_Sin(cp, 67, 300)
                # (Line 319) f.Table_Cos(cp, 67, 300);
                f.Table_Cos(cp, 67, 300)
                # (Line 321) f.SquareShape(cp, 1, "40 + 1n Marine", f.CosAngle[cp], f.SinAngle[cp]);
                f.SquareShape(cp, 1, "40 + 1n Marine", f.CosAngle[cp], f.SinAngle[cp])
                # (Line 323) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                # (Line 324) MoveUnit(All, "40 + 1n Marine", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 325) Order("40 + 1n Marine", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveUnit(All, "40 + 1n Marine", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                # (Line 327) f.SkillWait(cp, 80);
                DoActions(Order("40 + 1n Marine", cp, "Anywhere", Attack, f.location[cp]))
                f.SkillWait(cp, 80)
                # (Line 328) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 329) }
                # (Line 330) else if (f.loop[cp] < 28)
            if EUDElseIf()(f.loop[cp] >= 28, neg=True):
                # (Line 331) {
                # (Line 332) f.Table_Sin(cp, 22 + 45 * (f.loop[cp] % 4), 75 + 75 * (f.loop[cp] % 4));
                f.Table_Sin(cp, 22 + 45 * (f.loop[cp] % 4), 75 + 75 * (f.loop[cp] % 4))
                # (Line 333) f.Table_Cos(cp, 22 + 45 * (f.loop[cp] % 4), 75 + 75 * (f.loop[cp] % 4));
                f.Table_Cos(cp, 22 + 45 * (f.loop[cp] % 4), 75 + 75 * (f.loop[cp] % 4))
                # (Line 335) f.SquareShape(cp, 8, "60 + 1n High Templar", f.CosAngle[cp], f.SinAngle[cp]);
                f.SquareShape(cp, 8, "60 + 1n High Templar", f.CosAngle[cp], f.SinAngle[cp])
                # (Line 336) KillUnitAt(All, "60 + 1n High Templar", "Anywhere", cp);
                # (Line 338) f.SkillWait(cp, 80);
                DoActions(KillUnitAt(All, "60 + 1n High Templar", "Anywhere", cp))
                f.SkillWait(cp, 80)
                # (Line 340) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 341) }
                # (Line 342) else if (f.loop[cp] == 28)
            if EUDElseIf()(f.loop[cp] == 28):
                # (Line 343) {
                # (Line 344) KillUnitAt(All, "40 + 1n Marine", "Anywhere", cp);
                # (Line 346) f.SkillWait(cp, 80);
                DoActions(KillUnitAt(All, "40 + 1n Marine", "Anywhere", cp))
                f.SkillWait(cp, 80)
                # (Line 348) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 349) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 350) }
                # (Line 351) }
            EUDEndIf()
            # (Line 352) else if (f.count[cp] == 2)
        if EUDElseIf()(f.count[cp] == 2):
            # (Line 353) {
            # (Line 354) if (f.loop[cp] < 4)
            if EUDIf()(f.loop[cp] >= 4, neg=True):
                # (Line 355) {
                # (Line 356) f.NxNSquareShape(cp, 1, "60 + 1n Danimoth", 3 + 2 * f.loop[cp], 75);
                f.NxNSquareShape(cp, 1, "60 + 1n Danimoth", 3 + 2 * f.loop[cp], 75)
                # (Line 357) f.NxNSquareShape(cp, 1, "60 + 1n Archon", 3 + 2 * f.loop[cp], 75);
                f.NxNSquareShape(cp, 1, "60 + 1n Archon", 3 + 2 * f.loop[cp], 75)
                # (Line 358) KillUnitAt(All, "60 + 1n Danimoth", "Anywhere", cp);
                # (Line 359) KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp);
                DoActions(KillUnitAt(All, "60 + 1n Danimoth", "Anywhere", cp))
                # (Line 361) f.SkillWait(cp, 80);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp))
                f.SkillWait(cp, 80)
                # (Line 362) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 363) }
                # (Line 364) else if (f.loop[cp] == 4)
            if EUDElseIf()(f.loop[cp] == 4):
                # (Line 365) {
                # (Line 366) f.NxNSquareShape(cp, 1, "40 + 1n Guardian", 9, 75);
                f.NxNSquareShape(cp, 1, "40 + 1n Guardian", 9, 75)
                # (Line 367) f.NxNSquareShape(cp, 1, "Protoss Dark Archon", 9, 75);
                f.NxNSquareShape(cp, 1, "Protoss Dark Archon", 9, 75)
                # (Line 368) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp);
                # (Line 369) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp))
                # (Line 371) f.SkillWait(cp, 80);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp))
                f.SkillWait(cp, 80)
                # (Line 373) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 374) }
                # (Line 375) else if (f.loop[cp] == 5)
            if EUDElseIf()(f.loop[cp] == 5):
                # (Line 376) {
                # (Line 377) f.NxNSquareShape(cp, 1, "60 + 1n Danimoth", 9, 75);
                f.NxNSquareShape(cp, 1, "60 + 1n Danimoth", 9, 75)
                # (Line 378) f.NxNSquareShape(cp, 1, " Unit. Hoffnung 25000", 9, 75);
                f.NxNSquareShape(cp, 1, " Unit. Hoffnung 25000", 9, 75)
                # (Line 379) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp);
                # (Line 381) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp))
                # (Line 382) Order("60 + 1n Danimoth", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 384) f.SkillWait(cp, 320);
                DoActions(Order("60 + 1n Danimoth", cp, "Anywhere", Attack, f.location[cp]))
                f.SkillWait(cp, 320)
                # (Line 386) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 387) }
                # (Line 388) else if (f.loop[cp] == 6)
            if EUDElseIf()(f.loop[cp] == 6):
                # (Line 389) {
                # (Line 390) KillUnitAt(All, "60 + 1n Danimoth", "Anywhere", cp);
                # (Line 392) f.SkillWait(cp, 800);
                DoActions(KillUnitAt(All, "60 + 1n Danimoth", "Anywhere", cp))
                f.SkillWait(cp, 800)
                # (Line 394) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 395) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 396) }
                # (Line 397) }
            EUDEndIf()
            # (Line 400) else if (f.count[cp] == 3)
        if EUDElseIf()(f.count[cp] == 3):
            # (Line 401) {
            # (Line 402) KillUnitAt(All, "60 + 1n Siege", "Anywhere", cp);
            # (Line 403) KillUnitAt(All, "50 + 1n Tank", "Anywhere", cp);
            DoActions(KillUnitAt(All, "60 + 1n Siege", "Anywhere", cp))
            # (Line 405) f.SkillEnd(cp);
            DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", cp))
            f.SkillEnd(cp)
            # (Line 406) }
            # (Line 407) }
        EUDEndIf()
        # (Line 408) }
    EUDEndIf()
