## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import Function as f;
import Function as f
# (Line 3) const s = StringBuffer();
s = _CGFW(lambda: [StringBuffer()], 1)[0]
# (Line 5) function main(cp)
# (Line 6) {
@EUDFunc
def f_main(cp):
    # (Line 7) if (Switch("Unique - Milim", Cleared))
    if EUDIf()(Switch("Unique - Milim", Cleared)):
        # (Line 8) {
        # (Line 9) f.HoldPosition(cp);
        f.HoldPosition(cp)
        # (Line 10) }
        # (Line 11) f.BanReturn(cp);
    EUDEndIf()
    f.BanReturn(cp)
    # (Line 13) if (f.delay[cp] == 0)
    if EUDIf()(f.delay[cp] == 0):
        # (Line 14) {
        # (Line 15) if (f.count[cp] == 0)
        if EUDIf()(f.count[cp] == 0):
            # (Line 16) {
            # (Line 17) if (f.loop[cp] == 0)
            if EUDIf()(f.loop[cp] == 0):
                # (Line 18) {
                # (Line 19) var x = 75;
                x = EUDVariable()
                x << (75)
                # (Line 20) var y = 125;
                y = EUDVariable()
                y << (125)
                # (Line 22) f.SquareShape(cp, 1, "40 + 1n Mojo", x, y);
                f.SquareShape(cp, 1, "40 + 1n Mojo", x, y)
                # (Line 23) f.SquareShape(cp, 1, "40 + 1n Mojo", y, x);
                f.SquareShape(cp, 1, "40 + 1n Mojo", y, x)
                # (Line 24) f.SquareShape(cp, 1, " Unit. Hoffnung 25000", x, y);
                f.SquareShape(cp, 1, " Unit. Hoffnung 25000", x, y)
                # (Line 25) f.SquareShape(cp, 1, " Unit. Hoffnung 25000", y, x);
                f.SquareShape(cp, 1, " Unit. Hoffnung 25000", y, x)
                # (Line 26) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp);
                # (Line 28) f.EdgeShape(cp, 1, "Target", 45, 5, 100);
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp))
                f.EdgeShape(cp, 1, "Target", 45, 5, 100)
                # (Line 29) KillUnitAt(All, "Target", "Anywhere", cp);
                # (Line 31) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                DoActions(KillUnitAt(All, "Target", "Anywhere", cp))
                # (Line 32) Order("40 + 1n Mojo", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 34) f.SkillWait(cp, 80);
                DoActions(Order("40 + 1n Mojo", cp, "Anywhere", Attack, f.location[cp]))
                f.SkillWait(cp, 80)
                # (Line 36) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 37) }
                # (Line 38) else if (f.loop[cp] == 1)
            if EUDElseIf()(f.loop[cp] == 1):
                # (Line 39) {
                # (Line 40) KillUnitAt(All, "40 + 1n Mojo", "Anywhere", cp);
                # (Line 42) var x = 125;
                DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", cp))
                x = EUDVariable()
                x << (125)
                # (Line 43) var y = 175;
                y = EUDVariable()
                y << (175)
                # (Line 45) f.SquareShape(cp, 1, "40 + 1n Mojo", x, y);
                f.SquareShape(cp, 1, "40 + 1n Mojo", x, y)
                # (Line 46) f.SquareShape(cp, 1, "40 + 1n Mojo", y, x);
                f.SquareShape(cp, 1, "40 + 1n Mojo", y, x)
                # (Line 47) f.SquareShape(cp, 1, " Unit. Hoffnung 25000", x, y);
                f.SquareShape(cp, 1, " Unit. Hoffnung 25000", x, y)
                # (Line 48) f.SquareShape(cp, 1, " Unit. Hoffnung 25000", y, x);
                f.SquareShape(cp, 1, " Unit. Hoffnung 25000", y, x)
                # (Line 49) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp);
                # (Line 51) f.EdgeShape(cp, 1, "Target", 0, 5, 100);
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp))
                f.EdgeShape(cp, 1, "Target", 0, 5, 100)
                # (Line 52) KillUnitAt(All, "Target", "Anywhere", cp);
                # (Line 54) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                DoActions(KillUnitAt(All, "Target", "Anywhere", cp))
                # (Line 55) Order("40 + 1n Mojo", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 57) f.SkillWait(cp, 80);
                DoActions(Order("40 + 1n Mojo", cp, "Anywhere", Attack, f.location[cp]))
                f.SkillWait(cp, 80)
                # (Line 59) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 60) }
                # (Line 61) else if (f.loop[cp] == 2)
            if EUDElseIf()(f.loop[cp] == 2):
                # (Line 62) {
                # (Line 63) KillUnitAt(All, "40 + 1n Mojo", "Anywhere", cp);
                # (Line 65) var x = 75;
                DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", cp))
                x = EUDVariable()
                x << (75)
                # (Line 66) var y = 125;
                y = EUDVariable()
                y << (125)
                # (Line 68) f.SquareShape(cp, 1, "Kakaru (Twilight)", x, y);
                f.SquareShape(cp, 1, "Kakaru (Twilight)", x, y)
                # (Line 69) f.SquareShape(cp, 1, "Kakaru (Twilight)", y, x);
                f.SquareShape(cp, 1, "Kakaru (Twilight)", y, x)
                # (Line 71) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", cp);
                # (Line 73) x = 125;
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", cp))
                x << (125)
                # (Line 74) y = 175;
                y << (175)
                # (Line 76) f.SquareShape(cp, 1, "Kakaru (Twilight)", x, y);
                f.SquareShape(cp, 1, "Kakaru (Twilight)", x, y)
                # (Line 77) f.SquareShape(cp, 1, "Kakaru (Twilight)", y, x);
                f.SquareShape(cp, 1, "Kakaru (Twilight)", y, x)
                # (Line 79) f.EdgeShape(cp, 1, "40 + 1n Wraith", 0, 5, 100);
                f.EdgeShape(cp, 1, "40 + 1n Wraith", 0, 5, 100)
                # (Line 80) f.EdgeShape(cp, 1, "40 + 1n Firebat", 0, 3, 100);
                f.EdgeShape(cp, 1, "40 + 1n Firebat", 0, 3, 100)
                # (Line 82) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", cp);
                # (Line 83) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", cp);
                DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", cp))
                # (Line 85) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", cp))
                # (Line 86) MoveUnit(All, "40 + 1n Firebat", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 87) Order("40 + 1n Firebat", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveUnit(All, "40 + 1n Firebat", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                # (Line 89) f.SkillWait(cp, 80);
                DoActions(Order("40 + 1n Firebat", cp, "Anywhere", Attack, f.location[cp]))
                f.SkillWait(cp, 80)
                # (Line 91) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 92) }
                # (Line 93) else if (f.loop[cp] < 7)
            if EUDElseIf()(f.loop[cp] >= 7, neg=True):
                # (Line 94) {
                # (Line 95) KillUnitAt(All, "40 + 1n Mojo", "Anywhere", cp);
                # (Line 97) f.LineShape(cp, 1, "40 + 1n Mojo", 45 * (f.loop[cp] % 4), 5, 64, 0);
                DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", cp))
                f.LineShape(cp, 1, "40 + 1n Mojo", 45 * (f.loop[cp] % 4), 5, 64, 0)
                # (Line 98) f.LineShape(cp, 1, "Protoss Dark Archon", 45 * (f.loop[cp] % 4), 5, 64, 0);
                f.LineShape(cp, 1, "Protoss Dark Archon", 45 * (f.loop[cp] % 4), 5, 64, 0)
                # (Line 99) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp);
                # (Line 101) Order("40 + 1n Mojo", cp, "Anywhere", Attack, "Anywhere");
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp))
                # (Line 103) f.SkillWait(cp, 240);
                DoActions(Order("40 + 1n Mojo", cp, "Anywhere", Attack, "Anywhere"))
                f.SkillWait(cp, 240)
                # (Line 105) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 106) }
                # (Line 107) else if (f.loop[cp] == 7)
            if EUDElseIf()(f.loop[cp] == 7):
                # (Line 108) {
                # (Line 109) KillUnitAt(All, "40 + 1n Mojo", "Anywhere", cp);
                # (Line 111) f.SkillWait(cp, 320);
                DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", cp))
                f.SkillWait(cp, 320)
                # (Line 113) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 114) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 115) }
                # (Line 116) }
            EUDEndIf()
            # (Line 117) else if (f.count[cp] == 1)
        if EUDElseIf()(f.count[cp] == 1):
            # (Line 118) {
            # (Line 119) if (f.loop[cp] == 0)
            if EUDIf()(f.loop[cp] == 0):
                # (Line 120) {
                # (Line 121) f.Table_Sin(cp, 22, 75);
                f.Table_Sin(cp, 22, 75)
                # (Line 122) f.Table_Cos(cp, 22, 75);
                f.Table_Cos(cp, 22, 75)
                # (Line 124) f.SquareShape(cp, 1, "50 + 1n Battlecruiser", f.CosAngle[cp], f.SinAngle[cp]);
                f.SquareShape(cp, 1, "50 + 1n Battlecruiser", f.CosAngle[cp], f.SinAngle[cp])
                # (Line 125) f.SquareShape(cp, 1, "60 + 1n Archon", f.CosAngle[cp], f.SinAngle[cp]);
                f.SquareShape(cp, 1, "60 + 1n Archon", f.CosAngle[cp], f.SinAngle[cp])
                # (Line 126) KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp);
                # (Line 128) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp))
                # (Line 129) MoveUnit(All, "50 + 1n Tank", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 130) Order("50 + 1n Battlecruiser", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveUnit(All, "50 + 1n Tank", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                # (Line 132) f.SkillWait(cp, 160);
                DoActions(Order("50 + 1n Battlecruiser", cp, "Anywhere", Attack, f.location[cp]))
                f.SkillWait(cp, 160)
                # (Line 134) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 135) }
                # (Line 136) else if (f.loop[cp] == 1)
            if EUDElseIf()(f.loop[cp] == 1):
                # (Line 137) {
                # (Line 138) f.Table_Sin(cp, 67, 125);
                f.Table_Sin(cp, 67, 125)
                # (Line 139) f.Table_Cos(cp, 67, 125);
                f.Table_Cos(cp, 67, 125)
                # (Line 141) f.SquareShape(cp, 1, "40 + 1n Gantrithor", f.CosAngle[cp], f.SinAngle[cp]);
                f.SquareShape(cp, 1, "40 + 1n Gantrithor", f.CosAngle[cp], f.SinAngle[cp])
                # (Line 142) f.SquareShape(cp, 1, "50 + 1n Tank", f.CosAngle[cp], f.SinAngle[cp]);
                f.SquareShape(cp, 1, "50 + 1n Tank", f.CosAngle[cp], f.SinAngle[cp])
                # (Line 143) KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", cp);
                # (Line 145) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", cp))
                # (Line 146) MoveUnit(All, "50 + 1n Tank", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 147) Order("50 + 1n Tank", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveUnit(All, "50 + 1n Tank", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                # (Line 149) f.SkillWait(cp, 160);
                DoActions(Order("50 + 1n Tank", cp, "Anywhere", Attack, f.location[cp]))
                f.SkillWait(cp, 160)
                # (Line 151) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 152) }
                # (Line 153) else if (f.loop[cp] == 2)
            if EUDElseIf()(f.loop[cp] == 2):
                # (Line 154) {
                # (Line 155) f.Table_Sin(cp, 22, 175);
                f.Table_Sin(cp, 22, 175)
                # (Line 156) f.Table_Cos(cp, 22, 175);
                f.Table_Cos(cp, 22, 175)
                # (Line 158) f.SquareShape(cp, 1, "50 + 1n Battlecruiser", f.CosAngle[cp], f.SinAngle[cp]);
                f.SquareShape(cp, 1, "50 + 1n Battlecruiser", f.CosAngle[cp], f.SinAngle[cp])
                # (Line 159) f.SquareShape(cp, 1, "60 + 1n Archon", f.CosAngle[cp], f.SinAngle[cp]);
                f.SquareShape(cp, 1, "60 + 1n Archon", f.CosAngle[cp], f.SinAngle[cp])
                # (Line 160) KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp);
                # (Line 162) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp))
                # (Line 163) MoveUnit(All, "50 + 1n Tank", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 164) Order("50 + 1n Battlecruiser", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveUnit(All, "50 + 1n Tank", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                # (Line 166) f.SkillWait(cp, 160);
                DoActions(Order("50 + 1n Battlecruiser", cp, "Anywhere", Attack, f.location[cp]))
                f.SkillWait(cp, 160)
                # (Line 168) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 169) }
                # (Line 170) else if (f.loop[cp] == 3)
            if EUDElseIf()(f.loop[cp] == 3):
                # (Line 171) {
                # (Line 172) f.Table_Sin(cp, 67, 225);
                f.Table_Sin(cp, 67, 225)
                # (Line 173) f.Table_Cos(cp, 67, 225);
                f.Table_Cos(cp, 67, 225)
                # (Line 175) f.SquareShape(cp, 1, "40 + 1n Gantrithor", f.CosAngle[cp], f.SinAngle[cp]);
                f.SquareShape(cp, 1, "40 + 1n Gantrithor", f.CosAngle[cp], f.SinAngle[cp])
                # (Line 176) f.SquareShape(cp, 1, "50 + 1n Tank", f.CosAngle[cp], f.SinAngle[cp]);
                f.SquareShape(cp, 1, "50 + 1n Tank", f.CosAngle[cp], f.SinAngle[cp])
                # (Line 177) KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", cp);
                # (Line 179) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", cp))
                # (Line 180) MoveUnit(All, "50 + 1n Tank", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 181) Order("50 + 1n Tank", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveUnit(All, "50 + 1n Tank", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                # (Line 184) f.SkillWait(cp, 160);
                DoActions(Order("50 + 1n Tank", cp, "Anywhere", Attack, f.location[cp]))
                f.SkillWait(cp, 160)
                # (Line 186) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 187) }
                # (Line 188) else if (f.loop[cp] == 4)
            if EUDElseIf()(f.loop[cp] == 4):
                # (Line 189) {
                # (Line 190) f.SkillWait(cp, 480);
                f.SkillWait(cp, 480)
                # (Line 192) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 193) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 194) }
                # (Line 195) }
            EUDEndIf()
            # (Line 196) else if (f.count[cp] == 2)
        if EUDElseIf()(f.count[cp] == 2):
            # (Line 197) {
            # (Line 198) if (f.loop[cp] < 4)
            if EUDIf()(f.loop[cp] >= 4, neg=True):
                # (Line 199) {
                # (Line 200) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp);
                # (Line 202) RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", cp);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp))
                # (Line 204) f.Table_Sin(cp, 22 + 45 * (f.loop[cp] % 4), 75);
                DoActions(RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", cp))
                f.Table_Sin(cp, 22 + 45 * (f.loop[cp] % 4), 75)
                # (Line 205) f.Table_Cos(cp, 22 + 45 * (f.loop[cp] % 4), 75);
                f.Table_Cos(cp, 22 + 45 * (f.loop[cp] % 4), 75)
                # (Line 207) f.SquareShape(cp, 1, "40 + 1n Wraith", f.CosAngle[cp], f.SinAngle[cp]);
                f.SquareShape(cp, 1, "40 + 1n Wraith", f.CosAngle[cp], f.SinAngle[cp])
                # (Line 208) f.SquareShape(cp, 7, "40 + 1n Zealot", f.CosAngle[cp], f.SinAngle[cp]);
                f.SquareShape(cp, 7, "40 + 1n Zealot", f.CosAngle[cp], f.SinAngle[cp])
                # (Line 209) KillUnitAt(All, "40 + 1n Zealot", "Anywhere", cp);
                # (Line 211) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                DoActions(KillUnitAt(All, "40 + 1n Zealot", "Anywhere", cp))
                # (Line 212) Order("40 + 1n Wraith", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 214) f.SkillWait(cp, 160);
                DoActions(Order("40 + 1n Wraith", cp, "Anywhere", Attack, f.location[cp]))
                f.SkillWait(cp, 160)
                # (Line 216) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 217) }
                # (Line 218) else if (f.loop[cp] < 8)
            if EUDElseIf()(f.loop[cp] >= 8, neg=True):
                # (Line 219) {
                # (Line 220) RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", cp);
                # (Line 222) f.Table_Sin(cp, 22 + 22 * (f.loop[cp] % 4), 225);
                DoActions(RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", cp))
                f.Table_Sin(cp, 22 + 22 * (f.loop[cp] % 4), 225)
                # (Line 223) f.Table_Cos(cp, 22 + 22 * (f.loop[cp] % 4), 225);
                f.Table_Cos(cp, 22 + 22 * (f.loop[cp] % 4), 225)
                # (Line 225) f.SquareShape(cp, 1, "80 + 1n Tank", f.CosAngle[cp], f.SinAngle[cp]);
                f.SquareShape(cp, 1, "80 + 1n Tank", f.CosAngle[cp], f.SinAngle[cp])
                # (Line 226) KillUnitAt(All, "80 + 1n Tank", "Anywhere", cp);
                # (Line 228) f.SkillWait(cp, 80);
                DoActions(KillUnitAt(All, "80 + 1n Tank", "Anywhere", cp))
                f.SkillWait(cp, 80)
                # (Line 230) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 231) }
                # (Line 232) else if (f.loop[cp] < 12)
            if EUDElseIf()(f.loop[cp] >= 12, neg=True):
                # (Line 233) {
                # (Line 234) RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", cp);
                # (Line 236) f.Table_Sin(cp, 22 + 22 * (f.loop[cp] % 4), 225);
                DoActions(RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", cp))
                f.Table_Sin(cp, 22 + 22 * (f.loop[cp] % 4), 225)
                # (Line 237) f.Table_Cos(cp, 22 + 22 * (f.loop[cp] % 4), 225);
                f.Table_Cos(cp, 22 + 22 * (f.loop[cp] % 4), 225)
                # (Line 239) f.SquareShape(cp, 1, "40 + 1n Wraith", f.CosAngle[cp], f.SinAngle[cp]);
                f.SquareShape(cp, 1, "40 + 1n Wraith", f.CosAngle[cp], f.SinAngle[cp])
                # (Line 240) f.SquareShape(cp, 1, " Unit. Hoffnung 25000", f.CosAngle[cp], f.SinAngle[cp]);
                f.SquareShape(cp, 1, " Unit. Hoffnung 25000", f.CosAngle[cp], f.SinAngle[cp])
                # (Line 241) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp);
                # (Line 243) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp))
                # (Line 244) Order("40 + 1n Wraith", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 246) f.SkillWait(cp, 80);
                DoActions(Order("40 + 1n Wraith", cp, "Anywhere", Attack, f.location[cp]))
                f.SkillWait(cp, 80)
                # (Line 248) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 249) }
                # (Line 250) else if (f.loop[cp] == 12)
            if EUDElseIf()(f.loop[cp] == 12):
                # (Line 251) {
                # (Line 252) RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", cp);
                # (Line 254) f.SkillWait(cp, 640);
                DoActions(RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", cp))
                f.SkillWait(cp, 640)
                # (Line 256) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 257) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 258) }
                # (Line 259) }
            EUDEndIf()
            # (Line 260) else if (f.count[cp] == 3)
        if EUDElseIf()(f.count[cp] == 3):
            # (Line 261) {
            # (Line 262) KillUnitAt(All, "40 + 1n Firebat", "Anywhere", cp);
            # (Line 263) KillUnitAt(All, "50 + 1n Tank", "Anywhere", cp);
            DoActions(KillUnitAt(All, "40 + 1n Firebat", "Anywhere", cp))
            # (Line 264) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp);
            DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", cp))
            # (Line 266) f.SkillEnd(cp);
            DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp))
            f.SkillEnd(cp)
            # (Line 267) }
            # (Line 268) }
        EUDEndIf()
        # (Line 269) }
    EUDEndIf()
