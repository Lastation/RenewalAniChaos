## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import Function as f;
import Function as f
# (Line 3) function main(cp)
# (Line 4) {
@EUDFunc
def f_main(cp):
    # (Line 5) if (f.delay[cp] == 0)
    if EUDIf()(f.delay[cp] == 0):
        # (Line 6) {
        # (Line 7) if (f.count[cp] == 0)
        if EUDIf()(f.count[cp] == 0):
            # (Line 8) {
            # (Line 9) if (f.loop[cp] == 0)
            if EUDIf()(f.loop[cp] == 0):
                # (Line 10) {
                # (Line 11) SetSwitch("ComputerAlliy", Set);
                # (Line 12) SetAllianceStatus(P7, Ally);
                DoActions(SetSwitch("ComputerAlliy", Set))
                # (Line 13) SetAllianceStatus(P8, Ally);
                DoActions(SetAllianceStatus(P7, Ally))
                # (Line 14) f.ShieldFix(cp, 1);
                DoActions(SetAllianceStatus(P8, Ally))
                f.ShieldFix(cp, 1)
                # (Line 15) f.NxNSquareShape(cp, 1, "130 + 1n Norad", 7, 75);
                f.NxNSquareShape(cp, 1, "130 + 1n Norad", 7, 75)
                # (Line 16) f.NxNSquareShape(cp, 1, "80 + 1n Goliath", 7, 50);
                f.NxNSquareShape(cp, 1, "80 + 1n Goliath", 7, 50)
                # (Line 17) Order("130 + 1n Norad", cp, "Anywhere", Attack, f.location[cp]);
                # (Line 18) Order("80 + 1n Goliath", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(Order("130 + 1n Norad", cp, "Anywhere", Attack, f.location[cp]))
                # (Line 19) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                DoActions(Order("80 + 1n Goliath", cp, "Anywhere", Attack, f.location[cp]))
                # (Line 20) }
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 21) if (f.loop[cp] == 4)
            EUDEndIf()
            if EUDIf()(f.loop[cp] == 4):
                # (Line 22) {
                # (Line 23) KillUnitAt(All, "130 + 1n Norad", "Anywhere", cp);
                # (Line 24) KillUnitAt(All, "80 + 1n Goliath", "Anywhere", cp);
                DoActions(KillUnitAt(All, "130 + 1n Norad", "Anywhere", cp))
                # (Line 25) f.NxNSquareShape(cp, 1, "130 + 1n Norad", 7, 75);
                DoActions(KillUnitAt(All, "80 + 1n Goliath", "Anywhere", cp))
                f.NxNSquareShape(cp, 1, "130 + 1n Norad", 7, 75)
                # (Line 26) f.NxNSquareShape(cp, 1, "80 + 1n Goliath", 7, 50);
                f.NxNSquareShape(cp, 1, "80 + 1n Goliath", 7, 50)
                # (Line 27) Order("130 + 1n Norad", cp, "Anywhere", Attack, f.location[cp]);
                # (Line 28) Order("80 + 1n Goliath", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(Order("130 + 1n Norad", cp, "Anywhere", Attack, f.location[cp]))
                # (Line 29) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                DoActions(Order("80 + 1n Goliath", cp, "Anywhere", Attack, f.location[cp]))
                # (Line 30) }
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 31) if (f.loop[cp] == 6)
            EUDEndIf()
            if EUDIf()(f.loop[cp] == 6):
                # (Line 32) {
                # (Line 33) KillUnitAt(All, "130 + 1n Norad", "Anywhere", cp);
                # (Line 34) KillUnitAt(All, "80 + 1n Goliath", "Anywhere", cp);
                DoActions(KillUnitAt(All, "130 + 1n Norad", "Anywhere", cp))
                # (Line 35) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                DoActions(KillUnitAt(All, "80 + 1n Goliath", "Anywhere", cp))
                # (Line 36) }
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 37) f.SkillWait(cp, 80);
            EUDEndIf()
            f.SkillWait(cp, 80)
            # (Line 39) f.loop[cp] += 1;
            _ARRW(f.loop, cp).__iadd__(1)
            # (Line 41) if (f.loop[cp] == 10)
            if EUDIf()(f.loop[cp] == 10):
                # (Line 42) {
                # (Line 43) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 44) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 45) }
                # (Line 47) }
            EUDEndIf()
            # (Line 49) if (f.count[cp] == 1)
        EUDEndIf()
        if EUDIf()(f.count[cp] == 1):
            # (Line 50) {
            # (Line 51) if (f.loop[cp] < 4)
            if EUDIf()(f.loop[cp] >= 4, neg=True):
                # (Line 52) {
                # (Line 53) var x = 50 * f.loop[cp];
                x = EUDVariable()
                x << (50 * f.loop[cp])
                # (Line 54) var y = 200 - 50 * f.loop[cp];
                y = EUDVariable()
                y << (200 - 50 * f.loop[cp])
                # (Line 56) f.DotShape(cp, 1, "50 + 1n Tank", x, y);
                f.DotShape(cp, 1, "50 + 1n Tank", x, y)
                # (Line 57) f.DotShape(cp, 1, "50 + 1n Tank", -x, -y);
                f.DotShape(cp, 1, "50 + 1n Tank", -x, -y)
                # (Line 58) f.DotShape(cp, 1, "Protoss Dark Archon", -y, x);
                f.DotShape(cp, 1, "Protoss Dark Archon", -y, x)
                # (Line 59) f.DotShape(cp, 1, "Protoss Dark Archon", y, -x);
                f.DotShape(cp, 1, "Protoss Dark Archon", y, -x)
                # (Line 60) KillUnitAt(All, "50 + 1n Tank", "Anywhere", cp);
                # (Line 61) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", cp))
                # (Line 63) f.SkillWaitB(cp, 80);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp))
                f.SkillWaitB(cp, 80)
                # (Line 65) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 66) }
                # (Line 67) else if (f.loop[cp] < 8)
            if EUDElseIf()(f.loop[cp] >= 8, neg=True):
                # (Line 68) {
                # (Line 69) var x = 200 - 50 * (f.loop[cp] - 4);
                x = EUDVariable()
                x << (200 - 50 * (f.loop[cp] - 4))
                # (Line 70) var y = -50 * (f.loop[cp] - 4);
                y = EUDVariable()
                y << (-50 * (f.loop[cp] - 4))
                # (Line 72) RemoveUnitAt(All, "80 + 1n Tom Kazansky", "Anywhere", cp);
                # (Line 73) f.DotShape(cp, 1, "80 + 1n Tom Kazansky", x, y);
                DoActions(RemoveUnitAt(All, "80 + 1n Tom Kazansky", "Anywhere", cp))
                f.DotShape(cp, 1, "80 + 1n Tom Kazansky", x, y)
                # (Line 74) f.DotShape(cp, 1, "50 + 1n Tank", x, y);
                f.DotShape(cp, 1, "50 + 1n Tank", x, y)
                # (Line 75) f.DotShape(cp, 1, "80 + 1n Tom Kazansky", -x, -y);
                f.DotShape(cp, 1, "80 + 1n Tom Kazansky", -x, -y)
                # (Line 76) f.DotShape(cp, 1, "50 + 1n Tank", -x, -y);
                f.DotShape(cp, 1, "50 + 1n Tank", -x, -y)
                # (Line 77) f.DotShape(cp, 1, "80 + 1n Tom Kazansky", -y, x);
                f.DotShape(cp, 1, "80 + 1n Tom Kazansky", -y, x)
                # (Line 78) f.DotShape(cp, 1, "Protoss Dark Archon", -y, x);
                f.DotShape(cp, 1, "Protoss Dark Archon", -y, x)
                # (Line 79) f.DotShape(cp, 1, "80 + 1n Tom Kazansky", y, -x);
                f.DotShape(cp, 1, "80 + 1n Tom Kazansky", y, -x)
                # (Line 80) f.DotShape(cp, 1, "Protoss Dark Archon", y, -x);
                f.DotShape(cp, 1, "Protoss Dark Archon", y, -x)
                # (Line 81) KillUnitAt(All, "50 + 1n Tank", "Anywhere", cp);
                # (Line 82) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", cp))
                # (Line 83) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp))
                # (Line 84) Order("80 + 1n Tom Kazansky", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 86) f.SkillWaitB(cp, 80);
                DoActions(Order("80 + 1n Tom Kazansky", cp, "Anywhere", Attack, f.location[cp]))
                f.SkillWaitB(cp, 80)
                # (Line 88) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 89) }
                # (Line 90) else if (f.loop[cp] < 11)
            if EUDElseIf()(f.loop[cp] >= 11, neg=True):
                # (Line 91) {
                # (Line 92) var x = 200 - 50 * (f.loop[cp] - 8);
                x = EUDVariable()
                x << (200 - 50 * (f.loop[cp] - 8))
                # (Line 93) var y = -50 * (f.loop[cp] - 8);
                y = EUDVariable()
                y << (-50 * (f.loop[cp] - 8))
                # (Line 95) RemoveUnitAt(All, "80 + 1n Tom Kazansky", "Anywhere", cp);
                # (Line 96) f.DotShape(cp, 1, "80 + 1n Tom Kazansky", x, y);
                DoActions(RemoveUnitAt(All, "80 + 1n Tom Kazansky", "Anywhere", cp))
                f.DotShape(cp, 1, "80 + 1n Tom Kazansky", x, y)
                # (Line 97) f.DotShape(cp, 1, "50 + 1n Tank", x, y);
                f.DotShape(cp, 1, "50 + 1n Tank", x, y)
                # (Line 98) f.DotShape(cp, 1, "80 + 1n Tom Kazansky", -x, -y);
                f.DotShape(cp, 1, "80 + 1n Tom Kazansky", -x, -y)
                # (Line 99) f.DotShape(cp, 1, "50 + 1n Tank", -x, -y);
                f.DotShape(cp, 1, "50 + 1n Tank", -x, -y)
                # (Line 100) f.DotShape(cp, 1, "80 + 1n Tom Kazansky", -y, x);
                f.DotShape(cp, 1, "80 + 1n Tom Kazansky", -y, x)
                # (Line 101) f.DotShape(cp, 1, "Protoss Dark Archon", -y, x);
                f.DotShape(cp, 1, "Protoss Dark Archon", -y, x)
                # (Line 102) f.DotShape(cp, 1, "80 + 1n Tom Kazansky", y, -x);
                f.DotShape(cp, 1, "80 + 1n Tom Kazansky", y, -x)
                # (Line 103) f.DotShape(cp, 1, "Protoss Dark Archon", y, -x);
                f.DotShape(cp, 1, "Protoss Dark Archon", y, -x)
                # (Line 104) KillUnitAt(All, "50 + 1n Tank", "Anywhere", cp);
                # (Line 105) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", cp))
                # (Line 106) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp))
                # (Line 107) Order("80 + 1n Tom Kazansky", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 109) f.SkillWaitB(cp, 80);
                DoActions(Order("80 + 1n Tom Kazansky", cp, "Anywhere", Attack, f.location[cp]))
                f.SkillWaitB(cp, 80)
                # (Line 111) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 112) }
                # (Line 113) else if (f.loop[cp] == 11)
            if EUDElseIf()(f.loop[cp] == 11):
                # (Line 114) {
                # (Line 115) var x = 200 - 50 * (f.loop[cp] - 8);
                x = EUDVariable()
                x << (200 - 50 * (f.loop[cp] - 8))
                # (Line 116) var y = -50 * (f.loop[cp] - 8);
                y = EUDVariable()
                y << (-50 * (f.loop[cp] - 8))
                # (Line 118) RemoveUnitAt(All, "80 + 1n Tom Kazansky", "Anywhere", cp);
                # (Line 119) f.DotShape(cp, 1, "80 + 1n Tom Kazansky", x, y);
                DoActions(RemoveUnitAt(All, "80 + 1n Tom Kazansky", "Anywhere", cp))
                f.DotShape(cp, 1, "80 + 1n Tom Kazansky", x, y)
                # (Line 120) f.DotShape(cp, 1, "50 + 1n Tank", x, y);
                f.DotShape(cp, 1, "50 + 1n Tank", x, y)
                # (Line 121) f.DotShape(cp, 1, "80 + 1n Tom Kazansky", -x, -y);
                f.DotShape(cp, 1, "80 + 1n Tom Kazansky", -x, -y)
                # (Line 122) f.DotShape(cp, 1, "50 + 1n Tank", -x, -y);
                f.DotShape(cp, 1, "50 + 1n Tank", -x, -y)
                # (Line 123) f.DotShape(cp, 1, "80 + 1n Tom Kazansky", -y, x);
                f.DotShape(cp, 1, "80 + 1n Tom Kazansky", -y, x)
                # (Line 124) f.DotShape(cp, 1, "Protoss Dark Archon", -y, x);
                f.DotShape(cp, 1, "Protoss Dark Archon", -y, x)
                # (Line 125) f.DotShape(cp, 1, "80 + 1n Tom Kazansky", y, -x);
                f.DotShape(cp, 1, "80 + 1n Tom Kazansky", y, -x)
                # (Line 126) f.DotShape(cp, 1, "Protoss Dark Archon", y, -x);
                f.DotShape(cp, 1, "Protoss Dark Archon", y, -x)
                # (Line 127) KillUnitAt(All, "50 + 1n Tank", "Anywhere", cp);
                # (Line 128) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", cp))
                # (Line 129) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp))
                # (Line 130) Order("80 + 1n Tom Kazansky", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 132) f.SkillWaitB(cp, 80);
                DoActions(Order("80 + 1n Tom Kazansky", cp, "Anywhere", Attack, f.location[cp]))
                f.SkillWaitB(cp, 80)
                # (Line 134) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 135) }
                # (Line 136) if (f.loop[cp] == 12)
            EUDEndIf()
            if EUDIf()(f.loop[cp] == 12):
                # (Line 137) {
                # (Line 138) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp);
                # (Line 139) KillUnitAt(All, "40 + 1n Goliath", "Anywhere", cp);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp))
                # (Line 140) f.count[cp] += 1;
                DoActions(KillUnitAt(All, "40 + 1n Goliath", "Anywhere", cp))
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 141) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 142) }
                # (Line 143) }
            EUDEndIf()
            # (Line 145) else if (f.count[cp] == 2)
        if EUDElseIf()(f.count[cp] == 2):
            # (Line 146) {
            # (Line 147) if (f.loop[cp] < 4)
            if EUDIf()(f.loop[cp] >= 4, neg=True):
                # (Line 148) {
                # (Line 149) var x = 50 * f.loop[cp];
                x = EUDVariable()
                x << (50 * f.loop[cp])
                # (Line 150) var y = 200 - 50 * f.loop[cp];
                y = EUDVariable()
                y << (200 - 50 * f.loop[cp])
                # (Line 152) RemoveUnitAt(All, "80 + 1n Tom Kazansky", "Anywhere", cp);
                # (Line 153) f.DotShape(cp, 1, "80 + 1n Tom Kazansky", x, y);
                DoActions(RemoveUnitAt(All, "80 + 1n Tom Kazansky", "Anywhere", cp))
                f.DotShape(cp, 1, "80 + 1n Tom Kazansky", x, y)
                # (Line 154) f.DotShape(cp, 1, "50 + 1n Tank", x, y);
                f.DotShape(cp, 1, "50 + 1n Tank", x, y)
                # (Line 155) f.DotShape(cp, 1, "80 + 1n Tom Kazansky", -x, -y);
                f.DotShape(cp, 1, "80 + 1n Tom Kazansky", -x, -y)
                # (Line 156) f.DotShape(cp, 1, "50 + 1n Tank", -x, -y);
                f.DotShape(cp, 1, "50 + 1n Tank", -x, -y)
                # (Line 157) f.DotShape(cp, 1, "80 + 1n Tom Kazansky", -y, x);
                f.DotShape(cp, 1, "80 + 1n Tom Kazansky", -y, x)
                # (Line 158) f.DotShape(cp, 1, "Protoss Dark Archon", -y, x);
                f.DotShape(cp, 1, "Protoss Dark Archon", -y, x)
                # (Line 159) f.DotShape(cp, 1, "80 + 1n Tom Kazansky", y, -x);
                f.DotShape(cp, 1, "80 + 1n Tom Kazansky", y, -x)
                # (Line 160) f.DotShape(cp, 1, "Protoss Dark Archon", y, -x);
                f.DotShape(cp, 1, "Protoss Dark Archon", y, -x)
                # (Line 161) KillUnitAt(All, "50 + 1n Tank", "Anywhere", cp);
                # (Line 162) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", cp))
                # (Line 163) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp))
                # (Line 164) Order("80 + 1n Tom Kazansky", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 166) f.SkillWaitB(cp, 80);
                DoActions(Order("80 + 1n Tom Kazansky", cp, "Anywhere", Attack, f.location[cp]))
                f.SkillWaitB(cp, 80)
                # (Line 168) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 169) }
                # (Line 170) else if (f.loop[cp] < 8)
            if EUDElseIf()(f.loop[cp] >= 8, neg=True):
                # (Line 171) {
                # (Line 172) var x = 200 - 50 * (f.loop[cp] - 4);
                x = EUDVariable()
                x << (200 - 50 * (f.loop[cp] - 4))
                # (Line 173) var y = -50 * (f.loop[cp] - 4);
                y = EUDVariable()
                y << (-50 * (f.loop[cp] - 4))
                # (Line 175) RemoveUnitAt(All, "80 + 1n Tom Kazansky", "Anywhere", cp);
                # (Line 176) f.DotShape(cp, 1, "80 + 1n Tom Kazansky", x, y);
                DoActions(RemoveUnitAt(All, "80 + 1n Tom Kazansky", "Anywhere", cp))
                f.DotShape(cp, 1, "80 + 1n Tom Kazansky", x, y)
                # (Line 177) f.DotShape(cp, 1, "50 + 1n Tank", x, y);
                f.DotShape(cp, 1, "50 + 1n Tank", x, y)
                # (Line 178) f.DotShape(cp, 1, "80 + 1n Tom Kazansky", -x, -y);
                f.DotShape(cp, 1, "80 + 1n Tom Kazansky", -x, -y)
                # (Line 179) f.DotShape(cp, 1, "50 + 1n Tank", -x, -y);
                f.DotShape(cp, 1, "50 + 1n Tank", -x, -y)
                # (Line 180) f.DotShape(cp, 1, "80 + 1n Tom Kazansky", -y, x);
                f.DotShape(cp, 1, "80 + 1n Tom Kazansky", -y, x)
                # (Line 181) f.DotShape(cp, 1, "Protoss Dark Archon", -y, x);
                f.DotShape(cp, 1, "Protoss Dark Archon", -y, x)
                # (Line 182) f.DotShape(cp, 1, "80 + 1n Tom Kazansky", y, -x);
                f.DotShape(cp, 1, "80 + 1n Tom Kazansky", y, -x)
                # (Line 183) f.DotShape(cp, 1, "Protoss Dark Archon", y, -x);
                f.DotShape(cp, 1, "Protoss Dark Archon", y, -x)
                # (Line 184) KillUnitAt(All, "50 + 1n Tank", "Anywhere", cp);
                # (Line 185) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", cp))
                # (Line 186) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp))
                # (Line 187) Order("80 + 1n Tom Kazansky", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 189) f.SkillWaitB(cp, 80);
                DoActions(Order("80 + 1n Tom Kazansky", cp, "Anywhere", Attack, f.location[cp]))
                f.SkillWaitB(cp, 80)
                # (Line 191) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 192) }
                # (Line 193) else if (f.loop[cp] < 11)
            if EUDElseIf()(f.loop[cp] >= 11, neg=True):
                # (Line 194) {
                # (Line 195) var x = 200 - 50 * (f.loop[cp] - 8);
                x = EUDVariable()
                x << (200 - 50 * (f.loop[cp] - 8))
                # (Line 196) var y = -50 * (f.loop[cp] - 8);
                y = EUDVariable()
                y << (-50 * (f.loop[cp] - 8))
                # (Line 198) RemoveUnitAt(All, "80 + 1n Tom Kazansky", "Anywhere", cp);
                # (Line 199) f.DotShape(cp, 1, "80 + 1n Tom Kazansky", x, y);
                DoActions(RemoveUnitAt(All, "80 + 1n Tom Kazansky", "Anywhere", cp))
                f.DotShape(cp, 1, "80 + 1n Tom Kazansky", x, y)
                # (Line 200) f.DotShape(cp, 1, "50 + 1n Tank", x, y);
                f.DotShape(cp, 1, "50 + 1n Tank", x, y)
                # (Line 201) f.DotShape(cp, 1, "80 + 1n Tom Kazansky", -x, -y);
                f.DotShape(cp, 1, "80 + 1n Tom Kazansky", -x, -y)
                # (Line 202) f.DotShape(cp, 1, "50 + 1n Tank", -x, -y);
                f.DotShape(cp, 1, "50 + 1n Tank", -x, -y)
                # (Line 203) f.DotShape(cp, 1, "80 + 1n Tom Kazansky", -y, x);
                f.DotShape(cp, 1, "80 + 1n Tom Kazansky", -y, x)
                # (Line 204) f.DotShape(cp, 1, "Protoss Dark Archon", -y, x);
                f.DotShape(cp, 1, "Protoss Dark Archon", -y, x)
                # (Line 205) f.DotShape(cp, 1, "80 + 1n Tom Kazansky", y, -x);
                f.DotShape(cp, 1, "80 + 1n Tom Kazansky", y, -x)
                # (Line 206) f.DotShape(cp, 1, "Protoss Dark Archon", y, -x);
                f.DotShape(cp, 1, "Protoss Dark Archon", y, -x)
                # (Line 207) KillUnitAt(All, "50 + 1n Tank", "Anywhere", cp);
                # (Line 208) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", cp))
                # (Line 209) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp))
                # (Line 210) Order("80 + 1n Tom Kazansky", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 212) f.SkillWaitB(cp, 80);
                DoActions(Order("80 + 1n Tom Kazansky", cp, "Anywhere", Attack, f.location[cp]))
                f.SkillWaitB(cp, 80)
                # (Line 214) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 215) }
                # (Line 216) else if (f.loop[cp] == 11)
            if EUDElseIf()(f.loop[cp] == 11):
                # (Line 217) {
                # (Line 218) var x = 200 - 50 * (f.loop[cp] - 8);
                x = EUDVariable()
                x << (200 - 50 * (f.loop[cp] - 8))
                # (Line 219) var y = -50 * (f.loop[cp] - 8);
                y = EUDVariable()
                y << (-50 * (f.loop[cp] - 8))
                # (Line 221) RemoveUnitAt(All, "80 + 1n Tom Kazansky", "Anywhere", cp);
                # (Line 222) f.DotShape(cp, 1, "80 + 1n Tom Kazansky", x, y);
                DoActions(RemoveUnitAt(All, "80 + 1n Tom Kazansky", "Anywhere", cp))
                f.DotShape(cp, 1, "80 + 1n Tom Kazansky", x, y)
                # (Line 223) f.DotShape(cp, 1, "50 + 1n Tank", x, y);
                f.DotShape(cp, 1, "50 + 1n Tank", x, y)
                # (Line 224) f.DotShape(cp, 1, "80 + 1n Tom Kazansky", -x, -y);
                f.DotShape(cp, 1, "80 + 1n Tom Kazansky", -x, -y)
                # (Line 225) f.DotShape(cp, 1, "50 + 1n Tank", -x, -y);
                f.DotShape(cp, 1, "50 + 1n Tank", -x, -y)
                # (Line 226) f.DotShape(cp, 1, "80 + 1n Tom Kazansky", -y, x);
                f.DotShape(cp, 1, "80 + 1n Tom Kazansky", -y, x)
                # (Line 227) f.DotShape(cp, 1, "Protoss Dark Archon", -y, x);
                f.DotShape(cp, 1, "Protoss Dark Archon", -y, x)
                # (Line 228) f.DotShape(cp, 1, "80 + 1n Tom Kazansky", y, -x);
                f.DotShape(cp, 1, "80 + 1n Tom Kazansky", y, -x)
                # (Line 229) f.DotShape(cp, 1, "Protoss Dark Archon", y, -x);
                f.DotShape(cp, 1, "Protoss Dark Archon", y, -x)
                # (Line 230) KillUnitAt(All, "50 + 1n Tank", "Anywhere", cp);
                # (Line 231) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", cp))
                # (Line 232) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp))
                # (Line 233) Order("80 + 1n Tom Kazansky", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 235) f.SkillWaitB(cp, 80);
                DoActions(Order("80 + 1n Tom Kazansky", cp, "Anywhere", Attack, f.location[cp]))
                f.SkillWaitB(cp, 80)
                # (Line 237) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 238) }
                # (Line 239) if (f.loop[cp] == 12)
            EUDEndIf()
            if EUDIf()(f.loop[cp] == 12):
                # (Line 240) {
                # (Line 241) RemoveUnitAt(All, "80 + 1n Tom Kazansky", "Anywhere", cp);
                # (Line 242) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp);
                DoActions(RemoveUnitAt(All, "80 + 1n Tom Kazansky", "Anywhere", cp))
                # (Line 243) KillUnitAt(All, "40 + 1n Goliath", "Anywhere", cp);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp))
                # (Line 244) f.count[cp] += 1;
                DoActions(KillUnitAt(All, "40 + 1n Goliath", "Anywhere", cp))
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 245) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 246) }
                # (Line 247) }
            EUDEndIf()
            # (Line 248) else if (f.count[cp] == 3)
        if EUDElseIf()(f.count[cp] == 3):
            # (Line 249) {
            # (Line 250) if (f.loop[cp] < 6)
            if EUDIf()(f.loop[cp] >= 6, neg=True):
                # (Line 251) {
                # (Line 252) f.NxNSquareShape(cp, 1, "130 + 1n Norad", 1 + f.loop[cp], 125);
                f.NxNSquareShape(cp, 1, "130 + 1n Norad", 1 + f.loop[cp], 125)
                # (Line 253) f.NxNSquareShape(cp, 1, "80 + 1n Goliath", 1 + f.loop[cp], 125);
                f.NxNSquareShape(cp, 1, "80 + 1n Goliath", 1 + f.loop[cp], 125)
                # (Line 254) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                # (Line 255) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 256) Order("130 + 1n Norad", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 257) Order("80 + 1n Goliath", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(Order("130 + 1n Norad", cp, "Anywhere", Attack, f.location[cp]))
                # (Line 258) }
                DoActions(Order("80 + 1n Goliath", cp, "Anywhere", Attack, f.location[cp]))
                # (Line 260) f.SkillWait(cp, 80);
            EUDEndIf()
            f.SkillWait(cp, 80)
            # (Line 262) f.loop[cp] += 1;
            _ARRW(f.loop, cp).__iadd__(1)
            # (Line 264) if (f.loop[cp] == 6)
            if EUDIf()(f.loop[cp] == 6):
                # (Line 265) {
                # (Line 266) KillUnitAt(All, "130 + 1n Norad", "Anywhere", cp);
                # (Line 267) KillUnitAt(All, "80 + 1n Goliath", "Anywhere", cp);
                DoActions(KillUnitAt(All, "130 + 1n Norad", "Anywhere", cp))
                # (Line 268) f.count[cp] += 1;
                DoActions(KillUnitAt(All, "80 + 1n Goliath", "Anywhere", cp))
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 269) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 270) }
                # (Line 271) }
            EUDEndIf()
            # (Line 272) else if (f.count[cp] == 4)
        if EUDElseIf()(f.count[cp] == 4):
            # (Line 273) {
            # (Line 274) if (f.loop[cp] < 6)
            if EUDIf()(f.loop[cp] >= 6, neg=True):
                # (Line 275) {
                # (Line 276) f.NxNSquareShape(cp, 1, "130 + 1n Norad", 7 - f.loop[cp], 125);
                f.NxNSquareShape(cp, 1, "130 + 1n Norad", 7 - f.loop[cp], 125)
                # (Line 277) f.NxNSquareShape(cp, 1, "80 + 1n Goliath", 7 - f.loop[cp], 125);
                f.NxNSquareShape(cp, 1, "80 + 1n Goliath", 7 - f.loop[cp], 125)
                # (Line 278) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                # (Line 279) Order("130 + 1n Norad", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 280) Order("80 + 1n Goliath", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(Order("130 + 1n Norad", cp, "Anywhere", Attack, f.location[cp]))
                # (Line 281) }
                DoActions(Order("80 + 1n Goliath", cp, "Anywhere", Attack, f.location[cp]))
                # (Line 283) f.SkillWait(cp, 80);
            EUDEndIf()
            f.SkillWait(cp, 80)
            # (Line 285) f.loop[cp] += 1;
            _ARRW(f.loop, cp).__iadd__(1)
            # (Line 287) if (f.loop[cp] == 6)
            if EUDIf()(f.loop[cp] == 6):
                # (Line 288) {
                # (Line 289) KillUnitAt(All, "130 + 1n Norad", "Anywhere", cp);
                # (Line 290) KillUnitAt(All, "80 + 1n Goliath", "Anywhere", cp);
                DoActions(KillUnitAt(All, "130 + 1n Norad", "Anywhere", cp))
                # (Line 291) f.count[cp] += 1;
                DoActions(KillUnitAt(All, "80 + 1n Goliath", "Anywhere", cp))
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 292) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 293) }
                # (Line 294) }
            EUDEndIf()
            # (Line 295) else if (f.count[cp] == 5)
        if EUDElseIf()(f.count[cp] == 5):
            # (Line 296) {
            # (Line 297) if (f.loop[cp] < 6)
            if EUDIf()(f.loop[cp] >= 6, neg=True):
                # (Line 298) {
                # (Line 299) f.NxNSquareShape(cp, 1, "130 + 1n Norad", 1 + f.loop[cp], 125);
                f.NxNSquareShape(cp, 1, "130 + 1n Norad", 1 + f.loop[cp], 125)
                # (Line 300) f.NxNSquareShape(cp, 1, "80 + 1n Goliath", 1 + f.loop[cp], 125);
                f.NxNSquareShape(cp, 1, "80 + 1n Goliath", 1 + f.loop[cp], 125)
                # (Line 301) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                # (Line 302) Order("130 + 1n Norad", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 303) Order("80 + 1n Goliath", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(Order("130 + 1n Norad", cp, "Anywhere", Attack, f.location[cp]))
                # (Line 304) }
                DoActions(Order("80 + 1n Goliath", cp, "Anywhere", Attack, f.location[cp]))
                # (Line 306) f.SkillWait(cp, 80);
            EUDEndIf()
            f.SkillWait(cp, 80)
            # (Line 308) f.loop[cp] += 1;
            _ARRW(f.loop, cp).__iadd__(1)
            # (Line 310) if (f.loop[cp] == 6)
            if EUDIf()(f.loop[cp] == 6):
                # (Line 311) {
                # (Line 312) KillUnitAt(All, "130 + 1n Norad", "Anywhere", cp);
                # (Line 313) KillUnitAt(All, "80 + 1n Goliath", "Anywhere", cp);
                DoActions(KillUnitAt(All, "130 + 1n Norad", "Anywhere", cp))
                # (Line 314) f.count[cp] += 1;
                DoActions(KillUnitAt(All, "80 + 1n Goliath", "Anywhere", cp))
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 315) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 316) }
                # (Line 317) }
            EUDEndIf()
            # (Line 318) else if (f.count[cp] == 6)
        if EUDElseIf()(f.count[cp] == 6):
            # (Line 319) {
            # (Line 321) if (f.loop[cp] < 6)
            if EUDIf()(f.loop[cp] >= 6, neg=True):
                # (Line 322) {
                # (Line 323) f.NxNSquareShape(cp, 1, "130 + 1n Norad", 7 - f.loop[cp], 125);
                f.NxNSquareShape(cp, 1, "130 + 1n Norad", 7 - f.loop[cp], 125)
                # (Line 324) f.NxNSquareShape(cp, 1, "80 + 1n Goliath", 7 - f.loop[cp], 125);
                f.NxNSquareShape(cp, 1, "80 + 1n Goliath", 7 - f.loop[cp], 125)
                # (Line 325) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                # (Line 326) Order("130 + 1n Norad", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 327) Order("80 + 1n Goliath", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(Order("130 + 1n Norad", cp, "Anywhere", Attack, f.location[cp]))
                # (Line 328) }
                DoActions(Order("80 + 1n Goliath", cp, "Anywhere", Attack, f.location[cp]))
                # (Line 330) f.SkillWait(cp, 80);
            EUDEndIf()
            f.SkillWait(cp, 80)
            # (Line 332) f.loop[cp] += 1;
            _ARRW(f.loop, cp).__iadd__(1)
            # (Line 334) if (f.loop[cp] == 6)
            if EUDIf()(f.loop[cp] == 6):
                # (Line 335) {
                # (Line 336) SetSwitch("ComputerAlliy", Clear);
                # (Line 337) if (cp < 3)
                DoActions(SetSwitch("ComputerAlliy", Clear))
                if EUDIf()(cp >= 3, neg=True):
                    # (Line 338) {
                    # (Line 339) SetAllianceStatus(P8, Enemy);
                    # (Line 340) }
                    DoActions(SetAllianceStatus(P8, Enemy))
                    # (Line 341) else
                    # (Line 342) {
                if EUDElse()():
                    # (Line 343) SetAllianceStatus(P7, Enemy);
                    # (Line 344) }
                    DoActions(SetAllianceStatus(P7, Enemy))
                    # (Line 345) KillUnitAt(All, "130 + 1n Norad", "Anywhere", cp);
                EUDEndIf()
                # (Line 346) KillUnitAt(All, "80 + 1n Goliath", "Anywhere", cp);
                DoActions(KillUnitAt(All, "130 + 1n Norad", "Anywhere", cp))
                # (Line 347) SetDeaths(cp, SetTo, 0, " `ShieldRecharge");
                DoActions(KillUnitAt(All, "80 + 1n Goliath", "Anywhere", cp))
                # (Line 349) f.SkillEnd(cp);
                DoActions(SetDeaths(cp, SetTo, 0, " `ShieldRecharge"))
                f.SkillEnd(cp)
                # (Line 350) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 351) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 353) }
                # (Line 354) }
            EUDEndIf()
            # (Line 355) }
        EUDEndIf()
        # (Line 356) }
    EUDEndIf()
