## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import Function as f;
import Function as f
# (Line 3) function EdgeShapeAt(cp : TrgPlayer, count, Unit : TrgUnit, degree, n, interval, x, y);
# (Line 5) function main(cp)
# (Line 6) {
@EUDFunc
def f_main(cp):
    # (Line 7) f.BanReturn(cp);
    f.BanReturn(cp)
    # (Line 9) if (f.delay[cp] == 0)
    if EUDIf()(f.delay[cp] == 0):
        # (Line 10) {
        # (Line 11) if (f.count[cp] == 0)
        if EUDIf()(f.count[cp] == 0):
            # (Line 12) {
            # (Line 13) if (f.loop[cp] == 0)
            if EUDIf()(f.loop[cp] == 0):
                # (Line 14) {
                # (Line 15) f.ShieldFix(cp, 1);
                f.ShieldFix(cp, 1)
                # (Line 16) SetSwitch("ComputerAlliy", Set);
                # (Line 17) SetAllianceStatus(P1, Ally);
                DoActions(SetSwitch("ComputerAlliy", Set))
                # (Line 18) SetAllianceStatus(P2, Ally);
                DoActions(SetAllianceStatus(P1, Ally))
                # (Line 19) SetAllianceStatus(P3, Ally);
                DoActions(SetAllianceStatus(P2, Ally))
                # (Line 20) SetAllianceStatus(P4, Ally);
                DoActions(SetAllianceStatus(P3, Ally))
                # (Line 21) SetAllianceStatus(P5, Ally);
                DoActions(SetAllianceStatus(P4, Ally))
                # (Line 22) SetAllianceStatus(P6, Ally);
                DoActions(SetAllianceStatus(P5, Ally))
                # (Line 23) }
                DoActions(SetAllianceStatus(P6, Ally))
                # (Line 25) if (f.loop[cp] < 10)
            EUDEndIf()
            if EUDIf()(f.loop[cp] >= 10, neg=True):
                # (Line 26) {
                # (Line 27) f.SquareShape(cp, 1, "50 + 1n Battlecruiser", 100, 100);
                f.SquareShape(cp, 1, "50 + 1n Battlecruiser", 100, 100)
                # (Line 28) f.SquareShape(cp, 1, "Protoss Dark Archon", 100, 100);
                f.SquareShape(cp, 1, "Protoss Dark Archon", 100, 100)
                # (Line 29) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp);
                # (Line 30) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp))
                # (Line 31) }
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp))
                # (Line 33) f.SkillWait(cp, 80);
            EUDEndIf()
            f.SkillWait(cp, 80)
            # (Line 35) f.loop[cp] += 1;
            _ARRW(f.loop, cp).__iadd__(1)
            # (Line 37) if (f.loop[cp] == 10)
            if EUDIf()(f.loop[cp] == 10):
                # (Line 38) {
                # (Line 39) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 40) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 41) }
                # (Line 42) }
            EUDEndIf()
            # (Line 43) else if (f.count[cp] == 1)
        if EUDElseIf()(f.count[cp] == 1):
            # (Line 44) {
            # (Line 45) if (f.loop[cp] == 0)
            if EUDIf()(f.loop[cp] == 0):
                # (Line 46) {
                # (Line 47) EdgeShapeAt(cp, 1, "Target", 22, 3, 32, 100, 100);
                EdgeShapeAt(cp, 1, "Target", 22, 3, 32, 100, 100)
                # (Line 48) f.SquareShape(cp, 1, "Protoss Dark Archon", 100, 100);
                f.SquareShape(cp, 1, "Protoss Dark Archon", 100, 100)
                # (Line 49) KillUnitAt(All, "Target", "Anywhere", cp);
                # (Line 50) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp);
                DoActions(KillUnitAt(All, "Target", "Anywhere", cp))
                # (Line 51) }
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp))
                # (Line 52) if (f.loop[cp] == 1)
            EUDEndIf()
            if EUDIf()(f.loop[cp] == 1):
                # (Line 53) {
                # (Line 54) EdgeShapeAt(cp, 1, "Terran Science Vessel", 22, 3, 32, 100, 100);
                EdgeShapeAt(cp, 1, "Terran Science Vessel", 22, 3, 32, 100, 100)
                # (Line 55) f.SquareShape(cp, 1, "Protoss Dark Archon", 100, 100);
                f.SquareShape(cp, 1, "Protoss Dark Archon", 100, 100)
                # (Line 56) KillUnitAt(All, "Terran Science Vessel", "Anywhere", cp);
                # (Line 57) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp);
                DoActions(KillUnitAt(All, "Terran Science Vessel", "Anywhere", cp))
                # (Line 58) }
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp))
                # (Line 60) f.SkillWait(cp, 80);
            EUDEndIf()
            f.SkillWait(cp, 80)
            # (Line 62) f.loop[cp] += 1;
            _ARRW(f.loop, cp).__iadd__(1)
            # (Line 64) if (f.loop[cp] == 5)
            if EUDIf()(f.loop[cp] == 5):
                # (Line 65) {
                # (Line 66) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 67) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 68) }
                # (Line 69) }
            EUDEndIf()
            # (Line 70) else if (f.count[cp] == 2)
        if EUDElseIf()(f.count[cp] == 2):
            # (Line 71) {
            # (Line 72) if (f.loop[cp] < 6)
            if EUDIf()(f.loop[cp] >= 6, neg=True):
                # (Line 73) {
                # (Line 74) f.EdgeShape(cp, 1, "50 + 1n Battlecruiser", 0, 1 + 2 * f.loop[cp], 50 * f.loop[cp]);
                f.EdgeShape(cp, 1, "50 + 1n Battlecruiser", 0, 1 + 2 * f.loop[cp], 50 * f.loop[cp])
                # (Line 75) f.EdgeShape(cp, 1, "Protoss Dark Archon", 0, 1 + 2 * f.loop[cp], 50 * f.loop[cp]);
                f.EdgeShape(cp, 1, "Protoss Dark Archon", 0, 1 + 2 * f.loop[cp], 50 * f.loop[cp])
                # (Line 76) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp);
                # (Line 77) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp))
                # (Line 78) }
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp))
                # (Line 79) if (f.loop[cp] == 5)
            EUDEndIf()
            if EUDIf()(f.loop[cp] == 5):
                # (Line 80) {
                # (Line 81) for (var i = 0; i < 3; i++)
                i = EUDVariable()
                i << (0)
                if EUDWhile()(i >= 3, neg=True):
                    def _t14():
                        i.__iadd__(1)
                    # (Line 82) {
                    # (Line 83) var x = -0 - 100 * i;
                    x = EUDVariable()
                    x << (-0 - 100 * i)
                    # (Line 84) var y = 300 - 100 * i;
                    y = EUDVariable()
                    y << (300 - 100 * i)
                    # (Line 86) EdgeShapeAt(cp, 1, "40 + 1n Firebat", 0, 3, 50, x, y);
                    EdgeShapeAt(cp, 1, "40 + 1n Firebat", 0, 3, 50, x, y)
                    # (Line 87) }
                    # (Line 88) }
                    EUDSetContinuePoint()
                    _t14()
                EUDEndWhile()
                # (Line 89) f.SkillWait(cp, 80);
            EUDEndIf()
            f.SkillWait(cp, 80)
            # (Line 91) f.loop[cp] += 1;
            _ARRW(f.loop, cp).__iadd__(1)
            # (Line 93) if (f.loop[cp] == 15)
            if EUDIf()(f.loop[cp] == 15):
                # (Line 94) {
                # (Line 95) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 96) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 97) }
                # (Line 98) }
            EUDEndIf()
            # (Line 99) else if (f.count[cp] == 3)
        if EUDElseIf()(f.count[cp] == 3):
            # (Line 100) {
            # (Line 101) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp);
            # (Line 103) if (f.loop[cp] < 6)
            DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp))
            if EUDIf()(f.loop[cp] >= 6, neg=True):
                # (Line 104) {
                # (Line 105) var x = -50 - 50 * f.loop[cp];
                x = EUDVariable()
                x << (-50 - 50 * f.loop[cp])
                # (Line 106) var y = 250 - 50 * f.loop[cp];
                y = EUDVariable()
                y << (250 - 50 * f.loop[cp])
                # (Line 108) EdgeShapeAt(cp, 1, "50 + 1n Battlecruiser", 0, 3, 50, x, y);
                EdgeShapeAt(cp, 1, "50 + 1n Battlecruiser", 0, 3, 50, x, y)
                # (Line 109) EdgeShapeAt(cp, 1, "50 + 1n Tank", 0, 3, 50, x, y);
                EdgeShapeAt(cp, 1, "50 + 1n Tank", 0, 3, 50, x, y)
                # (Line 111) KillUnitAt(All, "50 + 1n Tank", "Anywhere", cp);
                # (Line 113) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", cp))
                # (Line 114) Order("50 + 1n Battlecruiser", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 115) }
                DoActions(Order("50 + 1n Battlecruiser", cp, "Anywhere", Attack, f.location[cp]))
                # (Line 117) f.SkillWait(cp, 80);
            EUDEndIf()
            f.SkillWait(cp, 80)
            # (Line 119) f.loop[cp] += 1;
            _ARRW(f.loop, cp).__iadd__(1)
            # (Line 121) if (f.loop[cp] == 11)
            if EUDIf()(f.loop[cp] == 11):
                # (Line 122) {
                # (Line 123) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 124) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 125) }
                # (Line 126) }
            EUDEndIf()
            # (Line 127) else if (f.count[cp] == 4)
        if EUDElseIf()(f.count[cp] == 4):
            # (Line 128) {
            # (Line 129) if (f.loop[cp] == 0)
            if EUDIf()(f.loop[cp] == 0):
                # (Line 130) {
                # (Line 131) for (var i = 0; i < 3; i++)
                i = EUDVariable()
                i << (0)
                if EUDWhile()(i >= 3, neg=True):
                    def _t22():
                        i.__iadd__(1)
                    # (Line 132) {
                    # (Line 133) var x = -0 - 100 * i;
                    x = EUDVariable()
                    x << (-0 - 100 * i)
                    # (Line 134) var y = 300 - 100 * i;
                    y = EUDVariable()
                    y << (300 - 100 * i)
                    # (Line 136) EdgeShapeAt(cp, 1, "50 + 1n Battlecruiser", 0, 3, 50, x, y);
                    EdgeShapeAt(cp, 1, "50 + 1n Battlecruiser", 0, 3, 50, x, y)
                    # (Line 137) EdgeShapeAt(cp, 1, "40 + 1n Wraith", 0, 3, 50, x, y);
                    EdgeShapeAt(cp, 1, "40 + 1n Wraith", 0, 3, 50, x, y)
                    # (Line 138) EdgeShapeAt(cp, 1, "Protoss Dark Archon", 0, 3, 50, x, y);
                    EdgeShapeAt(cp, 1, "Protoss Dark Archon", 0, 3, 50, x, y)
                    # (Line 139) }
                    # (Line 141) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp);
                    EUDSetContinuePoint()
                    _t22()
                EUDEndWhile()
                # (Line 142) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp))
                # (Line 144) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp))
                # (Line 145) MoveUnit(All, "40 + 1n Wraith", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 146) Order("40 + 1n Wraith", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveUnit(All, "40 + 1n Wraith", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                # (Line 147) MoveUnit(All, "40 + 1n Firebat", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                DoActions(Order("40 + 1n Wraith", cp, "Anywhere", Attack, f.location[cp]))
                # (Line 148) Order("40 + 1n Firebat", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveUnit(All, "40 + 1n Firebat", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                # (Line 149) }
                DoActions(Order("40 + 1n Firebat", cp, "Anywhere", Attack, f.location[cp]))
                # (Line 150) if (f.loop[cp] == 2)
            EUDEndIf()
            if EUDIf()(f.loop[cp] == 2):
                # (Line 151) {
                # (Line 152) for (var i = 0; i < 3; i++)
                i = EUDVariable()
                i << (0)
                if EUDWhile()(i >= 3, neg=True):
                    def _t25():
                        i.__iadd__(1)
                    # (Line 153) {
                    # (Line 154) var x = -0 - 100 * i;
                    x = EUDVariable()
                    x << (-0 - 100 * i)
                    # (Line 155) var y = 300 - 100 * i;
                    y = EUDVariable()
                    y << (300 - 100 * i)
                    # (Line 157) EdgeShapeAt(cp, 1, "80 + 1n Tom Kazansky", 0, 3, 50, x, y);
                    EdgeShapeAt(cp, 1, "80 + 1n Tom Kazansky", 0, 3, 50, x, y)
                    # (Line 158) EdgeShapeAt(cp, 1, "Protoss Dark Archon", 0, 3, 50, x, y);
                    EdgeShapeAt(cp, 1, "Protoss Dark Archon", 0, 3, 50, x, y)
                    # (Line 159) }
                    # (Line 160) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                    EUDSetContinuePoint()
                    _t25()
                EUDEndWhile()
                # (Line 161) Order("80 + 1n Tom Kazansky", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 162) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp);
                DoActions(Order("80 + 1n Tom Kazansky", cp, "Anywhere", Attack, f.location[cp]))
                # (Line 163) }
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp))
                # (Line 164) if (f.loop[cp] == 4)
            EUDEndIf()
            if EUDIf()(f.loop[cp] == 4):
                # (Line 165) {
                # (Line 166) RemoveUnitAt(All, "80 + 1n Tom Kazansky", "Anywhere", cp);
                # (Line 167) for (var i = 0; i < 3; i++)
                DoActions(RemoveUnitAt(All, "80 + 1n Tom Kazansky", "Anywhere", cp))
                i = EUDVariable()
                i << (0)
                if EUDWhile()(i >= 3, neg=True):
                    def _t28():
                        i.__iadd__(1)
                    # (Line 168) {
                    # (Line 169) var x = -0 - 100 * i;
                    x = EUDVariable()
                    x << (-0 - 100 * i)
                    # (Line 170) var y = 300 - 100 * i;
                    y = EUDVariable()
                    y << (300 - 100 * i)
                    # (Line 172) EdgeShapeAt(cp, 1, "50 + 1n Battlecruiser", 0, 3, 50, x, y);
                    EdgeShapeAt(cp, 1, "50 + 1n Battlecruiser", 0, 3, 50, x, y)
                    # (Line 173) EdgeShapeAt(cp, 1, "Protoss Dark Archon", 0, 3, 50, x, y);
                    EdgeShapeAt(cp, 1, "Protoss Dark Archon", 0, 3, 50, x, y)
                    # (Line 174) }
                    # (Line 176) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp);
                    EUDSetContinuePoint()
                    _t28()
                EUDEndWhile()
                # (Line 177) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp))
                # (Line 178) }
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp))
                # (Line 179) if (f.loop[cp] == 6)
            EUDEndIf()
            if EUDIf()(f.loop[cp] == 6):
                # (Line 180) {
                # (Line 181) for (var i = 0; i < 3; i++)
                i = EUDVariable()
                i << (0)
                if EUDWhile()(i >= 3, neg=True):
                    def _t31():
                        i.__iadd__(1)
                    # (Line 182) {
                    # (Line 183) var x = -0 - 100 * i;
                    x = EUDVariable()
                    x << (-0 - 100 * i)
                    # (Line 184) var y = 300 - 100 * i;
                    y = EUDVariable()
                    y << (300 - 100 * i)
                    # (Line 186) EdgeShapeAt(cp, 1, "80 + 1n Tom Kazansky", 0, 3, 50, x, y);
                    EdgeShapeAt(cp, 1, "80 + 1n Tom Kazansky", 0, 3, 50, x, y)
                    # (Line 187) EdgeShapeAt(cp, 1, "Protoss Dark Archon", 0, 3, 50, x, y);
                    EdgeShapeAt(cp, 1, "Protoss Dark Archon", 0, 3, 50, x, y)
                    # (Line 188) }
                    # (Line 189) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                    EUDSetContinuePoint()
                    _t31()
                EUDEndWhile()
                # (Line 190) Order("80 + 1n Tom Kazansky", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 191) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp);
                DoActions(Order("80 + 1n Tom Kazansky", cp, "Anywhere", Attack, f.location[cp]))
                # (Line 192) }
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp))
                # (Line 193) if (f.loop[cp] == 8)
            EUDEndIf()
            if EUDIf()(f.loop[cp] == 8):
                # (Line 194) {
                # (Line 195) RemoveUnitAt(All, "80 + 1n Tom Kazansky", "Anywhere", cp);
                # (Line 196) for (var i = 0; i < 3; i++)
                DoActions(RemoveUnitAt(All, "80 + 1n Tom Kazansky", "Anywhere", cp))
                i = EUDVariable()
                i << (0)
                if EUDWhile()(i >= 3, neg=True):
                    def _t34():
                        i.__iadd__(1)
                    # (Line 197) {
                    # (Line 198) var x = -0 - 100 * i;
                    x = EUDVariable()
                    x << (-0 - 100 * i)
                    # (Line 199) var y = 300 - 100 * i;
                    y = EUDVariable()
                    y << (300 - 100 * i)
                    # (Line 201) EdgeShapeAt(cp, 1, "Terran Science Vessel", 0, 3, 50, x, y);
                    EdgeShapeAt(cp, 1, "Terran Science Vessel", 0, 3, 50, x, y)
                    # (Line 202) }
                    # (Line 203) KillUnitAt(All, "Terran Science Vessel", "Anywhere", cp);
                    EUDSetContinuePoint()
                    _t34()
                EUDEndWhile()
                # (Line 204) }
                DoActions(KillUnitAt(All, "Terran Science Vessel", "Anywhere", cp))
                # (Line 207) f.SkillWait(cp, 80);
            EUDEndIf()
            f.SkillWait(cp, 80)
            # (Line 209) f.loop[cp] += 1;
            _ARRW(f.loop, cp).__iadd__(1)
            # (Line 211) if (f.loop[cp] == 100)
            if EUDIf()(f.loop[cp] == 100):
                # (Line 212) {
                # (Line 213) SetSwitch("ComputerAlliy", Clear);
                # (Line 215) if (cp < 3)
                DoActions(SetSwitch("ComputerAlliy", Clear))
                if EUDIf()(cp >= 3, neg=True):
                    # (Line 216) {
                    # (Line 217) SetAllianceStatus(P4, Enemy);
                    # (Line 218) SetAllianceStatus(P5, Enemy);
                    DoActions(SetAllianceStatus(P4, Enemy))
                    # (Line 219) SetAllianceStatus(P6, Enemy);
                    DoActions(SetAllianceStatus(P5, Enemy))
                    # (Line 220) }
                    DoActions(SetAllianceStatus(P6, Enemy))
                    # (Line 221) else if (cp >= 3)
                if EUDElseIf()(cp >= 3):
                    # (Line 222) {
                    # (Line 223) SetAllianceStatus(P1, Enemy);
                    # (Line 224) SetAllianceStatus(P2, Enemy);
                    DoActions(SetAllianceStatus(P1, Enemy))
                    # (Line 225) SetAllianceStatus(P3, Enemy);
                    DoActions(SetAllianceStatus(P2, Enemy))
                    # (Line 226) }
                    DoActions(SetAllianceStatus(P3, Enemy))
                    # (Line 228) f.count[cp] += 1;
                EUDEndIf()
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 229) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 230) }
                # (Line 231) }
            EUDEndIf()
            # (Line 232) else if (f.count[cp] == 5)
        if EUDElseIf()(f.count[cp] == 5):
            # (Line 233) {
            # (Line 234) if (Bring(cp, AtLeast, 20, "Protoss Arbiter", "[Skill]UseSkill")
            _t39 = EUDIf()
            # (Line 235) && Deaths(cp, AtLeast, f.UltimateB[cp], " `UltimateCoolTime"))
            if _t39(EUDSCAnd()(Bring(cp, AtLeast, 20, "Protoss Arbiter", "[Skill]UseSkill"))(Deaths(cp, AtLeast, f.UltimateB[cp], " `UltimateCoolTime"))()):
                # (Line 236) {
                # (Line 237) f.Voice_Routine(cp, 3);
                f.Voice_Routine(cp, 3)
                # (Line 238) f.wait[cp] = 0;
                _ARRW(f.wait, cp) << (0)
                # (Line 239) f.count[cp] = 0;
                _ARRW(f.count, cp) << (0)
                # (Line 240) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 241) f.step[cp] = 0;
                _ARRW(f.step, cp) << (0)
                # (Line 242) SetDeaths(cp, Subtract, f.UltimateB[cp], " `UltimateCoolTime");
                # (Line 243) KillUnitAt(20, "Protoss Arbiter", "[Skill]UseSkill", cp);
                DoActions(SetDeaths(cp, Subtract, f.UltimateB[cp], " `UltimateCoolTime"))
                # (Line 244) }
                DoActions(KillUnitAt(20, "Protoss Arbiter", "[Skill]UseSkill", cp))
                # (Line 245) else
                # (Line 246) {
            if EUDElse()():
                # (Line 247) KillUnitAt(All, "40 + 1n Firebat", "Anywhere", cp);
                # (Line 248) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", cp);
                DoActions(KillUnitAt(All, "40 + 1n Firebat", "Anywhere", cp))
                # (Line 249) SetSwitch("UiltimateSwitch", Clear);
                DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", cp))
                # (Line 250) f.SkillEnd(cp);
                DoActions(SetSwitch("UiltimateSwitch", Clear))
                f.SkillEnd(cp)
                # (Line 251) }
                # (Line 252) }
            EUDEndIf()
            # (Line 253) }
        EUDEndIf()
        # (Line 254) }
    EUDEndIf()
    # (Line 256) function EdgeShapeAt(cp : TrgPlayer, count, Unit : TrgUnit, degree, n, interval, x, y)

# (Line 257) {
@EUDTypedFunc([TrgPlayer, None, TrgUnit, None, None, None, None, None])
def EdgeShapeAt(cp, count, Unit, degree, n, interval, x, y):
    # (Line 258) f.EdgeShapeAt(cp, count, Unit, degree, n, interval, x, y);
    f.EdgeShapeAt(cp, count, Unit, degree, n, interval, x, y)
    # (Line 259) f.EdgeShapeAt(cp, count, Unit, degree, n, interval, -x, -y);
    f.EdgeShapeAt(cp, count, Unit, degree, n, interval, -x, -y)
    # (Line 260) f.EdgeShapeAt(cp, count, Unit, degree, n, interval, -y, x);
    f.EdgeShapeAt(cp, count, Unit, degree, n, interval, -y, x)
    # (Line 261) f.EdgeShapeAt(cp, count, Unit, degree, n, interval, y, -x);
    f.EdgeShapeAt(cp, count, Unit, degree, n, interval, y, -x)
    # (Line 263) f.DotShape(cp, count, Unit, x, y);
    f.DotShape(cp, count, Unit, x, y)
    # (Line 264) f.DotShape(cp, count, Unit, -x, -y);
    f.DotShape(cp, count, Unit, -x, -y)
    # (Line 265) f.DotShape(cp, count, Unit, -y, x);
    f.DotShape(cp, count, Unit, -y, x)
    # (Line 266) f.DotShape(cp, count, Unit, y, -x);
    f.DotShape(cp, count, Unit, y, -x)
    # (Line 267) }
