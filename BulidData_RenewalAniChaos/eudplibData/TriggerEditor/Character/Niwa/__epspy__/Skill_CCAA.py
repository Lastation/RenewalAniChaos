## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import PluginVariables as msqcvar;
import PluginVariables as msqcvar
# (Line 2) import Function as f;
import Function as f
# (Line 4) var x = 0;
x = EUDCreateVariables(1)
_IGVA([x], lambda: [0])
# (Line 5) var y = 0;
y = EUDCreateVariables(1)
_IGVA([y], lambda: [0])
# (Line 7) var d = 75;
d = EUDCreateVariables(1)
_IGVA([d], lambda: [75])
# (Line 9) function main(cp)
# (Line 10) {
@EUDFunc
def f_main(cp):
    # (Line 11) MoveUnit(All, "60 + 1n High Templar", cp, "Anywhere", "[Skill]HoldPosition");
    # (Line 12) MoveUnit(All, "60 + 1n Dragoon", cp, "Anywhere", "[Skill]HoldPosition");
    DoActions(MoveUnit(All, "60 + 1n High Templar", cp, "Anywhere", "[Skill]HoldPosition"))
    # (Line 14) f.BanReturn(cp);
    DoActions(MoveUnit(All, "60 + 1n Dragoon", cp, "Anywhere", "[Skill]HoldPosition"))
    f.BanReturn(cp)
    # (Line 15) f.HoldPosition(cp);
    f.HoldPosition(cp)
    # (Line 17) if (f.delay[cp] == 0)
    if EUDIf()(f.delay[cp] == 0):
        # (Line 18) {
        # (Line 19) if (f.count[cp] == 0)
        if EUDIf()(f.count[cp] == 0):
            # (Line 20) {
            # (Line 21) if (f.loop[cp] == 0)
            if EUDIf()(f.loop[cp] == 0):
                # (Line 22) {
                # (Line 23) f.Table_Sin(cp, 22, d);
                f.Table_Sin(cp, 22, d)
                # (Line 24) f.Table_Cos(cp, 22, d);
                f.Table_Cos(cp, 22, d)
                # (Line 26) x = f.CosAngle[cp];
                x << (f.CosAngle[cp])
                # (Line 27) y = f.SinAngle[cp];
                y << (f.SinAngle[cp])
                # (Line 29) f.SquareShape(cp, 1, "40 + 1n Guardian", x, y);
                f.SquareShape(cp, 1, "40 + 1n Guardian", x, y)
                # (Line 31) f.Table_Sin(cp, 67, d);
                f.Table_Sin(cp, 67, d)
                # (Line 32) f.Table_Cos(cp, 67, d);
                f.Table_Cos(cp, 67, d)
                # (Line 34) x = f.CosAngle[cp];
                x << (f.CosAngle[cp])
                # (Line 35) y = f.SinAngle[cp];
                y << (f.SinAngle[cp])
                # (Line 37) f.SquareShape(cp, 1, "40 + 1n Guardian", x, y);
                f.SquareShape(cp, 1, "40 + 1n Guardian", x, y)
                # (Line 38) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp);
                # (Line 39) }
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp))
                # (Line 40) if (f.loop[cp] == 2)
            EUDEndIf()
            if EUDIf()(f.loop[cp] == 2):
                # (Line 41) {
                # (Line 42) f.Table_Sin(cp, 22, 3 * d);
                f.Table_Sin(cp, 22, 3 * d)
                # (Line 43) f.Table_Cos(cp, 22, 3 * d);
                f.Table_Cos(cp, 22, 3 * d)
                # (Line 45) x = f.CosAngle[cp];
                x << (f.CosAngle[cp])
                # (Line 46) y = f.SinAngle[cp];
                y << (f.SinAngle[cp])
                # (Line 48) f.SquareShape(cp, 1, "60 + 1n Siege", x, y);
                f.SquareShape(cp, 1, "60 + 1n Siege", x, y)
                # (Line 49) f.SquareShape(cp, 1, "40 + 1n Gantrithor", x, y);
                f.SquareShape(cp, 1, "40 + 1n Gantrithor", x, y)
                # (Line 51) f.Table_Sin(cp, 67, 3 * d);
                f.Table_Sin(cp, 67, 3 * d)
                # (Line 52) f.Table_Cos(cp, 67, 3 * d);
                f.Table_Cos(cp, 67, 3 * d)
                # (Line 54) x = f.CosAngle[cp];
                x << (f.CosAngle[cp])
                # (Line 55) y = f.SinAngle[cp];
                y << (f.SinAngle[cp])
                # (Line 57) f.SquareShape(cp, 1, "60 + 1n Siege", x, y);
                f.SquareShape(cp, 1, "60 + 1n Siege", x, y)
                # (Line 58) f.SquareShape(cp, 1, "40 + 1n Gantrithor", x, y);
                f.SquareShape(cp, 1, "40 + 1n Gantrithor", x, y)
                # (Line 59) KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", cp);
                # (Line 61) }
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", cp))
                # (Line 62) if (f.loop[cp] == 4)
            EUDEndIf()
            if EUDIf()(f.loop[cp] == 4):
                # (Line 63) {
                # (Line 64) f.Table_Sin(cp, 22, 2 * d);
                f.Table_Sin(cp, 22, 2 * d)
                # (Line 65) f.Table_Cos(cp, 22, 2 * d);
                f.Table_Cos(cp, 22, 2 * d)
                # (Line 67) x = f.CosAngle[cp];
                x << (f.CosAngle[cp])
                # (Line 68) y = f.SinAngle[cp];
                y << (f.SinAngle[cp])
                # (Line 70) f.SquareShape(cp, 1, "Kakaru (Twilight)", x, y);
                f.SquareShape(cp, 1, "Kakaru (Twilight)", x, y)
                # (Line 72) f.Table_Sin(cp, 67, 2 * d);
                f.Table_Sin(cp, 67, 2 * d)
                # (Line 73) f.Table_Cos(cp, 67, 2 * d);
                f.Table_Cos(cp, 67, 2 * d)
                # (Line 75) x = f.CosAngle[cp];
                x << (f.CosAngle[cp])
                # (Line 76) y = f.SinAngle[cp];
                y << (f.SinAngle[cp])
                # (Line 78) f.SquareShape(cp, 1, "Kakaru (Twilight)", x, y);
                f.SquareShape(cp, 1, "Kakaru (Twilight)", x, y)
                # (Line 79) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", cp);
                # (Line 80) }
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", cp))
                # (Line 81) if (f.loop[cp] < 8)
            EUDEndIf()
            if EUDIf()(f.loop[cp] >= 8, neg=True):
                # (Line 82) {
                # (Line 83) f.Table_Sin(cp, 45 * f.loop[cp], d);
                f.Table_Sin(cp, 45 * f.loop[cp], d)
                # (Line 84) f.Table_Cos(cp, 45 * f.loop[cp], d);
                f.Table_Cos(cp, 45 * f.loop[cp], d)
                # (Line 86) x = f.CosAngle[cp];
                x << (f.CosAngle[cp])
                # (Line 87) y = f.SinAngle[cp];
                y << (f.SinAngle[cp])
                # (Line 89) f.DotShape(cp, 1, "60 + 1n Dragoon", x, y);
                f.DotShape(cp, 1, "60 + 1n Dragoon", x, y)
                # (Line 90) }
                # (Line 92) f.Table_Sin(cp, 45 * f.loop[cp], 2 * d);
            EUDEndIf()
            f.Table_Sin(cp, 45 * f.loop[cp], 2 * d)
            # (Line 93) f.Table_Cos(cp, 45 * f.loop[cp], 2 * d);
            f.Table_Cos(cp, 45 * f.loop[cp], 2 * d)
            # (Line 95) x = f.CosAngle[cp];
            x << (f.CosAngle[cp])
            # (Line 96) y = f.SinAngle[cp];
            y << (f.SinAngle[cp])
            # (Line 98) f.DoubleShape(cp, 1, "50 + 1n Battlecruiser", x, y);
            f.DoubleShape(cp, 1, "50 + 1n Battlecruiser", x, y)
            # (Line 99) f.DoubleShape(cp, 1, "60 + 1n Archon", x, y);
            f.DoubleShape(cp, 1, "60 + 1n Archon", x, y)
            # (Line 100) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp);
            # (Line 101) KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp);
            DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp))
            # (Line 103) f.Table_Sin(cp, 45 * f.loop[cp], d);
            DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp))
            f.Table_Sin(cp, 45 * f.loop[cp], d)
            # (Line 104) f.Table_Cos(cp, 45 * f.loop[cp], d);
            f.Table_Cos(cp, 45 * f.loop[cp], d)
            # (Line 106) x = f.CosAngle[cp];
            x << (f.CosAngle[cp])
            # (Line 107) y = f.SinAngle[cp];
            y << (f.SinAngle[cp])
            # (Line 109) f.DoubleShape(cp, 1, "Kakaru (Twilight)", x, y);
            f.DoubleShape(cp, 1, "Kakaru (Twilight)", x, y)
            # (Line 110) f.DoubleShape(cp, 1, "Protoss Dark Archon", x, y);
            f.DoubleShape(cp, 1, "Protoss Dark Archon", x, y)
            # (Line 111) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", cp);
            # (Line 112) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp);
            DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", cp))
            # (Line 114) if (f.loop[cp] % 2 == 0)
            DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp))
            if EUDIf()(f.loop[cp] % 2 == 0):
                # (Line 115) {
                # (Line 116) f.DotShape(cp, 1, "40 + 1n Guardian", 0, 0);
                f.DotShape(cp, 1, "40 + 1n Guardian", 0, 0)
                # (Line 117) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp);
                # (Line 118) }
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp))
                # (Line 120) f.SkillWait(cp, 80);
            EUDEndIf()
            f.SkillWait(cp, 80)
            # (Line 122) f.loop[cp] += 1;
            _ARRW(f.loop, cp).__iadd__(1)
            # (Line 124) if (f.loop[cp] == 60)
            if EUDIf()(f.loop[cp] == 60):
                # (Line 125) {
                # (Line 126) KillUnitAt(All, "60 + 1n Dragoon", "Anywhere", cp);
                # (Line 128) f.count[cp] += 1;
                DoActions(KillUnitAt(All, "60 + 1n Dragoon", "Anywhere", cp))
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 129) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 130) }
                # (Line 131) }
            EUDEndIf()
            # (Line 132) else if (f.count[cp] == 1)
        if EUDElseIf()(f.count[cp] == 1):
            # (Line 133) {
            # (Line 134) if (f.loop[cp] == 0)
            if EUDIf()(f.loop[cp] == 0):
                # (Line 135) {
                # (Line 136) f.Table_Sin(cp, 22, d);
                f.Table_Sin(cp, 22, d)
                # (Line 137) f.Table_Cos(cp, 22, d);
                f.Table_Cos(cp, 22, d)
                # (Line 139) x = f.CosAngle[cp];
                x << (f.CosAngle[cp])
                # (Line 140) y = f.SinAngle[cp];
                y << (f.SinAngle[cp])
                # (Line 142) f.SquareShape(cp, 1, "40 + 1n Guardian", x, y);
                f.SquareShape(cp, 1, "40 + 1n Guardian", x, y)
                # (Line 143) f.SquareShape(cp, 1, "60 + 1n High Templar", x, y);
                f.SquareShape(cp, 1, "60 + 1n High Templar", x, y)
                # (Line 145) f.Table_Sin(cp, 67, d);
                f.Table_Sin(cp, 67, d)
                # (Line 146) f.Table_Cos(cp, 67, d);
                f.Table_Cos(cp, 67, d)
                # (Line 148) x = f.CosAngle[cp];
                x << (f.CosAngle[cp])
                # (Line 149) y = f.SinAngle[cp];
                y << (f.SinAngle[cp])
                # (Line 151) f.SquareShape(cp, 1, "40 + 1n Guardian", x, y);
                f.SquareShape(cp, 1, "40 + 1n Guardian", x, y)
                # (Line 152) f.SquareShape(cp, 1, "60 + 1n High Templar", x, y);
                f.SquareShape(cp, 1, "60 + 1n High Templar", x, y)
                # (Line 153) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp);
                # (Line 154) }
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp))
                # (Line 155) if (f.loop[cp] == 2)
            EUDEndIf()
            if EUDIf()(f.loop[cp] == 2):
                # (Line 156) {
                # (Line 157) f.Table_Sin(cp, 22, 3 * d);
                f.Table_Sin(cp, 22, 3 * d)
                # (Line 158) f.Table_Cos(cp, 22, 3 * d);
                f.Table_Cos(cp, 22, 3 * d)
                # (Line 160) x = f.CosAngle[cp];
                x << (f.CosAngle[cp])
                # (Line 161) y = f.SinAngle[cp];
                y << (f.SinAngle[cp])
                # (Line 163) f.SquareShape(cp, 1, "40 + 1n Guardian", x, y);
                f.SquareShape(cp, 1, "40 + 1n Guardian", x, y)
                # (Line 164) f.SquareShape(cp, 1, "60 + 1n Archon", x, y);
                f.SquareShape(cp, 1, "60 + 1n Archon", x, y)
                # (Line 166) f.Table_Sin(cp, 67, 3 * d);
                f.Table_Sin(cp, 67, 3 * d)
                # (Line 167) f.Table_Cos(cp, 67, 3 * d);
                f.Table_Cos(cp, 67, 3 * d)
                # (Line 169) x = f.CosAngle[cp];
                x << (f.CosAngle[cp])
                # (Line 170) y = f.SinAngle[cp];
                y << (f.SinAngle[cp])
                # (Line 172) f.SquareShape(cp, 1, "40 + 1n Guardian", x, y);
                f.SquareShape(cp, 1, "40 + 1n Guardian", x, y)
                # (Line 173) f.SquareShape(cp, 1, "60 + 1n Archon", x, y);
                f.SquareShape(cp, 1, "60 + 1n Archon", x, y)
                # (Line 174) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp);
                # (Line 175) KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp))
                # (Line 176) }
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp))
                # (Line 177) if (f.loop[cp] == 4)
            EUDEndIf()
            if EUDIf()(f.loop[cp] == 4):
                # (Line 178) {
                # (Line 179) f.Table_Sin(cp, 22, d);
                f.Table_Sin(cp, 22, d)
                # (Line 180) f.Table_Cos(cp, 22, d);
                f.Table_Cos(cp, 22, d)
                # (Line 182) x = f.CosAngle[cp];
                x << (f.CosAngle[cp])
                # (Line 183) y = f.SinAngle[cp];
                y << (f.SinAngle[cp])
                # (Line 185) f.SquareShape(cp, 1, "Kakaru (Twilight)", x, y);
                f.SquareShape(cp, 1, "Kakaru (Twilight)", x, y)
                # (Line 187) f.Table_Sin(cp, 67, d);
                f.Table_Sin(cp, 67, d)
                # (Line 188) f.Table_Cos(cp, 67, d);
                f.Table_Cos(cp, 67, d)
                # (Line 190) x = f.CosAngle[cp];
                x << (f.CosAngle[cp])
                # (Line 191) y = f.SinAngle[cp];
                y << (f.SinAngle[cp])
                # (Line 193) f.SquareShape(cp, 1, "Kakaru (Twilight)", x, y);
                f.SquareShape(cp, 1, "Kakaru (Twilight)", x, y)
                # (Line 194) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", cp);
                # (Line 196) f.Table_Sin(cp, 0, 3 * d);
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", cp))
                f.Table_Sin(cp, 0, 3 * d)
                # (Line 197) f.Table_Cos(cp, 0, 3 * d);
                f.Table_Cos(cp, 0, 3 * d)
                # (Line 199) x = f.CosAngle[cp];
                x << (f.CosAngle[cp])
                # (Line 200) y = f.SinAngle[cp];
                y << (f.SinAngle[cp])
                # (Line 202) f.SquareShape(cp, 1, "60 + 1n Siege", x, y);
                f.SquareShape(cp, 1, "60 + 1n Siege", x, y)
                # (Line 203) f.SquareShape(cp, 1, "50 + 1n Tank", x, y);
                f.SquareShape(cp, 1, "50 + 1n Tank", x, y)
                # (Line 204) f.SquareShape(cp, 1, "50 + 1n Battlecruiser", x, y);
                f.SquareShape(cp, 1, "50 + 1n Battlecruiser", x, y)
                # (Line 206) f.Table_Sin(cp, 45, 3 * d);
                f.Table_Sin(cp, 45, 3 * d)
                # (Line 207) f.Table_Cos(cp, 45, 3 * d);
                f.Table_Cos(cp, 45, 3 * d)
                # (Line 209) x = f.CosAngle[cp];
                x << (f.CosAngle[cp])
                # (Line 210) y = f.SinAngle[cp];
                y << (f.SinAngle[cp])
                # (Line 212) f.SquareShape(cp, 1, "60 + 1n Siege", x, y);
                f.SquareShape(cp, 1, "60 + 1n Siege", x, y)
                # (Line 213) f.SquareShape(cp, 1, "50 + 1n Tank", x, y);
                f.SquareShape(cp, 1, "50 + 1n Tank", x, y)
                # (Line 214) f.SquareShape(cp, 1, "50 + 1n Battlecruiser", x, y);
                f.SquareShape(cp, 1, "50 + 1n Battlecruiser", x, y)
                # (Line 215) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp);
                # (Line 216) KillUnitAt(All, "50 + 1n Tank", "Anywhere", cp);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp))
                # (Line 217) }
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", cp))
                # (Line 218) if (f.loop[cp] < 8)
            EUDEndIf()
            if EUDIf()(f.loop[cp] >= 8, neg=True):
                # (Line 219) {
                # (Line 220) f.Table_Sin(cp, 45 * f.loop[cp], 2 * d);
                f.Table_Sin(cp, 45 * f.loop[cp], 2 * d)
                # (Line 221) f.Table_Cos(cp, 45 * f.loop[cp], 2 * d);
                f.Table_Cos(cp, 45 * f.loop[cp], 2 * d)
                # (Line 223) x = f.CosAngle[cp];
                x << (f.CosAngle[cp])
                # (Line 224) y = f.SinAngle[cp];
                y << (f.SinAngle[cp])
                # (Line 226) f.DotShape(cp, 1, "60 + 1n Dragoon", x, y);
                f.DotShape(cp, 1, "60 + 1n Dragoon", x, y)
                # (Line 227) }
                # (Line 229) f.Table_Sin(cp, 45 * f.loop[cp], d);
            EUDEndIf()
            f.Table_Sin(cp, 45 * f.loop[cp], d)
            # (Line 230) f.Table_Cos(cp, 45 * f.loop[cp], d);
            f.Table_Cos(cp, 45 * f.loop[cp], d)
            # (Line 232) x = f.CosAngle[cp];
            x << (f.CosAngle[cp])
            # (Line 233) y = f.SinAngle[cp];
            y << (f.SinAngle[cp])
            # (Line 235) f.DoubleShape(cp, 1, "40 + 1n Zealot", x, y);
            f.DoubleShape(cp, 1, "40 + 1n Zealot", x, y)
            # (Line 236) KillUnitAt(All, "40 + 1n Zealot", "Anywhere", cp);
            # (Line 238) f.Table_Sin(cp, 45 * f.loop[cp], 2 * d);
            DoActions(KillUnitAt(All, "40 + 1n Zealot", "Anywhere", cp))
            f.Table_Sin(cp, 45 * f.loop[cp], 2 * d)
            # (Line 239) f.Table_Cos(cp, 45 * f.loop[cp], 2 * d);
            f.Table_Cos(cp, 45 * f.loop[cp], 2 * d)
            # (Line 241) x = f.CosAngle[cp];
            x << (f.CosAngle[cp])
            # (Line 242) y = f.SinAngle[cp];
            y << (f.SinAngle[cp])
            # (Line 244) f.DoubleShape(cp, 1, "40 + 1n Gantrithor", x, y);
            f.DoubleShape(cp, 1, "40 + 1n Gantrithor", x, y)
            # (Line 245) f.DoubleShape(cp, 1, "Protoss Dark Archon", x, y);
            f.DoubleShape(cp, 1, "Protoss Dark Archon", x, y)
            # (Line 246) KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", cp);
            # (Line 247) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp);
            DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", cp))
            # (Line 249) if (f.loop[cp] % 2 == 0)
            DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp))
            if EUDIf()(f.loop[cp] % 2 == 0):
                # (Line 250) {
                # (Line 251) f.DotShape(cp, 1, "40 + 1n Guardian", 0, 0);
                f.DotShape(cp, 1, "40 + 1n Guardian", 0, 0)
                # (Line 252) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp);
                # (Line 253) }
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp))
                # (Line 255) f.SkillWait(cp, 80);
            EUDEndIf()
            f.SkillWait(cp, 80)
            # (Line 257) f.loop[cp] += 1;
            _ARRW(f.loop, cp).__iadd__(1)
            # (Line 259) if (f.loop[cp] == 47)
            if EUDIf()(f.loop[cp] == 47):
                # (Line 260) {
                # (Line 261) f.Voice_Routine(cp, 10);
                f.Voice_Routine(cp, 10)
                # (Line 262) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 263) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 264) }
                # (Line 265) }
            EUDEndIf()
            # (Line 267) else if (f.count[cp] == 2)
        if EUDElseIf()(f.count[cp] == 2):
            # (Line 268) {
            # (Line 269) if (f.loop[cp] < 8)
            if EUDIf()(f.loop[cp] >= 8, neg=True):
                # (Line 270) {
                # (Line 271) f.MoveLoc("60 + 1n Siege", cp, 0, 0);
                f.MoveLoc("60 + 1n Siege", cp, 0, 0)
                # (Line 272) RemoveUnitAt(1, "60 + 1n Siege", "Anywhere", cp);
                # (Line 273) f.SkillUnit(cp, 1, "60 + 1n Archon");
                DoActions(RemoveUnitAt(1, "60 + 1n Siege", "Anywhere", cp))
                f.SkillUnit(cp, 1, "60 + 1n Archon")
                # (Line 274) f.SkillUnit(cp, 1, "40 + 1n Guardian");
                f.SkillUnit(cp, 1, "40 + 1n Guardian")
                # (Line 275) f.SkillUnitWithProperty(cp, 1, "40 + 1n Drone", 1);
                f.SkillUnitWithProperty(cp, 1, "40 + 1n Drone", 1)
                # (Line 276) f.SkillUnitWithProperty(cp, 1, "40 + 1n Lurker", 0);
                f.SkillUnitWithProperty(cp, 1, "40 + 1n Lurker", 0)
                # (Line 278) f.MoveLoc("60 + 1n Siege", cp, 0, 0);
                f.MoveLoc("60 + 1n Siege", cp, 0, 0)
                # (Line 279) RemoveUnitAt(1, "60 + 1n Siege", "Anywhere", cp);
                # (Line 280) f.SkillUnit(cp, 1, "60 + 1n Archon");
                DoActions(RemoveUnitAt(1, "60 + 1n Siege", "Anywhere", cp))
                f.SkillUnit(cp, 1, "60 + 1n Archon")
                # (Line 281) f.SkillUnit(cp, 1, "40 + 1n Guardian");
                f.SkillUnit(cp, 1, "40 + 1n Guardian")
                # (Line 282) f.SkillUnitWithProperty(cp, 1, "40 + 1n Drone", 1);
                f.SkillUnitWithProperty(cp, 1, "40 + 1n Drone", 1)
                # (Line 283) f.SkillUnitWithProperty(cp, 1, "40 + 1n Lurker", 0);
                f.SkillUnitWithProperty(cp, 1, "40 + 1n Lurker", 0)
                # (Line 285) f.MoveLoc("60 + 1n Dragoon", cp, 0, 0);
                f.MoveLoc("60 + 1n Dragoon", cp, 0, 0)
                # (Line 286) RemoveUnitAt(1, "60 + 1n Dragoon", "Anywhere", cp);
                # (Line 287) f.SkillUnit(cp, 1, "60 + 1n Archon");
                DoActions(RemoveUnitAt(1, "60 + 1n Dragoon", "Anywhere", cp))
                f.SkillUnit(cp, 1, "60 + 1n Archon")
                # (Line 288) f.SkillUnit(cp, 1, "40 + 1n Guardian");
                f.SkillUnit(cp, 1, "40 + 1n Guardian")
                # (Line 289) f.SkillUnitWithProperty(cp, 1, "40 + 1n Drone", 1);
                f.SkillUnitWithProperty(cp, 1, "40 + 1n Drone", 1)
                # (Line 290) f.SkillUnitWithProperty(cp, 1, "40 + 1n Lurker", 0);
                f.SkillUnitWithProperty(cp, 1, "40 + 1n Lurker", 0)
                # (Line 292) f.MoveLoc("60 + 1n High Templar", cp, 0, 0);
                f.MoveLoc("60 + 1n High Templar", cp, 0, 0)
                # (Line 293) RemoveUnitAt(1, "60 + 1n High Templar", "Anywhere", cp);
                # (Line 294) f.SkillUnit(cp, 1, "60 + 1n Archon");
                DoActions(RemoveUnitAt(1, "60 + 1n High Templar", "Anywhere", cp))
                f.SkillUnit(cp, 1, "60 + 1n Archon")
                # (Line 295) f.SkillUnit(cp, 1, "40 + 1n Guardian");
                f.SkillUnit(cp, 1, "40 + 1n Guardian")
                # (Line 296) f.SkillUnitWithProperty(cp, 1, "40 + 1n Drone", 1);
                f.SkillUnitWithProperty(cp, 1, "40 + 1n Drone", 1)
                # (Line 297) f.SkillUnitWithProperty(cp, 1, "40 + 1n Lurker", 0);
                f.SkillUnitWithProperty(cp, 1, "40 + 1n Lurker", 0)
                # (Line 299) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp);
                # (Line 300) KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp))
                # (Line 302) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp))
                # (Line 303) MoveUnit(All, "40 + 1n Drone", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 304) Order("40 + 1n Drone", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveUnit(All, "40 + 1n Drone", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                # (Line 305) }
                DoActions(Order("40 + 1n Drone", cp, "Anywhere", Attack, f.location[cp]))
                # (Line 307) f.SkillWait(cp, 80);
            EUDEndIf()
            f.SkillWait(cp, 80)
            # (Line 309) f.loop[cp] += 1;
            _ARRW(f.loop, cp).__iadd__(1)
            # (Line 311) if (f.loop[cp] == 36)
            if EUDIf()(f.loop[cp] == 36):
                # (Line 312) {
                # (Line 313) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 314) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 315) }
                # (Line 316) }
            EUDEndIf()
            # (Line 317) else if (f.count[cp] == 3)
        if EUDElseIf()(f.count[cp] == 3):
            # (Line 318) {
            # (Line 319) if (f.loop[cp] == 0)
            if EUDIf()(f.loop[cp] == 0):
                # (Line 320) {
                # (Line 321) for (var i = 0; i < 32; i++)
                i = EUDVariable()
                i << (0)
                if EUDWhile()(i >= 32, neg=True):
                    def _t22():
                        i.__iadd__(1)
                    # (Line 322) {
                    # (Line 323) f.MoveLoc("40 + 1n Lurker", cp, 0, 0);
                    f.MoveLoc("40 + 1n Lurker", cp, 0, 0)
                    # (Line 324) RemoveUnitAt(1, "40 + 1n Lurker", "Anywhere", cp);
                    # (Line 325) f.SkillUnit(cp, 1, "60 + 1n Danimoth");
                    DoActions(RemoveUnitAt(1, "40 + 1n Lurker", "Anywhere", cp))
                    f.SkillUnit(cp, 1, "60 + 1n Danimoth")
                    # (Line 326) if (i % 2 == 0)
                    if EUDIf()(i % 2 == 0):
                        # (Line 327) f.SkillUnit(cp, 1, "Protoss Dark Archon");
                        f.SkillUnit(cp, 1, "Protoss Dark Archon")
                        # (Line 328) else
                        # (Line 329) f.SkillUnit(cp, 1, "60 + 1n Archon");
                    if EUDElse()():
                        f.SkillUnit(cp, 1, "60 + 1n Archon")
                        # (Line 330) }
                    EUDEndIf()
                    # (Line 332) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp);
                    EUDSetContinuePoint()
                    _t22()
                EUDEndWhile()
                # (Line 333) KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp))
                # (Line 335) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp))
                # (Line 336) Order("60 + 1n Danimoth", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 337) }
                DoActions(Order("60 + 1n Danimoth", cp, "Anywhere", Attack, f.location[cp]))
                # (Line 338) if (f.loop[cp] == 1)
            EUDEndIf()
            if EUDIf()(f.loop[cp] == 1):
                # (Line 339) {
                # (Line 340) for (var i = 0; i < 32; i++)
                i = EUDVariable()
                i << (0)
                if EUDWhile()(i >= 32, neg=True):
                    def _t26():
                        i.__iadd__(1)
                    # (Line 341) {
                    # (Line 342) f.MoveLoc("60 + 1n Danimoth", cp, 0, 0);
                    f.MoveLoc("60 + 1n Danimoth", cp, 0, 0)
                    # (Line 343) RemoveUnitAt(1, "60 + 1n Danimoth", "Anywhere", cp);
                    # (Line 344) f.SkillUnit(cp, 1, "Kakaru (Twilight)");
                    DoActions(RemoveUnitAt(1, "60 + 1n Danimoth", "Anywhere", cp))
                    f.SkillUnit(cp, 1, "Kakaru (Twilight)")
                    # (Line 345) }
                    # (Line 347) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", cp);
                    EUDSetContinuePoint()
                    _t26()
                EUDEndWhile()
                # (Line 348) }
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", cp))
                # (Line 350) if (f.loop[cp] == 2)
            EUDEndIf()
            if EUDIf()(f.loop[cp] == 2):
                # (Line 351) {
                # (Line 352) for (var i = 0; i < 32; i++)
                i = EUDVariable()
                i << (0)
                if EUDWhile()(i >= 32, neg=True):
                    def _t29():
                        i.__iadd__(1)
                    # (Line 353) {
                    # (Line 354) f.MoveLoc("40 + 1n Drone", cp, 0, 0);
                    f.MoveLoc("40 + 1n Drone", cp, 0, 0)
                    # (Line 355) RemoveUnitAt(1, "40 + 1n Drone", "Anywhere", cp);
                    # (Line 356) if (i % 2 == 0)
                    DoActions(RemoveUnitAt(1, "40 + 1n Drone", "Anywhere", cp))
                    if EUDIf()(i % 2 == 0):
                        # (Line 357) f.SkillUnit(cp, 1, "40 + 1n Mojo");
                        f.SkillUnit(cp, 1, "40 + 1n Mojo")
                        # (Line 358) f.SkillUnit(cp, 1, "60 + 1n Hydralisk");
                    EUDEndIf()
                    f.SkillUnit(cp, 1, "60 + 1n Hydralisk")
                    # (Line 359) }
                    # (Line 361) KillUnitAt(All, "60 + 1n Hydralisk", "Anywhere", cp);
                    EUDSetContinuePoint()
                    _t29()
                EUDEndWhile()
                # (Line 363) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                DoActions(KillUnitAt(All, "60 + 1n Hydralisk", "Anywhere", cp))
                # (Line 364) Order("40 + 1n Mojo", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 365) }
                DoActions(Order("40 + 1n Mojo", cp, "Anywhere", Attack, f.location[cp]))
                # (Line 366) if (f.loop[cp] == 3)
            EUDEndIf()
            if EUDIf()(f.loop[cp] == 3):
                # (Line 367) {
                # (Line 368) for (var i = 0; i < 16; i++)
                i = EUDVariable()
                i << (0)
                if EUDWhile()(i >= 16, neg=True):
                    def _t33():
                        i.__iadd__(1)
                    # (Line 369) {
                    # (Line 370) f.MoveLoc("40 + 1n Mojo", cp, 0, 0);
                    f.MoveLoc("40 + 1n Mojo", cp, 0, 0)
                    # (Line 371) RemoveUnitAt(1, "40 + 1n Mojo", "Anywhere", cp);
                    # (Line 372) f.SkillUnit(cp, 1, "Kakaru (Twilight)");
                    DoActions(RemoveUnitAt(1, "40 + 1n Mojo", "Anywhere", cp))
                    f.SkillUnit(cp, 1, "Kakaru (Twilight)")
                    # (Line 373) }
                    # (Line 375) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", cp);
                    EUDSetContinuePoint()
                    _t33()
                EUDEndWhile()
                # (Line 376) }
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", cp))
                # (Line 379) f.SkillWait(cp, 80);
            EUDEndIf()
            f.SkillWait(cp, 80)
            # (Line 381) f.loop[cp] += 1;
            _ARRW(f.loop, cp).__iadd__(1)
            # (Line 383) if (f.loop[cp] == 4)
            if EUDIf()(f.loop[cp] == 4):
                # (Line 384) {
                # (Line 385) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 386) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 387) }
                # (Line 388) }
            EUDEndIf()
            # (Line 389) else if (f.count[cp] == 4)
        if EUDElseIf()(f.count[cp] == 4):
            # (Line 390) {
            # (Line 391) f.SkillEnd(cp);
            f.SkillEnd(cp)
            # (Line 392) }
            # (Line 393) }
        EUDEndIf()
        # (Line 394) }
    EUDEndIf()
