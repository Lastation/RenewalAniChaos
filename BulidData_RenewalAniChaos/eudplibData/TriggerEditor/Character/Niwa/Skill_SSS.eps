import PluginVariables as msqcvar;
import func.shape as s;

function main(playerID)
{
   if (v.P_Delay[playerID] == 0)
   {
      if (v.P_CountMain[playerID] == 0)
      {
         if (v.P_LoopMain[playerID] == 0)
         {
            s.Table_Sin(playerID, 0, 75);
            s.Table_Cos(playerID, 0, 75);

            var x = v.P_AngleCos[playerID];
            var y = v.P_AngleSin[playerID];

            s.Shape_Square(playerID, 1, "Target", x, y);
            KillUnitAt(All, "Target", "Anywhere", playerID);

            s.Table_Sin(playerID, 45, 75);
            s.Table_Cos(playerID, 45, 75);

            x = v.P_AngleCos[playerID];
            y = v.P_AngleSin[playerID];

            s.Shape_Square(playerID, 1, "Target", x, y);
            KillUnitAt(All, "Target", "Anywhere", playerID);
         }
         else if (v.P_LoopMain[playerID] == 2)
         {
            s.Table_Sin(playerID, 0, 150);
            s.Table_Cos(playerID, 0, 150);

            var x = v.P_AngleCos[playerID];
            var y = v.P_AngleSin[playerID];

            s.Shape_Square(playerID, 1, "40 + 1n Guardian", x, y);
            s.Shape_Square(playerID, 1, "60 + 1n Archon", x, y);
            KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
            KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);

            s.Table_Sin(playerID, 45, 150);
            s.Table_Cos(playerID, 45, 150);

            x = v.P_AngleCos[playerID];
            y = v.P_AngleSin[playerID];

            s.Shape_Square(playerID, 1, "40 + 1n Guardian", x, y);
            s.Shape_Square(playerID, 1, "60 + 1n Archon", x, y);
            KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
            KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);

            s.Table_Sin(playerID, 0, 75);
            s.Table_Cos(playerID, 0, 75);

            x = v.P_AngleCos[playerID];
            y = v.P_AngleSin[playerID];

            s.Shape_Square(playerID, 1, "Kakaru (Twilight)", x, y);
            KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);

            s.Table_Sin(playerID, 45, 75);
            s.Table_Cos(playerID, 45, 75);

            x = v.P_AngleCos[playerID];
            y = v.P_AngleSin[playerID];

            s.Shape_Square(playerID, 1, "Kakaru (Twilight)", x, y);
            KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);
         }
         else if (v.P_LoopMain[playerID] == 4)
         {
            s.Table_Sin(playerID, 0, 150);
            s.Table_Cos(playerID, 0, 150);

            var x = v.P_AngleCos[playerID];
            var y = v.P_AngleSin[playerID];

            s.Shape_Square(playerID, 1, "40 + 1n Mutalisk", x, y);
            s.Shape_Square(playerID, 1, " Unit. Hoffnung 25000", x, y);
            KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID);

            s.Table_Sin(playerID, 45, 150);
            s.Table_Cos(playerID, 45, 150);

            x = v.P_AngleCos[playerID];
            y = v.P_AngleSin[playerID];

            s.Shape_Square(playerID, 1, "40 + 1n Mutalisk", x, y);
            s.Shape_Square(playerID, 1, " Unit. Hoffnung 25000", x, y);
            KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID);

            MoveLocation(v.P_LocationID[playerID], v.P_CharacterID[playerID], playerID, "Anywhere");
            Order("40 + 1n Mutalisk", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
         }
         else if (v.P_LoopMain[playerID] == 6)
         {
            s.Table_Sin(playerID, 0, 150);
            s.Table_Cos(playerID, 0, 150);

            var x = v.P_AngleCos[playerID];
            var y = v.P_AngleSin[playerID];

            s.Shape_Square(playerID, 1, "50 + 1n Tank", x, y);
            KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);

            s.Table_Sin(playerID, 45, 150);
            s.Table_Cos(playerID, 45, 150);

            x = v.P_AngleCos[playerID];
            y = v.P_AngleSin[playerID];

            s.Shape_Square(playerID, 1, "50 + 1n Tank", x, y);
            KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
         }
         s.SkillWait(80);

         v.P_LoopMain[playerID] += 1;

         if (v.P_LoopMain[playerID] == 8)
         {
            v.P_CountMain[playerID] += 1;
            v.P_LoopMain[playerID] = 0;         
         }
      }
      else if (v.P_CountMain[playerID] == 1)
      {
         if (v.P_LoopMain[playerID] < 8)
         {
            s.Table_Sin(playerID, 450 - 45 * v.P_LoopMain[playerID], 150);
            s.Table_Cos(playerID, 450 - 45 * v.P_LoopMain[playerID], 150);

            var x = v.P_AngleCos[playerID];
            var y = v.P_AngleSin[playerID];

            s.Shape_Dot(playerID, 1, "40 + 1n Gantrithor", x, y);
            KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID);
         }

         s.SkillWait(80);

         v.P_LoopMain[playerID] += 1;

         if (v.P_LoopMain[playerID] == 8)
         {
            v.P_CountMain[playerID] += 1;
            v.P_LoopMain[playerID] = 0;         
         }
      }
      else if (v.P_CountMain[playerID] == 2)
      {
         if (v.P_LoopMain[playerID] == 0)
         {
            s.Table_Sin(playerID, 0, 75);
            s.Table_Cos(playerID, 0, 75);

            var x = v.P_AngleCos[playerID];
            var y = v.P_AngleSin[playerID];

            s.Shape_Square(playerID, 1, "80 + 1n Mutalisk", x, y);
            KillUnitAt(All, "80 + 1n Mutalisk", "Anywhere", playerID);

            s.Table_Sin(playerID, 45, 75);
            s.Table_Cos(playerID, 45, 75);

            x = v.P_AngleCos[playerID];
            y = v.P_AngleSin[playerID];

            s.Shape_Square(playerID, 1, "80 + 1n Mutalisk", x, y);
            KillUnitAt(All, "80 + 1n Mutalisk", "Anywhere", playerID);
         }
         else if (v.P_LoopMain[playerID] == 2)
         {
            s.Table_Sin(playerID, 0, 150);
            s.Table_Cos(playerID, 0, 150);

            var x = v.P_AngleCos[playerID];
            var y = v.P_AngleSin[playerID];

            s.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", x, y);
            s.Shape_Square(playerID, 1, "40 + 1n Goliath", x, y);
            KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);

            s.Table_Sin(playerID, 45, 150);
            s.Table_Cos(playerID, 45, 150);

            x = v.P_AngleCos[playerID];
            y = v.P_AngleSin[playerID];

            s.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", x, y);
            s.Shape_Square(playerID, 1, "40 + 1n Goliath", x, y);
            KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);

            MoveLocation(v.P_LocationID[playerID], v.P_CharacterID[playerID], playerID, "Anywhere");
            MoveUnit(All, "40 + 1n Goliath", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
            Order("40 + 1n Goliath", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
         }
         else if (v.P_LoopMain[playerID] == 3)
         {
            RemoveUnitAt(All, "40 + 1n Goliath", "Anywhere", playerID);
         }
         
         s.SkillWait(80);

         v.P_LoopMain[playerID] += 1;

         if (v.P_LoopMain[playerID] == 10)
         {
            v.P_CountMain[playerID] += 1;
            v.P_LoopMain[playerID] = 0;         
         }
      }
      else if (v.P_CountMain[playerID] == 3)
      {
         if (v.P_LoopMain[playerID] < 8)
         {
            s.MoveLoc("40 + 1n Mutalisk", playerID, 0, 0);
            RemoveUnitAt(1, "40 + 1n Mutalisk", "Anywhere", playerID);
            s.SkillUnit(playerID, 1, "40 + 1n Drone");
            s.SkillUnit(playerID, 1, " Unit. Hoffnung 25000");

            if (v.P_LoopMain[playerID] % 2 == 0)
            {
               s.SkillUnit(playerID, 1, "40 + 1n Gantrithor");
            }
            else if (v.P_LoopMain[playerID] % 2 == 1)
            {
               s.SkillUnit(playerID, 1, "50 + 1n Battlecruiser");
            }

            KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID);
            KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
            KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID);

            MoveLocation(v.P_LocationID[playerID], v.P_CharacterID[playerID], playerID, "Anywhere");
            MoveUnit(All, "40 + 1n Drone", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
         }

         s.SkillWait(80);

         v.P_LoopMain[playerID] += 1;

         if (v.P_LoopMain[playerID] == 16)
         {
            v.P_CountMain[playerID] += 1;
            v.P_LoopMain[playerID] = 0;         
         }
      }
      else if (v.P_CountMain[playerID] == 4)
      {
         if (v.P_LoopMain[playerID] == 0)
         {
            for (var i = 0; i < 8; i++)
            {
               s.MoveLoc("40 + 1n Drone", playerID, 0, 0);
               RemoveUnitAt(1, "40 + 1n Drone", "Anywhere", playerID);
               s.SkillUnit(playerID, 1, "40 + 1n Mojo");
               s.SkillUnit(playerID, 1, "60 + 1n Hydralisk");
            }

            KillUnitAt(All, "60 + 1n Hydralisk", "Anywhere", playerID);

            MoveLocation(v.P_LocationID[playerID], v.P_CharacterID[playerID], playerID, "Anywhere");
            Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
         }
         if (v.P_LoopMain[playerID] == 1)
         {
            for (var i = 0; i < 8; i++)
            {
               s.MoveLoc("40 + 1n Mojo", playerID, 0, 0);
               RemoveUnitAt(1, "40 + 1n Mojo", "Anywhere", playerID);
               s.SkillUnit(playerID, 1, "Kakaru (Twilight)");
            }

            KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);
         }
         s.SkillWait(80);

         v.P_LoopMain[playerID] += 1;

         if (v.P_LoopMain[playerID] == 2)
         {
            v.P_CountMain[playerID] += 1;
            v.P_LoopMain[playerID] = 0;         
         }
      }
      else if (v.P_CountMain[playerID] == 5)
      {
         s.SkillEnd();
      }
   }
}