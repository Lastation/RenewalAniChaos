import PluginVariables as msqcvar;
import func.shape as s;

var x = 0;
var y = 0;

var d = 75;

function main(playerID)
{
   MoveUnit(All, "60 + 1n High Templar", playerID, "Anywhere", "[Skill]HoldPosition");
   MoveUnit(All, "60 + 1n Dragoon", playerID, "Anywhere", "[Skill]HoldPosition");

   s.BanReturn(playerID);
   s.HoldPosition(playerID);

   if (v.P_Delay[playerID] == 0)
   {
      if (v.P_CountMain[playerID] == 0)
      {
         if (v.P_LoopMain[playerID] == 0)
         {
            s.Table_Sin(playerID, 22, d);
            s.Table_Cos(playerID, 22, d);

            x = v.P_AngleCos[playerID];
            y = v.P_AngleSin[playerID];

            s.Shape_Square(playerID, 1, "40 + 1n Guardian", x, y);

            s.Table_Sin(playerID, 67, d);
            s.Table_Cos(playerID, 67, d);

            x = v.P_AngleCos[playerID];
            y = v.P_AngleSin[playerID];

            s.Shape_Square(playerID, 1, "40 + 1n Guardian", x, y);
            KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
         }
         if (v.P_LoopMain[playerID] == 2)
         {
            s.Table_Sin(playerID, 22, 3 * d);
            s.Table_Cos(playerID, 22, 3 * d);

            x = v.P_AngleCos[playerID];
            y = v.P_AngleSin[playerID];

            s.Shape_Square(playerID, 1, "60 + 1n Siege", x, y);
            s.Shape_Square(playerID, 1, "40 + 1n Gantrithor", x, y);

            s.Table_Sin(playerID, 67, 3 * d);
            s.Table_Cos(playerID, 67, 3 * d);

            x = v.P_AngleCos[playerID];
            y = v.P_AngleSin[playerID];

            s.Shape_Square(playerID, 1, "60 + 1n Siege", x, y);
            s.Shape_Square(playerID, 1, "40 + 1n Gantrithor", x, y);
            KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID);
         
         }
         if (v.P_LoopMain[playerID] == 4)
         {
            s.Table_Sin(playerID, 22, 2 * d);
            s.Table_Cos(playerID, 22, 2 * d);

            x = v.P_AngleCos[playerID];
            y = v.P_AngleSin[playerID];

            s.Shape_Square(playerID, 1, "Kakaru (Twilight)", x, y);

            s.Table_Sin(playerID, 67, 2 * d);
            s.Table_Cos(playerID, 67, 2 * d);

            x = v.P_AngleCos[playerID];
            y = v.P_AngleSin[playerID];

            s.Shape_Square(playerID, 1, "Kakaru (Twilight)", x, y);
            KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);
         }
         if (v.P_LoopMain[playerID] < 8)
         {
            s.Table_Sin(playerID, 45 * v.P_LoopMain[playerID], d);
            s.Table_Cos(playerID, 45 * v.P_LoopMain[playerID], d);

            x = v.P_AngleCos[playerID];
            y = v.P_AngleSin[playerID];

            s.Shape_Dot(playerID, 1, "60 + 1n Dragoon", x, y);
         }

         s.Table_Sin(playerID, 45 * v.P_LoopMain[playerID], 2 * d);
         s.Table_Cos(playerID, 45 * v.P_LoopMain[playerID], 2 * d);

         x = v.P_AngleCos[playerID];
         y = v.P_AngleSin[playerID];

         s.DoubleShape(playerID, 1, "50 + 1n Battlecruiser", x, y);
         s.DoubleShape(playerID, 1, "60 + 1n Archon", x, y);
         KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
         KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);

         s.Table_Sin(playerID, 45 * v.P_LoopMain[playerID], d);
         s.Table_Cos(playerID, 45 * v.P_LoopMain[playerID], d);

         x = v.P_AngleCos[playerID];
         y = v.P_AngleSin[playerID];

         s.DoubleShape(playerID, 1, "Kakaru (Twilight)", x, y);
         s.DoubleShape(playerID, 1, "Protoss Dark Archon", x, y);
         KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);
         KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);

         if (v.P_LoopMain[playerID] % 2 == 0)
         {
            s.Shape_Dot(playerID, 1, "40 + 1n Guardian", 0, 0);
            KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
         }

         s.SkillWait(80);

         v.P_LoopMain[playerID] += 1;

         if (v.P_LoopMain[playerID] == 60)
         {
            KillUnitAt(All, "60 + 1n Dragoon", "Anywhere", playerID);

            v.P_CountMain[playerID] += 1;
            v.P_LoopMain[playerID] = 0;         
         }
      }
      else if (v.P_CountMain[playerID] == 1)
      {
         if (v.P_LoopMain[playerID] == 0)
         {
            s.Table_Sin(playerID, 22, d);
            s.Table_Cos(playerID, 22, d);

            x = v.P_AngleCos[playerID];
            y = v.P_AngleSin[playerID];

            s.Shape_Square(playerID, 1, "40 + 1n Guardian", x, y);
            s.Shape_Square(playerID, 1, "60 + 1n High Templar", x, y);

            s.Table_Sin(playerID, 67, d);
            s.Table_Cos(playerID, 67, d);

            x = v.P_AngleCos[playerID];
            y = v.P_AngleSin[playerID];

            s.Shape_Square(playerID, 1, "40 + 1n Guardian", x, y);
            s.Shape_Square(playerID, 1, "60 + 1n High Templar", x, y);
            KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
         }
         if (v.P_LoopMain[playerID] == 2)
         {
            s.Table_Sin(playerID, 22, 3 * d);
            s.Table_Cos(playerID, 22, 3 * d);

            x = v.P_AngleCos[playerID];
            y = v.P_AngleSin[playerID];

            s.Shape_Square(playerID, 1, "40 + 1n Guardian", x, y);
            s.Shape_Square(playerID, 1, "60 + 1n Archon", x, y);

            s.Table_Sin(playerID, 67, 3 * d);
            s.Table_Cos(playerID, 67, 3 * d);

            x = v.P_AngleCos[playerID];
            y = v.P_AngleSin[playerID];

            s.Shape_Square(playerID, 1, "40 + 1n Guardian", x, y);
            s.Shape_Square(playerID, 1, "60 + 1n Archon", x, y);
            KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
            KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
         }
         if (v.P_LoopMain[playerID] == 4)
         {
            s.Table_Sin(playerID, 22, d);
            s.Table_Cos(playerID, 22, d);

            x = v.P_AngleCos[playerID];
            y = v.P_AngleSin[playerID];

            s.Shape_Square(playerID, 1, "Kakaru (Twilight)", x, y);

            s.Table_Sin(playerID, 67, d);
            s.Table_Cos(playerID, 67, d);

            x = v.P_AngleCos[playerID];
            y = v.P_AngleSin[playerID];

            s.Shape_Square(playerID, 1, "Kakaru (Twilight)", x, y);
            KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);

            s.Table_Sin(playerID, 0, 3 * d);
            s.Table_Cos(playerID, 0, 3 * d);

            x = v.P_AngleCos[playerID];
            y = v.P_AngleSin[playerID];

            s.Shape_Square(playerID, 1, "60 + 1n Siege", x, y);
            s.Shape_Square(playerID, 1, "50 + 1n Tank", x, y);
            s.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", x, y);

            s.Table_Sin(playerID, 45, 3 * d);
            s.Table_Cos(playerID, 45, 3 * d);

            x = v.P_AngleCos[playerID];
            y = v.P_AngleSin[playerID];

            s.Shape_Square(playerID, 1, "60 + 1n Siege", x, y);
            s.Shape_Square(playerID, 1, "50 + 1n Tank", x, y);
            s.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", x, y);
            KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
            KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
         }
         if (v.P_LoopMain[playerID] < 8)
         {
            s.Table_Sin(playerID, 45 * v.P_LoopMain[playerID], 2 * d);
            s.Table_Cos(playerID, 45 * v.P_LoopMain[playerID], 2 * d);

            x = v.P_AngleCos[playerID];
            y = v.P_AngleSin[playerID];

            s.Shape_Dot(playerID, 1, "60 + 1n Dragoon", x, y);
         }

         s.Table_Sin(playerID, 45 * v.P_LoopMain[playerID], d);
         s.Table_Cos(playerID, 45 * v.P_LoopMain[playerID], d);

         x = v.P_AngleCos[playerID];
         y = v.P_AngleSin[playerID];

         s.DoubleShape(playerID, 1, "40 + 1n Zealot", x, y);
         KillUnitAt(All, "40 + 1n Zealot", "Anywhere", playerID);

         s.Table_Sin(playerID, 45 * v.P_LoopMain[playerID], 2 * d);
         s.Table_Cos(playerID, 45 * v.P_LoopMain[playerID], 2 * d);

         x = v.P_AngleCos[playerID];
         y = v.P_AngleSin[playerID];

         s.DoubleShape(playerID, 1, "40 + 1n Gantrithor", x, y);
         s.DoubleShape(playerID, 1, "Protoss Dark Archon", x, y);
         KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID);
         KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);

         if (v.P_LoopMain[playerID] % 2 == 0)
         {
            s.Shape_Dot(playerID, 1, "40 + 1n Guardian", 0, 0);
            KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
         }

         s.SkillWait(80);

         v.P_LoopMain[playerID] += 1;

         if (v.P_LoopMain[playerID] == 47)
         {
            s.Voice_Routine(playerID, 10);
            v.P_CountMain[playerID] += 1;
            v.P_LoopMain[playerID] = 0;         
         }
      }

      else if (v.P_CountMain[playerID] == 2)
      {
         if (v.P_LoopMain[playerID] < 8)
         {
            s.MoveLoc("60 + 1n Siege", playerID, 0, 0);
            RemoveUnitAt(1, "60 + 1n Siege", "Anywhere", playerID);
            s.SkillUnit(playerID, 1, "60 + 1n Archon");
            s.SkillUnit(playerID, 1, "40 + 1n Guardian");
            s.SkillUnitWithProperty(playerID, 1, "40 + 1n Drone", 1);
            s.SkillUnitWithProperty(playerID, 1, "40 + 1n Lurker", 0);

            s.MoveLoc("60 + 1n Siege", playerID, 0, 0);
            RemoveUnitAt(1, "60 + 1n Siege", "Anywhere", playerID);
            s.SkillUnit(playerID, 1, "60 + 1n Archon");
            s.SkillUnit(playerID, 1, "40 + 1n Guardian");
            s.SkillUnitWithProperty(playerID, 1, "40 + 1n Drone", 1);
            s.SkillUnitWithProperty(playerID, 1, "40 + 1n Lurker", 0);

            s.MoveLoc("60 + 1n Dragoon", playerID, 0, 0);
            RemoveUnitAt(1, "60 + 1n Dragoon", "Anywhere", playerID);
            s.SkillUnit(playerID, 1, "60 + 1n Archon");
            s.SkillUnit(playerID, 1, "40 + 1n Guardian");
            s.SkillUnitWithProperty(playerID, 1, "40 + 1n Drone", 1);
            s.SkillUnitWithProperty(playerID, 1, "40 + 1n Lurker", 0);

            s.MoveLoc("60 + 1n High Templar", playerID, 0, 0);
            RemoveUnitAt(1, "60 + 1n High Templar", "Anywhere", playerID);
            s.SkillUnit(playerID, 1, "60 + 1n Archon");
            s.SkillUnit(playerID, 1, "40 + 1n Guardian");
            s.SkillUnitWithProperty(playerID, 1, "40 + 1n Drone", 1);
            s.SkillUnitWithProperty(playerID, 1, "40 + 1n Lurker", 0);

            KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
            KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);

            MoveLocation(v.P_LocationID[playerID], v.P_CharacterID[playerID], playerID, "Anywhere");
            MoveUnit(All, "40 + 1n Drone", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
            Order("40 + 1n Drone", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
         }

         s.SkillWait(80);

         v.P_LoopMain[playerID] += 1;

         if (v.P_LoopMain[playerID] == 36)
         {
            v.P_CountMain[playerID] += 1;
            v.P_LoopMain[playerID] = 0;         
         }
      }
      else if (v.P_CountMain[playerID] == 3)
      {
         if (v.P_LoopMain[playerID] == 0)
         {
            for (var i = 0; i < 32; i++)
            {
               s.MoveLoc("40 + 1n Lurker", playerID, 0, 0);
               RemoveUnitAt(1, "40 + 1n Lurker", "Anywhere", playerID);
               s.SkillUnit(playerID, 1, "60 + 1n Danimoth");
               if (i % 2 == 0)
                  s.SkillUnit(playerID, 1, "Protoss Dark Archon");
               else
                  s.SkillUnit(playerID, 1, "60 + 1n Archon");
            }

            KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
            KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);

            MoveLocation(v.P_LocationID[playerID], v.P_CharacterID[playerID], playerID, "Anywhere");
            Order("60 + 1n Danimoth", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
         }
         if (v.P_LoopMain[playerID] == 1)
         {
            for (var i = 0; i < 32; i++)
            {
               s.MoveLoc("60 + 1n Danimoth", playerID, 0, 0);
               RemoveUnitAt(1, "60 + 1n Danimoth", "Anywhere", playerID);
               s.SkillUnit(playerID, 1, "Kakaru (Twilight)");
            }

            KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);
         }

         if (v.P_LoopMain[playerID] == 2)
         {
            for (var i = 0; i < 32; i++)
            {
               s.MoveLoc("40 + 1n Drone", playerID, 0, 0);
               RemoveUnitAt(1, "40 + 1n Drone", "Anywhere", playerID);
               if (i % 2 == 0)
                  s.SkillUnit(playerID, 1, "40 + 1n Mojo");
               s.SkillUnit(playerID, 1, "60 + 1n Hydralisk");
            }

            KillUnitAt(All, "60 + 1n Hydralisk", "Anywhere", playerID);

            MoveLocation(v.P_LocationID[playerID], v.P_CharacterID[playerID], playerID, "Anywhere");
            Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
         }
         if (v.P_LoopMain[playerID] == 3)
         {
            for (var i = 0; i < 16; i++)
            {
               s.MoveLoc("40 + 1n Mojo", playerID, 0, 0);
               RemoveUnitAt(1, "40 + 1n Mojo", "Anywhere", playerID);
               s.SkillUnit(playerID, 1, "Kakaru (Twilight)");
            }

            KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", playerID);
         }


         s.SkillWait(80);

         v.P_LoopMain[playerID] += 1;

         if (v.P_LoopMain[playerID] == 4)
         {
            v.P_CountMain[playerID] += 1;
            v.P_LoopMain[playerID] = 0;         
         }
      }
      else if (v.P_CountMain[playerID] == 4)
      {
         s.SkillEnd();
      }
   }
}