import PluginVariables as msqcvar;
import func.shape as s;

var v = 0;

function main(playerID)
{
   if (v.P_CountMain[playerID] >= 3)
   {
      s.HoldPosition(playerID);
   }

   s.BanReturn(playerID);

   MoveUnit(All, " Unit. Schnee", playerID, "Anywhere", "[Skill]HoldPosition");

   ModifyUnitShields(All, v.P_CharacterID[playerID], playerID, "Anywhere", 1);

   if (v != 0)
      s.Voice_Routine(playerID, 7 + v);

   if (v.P_Delay[playerID] == 0)
   {
      if (v.P_CountMain[playerID] == 0)
      {
         if (v.P_LoopMain[playerID] == 0)
         {
            v = 3;

            SetDeaths(playerID, SetTo, 1, " `ShieldRecharge");            
         }
         
         s.SkillWait(160);

         v.P_LoopMain[playerID] += 1;

         if (v.P_LoopMain[playerID] == 30)
         {
            v = 4;

            v.P_CountMain[playerID] += 1;
            v.P_LoopMain[playerID] = 0;         
         }
      }
      else if (v.P_CountMain[playerID] == 1)
      {
         if (v.P_LoopMain[playerID] == 0)
         {
            SetSwitch("Recall - Oda", Set);
         }

         if (v.P_LoopMain[playerID] == 15)
         {
            v = 5;
         }

         s.SkillWait(160);

         v.P_LoopMain[playerID] += 1;

         if (v.P_LoopMain[playerID] == 36)
         {
            v = 0;

            v.P_CountMain[playerID] += 1;
            v.P_LoopMain[playerID] = 0;         
         }
      }
      else if (v.P_CountMain[playerID] == 2)
      {
         s.EdgeShape(playerID, 1, " Unit. Hoffnung 25000", 45, 3, 50);
         KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID);

         s.SkillWait(160);

         v.P_LoopMain[playerID] += 1;

         if (v.P_LoopMain[playerID] == 26)
         {
            v.P_CountMain[playerID] += 1;
            v.P_LoopMain[playerID] = 0;         
         }
      }
      else if (v.P_CountMain[playerID] == 3)
      {
         if (v.P_LoopMain[playerID] == 0)
         {
            s.Shape_NxNSquare(playerID, 1, "40 + 1n Guardian", 6, 50);
         }
         else if (v.P_LoopMain[playerID] == 2)
         {
            s.Shape_NxNSquare(playerID, 1, "40 + 1n Guardian", 11, 50);
         }
         else if (v.P_LoopMain[playerID] == 4)
         {
            s.Shape_NxNSquare(playerID, 1, "40 + 1n Wraith", 11, 75);
            s.Shape_NxNSquare(playerID, 1, " Unit. Hoffnung 25000", 11, 75);

            MoveLocation(v.P_LocationID[playerID], v.P_CharacterID[playerID], playerID, "Anywhere");
            Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
         }
         else if (v.P_LoopMain[playerID] == 6)
         {
            RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);

            s.Shape_NxNSquare(playerID, 1, "50 + 1n Battlecruiser", 11, 75);

            MoveLocation(v.P_LocationID[playerID], v.P_CharacterID[playerID], playerID, "Anywhere");
            Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
         }

         KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID);
         KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);

         s.SkillWait(160);

         v.P_LoopMain[playerID] += 1;

         if (v.P_LoopMain[playerID] == 8)
         {
            v.P_CountMain[playerID] += 1;
            v.P_LoopMain[playerID] = 0;         
         }
      }
      else if (v.P_CountMain[playerID] == 4)
      {
         CreateUnit(24, "80 + 1n Guardian", dwrand() % 8 + 33, playerID);
         CreateUnit(6, "40 + 1n Guardian", dwrand() % 8 + 33, playerID);
         SetInvincibility(Enable, "Any unit", playerID, "[Skill]Unit_Wait_ALL");

         var i = 0;

         for (; i < 6; i++)
         {
            if (Bring(playerID, AtLeast, 1, "50 + 1n Battlecruiser", "Anywhere"))
            {
               var x = dwrand() % 20 + 10;

               MoveLocation(v.P_LocationID[playerID], "50 + 1n Battlecruiser", playerID, "Anywhere");
               RemoveUnitAt(1, "50 + 1n Battlecruiser", "Anywhere", playerID);
               MoveUnit(1, "40 + 1n Guardian", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
               addloc(v.P_LocationID[playerID], x, x);
               MoveUnit(1, "80 + 1n Guardian", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
               addloc(v.P_LocationID[playerID], -x, -x);
               MoveUnit(1, "80 + 1n Guardian", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
               addloc(v.P_LocationID[playerID], -x, x);
               MoveUnit(1, "80 + 1n Guardian", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
               addloc(v.P_LocationID[playerID], x, -x);
               MoveUnit(1, "80 + 1n Guardian", playerID, "[Skill]Unit_Wait_ALL", v.P_LocationID[playerID]);
            }
         }

         MoveLocation(v.P_LocationID[playerID], v.P_CharacterID[playerID], playerID, "Anywhere");
         Order("40 + 1n Guardian", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);

         KillUnitAt(All, "80 + 1n Guardian", "Anywhere", playerID);

         s.SkillWait(160);

         v.P_LoopMain[playerID] += 1;

         if (v.P_LoopMain[playerID] == 25)
         {
            v.P_CountMain[playerID] += 1;
            v.P_LoopMain[playerID] = 0;         
         }
      }
      else if (v.P_CountMain[playerID] == 5)
      {
         if (v.P_LoopMain[playerID] % 3 == 0)
         {
            s.Table_Sin(playerID, 0, 40 * (v.P_LoopMain[playerID] / 3));
            s.Table_Cos(playerID, 0, 40 * (v.P_LoopMain[playerID] / 3));

            var x = v.P_AngleCos[playerID];
            var y = v.P_AngleSin[playerID];

            s.Shape_NxNSquareAt(playerID, 1, "40 + 1n Wraith", 2, 50, x, y);
            s.Shape_NxNSquareAt(playerID, 1, "40 + 1n Wraith", 2, 50, -x, -y);
            s.Shape_NxNSquareAt(playerID, 1, "40 + 1n Wraith", 2, 50, -y, x);
            s.Shape_NxNSquareAt(playerID, 1, "40 + 1n Wraith", 2, 50, y, -x);

            s.Shape_NxNSquareAt(playerID, 1, " Unit. Hoffnung 25000", 2, 50, x, y);
            s.Shape_NxNSquareAt(playerID, 1, " Unit. Hoffnung 25000", 2, 50, -x, -y);
            s.Shape_NxNSquareAt(playerID, 1, " Unit. Hoffnung 25000", 2, 50, -y, x);
            s.Shape_NxNSquareAt(playerID, 1, " Unit. Hoffnung 25000", 2, 50, y, -x);
         }
         else if (v.P_LoopMain[playerID] % 3 == 1)
         {
            s.Table_Sin(playerID, 30, 40 * (v.P_LoopMain[playerID] / 3));
            s.Table_Cos(playerID, 30, 40 * (v.P_LoopMain[playerID] / 3));

            var x = v.P_AngleCos[playerID];
            var y = v.P_AngleSin[playerID];

            s.Shape_NxNSquareAt(playerID, 1, "40 + 1n Mojo", 2, 50, x, y);
            s.Shape_NxNSquareAt(playerID, 1, "40 + 1n Mojo", 2, 50, -x, -y);
            s.Shape_NxNSquareAt(playerID, 1, "40 + 1n Mojo", 2, 50, -y, x);
            s.Shape_NxNSquareAt(playerID, 1, "40 + 1n Mojo", 2, 50, y, -x);

            s.Shape_NxNSquareAt(playerID, 1, " Unit. Hoffnung 25000", 2, 50, x, y);
            s.Shape_NxNSquareAt(playerID, 1, " Unit. Hoffnung 25000", 2, 50, -x, -y);
            s.Shape_NxNSquareAt(playerID, 1, " Unit. Hoffnung 25000", 2, 50, -y, x);
            s.Shape_NxNSquareAt(playerID, 1, " Unit. Hoffnung 25000", 2, 50, y, -x);
         }
         else if (v.P_LoopMain[playerID] % 3 == 2)
         {
            s.Table_Sin(playerID, 60, 40 * (v.P_LoopMain[playerID] / 3));
            s.Table_Cos(playerID, 60, 40 * (v.P_LoopMain[playerID] / 3));

            var x = v.P_AngleCos[playerID];
            var y = v.P_AngleSin[playerID];

            s.Shape_NxNSquareAt(playerID, 1, "40 + 1n Mutalisk", 2, 50, x, y);
            s.Shape_NxNSquareAt(playerID, 1, "40 + 1n Mutalisk", 2, 50, -x, -y);
            s.Shape_NxNSquareAt(playerID, 1, "40 + 1n Mutalisk", 2, 50, -y, x);
            s.Shape_NxNSquareAt(playerID, 1, "40 + 1n Mutalisk", 2, 50, y, -x);

            s.Shape_NxNSquareAt(playerID, 1, " Unit. Hoffnung 25000", 2, 50, x, y);
            s.Shape_NxNSquareAt(playerID, 1, " Unit. Hoffnung 25000", 2, 50, -x, -y);
            s.Shape_NxNSquareAt(playerID, 1, " Unit. Hoffnung 25000", 2, 50, -y, x);
            s.Shape_NxNSquareAt(playerID, 1, " Unit. Hoffnung 25000", 2, 50, y, -x);
         }

         MoveLocation(v.P_LocationID[playerID], v.P_CharacterID[playerID], playerID, "Anywhere");
         Order("40 + 1n Wraith", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
         Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
         Order("40 + 1n Mutalisk", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);

         KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", playerID);

         s.SkillWait(80);

         v.P_LoopMain[playerID] += 1;

         if (v.P_LoopMain[playerID] == 32)
         {
            KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);

            v.P_CountMain[playerID] += 1;
            v.P_LoopMain[playerID] = 0;         
         }
      }
      else if (v.P_CountMain[playerID] == 6)
      {
         s.SkillWait(3200);

         v.P_CountMain[playerID] += 1;
         v.P_LoopMain[playerID] = 0;  
      }
      else if (v.P_CountMain[playerID] == 7)
      {
         KillUnitAt(All, "40 + 1n Lurker", "Anywhere", playerID);
         KillUnitAt(All, "40 + 1n Mutalisk", "Anywhere", playerID);
         KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);
         KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID);

         SetSwitch("UiltimateSwitch", Clear);
         SetSwitch("Recall - Oda", Clear);
         SetDeaths(playerID, SetTo, 0, " `ShieldRecharge");

         s.SkillEnd();
      }
   }

   MoveLocation(v.P_LocationID[playerID], v.P_CharacterID[playerID], playerID, "Anywhere");
}