## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import Function as f;
import Function as f
# (Line 3) function main(cp)
# (Line 4) {
@EUDFunc
def f_main(cp):
    # (Line 5) MoveUnit(All, "40 + 1n Goliath", cp, "Anywhere", "[Skill]HoldPosition");
    # (Line 6) MoveUnit(All, "50 + 1n Tank", cp, "Anywhere", "[Skill]HoldPosition");
    DoActions(MoveUnit(All, "40 + 1n Goliath", cp, "Anywhere", "[Skill]HoldPosition"))
    # (Line 7) MoveUnit(All, "40 + 1n Marine", cp, "Anywhere", "[Skill]HoldPosition");
    DoActions(MoveUnit(All, "50 + 1n Tank", cp, "Anywhere", "[Skill]HoldPosition"))
    # (Line 9) f.BanReturn(cp);
    DoActions(MoveUnit(All, "40 + 1n Marine", cp, "Anywhere", "[Skill]HoldPosition"))
    f.BanReturn(cp)
    # (Line 10) f.HoldPosition(cp);
    f.HoldPosition(cp)
    # (Line 12) if (f.delay[cp] == 0)
    if EUDIf()(f.delay[cp] == 0):
        # (Line 13) {
        # (Line 14) if (f.count[cp] == 0)
        if EUDIf()(f.count[cp] == 0):
            # (Line 15) {
            # (Line 16) var i = f.loop[cp] / 2;
            i = EUDVariable()
            i << (f.loop[cp] // 2)
            # (Line 18) if (f.loop[cp] % 2 == 0)
            if EUDIf()(f.loop[cp] % 2 == 0):
                # (Line 19) {
                # (Line 20) RemoveUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp);
                # (Line 22) f.SquareShape(cp, 1, "50 + 1n Battlecruiser", -100 + 50 * i, 100);
                DoActions(RemoveUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp))
                f.SquareShape(cp, 1, "50 + 1n Battlecruiser", -100 + 50 * i, 100)
                # (Line 23) f.SquareShape(cp, 1, "50 + 1n Tank", -100 + 50 * i, 100);
                f.SquareShape(cp, 1, "50 + 1n Tank", -100 + 50 * i, 100)
                # (Line 24) f.SquareShape(cp, 1, "60 + 1n Siege", -100 + 50 * i, 100);
                f.SquareShape(cp, 1, "60 + 1n Siege", -100 + 50 * i, 100)
                # (Line 26) KillUnitAt(All, "60 + 1n Siege", "Anywhere", cp);
                # (Line 28) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                DoActions(KillUnitAt(All, "60 + 1n Siege", "Anywhere", cp))
                # (Line 29) MoveUnit(All, "50 + 1n Tank", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 30) Order("50 + 1n Tank", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveUnit(All, "50 + 1n Tank", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                # (Line 31) Order("50 + 1n Battlecruiser", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(Order("50 + 1n Tank", cp, "Anywhere", Attack, f.location[cp]))
                # (Line 32) }
                DoActions(Order("50 + 1n Battlecruiser", cp, "Anywhere", Attack, f.location[cp]))
                # (Line 34) i = f.loop[cp];
            EUDEndIf()
            i << (f.loop[cp])
            # (Line 36) if (f.loop[cp] < 6)
            if EUDIf()(f.loop[cp] >= 6, neg=True):
                # (Line 37) {
                # (Line 38) f.SquareShape(cp, 1, "Protoss Dark Archon", -150 + 50 * i, 150);
                f.SquareShape(cp, 1, "Protoss Dark Archon", -150 + 50 * i, 150)
                # (Line 39) f.SquareShape(cp, 1, "40 + 1n Guardian", -150 + 50 * i, 150);
                f.SquareShape(cp, 1, "40 + 1n Guardian", -150 + 50 * i, 150)
                # (Line 40) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp);
                # (Line 41) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp))
                # (Line 42) }
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp))
                # (Line 43) else if (f.loop[cp] < 8)
            if EUDElseIf()(f.loop[cp] >= 8, neg=True):
                # (Line 44) {
                # (Line 45) f.EdgeShape(cp, 1, "Protoss Dark Archon", 45, 7, 150);
                f.EdgeShape(cp, 1, "Protoss Dark Archon", 45, 7, 150)
                # (Line 46) f.EdgeShape(cp, 1, "40 + 1n Guardian", 45, 7, 150);
                f.EdgeShape(cp, 1, "40 + 1n Guardian", 45, 7, 150)
                # (Line 47) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp);
                # (Line 48) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp))
                # (Line 49) }
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp))
                # (Line 51) f.SkillWait(cp, 160);
            EUDEndIf()
            f.SkillWait(cp, 160)
            # (Line 53) f.loop[cp] += 1;
            _ARRW(f.loop, cp).__iadd__(1)
            # (Line 55) if (f.loop[cp] == 8)
            if EUDIf()(f.loop[cp] == 8):
                # (Line 56) {
                # (Line 57) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 58) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 59) }
                # (Line 60) }
            EUDEndIf()
            # (Line 61) else if (f.count[cp] == 1)
        if EUDElseIf()(f.count[cp] == 1):
            # (Line 62) {
            # (Line 63) var i = f.loop[cp];
            i = EUDVariable()
            i << (f.loop[cp])
            # (Line 65) if (f.loop[cp] == 0)
            if EUDIf()(f.loop[cp] == 0):
                # (Line 66) {
                # (Line 67) RemoveUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp);
                # (Line 68) }
                DoActions(RemoveUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp))
                # (Line 70) if (f.loop[cp] < 3)
            EUDEndIf()
            if EUDIf()(f.loop[cp] >= 3, neg=True):
                # (Line 71) {
                # (Line 72) f.EdgeShape(cp, 1, "50 + 1n Tank", 45, 3 + 2 * i, 50 + 50 * i);
                f.EdgeShape(cp, 1, "50 + 1n Tank", 45, 3 + 2 * i, 50 + 50 * i)
                # (Line 73) KillUnitAt(All, "50 + 1n Tank", "Anywhere", cp);
                # (Line 74) }
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", cp))
                # (Line 75) else if (f.loop[cp] < 7)
            if EUDElseIf()(f.loop[cp] >= 7, neg=True):
                # (Line 76) {
                # (Line 77) f.EdgeShape(cp, 1, "40 + 1n Wraith", 45, 7 - 2 * (i - 3), 150 - 50 * (i - 3));
                f.EdgeShape(cp, 1, "40 + 1n Wraith", 45, 7 - 2 * (i - 3), 150 - 50 * (i - 3))
                # (Line 78) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", cp);
                # (Line 79) }
                DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", cp))
                # (Line 81) if (f.loop[cp] == 2)
            EUDEndIf()
            if EUDIf()(f.loop[cp] == 2):
                # (Line 82) {
                # (Line 83) f.SquareShape(cp, 1, "60 + 1n Siege", 150, 150);
                f.SquareShape(cp, 1, "60 + 1n Siege", 150, 150)
                # (Line 84) f.SquareShape(cp, 1, "60 + 1n Siege", 75, 150);
                f.SquareShape(cp, 1, "60 + 1n Siege", 75, 150)
                # (Line 85) f.SquareShape(cp, 1, "60 + 1n Siege", 150, 75);
                f.SquareShape(cp, 1, "60 + 1n Siege", 150, 75)
                # (Line 86) }
                # (Line 87) else if (f.loop[cp] == 4)
            if EUDElseIf()(f.loop[cp] == 4):
                # (Line 88) {
                # (Line 89) RemoveUnitAt(All, "50 + 1n Tank", "Anywhere", cp);
                # (Line 90) }
                DoActions(RemoveUnitAt(All, "50 + 1n Tank", "Anywhere", cp))
                # (Line 92) f.SkillWait(cp, 80);
            EUDEndIf()
            f.SkillWait(cp, 80)
            # (Line 94) f.loop[cp] += 1;
            _ARRW(f.loop, cp).__iadd__(1)
            # (Line 96) if (f.loop[cp] == 19)
            if EUDIf()(f.loop[cp] == 19):
                # (Line 97) {
                # (Line 98) KillUnitAt(All, "40 + 1n Goliath", "Anywhere", cp);
                # (Line 100) f.count[cp] += 1;
                DoActions(KillUnitAt(All, "40 + 1n Goliath", "Anywhere", cp))
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 101) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 102) }
                # (Line 103) }
            EUDEndIf()
            # (Line 104) else if (f.count[cp] == 2)
        if EUDElseIf()(f.count[cp] == 2):
            # (Line 105) {
            # (Line 106) var i = f.loop[cp];
            i = EUDVariable()
            i << (f.loop[cp])
            # (Line 108) if (f.loop[cp] == 0)
            if EUDIf()(f.loop[cp] == 0):
                # (Line 109) {
                # (Line 110) RemoveUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp);
                # (Line 111) }
                DoActions(RemoveUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp))
                # (Line 113) if (f.loop[cp] < 3)
            EUDEndIf()
            if EUDIf()(f.loop[cp] >= 3, neg=True):
                # (Line 114) {
                # (Line 115) f.EdgeShape(cp, 1, "Protoss Dark Archon", 0, 3 + 2 * i, 50 + 50 * i);
                f.EdgeShape(cp, 1, "Protoss Dark Archon", 0, 3 + 2 * i, 50 + 50 * i)
                # (Line 116) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp);
                # (Line 117) }
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp))
                # (Line 118) else if (f.loop[cp] < 11)
            if EUDElseIf()(f.loop[cp] >= 11, neg=True):
                # (Line 119) {
                # (Line 120) f.EdgeShape(cp, 1, "40 + 1n Guardian", 0, 5, 100);
                f.EdgeShape(cp, 1, "40 + 1n Guardian", 0, 5, 100)
                # (Line 121) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp);
                # (Line 123) f.SquareShape(cp, 1, "60 + 1n High Templar", 120 - 15 * (i - 3), 15 * (i - 3));
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp))
                f.SquareShape(cp, 1, "60 + 1n High Templar", 120 - 15 * (i - 3), 15 * (i - 3))
                # (Line 124) f.SquareShape(cp, 1, "60 + 1n High Templar", 10 * (i - 3), 80 - 10 * (i - 3));
                f.SquareShape(cp, 1, "60 + 1n High Templar", 10 * (i - 3), 80 - 10 * (i - 3))
                # (Line 125) KillUnitAt(All, "60 + 1n High Templar", "Anywhere", cp);
                # (Line 126) }
                DoActions(KillUnitAt(All, "60 + 1n High Templar", "Anywhere", cp))
                # (Line 128) if (f.loop[cp] == 3)
            EUDEndIf()
            if EUDIf()(f.loop[cp] == 3):
                # (Line 129) {
                # (Line 130) f.EdgeShape(cp, 1, "40 + 1n Marine", 0, 5, 100);
                f.EdgeShape(cp, 1, "40 + 1n Marine", 0, 5, 100)
                # (Line 132) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                # (Line 133) MoveUnit(All, "40 + 1n Marine", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 134) Order("40 + 1n Marine", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveUnit(All, "40 + 1n Marine", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                # (Line 135) }
                DoActions(Order("40 + 1n Marine", cp, "Anywhere", Attack, f.location[cp]))
                # (Line 136) else if (f.loop[cp] == 11)
            if EUDElseIf()(f.loop[cp] == 11):
                # (Line 137) {
                # (Line 138) KillUnitAt(All, "40 + 1n Marine", "Anywhere", cp);
                # (Line 140) f.EdgeShape(cp, 1, "40 + 1n Wraith", 0, 5, 100);
                DoActions(KillUnitAt(All, "40 + 1n Marine", "Anywhere", cp))
                f.EdgeShape(cp, 1, "40 + 1n Wraith", 0, 5, 100)
                # (Line 141) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", cp);
                # (Line 143) }
                DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", cp))
                # (Line 145) f.SkillWait(cp, 80);
            EUDEndIf()
            f.SkillWait(cp, 80)
            # (Line 147) f.loop[cp] += 1;
            _ARRW(f.loop, cp).__iadd__(1)
            # (Line 149) if (f.loop[cp] == 17)
            if EUDIf()(f.loop[cp] == 17):
                # (Line 150) {
                # (Line 151) KillUnitAt(All, "60 + 1n Siege", "Anywhere", cp);
                # (Line 153) f.count[cp] += 1;
                DoActions(KillUnitAt(All, "60 + 1n Siege", "Anywhere", cp))
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 154) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 155) }
                # (Line 156) }
            EUDEndIf()
            # (Line 157) else if (f.count[cp] == 3)
        if EUDElseIf()(f.count[cp] == 3):
            # (Line 158) {
            # (Line 159) f.SkillEnd(cp);
            f.SkillEnd(cp)
            # (Line 160) }
            # (Line 161) }
        EUDEndIf()
        # (Line 162) }
    EUDEndIf()
