## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import Function as f;
import Function as f
# (Line 3) var v = 0;
v = EUDCreateVariables(1)
_IGVA([v], lambda: [0])
# (Line 5) function main(cp)
# (Line 6) {
@EUDFunc
def f_main(cp):
    # (Line 7) if (f.count[cp] >= 3)
    if EUDIf()(f.count[cp] >= 3):
        # (Line 8) {
        # (Line 9) f.HoldPosition(cp);
        f.HoldPosition(cp)
        # (Line 10) }
        # (Line 12) f.BanReturn(cp);
    EUDEndIf()
    f.BanReturn(cp)
    # (Line 14) MoveUnit(All, " Unit. Schnee", cp, "Anywhere", "[Skill]HoldPosition");
    # (Line 16) ModifyUnitShields(All, f.heroID[cp], cp, "Anywhere", 1);
    DoActions(MoveUnit(All, " Unit. Schnee", cp, "Anywhere", "[Skill]HoldPosition"))
    # (Line 18) if (v != 0)
    DoActions(ModifyUnitShields(All, f.heroID[cp], cp, "Anywhere", 1))
    if EUDIf()(v == 0, neg=True):
        # (Line 19) f.Voice_Routine(cp, 7 + v);
        f.Voice_Routine(cp, 7 + v)
        # (Line 21) if (f.delay[cp] == 0)
    EUDEndIf()
    if EUDIf()(f.delay[cp] == 0):
        # (Line 22) {
        # (Line 23) if (f.count[cp] == 0)
        if EUDIf()(f.count[cp] == 0):
            # (Line 24) {
            # (Line 25) if (f.loop[cp] == 0)
            if EUDIf()(f.loop[cp] == 0):
                # (Line 26) {
                # (Line 27) v = 3;
                v << (3)
                # (Line 29) SetDeaths(cp, SetTo, 1, " `ShieldRecharge");
                # (Line 30) }
                DoActions(SetDeaths(cp, SetTo, 1, " `ShieldRecharge"))
                # (Line 32) f.SkillWait(cp, 160);
            EUDEndIf()
            f.SkillWait(cp, 160)
            # (Line 34) f.loop[cp] += 1;
            _ARRW(f.loop, cp).__iadd__(1)
            # (Line 36) if (f.loop[cp] == 30)
            if EUDIf()(f.loop[cp] == 30):
                # (Line 37) {
                # (Line 38) v = 4;
                v << (4)
                # (Line 40) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 41) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 42) }
                # (Line 43) }
            EUDEndIf()
            # (Line 44) else if (f.count[cp] == 1)
        if EUDElseIf()(f.count[cp] == 1):
            # (Line 45) {
            # (Line 46) if (f.loop[cp] == 0)
            if EUDIf()(f.loop[cp] == 0):
                # (Line 47) {
                # (Line 48) SetSwitch("Recall - Oda", Set);
                # (Line 49) }
                DoActions(SetSwitch("Recall - Oda", Set))
                # (Line 51) if (f.loop[cp] == 15)
            EUDEndIf()
            if EUDIf()(f.loop[cp] == 15):
                # (Line 52) {
                # (Line 53) v = 5;
                v << (5)
                # (Line 54) }
                # (Line 56) f.SkillWait(cp, 160);
            EUDEndIf()
            f.SkillWait(cp, 160)
            # (Line 58) f.loop[cp] += 1;
            _ARRW(f.loop, cp).__iadd__(1)
            # (Line 60) if (f.loop[cp] == 36)
            if EUDIf()(f.loop[cp] == 36):
                # (Line 61) {
                # (Line 62) v = 0;
                v << (0)
                # (Line 64) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 65) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 66) }
                # (Line 67) }
            EUDEndIf()
            # (Line 68) else if (f.count[cp] == 2)
        if EUDElseIf()(f.count[cp] == 2):
            # (Line 69) {
            # (Line 70) f.EdgeShape(cp, 1, " Unit. Hoffnung 25000", 45, 3, 50);
            f.EdgeShape(cp, 1, " Unit. Hoffnung 25000", 45, 3, 50)
            # (Line 71) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp);
            # (Line 73) f.SkillWait(cp, 160);
            DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp))
            f.SkillWait(cp, 160)
            # (Line 75) f.loop[cp] += 1;
            _ARRW(f.loop, cp).__iadd__(1)
            # (Line 77) if (f.loop[cp] == 26)
            if EUDIf()(f.loop[cp] == 26):
                # (Line 78) {
                # (Line 79) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 80) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 81) }
                # (Line 82) }
            EUDEndIf()
            # (Line 83) else if (f.count[cp] == 3)
        if EUDElseIf()(f.count[cp] == 3):
            # (Line 84) {
            # (Line 85) if (f.loop[cp] == 0)
            if EUDIf()(f.loop[cp] == 0):
                # (Line 86) {
                # (Line 87) f.NxNSquareShape(cp, 1, "40 + 1n Guardian", 6, 50);
                f.NxNSquareShape(cp, 1, "40 + 1n Guardian", 6, 50)
                # (Line 88) }
                # (Line 89) else if (f.loop[cp] == 2)
            if EUDElseIf()(f.loop[cp] == 2):
                # (Line 90) {
                # (Line 91) f.NxNSquareShape(cp, 1, "40 + 1n Guardian", 11, 50);
                f.NxNSquareShape(cp, 1, "40 + 1n Guardian", 11, 50)
                # (Line 92) }
                # (Line 93) else if (f.loop[cp] == 4)
            if EUDElseIf()(f.loop[cp] == 4):
                # (Line 94) {
                # (Line 95) f.NxNSquareShape(cp, 1, "40 + 1n Wraith", 11, 75);
                f.NxNSquareShape(cp, 1, "40 + 1n Wraith", 11, 75)
                # (Line 96) f.NxNSquareShape(cp, 1, " Unit. Hoffnung 25000", 11, 75);
                f.NxNSquareShape(cp, 1, " Unit. Hoffnung 25000", 11, 75)
                # (Line 98) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                # (Line 99) Order("40 + 1n Wraith", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 100) }
                DoActions(Order("40 + 1n Wraith", cp, "Anywhere", Attack, f.location[cp]))
                # (Line 101) else if (f.loop[cp] == 6)
            if EUDElseIf()(f.loop[cp] == 6):
                # (Line 102) {
                # (Line 103) RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", cp);
                # (Line 105) f.NxNSquareShape(cp, 1, "50 + 1n Battlecruiser", 11, 75);
                DoActions(RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", cp))
                f.NxNSquareShape(cp, 1, "50 + 1n Battlecruiser", 11, 75)
                # (Line 107) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                # (Line 108) Order("50 + 1n Battlecruiser", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 109) }
                DoActions(Order("50 + 1n Battlecruiser", cp, "Anywhere", Attack, f.location[cp]))
                # (Line 111) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp);
            EUDEndIf()
            # (Line 112) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp);
            DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp))
            # (Line 114) f.SkillWait(cp, 160);
            DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp))
            f.SkillWait(cp, 160)
            # (Line 116) f.loop[cp] += 1;
            _ARRW(f.loop, cp).__iadd__(1)
            # (Line 118) if (f.loop[cp] == 8)
            if EUDIf()(f.loop[cp] == 8):
                # (Line 119) {
                # (Line 120) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 121) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 122) }
                # (Line 123) }
            EUDEndIf()
            # (Line 124) else if (f.count[cp] == 4)
        if EUDElseIf()(f.count[cp] == 4):
            # (Line 125) {
            # (Line 126) CreateUnit(24, "80 + 1n Guardian", dwrand() % 8 + 33, cp);
            # (Line 127) CreateUnit(6, "40 + 1n Guardian", dwrand() % 8 + 33, cp);
            DoActions(CreateUnit(24, "80 + 1n Guardian", f_dwrand() % 8 + 33, cp))
            # (Line 128) SetInvincibility(Enable, "Any unit", cp, "[Skill]Unit_Wait_ALL");
            DoActions(CreateUnit(6, "40 + 1n Guardian", f_dwrand() % 8 + 33, cp))
            # (Line 130) var i = 0;
            DoActions(SetInvincibility(Enable, "Any unit", cp, "[Skill]Unit_Wait_ALL"))
            i = EUDVariable()
            i << (0)
            # (Line 132) for (; i < 6; i++)
            if EUDWhile()(i >= 6, neg=True):
                def _t21():
                    i.__iadd__(1)
                # (Line 133) {
                # (Line 134) if (Bring(cp, AtLeast, 1, "50 + 1n Battlecruiser", "Anywhere"))
                if EUDIf()(Bring(cp, AtLeast, 1, "50 + 1n Battlecruiser", "Anywhere")):
                    # (Line 135) {
                    # (Line 136) var x = dwrand() % 20 + 10;
                    x = EUDVariable()
                    x << (f_dwrand() % 20 + 10)
                    # (Line 138) MoveLocation(f.location[cp], "50 + 1n Battlecruiser", cp, "Anywhere");
                    # (Line 139) RemoveUnitAt(1, "50 + 1n Battlecruiser", "Anywhere", cp);
                    DoActions(MoveLocation(f.location[cp], "50 + 1n Battlecruiser", cp, "Anywhere"))
                    # (Line 140) MoveUnit(1, "40 + 1n Guardian", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                    DoActions(RemoveUnitAt(1, "50 + 1n Battlecruiser", "Anywhere", cp))
                    # (Line 141) addloc(f.location[cp], x, x);
                    DoActions(MoveUnit(1, "40 + 1n Guardian", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                    f_addloc(f.location[cp], x, x)
                    # (Line 142) MoveUnit(1, "80 + 1n Guardian", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                    # (Line 143) addloc(f.location[cp], -x, -x);
                    DoActions(MoveUnit(1, "80 + 1n Guardian", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                    f_addloc(f.location[cp], -x, -x)
                    # (Line 144) MoveUnit(1, "80 + 1n Guardian", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                    # (Line 145) addloc(f.location[cp], -x, x);
                    DoActions(MoveUnit(1, "80 + 1n Guardian", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                    f_addloc(f.location[cp], -x, x)
                    # (Line 146) MoveUnit(1, "80 + 1n Guardian", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                    # (Line 147) addloc(f.location[cp], x, -x);
                    DoActions(MoveUnit(1, "80 + 1n Guardian", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                    f_addloc(f.location[cp], x, -x)
                    # (Line 148) MoveUnit(1, "80 + 1n Guardian", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                    # (Line 149) }
                    DoActions(MoveUnit(1, "80 + 1n Guardian", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                    # (Line 150) }
                EUDEndIf()
                # (Line 152) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                EUDSetContinuePoint()
                _t21()
            EUDEndWhile()
            # (Line 153) Order("40 + 1n Guardian", cp, "Anywhere", Attack, f.location[cp]);
            DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
            # (Line 155) KillUnitAt(All, "80 + 1n Guardian", "Anywhere", cp);
            DoActions(Order("40 + 1n Guardian", cp, "Anywhere", Attack, f.location[cp]))
            # (Line 157) f.SkillWait(cp, 160);
            DoActions(KillUnitAt(All, "80 + 1n Guardian", "Anywhere", cp))
            f.SkillWait(cp, 160)
            # (Line 159) f.loop[cp] += 1;
            _ARRW(f.loop, cp).__iadd__(1)
            # (Line 161) if (f.loop[cp] == 25)
            if EUDIf()(f.loop[cp] == 25):
                # (Line 162) {
                # (Line 163) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 164) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 165) }
                # (Line 166) }
            EUDEndIf()
            # (Line 167) else if (f.count[cp] == 5)
        if EUDElseIf()(f.count[cp] == 5):
            # (Line 168) {
            # (Line 169) if (f.loop[cp] % 3 == 0)
            if EUDIf()(f.loop[cp] % 3 == 0):
                # (Line 170) {
                # (Line 171) f.Table_Sin(cp, 0, 40 * (f.loop[cp] / 3));
                f.Table_Sin(cp, 0, 40 * (f.loop[cp] // 3))
                # (Line 172) f.Table_Cos(cp, 0, 40 * (f.loop[cp] / 3));
                f.Table_Cos(cp, 0, 40 * (f.loop[cp] // 3))
                # (Line 174) var x = f.CosAngle[cp];
                x = EUDVariable()
                x << (f.CosAngle[cp])
                # (Line 175) var y = f.SinAngle[cp];
                y = EUDVariable()
                y << (f.SinAngle[cp])
                # (Line 177) f.NxNSquareShapeAt(cp, 1, "40 + 1n Wraith", 2, 50, x, y);
                f.NxNSquareShapeAt(cp, 1, "40 + 1n Wraith", 2, 50, x, y)
                # (Line 178) f.NxNSquareShapeAt(cp, 1, "40 + 1n Wraith", 2, 50, -x, -y);
                f.NxNSquareShapeAt(cp, 1, "40 + 1n Wraith", 2, 50, -x, -y)
                # (Line 179) f.NxNSquareShapeAt(cp, 1, "40 + 1n Wraith", 2, 50, -y, x);
                f.NxNSquareShapeAt(cp, 1, "40 + 1n Wraith", 2, 50, -y, x)
                # (Line 180) f.NxNSquareShapeAt(cp, 1, "40 + 1n Wraith", 2, 50, y, -x);
                f.NxNSquareShapeAt(cp, 1, "40 + 1n Wraith", 2, 50, y, -x)
                # (Line 182) f.NxNSquareShapeAt(cp, 1, " Unit. Hoffnung 25000", 2, 50, x, y);
                f.NxNSquareShapeAt(cp, 1, " Unit. Hoffnung 25000", 2, 50, x, y)
                # (Line 183) f.NxNSquareShapeAt(cp, 1, " Unit. Hoffnung 25000", 2, 50, -x, -y);
                f.NxNSquareShapeAt(cp, 1, " Unit. Hoffnung 25000", 2, 50, -x, -y)
                # (Line 184) f.NxNSquareShapeAt(cp, 1, " Unit. Hoffnung 25000", 2, 50, -y, x);
                f.NxNSquareShapeAt(cp, 1, " Unit. Hoffnung 25000", 2, 50, -y, x)
                # (Line 185) f.NxNSquareShapeAt(cp, 1, " Unit. Hoffnung 25000", 2, 50, y, -x);
                f.NxNSquareShapeAt(cp, 1, " Unit. Hoffnung 25000", 2, 50, y, -x)
                # (Line 186) }
                # (Line 187) else if (f.loop[cp] % 3 == 1)
            if EUDElseIf()(f.loop[cp] % 3 == 1):
                # (Line 188) {
                # (Line 189) f.Table_Sin(cp, 30, 40 * (f.loop[cp] / 3));
                f.Table_Sin(cp, 30, 40 * (f.loop[cp] // 3))
                # (Line 190) f.Table_Cos(cp, 30, 40 * (f.loop[cp] / 3));
                f.Table_Cos(cp, 30, 40 * (f.loop[cp] // 3))
                # (Line 192) var x = f.CosAngle[cp];
                x = EUDVariable()
                x << (f.CosAngle[cp])
                # (Line 193) var y = f.SinAngle[cp];
                y = EUDVariable()
                y << (f.SinAngle[cp])
                # (Line 195) f.NxNSquareShapeAt(cp, 1, "40 + 1n Mojo", 2, 50, x, y);
                f.NxNSquareShapeAt(cp, 1, "40 + 1n Mojo", 2, 50, x, y)
                # (Line 196) f.NxNSquareShapeAt(cp, 1, "40 + 1n Mojo", 2, 50, -x, -y);
                f.NxNSquareShapeAt(cp, 1, "40 + 1n Mojo", 2, 50, -x, -y)
                # (Line 197) f.NxNSquareShapeAt(cp, 1, "40 + 1n Mojo", 2, 50, -y, x);
                f.NxNSquareShapeAt(cp, 1, "40 + 1n Mojo", 2, 50, -y, x)
                # (Line 198) f.NxNSquareShapeAt(cp, 1, "40 + 1n Mojo", 2, 50, y, -x);
                f.NxNSquareShapeAt(cp, 1, "40 + 1n Mojo", 2, 50, y, -x)
                # (Line 200) f.NxNSquareShapeAt(cp, 1, " Unit. Hoffnung 25000", 2, 50, x, y);
                f.NxNSquareShapeAt(cp, 1, " Unit. Hoffnung 25000", 2, 50, x, y)
                # (Line 201) f.NxNSquareShapeAt(cp, 1, " Unit. Hoffnung 25000", 2, 50, -x, -y);
                f.NxNSquareShapeAt(cp, 1, " Unit. Hoffnung 25000", 2, 50, -x, -y)
                # (Line 202) f.NxNSquareShapeAt(cp, 1, " Unit. Hoffnung 25000", 2, 50, -y, x);
                f.NxNSquareShapeAt(cp, 1, " Unit. Hoffnung 25000", 2, 50, -y, x)
                # (Line 203) f.NxNSquareShapeAt(cp, 1, " Unit. Hoffnung 25000", 2, 50, y, -x);
                f.NxNSquareShapeAt(cp, 1, " Unit. Hoffnung 25000", 2, 50, y, -x)
                # (Line 204) }
                # (Line 205) else if (f.loop[cp] % 3 == 2)
            if EUDElseIf()(f.loop[cp] % 3 == 2):
                # (Line 206) {
                # (Line 207) f.Table_Sin(cp, 60, 40 * (f.loop[cp] / 3));
                f.Table_Sin(cp, 60, 40 * (f.loop[cp] // 3))
                # (Line 208) f.Table_Cos(cp, 60, 40 * (f.loop[cp] / 3));
                f.Table_Cos(cp, 60, 40 * (f.loop[cp] // 3))
                # (Line 210) var x = f.CosAngle[cp];
                x = EUDVariable()
                x << (f.CosAngle[cp])
                # (Line 211) var y = f.SinAngle[cp];
                y = EUDVariable()
                y << (f.SinAngle[cp])
                # (Line 213) f.NxNSquareShapeAt(cp, 1, "40 + 1n Mutalisk", 2, 50, x, y);
                f.NxNSquareShapeAt(cp, 1, "40 + 1n Mutalisk", 2, 50, x, y)
                # (Line 214) f.NxNSquareShapeAt(cp, 1, "40 + 1n Mutalisk", 2, 50, -x, -y);
                f.NxNSquareShapeAt(cp, 1, "40 + 1n Mutalisk", 2, 50, -x, -y)
                # (Line 215) f.NxNSquareShapeAt(cp, 1, "40 + 1n Mutalisk", 2, 50, -y, x);
                f.NxNSquareShapeAt(cp, 1, "40 + 1n Mutalisk", 2, 50, -y, x)
                # (Line 216) f.NxNSquareShapeAt(cp, 1, "40 + 1n Mutalisk", 2, 50, y, -x);
                f.NxNSquareShapeAt(cp, 1, "40 + 1n Mutalisk", 2, 50, y, -x)
                # (Line 218) f.NxNSquareShapeAt(cp, 1, " Unit. Hoffnung 25000", 2, 50, x, y);
                f.NxNSquareShapeAt(cp, 1, " Unit. Hoffnung 25000", 2, 50, x, y)
                # (Line 219) f.NxNSquareShapeAt(cp, 1, " Unit. Hoffnung 25000", 2, 50, -x, -y);
                f.NxNSquareShapeAt(cp, 1, " Unit. Hoffnung 25000", 2, 50, -x, -y)
                # (Line 220) f.NxNSquareShapeAt(cp, 1, " Unit. Hoffnung 25000", 2, 50, -y, x);
                f.NxNSquareShapeAt(cp, 1, " Unit. Hoffnung 25000", 2, 50, -y, x)
                # (Line 221) f.NxNSquareShapeAt(cp, 1, " Unit. Hoffnung 25000", 2, 50, y, -x);
                f.NxNSquareShapeAt(cp, 1, " Unit. Hoffnung 25000", 2, 50, y, -x)
                # (Line 222) }
                # (Line 224) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
            EUDEndIf()
            # (Line 225) Order("40 + 1n Wraith", cp, "Anywhere", Attack, f.location[cp]);
            DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
            # (Line 226) Order("40 + 1n Mojo", cp, "Anywhere", Attack, f.location[cp]);
            DoActions(Order("40 + 1n Wraith", cp, "Anywhere", Attack, f.location[cp]))
            # (Line 227) Order("40 + 1n Mutalisk", cp, "Anywhere", Attack, f.location[cp]);
            DoActions(Order("40 + 1n Mojo", cp, "Anywhere", Attack, f.location[cp]))
            # (Line 229) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp);
            DoActions(Order("40 + 1n Mutalisk", cp, "Anywhere", Attack, f.location[cp]))
            # (Line 231) f.SkillWait(cp, 80);
            DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp))
            f.SkillWait(cp, 80)
            # (Line 233) f.loop[cp] += 1;
            _ARRW(f.loop, cp).__iadd__(1)
            # (Line 235) if (f.loop[cp] == 32)
            if EUDIf()(f.loop[cp] == 32):
                # (Line 236) {
                # (Line 237) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp);
                # (Line 239) f.count[cp] += 1;
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp))
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 240) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 241) }
                # (Line 242) }
            EUDEndIf()
            # (Line 243) else if (f.count[cp] == 6)
        if EUDElseIf()(f.count[cp] == 6):
            # (Line 244) {
            # (Line 245) f.SkillWait(cp, 3200);
            f.SkillWait(cp, 3200)
            # (Line 247) f.count[cp] += 1;
            _ARRW(f.count, cp).__iadd__(1)
            # (Line 248) f.loop[cp] = 0;
            _ARRW(f.loop, cp) << (0)
            # (Line 249) }
            # (Line 250) else if (f.count[cp] == 7)
        if EUDElseIf()(f.count[cp] == 7):
            # (Line 251) {
            # (Line 252) KillUnitAt(All, "40 + 1n Lurker", "Anywhere", cp);
            # (Line 253) KillUnitAt(All, "40 + 1n Mutalisk", "Anywhere", cp);
            DoActions(KillUnitAt(All, "40 + 1n Lurker", "Anywhere", cp))
            # (Line 254) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", cp);
            DoActions(KillUnitAt(All, "40 + 1n Mutalisk", "Anywhere", cp))
            # (Line 255) KillUnitAt(All, "40 + 1n Mojo", "Anywhere", cp);
            DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", cp))
            # (Line 257) SetSwitch("UiltimateSwitch", Clear);
            DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", cp))
            # (Line 258) SetSwitch("Recall - Oda", Clear);
            DoActions(SetSwitch("UiltimateSwitch", Clear))
            # (Line 259) SetDeaths(cp, SetTo, 0, " `ShieldRecharge");
            DoActions(SetSwitch("Recall - Oda", Clear))
            # (Line 261) f.SkillEnd(cp);
            DoActions(SetDeaths(cp, SetTo, 0, " `ShieldRecharge"))
            f.SkillEnd(cp)
            # (Line 262) }
            # (Line 263) }
        EUDEndIf()
        # (Line 265) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
    EUDEndIf()
    # (Line 266) }
    DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
