## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import Function as f;
import Function as f
# (Line 3) function EdgeShapeAt(cp : TrgPlayer, count, Unit : TrgUnit, degree, n, interval, x, y);
# (Line 4) function NxNSquareShapeAt(cp : TrgPlayer, count, Unit : TrgUnit, n, interval, x, y);
# (Line 5) function EdgeShapeAtWithProperty(cp : TrgPlayer, count, Unit : TrgUnit, degree, n, interval, x, y, property);
# (Line 7) function main(cp)
# (Line 8) {
@EUDFunc
def f_main(cp):
    # (Line 9) ModifyUnitShields(All, f.heroID[cp], cp, "Anywhere", 1);
    # (Line 11) if (f.delay[cp] == 0)
    DoActions(ModifyUnitShields(All, f.heroID[cp], cp, "Anywhere", 1))
    if EUDIf()(f.delay[cp] == 0):
        # (Line 12) {
        # (Line 13) if (f.count[cp] == 0)
        if EUDIf()(f.count[cp] == 0):
            # (Line 14) {
            # (Line 15) SetDeaths(cp, SetTo, 1, " `ShieldRecharge");
            # (Line 17) if (f.loop[cp] % 2 == 0)
            DoActions(SetDeaths(cp, SetTo, 1, " `ShieldRecharge"))
            if EUDIf()(f.loop[cp] % 2 == 0):
                # (Line 18) {
                # (Line 19) RemoveUnitAt(All, "40 + 1n Mutalisk", "Anywhere", cp);
                # (Line 20) RemoveUnitAt(All, " Creep. Dunkelheit", "Anywhere", cp);
                DoActions(RemoveUnitAt(All, "40 + 1n Mutalisk", "Anywhere", cp))
                # (Line 22) var i = f.loop[cp] / 2;
                DoActions(RemoveUnitAt(All, " Creep. Dunkelheit", "Anywhere", cp))
                i = EUDVariable()
                i << (f.loop[cp] // 2)
                # (Line 24) f.SquareShape(cp, 1, "40 + 1n Mutalisk", 25 + 25 * i, 75 - 25 * i);
                f.SquareShape(cp, 1, "40 + 1n Mutalisk", 25 + 25 * i, 75 - 25 * i)
                # (Line 25) f.SquareShape(cp, 1, "Rhynadon (Badlands)", 25 + 25 * i, 75 - 25 * i);
                f.SquareShape(cp, 1, "Rhynadon (Badlands)", 25 + 25 * i, 75 - 25 * i)
                # (Line 26) KillUnitAt(All, "Rhynadon (Badlands)", "Anywhere", cp);
                # (Line 28) f.SquareShape(cp, 1, " Creep. Dunkelheit", 100, 100);
                DoActions(KillUnitAt(All, "Rhynadon (Badlands)", "Anywhere", cp))
                f.SquareShape(cp, 1, " Creep. Dunkelheit", 100, 100)
                # (Line 29) f.SquareShape(cp, 6, "Bengalaas (Jungle)", 100, 100);
                f.SquareShape(cp, 6, "Bengalaas (Jungle)", 100, 100)
                # (Line 30) f.SquareShape(cp, 1, "Target", 100, 100);
                f.SquareShape(cp, 1, "Target", 100, 100)
                # (Line 31) f.DotShape(cp, 1, "Target", 0, 0);
                f.DotShape(cp, 1, "Target", 0, 0)
                # (Line 32) KillUnitAt(All, "Bengalaas (Jungle)", "Anywhere", cp);
                # (Line 33) KillUnitAt(All, "Target", "Anywhere", cp);
                DoActions(KillUnitAt(All, "Bengalaas (Jungle)", "Anywhere", cp))
                # (Line 35) f.SquareShape(cp, 1, "40 + 1n Zealot", 40 + 40 * i, 40 + 40 * i);
                DoActions(KillUnitAt(All, "Target", "Anywhere", cp))
                f.SquareShape(cp, 1, "40 + 1n Zealot", 40 + 40 * i, 40 + 40 * i)
                # (Line 36) KillUnitAt(All, "40 + 1n Zealot", "Anywhere", cp);
                # (Line 38) f.SquareShape(cp, 1, "Kakaru (Twilight)", 50, 50);
                DoActions(KillUnitAt(All, "40 + 1n Zealot", "Anywhere", cp))
                f.SquareShape(cp, 1, "Kakaru (Twilight)", 50, 50)
                # (Line 39) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", cp);
                # (Line 41) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", cp))
                # (Line 42) MoveUnit(All, " Creep. Dunkelheit", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 43) Order("40 + 1n Mutalisk", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveUnit(All, " Creep. Dunkelheit", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                # (Line 44) Order(" Creep. Dunkelheit", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(Order("40 + 1n Mutalisk", cp, "Anywhere", Attack, f.location[cp]))
                # (Line 45) }
                DoActions(Order(" Creep. Dunkelheit", cp, "Anywhere", Attack, f.location[cp]))
                # (Line 47) f.SkillWait(cp, 80);
            EUDEndIf()
            f.SkillWait(cp, 80)
            # (Line 49) f.loop[cp] += 1;
            _ARRW(f.loop, cp).__iadd__(1)
            # (Line 51) if (f.loop[cp] == 8)
            if EUDIf()(f.loop[cp] == 8):
                # (Line 52) {
                # (Line 53) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 54) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 55) }
                # (Line 56) }
            EUDEndIf()
            # (Line 57) else if (f.count[cp] == 1)
        if EUDElseIf()(f.count[cp] == 1):
            # (Line 58) {
            # (Line 59) if (f.loop[cp] == 0)
            if EUDIf()(f.loop[cp] == 0):
                # (Line 60) {
                # (Line 61) RemoveUnitAt(All, "40 + 1n Mutalisk", "Anywhere", cp);
                # (Line 62) RemoveUnitAt(All, " Creep. Dunkelheit", "Anywhere", cp);
                DoActions(RemoveUnitAt(All, "40 + 1n Mutalisk", "Anywhere", cp))
                # (Line 63) }
                DoActions(RemoveUnitAt(All, " Creep. Dunkelheit", "Anywhere", cp))
                # (Line 64) RemoveUnitAt(All, "40 + 1n Mutalisk", "Anywhere", cp);
            EUDEndIf()
            # (Line 66) f.SquareShape(cp, 1, "40 + 1n Mutalisk", 120 - 8 * f.loop[cp], 0);
            DoActions(RemoveUnitAt(All, "40 + 1n Mutalisk", "Anywhere", cp))
            f.SquareShape(cp, 1, "40 + 1n Mutalisk", 120 - 8 * f.loop[cp], 0)
            # (Line 67) f.SquareShape(cp, 1, "Protoss Dark Archon", 120 - 8 * f.loop[cp], 0);
            f.SquareShape(cp, 1, "Protoss Dark Archon", 120 - 8 * f.loop[cp], 0)
            # (Line 68) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp);
            # (Line 70) f.SquareShape(cp, 1, "40 + 1n Guardian", 170 - 8 * f.loop[cp], 0);
            DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp))
            f.SquareShape(cp, 1, "40 + 1n Guardian", 170 - 8 * f.loop[cp], 0)
            # (Line 71) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp);
            # (Line 73) if (f.loop[cp] % 2 == 0)
            DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp))
            if EUDIf()(f.loop[cp] % 2 == 0):
                # (Line 74) {
                # (Line 75) f.SquareShape(cp, 1, "Scantid (Desert)", 100, 100);
                f.SquareShape(cp, 1, "Scantid (Desert)", 100, 100)
                # (Line 76) KillUnitAt(All, "Scantid (Desert)", "Anywhere", cp);
                # (Line 77) }
                DoActions(KillUnitAt(All, "Scantid (Desert)", "Anywhere", cp))
                # (Line 79) if (f.loop[cp] == 0)
            EUDEndIf()
            if EUDIf()(f.loop[cp] == 0):
                # (Line 80) {
                # (Line 81) f.SquareShape(cp, 1, "40 + 1n Gantrithor", 100, 100);
                f.SquareShape(cp, 1, "40 + 1n Gantrithor", 100, 100)
                # (Line 82) f.SquareShape(cp, 1, "50 + 1n Tank", 100, 100);
                f.SquareShape(cp, 1, "50 + 1n Tank", 100, 100)
                # (Line 83) KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", cp);
                # (Line 84) KillUnitAt(All, "50 + 1n Tank", "Anywhere", cp);
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", cp))
                # (Line 85) }
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", cp))
                # (Line 86) else if (f.loop[cp] == 2)
            if EUDElseIf()(f.loop[cp] == 2):
                # (Line 87) {
                # (Line 88) f.SquareShape(cp, 1, "40 + 1n Guardian", 100, 100);
                f.SquareShape(cp, 1, "40 + 1n Guardian", 100, 100)
                # (Line 89) f.SquareShape(cp, 1, "60 + 1n Archon", 100, 100);
                f.SquareShape(cp, 1, "60 + 1n Archon", 100, 100)
                # (Line 90) KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp);
                # (Line 92) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp))
                # (Line 93) Order("40 + 1n Guardian", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 94) }
                DoActions(Order("40 + 1n Guardian", cp, "Anywhere", Attack, f.location[cp]))
                # (Line 95) else if (f.loop[cp] == 4)
            if EUDElseIf()(f.loop[cp] == 4):
                # (Line 96) {
                # (Line 97) f.SquareShape(cp, 1, "40 + 1n Gantrithor", 150, 0);
                f.SquareShape(cp, 1, "40 + 1n Gantrithor", 150, 0)
                # (Line 98) f.SquareShape(cp, 1, "50 + 1n Tank", 150, 0);
                f.SquareShape(cp, 1, "50 + 1n Tank", 150, 0)
                # (Line 99) KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", cp);
                # (Line 100) KillUnitAt(All, "50 + 1n Tank", "Anywhere", cp);
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", cp))
                # (Line 101) }
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", cp))
                # (Line 102) else if (f.loop[cp] == 6)
            if EUDElseIf()(f.loop[cp] == 6):
                # (Line 103) {
                # (Line 104) f.SquareShape(cp, 1, "40 + 1n Guardian", 150, 0);
                f.SquareShape(cp, 1, "40 + 1n Guardian", 150, 0)
                # (Line 105) f.SquareShape(cp, 1, "60 + 1n Archon", 150, 0);
                f.SquareShape(cp, 1, "60 + 1n Archon", 150, 0)
                # (Line 106) KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp);
                # (Line 108) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp))
                # (Line 109) Order("40 + 1n Guardian", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 110) }
                DoActions(Order("40 + 1n Guardian", cp, "Anywhere", Attack, f.location[cp]))
                # (Line 112) f.SkillWait(cp, 80);
            EUDEndIf()
            f.SkillWait(cp, 80)
            # (Line 114) f.loop[cp] += 1;
            _ARRW(f.loop, cp).__iadd__(1)
            # (Line 116) if (f.loop[cp] == 8)
            if EUDIf()(f.loop[cp] == 8):
                # (Line 117) {
                # (Line 118) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 119) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 120) }
                # (Line 121) }
            EUDEndIf()
            # (Line 122) else if (f.count[cp] == 2)
        if EUDElseIf()(f.count[cp] == 2):
            # (Line 123) {
            # (Line 124) if (f.loop[cp] == 0)
            if EUDIf()(f.loop[cp] == 0):
                # (Line 125) {
                # (Line 126) RemoveUnitAt(All, "40 + 1n Mutalisk", "Anywhere", cp);
                # (Line 127) }
                DoActions(RemoveUnitAt(All, "40 + 1n Mutalisk", "Anywhere", cp))
                # (Line 129) if (f.loop[cp] == 0)
            EUDEndIf()
            if EUDIf()(f.loop[cp] == 0):
                # (Line 130) {
                # (Line 131) f.SquareShape(cp, 1, "40 + 1n Gantrithor", 150, 150);
                f.SquareShape(cp, 1, "40 + 1n Gantrithor", 150, 150)
                # (Line 132) f.SquareShape(cp, 1, "50 + 1n Tank", 150, 150);
                f.SquareShape(cp, 1, "50 + 1n Tank", 150, 150)
                # (Line 133) f.DotShape(cp, 1, "50 + 1n Battlecruiser", 0, 0);
                f.DotShape(cp, 1, "50 + 1n Battlecruiser", 0, 0)
                # (Line 134) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp);
                # (Line 135) KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", cp);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp))
                # (Line 136) KillUnitAt(All, "50 + 1n Tank", "Anywhere", cp);
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", cp))
                # (Line 137) }
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", cp))
                # (Line 138) else if (f.loop[cp] == 2)
            if EUDElseIf()(f.loop[cp] == 2):
                # (Line 139) {
                # (Line 140) f.SquareShape(cp, 1, "40 + 1n Guardian", 150, 150);
                f.SquareShape(cp, 1, "40 + 1n Guardian", 150, 150)
                # (Line 141) f.SquareShape(cp, 1, "60 + 1n Archon", 150, 150);
                f.SquareShape(cp, 1, "60 + 1n Archon", 150, 150)
                # (Line 142) f.SquareShape(cp, 1, "50 + 1n Battlecruiser", 75, 75);
                f.SquareShape(cp, 1, "50 + 1n Battlecruiser", 75, 75)
                # (Line 143) f.SquareShape(cp, 1, "40 + 1n Ghost", 75, 75);
                f.SquareShape(cp, 1, "40 + 1n Ghost", 75, 75)
                # (Line 144) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp);
                # (Line 145) KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp))
                # (Line 147) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp))
                # (Line 148) MoveUnit(All, "40 + 1n Ghost", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 149) Order("40 + 1n Guardian", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveUnit(All, "40 + 1n Ghost", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                # (Line 150) Order("40 + 1n Ghost", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(Order("40 + 1n Guardian", cp, "Anywhere", Attack, f.location[cp]))
                # (Line 151) }
                DoActions(Order("40 + 1n Ghost", cp, "Anywhere", Attack, f.location[cp]))
                # (Line 152) else if (f.loop[cp] == 4)
            if EUDElseIf()(f.loop[cp] == 4):
                # (Line 153) {
                # (Line 154) f.SquareShape(cp, 1, "40 + 1n Gantrithor", 200, 0);
                f.SquareShape(cp, 1, "40 + 1n Gantrithor", 200, 0)
                # (Line 155) f.SquareShape(cp, 1, "50 + 1n Tank", 200, 0);
                f.SquareShape(cp, 1, "50 + 1n Tank", 200, 0)
                # (Line 156) f.SquareShape(cp, 1, "50 + 1n Battlecruiser", 150, 150);
                f.SquareShape(cp, 1, "50 + 1n Battlecruiser", 150, 150)
                # (Line 157) f.SquareShape(cp, 1, "40 + 1n Ghost", 150, 150);
                f.SquareShape(cp, 1, "40 + 1n Ghost", 150, 150)
                # (Line 158) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp);
                # (Line 159) KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", cp);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp))
                # (Line 160) KillUnitAt(All, "50 + 1n Tank", "Anywhere", cp);
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", cp))
                # (Line 162) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", cp))
                # (Line 163) MoveUnit(All, "40 + 1n Ghost", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 164) Order("40 + 1n Ghost", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveUnit(All, "40 + 1n Ghost", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                # (Line 165) }
                DoActions(Order("40 + 1n Ghost", cp, "Anywhere", Attack, f.location[cp]))
                # (Line 166) else if (f.loop[cp] == 6)
            if EUDElseIf()(f.loop[cp] == 6):
                # (Line 167) {
                # (Line 168) f.SquareShape(cp, 1, "40 + 1n Guardian", 200, 0);
                f.SquareShape(cp, 1, "40 + 1n Guardian", 200, 0)
                # (Line 169) f.SquareShape(cp, 1, "60 + 1n Archon", 200, 0);
                f.SquareShape(cp, 1, "60 + 1n Archon", 200, 0)
                # (Line 170) KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp);
                # (Line 172) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp))
                # (Line 173) Order("40 + 1n Guardian", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 174) }
                DoActions(Order("40 + 1n Guardian", cp, "Anywhere", Attack, f.location[cp]))
                # (Line 175) f.SkillWait(cp, 80);
            EUDEndIf()
            f.SkillWait(cp, 80)
            # (Line 177) f.loop[cp] += 1;
            _ARRW(f.loop, cp).__iadd__(1)
            # (Line 179) if (f.loop[cp] == 19)
            if EUDIf()(f.loop[cp] == 19):
                # (Line 180) {
                # (Line 181) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 182) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 183) }
                # (Line 184) }
            EUDEndIf()
            # (Line 185) else if (f.count[cp] == 3)
        if EUDElseIf()(f.count[cp] == 3):
            # (Line 186) {
            # (Line 187) if (f.loop[cp] == 0)
            if EUDIf()(f.loop[cp] == 0):
                # (Line 188) {
                # (Line 189) f.NxNSquareShape(cp, 1, "40 + 1n Guardian", 3, 50);
                f.NxNSquareShape(cp, 1, "40 + 1n Guardian", 3, 50)
                # (Line 190) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp);
                # (Line 191) f.EdgeShapeWithProperty(cp, 1, " Unit. Hoffnung 25000", 45, 2, 50, 1);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp))
                f.EdgeShapeWithProperty(cp, 1, " Unit. Hoffnung 25000", 45, 2, 50, 1)
                # (Line 192) f.EdgeShape(cp, 1, "40 + 1n Drone", 0, 2, 30);
                f.EdgeShape(cp, 1, "40 + 1n Drone", 0, 2, 30)
                # (Line 193) f.NxNSquareShape(cp, 1, " Creep. Licht", 2, 75);
                f.NxNSquareShape(cp, 1, " Creep. Licht", 2, 75)
                # (Line 194) }
                # (Line 195) else if (f.loop[cp] == 2)
            if EUDElseIf()(f.loop[cp] == 2):
                # (Line 196) {
                # (Line 197) NxNSquareShapeAt(cp, 1, "40 + 1n Guardian", 3, 50, 150, 0);
                NxNSquareShapeAt(cp, 1, "40 + 1n Guardian", 3, 50, 150, 0)
                # (Line 198) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp);
                # (Line 199) EdgeShapeAtWithProperty(cp, 1, " Unit. Hoffnung 25000", 45, 2, 50, 150, 0, 1);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp))
                EdgeShapeAtWithProperty(cp, 1, " Unit. Hoffnung 25000", 45, 2, 50, 150, 0, 1)
                # (Line 200) EdgeShapeAt(cp, 1, "40 + 1n Drone", 0, 2, 30, 150, 0);
                EdgeShapeAt(cp, 1, "40 + 1n Drone", 0, 2, 30, 150, 0)
                # (Line 201) NxNSquareShapeAt(cp, 1, " Creep. Licht", 2, 75, 150, 0);
                NxNSquareShapeAt(cp, 1, " Creep. Licht", 2, 75, 150, 0)
                # (Line 202) f.SquareShape(cp, 1, "40 + 1n Mutalisk", 150, 0);
                f.SquareShape(cp, 1, "40 + 1n Mutalisk", 150, 0)
                # (Line 203) }
                # (Line 206) if (f.loop[cp] < 3)
            EUDEndIf()
            if EUDIf()(f.loop[cp] >= 3, neg=True):
                # (Line 207) {
                # (Line 208) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                # (Line 209) MoveUnit(All, " Unit. Hoffnung 25000", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 210) MoveUnit(All, "40 + 1n Drone", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                DoActions(MoveUnit(All, " Unit. Hoffnung 25000", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                # (Line 211) MoveUnit(All, " Creep. Licht", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                DoActions(MoveUnit(All, "40 + 1n Drone", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                # (Line 212) MoveUnit(All, "40 + 1n Mutalisk", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                DoActions(MoveUnit(All, " Creep. Licht", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                # (Line 213) Order(" Unit. Hoffnung 25000", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveUnit(All, "40 + 1n Mutalisk", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                # (Line 214) Order("40 + 1n Drone", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(Order(" Unit. Hoffnung 25000", cp, "Anywhere", Attack, f.location[cp]))
                # (Line 215) Order(" Creep. Licht", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(Order("40 + 1n Drone", cp, "Anywhere", Attack, f.location[cp]))
                # (Line 216) Order("40 + 1n Mutalisk", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(Order(" Creep. Licht", cp, "Anywhere", Attack, f.location[cp]))
                # (Line 217) }
                DoActions(Order("40 + 1n Mutalisk", cp, "Anywhere", Attack, f.location[cp]))
                # (Line 219) f.SkillWait(cp, 80);
            EUDEndIf()
            f.SkillWait(cp, 80)
            # (Line 221) f.loop[cp] += 1;
            _ARRW(f.loop, cp).__iadd__(1)
            # (Line 223) if (f.loop[cp] == 42)
            if EUDIf()(f.loop[cp] == 42):
                # (Line 224) {
                # (Line 225) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 226) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 227) }
                # (Line 228) }
            EUDEndIf()
            # (Line 229) else if (f.count[cp] == 4)
        if EUDElseIf()(f.count[cp] == 4):
            # (Line 230) {
            # (Line 231) KillUnitAt(All, "40 + 1n Zergling", "Anywhere", cp);
            # (Line 232) KillUnitAt(All, "40 + 1n Drone", "Anywhere", cp);
            DoActions(KillUnitAt(All, "40 + 1n Zergling", "Anywhere", cp))
            # (Line 233) KillUnitAt(All, "60 + 1n Siege", "Anywhere", cp);
            DoActions(KillUnitAt(All, "40 + 1n Drone", "Anywhere", cp))
            # (Line 234) KillUnitAt(All, "40 + 1n Mutalisk", "Anywhere", cp);
            DoActions(KillUnitAt(All, "60 + 1n Siege", "Anywhere", cp))
            # (Line 235) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp);
            DoActions(KillUnitAt(All, "40 + 1n Mutalisk", "Anywhere", cp))
            # (Line 236) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp);
            DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp))
            # (Line 237) KillUnitAt(All, " Creep. Licht", "Anywhere", cp);
            DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp))
            # (Line 238) KillUnitAt(All, "40 + 1n Ghost", "Anywhere", cp);
            DoActions(KillUnitAt(All, " Creep. Licht", "Anywhere", cp))
            # (Line 240) SetDeaths(cp, SetTo, 0, " `ShieldRecharge");
            DoActions(KillUnitAt(All, "40 + 1n Ghost", "Anywhere", cp))
            # (Line 242) f.SkillEnd(cp);
            DoActions(SetDeaths(cp, SetTo, 0, " `ShieldRecharge"))
            f.SkillEnd(cp)
            # (Line 243) }
            # (Line 244) }
        EUDEndIf()
        # (Line 245) }
    EUDEndIf()
    # (Line 247) function EdgeShapeAt(cp : TrgPlayer, count, Unit : TrgUnit, degree, n, interval, x, y)

# (Line 248) {
@EUDTypedFunc([TrgPlayer, None, TrgUnit, None, None, None, None, None])
def EdgeShapeAt(cp, count, Unit, degree, n, interval, x, y):
    # (Line 249) f.EdgeShapeAt(cp, count, Unit, degree, n, interval, x, y);
    f.EdgeShapeAt(cp, count, Unit, degree, n, interval, x, y)
    # (Line 250) f.EdgeShapeAt(cp, count, Unit, degree, n, interval, -x, -y);
    f.EdgeShapeAt(cp, count, Unit, degree, n, interval, -x, -y)
    # (Line 251) f.EdgeShapeAt(cp, count, Unit, degree, n, interval, -y, x);
    f.EdgeShapeAt(cp, count, Unit, degree, n, interval, -y, x)
    # (Line 252) f.EdgeShapeAt(cp, count, Unit, degree, n, interval, y, -x);
    f.EdgeShapeAt(cp, count, Unit, degree, n, interval, y, -x)
    # (Line 253) }
    # (Line 255) function EdgeShapeAtWithProperty(cp : TrgPlayer, count, Unit : TrgUnit, degree, n, interval, x, y, property)

# (Line 256) {
@EUDTypedFunc([TrgPlayer, None, TrgUnit, None, None, None, None, None, None])
def EdgeShapeAtWithProperty(cp, count, Unit, degree, n, interval, x, y, property):
    # (Line 257) f.EdgeShapeAtWithProperty(cp, count, Unit, degree, n, interval, x, y, property);
    f.EdgeShapeAtWithProperty(cp, count, Unit, degree, n, interval, x, y, property)
    # (Line 258) f.EdgeShapeAtWithProperty(cp, count, Unit, degree, n, interval, -x, -y, property);
    f.EdgeShapeAtWithProperty(cp, count, Unit, degree, n, interval, -x, -y, property)
    # (Line 259) f.EdgeShapeAtWithProperty(cp, count, Unit, degree, n, interval, -y, x, property);
    f.EdgeShapeAtWithProperty(cp, count, Unit, degree, n, interval, -y, x, property)
    # (Line 260) f.EdgeShapeAtWithProperty(cp, count, Unit, degree, n, interval, y, -x, property);
    f.EdgeShapeAtWithProperty(cp, count, Unit, degree, n, interval, y, -x, property)
    # (Line 261) }
    # (Line 263) function NxNSquareShapeAt(cp : TrgPlayer, count, Unit : TrgUnit, n, interval, x, y)

# (Line 264) {
@EUDTypedFunc([TrgPlayer, None, TrgUnit, None, None, None, None])
def NxNSquareShapeAt(cp, count, Unit, n, interval, x, y):
    # (Line 265) f.NxNSquareShapeAt(cp, count, Unit, n, interval, x, y);
    f.NxNSquareShapeAt(cp, count, Unit, n, interval, x, y)
    # (Line 266) f.NxNSquareShapeAt(cp, count, Unit, n, interval, -x, -y);
    f.NxNSquareShapeAt(cp, count, Unit, n, interval, -x, -y)
    # (Line 267) f.NxNSquareShapeAt(cp, count, Unit, n, interval, -y, x);
    f.NxNSquareShapeAt(cp, count, Unit, n, interval, -y, x)
    # (Line 268) f.NxNSquareShapeAt(cp, count, Unit, n, interval, y, -x);
    f.NxNSquareShapeAt(cp, count, Unit, n, interval, y, -x)
    # (Line 269) }
