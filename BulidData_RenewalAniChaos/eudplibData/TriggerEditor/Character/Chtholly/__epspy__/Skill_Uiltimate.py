## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import PluginVariables as msqcvar;
import PluginVariables as msqcvar
# (Line 2) import Function as f;
import Function as f
# (Line 4) function main(cp)
# (Line 5) {
@EUDFunc
def f_main(cp):
    # (Line 6) MoveLocation("[Unique]Chtholly", f.heroID[cp], cp, "Anywhere");
    # (Line 7) f.BanReturn(cp);
    DoActions(MoveLocation("[Unique]Chtholly", f.heroID[cp], cp, "Anywhere"))
    f.BanReturn(cp)
    # (Line 8) f.ShieldFix(cp, 10);
    f.ShieldFix(cp, 10)
    # (Line 10) if (f.count[cp] > 2)
    if EUDIf()(f.count[cp] <= 2, neg=True):
        # (Line 11) {
        # (Line 12) f.Voice_Routine(cp, 14);
        f.Voice_Routine(cp, 14)
        # (Line 13) }
        # (Line 15) if (f.count[cp] < 6)
    EUDEndIf()
    if EUDIf()(f.count[cp] >= 6, neg=True):
        # (Line 16) {
        # (Line 17) Order("80 + 1n Artanis", cp, "Anywhere", Move, f.location[cp]);
        # (Line 18) }
        DoActions(Order("80 + 1n Artanis", cp, "Anywhere", Move, f.location[cp]))
        # (Line 20) if (f.delay[cp] == 0)
    EUDEndIf()
    if EUDIf()(f.delay[cp] == 0):
        # (Line 21) {
        # (Line 22) if (f.count[cp] == 0 && f.loop[cp] == 0)
        if EUDIf()(EUDSCAnd()(f.count[cp] == 0)(f.loop[cp] == 0)()):
            # (Line 23) {
            # (Line 24) f.SkillWait(cp, 1000);
            f.SkillWait(cp, 1000)
            # (Line 25) f.loop[cp] += 1;
            _ARRW(f.loop, cp).__iadd__(1)
            # (Line 26) }
            # (Line 27) else if (f.count[cp] == 0 && f.loop[cp] == 1)
        if EUDElseIf()(EUDSCAnd()(f.count[cp] == 0)(f.loop[cp] == 1)()):
            # (Line 28) {
            # (Line 29) f.Voice_Routine(cp, 12);
            f.Voice_Routine(cp, 12)
            # (Line 30) f.SkillWait(cp, 3500);
            f.SkillWait(cp, 3500)
            # (Line 31) f.loop[cp] += 1;
            _ARRW(f.loop, cp).__iadd__(1)
            # (Line 32) }
            # (Line 33) else if (f.count[cp] == 0 && f.loop[cp] == 2)
        if EUDElseIf()(EUDSCAnd()(f.count[cp] == 0)(f.loop[cp] == 2)()):
            # (Line 34) {
            # (Line 35) f.Voice_Routine(cp, 13);
            f.Voice_Routine(cp, 13)
            # (Line 36) f.SkillWait(cp, 0);
            f.SkillWait(cp, 0)
            # (Line 37) f.count[cp] += 1;
            _ARRW(f.count, cp).__iadd__(1)
            # (Line 38) f.loop[cp] = 0;
            _ARRW(f.loop, cp) << (0)
            # (Line 39) }
            # (Line 40) else if (f.count[cp] == 1 && f.loop[cp] <= 6)
        if EUDElseIf()(EUDSCAnd()(f.count[cp] == 1)(f.loop[cp] <= 6)()):
            # (Line 41) {
            # (Line 42) f.NxNSquareShape(cp, 1, "40 + 1n Gantrithor", (f.loop[cp] + 1), 64);
            f.NxNSquareShape(cp, 1, "40 + 1n Gantrithor", (f.loop[cp] + 1), 64)
            # (Line 43) KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", cp);
            # (Line 44) f.SkillWait(cp, 0);
            DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", cp))
            f.SkillWait(cp, 0)
            # (Line 45) f.loop[cp] += 1;
            _ARRW(f.loop, cp).__iadd__(1)
            # (Line 46) }
            # (Line 47) else if (f.count[cp] == 1 && f.loop[cp] == 7)
        if EUDElseIf()(EUDSCAnd()(f.count[cp] == 1)(f.loop[cp] == 7)()):
            # (Line 48) {
            # (Line 49) f.SkillWait(cp, 0);
            f.SkillWait(cp, 0)
            # (Line 50) f.count[cp] += 1;
            _ARRW(f.count, cp).__iadd__(1)
            # (Line 51) f.loop[cp] = 0;
            _ARRW(f.loop, cp) << (0)
            # (Line 52) }
            # (Line 53) else if (f.count[cp] == 2)
        if EUDElseIf()(f.count[cp] == 2):
            # (Line 54) {
            # (Line 55) f.SquareShape(cp, 6, "50 + 1n Tank", 192, 0);
            f.SquareShape(cp, 6, "50 + 1n Tank", 192, 0)
            # (Line 56) f.SquareShape(cp, 6, "50 + 1n Tank", 96, 192);
            f.SquareShape(cp, 6, "50 + 1n Tank", 96, 192)
            # (Line 57) f.SquareShape(cp, 6, "50 + 1n Tank", 192, 96);
            f.SquareShape(cp, 6, "50 + 1n Tank", 192, 96)
            # (Line 58) f.SquareShape(cp, 6, "50 + 1n Tank", 192, 192);
            f.SquareShape(cp, 6, "50 + 1n Tank", 192, 192)
            # (Line 59) f.SquareShape(cp, 4, "40 + 1n Goliath", 192, 0);
            f.SquareShape(cp, 4, "40 + 1n Goliath", 192, 0)
            # (Line 60) f.SquareShape(cp, 4, "40 + 1n Goliath", 192, 192);
            f.SquareShape(cp, 4, "40 + 1n Goliath", 192, 192)
            # (Line 61) f.SquareShape(cp, 4, "40 + 1n Marine", 96, 192);
            f.SquareShape(cp, 4, "40 + 1n Marine", 96, 192)
            # (Line 62) f.SquareShape(cp, 4, "40 + 1n Marine", 192, 96);
            f.SquareShape(cp, 4, "40 + 1n Marine", 192, 96)
            # (Line 63) f.SquareShape(cp, 4, "40 + 1n Marine", 192, 192);
            f.SquareShape(cp, 4, "40 + 1n Marine", 192, 192)
            # (Line 64) f.DotShape(cp, 12, "40 + 1n Marine", 0, 0);
            f.DotShape(cp, 12, "40 + 1n Marine", 0, 0)
            # (Line 65) f.MoveLoc(f.heroID[cp], cp, 0, 0);
            f.MoveLoc(f.heroID[cp], cp, 0, 0)
            # (Line 66) MoveUnit(All, "(any unit)", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
            # (Line 67) Order("50 + 1n Tank", cp, "Anywhere", Attack, f.location[cp]);
            DoActions(MoveUnit(All, "(any unit)", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
            # (Line 68) f.SkillWait(cp, 0);
            DoActions(Order("50 + 1n Tank", cp, "Anywhere", Attack, f.location[cp]))
            f.SkillWait(cp, 0)
            # (Line 69) f.count[cp] += 1;
            _ARRW(f.count, cp).__iadd__(1)
            # (Line 70) }
            # (Line 71) else if (f.count[cp] == 3 && f.loop[cp] <= 27)
        if EUDElseIf()(EUDSCAnd()(f.count[cp] == 3)(f.loop[cp] <= 27)()):
            # (Line 72) {
            # (Line 73) f.Table_Cos(cp, 15 * f.loop[cp], 256);
            f.Table_Cos(cp, 15 * f.loop[cp], 256)
            # (Line 74) f.Table_Sin(cp, 15 * f.loop[cp], 256);
            f.Table_Sin(cp, 15 * f.loop[cp], 256)
            # (Line 75) f.SquareShape(cp, 1, "80 + 1n Artanis", f.CosAngle[cp], f.SinAngle[cp]);
            f.SquareShape(cp, 1, "80 + 1n Artanis", f.CosAngle[cp], f.SinAngle[cp])
            # (Line 76) f.SquareShape(cp, 1, "Protoss Dark Archon", f.CosAngle[cp], f.SinAngle[cp]);
            f.SquareShape(cp, 1, "Protoss Dark Archon", f.CosAngle[cp], f.SinAngle[cp])
            # (Line 77) f.MoveLoc(f.heroID[cp], cp, 0, 0);
            f.MoveLoc(f.heroID[cp], cp, 0, 0)
            # (Line 78) Order("80 + 1n Artanis", cp, "Anywhere", Move, f.location[cp]);
            # (Line 79) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp);
            DoActions(Order("80 + 1n Artanis", cp, "Anywhere", Move, f.location[cp]))
            # (Line 80) f.SkillWait(cp, 0);
            DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp))
            f.SkillWait(cp, 0)
            # (Line 81) f.loop[cp] += 1;
            _ARRW(f.loop, cp).__iadd__(1)
            # (Line 82) }
            # (Line 83) else if (f.count[cp] == 3 && f.loop[cp] == 28)
        if EUDElseIf()(EUDSCAnd()(f.count[cp] == 3)(f.loop[cp] == 28)()):
            # (Line 84) {
            # (Line 85) f.SkillWait(cp, 0);
            f.SkillWait(cp, 0)
            # (Line 86) f.count[cp] += 1;
            _ARRW(f.count, cp).__iadd__(1)
            # (Line 87) f.loop[cp] = 0;
            _ARRW(f.loop, cp) << (0)
            # (Line 88) }
            # (Line 89) else if (f.count[cp] == 4)
        if EUDElseIf()(f.count[cp] == 4):
            # (Line 90) {
            # (Line 91) f.SkillWait(cp, 1500);
            f.SkillWait(cp, 1500)
            # (Line 92) f.count[cp] += 1;
            _ARRW(f.count, cp).__iadd__(1)
            # (Line 93) }
            # (Line 94) else if (f.count[cp] == 5)
        if EUDElseIf()(f.count[cp] == 5):
            # (Line 95) {
            # (Line 96) if (cp < 3)	{ GiveUnits(All, "80 + 1n Artanis", cp, "Anywhere", 6); }
            if EUDIf()(cp >= 3, neg=True):
                DoActions(GiveUnits(All, "80 + 1n Artanis", cp, "Anywhere", 6))
                # (Line 97) else 		{ GiveUnits(All, "80 + 1n Artanis", cp, "Anywhere", 7); }
            if EUDElse()():
                DoActions(GiveUnits(All, "80 + 1n Artanis", cp, "Anywhere", 7))
                # (Line 98) SetSwitch("JunkYardDog", Set);
            EUDEndIf()
            # (Line 99) f.SkillWait(cp, 250);
            DoActions(SetSwitch("JunkYardDog", Set))
            f.SkillWait(cp, 250)
            # (Line 100) f.count[cp] += 1;
            _ARRW(f.count, cp).__iadd__(1)
            # (Line 101) }
            # (Line 102) else if (f.count[cp] == 6)
        if EUDElseIf()(f.count[cp] == 6):
            # (Line 103) {
            # (Line 104) SetSwitch("JunkYardDog", Clear);
            # (Line 105) f.SkillWait(cp, 1500);
            DoActions(SetSwitch("JunkYardDog", Clear))
            f.SkillWait(cp, 1500)
            # (Line 106) f.count[cp] += 1;
            _ARRW(f.count, cp).__iadd__(1)
            # (Line 107) }
            # (Line 108) else if (f.count[cp] == 7)
        if EUDElseIf()(f.count[cp] == 7):
            # (Line 109) {
            # (Line 110) SetSwitch("JunkYardDog", Set);
            # (Line 111) f.SkillWait(cp, 250);
            DoActions(SetSwitch("JunkYardDog", Set))
            f.SkillWait(cp, 250)
            # (Line 112) f.count[cp] += 1;
            _ARRW(f.count, cp).__iadd__(1)
            # (Line 113) }
            # (Line 114) else if (f.count[cp] == 8)
        if EUDElseIf()(f.count[cp] == 8):
            # (Line 115) {
            # (Line 116) SetSwitch("JunkYardDog", Clear);
            # (Line 117) f.SkillWait(cp, 1000);
            DoActions(SetSwitch("JunkYardDog", Clear))
            f.SkillWait(cp, 1000)
            # (Line 118) f.count[cp] += 1;
            _ARRW(f.count, cp).__iadd__(1)
            # (Line 119) }
            # (Line 120) else if (f.count[cp] == 9)
        if EUDElseIf()(f.count[cp] == 9):
            # (Line 121) {
            # (Line 122) if (cp < 3)	{ GiveUnits(All, "80 + 1n Artanis", 6, "Anywhere", cp); }
            if EUDIf()(cp >= 3, neg=True):
                DoActions(GiveUnits(All, "80 + 1n Artanis", 6, "Anywhere", cp))
                # (Line 123) else 		{ GiveUnits(All, "80 + 1n Artanis", 7, "Anywhere", cp); }
            if EUDElse()():
                DoActions(GiveUnits(All, "80 + 1n Artanis", 7, "Anywhere", cp))
                # (Line 125) if (f.loopB[cp] == 1)
            EUDEndIf()
            if EUDIf()(f.loopB[cp] == 1):
                # (Line 126) {
                # (Line 127) KillUnitAt(All, "80 + 1n Artanis", "Anywhere", cp);
                # (Line 128) KillUnitAt(All, "80 + 1n Artanis", "Anywhere", 6);
                DoActions(KillUnitAt(All, "80 + 1n Artanis", "Anywhere", cp))
                # (Line 129) KillUnitAt(All, "80 + 1n Artanis", "Anywhere", 7);
                DoActions(KillUnitAt(All, "80 + 1n Artanis", "Anywhere", 6))
                # (Line 130) }
                DoActions(KillUnitAt(All, "80 + 1n Artanis", "Anywhere", 7))
                # (Line 132) f.MoveLoc(f.heroID[cp], cp, 0, 0);
            EUDEndIf()
            f.MoveLoc(f.heroID[cp], cp, 0, 0)
            # (Line 133) Order("80 + 1n Artanis", cp, "Anywhere", Attack, f.location[cp]);
            # (Line 134) f.SkillWait(cp, 3500);
            DoActions(Order("80 + 1n Artanis", cp, "Anywhere", Attack, f.location[cp]))
            f.SkillWait(cp, 3500)
            # (Line 135) f.count[cp] += 1;
            _ARRW(f.count, cp).__iadd__(1)
            # (Line 136) }
            # (Line 137) else if (f.count[cp] == 10)
        if EUDElseIf()(f.count[cp] == 10):
            # (Line 138) {
            # (Line 139) KillUnitAt(All, "40 + 1n Marine", "Anywhere", cp);
            # (Line 140) KillUnitAt(All, "40 + 1n Goliath", "Anywhere", cp);
            DoActions(KillUnitAt(All, "40 + 1n Marine", "Anywhere", cp))
            # (Line 141) KillUnitAt(All, "50 + 1n Tank", "Anywhere", cp);
            DoActions(KillUnitAt(All, "40 + 1n Goliath", "Anywhere", cp))
            # (Line 142) f.SkillWait(cp, 800);
            DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", cp))
            f.SkillWait(cp, 800)
            # (Line 143) f.count[cp] += 1;
            _ARRW(f.count, cp).__iadd__(1)
            # (Line 144) }
            # (Line 145) else if (f.count[cp] == 11)
        if EUDElseIf()(f.count[cp] == 11):
            # (Line 146) {
            # (Line 147) KillUnitAt(All, "80 + 1n Artanis", "Anywhere", cp);
            # (Line 148) SetSwitch("UiltimateSwitch", Clear);
            DoActions(KillUnitAt(All, "80 + 1n Artanis", "Anywhere", cp))
            # (Line 149) f.loopB[cp] = 0;
            DoActions(SetSwitch("UiltimateSwitch", Clear))
            _ARRW(f.loopB, cp) << (0)
            # (Line 150) f.SkillEnd(cp);
            f.SkillEnd(cp)
            # (Line 151) }
            # (Line 152) }
        EUDEndIf()
        # (Line 153) }
    EUDEndIf()
