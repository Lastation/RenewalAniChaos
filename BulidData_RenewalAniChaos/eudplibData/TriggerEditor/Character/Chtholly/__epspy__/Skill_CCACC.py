## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import Function as f;
import Function as f
# (Line 3) function main(cp)
# (Line 4) {
@EUDFunc
def f_main(cp):
    # (Line 5) f.BanReturn(cp);
    f.BanReturn(cp)
    # (Line 6) f.Slow(cp);
    f.Slow(cp)
    # (Line 8) MoveUnit(All, "40 + 1n Marine", cp, "Anywhere", "[Skill]HoldPosition");
    # (Line 9) MoveUnit(All, "40 + 1n Mojo", cp, "Anywhere", "[Skill]HoldPosition");
    DoActions(MoveUnit(All, "40 + 1n Marine", cp, "Anywhere", "[Skill]HoldPosition"))
    # (Line 10) MoveUnit(All, "50 + 1n Tank", cp, "Anywhere", "[Skill]HoldPosition");
    DoActions(MoveUnit(All, "40 + 1n Mojo", cp, "Anywhere", "[Skill]HoldPosition"))
    # (Line 11) MoveUnit(All, "60 + 1n Danimoth", cp, "Anywhere", "[Skill]HoldPosition");
    DoActions(MoveUnit(All, "50 + 1n Tank", cp, "Anywhere", "[Skill]HoldPosition"))
    # (Line 13) if (f.delay[cp] == 0)
    DoActions(MoveUnit(All, "60 + 1n Danimoth", cp, "Anywhere", "[Skill]HoldPosition"))
    if EUDIf()(f.delay[cp] == 0):
        # (Line 14) {
        # (Line 15) if (f.count[cp] == 0 && f.loop[cp] <= 10)
        if EUDIf()(EUDSCAnd()(f.count[cp] == 0)(f.loop[cp] <= 10)()):
            # (Line 16) {
            # (Line 17) f.SquareShape(cp, 1, "80 + 1n Tank", 16 * (f.loop[cp] + 1), 16 * (f.loop[cp] + 1));
            f.SquareShape(cp, 1, "80 + 1n Tank", 16 * (f.loop[cp] + 1), 16 * (f.loop[cp] + 1))
            # (Line 18) f.SquareShape(cp, 1, "80 + 1n Tank", 20 * (f.loop[cp] + 1), 0);
            f.SquareShape(cp, 1, "80 + 1n Tank", 20 * (f.loop[cp] + 1), 0)
            # (Line 19) f.SquareShape(cp, 1, "Zerg Devourer", 16 * (f.loop[cp] + 1), 16 * (f.loop[cp] + 1));
            f.SquareShape(cp, 1, "Zerg Devourer", 16 * (f.loop[cp] + 1), 16 * (f.loop[cp] + 1))
            # (Line 20) f.SquareShape(cp, 1, "Zerg Devourer", 20 * (f.loop[cp] + 1), 0);
            f.SquareShape(cp, 1, "Zerg Devourer", 20 * (f.loop[cp] + 1), 0)
            # (Line 21) KillUnitAt(All, "80 + 1n Tank", "Anywhere", cp);
            # (Line 22) KillUnitAt(All, "Zerg Devourer", "Anywhere", cp);
            DoActions(KillUnitAt(All, "80 + 1n Tank", "Anywhere", cp))
            # (Line 23) f.SkillWait(cp, 0);
            DoActions(KillUnitAt(All, "Zerg Devourer", "Anywhere", cp))
            f.SkillWait(cp, 0)
            # (Line 24) f.loop[cp] += 1;
            _ARRW(f.loop, cp).__iadd__(1)
            # (Line 25) }
            # (Line 26) else if (f.count[cp] == 0 && f.loop[cp] == 11)
        if EUDElseIf()(EUDSCAnd()(f.count[cp] == 0)(f.loop[cp] == 11)()):
            # (Line 27) {
            # (Line 28) f.SkillWait(cp, 0);
            f.SkillWait(cp, 0)
            # (Line 29) f.count[cp] += 1;
            _ARRW(f.count, cp).__iadd__(1)
            # (Line 30) f.loop[cp] = 0;
            _ARRW(f.loop, cp) << (0)
            # (Line 31) }
            # (Line 32) else if (f.count[cp] == 1 && f.loop[cp] <= 11)
        if EUDElseIf()(EUDSCAnd()(f.count[cp] == 1)(f.loop[cp] <= 11)()):
            # (Line 33) {
            # (Line 34) f.Table_Cos(cp, 15 * f.loop[cp], 256);
            f.Table_Cos(cp, 15 * f.loop[cp], 256)
            # (Line 35) f.Table_Sin(cp, 15 * f.loop[cp], 256);
            f.Table_Sin(cp, 15 * f.loop[cp], 256)
            # (Line 36) f.DotShape(cp, 1, "60 + 1n Siege", f.CosAngle[cp], f.SinAngle[cp]);
            f.DotShape(cp, 1, "60 + 1n Siege", f.CosAngle[cp], f.SinAngle[cp])
            # (Line 37) f.DotShape(cp, 1, "60 + 1n Siege", -f.CosAngle[cp], -f.SinAngle[cp]);
            f.DotShape(cp, 1, "60 + 1n Siege", -f.CosAngle[cp], -f.SinAngle[cp])
            # (Line 38) f.DotShape(cp, 8, "Protoss Dark Archon", f.CosAngle[cp], f.SinAngle[cp]);
            f.DotShape(cp, 8, "Protoss Dark Archon", f.CosAngle[cp], f.SinAngle[cp])
            # (Line 39) f.DotShape(cp, 8, "Protoss Dark Archon", -f.CosAngle[cp], -f.SinAngle[cp]);
            f.DotShape(cp, 8, "Protoss Dark Archon", -f.CosAngle[cp], -f.SinAngle[cp])
            # (Line 40) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp);
            # (Line 41) f.SkillWait(cp, 100);
            DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp))
            f.SkillWait(cp, 100)
            # (Line 42) f.loop[cp] += 1;
            _ARRW(f.loop, cp).__iadd__(1)
            # (Line 43) }
            # (Line 44) else if (f.count[cp] == 1 && f.loop[cp] == 12)
        if EUDElseIf()(EUDSCAnd()(f.count[cp] == 1)(f.loop[cp] == 12)()):
            # (Line 45) {
            # (Line 46) f.SkillWait(cp, 0);
            f.SkillWait(cp, 0)
            # (Line 47) f.count[cp] += 1;
            _ARRW(f.count, cp).__iadd__(1)
            # (Line 48) f.loop[cp] = 0;
            _ARRW(f.loop, cp) << (0)
            # (Line 49) }
            # (Line 50) else if (f.count[cp] == 2 && f.loop[cp] <= 10)
        if EUDElseIf()(EUDSCAnd()(f.count[cp] == 2)(f.loop[cp] <= 10)()):
            # (Line 51) {
            # (Line 52) f.Table_Cos(cp, 30 * f.loop[cp], 224);
            f.Table_Cos(cp, 30 * f.loop[cp], 224)
            # (Line 53) f.Table_Sin(cp, 30 * f.loop[cp], 224);
            f.Table_Sin(cp, 30 * f.loop[cp], 224)
            # (Line 54) f.SquareShape(cp, 1, "50 + 1n Battlecruiser", f.CosAngle[cp], f.SinAngle[cp]);
            f.SquareShape(cp, 1, "50 + 1n Battlecruiser", f.CosAngle[cp], f.SinAngle[cp])
            # (Line 55) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp);
            # (Line 56) f.SkillWait(cp, 0);
            DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp))
            f.SkillWait(cp, 0)
            # (Line 57) f.loop[cp] += 1;
            _ARRW(f.loop, cp).__iadd__(1)
            # (Line 58) }
            # (Line 59) else if (f.count[cp] == 2 && f.loop[cp] == 11)
        if EUDElseIf()(EUDSCAnd()(f.count[cp] == 2)(f.loop[cp] == 11)()):
            # (Line 60) {
            # (Line 61) f.SkillWait(cp, 0);
            f.SkillWait(cp, 0)
            # (Line 62) f.count[cp] += 1;
            _ARRW(f.count, cp).__iadd__(1)
            # (Line 63) f.loop[cp] = 0;
            _ARRW(f.loop, cp) << (0)
            # (Line 64) }
            # (Line 65) else if (f.count[cp] == 3 && f.loop[cp] <= 10)
        if EUDElseIf()(EUDSCAnd()(f.count[cp] == 3)(f.loop[cp] <= 10)()):
            # (Line 66) {
            # (Line 67) f.Table_Cos(cp, 30 * f.loop[cp], 192);
            f.Table_Cos(cp, 30 * f.loop[cp], 192)
            # (Line 68) f.Table_Sin(cp, 30 * f.loop[cp], 192);
            f.Table_Sin(cp, 30 * f.loop[cp], 192)
            # (Line 69) f.SquareShape(cp, 1, "50 + 1n Battlecruiser", f.CosAngle[cp], f.SinAngle[cp]);
            f.SquareShape(cp, 1, "50 + 1n Battlecruiser", f.CosAngle[cp], f.SinAngle[cp])
            # (Line 70) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp);
            # (Line 71) f.SkillWait(cp, 0);
            DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp))
            f.SkillWait(cp, 0)
            # (Line 72) f.loop[cp] += 1;
            _ARRW(f.loop, cp).__iadd__(1)
            # (Line 73) }
            # (Line 74) else if (f.count[cp] == 3 && f.loop[cp] == 11)
        if EUDElseIf()(EUDSCAnd()(f.count[cp] == 3)(f.loop[cp] == 11)()):
            # (Line 75) {
            # (Line 76) f.SkillWait(cp, 0);
            f.SkillWait(cp, 0)
            # (Line 77) f.count[cp] += 1;
            _ARRW(f.count, cp).__iadd__(1)
            # (Line 78) f.loop[cp] = 0;
            _ARRW(f.loop, cp) << (0)
            # (Line 79) }
            # (Line 80) else if (f.count[cp] == 4 && f.loop[cp] <= 10)
        if EUDElseIf()(EUDSCAnd()(f.count[cp] == 4)(f.loop[cp] <= 10)()):
            # (Line 81) {
            # (Line 82) if (f.loop[cp] == 4)
            if EUDIf()(f.loop[cp] == 4):
                # (Line 83) {
                # (Line 84) f.Table_Cos(cp, 0, 192);
                f.Table_Cos(cp, 0, 192)
                # (Line 85) f.Table_Sin(cp, 0, 192);
                f.Table_Sin(cp, 0, 192)
                # (Line 86) f.SquareShape(cp, 1, "40 + 1n Mojo", f.CosAngle[cp], f.SinAngle[cp]);
                f.SquareShape(cp, 1, "40 + 1n Mojo", f.CosAngle[cp], f.SinAngle[cp])
                # (Line 87) f.MoveLoc(f.heroID[cp], cp, 0, 0);
                f.MoveLoc(f.heroID[cp], cp, 0, 0)
                # (Line 88) }
                # (Line 89) else if (f.loop[cp] == 6)
            if EUDElseIf()(f.loop[cp] == 6):
                # (Line 90) {
                # (Line 91) f.Table_Cos(cp, 22, 192);
                f.Table_Cos(cp, 22, 192)
                # (Line 92) f.Table_Sin(cp, 22, 192);
                f.Table_Sin(cp, 22, 192)
                # (Line 93) f.SquareShape(cp, 1, "40 + 1n Mojo", f.CosAngle[cp], f.SinAngle[cp]);
                f.SquareShape(cp, 1, "40 + 1n Mojo", f.CosAngle[cp], f.SinAngle[cp])
                # (Line 94) f.MoveLoc(f.heroID[cp], cp, 0, 0);
                f.MoveLoc(f.heroID[cp], cp, 0, 0)
                # (Line 95) }
                # (Line 96) else if (f.loop[cp] == 8)
            if EUDElseIf()(f.loop[cp] == 8):
                # (Line 97) {
                # (Line 98) f.Table_Cos(cp, 45, 192);
                f.Table_Cos(cp, 45, 192)
                # (Line 99) f.Table_Sin(cp, 45, 192);
                f.Table_Sin(cp, 45, 192)
                # (Line 100) f.SquareShape(cp, 1, "40 + 1n Mojo", f.CosAngle[cp], f.SinAngle[cp]);
                f.SquareShape(cp, 1, "40 + 1n Mojo", f.CosAngle[cp], f.SinAngle[cp])
                # (Line 101) f.MoveLoc(f.heroID[cp], cp, 0, 0);
                f.MoveLoc(f.heroID[cp], cp, 0, 0)
                # (Line 102) }
                # (Line 103) else if (f.loop[cp] == 10)
            if EUDElseIf()(f.loop[cp] == 10):
                # (Line 104) {
                # (Line 105) f.Table_Cos(cp, 73, 192);
                f.Table_Cos(cp, 73, 192)
                # (Line 106) f.Table_Sin(cp, 73, 192);
                f.Table_Sin(cp, 73, 192)
                # (Line 107) f.SquareShape(cp, 1, "40 + 1n Mojo", f.CosAngle[cp], f.SinAngle[cp]);
                f.SquareShape(cp, 1, "40 + 1n Mojo", f.CosAngle[cp], f.SinAngle[cp])
                # (Line 108) f.MoveLoc(f.heroID[cp], cp, 0, 0);
                f.MoveLoc(f.heroID[cp], cp, 0, 0)
                # (Line 109) }
                # (Line 111) f.Table_Cos(cp, 30 * f.loop[cp], 160);
            EUDEndIf()
            f.Table_Cos(cp, 30 * f.loop[cp], 160)
            # (Line 112) f.Table_Sin(cp, 30 * f.loop[cp], 160);
            f.Table_Sin(cp, 30 * f.loop[cp], 160)
            # (Line 113) f.SquareShape(cp, 1, "40 + 1n Gantrithor", f.CosAngle[cp], f.SinAngle[cp]);
            f.SquareShape(cp, 1, "40 + 1n Gantrithor", f.CosAngle[cp], f.SinAngle[cp])
            # (Line 114) KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", cp);
            # (Line 115) f.SkillWait(cp, 0);
            DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", cp))
            f.SkillWait(cp, 0)
            # (Line 116) f.loop[cp] += 1;
            _ARRW(f.loop, cp).__iadd__(1)
            # (Line 117) }
            # (Line 118) else if (f.count[cp] == 4 && f.loop[cp] == 11)
        if EUDElseIf()(EUDSCAnd()(f.count[cp] == 4)(f.loop[cp] == 11)()):
            # (Line 119) {
            # (Line 120) f.Voice_Routine(cp, 4);
            f.Voice_Routine(cp, 4)
            # (Line 121) f.SkillWait(cp, 0);
            f.SkillWait(cp, 0)
            # (Line 122) f.count[cp] += 1;
            _ARRW(f.count, cp).__iadd__(1)
            # (Line 123) f.loop[cp] = 0;
            _ARRW(f.loop, cp) << (0)
            # (Line 124) }
            # (Line 125) else if (f.count[cp] == 5 && f.loop[cp] <= 10)
        if EUDElseIf()(EUDSCAnd()(f.count[cp] == 5)(f.loop[cp] <= 10)()):
            # (Line 126) {
            # (Line 127) if (f.loop[cp] == 4)
            if EUDIf()(f.loop[cp] == 4):
                # (Line 128) {
                # (Line 129) f.Table_Cos(cp, 12, 160);
                f.Table_Cos(cp, 12, 160)
                # (Line 130) f.Table_Sin(cp, 12, 160);
                f.Table_Sin(cp, 12, 160)
                # (Line 131) f.SquareShape(cp, 1, "40 + 1n Marine", f.CosAngle[cp], f.SinAngle[cp]);
                f.SquareShape(cp, 1, "40 + 1n Marine", f.CosAngle[cp], f.SinAngle[cp])
                # (Line 132) f.MoveLoc(f.heroID[cp], cp, 0, 0);
                f.MoveLoc(f.heroID[cp], cp, 0, 0)
                # (Line 133) }
                # (Line 134) else if (f.loop[cp] == 8)
            if EUDElseIf()(f.loop[cp] == 8):
                # (Line 135) {
                # (Line 136) f.Table_Cos(cp, 56, 160);
                f.Table_Cos(cp, 56, 160)
                # (Line 137) f.Table_Sin(cp, 56, 160);
                f.Table_Sin(cp, 56, 160)
                # (Line 138) f.SquareShape(cp, 1, "40 + 1n Marine", f.CosAngle[cp], f.SinAngle[cp]);
                f.SquareShape(cp, 1, "40 + 1n Marine", f.CosAngle[cp], f.SinAngle[cp])
                # (Line 139) f.MoveLoc(f.heroID[cp], cp, 0, 0);
                f.MoveLoc(f.heroID[cp], cp, 0, 0)
                # (Line 140) }
                # (Line 142) f.Table_Cos(cp, 30 * f.loop[cp], 128);
            EUDEndIf()
            f.Table_Cos(cp, 30 * f.loop[cp], 128)
            # (Line 143) f.Table_Sin(cp, 30 * f.loop[cp], 128);
            f.Table_Sin(cp, 30 * f.loop[cp], 128)
            # (Line 144) f.SquareShape(cp, 1, "40 + 1n Gantrithor", f.CosAngle[cp], f.SinAngle[cp]);
            f.SquareShape(cp, 1, "40 + 1n Gantrithor", f.CosAngle[cp], f.SinAngle[cp])
            # (Line 145) KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", cp);
            # (Line 146) f.SkillWait(cp, 0);
            DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", cp))
            f.SkillWait(cp, 0)
            # (Line 147) f.loop[cp] += 1;
            _ARRW(f.loop, cp).__iadd__(1)
            # (Line 148) }
            # (Line 149) else if (f.count[cp] == 5 && f.loop[cp] == 11)
        if EUDElseIf()(EUDSCAnd()(f.count[cp] == 5)(f.loop[cp] == 11)()):
            # (Line 150) {
            # (Line 151) f.SkillWait(cp, 0);
            f.SkillWait(cp, 0)
            # (Line 152) f.count[cp] += 1;
            _ARRW(f.count, cp).__iadd__(1)
            # (Line 153) f.loop[cp] = 0;
            _ARRW(f.loop, cp) << (0)
            # (Line 154) }
            # (Line 155) else if (f.count[cp] == 6 && f.loop[cp] <= 10)
        if EUDElseIf()(EUDSCAnd()(f.count[cp] == 6)(f.loop[cp] <= 10)()):
            # (Line 156) {
            # (Line 157) f.Table_Cos(cp, 30 * f.loop[cp], 96);
            f.Table_Cos(cp, 30 * f.loop[cp], 96)
            # (Line 158) f.Table_Sin(cp, 30 * f.loop[cp], 96);
            f.Table_Sin(cp, 30 * f.loop[cp], 96)
            # (Line 159) f.SquareShape(cp, 1, "40 + 1n Gantrithor", f.CosAngle[cp], f.SinAngle[cp]);
            f.SquareShape(cp, 1, "40 + 1n Gantrithor", f.CosAngle[cp], f.SinAngle[cp])
            # (Line 160) KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", cp);
            # (Line 161) f.SkillWait(cp, 0);
            DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", cp))
            f.SkillWait(cp, 0)
            # (Line 162) f.loop[cp] += 1;
            _ARRW(f.loop, cp).__iadd__(1)
            # (Line 163) }
            # (Line 164) else if (f.count[cp] == 6 && f.loop[cp] == 11)
        if EUDElseIf()(EUDSCAnd()(f.count[cp] == 6)(f.loop[cp] == 11)()):
            # (Line 165) {
            # (Line 166) f.SkillWait(cp, 0);
            f.SkillWait(cp, 0)
            # (Line 167) f.count[cp] += 1;
            _ARRW(f.count, cp).__iadd__(1)
            # (Line 168) f.loop[cp] = 0;
            _ARRW(f.loop, cp) << (0)
            # (Line 169) }
            # (Line 170) else if (f.count[cp] == 7 && f.loop[cp] <= 10)
        if EUDElseIf()(EUDSCAnd()(f.count[cp] == 7)(f.loop[cp] <= 10)()):
            # (Line 171) {
            # (Line 172) f.Table_Cos(cp, 30 * f.loop[cp], 64);
            f.Table_Cos(cp, 30 * f.loop[cp], 64)
            # (Line 173) f.Table_Sin(cp, 30 * f.loop[cp], 64);
            f.Table_Sin(cp, 30 * f.loop[cp], 64)
            # (Line 174) f.SquareShape(cp, 1, "50 + 1n Battlecruiser", f.CosAngle[cp], f.SinAngle[cp]);
            f.SquareShape(cp, 1, "50 + 1n Battlecruiser", f.CosAngle[cp], f.SinAngle[cp])
            # (Line 175) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp);
            # (Line 176) f.SkillWait(cp, 0);
            DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp))
            f.SkillWait(cp, 0)
            # (Line 177) f.loop[cp] += 1;
            _ARRW(f.loop, cp).__iadd__(1)
            # (Line 178) }
            # (Line 179) else if (f.count[cp] == 7 && f.loop[cp] == 11)
        if EUDElseIf()(EUDSCAnd()(f.count[cp] == 7)(f.loop[cp] == 11)()):
            # (Line 180) {
            # (Line 181) f.SkillWait(cp, 0);
            f.SkillWait(cp, 0)
            # (Line 182) f.count[cp] += 1;
            _ARRW(f.count, cp).__iadd__(1)
            # (Line 183) f.loop[cp] = 0;
            _ARRW(f.loop, cp) << (0)
            # (Line 184) }
            # (Line 185) else if (f.count[cp] == 8 && f.loop[cp] <= 10)
        if EUDElseIf()(EUDSCAnd()(f.count[cp] == 8)(f.loop[cp] <= 10)()):
            # (Line 186) {
            # (Line 187) f.Table_Cos(cp, 30 * f.loop[cp], 96);
            f.Table_Cos(cp, 30 * f.loop[cp], 96)
            # (Line 188) f.Table_Sin(cp, 30 * f.loop[cp], 96);
            f.Table_Sin(cp, 30 * f.loop[cp], 96)
            # (Line 189) f.SquareShape(cp, 1, "60 + 1n Dragoon", f.CosAngle[cp], f.SinAngle[cp]);
            f.SquareShape(cp, 1, "60 + 1n Dragoon", f.CosAngle[cp], f.SinAngle[cp])
            # (Line 190) f.Table_Cos(cp, 30 * f.loop[cp], 160);
            f.Table_Cos(cp, 30 * f.loop[cp], 160)
            # (Line 191) f.Table_Sin(cp, 30 * f.loop[cp], 160);
            f.Table_Sin(cp, 30 * f.loop[cp], 160)
            # (Line 192) f.SquareShape(cp, 1, "40 + 1n Gantrithor", f.CosAngle[cp], f.SinAngle[cp]);
            f.SquareShape(cp, 1, "40 + 1n Gantrithor", f.CosAngle[cp], f.SinAngle[cp])
            # (Line 193) f.Table_Cos(cp, 30 * f.loop[cp], 224);
            f.Table_Cos(cp, 30 * f.loop[cp], 224)
            # (Line 194) f.Table_Sin(cp, 30 * f.loop[cp], 224);
            f.Table_Sin(cp, 30 * f.loop[cp], 224)
            # (Line 195) f.SquareShape(cp, 1, "50 + 1n Battlecruiser", f.CosAngle[cp], f.SinAngle[cp]);
            f.SquareShape(cp, 1, "50 + 1n Battlecruiser", f.CosAngle[cp], f.SinAngle[cp])
            # (Line 196) KillUnitAt(All, "60 + 1n Dragoon", "Anywhere", cp);
            # (Line 197) KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", cp);
            DoActions(KillUnitAt(All, "60 + 1n Dragoon", "Anywhere", cp))
            # (Line 198) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp);
            DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", cp))
            # (Line 199) f.SkillWait(cp, 0);
            DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp))
            f.SkillWait(cp, 0)
            # (Line 200) f.loop[cp] += 1;
            _ARRW(f.loop, cp).__iadd__(1)
            # (Line 201) }
            # (Line 202) else if (f.count[cp] == 8 && f.loop[cp] == 11)
        if EUDElseIf()(EUDSCAnd()(f.count[cp] == 8)(f.loop[cp] == 11)()):
            # (Line 203) {
            # (Line 204) f.SkillWait(cp, 1000);
            f.SkillWait(cp, 1000)
            # (Line 205) f.count[cp] += 1;
            _ARRW(f.count, cp).__iadd__(1)
            # (Line 206) f.loop[cp] = 0;
            _ARRW(f.loop, cp) << (0)
            # (Line 207) }
            # (Line 208) else if (f.count[cp] == 9
        _t26 = EUDElseIf()
        # (Line 209) && Bring(cp, AtLeast, 3, "Protoss Arbiter", "[Skill]UseSkill"))
        if _t26(EUDSCAnd()(f.count[cp] == 9)(Bring(cp, AtLeast, 3, "Protoss Arbiter", "[Skill]UseSkill"))()):
            # (Line 210) {
            # (Line 211) KillUnitAt(All, "40 + 1n Marine", "Anywhere", cp);
            # (Line 212) KillUnitAt(All, "40 + 1n Mojo", "Anywhere", cp);
            DoActions(KillUnitAt(All, "40 + 1n Marine", "Anywhere", cp))
            # (Line 213) KillUnitAt(All, "60 + 1n Siege", "Anywhere", cp);
            DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", cp))
            # (Line 215) f.Voice_Routine(cp, 5);
            DoActions(KillUnitAt(All, "60 + 1n Siege", "Anywhere", cp))
            f.Voice_Routine(cp, 5)
            # (Line 216) KillUnitAt(3, "Protoss Arbiter", "[Skill]UseSkill", cp);
            # (Line 218) f.step[cp] = 230;
            DoActions(KillUnitAt(3, "Protoss Arbiter", "[Skill]UseSkill", cp))
            _ARRW(f.step, cp) << (230)
            # (Line 219) f.count[cp] = 0;
            _ARRW(f.count, cp) << (0)
            # (Line 220) f.loop[cp] = 0;
            _ARRW(f.loop, cp) << (0)
            # (Line 221) }
            # (Line 222) else if (f.count[cp] == 9)
        if EUDElseIf()(f.count[cp] == 9):
            # (Line 223) {
            # (Line 224) KillUnitAt(All, "40 + 1n Marine", "Anywhere", cp);
            # (Line 225) KillUnitAt(All, "40 + 1n Mojo", "Anywhere", cp);
            DoActions(KillUnitAt(All, "40 + 1n Marine", "Anywhere", cp))
            # (Line 226) KillUnitAt(All, "60 + 1n Siege", "Anywhere", cp);
            DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", cp))
            # (Line 227) f.SkillEnd(cp);
            DoActions(KillUnitAt(All, "60 + 1n Siege", "Anywhere", cp))
            f.SkillEnd(cp)
            # (Line 228) }
            # (Line 229) }
        EUDEndIf()
        # (Line 230) }
    EUDEndIf()
