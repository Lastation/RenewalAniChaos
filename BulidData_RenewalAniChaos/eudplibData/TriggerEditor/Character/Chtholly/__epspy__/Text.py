## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import PluginVariables as msqcvar;
import PluginVariables as msqcvar
# (Line 2) import Function as f;
import Function as f
# (Line 4) const looker = PVariable();
looker = _CGFW(lambda: [PVariable()], 1)[0]
# (Line 6) function Text(num);
# (Line 7) function Looker()
# (Line 8) {
@EUDFunc
def Looker():
    # (Line 9) if (looker[getuserplayerid() - 128] > 0)
    if EUDIf()(looker[f_getuserplayerid() - 128] <= 0, neg=True):
        # (Line 10) {
        # (Line 11) Text(looker[getuserplayerid() - 128]);
        Text(looker[f_getuserplayerid() - 128])
        # (Line 12) looker[getuserplayerid() - 128] = 0;
        _ARRW(looker, f_getuserplayerid() - 128) << (0)
        # (Line 13) }
        # (Line 14) }
    EUDEndIf()
    # (Line 16) function main(cp)

# (Line 17) {
@EUDFunc
def f_main(cp):
    # (Line 18) if (f.Chtholly_Voice[cp] > 0)
    if EUDIf()(f.Chtholly_Voice[cp] <= 0, neg=True):
        # (Line 19) {
        # (Line 20) Text(f.Chtholly_Voice[cp]);
        Text(f.Chtholly_Voice[cp])
        # (Line 21) looker[cp] = f.Chtholly_Voice[cp];
        _ARRW(looker, cp) << (f.Chtholly_Voice[cp])
        # (Line 22) f.Chtholly_Voice[cp] = 0;
        _ARRW(f.Chtholly_Voice, cp) << (0)
        # (Line 23) }
        # (Line 24) }
    EUDEndIf()
    # (Line 26) function Text(num)

# (Line 27) {
@EUDFunc
def Text(num):
    # (Line 28) switch (num)
    EUDSwitch(num)
    # (Line 29) {
    # (Line 30) case 1:
    _t1 = EUDSwitchCase()
    # (Line 31) PlayWAV("Chtholly_EX01.ogg");
    if _t1(1):
        # (Line 32) f.stb.print("\x13\x1CChtholly Nota Seniorious\r\n\x13\x04언제까지고 함께 있어주겠다고 맹세했지");
        DoActions(PlayWAV("Chtholly_EX01.ogg"))
        f.stb.print("\x13\x1CChtholly Nota Seniorious\r\n\x13\x04언제까지고 함께 있어주겠다고 맹세했지")
        # (Line 33) break;
        EUDBreak()
        # (Line 34) case 2:
    _t2 = EUDSwitchCase()
    # (Line 35) f.stb.print("\x13\x1BCh\x1Ctholly Nota Seniorious\r\n\x13\x04맹세할 수 있었단 사실이 너무도 행복했어");
    if _t2(2):
        f.stb.print("\x13\x1BCh\x1Ctholly Nota Seniorious\r\n\x13\x04맹세할 수 있었단 사실이 너무도 행복했어")
        # (Line 36) break;
        EUDBreak()
        # (Line 37) case 3:
    _t3 = EUDSwitchCase()
    # (Line 38) PlayWAV("Chtholly_EX02.ogg");
    if _t3(3):
        # (Line 39) f.stb.print("\x13\x06Ch\x1Btho\x1Clly Nota Seniorious\r\n\x13\x04이 사람을 좋아하는 거구나 싶었지");
        DoActions(PlayWAV("Chtholly_EX02.ogg"))
        f.stb.print("\x13\x06Ch\x1Btho\x1Clly Nota Seniorious\r\n\x13\x04이 사람을 좋아하는 거구나 싶었지")
        # (Line 40) break;
        EUDBreak()
        # (Line 41) case 4:
    _t4 = EUDSwitchCase()
    # (Line 42) f.stb.print("\x13\x06Chtho\x1Blly \x1CNota Seniorious\r\n\x13\x04이렇게 생각할 수 있었던 사실이 행복했어");
    if _t4(4):
        f.stb.print("\x13\x06Chtho\x1Blly \x1CNota Seniorious\r\n\x13\x04이렇게 생각할 수 있었던 사실이 행복했어")
        # (Line 43) break;
        EUDBreak()
        # (Line 44) case 5:
    _t5 = EUDSwitchCase()
    # (Line 45) PlayWAV("Chtholly_EX03.ogg");
    if _t5(5):
        # (Line 46) break;
        DoActions(PlayWAV("Chtholly_EX03.ogg"))
        EUDBreak()
        # (Line 47) case 6:
    _t6 = EUDSwitchCase()
    # (Line 48) f.stb.print("\x13\x06Chtholly \x1BNo\x1Cta Seniorious\r\n\x13\x04행복하게 만들어주겠다고 내게 말해주었어");
    if _t6(6):
        f.stb.print("\x13\x06Chtholly \x1BNo\x1Cta Seniorious\r\n\x13\x04행복하게 만들어주겠다고 내게 말해주었어")
        # (Line 49) break;
        EUDBreak()
        # (Line 50) case 7:
    _t7 = EUDSwitchCase()
    # (Line 51) f.stb.print("\x13\x06Chtholly No\x1Bta Se\x1Cniorious\r\n\x13\x04내게 그런 말을 해준 것이 행복했어");
    if _t7(7):
        f.stb.print("\x13\x06Chtholly No\x1Bta Se\x1Cniorious\r\n\x13\x04내게 그런 말을 해준 것이 행복했어")
        # (Line 52) break;
        EUDBreak()
        # (Line 53) case 8:
    _t8 = EUDSwitchCase()
    # (Line 54) f.stb.print("\x13\x06Chtholly Nota Se\x1Bnior\x1Cious\r\n\x13\x04이렇게나 많은 행복함을 그 사람에게 나눠받았어 ");
    if _t8(8):
        f.stb.print("\x13\x06Chtholly Nota Se\x1Bnior\x1Cious\r\n\x13\x04이렇게나 많은 행복함을 그 사람에게 나눠받았어 ")
        # (Line 55) break;
        EUDBreak()
        # (Line 56) case 9:
    _t9 = EUDSwitchCase()
    # (Line 57) PlayWAV("Chtholly_00.ogg");
    if _t9(9):
        # (Line 58) f.stb.print("\x13\x1CChtholly Nota Seniorious\r\n\x13\x04어쩔수없구나, \x05정말...");
        DoActions(PlayWAV("Chtholly_00.ogg"))
        f.stb.print("\x13\x1CChtholly Nota Seniorious\r\n\x13\x04어쩔수없구나, \x05정말...")
        # (Line 59) break;
        EUDBreak()
        # (Line 60) case 10:
    _t10 = EUDSwitchCase()
    # (Line 61) PlayWAV("Chtholly_Dead.ogg");
    if _t10(10):
        # (Line 62) f.stb.printAt(3, "\x13\x06Chtholly Nota Seniorious\r\n\x13\x05빌렘... 고마..워...");
        DoActions(PlayWAV("Chtholly_Dead.ogg"))
        f.stb.printAt(3, "\x13\x06Chtholly Nota Seniorious\r\n\x13\x05빌렘... 고마..워...")
        # (Line 63) break;
        EUDBreak()
        # (Line 64) case 11:
    _t11 = EUDSwitchCase()
    # (Line 65) PlayWAV("Chtholly_EX04.ogg");
    if _t11(11):
        # (Line 66) break;
        DoActions(PlayWAV("Chtholly_EX04.ogg"))
        EUDBreak()
        # (Line 67) case 12:
    _t12 = EUDSwitchCase()
    # (Line 68) f.stb.printAt(4, "\x13\x06Chtholly Nota Senior\x1Bio\x1Cus\r\n\x13\x04그러니까\n\n\n");
    if _t12(12):
        f.stb.printAt(4, "\x13\x06Chtholly Nota Senior\x1Bio\x1Cus\r\n\x13\x04그러니까\n\n\n")
        # (Line 69) break;
        EUDBreak()
        # (Line 70) case 13:
    _t13 = EUDSwitchCase()
    # (Line 71) f.stb.printAt(4, "\x13\x06Chtholly Nota Seniorio\x1Bu\x1Cs\r\n\x13\x04분명\n\n\n");
    if _t13(13):
        f.stb.printAt(4, "\x13\x06Chtholly Nota Seniorio\x1Bu\x1Cs\r\n\x13\x04분명\n\n\n")
        # (Line 72) break;
        EUDBreak()
        # (Line 73) case 14:
    _t14 = EUDSwitchCase()
    # (Line 74) f.stb.printAt(1, "\x13\x06Chtholly Nota Seniorious\n\x13\x04지금의 나는\n\x13\x04누가 뭐라 할지라도\n\x13\x04세상에서 제일 \x06행복한 여자아이\x04인 거야");
    if _t14(14):
        f.stb.printAt(1, "\x13\x06Chtholly Nota Seniorious\n\x13\x04지금의 나는\n\x13\x04누가 뭐라 할지라도\n\x13\x04세상에서 제일 \x06행복한 여자아이\x04인 거야")
        # (Line 75) break;
        EUDBreak()
        # (Line 76) }
    # (Line 77) }
    EUDEndSwitch()
