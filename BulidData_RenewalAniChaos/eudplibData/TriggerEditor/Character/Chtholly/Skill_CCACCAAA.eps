import PluginVariables as msqcvar;
import func.shape as s;

function main(playerID)
{
	s.BanReturn(playerID);
	if (v.P_CountMain[playerID] < 7)
	{
		s.HoldPosition(playerID);
	}
	
	if (v.P_CountMain[playerID] >= 6 &&v.P_CountMain[playerID] <= 7)
	{
		s.ShieldFix(playerID, 1);
	}

	if (v.P_Delay[playerID] == 0)
	{
		if (v.P_CountMain[playerID] == 0 && v.P_LoopMain[playerID] <= 23)
		{
			s.Table_Cos(playerID, 15 * v.P_LoopMain[playerID], 160);
			s.Table_Sin(playerID, 15 * v.P_LoopMain[playerID], 160);
			s.Shape_Square(playerID, 1, "40 + 1n Gantrithor", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
			s.Shape_Square(playerID, 8, "Protoss Dark Templar", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
			KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID);
			KillUnitAt(All, "Protoss Dark Templar", "Anywhere", playerID);
			s.SkillWait(0);
			v.P_LoopMain[playerID] += 1;
		}
		else if (v.P_CountMain[playerID] == 0 && v.P_LoopMain[playerID] == 24)
		{
			s.SkillWait(0);
			v.P_CountMain[playerID] += 1;
			v.P_LoopMain[playerID] = 0;
		}
		else if (v.P_CountMain[playerID] == 1)
		{
			s.Shape_Square(playerID, 1, "60 + 1n Siege", 192, 192);
			s.Shape_Square(playerID, 1, "60 + 1n Siege", 128, 192);
			s.Shape_Square(playerID, 1, "60 + 1n Siege", 192, 128);
			s.Shape_Square(playerID, 1, "60 + 1n Siege", 128, 128);
			s.Shape_Square(playerID, 1, "40 + 1n Mojo", 192, 192);
			s.Shape_Square(playerID, 1, "40 + 1n Mojo", 128, 192);
			s.Shape_Square(playerID, 1, "40 + 1n Mojo", 192, 128);
			s.Shape_Square(playerID, 1, "40 + 1n Mojo", 128, 128);
			s.Shape_Square(playerID, 1, "40 + 1n Mojo", 192, 64);
			s.Shape_Square(playerID, 1, "40 + 1n Mojo", 64, 192);
			s.Shape_Square(playerID, 1, "40 + 1n Mojo", 128, 64);
			s.Shape_Square(playerID, 1, "40 + 1n Mojo", 64, 128);
			v.P_CountMain[playerID] += 1;
		}
		else if (v.P_CountMain[playerID] == 2)
		{
			s.Shape_Square(playerID, 1, "40 + 1n Marine", 128, 32);
			s.Shape_Square(playerID, 1, "40 + 1n Marine", 32, 128);
			s.Shape_Square(playerID, 1, "40 + 1n Marine", 128, 64);
			s.Shape_Square(playerID, 1, "40 + 1n Marine", 64, 128);
			s.Shape_Square(playerID, 1, "60 + 1n Danimoth", 96, 96);
			s.Shape_Square(playerID, 1, "60 + 1n Danimoth", 160, 96);
			s.Shape_Square(playerID, 1, "60 + 1n Danimoth", 96, 160);
			s.Shape_Square(playerID, 1, "60 + 1n Danimoth", 160, 160);
			s.Shape_Square(playerID, 1, "40 + 1n Firebat", 64, 64);
			s.Shape_Square(playerID, 1, "40 + 1n Firebat", 64, 0);
			s.MoveLoc(v.P_CharacterID[playerID], playerID, 0, 0);
			Order("40 + 1n Marine", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
			Order("40 + 1n Firebat", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
			Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
			Order("60 + 1n Danimoth", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
			s.SkillWait(0);
			s.Voice_Routine(playerID, 6);
			v.P_CountMain[playerID] += 1;
		}
		else if (v.P_CountMain[playerID] == 3 && v.P_LoopMain[playerID] <= 24)
		{
			s.Table_Cos(playerID, 15 * v.P_LoopMain[playerID], 224);
			s.Table_Sin(playerID, 15 * v.P_LoopMain[playerID], 224);
			s.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
			KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
			s.SkillWait(0);
			v.P_LoopMain[playerID] += 1;
		}
		else if (v.P_CountMain[playerID] == 3 && v.P_LoopMain[playerID] == 25)
		{
			s.SkillWait(500);
			v.P_CountMain[playerID] += 1;
			v.P_LoopMain[playerID] = 0;
		}
		else if (v.P_CountMain[playerID] == 4)
		{
			KillUnitAt(All, "40 + 1n Marine", "Anywhere", playerID);
			KillUnitAt(All, "40 + 1n Firebat", "Anywhere", playerID);
			s.SkillWait(2000);
			v.P_CountMain[playerID] += 1;
		}
		else if (v.P_CountMain[playerID] == 5)
		{
			s.Voice_Routine(playerID, 7);
			KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID);
			s.SkillWait(5000);
			v.P_CountMain[playerID] += 1;
		}
		else if (v.P_CountMain[playerID] == 6)
		{
			s.Voice_Routine(playerID, 8);
			KillUnitAt(All, "60 + 1n Danimoth", "Anywhere", playerID);
			s.SkillWait(2500);
			v.P_CountMain[playerID] += 1;
		}
		else if (v.P_CountMain[playerID] == 7)
		{
			s.Voice_Routine(playerID, 8);
			KillUnitAt(All, "60 + 1n Siege", "Anywhere", playerID);
			s.SkillWait(0);
			v.P_CountMain[playerID] += 1;
		}
		else if (v.P_CountMain[playerID] == 8 
		&& Bring(playerID, AtLeast, 1, "Protoss Corsair", "[Skill]UseSkill")
		&& Deaths(playerID, AtLeast, s.UltimateA[playerID], " `UltimateCoolTime"))
		{
			if (Switch("UiltimateSwitch", Cleared))
			{
				s.Voice_Routine(playerID, 11);
				SetSwitch("UiltimateSwitch", Set);
				s.step[playerID] = 240;
				v.P_CountMain[playerID] = 0;
				v.P_LoopMain[playerID] = 0;
				SetDeaths(playerID, Subtract, s.UltimateA[playerID], " `UltimateCoolTime");
				KillUnitAt(1, "Protoss Corsair", "[Skill]UseSkill", playerID);
				SetSwitch("Recall - Chtholly", Set);
			}
			else
			{
				SetResources(CurrentPlayer, Add, 60, Gas);
				KillUnitAt(1, "Protoss Corsair", "[Skill]UseSkill", playerID);
				SetDeaths(CurrentPlayer, SetTo, 999, " `SYSTEMTEXT");
				s.SkillEnd();
			}
		}
		else if (v.P_CountMain[playerID] == 8)
		{
			s.SkillEnd();
		}
	}
}