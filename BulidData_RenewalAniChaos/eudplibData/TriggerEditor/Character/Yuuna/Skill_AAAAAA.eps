import PluginVariables as msqcvar;
import func.shape as s;

function FlowerShape(cp : TrgPlayer, count, Unit : TrgUnit, i, distance, interval);

function main(playerID)
{
   MoveLocation("22.Yuuna_Bozo", v.P_CharacterID[playerID], playerID, "Anywhere");
   s.BanReturn(playerID);
   s.HoldPosition(playerID);
   ModifyUnitShields(All, v.P_CharacterID[playerID], playerID, "Anywhere", 1);
   
   if (v.P_Delay[playerID] == 0)
   {
      if (v.P_CountMain[playerID] == 0)
      {
         if (v.P_LoopMain[playerID] == 0)
         {         
            SetSwitch("Recall - Yuuna", Set);
            SetDeaths(playerID, SetTo, 1, " `ShieldRecharge");
            
            s.SkillWait(2000);

            v.P_LoopMain[playerID] += 1;
         }
         else if (v.P_LoopMain[playerID] == 1)
         {         
            s.SkillWait(80);

            v.P_CountMain[playerID] += 1;
            v.P_LoopMain[playerID] = 0;
            v.P_LoopMainB[playerID] = 0;
         }
      }
      else if (v.P_CountMain[playerID] == 1)
      {
         if (v.P_LoopMain[playerID] == 0)
         {         
            s.SkillWait(3200);

            v.P_LoopMain[playerID] += 1;
         }
         else if (v.P_LoopMain[playerID] == 1)
         {         
            s.Voice_Routine(playerID, 13);

            s.SkillWait(80);

            v.P_CountMain[playerID] += 1;
            v.P_LoopMain[playerID] = 0;
            v.P_LoopMainB[playerID] = 0;
         }
      }
      else if (v.P_CountMain[playerID] == 2)
      {
         if (v.P_LoopMain[playerID] < 4)
         {         
            s.Shape_NxNSquare(playerID, 1, "40 + 1n Wraith", 2 * v.P_LoopMain[playerID] + 5, 75);
            s.Shape_NxNSquare(playerID, 1, "50 + 1n Tank", 2 * v.P_LoopMain[playerID] + 5, 75);
            KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
            KillUnitAt(All, "40 + 1n Wraith", "Anywhere", playerID);

            s.SkillWait(80);

            v.P_LoopMain[playerID] += 1;
         }
         else if (v.P_LoopMain[playerID] == 4)
         {         
            s.Shape_NxNSquare(playerID, 1, "130 + 1n Norad", 11, 75);
            s.Shape_NxNSquare(playerID, 1, "60 + 1n Siege", 11, 75);
            KillUnitAt(All, "130 + 1n Norad", "Anywhere", playerID);

            s.SkillWait(80);

            v.P_LoopMain[playerID] += 1;
         }
         else if (v.P_LoopMain[playerID] == 5)
         {         
            s.SkillWait(1120);

            v.P_LoopMain[playerID] += 1;
         }
         else if (v.P_LoopMain[playerID] == 6)
         {         
            s.SkillWait(80);

            v.P_CountMain[playerID] += 1;
            v.P_LoopMain[playerID] = 0;
            v.P_LoopMainB[playerID] = 0;
         }
      }
      else if (v.P_CountMain[playerID] == 3)
      {
         if (v.P_LoopMain[playerID] == 0)
         {         
            s.SkillWait(1280);

            v.P_LoopMain[playerID] += 1;
         }
         else if (v.P_LoopMain[playerID] == 1)
         {         
            s.SkillWait(80);

            v.P_CountMain[playerID] += 1;
            v.P_LoopMain[playerID] = 0;
            v.P_LoopMainB[playerID] = 0;
         }
      }
      else if (v.P_CountMain[playerID] == 4)
      {  
         if (v.P_LoopMain[playerID] < 4)
         {         
            RemoveUnitAt(All, "130 + 1n Norad", "Anywhere", playerID);
            s.Shape_NxNSquare(playerID, 1, "130 + 1n Norad", 2 * v.P_LoopMain[playerID] + 5, 75);
            s.Shape_NxNSquare(playerID, 1, "50 + 1n Tank", 2 * v.P_LoopMain[playerID] + 5, 75);
            KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
            MoveLocation(v.P_LocationID[playerID], v.P_CharacterID[playerID], playerID, "Anywhere");
            Order("130 + 1n Norad", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);

            s.SkillWait(80);

            v.P_LoopMain[playerID] += 1;
         }
         else if (v.P_LoopMain[playerID] == 4)
         {         
            s.SkillWait(4000);

            v.P_LoopMain[playerID] += 1;
         }
         else if (v.P_LoopMain[playerID] == 5)
         {         
            KillUnitAt(All, "130 + 1n Norad", "Anywhere", playerID);
            KillUnitAt(All, "60 + 1n Siege", "Anywhere", playerID);
            SetDeaths(playerID, SetTo, 0, " `ShieldRecharge");
            
            s.SkillWait(80);

            v.P_CountMain[playerID] += 1;
            v.P_LoopMain[playerID] = 0;
            v.P_LoopMainB[playerID] = 0;
         }
      }
      else if (v.P_CountMain[playerID] == 5)
      {
         SetSwitch("Recall - Yuuna", Clear);
         SetSwitch("UiltimateSwitch", Clear);
         s.SkillEnd();
      }
   }

   if (v.P_DelayB[playerID] == 0)
   {
      if (v.P_CountMain[playerID] == 1)
      {
         if (v.P_LoopMainB[playerID] < 32)
         {
            s.Table_Sin(playerID, 50 * v.P_LoopMainB[playerID], 50 + 10 * v.P_LoopMainB[playerID]);
            s.Table_Cos(playerID, 50 * v.P_LoopMainB[playerID], 50 + 10 * v.P_LoopMainB[playerID]);

            s.Shape_Square(playerID, 16, "Rhynadon (Badlands)", v.P_AngleCos[playerID], v.P_AngleSin[playerID]);
            KillUnitAt(All, "Rhynadon (Badlands)", "Anywhere", playerID);

            s.SkillWaitB(playerID, 80);

            v.P_LoopMainB[playerID] += 1;
         }
      }
      if (v.P_CountMain[playerID] == 3)
      {
         if (v.P_LoopMainB[playerID] == 0)
         {
            RemoveUnitAt(All, "130 + 1n Norad", "Anywhere", playerID);
            s.Shape_NxNSquare(playerID, 1, "130 + 1n Norad", 3, 75);
            Order("130 + 1n Norad", playerID, "Anywhere", Attack, "Anywhere");
            s.Shape_NxNSquare(playerID, 1, "50 + 1n Tank", 3, 75);
            KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);

            s.SkillWaitB(playerID, 80);

            v.P_LoopMainB[playerID] = 0;
         }
      }
   }
}
