import PluginVariables as msqcvar;
import Variable as v;
import Status as s;
import Function as f;
function SetBuildingHP(cp) 
{
	ModifyUnitHitPoints(1, (155), (13), (64), 100 - (v.Unique_Cool[cp] / 10));
	ModifyUnitShields(1, (167), (13), (64), dwread_epd(EPD(0x58A364 + 48 * 205 + 4 * cp)) / 10);
}

function SetVariable(cp)
{
       v.Potion[cp] = dwread_epd(EPD(0x58A364 + 48 * 219 + 4 * cp));
       v.EXP_Need[cp] = dwread_epd(EPD(0x58A364 + 48 * 225 + 4 * cp));
       v.EXP_Now[cp] = dwread_epd(EPD(0x58A364 + 48 * 185 + 4 * cp));
       
       v.CS_Player[cp] = dwread_epd(EPD(0x58A364 + 48 * 164 + 4 * cp));
       v.Exp_Player[cp] = dwread_epd(EPD(0x58A364 + 48 * 166 + 4 * cp));
       
       v.DeathCount[cp] = dwread_epd(EPD(0x58A364 + 48 * 210 + 4 * cp))/12;
       v.Unique_Cool[cp] = dwread_epd(EPD(0x58A364 + 48 * 203 + 4 * cp))/12;
       
       if (bread(0x58D2B0 + 0x207C * ((7) / 46) + (cp) * (46 - 31 * ((7) / 46)) + ((7) % 46)) != bread(0x58D2B0 + 35 + 46 * cp))
       { bwrite(0x58D2B0 + 0x207C * ((35) / 46) + (cp) * (46 - 31 * ((35) / 46)) + ((35) % 46), bread(0x58D2B0 + 7 + 46 * cp)); }
       v.Dfs[cp] = bread(0x58D2B0 + 0 + 46 * cp);
       v.Atk[cp] = bread(0x58D2B0 + 7 + 46 * cp);
       
	switch (v.Hero_Num[cp])	// 방어력 관련
	{
	case 10:	//얼터
		if (Deaths((13), (0), 1, (204)))
		{
			v.Dfs[cp] += 10;
			SetDeaths((13), (9), 1, (204));
		}
		break;
  	case 18:	//텐케이
  		if (Deaths(CurrentPlayer, Exactly, 320, " `SkillStep")) v.Dfs[cp] = 200;
     		break;
  	case 22:	//유우나
  		v.Dfs[cp] -= 3 * dwread_epd(204 * 12 + cp);
     		break;
	}
	
	
	switch (v.Hero_Num[cp])	// 공격력 관련
	{
  	case 14:
      		v.Atk[cp] += 2 * dwread_epd(204 * 12 + cp);
     		break;
  	case 22:
      		v.Atk[cp] += 3 * dwread_epd(204 * 12 + cp);
     		break;
     	case 30:
     		if (Deaths(cp, AtLeast, 1, " `UniqueSkill"))
	     		v.Atk[cp] += 10;
     		break;
	}
	if (cp < 3 && Switch("Passive - Nanami1", Set) && Bring(cp, AtLeast, 1, "Any unit", "24.Nanami_Bozo")) { v.Atk[cp] += 5; v.Dfs[cp] += 5; }
	else if (cp >= 3 && Switch("Passive - Nanami2", Set) && Bring(cp, AtLeast, 1, "Any unit", "24.Nanami_Bozo")) { v.Atk[cp] += 5; v.Dfs[cp] += 5; }

	if (cp < 3 && Switch("Unique - Nanami1", Set)) { v.Atk[cp] += 5; v.Dfs[cp] += 5; }
	else if (cp >= 3 && Switch("Unique - Nanami2", Set)) { v.Atk[cp] += 5; v.Dfs[cp] += 5; }

	if (s.ekidonaDebuff[cp] >= 1) v.Atk[cp] -= 5 * s.ekidonaDebuff[cp];

	bwrite(0x58D2B0 + 0x207C * ((2) / 46) + (cp) * (46 - 31 * ((2) / 46)) + ((2) % 46), v.Dfs[cp]); 	//방어력 최종 적용
	bwrite(0x58D2B0 + 0x207C * ((9) / 46) + (cp) * (46 - 31 * ((9) / 46)) + ((9) % 46), v.Atk[cp]);	//공격력 최종 적용

	ModifyUnitShields(All, f.heroID[cp], cp, "Anywhere", v.Shield[cp]);			//쉴드 고정
}