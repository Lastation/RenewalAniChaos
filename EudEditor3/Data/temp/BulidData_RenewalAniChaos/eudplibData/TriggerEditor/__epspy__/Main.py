## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import customText as tct;
import customText as tct
# (Line 2) import Variable as v;
import Variable as v
# (Line 4) import SCArchive as sca;
import SCArchive as sca
# (Line 5) import IO.Setting as scaSetting;					// SCA 텍스트
from IO import Setting as scaSetting
# (Line 7) import CustomText.ShopText as shopText;			// 상점 텍스트
from CustomText import ShopText as shopText
# (Line 8) import CustomText.BuildingText as buildText;		// 건물 텍스트
from CustomText import BuildingText as buildText
# (Line 10) import Setting.Init as init;						// 변수 초기화
from Setting import Init as init
# (Line 11) import Setting.GetUnitID as unitID;				// 유닛 아이디
from Setting import GetUnitID as unitID
# (Line 12) import Setting.Property as ppty;					// 특성 시스템
from Setting import Property as ppty
# (Line 13) import Setting.TestMode as testmode;			// 테스트 모드
from Setting import TestMode as testmode
# (Line 15) import Character.SelectText as selectText;			// 유닛 텍스트
from Character import SelectText as selectText
# (Line 16) import Character.DeathText as deathText;			// 사망 텍스트
from Character import DeathText as deathText
# (Line 17) import Character.Marge as marge;				// 유닛 스킬 텍스트
from Character import Marge as marge
# (Line 18) import Character.Announce as announce;			// 상태창 텍스트
from Character import Announce as announce
# (Line 20) var txtPtr, btnPtr, btnPos, oldCP;
txtPtr, btnPtr, btnPos, oldCP = EUDCreateVariables(4)
# (Line 21) const trgk = $T('Artanis & safhfh');
trgk = _CGFW(lambda: [GetStringIndex('Artanis & safhfh')], 1)[0]
# (Line 23) function onPluginStart() 	// 초기화 함수
# (Line 24) {
@EUDFunc
def onPluginStart():
    # (Line 25) sca.Init();
    sca.Init()
    # (Line 26) sca.LoadData(0);
    sca.LoadData(0)
    # (Line 28) EUDPlayerLoop()();
    EUDPlayerLoop()()
    # (Line 29) EUDEndPlayerLoop();
    EUDEndPlayerLoop()
    # (Line 30) }
    # (Line 32) function MainLoop()

# (Line 33) {
@EUDFunc
def MainLoop():
    # (Line 34) unitID.Get_UnitID();
    unitID.Get_UnitID()
    # (Line 36) if(Switch((255), (3)))	// Switch - StartSwich Close 일경우
    if EUDIf()(Switch((255), (3))):
        # (Line 37) {
        # (Line 38) selectText.SetIndex();				// 유닛 클릭 인식
        selectText.SetIndex()
        # (Line 39) selectText.CharacterTextNum();	// 캐릭터 번호 설정
        selectText.CharacterTextNum()
        # (Line 40) selectText.CharacterText();		// 캐릭터 선택 텍스트
        selectText.CharacterText()
        # (Line 41) announce.Announce_Init();		// 상태창 텍스트
        announce.Announce_Init()
        # (Line 43) ppty.PropertyText();			// 특성 텍스트
        ppty.PropertyText()
        # (Line 45) if (Switch((253), (2)))				// TestMode
        if EUDIf()(Switch((253), (2))):
            # (Line 46) {
            # (Line 47) testmode.TestMode();
            testmode.TestMode()
            # (Line 48) }
            # (Line 49) }
        EUDEndIf()
        # (Line 51) if(Switch((255), (2)))	// Switch - StartSwich Set 일경우
    EUDEndIf()
    if EUDIf()(Switch((255), (2))):
        # (Line 52) {
        # (Line 53) buildText.BuildingText();		// 건물 텍스트
        buildText.BuildingText()
        # (Line 54) shopText.ShopText();			// 상점 텍스트
        shopText.ShopText()
        # (Line 56) deathText.SetDeathValue();	// 사망 트리거
        deathText.SetDeathValue()
        # (Line 57) deathText.DeathText();		// 사망 텍스트
        deathText.DeathText()
        # (Line 59) init.SetBuildingHP();			// 건물 체력 관련
        init.SetBuildingHP()
        # (Line 60) init.SetVariable();				// 기본 변수 설정
        init.SetVariable()
        # (Line 62) ppty.Property_S();			// S 특성
        ppty.Property_S()
        # (Line 63) ppty.Property_C();			// C 특성
        ppty.Property_C()
        # (Line 64) ppty.Property_A();			// A 특성
        ppty.Property_A()
        # (Line 66) marge.MargeSound();			// 캐릭터 스킬 사운드 & 스킬 텍스트
        marge.MargeSound()
        # (Line 67) announce.Announce_Ingame();	// 캐릭터 상태창 텍스트
        announce.Announce_Ingame()
        # (Line 68) }
        # (Line 69) }
    EUDEndIf()
    # (Line 71) function beforeTriggerExec()

# (Line 72) {
@EUDFunc
def beforeTriggerExec():
    # (Line 73) sca.Exec();
    sca.Exec()
    # (Line 74) scaSetting.AddCharacterExp();
    scaSetting.AddCharacterExp()
    # (Line 76) EUDPlayerLoop()();
    EUDPlayerLoop()()
    # (Line 78) if(getcurpl() < 6)
    if EUDIf()(f_getcurpl() >= 6, neg=True):
        # (Line 79) {
        # (Line 80) MainLoop();
        MainLoop()
        # (Line 81) }
        # (Line 83) EUDEndPlayerLoop();
    EUDEndIf()
    EUDEndPlayerLoop()
    # (Line 84) }
