import customText as tct;
import TitleVariable as tv;
import Variable as v;

import Title.Total.Exp as totalexp;
import Title.Total.Kill as totalkill;
import Title.Total.CS as totalcs;
import SCArchive as sca;

const index = PVariable();
var txtPtr, btnPtr, btnPos, oldCP;

function SetTitle_Total_Text(cp);
function SetTitle_Exp_Text(cp);
function SetTitle_Kill_Text(cp);
function SetTitle_CS_Text(cp);

function Set_PName_Index(cp, value);		// 닉네임 배열 위치 설정
function Set_PName(cp);					// 닉네임 설정

function Key_input(cp);

	
function Title_Marge(cp)
{
	if(sca.ConnectStatus() == 1)
	{
		Key_input(cp);
		Set_PName(cp);
		
		switch(tv.View_Title[cp])
		{
			case 1:
				SetTitle_Total_Text(cp);
				break;
			case 2:
				tv.View_Title_Now[cp] = 0;
				tv.Select_Title[cp] = 0;
				break;
		}
	}
}

function SetTitle_Total_Text(cp)
{
	switch(tv.Select_Title[cp])
	{
		case 1:
			SetTitle_Exp_Text(cp);
			break;
		case 2:
			SetTitle_Kill_Text(cp);
			break;
		case 3:
			SetTitle_CS_Text(cp);
			break;
		default:
			tct.makeText("　　\x17[ \x04업적 칭호 목록 \x17]");
	 		tct.addText("\n　　\x17[ \x041 \x17]　\x04통합 경험치 업적 \x17");
			tct.addText("\n　　\x17[ \x042 \x17]　\x04통합 처치 업적 \x17");
			tct.addText("\n　　\x17[ \x043 \x17]　\x04통합 크립 파괴 업적 \x17");
			tct.addText("\n\n\n\n");

			txtPtr = dwread_epd(EPD(0x640B58));
			tct.displayText();
			SetMemory(0x640B58, SetTo, txtPtr);
			break;
	}
}

function SetTitle_Exp_Text(cp)
{
	totalexp.Total_Exp_Setting(cp);
	
	tct.makeText("　　\x17[ \x04보유 통합 경험치 업적 칭호 목록 \x17]　", v.Exp_Total[cp], " \x1FExp");
	for (var i = 0; i < tv.View_Title_Num; i++)
	{
		index[cp] = tv.View_Title_Num * tv.View_Title_Now[cp] + i;
		
		if (tv.Title_Max[cp] > index[cp])
		{
			if (tv.Enable_Title_Num[cp] > index[cp])
			{ tct.addText("\n　　\x17[ \x04", i + 1, " \x17]　\x04",ptr2s(tv.Total_Exp_Title[index[cp]])," \x04　", tv.Total_Exp_Need[index[cp]], " \x1FExp"); }
			else
			{ tct.addText("\n　　\x17[ \x04", i + 1, " \x17]　\x05",ptr2s(tv.Total_Exp_Title[index[cp]])," \x04　", tv.Total_Exp_Need[index[cp]], " \x1FExp"); }
		}
		else
		{ tct.addText("\n"); }
	}
	tct.addText("\n　　\x04", tv.View_Title_Now[cp] + 1, " 페이지 / 이전 [\x17A\x04] 다음 [\x17D\x04] 돌아가기 [\x17Z\x04]");
	
	txtPtr = dwread_epd(EPD(0x640B58));
	tct.displayText();
	SetMemory(0x640B58, SetTo, txtPtr);
	
	Set_PName_Index(cp, 100);
}

function SetTitle_Kill_Text(cp)
{
	totalkill.Total_Kill_Setting(cp);
	
	tct.makeText("　　\x17[ \x04보유 통합 처치 업적 칭호 목록 \x17]　", v.Kill_All[cp], " \x1FKill");
	for (var i = 0; i < tv.View_Title_Num; i++)
	{
		index[cp] = tv.View_Title_Num * tv.View_Title_Now[cp] + i;
		
		if (tv.Title_Max[cp] > index[cp])
		{
			if (tv.Enable_Title_Num[cp] > index[cp])
			{ tct.addText("\n　　\x17[ \x04", i + 1, " \x17]　\x04",ptr2s(tv.Total_Kill_Title[index[cp]])," \x04　", tv.Total_Kill_Need[index[cp]], " \x1FKill"); }
			else
			{ tct.addText("\n　　\x17[ \x04", i + 1, " \x17]　\x05",ptr2s(tv.Total_Kill_Title[index[cp]])," \x04　", tv.Total_Kill_Need[index[cp]], " \x1FKill"); }
		}
		else
		{ tct.addText("\n"); }
	}
	tct.addText("\n　　\x04", tv.View_Title_Now[cp] + 1, " 페이지 / 이전 [\x17A\x04] 다음 [\x17D\x04] 돌아가기 [\x17Z\x04]");
	
	txtPtr = dwread_epd(EPD(0x640B58));
	tct.displayText();
	SetMemory(0x640B58, SetTo, txtPtr);
	
	Set_PName_Index(cp, 200);
}

function SetTitle_CS_Text(cp)
{
	totalcs.Total_CS_Setting(cp);
	
	tct.makeText("　　\x17[ \x04보유 통합 크립 파괴 업적 칭호 목록 \x17]　", v.CS_Total[cp], " \x1FCS");
	for (var i = 0; i < tv.View_Title_Num; i++)
	{
		index[cp] = tv.View_Title_Num * tv.View_Title_Now[cp] + i;

		if (tv.Title_Max[cp] > index[cp])
		{
			if (tv.Enable_Title_Num[cp] > index[cp])
			{ tct.addText("\n　　\x17[ \x04", i + 1, " \x17]　\x04",ptr2s(tv.Total_CS_Title[index[cp]])," \x04　", tv.Total_CS_Need[index[cp]], " \x1FCS"); }
			else
			{ tct.addText("\n　　\x17[ \x04", i + 1, " \x17]　\x05",ptr2s(tv.Total_CS_Title[index[cp]])," \x04　", tv.Total_CS_Need[index[cp]], " \x1FCS"); }
		}
		else
		{ tct.addText("\n"); }
	}
	tct.addText("\n　　\x04", tv.View_Title_Now[cp] + 1, " 페이지 / 이전 [\x17A\x04] 다음 [\x17D\x04] 돌아가기 [\x17Z\x04]");
	
	txtPtr = dwread_epd(EPD(0x640B58));
	tct.displayText();
	SetMemory(0x640B58, SetTo, txtPtr);
	
	Set_PName_Index(cp, 300);
}

function Set_PName_Index(cp, value)
{
	if (Deaths(CurrentPlayer, AtLeast, 1, "Zerg Larva"))
	{
		index[cp] = dwread_epd(EPD(0x58A364 + 48 * 35 + 4 * cp)) - 1;
		if ( tv.Enable_Title_Num[cp] > tv.View_Title_Num * tv.View_Title_Now[cp] + index[cp])
		{
			tv.Title_Name_Front[cp] = value + tv.View_Title_Num * tv.View_Title_Now[cp] + index[cp];
			tv.View_Title[cp] = 2;
			tct.print("\n\n\n\n\n\n\n\n\n\n\n");
		}
		SetDeaths(CurrentPlayer, SetTo, 0, "Zerg Larva");
	}
}

function Set_PName(cp)
{
	if (tv.Title_Name_Front[cp] >= 100 && tv.Title_Name_Front[cp] < 200)
	{
		SetPName(getcurpl(), ptr2s(tv.Total_Exp_Title[tv.Title_Name_Front[cp] - 100]), tct.str(0x57EEEB + 36 * getcurpl()));
	}
	else if (tv.Title_Name_Front[cp] >= 200 && tv.Title_Name_Front[cp] < 300)
	{
		SetPName(getcurpl(), ptr2s(tv.Total_Kill_Title[tv.Title_Name_Front[cp] - 200]), tct.str(0x57EEEB + 36 * getcurpl()));
	}
	else if (tv.Title_Name_Front[cp] >= 300 && tv.Title_Name_Front[cp] < 400)
	{
		SetPName(getcurpl(), ptr2s(tv.Total_CS_Title[tv.Title_Name_Front[cp] - 300]), tct.str(0x57EEEB + 36 * getcurpl()));
	}
}

function Key_input(cp)
{
	if (Deaths(CurrentPlayer, Exactly, 2, "Terran SCV")) 	
	{ 
		if (tv.Title_Max[cp] > tv.View_Title_Now[cp] * tv.View_Title_Num + tv.View_Title_Num) { tv.View_Title_Now[cp] += 1; }
		SetDeaths(CurrentPlayer, SetTo, 0, "Terran SCV");
	}
	else if (Deaths(CurrentPlayer, Exactly, 3, "Terran SCV"))
	{
		if (tv.View_Title_Now[cp] > 0) { tv.View_Title_Now[cp] -= 1; }
		SetDeaths(CurrentPlayer, SetTo, 0, "Terran SCV");
	}
	
	if (Deaths(CurrentPlayer, Exactly, 4, "Terran SCV"))
	{
		SetDeaths(CurrentPlayer, SetTo, 0, "Terran SCV");
		
		if (tv.View_Title[cp] < 1) 	{ tv.View_Title[cp] += 1; }
		else 					{ tv.View_Title[cp] = 0; tct.print("\n\n\n\n\n\n\n\n\n\n\n"); }
	}
	
	if (Deaths(CurrentPlayer, Exactly, 5, "Terran SCV"))
	{
		tv.Select_Title[cp] = 0;
		tv.View_Title_Now[cp] = 0;
		SetDeaths(CurrentPlayer, SetTo, 0, "Terran SCV");
	}
	
	if (Deaths(CurrentPlayer, Exactly, 1, "Zerg Larva") && tv.Select_Title[cp] == 0 && tv.View_Title[cp] == 1) { tv.Select_Title[cp] = 1; SetDeaths(CurrentPlayer, SetTo, 0, "Zerg Larva"); }
	if (Deaths(CurrentPlayer, Exactly, 2, "Zerg Larva") && tv.Select_Title[cp] == 0 && tv.View_Title[cp] == 1) { tv.Select_Title[cp] = 2; SetDeaths(CurrentPlayer, SetTo, 0, "Zerg Larva"); }
	if (Deaths(CurrentPlayer, Exactly, 3, "Zerg Larva") && tv.Select_Title[cp] == 0 && tv.View_Title[cp] == 1) { tv.Select_Title[cp] = 3; SetDeaths(CurrentPlayer, SetTo, 0, "Zerg Larva"); }
	if (Deaths(CurrentPlayer, Exactly, 4, "Zerg Larva") && tv.Select_Title[cp] == 0 && tv.View_Title[cp] == 1) { tv.Select_Title[cp] = 4; SetDeaths(CurrentPlayer, SetTo, 0, "Zerg Larva"); }
	if (Deaths(CurrentPlayer, Exactly, 5, "Zerg Larva") && tv.Select_Title[cp] == 0 && tv.View_Title[cp] == 1) { tv.Select_Title[cp] = 5; SetDeaths(CurrentPlayer, SetTo, 0, "Zerg Larva"); }
}