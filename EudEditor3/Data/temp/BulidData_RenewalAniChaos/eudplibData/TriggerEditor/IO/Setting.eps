import SCArchive as sca;
import SCAFlexible as scf;

import Variable as v;
import customText as tct;

var txtPtr, btnPtr, btnPos, oldCP;
const trgk = $T('Artanis & safhfh');

function PingCheck();

function ResetCharacterExp()
{
	const cp = getcurpl();
	
	for (var i = 0; i < v.CharacterMax; i++)
	{
		v.CharacterExp[6 * i + cp] = 0;
	}
}

function ShowCharacterExp(cp, num)
{	
	tct.makeText("\x13\x17[ \x04",ptr2s(v.Hero_Name[num])," \x17] \x04EXP : ");
	tct.displayText();
}

function AddCharacterExp()
{
	//PingCheck();

	if(Deaths((13), (0), 1, (166)))
	{
		const cp = getcurpl();
		const num = dwread_epd(EPD(0x58A364 + 48 * 172 + 4 * getcurpl()));
	
		v.CharacterExp[6 * num + cp] += dwread_epd(EPD(0x58A364 + 48 * 166 + 4 * cp));
		
		switch(sca.GetLastMessage())
		{
			case 1:
				tct.print(v.CharacterExp[6 * num + cp],"");
				sca.SaveData(0);
				SetDeaths((13), (7), 0, (166));
				ShowCharacterExp(cp, num);
				break;
			case 2:
				tct.print("\x13\x04연결이 끊어졌습니다.");
				break;
			case 5:
				tct.print("\x13\x04",ptr2s(v.Hero_Name[num]),"의 정보를 저장중입니다.");
				break;
			case 6:
				tct.print("\x13\x04",ptr2s(v.Hero_Name[num]),"의 저장을 완료하였습니다.");
				break;
			case 7:
				tct.print("\x13\x04런처를 연결해 주세요.");
				break;
			case 9:
				tct.print("\x13\x04런처연결에 실패하였습니다.");
				break;
			default:
				tct.print("\x13\x04런처연결에 실패하였습니다.");
				sca.ResetLastMessage();
				break;
		}
	}
}

function PingCheck()
{
	//커넥트 상태를 판단.
	const Ping = wread_epd(EPD(scf.ws) + scf.EntryPointLength, 0);

	tct.print("\x13\x04Connection Check : \x19", Ping," ms");
}