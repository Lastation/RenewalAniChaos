import SCArchive as sca;

import Variable as v;
import customText as tct;

var txtPtr, btnPtr, btnPos, oldCP;
const trgk = $T('Artanis & safhfh');

function SCAMain(cp);
function SCAMessage(cp);
function GetExp(cp);
function GetCS(cp);
function AddExp(cp, exp);
function AddCS(cp, cs);

function SCAMain(cp)
{
	if(sca.ConnectStatus() == 1)
	{
		switch(v.SCAStatus[cp])
		{
			case 0:
				sca.LoadData(0);
				v.SCAStatus[cp] = 3;
				break;
			case 1:
				GetExp(cp);
				sca.SaveData(0);
				v.SCAStatus[cp] = 2;
				break;
			case 2:
				if (Deaths(CurrentPlayer, Exactly, 1000, 175) && Switch("TestModeSwitch", Cleared)) 
				{
					v.Exp_Total[cp] 	= dwread_epd(EPD(0x58A364 + 48 * 166 + 4 * cp));
					v.CS_Total[cp] 	= dwread_epd(EPD(0x58A364 + 48 * 164 + 4 * cp));
					
					AddExp(cp, v.Exp_Total[cp]);
					AddCS(cp, v.CS_Total[cp]);
					
					v.SCAStatus[cp] = 1;
					
					SetDeaths(CurrentPlayer, SetTo, 360, 175);
				}
				break;
			case 3:
				if (Switch(255, Cleared))
				{
					GetExp(cp);
					GetCS(cp);
				}
				else	
				{
					if (v.Hero_Num[cp] != dwread_epd(EPD(0x58A364 + 48 * 172 + 4 * cp)))
      	 				{ v.Hero_Num[cp] = dwread_epd(EPD(0x58A364 + 48 * 172 + 4 * cp)); }
					GetExp(cp);
					GetCS(cp);
					v.SCAStatus[cp] = 2;
				}
				break;
		}
		SCAMessage(cp);
	}
	else
	{
		if (Switch(255, Cleared))
		{
			GetExp(cp);
			GetCS(cp);
		}
		else	
		{
			if (v.Hero_Num[cp] != dwread_epd(EPD(0x58A364 + 48 * 172 + 4 * cp)))
      	 		{ v.Hero_Num[cp] = dwread_epd(EPD(0x58A364 + 48 * 172 + 4 * cp)); }
			GetExp(cp);
			GetCS(cp);
		}
	}
}

function SCAMessage(cp)
{
	switch(sca.GetLastMessage())
	{
		case 3:
			txtPtr = dwread_epd(EPD(0x640B58));
			tct.print("\x13\x04저장된  정보를 불러오는 중입니다.");
			SetMemory(0x640B58, SetTo, txtPtr);
			sca.ResetLastMessage();
			break;
		case 4:
			txtPtr = dwread_epd(EPD(0x640B58));
			tct.print("\x13\x04저장된 정보를 불러오는데 성공하였습니다.");
			SetMemory(0x640B58, SetTo, txtPtr);
			sca.ResetLastMessage();
			break;
		case 5:
			tct.makeText("\x13\x04", ptr2s(v.Hero_Name[v.Hero_Num[cp]]), "의 정보를 저장중입니다.");
			txtPtr = dwread_epd(EPD(0x640B58));
			tct.displayText();
			SetMemory(0x640B58, SetTo, txtPtr);
			sca.ResetLastMessage();
			break;
		case 6:
			tct.makeText("\x13\x04",ptr2s(v.Hero_Name[v.Hero_Num[cp]]),"의 저장을 완료하였습니다.");
			txtPtr = dwread_epd(EPD(0x640B58));
			tct.displayText();
			SetMemory(0x640B58, SetTo, txtPtr);
			sca.ResetLastMessage();
			break;
	}
}

function GetExp(cp)
{
	const value = dwread_epd(EPD(0x58A364 + 48 * 166 + 4 * cp));
	
	if (v.Exp_Player[cp] != v.Exp_Group[20 * cp + (v.Hero_Num[cp] - 1)] && Switch(255, Cleared))
	{
		if (v.Hero_Num[cp] <= 20)
		{ v.Exp_Player[cp] = v.Exp_Group[20 * cp + (v.Hero_Num[cp] - 1)]; }
	}
	else if (Switch(255, Set) && v.Exp_Player[cp] != value)
	{
		v.Exp_Player[cp] = value; 
	}
}

function GetCS(cp)
{
	const value = dwread_epd(EPD(0x58A364 + 48 * 164 + 4 * cp));
	
	if (v.CS_Player[cp] != v.CS_Group[cp] && Switch(255, Cleared))
	{
		v.CS_Player[cp] = v.CS_Group[cp]; 
	}
	else if (Switch(255, Set) && v.CS_Player[cp] != value)
	{
		v.CS_Player[cp] = value; 
	}
}


function AddExp(cp, exp)
{
	if (v.Hero_Num[cp] <= 20) 	{ v.Exp_Group[20 * cp + (v.Hero_Num[cp] - 1)] += exp; }
}

function AddCS(cp, cs)
{
	v.CS_Group[cp] += cs;
}