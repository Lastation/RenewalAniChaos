## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import Function as f;
import Function as f
# (Line 3) var x = 0;
x = EUDCreateVariables(1)
_IGVA([x], lambda: [0])
# (Line 4) var y = 0;
y = EUDCreateVariables(1)
_IGVA([y], lambda: [0])
# (Line 6) function main(cp)
# (Line 7) {
@EUDFunc
def f_main(cp):
    # (Line 8) MoveUnit(All, "40 + 3n Zeratul", cp, "Anywhere", "[Skill]HoldPosition");
    # (Line 10) f.BanReturn(cp);
    DoActions(MoveUnit(All, "40 + 3n Zeratul", cp, "Anywhere", "[Skill]HoldPosition"))
    f.BanReturn(cp)
    # (Line 11) f.HoldPosition(cp);
    f.HoldPosition(cp)
    # (Line 13) if (f.delay[cp] == 0)
    if EUDIf()(f.delay[cp] == 0):
        # (Line 14) {
        # (Line 15) if (f.count[cp] == 0)
        if EUDIf()(f.count[cp] == 0):
            # (Line 16) {
            # (Line 17) if (f.loop[cp] == 0)
            if EUDIf()(f.loop[cp] == 0):
                # (Line 18) {
                # (Line 19) f.EdgeShape(cp, 1, "Unclean One (Defiler)", 45, 3, 32);
                f.EdgeShape(cp, 1, "Unclean One (Defiler)", 45, 3, 32)
                # (Line 21) f.NxNSquareShape(cp, 1, "40 + 1n Guardian", 3, 50);
                f.NxNSquareShape(cp, 1, "40 + 1n Guardian", 3, 50)
                # (Line 22) f.NxNSquareShape(cp, 1, "Protoss Dark Archon", 3, 50);
                f.NxNSquareShape(cp, 1, "Protoss Dark Archon", 3, 50)
                # (Line 24) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp);
                # (Line 25) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp))
                # (Line 26) }
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp))
                # (Line 27) if (f.loop[cp] == 1)
            EUDEndIf()
            if EUDIf()(f.loop[cp] == 1):
                # (Line 28) {
                # (Line 29) f.NxNSquareShape(cp, 1, "Kakaru (Twilight)", 3, 50);
                f.NxNSquareShape(cp, 1, "Kakaru (Twilight)", 3, 50)
                # (Line 30) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", cp);
                # (Line 31) }
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", cp))
                # (Line 47) f.SkillWait(cp, 80);
            EUDEndIf()
            f.SkillWait(cp, 80)
            # (Line 49) f.loop[cp] += 1;
            _ARRW(f.loop, cp).__iadd__(1)
            # (Line 51) if (f.loop[cp] == 8)
            if EUDIf()(f.loop[cp] == 8):
                # (Line 52) {
                # (Line 53) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 54) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 55) }
                # (Line 56) }
            EUDEndIf()
            # (Line 57) else if (f.count[cp] == 1)
        if EUDElseIf()(f.count[cp] == 1):
            # (Line 58) {
            # (Line 59) if (f.loop[cp] == 0)
            if EUDIf()(f.loop[cp] == 0):
                # (Line 60) {
                # (Line 61) f.SquareShape(cp, 1, "60 + 1n Hydralisk", 100, 100);
                f.SquareShape(cp, 1, "60 + 1n Hydralisk", 100, 100)
                # (Line 63) f.SquareShape(cp, 1, "40 + 1n Guardian", 100, 100);
                f.SquareShape(cp, 1, "40 + 1n Guardian", 100, 100)
                # (Line 64) f.SquareShapeWithProperty(cp, 1, "60 + 1n Archon", 100, 100, 1);
                f.SquareShapeWithProperty(cp, 1, "60 + 1n Archon", 100, 100, 1)
                # (Line 66) f.SquareShape(cp, 1, "50 + 1n Battlecruiser", 100, 0);
                f.SquareShape(cp, 1, "50 + 1n Battlecruiser", 100, 0)
                # (Line 68) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp);
                # (Line 69) KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp))
                # (Line 70) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp))
                # (Line 72) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp))
                # (Line 73) MoveUnit(All, "60 + 1n Hydralisk", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 74) Order("60 + 1n Hydralisk", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveUnit(All, "60 + 1n Hydralisk", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                # (Line 75) }
                DoActions(Order("60 + 1n Hydralisk", cp, "Anywhere", Attack, f.location[cp]))
                # (Line 76) if (f.loop[cp] == 4)
            EUDEndIf()
            if EUDIf()(f.loop[cp] == 4):
                # (Line 77) {
                # (Line 78) f.SquareShape(cp, 1, "60 + 1n Hydralisk", 100, 0);
                f.SquareShape(cp, 1, "60 + 1n Hydralisk", 100, 0)
                # (Line 79) f.SquareShape(cp, 1, "40 + 1n Mutalisk", 100, 0);
                f.SquareShape(cp, 1, "40 + 1n Mutalisk", 100, 0)
                # (Line 81) f.SquareShape(cp, 1, "40 + 1n Guardian", 100, 0);
                f.SquareShape(cp, 1, "40 + 1n Guardian", 100, 0)
                # (Line 82) f.SquareShapeWithProperty(cp, 1, "60 + 1n Archon", 100, 0, 1);
                f.SquareShapeWithProperty(cp, 1, "60 + 1n Archon", 100, 0, 1)
                # (Line 84) f.SquareShape(cp, 1, "50 + 1n Battlecruiser", 100, 100);
                f.SquareShape(cp, 1, "50 + 1n Battlecruiser", 100, 100)
                # (Line 86) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp);
                # (Line 87) KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp))
                # (Line 88) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp))
                # (Line 90) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp))
                # (Line 91) MoveUnit(All, "60 + 1n Hydralisk", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 92) Order("60 + 1n Hydralisk", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveUnit(All, "60 + 1n Hydralisk", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                # (Line 93) Order("40 + 1n Mutalisk", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(Order("60 + 1n Hydralisk", cp, "Anywhere", Attack, f.location[cp]))
                # (Line 94) }
                DoActions(Order("40 + 1n Mutalisk", cp, "Anywhere", Attack, f.location[cp]))
                # (Line 96) f.SkillWait(cp, 80);
            EUDEndIf()
            f.SkillWait(cp, 80)
            # (Line 98) f.loop[cp] += 1;
            _ARRW(f.loop, cp).__iadd__(1)
            # (Line 100) if (f.loop[cp] == 19)
            if EUDIf()(f.loop[cp] == 19):
                # (Line 101) {
                # (Line 102) KillUnitAt(All, "40 + 1n Mutalisk", "Anywhere", cp);
                # (Line 104) f.count[cp] += 1;
                DoActions(KillUnitAt(All, "40 + 1n Mutalisk", "Anywhere", cp))
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 105) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 106) }
                # (Line 107) }
            EUDEndIf()
            # (Line 108) else if (f.count[cp] == 2)
        if EUDElseIf()(f.count[cp] == 2):
            # (Line 109) {
            # (Line 110) if (f.loop[cp] == 0)
            if EUDIf()(f.loop[cp] == 0):
                # (Line 111) {
                # (Line 112) f.NxNSquareShape(cp, 1, "40 + 1n Guardian", 9, 50);
                f.NxNSquareShape(cp, 1, "40 + 1n Guardian", 9, 50)
                # (Line 113) f.EdgeShape(cp, 1, "Protoss Dark Templar", 45, 3, 150);
                f.EdgeShape(cp, 1, "Protoss Dark Templar", 45, 3, 150)
                # (Line 114) f.EdgeShape(cp, 1, "Protoss Dark Templar", 45, 5, 200);
                f.EdgeShape(cp, 1, "Protoss Dark Templar", 45, 5, 200)
                # (Line 116) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                # (Line 117) Order("Protoss Dark Templar", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 118) Order("40 + 3n Zeratul", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(Order("Protoss Dark Templar", cp, "Anywhere", Attack, f.location[cp]))
                # (Line 120) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp);
                DoActions(Order("40 + 3n Zeratul", cp, "Anywhere", Attack, f.location[cp]))
                # (Line 122) }
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp))
                # (Line 123) if (f.loop[cp] == 9)
            EUDEndIf()
            if EUDIf()(f.loop[cp] == 9):
                # (Line 124) {
                # (Line 125) f.Voice_Routine(cp, 8);
                f.Voice_Routine(cp, 8)
                # (Line 126) }
                # (Line 129) f.SkillWait(cp, 80);
            EUDEndIf()
            f.SkillWait(cp, 80)
            # (Line 131) f.loop[cp] += 1;
            _ARRW(f.loop, cp).__iadd__(1)
            # (Line 133) if (f.loop[cp] == 32)
            if EUDIf()(f.loop[cp] == 32):
                # (Line 134) {
                # (Line 135) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 136) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 137) }
                # (Line 138) }
            EUDEndIf()
            # (Line 139) else if (f.count[cp] == 3)
        if EUDElseIf()(f.count[cp] == 3):
            # (Line 140) {
            # (Line 141) if (f.loop[cp] == 0)
            if EUDIf()(f.loop[cp] == 0):
                # (Line 142) {
                # (Line 143) f.NxNSquareShape(cp, 1, "40 + 1n Mutalisk", 3, 50);
                f.NxNSquareShape(cp, 1, "40 + 1n Mutalisk", 3, 50)
                # (Line 144) f.NxNSquareShape(cp, 1, "Protoss Dark Archon", 3, 50);
                f.NxNSquareShape(cp, 1, "Protoss Dark Archon", 3, 50)
                # (Line 145) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp);
                # (Line 147) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp))
                # (Line 148) Order("40 + 1n Mutalisk", cp, "Anywhere", Attack, "Anywhere");
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 149) }
                DoActions(Order("40 + 1n Mutalisk", cp, "Anywhere", Attack, "Anywhere"))
                # (Line 150) if (f.loop[cp] == 3)
            EUDEndIf()
            if EUDIf()(f.loop[cp] == 3):
                # (Line 151) {
                # (Line 152) RemoveUnitAt(All, "40 + 1n Mutalisk", "Anywhere", cp);
                # (Line 154) f.NxNSquareShape(cp, 1, "40 + 1n Mutalisk", 3, 50);
                DoActions(RemoveUnitAt(All, "40 + 1n Mutalisk", "Anywhere", cp))
                f.NxNSquareShape(cp, 1, "40 + 1n Mutalisk", 3, 50)
                # (Line 155) f.NxNSquareShape(cp, 1, "Protoss Dark Archon", 3, 50);
                f.NxNSquareShape(cp, 1, "Protoss Dark Archon", 3, 50)
                # (Line 156) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp);
                # (Line 158) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp))
                # (Line 159) Order("40 + 1n Mutalisk", cp, "Anywhere", Attack, "Anywhere");
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 160) }
                DoActions(Order("40 + 1n Mutalisk", cp, "Anywhere", Attack, "Anywhere"))
                # (Line 162) f.SkillWait(cp, 80);
            EUDEndIf()
            f.SkillWait(cp, 80)
            # (Line 164) f.loop[cp] += 1;
            _ARRW(f.loop, cp).__iadd__(1)
            # (Line 166) if (f.loop[cp] == 7)
            if EUDIf()(f.loop[cp] == 7):
                # (Line 167) {
                # (Line 168) KillUnitAt(All, "40 + 1n Mutalisk", "Anywhere", cp);
                # (Line 170) f.count[cp] += 1;
                DoActions(KillUnitAt(All, "40 + 1n Mutalisk", "Anywhere", cp))
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 171) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 172) }
                # (Line 173) }
            EUDEndIf()
            # (Line 174) else if (f.count[cp] == 4)
        if EUDElseIf()(f.count[cp] == 4):
            # (Line 175) {
            # (Line 176) if (Bring(cp, AtLeast, 2, "Protoss Arbiter", "[Skill]UseSkill")
            _t19 = EUDIf()
            # (Line 177) )
            if _t19(Bring(cp, AtLeast, 2, "Protoss Arbiter", "[Skill]UseSkill")):
                # (Line 178) {
                # (Line 179) f.Voice_Routine(cp, 9);
                f.Voice_Routine(cp, 9)
                # (Line 180) f.wait[cp] = 0;
                _ARRW(f.wait, cp) << (0)
                # (Line 181) f.count[cp] = 0;
                _ARRW(f.count, cp) << (0)
                # (Line 182) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 183) f.step[cp] = 230;
                _ARRW(f.step, cp) << (230)
                # (Line 184) KillUnitAt(2, "Protoss Arbiter", "[Skill]UseSkill", cp);
                # (Line 185) }
                DoActions(KillUnitAt(2, "Protoss Arbiter", "[Skill]UseSkill", cp))
                # (Line 186) else
                # (Line 187) {
            if EUDElse()():
                # (Line 188) KillUnitAt(All, "40 + 3n Zeratul", "Anywhere", cp);
                # (Line 189) KillUnitAt(All, "Protoss Dark Templar", "Anywhere", cp);
                DoActions(KillUnitAt(All, "40 + 3n Zeratul", "Anywhere", cp))
                # (Line 190) KillUnitAt(All, "40 + 1n Lurker", "Anywhere", cp);
                DoActions(KillUnitAt(All, "Protoss Dark Templar", "Anywhere", cp))
                # (Line 191) KillUnitAt(All, "60 + 1n Hydralisk", "Anywhere", cp);
                DoActions(KillUnitAt(All, "40 + 1n Lurker", "Anywhere", cp))
                # (Line 192) KillUnitAt(All, "Unclean One (Defiler)", "Anywhere", cp);
                DoActions(KillUnitAt(All, "60 + 1n Hydralisk", "Anywhere", cp))
                # (Line 194) f.SkillEnd(cp);
                DoActions(KillUnitAt(All, "Unclean One (Defiler)", "Anywhere", cp))
                f.SkillEnd(cp)
                # (Line 195) }
                # (Line 196) }
            EUDEndIf()
            # (Line 197) }
        EUDEndIf()
        # (Line 198) }
    EUDEndIf()
