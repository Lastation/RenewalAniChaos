## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import Function as f;
import Function as f
# (Line 3) function main(cp)
# (Line 4) {
@EUDFunc
def f_main(cp):
    # (Line 5) if (f.delay[cp] == 0)
    if EUDIf()(f.delay[cp] == 0):
        # (Line 6) {
        # (Line 7) if (f.count[cp] == 0)
        if EUDIf()(f.count[cp] == 0):
            # (Line 8) {
            # (Line 9) RemoveUnitAt(All, "40 + 1n Guardian", "Anywhere", cp);
            # (Line 11) if (f.loop[cp] == 0) { f.Table_Sin(cp, 45, 50); f.Table_Cos(cp, 45, 50); }
            DoActions(RemoveUnitAt(All, "40 + 1n Guardian", "Anywhere", cp))
            if EUDIf()(f.loop[cp] == 0):
                f.Table_Sin(cp, 45, 50)
                f.Table_Cos(cp, 45, 50)
                # (Line 12) else if (f.loop[cp] == 1) { f.Table_Sin(cp, 22, 125); f.Table_Cos(cp, 22, 125); }
            if EUDElseIf()(f.loop[cp] == 1):
                f.Table_Sin(cp, 22, 125)
                f.Table_Cos(cp, 22, 125)
                # (Line 13) else if (f.loop[cp] == 2) { f.Table_Sin(cp, 90, 50); f.Table_Cos(cp, 90, 50); }
            if EUDElseIf()(f.loop[cp] == 2):
                f.Table_Sin(cp, 90, 50)
                f.Table_Cos(cp, 90, 50)
                # (Line 14) else if (f.loop[cp] == 3) { f.Table_Sin(cp, 67, 125); f.Table_Cos(cp, 67, 125); }
            if EUDElseIf()(f.loop[cp] == 3):
                f.Table_Sin(cp, 67, 125)
                f.Table_Cos(cp, 67, 125)
                # (Line 16) f.SquareShape(cp, 1, "40 + 1n Guardian", f.CosAngle[cp], f.SinAngle[cp]);
            EUDEndIf()
            f.SquareShape(cp, 1, "40 + 1n Guardian", f.CosAngle[cp], f.SinAngle[cp])
            # (Line 17) f.SquareShape(cp, 1, "Protoss Dark Archon", f.CosAngle[cp], f.SinAngle[cp]);
            f.SquareShape(cp, 1, "Protoss Dark Archon", f.CosAngle[cp], f.SinAngle[cp])
            # (Line 18) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp);
            # (Line 20) if (f.loop[cp] == 1) { f.Table_Sin(cp, 45, 50); f.Table_Cos(cp, 45, 50); }
            DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp))
            if EUDIf()(f.loop[cp] == 1):
                f.Table_Sin(cp, 45, 50)
                f.Table_Cos(cp, 45, 50)
                # (Line 21) else if (f.loop[cp] == 2) { f.Table_Sin(cp, 22, 125); f.Table_Cos(cp, 22, 125); }
            if EUDElseIf()(f.loop[cp] == 2):
                f.Table_Sin(cp, 22, 125)
                f.Table_Cos(cp, 22, 125)
                # (Line 22) else if (f.loop[cp] == 3) { f.Table_Sin(cp, 90, 50); f.Table_Cos(cp, 90, 50); }
            if EUDElseIf()(f.loop[cp] == 3):
                f.Table_Sin(cp, 90, 50)
                f.Table_Cos(cp, 90, 50)
                # (Line 24) f.SquareShape(cp, 1, "Kakaru (Twilight)", f.CosAngle[cp], f.SinAngle[cp]);
            EUDEndIf()
            f.SquareShape(cp, 1, "Kakaru (Twilight)", f.CosAngle[cp], f.SinAngle[cp])
            # (Line 25) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", cp);
            # (Line 27) f.SquareShape(cp, 1, " Unit. Hoffnung 25000", f.CosAngle[cp], f.SinAngle[cp]);
            DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", cp))
            f.SquareShape(cp, 1, " Unit. Hoffnung 25000", f.CosAngle[cp], f.SinAngle[cp])
            # (Line 28) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp);
            # (Line 30) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
            DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp))
            # (Line 31) Order("40 + 1n Guardian", cp, "Anywhere", Attack, f.location[cp]);
            DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
            # (Line 33) f.SkillWait(cp, 320);
            DoActions(Order("40 + 1n Guardian", cp, "Anywhere", Attack, f.location[cp]))
            f.SkillWait(cp, 320)
            # (Line 35) f.loop[cp] += 1;
            _ARRW(f.loop, cp).__iadd__(1)
            # (Line 37) if (f.loop[cp] == 4)
            if EUDIf()(f.loop[cp] == 4):
                # (Line 38) {
                # (Line 39) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 40) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 41) }
                # (Line 42) }
            EUDEndIf()
            # (Line 43) else if (f.count[cp] == 1)
        if EUDElseIf()(f.count[cp] == 1):
            # (Line 44) {
            # (Line 45) if (f.loop[cp] < 4)
            if EUDIf()(f.loop[cp] >= 4, neg=True):
                # (Line 46) {
                # (Line 47) var x = 64 - 32 * f.loop[cp];
                x = EUDVariable()
                x << (64 - 32 * f.loop[cp])
                # (Line 48) var y = 64;
                y = EUDVariable()
                y << (64)
                # (Line 50) f.SquareShape(cp, 1, "40 + 1n Guardian", x, y);
                f.SquareShape(cp, 1, "40 + 1n Guardian", x, y)
                # (Line 51) f.SquareShape(cp, 1, "Protoss Dark Archon", x, y);
                f.SquareShape(cp, 1, "Protoss Dark Archon", x, y)
                # (Line 52) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp);
                # (Line 53) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp))
                # (Line 55) f.SkillWait(cp, 80);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp))
                f.SkillWait(cp, 80)
                # (Line 56) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 57) }
                # (Line 58) else if (f.loop[cp] < 8)
            if EUDElseIf()(f.loop[cp] >= 8, neg=True):
                # (Line 59) {
                # (Line 60) f.NxNSquareShape(cp, 1, "40 + 1n Guardian", 3, 32);
                f.NxNSquareShape(cp, 1, "40 + 1n Guardian", 3, 32)
                # (Line 61) f.NxNSquareShape(cp, 1, "Protoss Dark Archon", 3, 32);
                f.NxNSquareShape(cp, 1, "Protoss Dark Archon", 3, 32)
                # (Line 62) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp);
                # (Line 63) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp))
                # (Line 65) f.SkillWait(cp, 160);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp))
                f.SkillWait(cp, 160)
                # (Line 67) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 68) }
                # (Line 69) else if (f.loop[cp] == 8)
            if EUDElseIf()(f.loop[cp] == 8):
                # (Line 70) {
                # (Line 71) f.NxNSquareShape(cp, 1, "40 + 1n Guardian", 5, 50);
                f.NxNSquareShape(cp, 1, "40 + 1n Guardian", 5, 50)
                # (Line 72) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp);
                # (Line 74) f.SkillWait(cp, 80);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp))
                f.SkillWait(cp, 80)
                # (Line 76) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 77) }
                # (Line 78) else if (f.loop[cp] == 9)
            if EUDElseIf()(f.loop[cp] == 9):
                # (Line 79) {
                # (Line 80) f.NxNSquareShape(cp, 1, "40 + 1n Guardian", 7, 50);
                f.NxNSquareShape(cp, 1, "40 + 1n Guardian", 7, 50)
                # (Line 81) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp);
                # (Line 83) f.Table_Sin(cp, 22, 75);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp))
                f.Table_Sin(cp, 22, 75)
                # (Line 84) f.Table_Cos(cp, 22, 75);
                f.Table_Cos(cp, 22, 75)
                # (Line 86) f.SquareShape(cp, 1, "40 + 1n Drone", f.CosAngle[cp], f.SinAngle[cp]);
                f.SquareShape(cp, 1, "40 + 1n Drone", f.CosAngle[cp], f.SinAngle[cp])
                # (Line 88) f.Table_Sin(cp, 67, 150);
                f.Table_Sin(cp, 67, 150)
                # (Line 89) f.Table_Cos(cp, 67, 150);
                f.Table_Cos(cp, 67, 150)
                # (Line 91) f.SquareShape(cp, 1, "40 + 1n Drone", f.CosAngle[cp], f.SinAngle[cp]);
                f.SquareShape(cp, 1, "40 + 1n Drone", f.CosAngle[cp], f.SinAngle[cp])
                # (Line 93) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                # (Line 94) MoveUnit(All, "40 + 1n Drone", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 95) Order("40 + 1n Drone", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveUnit(All, "40 + 1n Drone", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                # (Line 97) f.SkillWait(cp, 960);
                DoActions(Order("40 + 1n Drone", cp, "Anywhere", Attack, f.location[cp]))
                f.SkillWait(cp, 960)
                # (Line 99) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 100) }
                # (Line 101) else if (f.loop[cp] < 14)
            if EUDElseIf()(f.loop[cp] >= 14, neg=True):
                # (Line 102) {
                # (Line 103) f.Table_Sin(cp, 22, 75);
                f.Table_Sin(cp, 22, 75)
                # (Line 104) f.Table_Cos(cp, 22, 75);
                f.Table_Cos(cp, 22, 75)
                # (Line 106) f.SquareShape(cp, 4, "Protoss Dark Templar", f.CosAngle[cp], f.SinAngle[cp]);
                f.SquareShape(cp, 4, "Protoss Dark Templar", f.CosAngle[cp], f.SinAngle[cp])
                # (Line 108) f.Table_Sin(cp, 22 + 45 * f.loop[cp], 150);
                f.Table_Sin(cp, 22 + 45 * f.loop[cp], 150)
                # (Line 109) f.Table_Cos(cp, 22 + 45 * f.loop[cp], 150);
                f.Table_Cos(cp, 22 + 45 * f.loop[cp], 150)
                # (Line 111) f.SquareShape(cp, 4, "Protoss Dark Templar", f.CosAngle[cp], f.SinAngle[cp]);
                f.SquareShape(cp, 4, "Protoss Dark Templar", f.CosAngle[cp], f.SinAngle[cp])
                # (Line 113) KillUnitAt(All, "Protoss Dark Templar", "Anywhere", cp);
                # (Line 115) f.SkillWait(cp, 160);
                DoActions(KillUnitAt(All, "Protoss Dark Templar", "Anywhere", cp))
                f.SkillWait(cp, 160)
                # (Line 117) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 118) }
                # (Line 119) else if (f.loop[cp] == 14)
            if EUDElseIf()(f.loop[cp] == 14):
                # (Line 120) {
                # (Line 121) f.SkillWait(cp, 320);
                f.SkillWait(cp, 320)
                # (Line 123) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 124) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 125) }
                # (Line 126) }
            EUDEndIf()
            # (Line 127) else if (f.count[cp] == 2)
        if EUDElseIf()(f.count[cp] == 2):
            # (Line 128) {
            # (Line 129) KillUnitAt(All, "40 + 1n Drone", "Anywhere", cp);
            # (Line 131) f.SkillEnd(cp);
            DoActions(KillUnitAt(All, "40 + 1n Drone", "Anywhere", cp))
            f.SkillEnd(cp)
            # (Line 132) }
            # (Line 133) }
        EUDEndIf()
        # (Line 134) }
    EUDEndIf()
