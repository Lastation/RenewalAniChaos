## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import Function as f;
import Function as f
# (Line 3) function main(cp)
# (Line 4) {
@EUDFunc
def f_main(cp):
    # (Line 5) if (f.delay[cp] == 0)
    if EUDIf()(f.delay[cp] == 0):
        # (Line 6) {
        # (Line 7) if (f.count[cp] == 0)
        if EUDIf()(f.count[cp] == 0):
            # (Line 8) {
            # (Line 9) if (f.loop[cp] == 0)
            if EUDIf()(f.loop[cp] == 0):
                # (Line 10) {
                # (Line 11) f.Table_Sin(cp, 45, 50);
                f.Table_Sin(cp, 45, 50)
                # (Line 12) f.Table_Cos(cp, 45, 50);
                f.Table_Cos(cp, 45, 50)
                # (Line 14) f.SquareShape(cp, 1, "40 + 1n Mutalisk", f.CosAngle[cp], f.SinAngle[cp]);
                f.SquareShape(cp, 1, "40 + 1n Mutalisk", f.CosAngle[cp], f.SinAngle[cp])
                # (Line 15) f.SquareShape(cp, 1, "Protoss Dark Archon", f.CosAngle[cp], f.SinAngle[cp]);
                f.SquareShape(cp, 1, "Protoss Dark Archon", f.CosAngle[cp], f.SinAngle[cp])
                # (Line 17) f.Table_Sin(cp, 22, 125);
                f.Table_Sin(cp, 22, 125)
                # (Line 18) f.Table_Cos(cp, 22, 125);
                f.Table_Cos(cp, 22, 125)
                # (Line 20) f.SquareShape(cp, 1, "40 + 1n Mutalisk", f.CosAngle[cp], f.SinAngle[cp]);
                f.SquareShape(cp, 1, "40 + 1n Mutalisk", f.CosAngle[cp], f.SinAngle[cp])
                # (Line 21) f.SquareShape(cp, 1, "Protoss Dark Archon", f.CosAngle[cp], f.SinAngle[cp]);
                f.SquareShape(cp, 1, "Protoss Dark Archon", f.CosAngle[cp], f.SinAngle[cp])
                # (Line 23) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp);
                # (Line 25) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp))
                # (Line 26) Order("40 + 1n Mutalisk", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 28) f.SkillWait(cp, 160);
                DoActions(Order("40 + 1n Mutalisk", cp, "Anywhere", Attack, f.location[cp]))
                f.SkillWait(cp, 160)
                # (Line 30) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 31) }
                # (Line 32) else if (f.loop[cp] == 1)
            if EUDElseIf()(f.loop[cp] == 1):
                # (Line 33) {
                # (Line 34) RemoveUnitAt(All, "40 + 1n Mutalisk", "Anywhere", cp);
                # (Line 36) f.Table_Sin(cp, 45, 50);
                DoActions(RemoveUnitAt(All, "40 + 1n Mutalisk", "Anywhere", cp))
                f.Table_Sin(cp, 45, 50)
                # (Line 37) f.Table_Cos(cp, 45, 50);
                f.Table_Cos(cp, 45, 50)
                # (Line 39) f.SquareShape(cp, 1, "Kakaru (Twilight)", f.CosAngle[cp], f.SinAngle[cp]);
                f.SquareShape(cp, 1, "Kakaru (Twilight)", f.CosAngle[cp], f.SinAngle[cp])
                # (Line 40) f.SquareShape(cp, 1, " Unit. Hoffnung 25000", f.CosAngle[cp], f.SinAngle[cp]);
                f.SquareShape(cp, 1, " Unit. Hoffnung 25000", f.CosAngle[cp], f.SinAngle[cp])
                # (Line 42) f.Table_Sin(cp, 22, 125);
                f.Table_Sin(cp, 22, 125)
                # (Line 43) f.Table_Cos(cp, 22, 125);
                f.Table_Cos(cp, 22, 125)
                # (Line 45) f.SquareShape(cp, 1, "Kakaru (Twilight)", f.CosAngle[cp], f.SinAngle[cp]);
                f.SquareShape(cp, 1, "Kakaru (Twilight)", f.CosAngle[cp], f.SinAngle[cp])
                # (Line 46) f.SquareShape(cp, 1, " Unit. Hoffnung 25000", f.CosAngle[cp], f.SinAngle[cp]);
                f.SquareShape(cp, 1, " Unit. Hoffnung 25000", f.CosAngle[cp], f.SinAngle[cp])
                # (Line 48) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", cp);
                # (Line 49) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp);
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", cp))
                # (Line 51) f.SkillWait(cp, 160);
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp))
                f.SkillWait(cp, 160)
                # (Line 53) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 54) }
                # (Line 55) else if (f.loop[cp] == 2)
            if EUDElseIf()(f.loop[cp] == 2):
                # (Line 56) {
                # (Line 57) f.Table_Sin(cp, 90, 50);
                f.Table_Sin(cp, 90, 50)
                # (Line 58) f.Table_Cos(cp, 90, 50);
                f.Table_Cos(cp, 90, 50)
                # (Line 60) f.SquareShape(cp, 1, "40 + 1n Mutalisk", f.CosAngle[cp], f.SinAngle[cp]);
                f.SquareShape(cp, 1, "40 + 1n Mutalisk", f.CosAngle[cp], f.SinAngle[cp])
                # (Line 61) f.SquareShape(cp, 1, "Protoss Dark Archon", f.CosAngle[cp], f.SinAngle[cp]);
                f.SquareShape(cp, 1, "Protoss Dark Archon", f.CosAngle[cp], f.SinAngle[cp])
                # (Line 63) f.Table_Sin(cp, 67, 125);
                f.Table_Sin(cp, 67, 125)
                # (Line 64) f.Table_Cos(cp, 67, 125);
                f.Table_Cos(cp, 67, 125)
                # (Line 66) f.SquareShape(cp, 1, "40 + 1n Mutalisk", f.CosAngle[cp], f.SinAngle[cp]);
                f.SquareShape(cp, 1, "40 + 1n Mutalisk", f.CosAngle[cp], f.SinAngle[cp])
                # (Line 67) f.SquareShape(cp, 1, "Protoss Dark Archon", f.CosAngle[cp], f.SinAngle[cp]);
                f.SquareShape(cp, 1, "Protoss Dark Archon", f.CosAngle[cp], f.SinAngle[cp])
                # (Line 69) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp);
                # (Line 71) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp))
                # (Line 72) Order("40 + 1n Mutalisk", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 74) f.SkillWait(cp, 160);
                DoActions(Order("40 + 1n Mutalisk", cp, "Anywhere", Attack, f.location[cp]))
                f.SkillWait(cp, 160)
                # (Line 76) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 77) }
                # (Line 78) else if (f.loop[cp] == 3)
            if EUDElseIf()(f.loop[cp] == 3):
                # (Line 79) {
                # (Line 80) RemoveUnitAt(All, "40 + 1n Mutalisk", "Anywhere", cp);
                # (Line 82) f.Table_Sin(cp, 90, 50);
                DoActions(RemoveUnitAt(All, "40 + 1n Mutalisk", "Anywhere", cp))
                f.Table_Sin(cp, 90, 50)
                # (Line 83) f.Table_Cos(cp, 90, 50);
                f.Table_Cos(cp, 90, 50)
                # (Line 85) f.SquareShape(cp, 1, "Kakaru (Twilight)", f.CosAngle[cp], f.SinAngle[cp]);
                f.SquareShape(cp, 1, "Kakaru (Twilight)", f.CosAngle[cp], f.SinAngle[cp])
                # (Line 86) f.SquareShape(cp, 1, " Unit. Hoffnung 25000", f.CosAngle[cp], f.SinAngle[cp]);
                f.SquareShape(cp, 1, " Unit. Hoffnung 25000", f.CosAngle[cp], f.SinAngle[cp])
                # (Line 88) f.Table_Sin(cp, 67, 125);
                f.Table_Sin(cp, 67, 125)
                # (Line 89) f.Table_Cos(cp, 67, 125);
                f.Table_Cos(cp, 67, 125)
                # (Line 91) f.SquareShape(cp, 1, "Kakaru (Twilight)", f.CosAngle[cp], f.SinAngle[cp]);
                f.SquareShape(cp, 1, "Kakaru (Twilight)", f.CosAngle[cp], f.SinAngle[cp])
                # (Line 92) f.SquareShape(cp, 1, " Unit. Hoffnung 25000", f.CosAngle[cp], f.SinAngle[cp]);
                f.SquareShape(cp, 1, " Unit. Hoffnung 25000", f.CosAngle[cp], f.SinAngle[cp])
                # (Line 94) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", cp);
                # (Line 95) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp);
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", cp))
                # (Line 97) f.SkillWait(cp, 160);
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp))
                f.SkillWait(cp, 160)
                # (Line 99) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 100) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 101) }
                # (Line 102) }
            EUDEndIf()
            # (Line 103) else if (f.count[cp] == 1)
        if EUDElseIf()(f.count[cp] == 1):
            # (Line 104) {
            # (Line 105) if (f.loop[cp] < 2)
            if EUDIf()(f.loop[cp] >= 2, neg=True):
                # (Line 106) {
                # (Line 107) f.Table_Sin(cp, 90 * f.loop[cp] + 45, f.loop[cp] * 75 + 75);
                f.Table_Sin(cp, 90 * f.loop[cp] + 45, f.loop[cp] * 75 + 75)
                # (Line 108) f.Table_Cos(cp, 90 * f.loop[cp] + 45, f.loop[cp] * 75 + 75);
                f.Table_Cos(cp, 90 * f.loop[cp] + 45, f.loop[cp] * 75 + 75)
                # (Line 110) f.SquareShape(cp, 1, " Unit. Hoffnung 25000", f.CosAngle[cp], f.SinAngle[cp]);
                f.SquareShape(cp, 1, " Unit. Hoffnung 25000", f.CosAngle[cp], f.SinAngle[cp])
                # (Line 111) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp);
                # (Line 113) f.Table_Sin(cp, 90 * f.loop[cp], f.loop[cp] * 75 + 75);
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp))
                f.Table_Sin(cp, 90 * f.loop[cp], f.loop[cp] * 75 + 75)
                # (Line 114) f.Table_Cos(cp, 90 * f.loop[cp], f.loop[cp] * 75 + 75);
                f.Table_Cos(cp, 90 * f.loop[cp], f.loop[cp] * 75 + 75)
                # (Line 116) f.SquareShape(cp, 1, " Unit. Hoffnung 25000", f.CosAngle[cp], f.SinAngle[cp]);
                f.SquareShape(cp, 1, " Unit. Hoffnung 25000", f.CosAngle[cp], f.SinAngle[cp])
                # (Line 117) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp);
                # (Line 119) f.SkillWait(cp, 160);
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp))
                f.SkillWait(cp, 160)
                # (Line 120) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 121) }
                # (Line 122) else if (f.loop[cp] == 2)
            if EUDElseIf()(f.loop[cp] == 2):
                # (Line 123) {
                # (Line 124) f.Table_Sin(cp, 90 * f.loop[cp] + 45, 150);
                f.Table_Sin(cp, 90 * f.loop[cp] + 45, 150)
                # (Line 125) f.Table_Cos(cp, 90 * f.loop[cp] + 45, 150);
                f.Table_Cos(cp, 90 * f.loop[cp] + 45, 150)
                # (Line 127) f.SquareShape(cp, 1, "40 + 1n Guardian", f.CosAngle[cp], f.SinAngle[cp]);
                f.SquareShape(cp, 1, "40 + 1n Guardian", f.CosAngle[cp], f.SinAngle[cp])
                # (Line 129) f.Table_Sin(cp, 90 * f.loop[cp], 150);
                f.Table_Sin(cp, 90 * f.loop[cp], 150)
                # (Line 130) f.Table_Cos(cp, 90 * f.loop[cp], 150);
                f.Table_Cos(cp, 90 * f.loop[cp], 150)
                # (Line 132) f.SquareShape(cp, 1, "40 + 1n Guardian", f.CosAngle[cp], f.SinAngle[cp]);
                f.SquareShape(cp, 1, "40 + 1n Guardian", f.CosAngle[cp], f.SinAngle[cp])
                # (Line 134) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                # (Line 135) Order("40 + 1n Guardian", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 137) f.SkillWait(cp, 320);
                DoActions(Order("40 + 1n Guardian", cp, "Anywhere", Attack, f.location[cp]))
                f.SkillWait(cp, 320)
                # (Line 139) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 140) }
                # (Line 141) else if (f.loop[cp] == 3)
            if EUDElseIf()(f.loop[cp] == 3):
                # (Line 142) {
                # (Line 143) var x = 32;
                x = EUDVariable()
                x << (32)
                # (Line 144) var y = 32;
                y = EUDVariable()
                y << (32)
                # (Line 146) f.SquareShape(cp, 1, "40 + 1n Wraith", x, y);
                f.SquareShape(cp, 1, "40 + 1n Wraith", x, y)
                # (Line 147) f.DoubleShape(cp, 1, "60 + 1n Archon", x, y);
                f.DoubleShape(cp, 1, "60 + 1n Archon", x, y)
                # (Line 148) f.DoubleShape(cp, 1, "Protoss Dark Archon", -x, y);
                f.DoubleShape(cp, 1, "Protoss Dark Archon", -x, y)
                # (Line 149) KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp);
                # (Line 150) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp))
                # (Line 152) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp))
                # (Line 153) Order("40 + 1n Wraith", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 155) f.SkillWait(cp, 160);
                DoActions(Order("40 + 1n Wraith", cp, "Anywhere", Attack, f.location[cp]))
                f.SkillWait(cp, 160)
                # (Line 157) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 158) }
                # (Line 159) else if (f.loop[cp] == 4)
            if EUDElseIf()(f.loop[cp] == 4):
                # (Line 160) {
                # (Line 161) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", cp);
                # (Line 163) f.SkillWait(cp, 80);
                DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", cp))
                f.SkillWait(cp, 80)
                # (Line 165) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 166) }
                # (Line 167) else if (f.loop[cp] == 5)
            if EUDElseIf()(f.loop[cp] == 5):
                # (Line 168) {
                # (Line 169) var x = 32;
                x = EUDVariable()
                x << (32)
                # (Line 170) var y = 32;
                y = EUDVariable()
                y << (32)
                # (Line 172) f.SquareShape(cp, 1, "40 + 1n Mojo", x, y);
                f.SquareShape(cp, 1, "40 + 1n Mojo", x, y)
                # (Line 173) f.DoubleShape(cp, 1, "60 + 1n Archon", -x, y);
                f.DoubleShape(cp, 1, "60 + 1n Archon", -x, y)
                # (Line 174) f.DoubleShape(cp, 1, "Protoss Dark Archon", x, y);
                f.DoubleShape(cp, 1, "Protoss Dark Archon", x, y)
                # (Line 175) KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp);
                # (Line 176) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp))
                # (Line 178) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp))
                # (Line 179) Order("40 + 1n Mojo", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 181) f.SkillWait(cp, 160);
                DoActions(Order("40 + 1n Mojo", cp, "Anywhere", Attack, f.location[cp]))
                f.SkillWait(cp, 160)
                # (Line 183) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 184) }
                # (Line 185) else if (f.loop[cp] == 6)
            if EUDElseIf()(f.loop[cp] == 6):
                # (Line 186) {
                # (Line 187) KillUnitAt(All, "40 + 1n Mojo", "Anywhere", cp);
                # (Line 189) f.SkillWait(cp, 80);
                DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", cp))
                f.SkillWait(cp, 80)
                # (Line 191) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 192) }
                # (Line 193) else if (f.loop[cp] == 7)
            if EUDElseIf()(f.loop[cp] == 7):
                # (Line 194) {
                # (Line 195) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp);
                # (Line 197) f.SkillWait(cp, 80);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp))
                f.SkillWait(cp, 80)
                # (Line 199) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 200) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 201) }
                # (Line 202) }
            EUDEndIf()
            # (Line 203) else if (f.count[cp] == 2)
        if EUDElseIf()(f.count[cp] == 2):
            # (Line 204) {
            # (Line 205) f.SkillEnd(cp);
            f.SkillEnd(cp)
            # (Line 206) }
            # (Line 207) }
        EUDEndIf()
        # (Line 208) }
    EUDEndIf()
