## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import PluginVariables as msqcvar;
import PluginVariables as msqcvar
# (Line 2) import Function as f;
import Function as f
# (Line 4) function main(cp)
# (Line 5) {
@EUDFunc
def f_main(cp):
    # (Line 6) f.HoldPosition(cp);
    f.HoldPosition(cp)
    # (Line 7) f.BanReturn(cp);
    f.BanReturn(cp)
    # (Line 8) MoveLocation("24.Nanami_Bozo", f.heroID[cp], cp, "Anywhere");
    # (Line 10) if (f.delay[cp] == 0)
    DoActions(MoveLocation("24.Nanami_Bozo", f.heroID[cp], cp, "Anywhere"))
    if EUDIf()(f.delay[cp] == 0):
        # (Line 11) {
        # (Line 12) if (f.count[cp] == 0)
        if EUDIf()(f.count[cp] == 0):
            # (Line 13) {
            # (Line 14) if (f.loop[cp] == 0)
            if EUDIf()(f.loop[cp] == 0):
                # (Line 15) {
                # (Line 16) if (cp < 3) SetSwitch("Passive - Nanami1", Set);
                if EUDIf()(cp >= 3, neg=True):
                    # (Line 17) else SetSwitch("Passive - Nanami2", Set);
                    DoActions(SetSwitch("Passive - Nanami1", Set))
                if EUDElse()():
                    # (Line 19) f.DotShape(cp, 1, "60 + 1n Archon", -100, 100);
                    DoActions(SetSwitch("Passive - Nanami2", Set))
                EUDEndIf()
                f.DotShape(cp, 1, "60 + 1n Archon", -100, 100)
                # (Line 20) f.DotShape(cp, 1, "60 + 1n Siege", -100, 100);
                f.DotShape(cp, 1, "60 + 1n Siege", -100, 100)
                # (Line 21) KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp);
                # (Line 23) f.SkillWait(cp, 160);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp))
                f.SkillWait(cp, 160)
                # (Line 25) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 26) }
                # (Line 27) else if (f.loop[cp] == 1)
            if EUDElseIf()(f.loop[cp] == 1):
                # (Line 28) {
                # (Line 29) f.DotShape(cp, 1, "60 + 1n Archon", 100, -100);
                f.DotShape(cp, 1, "60 + 1n Archon", 100, -100)
                # (Line 30) f.DotShape(cp, 1, "60 + 1n Siege", 100, -100);
                f.DotShape(cp, 1, "60 + 1n Siege", 100, -100)
                # (Line 31) KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp);
                # (Line 33) f.SkillWait(cp, 160);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp))
                f.SkillWait(cp, 160)
                # (Line 35) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 36) }
                # (Line 37) else if (f.loop[cp] == 2)
            if EUDElseIf()(f.loop[cp] == 2):
                # (Line 38) {
                # (Line 39) f.DotShape(cp, 1, "60 + 1n Archon", 100, 100);
                f.DotShape(cp, 1, "60 + 1n Archon", 100, 100)
                # (Line 40) f.DotShape(cp, 1, "60 + 1n Siege", 100, 100);
                f.DotShape(cp, 1, "60 + 1n Siege", 100, 100)
                # (Line 41) KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp);
                # (Line 43) f.SkillWait(cp, 160);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp))
                f.SkillWait(cp, 160)
                # (Line 45) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 46) }
                # (Line 47) else if (f.loop[cp] == 3)
            if EUDElseIf()(f.loop[cp] == 3):
                # (Line 48) {
                # (Line 49) f.DotShape(cp, 1, "60 + 1n Archon", -100, -100);
                f.DotShape(cp, 1, "60 + 1n Archon", -100, -100)
                # (Line 50) f.DotShape(cp, 1, "60 + 1n Siege", -100, -100);
                f.DotShape(cp, 1, "60 + 1n Siege", -100, -100)
                # (Line 51) KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp);
                # (Line 53) f.SkillWait(cp, 160);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp))
                f.SkillWait(cp, 160)
                # (Line 55) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 56) }
                # (Line 57) else if (f.loop[cp] == 4)
            if EUDElseIf()(f.loop[cp] == 4):
                # (Line 58) {
                # (Line 59) f.DotShape(cp, 1, " Unit. Hoffnung 25000", -200, 0);
                f.DotShape(cp, 1, " Unit. Hoffnung 25000", -200, 0)
                # (Line 60) f.DotShape(cp, 1, "60 + 1n Siege", -200, 0);
                f.DotShape(cp, 1, "60 + 1n Siege", -200, 0)
                # (Line 61) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp);
                # (Line 63) f.SkillWait(cp, 160);
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp))
                f.SkillWait(cp, 160)
                # (Line 65) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 66) }
                # (Line 67) else if (f.loop[cp] == 5)
            if EUDElseIf()(f.loop[cp] == 5):
                # (Line 68) {
                # (Line 69) f.DotShape(cp, 1, " Unit. Hoffnung 25000", 200, 0);
                f.DotShape(cp, 1, " Unit. Hoffnung 25000", 200, 0)
                # (Line 70) f.DotShape(cp, 1, "60 + 1n Siege", 200, 0);
                f.DotShape(cp, 1, "60 + 1n Siege", 200, 0)
                # (Line 71) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp);
                # (Line 73) f.SkillWait(cp, 160);
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp))
                f.SkillWait(cp, 160)
                # (Line 75) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 76) }
                # (Line 77) else if (f.loop[cp] == 6)
            if EUDElseIf()(f.loop[cp] == 6):
                # (Line 78) {
                # (Line 79) f.DotShape(cp, 1, " Unit. Hoffnung 25000", 0, 200);
                f.DotShape(cp, 1, " Unit. Hoffnung 25000", 0, 200)
                # (Line 80) f.DotShape(cp, 1, "60 + 1n Siege", 0, 200);
                f.DotShape(cp, 1, "60 + 1n Siege", 0, 200)
                # (Line 81) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp);
                # (Line 83) f.SkillWait(cp, 160);
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp))
                f.SkillWait(cp, 160)
                # (Line 85) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 86) }
                # (Line 87) else if (f.loop[cp] == 7)
            if EUDElseIf()(f.loop[cp] == 7):
                # (Line 88) {
                # (Line 89) f.DotShape(cp, 1, " Unit. Hoffnung 25000", 0, -200);
                f.DotShape(cp, 1, " Unit. Hoffnung 25000", 0, -200)
                # (Line 90) f.DotShape(cp, 1, "60 + 1n Siege", 0, -200);
                f.DotShape(cp, 1, "60 + 1n Siege", 0, -200)
                # (Line 91) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp);
                # (Line 93) f.SkillWait(cp, 160);
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp))
                f.SkillWait(cp, 160)
                # (Line 95) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 96) }
                # (Line 97) else if (f.loop[cp] == 8)
            if EUDElseIf()(f.loop[cp] == 8):
                # (Line 98) {
                # (Line 99) f.EdgeShape(cp, 1, " Unit. Hoffnung 25000", 0, 7, 150);
                f.EdgeShape(cp, 1, " Unit. Hoffnung 25000", 0, 7, 150)
                # (Line 100) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp);
                # (Line 102) f.SkillWait(cp, 160);
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp))
                f.SkillWait(cp, 160)
                # (Line 104) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 105) }
                # (Line 106) else if (f.loop[cp] == 9)
            if EUDElseIf()(f.loop[cp] == 9):
                # (Line 107) {
                # (Line 108) f.EdgeShape(cp, 1, " Unit. Hoffnung 25000", 45, 7, 150);
                f.EdgeShape(cp, 1, " Unit. Hoffnung 25000", 45, 7, 150)
                # (Line 109) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp);
                # (Line 110) f.EdgeShape(cp, 1, "60 + 1n Danimoth", 0, 3, 150);
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp))
                f.EdgeShape(cp, 1, "60 + 1n Danimoth", 0, 3, 150)
                # (Line 112) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                # (Line 113) Order("60 + 1n Danimoth", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 115) f.SkillWait(cp, 1840);
                DoActions(Order("60 + 1n Danimoth", cp, "Anywhere", Attack, f.location[cp]))
                f.SkillWait(cp, 1840)
                # (Line 117) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 118) }
                # (Line 119) else if (f.loop[cp] == 10)
            if EUDElseIf()(f.loop[cp] == 10):
                # (Line 120) {
                # (Line 121) f.SkillWait(cp, 80);
                f.SkillWait(cp, 80)
                # (Line 123) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 124) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 125) }
                # (Line 126) }
            EUDEndIf()
            # (Line 127) else if (f.count[cp] == 1)
        if EUDElseIf()(f.count[cp] == 1):
            # (Line 128) {
            # (Line 129) if (f.loop[cp] == 0)
            if EUDIf()(f.loop[cp] == 0):
                # (Line 130) {
                # (Line 131) f.EdgeShape(cp, 1, "60 + 1n High Templar", 45, 5, 100);
                f.EdgeShape(cp, 1, "60 + 1n High Templar", 45, 5, 100)
                # (Line 132) KillUnitAt(All, "60 + 1n High Templar", "Anywhere", cp);
                # (Line 134) f.SkillWait(cp, 160);
                DoActions(KillUnitAt(All, "60 + 1n High Templar", "Anywhere", cp))
                f.SkillWait(cp, 160)
                # (Line 136) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 137) }
                # (Line 138) else if (f.loop[cp] == 1)
            if EUDElseIf()(f.loop[cp] == 1):
                # (Line 139) {
                # (Line 140) f.EdgeShape(cp, 1, "60 + 1n High Templar", 0, 5, 100);
                f.EdgeShape(cp, 1, "60 + 1n High Templar", 0, 5, 100)
                # (Line 141) KillUnitAt(All, "60 + 1n High Templar", "Anywhere", cp);
                # (Line 143) f.SkillWait(cp, 160);
                DoActions(KillUnitAt(All, "60 + 1n High Templar", "Anywhere", cp))
                f.SkillWait(cp, 160)
                # (Line 145) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 146) }
                # (Line 147) else if (f.loop[cp] == 2)
            if EUDElseIf()(f.loop[cp] == 2):
                # (Line 148) {
                # (Line 149) f.EdgeShape(cp, 1, "60 + 1n High Templar", 45, 5, 150);
                f.EdgeShape(cp, 1, "60 + 1n High Templar", 45, 5, 150)
                # (Line 150) KillUnitAt(All, "60 + 1n High Templar", "Anywhere", cp);
                # (Line 152) f.SkillWait(cp, 160);
                DoActions(KillUnitAt(All, "60 + 1n High Templar", "Anywhere", cp))
                f.SkillWait(cp, 160)
                # (Line 154) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 155) }
                # (Line 156) else if (f.loop[cp] == 3)
            if EUDElseIf()(f.loop[cp] == 3):
                # (Line 157) {
                # (Line 158) f.EdgeShape(cp, 1, "60 + 1n High Templar", 0, 5, 150);
                f.EdgeShape(cp, 1, "60 + 1n High Templar", 0, 5, 150)
                # (Line 159) KillUnitAt(All, "60 + 1n High Templar", "Anywhere", cp);
                # (Line 161) f.SkillWait(cp, 160);
                DoActions(KillUnitAt(All, "60 + 1n High Templar", "Anywhere", cp))
                f.SkillWait(cp, 160)
                # (Line 163) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 164) }
                # (Line 165) else if (f.loop[cp] == 4)
            if EUDElseIf()(f.loop[cp] == 4):
                # (Line 166) {
                # (Line 167) f.EdgeShape(cp, 1, "100 + 1n Dragoon", 45, 5, 150);
                f.EdgeShape(cp, 1, "100 + 1n Dragoon", 45, 5, 150)
                # (Line 168) KillUnitAt(All, "100 + 1n Dragoon", "Anywhere", cp);
                # (Line 170) f.EdgeShape(cp, 1, "40 + 1n Mojo", 45, 3, 150);
                DoActions(KillUnitAt(All, "100 + 1n Dragoon", "Anywhere", cp))
                f.EdgeShape(cp, 1, "40 + 1n Mojo", 45, 3, 150)
                # (Line 171) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                # (Line 172) Order("40 + 1n Mojo", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 174) f.SkillWait(cp, 160);
                DoActions(Order("40 + 1n Mojo", cp, "Anywhere", Attack, f.location[cp]))
                f.SkillWait(cp, 160)
                # (Line 176) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 177) }
                # (Line 178) else if (f.loop[cp] == 5)
            if EUDElseIf()(f.loop[cp] == 5):
                # (Line 179) {
                # (Line 180) f.EdgeShape(cp, 1, "100 + 1n Dragoon", 0, 5, 150);
                f.EdgeShape(cp, 1, "100 + 1n Dragoon", 0, 5, 150)
                # (Line 181) KillUnitAt(All, "100 + 1n Dragoon", "Anywhere", cp);
                # (Line 183) f.SkillWait(cp, 1120);
                DoActions(KillUnitAt(All, "100 + 1n Dragoon", "Anywhere", cp))
                f.SkillWait(cp, 1120)
                # (Line 185) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 186) }
                # (Line 187) else if (f.loop[cp] == 6)
            if EUDElseIf()(f.loop[cp] == 6):
                # (Line 188) {
                # (Line 189) f.SkillWait(cp, 80);
                f.SkillWait(cp, 80)
                # (Line 191) f.Voice_Routine(cp, 7);
                f.Voice_Routine(cp, 7)
                # (Line 193) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 194) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 195) f.loopC[cp] = 0;
                _ARRW(f.loopC, cp) << (0)
                # (Line 196) }
                # (Line 198) }
            EUDEndIf()
            # (Line 199) else if (f.count[cp] == 2)
        if EUDElseIf()(f.count[cp] == 2):
            # (Line 200) {
            # (Line 201) if (f.loop[cp] == 0)
            if EUDIf()(f.loop[cp] == 0):
                # (Line 202) {
                # (Line 203) f.EdgeShape(cp, 1, "60 + 1n High Templar", 45, 3, 100);
                f.EdgeShape(cp, 1, "60 + 1n High Templar", 45, 3, 100)
                # (Line 204) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                # (Line 205) MoveUnit(All, "60 + 1n High Templar", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 206) Order("60 + 1n High Templar", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveUnit(All, "60 + 1n High Templar", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                # (Line 208) f.SkillWait(cp, 3120);
                DoActions(Order("60 + 1n High Templar", cp, "Anywhere", Attack, f.location[cp]))
                f.SkillWait(cp, 3120)
                # (Line 210) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 211) }
                # (Line 212) else if (f.loop[cp] == 1)
            if EUDElseIf()(f.loop[cp] == 1):
                # (Line 213) {
                # (Line 214) f.SkillWait(cp, 80);
                f.SkillWait(cp, 80)
                # (Line 216) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 217) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 218) }
                # (Line 220) }
            EUDEndIf()
            # (Line 222) else if (f.count[cp] == 3)
        if EUDElseIf()(f.count[cp] == 3):
            # (Line 223) {
            # (Line 224) KillUnitAt(All, "60 + 1n Danimoth", "Anywhere", cp);
            # (Line 225) KillUnitAt(All, "60 + 1n Siege", "Anywhere", cp);
            DoActions(KillUnitAt(All, "60 + 1n Danimoth", "Anywhere", cp))
            # (Line 226) KillUnitAt(All, "40 + 1n Mojo", "Anywhere", cp);
            DoActions(KillUnitAt(All, "60 + 1n Siege", "Anywhere", cp))
            # (Line 227) KillUnitAt(All, "60 + 1n High Templar", "Anywhere", cp);
            DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", cp))
            # (Line 228) SetSwitch("Passive - Nanami1", Clear);
            DoActions(KillUnitAt(All, "60 + 1n High Templar", "Anywhere", cp))
            # (Line 229) SetSwitch("Passive - Nanami2", Clear);
            DoActions(SetSwitch("Passive - Nanami1", Clear))
            # (Line 231) f.SkillEnd(cp);
            DoActions(SetSwitch("Passive - Nanami2", Clear))
            f.SkillEnd(cp)
            # (Line 232) }
            # (Line 233) }
        EUDEndIf()
        # (Line 234) if (f.delayB[cp] == 0)
    EUDEndIf()
    if EUDIf()(f.delayB[cp] == 0):
        # (Line 235) {
        # (Line 236) if (f.count[cp] < 3)
        if EUDIf()(f.count[cp] >= 3, neg=True):
            # (Line 237) {
            # (Line 238) if (f.loopB[cp] == 0)
            if EUDIf()(f.loopB[cp] == 0):
                # (Line 239) {
                # (Line 240) f.SquareShape(cp, 1, " Unit. Schnee", 75, 75);
                f.SquareShape(cp, 1, " Unit. Schnee", 75, 75)
                # (Line 242) KillUnitAt(All, " Unit. Schnee", "Anywhere", cp);
                # (Line 244) f.SkillWaitB(cp, 160);
                DoActions(KillUnitAt(All, " Unit. Schnee", "Anywhere", cp))
                f.SkillWaitB(cp, 160)
                # (Line 246) f.loopB[cp] += 1;
                _ARRW(f.loopB, cp).__iadd__(1)
                # (Line 247) }
                # (Line 248) else if (f.loopB[cp] == 1)
            if EUDElseIf()(f.loopB[cp] == 1):
                # (Line 249) {
                # (Line 250) f.SquareShape(cp, 1, "60 + 1n Archon", 150, 0);
                f.SquareShape(cp, 1, "60 + 1n Archon", 150, 0)
                # (Line 252) KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp);
                # (Line 254) f.SkillWaitB(cp, 160);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp))
                f.SkillWaitB(cp, 160)
                # (Line 256) f.loopB[cp] += 1;
                _ARRW(f.loopB, cp).__iadd__(1)
                # (Line 257) }
                # (Line 258) else if (f.loopB[cp] == 2)
            if EUDElseIf()(f.loopB[cp] == 2):
                # (Line 259) {
                # (Line 260) f.SquareShape(cp, 1, "Protoss Dark Archon", 150, 75);
                f.SquareShape(cp, 1, "Protoss Dark Archon", 150, 75)
                # (Line 262) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp);
                # (Line 264) f.SkillWaitB(cp, 160);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp))
                f.SkillWaitB(cp, 160)
                # (Line 266) f.loopB[cp] += 1;
                _ARRW(f.loopB, cp).__iadd__(1)
                # (Line 267) }
                # (Line 268) else if (f.loopB[cp] == 3)
            if EUDElseIf()(f.loopB[cp] == 3):
                # (Line 269) {
                # (Line 270) f.SquareShape(cp, 1, "60 + 1n Archon", 150, 150);
                f.SquareShape(cp, 1, "60 + 1n Archon", 150, 150)
                # (Line 272) KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp);
                # (Line 274) f.SkillWaitB(cp, 160);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp))
                f.SkillWaitB(cp, 160)
                # (Line 276) f.loopB[cp] += 1;
                _ARRW(f.loopB, cp).__iadd__(1)
                # (Line 277) }
                # (Line 278) else if (f.loopB[cp] == 4)
            if EUDElseIf()(f.loopB[cp] == 4):
                # (Line 279) {
                # (Line 280) f.SquareShape(cp, 1, "Protoss Dark Archon", 75, 150);
                f.SquareShape(cp, 1, "Protoss Dark Archon", 75, 150)
                # (Line 282) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp);
                # (Line 284) f.SkillWaitB(cp, 160);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp))
                f.SkillWaitB(cp, 160)
                # (Line 286) f.loopB[cp] = 0;
                _ARRW(f.loopB, cp) << (0)
                # (Line 287) }
                # (Line 288) }
            EUDEndIf()
            # (Line 289) }
        EUDEndIf()
        # (Line 290) if (f.delayC[cp] == 0)
    EUDEndIf()
    if EUDIf()(f.delayC[cp] == 0):
        # (Line 291) {
        # (Line 292) if (f.count[cp] < 2 && f.count[cp] > 0)
        if EUDIf()(EUDSCAnd()(f.count[cp] >= 2, neg=True)(f.count[cp] <= 0, neg=True)()):
            # (Line 293) {
            # (Line 294) if (f.loopC[cp] == 8) f.loopC[cp] = 0;
            if EUDIf()(f.loopC[cp] == 8):
                _ARRW(f.loopC, cp) << (0)
                # (Line 295) if (f.loopC[cp] < 4)
            EUDEndIf()
            if EUDIf()(f.loopC[cp] >= 4, neg=True):
                # (Line 296) {
                # (Line 297) f.DotShape(cp, 1, " Unit. Schnee", 160 - 40 * f.loopC[cp], 40 * f.loopC[cp]);
                f.DotShape(cp, 1, " Unit. Schnee", 160 - 40 * f.loopC[cp], 40 * f.loopC[cp])
                # (Line 298) f.DotShape(cp, 1, " Unit. Schnee", -160 + 40 * f.loopC[cp], -40 * f.loopC[cp]);
                f.DotShape(cp, 1, " Unit. Schnee", -160 + 40 * f.loopC[cp], -40 * f.loopC[cp])
                # (Line 299) f.DotShape(cp, 1, "40 + 1n Zealot", -40 * f.loopC[cp], 160 - 40 * f.loopC[cp]);
                f.DotShape(cp, 1, "40 + 1n Zealot", -40 * f.loopC[cp], 160 - 40 * f.loopC[cp])
                # (Line 300) f.DotShape(cp, 1, "40 + 1n Zealot", 40 * f.loopC[cp], -160 + 40 * f.loopC[cp]);
                f.DotShape(cp, 1, "40 + 1n Zealot", 40 * f.loopC[cp], -160 + 40 * f.loopC[cp])
                # (Line 302) KillUnitAt(All, " Unit. Schnee", "Anywhere", cp);
                # (Line 303) KillUnitAt(All, "40 + 1n Zealot", "Anywhere", cp);
                DoActions(KillUnitAt(All, " Unit. Schnee", "Anywhere", cp))
                # (Line 305) f.SkillWaitC(cp, 320);
                DoActions(KillUnitAt(All, "40 + 1n Zealot", "Anywhere", cp))
                f.SkillWaitC(cp, 320)
                # (Line 307) f.loopC[cp] += 1;
                _ARRW(f.loopC, cp).__iadd__(1)
                # (Line 308) }
                # (Line 309) else if (f.loopC[cp] < 8)
            if EUDElseIf()(f.loopC[cp] >= 8, neg=True):
                # (Line 310) {
                # (Line 311) f.DotShape(cp, 1, " Unit. Schnee", -40 * (f.loopC[cp] - 4), 160 - 40 * (f.loopC[cp] - 4));
                f.DotShape(cp, 1, " Unit. Schnee", -40 * (f.loopC[cp] - 4), 160 - 40 * (f.loopC[cp] - 4))
                # (Line 312) f.DotShape(cp, 1, " Unit. Schnee", 40 * (f.loopC[cp] - 4), -160 + 40 * (f.loopC[cp] - 4));
                f.DotShape(cp, 1, " Unit. Schnee", 40 * (f.loopC[cp] - 4), -160 + 40 * (f.loopC[cp] - 4))
                # (Line 313) f.DotShape(cp, 1, "40 + 1n Zealot", 160 - 40 * (f.loopC[cp] - 4), 40 * (f.loopC[cp] - 4));
                f.DotShape(cp, 1, "40 + 1n Zealot", 160 - 40 * (f.loopC[cp] - 4), 40 * (f.loopC[cp] - 4))
                # (Line 314) f.DotShape(cp, 1, "40 + 1n Zealot", -160 + 40 * (f.loopC[cp] - 4), -40 * (f.loopC[cp] - 4));
                f.DotShape(cp, 1, "40 + 1n Zealot", -160 + 40 * (f.loopC[cp] - 4), -40 * (f.loopC[cp] - 4))
                # (Line 316) KillUnitAt(All, " Unit. Schnee", "Anywhere", cp);
                # (Line 317) KillUnitAt(All, "40 + 1n Zealot", "Anywhere", cp);
                DoActions(KillUnitAt(All, " Unit. Schnee", "Anywhere", cp))
                # (Line 319) f.SkillWaitC(cp, 320);
                DoActions(KillUnitAt(All, "40 + 1n Zealot", "Anywhere", cp))
                f.SkillWaitC(cp, 320)
                # (Line 321) f.loopC[cp] += 1;
                _ARRW(f.loopC, cp).__iadd__(1)
                # (Line 322) }
                # (Line 323) }
            EUDEndIf()
            # (Line 324) else if (f.count[cp] < 3 && f.count[cp] > 1)
        if EUDElseIf()(EUDSCAnd()(f.count[cp] >= 3, neg=True)(f.count[cp] <= 1, neg=True)()):
            # (Line 325) {
            # (Line 326) if (f.loopC[cp] == 2) f.loopC[cp] = 0;
            if EUDIf()(f.loopC[cp] == 2):
                _ARRW(f.loopC, cp) << (0)
                # (Line 327) if (f.loopC[cp] < 2)
            EUDEndIf()
            if EUDIf()(f.loopC[cp] >= 2, neg=True):
                # (Line 328) {
                # (Line 329) f.Table_Sin(cp, 22 + 45 * f.loopC[cp], 100 + 50 * f.loopC[cp]);
                f.Table_Sin(cp, 22 + 45 * f.loopC[cp], 100 + 50 * f.loopC[cp])
                # (Line 330) f.Table_Cos(cp, 22 + 45 * f.loopC[cp], 100 + 50 * f.loopC[cp]);
                f.Table_Cos(cp, 22 + 45 * f.loopC[cp], 100 + 50 * f.loopC[cp])
                # (Line 332) f.NxNSquareShapeAt(cp, 1, " Unit. Schnee", 3, 32, f.CosAngle[cp], f.SinAngle[cp]);
                f.NxNSquareShapeAt(cp, 1, " Unit. Schnee", 3, 32, f.CosAngle[cp], f.SinAngle[cp])
                # (Line 333) f.NxNSquareShapeAt(cp, 1, " Unit. Schnee", 3, 32, -f.CosAngle[cp], -f.SinAngle[cp]);
                f.NxNSquareShapeAt(cp, 1, " Unit. Schnee", 3, 32, -f.CosAngle[cp], -f.SinAngle[cp])
                # (Line 334) f.NxNSquareShapeAt(cp, 1, " Unit. Schnee", 3, 32, -f.SinAngle[cp], f.CosAngle[cp]);
                f.NxNSquareShapeAt(cp, 1, " Unit. Schnee", 3, 32, -f.SinAngle[cp], f.CosAngle[cp])
                # (Line 335) f.NxNSquareShapeAt(cp, 1, " Unit. Schnee", 3, 32, f.SinAngle[cp], -f.CosAngle[cp]);
                f.NxNSquareShapeAt(cp, 1, " Unit. Schnee", 3, 32, f.SinAngle[cp], -f.CosAngle[cp])
                # (Line 337) KillUnitAt(All, " Unit. Schnee", "Anywhere", cp);
                # (Line 339) f.SkillWaitC(cp, 320);
                DoActions(KillUnitAt(All, " Unit. Schnee", "Anywhere", cp))
                f.SkillWaitC(cp, 320)
                # (Line 341) f.loopC[cp] += 1;
                _ARRW(f.loopC, cp).__iadd__(1)
                # (Line 342) }
                # (Line 343) }
            EUDEndIf()
            # (Line 346) }
        EUDEndIf()
        # (Line 347) }
    EUDEndIf()
