## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import customText as tct;
import customText as tct
# (Line 2) import Variable as v;
import Variable as v
# (Line 4) var txtPtr, btnPtr, btnPos, oldCP;
txtPtr, btnPtr, btnPos, oldCP = EUDCreateVariables(4)
# (Line 6) function NormalText(cp)
# (Line 7) {
@EUDFunc
def NormalText(cp):
    # (Line 8) switch (v.Sound_Text3[cp])
    EUDSwitch(v.Sound_Text3[cp])
    # (Line 9) {
    # (Line 10) case 1000:
    _t1 = EUDSwitchCase()
    # (Line 11) tct.print("\n\x13\x1BMato Sakura\n\x13\x04와~~앙!!\n");
    if _t1(1000):
        tct.f_print("\n\x13\x1BMato Sakura\n\x13\x04와~~앙!!\n")
        # (Line 12) PlayWAV("sakura_01.ogg");
        # (Line 13) v.Sound_Text3[cp] = 0;
        DoActions(PlayWAV("sakura_01.ogg"))
        _ARRW(v.Sound_Text3, cp) << (0)
        # (Line 14) break;
        EUDBreak()
        # (Line 15) case 1001:
    _t2 = EUDSwitchCase()
    # (Line 16) tct.print("\n\x13\x1BMato Sakura\n\x13\x04어째서... \x08항상 \x04이렇게 되어버리는 걸까...\n");
    if _t2(1001):
        tct.f_print("\n\x13\x1BMato Sakura\n\x13\x04어째서... \x08항상 \x04이렇게 되어버리는 걸까...\n")
        # (Line 17) PlayWAV("sakura_02.ogg");
        # (Line 18) v.Sound_Text3[cp] = 0;
        DoActions(PlayWAV("sakura_02.ogg"))
        _ARRW(v.Sound_Text3, cp) << (0)
        # (Line 19) break;
        EUDBreak()
        # (Line 20) case 1002:
    _t3 = EUDSwitchCase()
    # (Line 21) tct.print("\n\x13\x1BMato Sakura\n\x13\x04아주 예전부터 생각했다...\n");
    if _t3(1002):
        tct.f_print("\n\x13\x1BMato Sakura\n\x13\x04아주 예전부터 생각했다...\n")
        # (Line 22) v.Sound_Text3[cp] = 0;
        _ARRW(v.Sound_Text3, cp) << (0)
        # (Line 23) break;
        EUDBreak()
        # (Line 24) case 1003:
    _t4 = EUDSwitchCase()
    # (Line 25) tct.print("\n\x13\x1BMato Sakura\n\x13\x04아주 예전부터 \x08원망\x04하고 있었던 거야...\n");
    if _t4(1003):
        tct.f_print("\n\x13\x1BMato Sakura\n\x13\x04아주 예전부터 \x08원망\x04하고 있었던 거야...\n")
        # (Line 26) v.Sound_Text3[cp] = 0;
        _ARRW(v.Sound_Text3, cp) << (0)
        # (Line 27) break;
        EUDBreak()
        # (Line 28) case 1004:
    _t5 = EUDSwitchCase()
    # (Line 29) PlayWAV("sakura_03.ogg");
    if _t5(1004):
        # (Line 30) tct.print("\n\x13\x1BMato Sakura\n\x13\x04왜 내 주변에 있는 \x08세계\x04는...\n");
        DoActions(PlayWAV("sakura_03.ogg"))
        tct.f_print("\n\x13\x1BMato Sakura\n\x13\x04왜 내 주변에 있는 \x08세계\x04는...\n")
        # (Line 31) v.Sound_Text3[cp] = 0;
        _ARRW(v.Sound_Text3, cp) << (0)
        # (Line 32) break;
        EUDBreak()
        # (Line 33) case 1005:
    _t6 = EUDSwitchCase()
    # (Line 34) tct.print("\n\x13\x1BMato Sakura\n\x13\x04이렇게나... 나를 \x08싫어하는 걸까...\n");
    if _t6(1005):
        tct.f_print("\n\x13\x1BMato Sakura\n\x13\x04이렇게나... 나를 \x08싫어하는 걸까...\n")
        # (Line 35) v.Sound_Text3[cp] = 0;
        _ARRW(v.Sound_Text3, cp) << (0)
        # (Line 36) break;
        EUDBreak()
        # (Line 37) }
    # (Line 38) }
    EUDEndSwitch()
    # (Line 40) function UiltimateText(cp)

# (Line 41) {
@EUDFunc
def UiltimateText(cp):
    # (Line 42) switch (v.Sound_Text_Uilti[cp])
    EUDSwitch(v.Sound_Text_Uilti[cp])
    # (Line 43) {
    # (Line 44) case 13000:
    _t1 = EUDSwitchCase()
    # (Line 45) PlayWAV("sakura_04.ogg");
    if _t1(13000):
        # (Line 46) v.Sound_Text_Uilti[cp] = 0;
        DoActions(PlayWAV("sakura_04.ogg"))
        _ARRW(v.Sound_Text_Uilti, cp) << (0)
        # (Line 47) break;
        EUDBreak()
        # (Line 48) case 13001:
    _t2 = EUDSwitchCase()
    # (Line 49) PlayWAV("sakura_05.ogg");
    if _t2(13001):
        # (Line 50) tct.print("\n\x13\x1BMato Sakura\n\x13\x08이런 사람... 없었으면 좋았을텐데...\n");
        DoActions(PlayWAV("sakura_05.ogg"))
        tct.f_print("\n\x13\x1BMato Sakura\n\x13\x08이런 사람... 없었으면 좋았을텐데...\n")
        # (Line 51) v.Sound_Text_Uilti[cp] = 0;
        _ARRW(v.Sound_Text_Uilti, cp) << (0)
        # (Line 52) break;
        EUDBreak()
        # (Line 53) }
    # (Line 54) }
    EUDEndSwitch()
    # (Line 56) function UniqueText(cp)

# (Line 57) {
@EUDFunc
def UniqueText(cp):
    # (Line 58) switch (v.Sound_Text_Uniq[cp]) {
    EUDSwitch(v.Sound_Text_Uniq[cp])
    # (Line 59) case 13000:
    _t1 = EUDSwitchCase()
    # (Line 60) PlayWAV("sakura_06.ogg");
    if _t1(13000):
        # (Line 61) v.Sound_Text_Uniq[cp] = 0;
        DoActions(PlayWAV("sakura_06.ogg"))
        _ARRW(v.Sound_Text_Uniq, cp) << (0)
        # (Line 62) break;
        EUDBreak()
        # (Line 63) }
    # (Line 64) }
    EUDEndSwitch()
