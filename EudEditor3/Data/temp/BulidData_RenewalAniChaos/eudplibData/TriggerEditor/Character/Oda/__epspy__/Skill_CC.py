## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import Function as f;
import Function as f
# (Line 3) function main(cp)
# (Line 4) {
@EUDFunc
def f_main(cp):
    # (Line 5) f.BanReturn(cp);
    f.BanReturn(cp)
    # (Line 6) f.HoldPosition(cp);
    f.HoldPosition(cp)
    # (Line 8) if (f.delay[cp] == 0)
    if EUDIf()(f.delay[cp] == 0):
        # (Line 9) {
        # (Line 10) if (f.count[cp] == 0)
        if EUDIf()(f.count[cp] == 0):
            # (Line 11) {
            # (Line 12) RemoveUnitAt(All, "40 + 1n Mojo", "Anywhere", cp);
            # (Line 14) var x = 0;
            DoActions(RemoveUnitAt(All, "40 + 1n Mojo", "Anywhere", cp))
            x = EUDVariable()
            x << (0)
            # (Line 15) var y = 0;
            y = EUDVariable()
            y << (0)
            # (Line 17) if (f.loop[cp] == 0) { x = 50; y = 50; }
            if EUDIf()(f.loop[cp] == 0):
                x << (50)
                y << (50)
                # (Line 18) else if (f.loop[cp] == 1) { x = 0; y = 50; }
            if EUDElseIf()(f.loop[cp] == 1):
                x << (0)
                y << (50)
                # (Line 19) else if (f.loop[cp] == 2) { x = -50; y = 50; }
            if EUDElseIf()(f.loop[cp] == 2):
                x << (-50)
                y << (50)
                # (Line 20) else if (f.loop[cp] == 3) { x = -50; y = 0; }
            if EUDElseIf()(f.loop[cp] == 3):
                x << (-50)
                y << (0)
                # (Line 22) f.DoubleShape(cp, 1, "40 + 1n Mojo", x, y);
            EUDEndIf()
            f.DoubleShape(cp, 1, "40 + 1n Mojo", x, y)
            # (Line 23) f.DoubleShape(cp, 1, "Protoss Dark Archon", x, y);
            f.DoubleShape(cp, 1, "Protoss Dark Archon", x, y)
            # (Line 24) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp);
            # (Line 26) f.DoubleShape(cp, 1, "Kakaru (Twilight)", -y, x);
            DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp))
            f.DoubleShape(cp, 1, "Kakaru (Twilight)", -y, x)
            # (Line 27) f.DoubleShape(cp, 1, "Rhynadon (Badlands)", -y, x);
            f.DoubleShape(cp, 1, "Rhynadon (Badlands)", -y, x)
            # (Line 28) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", cp);
            # (Line 29) KillUnitAt(All, "Rhynadon (Badlands)", "Anywhere", cp);
            DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", cp))
            # (Line 31) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
            DoActions(KillUnitAt(All, "Rhynadon (Badlands)", "Anywhere", cp))
            # (Line 32) Order("40 + 1n Mojo", cp, "Anywhere", Attack, f.location[cp]);
            DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
            # (Line 34) f.SkillWait(cp, 80);
            DoActions(Order("40 + 1n Mojo", cp, "Anywhere", Attack, f.location[cp]))
            f.SkillWait(cp, 80)
            # (Line 36) f.loop[cp] += 1;
            _ARRW(f.loop, cp).__iadd__(1)
            # (Line 38) if (f.loop[cp] == 4)
            if EUDIf()(f.loop[cp] == 4):
                # (Line 39) {
                # (Line 40) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 41) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 42) }
                # (Line 43) }
            EUDEndIf()
            # (Line 44) else if (f.count[cp] == 1)
        if EUDElseIf()(f.count[cp] == 1):
            # (Line 45) {
            # (Line 46) if (f.loop[cp] == 0)
            if EUDIf()(f.loop[cp] == 0):
                # (Line 47) {
                # (Line 48) RemoveUnitAt(All, "40 + 1n Mojo", "Anywhere", cp);
                # (Line 49) }
                DoActions(RemoveUnitAt(All, "40 + 1n Mojo", "Anywhere", cp))
                # (Line 51) if (f.loop[cp] < 4)
            EUDEndIf()
            if EUDIf()(f.loop[cp] >= 4, neg=True):
                # (Line 52) {
                # (Line 53) var d = 50 + 50 * (f.loop[cp] % 4);
                d = EUDVariable()
                d << (50 + 50 * (f.loop[cp] % 4))
                # (Line 55) f.SquareShape(cp, 1, "40 + 1n Guardian", d, d);
                f.SquareShape(cp, 1, "40 + 1n Guardian", d, d)
                # (Line 56) f.SquareShape(cp, 1, "60 + 1n Archon", d, d);
                f.SquareShape(cp, 1, "60 + 1n Archon", d, d)
                # (Line 57) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp);
                # (Line 58) KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp))
                # (Line 59) }
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp))
                # (Line 60) else if (f.loop[cp] < 8)
            if EUDElseIf()(f.loop[cp] >= 8, neg=True):
                # (Line 61) {
                # (Line 62) var d = 200 - 50 * (f.loop[cp] % 4);
                d = EUDVariable()
                d << (200 - 50 * (f.loop[cp] % 4))
                # (Line 64) f.SquareShape(cp, 1, "40 + 1n Guardian", d, d);
                f.SquareShape(cp, 1, "40 + 1n Guardian", d, d)
                # (Line 65) f.SquareShape(cp, 1, "60 + 1n Archon", d, d);
                f.SquareShape(cp, 1, "60 + 1n Archon", d, d)
                # (Line 66) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp);
                # (Line 67) KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp))
                # (Line 68) }
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp))
                # (Line 70) if (f.loop[cp] < 8 && f.loop[cp] % 2 == 0)
            EUDEndIf()
            if EUDIf()(EUDSCAnd()(f.loop[cp] >= 8, neg=True)(f.loop[cp] % 2 == 0)()):
                # (Line 71) {
                # (Line 72) RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", cp);
                # (Line 74) var x = 0;
                DoActions(RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", cp))
                x = EUDVariable()
                x << (0)
                # (Line 75) var y = 0;
                y = EUDVariable()
                y << (0)
                # (Line 77) if (f.loop[cp] / 2 % 2 == 0) { x = 50; y = 50; }
                if EUDIf()(f.loop[cp] // 2 % 2 == 0):
                    x << (50)
                    y << (50)
                    # (Line 78) else if (f.loop[cp] / 2 % 2 == 1) { x = 0; y = 50; }
                if EUDElseIf()(f.loop[cp] // 2 % 2 == 1):
                    x << (0)
                    y << (50)
                    # (Line 80) f.SquareShape(cp, 1, "Bengalaas (Jungle)", -y, x);
                EUDEndIf()
                f.SquareShape(cp, 1, "Bengalaas (Jungle)", -y, x)
                # (Line 81) f.SquareShape(cp, 1, "Target", -y, x);
                f.SquareShape(cp, 1, "Target", -y, x)
                # (Line 82) f.SquareShape(cp, 1, "40 + 1n Wraith", x, y);
                f.SquareShape(cp, 1, "40 + 1n Wraith", x, y)
                # (Line 83) f.SquareShape(cp, 1, "Scantid (Desert)", x, y);
                f.SquareShape(cp, 1, "Scantid (Desert)", x, y)
                # (Line 84) KillUnitAt(All, "Bengalaas (Jungle)", "Anywhere", cp);
                # (Line 85) KillUnitAt(All, "Target", "Anywhere", cp);
                DoActions(KillUnitAt(All, "Bengalaas (Jungle)", "Anywhere", cp))
                # (Line 86) KillUnitAt(All, "Scantid (Desert)", "Anywhere", cp);
                DoActions(KillUnitAt(All, "Target", "Anywhere", cp))
                # (Line 88) Order("40 + 1n Wraith", cp, "Anywhere", Attack, "Anywhere");
                DoActions(KillUnitAt(All, "Scantid (Desert)", "Anywhere", cp))
                # (Line 90) }
                DoActions(Order("40 + 1n Wraith", cp, "Anywhere", Attack, "Anywhere"))
                # (Line 92) f.SkillWait(cp, 80);
            EUDEndIf()
            f.SkillWait(cp, 80)
            # (Line 94) f.loop[cp] += 1;
            _ARRW(f.loop, cp).__iadd__(1)
            # (Line 96) if (f.loop[cp] == 8)
            if EUDIf()(f.loop[cp] == 8):
                # (Line 97) {
                # (Line 98) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 99) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 100) }
                # (Line 101) }
            EUDEndIf()
            # (Line 102) else if (f.count[cp] == 2)
        if EUDElseIf()(f.count[cp] == 2):
            # (Line 103) {
            # (Line 104) if (f.loop[cp] == 0)
            if EUDIf()(f.loop[cp] == 0):
                # (Line 105) {
                # (Line 106) RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", cp);
                # (Line 108) f.NxNSquareShape(cp, 1, "40 + 1n Guardian", 3, 50);
                DoActions(RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", cp))
                f.NxNSquareShape(cp, 1, "40 + 1n Guardian", 3, 50)
                # (Line 109) f.NxNSquareShape(cp, 1, "60 + 1n Archon", 3, 50);
                f.NxNSquareShape(cp, 1, "60 + 1n Archon", 3, 50)
                # (Line 110) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp);
                # (Line 111) KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp))
                # (Line 112) }
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp))
                # (Line 113) else if (f.loop[cp] >= 2 && f.loop[cp] < 6)
            if EUDElseIf()(EUDSCAnd()(f.loop[cp] >= 2)(f.loop[cp] >= 6, neg=True)()):
                # (Line 114) {
                # (Line 115) var i = (f.loop[cp] - 2);
                i = EUDVariable()
                i << ((f.loop[cp] - 2))
                # (Line 117) f.SquareShape(cp, 1, "40 + 1n Guardian", -100 + 50 * i, 100);
                f.SquareShape(cp, 1, "40 + 1n Guardian", -100 + 50 * i, 100)
                # (Line 118) f.SquareShape(cp, 1, "60 + 1n Archon", -100 + 50 * i, 100);
                f.SquareShape(cp, 1, "60 + 1n Archon", -100 + 50 * i, 100)
                # (Line 119) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp);
                # (Line 120) KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp))
                # (Line 121) }
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp))
                # (Line 123) if (f.loop[cp] == 2)
            EUDEndIf()
            if EUDIf()(f.loop[cp] == 2):
                # (Line 124) {
                # (Line 125) f.NxNSquareShape(cp, 1, "40 + 1n Wraith", 3, 50);
                f.NxNSquareShape(cp, 1, "40 + 1n Wraith", 3, 50)
                # (Line 127) Order("40 + 1n Wraith", cp, "Anywhere", Attack, "Anywhere");
                # (Line 128) }
                DoActions(Order("40 + 1n Wraith", cp, "Anywhere", Attack, "Anywhere"))
                # (Line 129) else if (f.loop[cp] == 4)
            if EUDElseIf()(f.loop[cp] == 4):
                # (Line 130) {
                # (Line 131) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", cp);
                # (Line 133) f.NxNSquareShape(cp, 1, "40 + 1n Mojo", 3, 50);
                DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", cp))
                f.NxNSquareShape(cp, 1, "40 + 1n Mojo", 3, 50)
                # (Line 135) Order("40 + 1n Mojo", cp, "Anywhere", Attack, "Anywhere");
                # (Line 136) }
                DoActions(Order("40 + 1n Mojo", cp, "Anywhere", Attack, "Anywhere"))
                # (Line 138) f.SkillWait(cp, 80);
            EUDEndIf()
            f.SkillWait(cp, 80)
            # (Line 140) f.loop[cp] += 1;
            _ARRW(f.loop, cp).__iadd__(1)
            # (Line 142) if (f.loop[cp] == 8)
            if EUDIf()(f.loop[cp] == 8):
                # (Line 143) {
                # (Line 144) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 145) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 146) }
                # (Line 147) }
            EUDEndIf()
            # (Line 148) else if (f.count[cp] == 3)
        if EUDElseIf()(f.count[cp] == 3):
            # (Line 149) {
            # (Line 150) KillUnitAt(All, "40 + 1n Mojo", "Anywhere", cp);
            # (Line 152) f.SkillEnd(cp);
            DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", cp))
            f.SkillEnd(cp)
            # (Line 153) }
            # (Line 154) }
        EUDEndIf()
        # (Line 155) }
    EUDEndIf()
