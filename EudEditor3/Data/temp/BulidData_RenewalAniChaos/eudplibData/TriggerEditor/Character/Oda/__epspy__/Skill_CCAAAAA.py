## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import Function as f;
import Function as f
# (Line 3) function EdgeShapeAt(cp : TrgPlayer, count, Unit : TrgUnit, degree, n, interval, x, y);
# (Line 5) function main(cp)
# (Line 6) {
@EUDFunc
def f_main(cp):
    # (Line 7) MoveUnit(All, "50 + 1n Battlecruiser", cp, "Anywhere", "[Skill]HoldPosition");
    # (Line 8) MoveUnit(All, "40 + 1n Gantrithor", cp, "Anywhere", "[Skill]HoldPosition");
    DoActions(MoveUnit(All, "50 + 1n Battlecruiser", cp, "Anywhere", "[Skill]HoldPosition"))
    # (Line 10) f.BanReturn(cp);
    DoActions(MoveUnit(All, "40 + 1n Gantrithor", cp, "Anywhere", "[Skill]HoldPosition"))
    f.BanReturn(cp)
    # (Line 11) f.HoldPosition(cp);
    f.HoldPosition(cp)
    # (Line 13) if (f.delay[cp] == 0)
    if EUDIf()(f.delay[cp] == 0):
        # (Line 14) {
        # (Line 15) if (f.count[cp] == 0)
        if EUDIf()(f.count[cp] == 0):
            # (Line 16) {
            # (Line 17) f.Table_Sin(cp, 22 * f.loop[cp], 150);
            f.Table_Sin(cp, 22 * f.loop[cp], 150)
            # (Line 18) f.Table_Cos(cp, 22 * f.loop[cp], 150);
            f.Table_Cos(cp, 22 * f.loop[cp], 150)
            # (Line 20) var x = f.CosAngle[cp];
            x = EUDVariable()
            x << (f.CosAngle[cp])
            # (Line 21) var y = f.SinAngle[cp];
            y = EUDVariable()
            y << (f.SinAngle[cp])
            # (Line 23) f.SquareShape(cp, 1, "40 + 1n Lurker", x, y);
            f.SquareShape(cp, 1, "40 + 1n Lurker", x, y)
            # (Line 24) KillUnitAt(All, "40 + 1n Lurker", "Anywhere", cp);
            # (Line 26) f.SkillWait(cp, 80);
            DoActions(KillUnitAt(All, "40 + 1n Lurker", "Anywhere", cp))
            f.SkillWait(cp, 80)
            # (Line 28) f.loop[cp] += 1;
            _ARRW(f.loop, cp).__iadd__(1)
            # (Line 30) if (f.loop[cp] == 4)
            if EUDIf()(f.loop[cp] == 4):
                # (Line 31) {
                # (Line 32) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 33) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 34) }
                # (Line 35) }
            EUDEndIf()
            # (Line 36) else if (f.count[cp] == 1)
        if EUDElseIf()(f.count[cp] == 1):
            # (Line 37) {
            # (Line 38) RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", cp);
            # (Line 40) f.Table_Sin(cp, 45 * f.loop[cp], 100);
            DoActions(RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", cp))
            f.Table_Sin(cp, 45 * f.loop[cp], 100)
            # (Line 41) f.Table_Cos(cp, 45 * f.loop[cp], 100);
            f.Table_Cos(cp, 45 * f.loop[cp], 100)
            # (Line 43) var x = f.CosAngle[cp];
            x = EUDVariable()
            x << (f.CosAngle[cp])
            # (Line 44) var y = f.SinAngle[cp];
            y = EUDVariable()
            y << (f.SinAngle[cp])
            # (Line 46) f.DoubleShape(cp, 1, "40 + 1n Wraith", x, y);
            f.DoubleShape(cp, 1, "40 + 1n Wraith", x, y)
            # (Line 47) f.DoubleShape(cp, 1, "Scantid (Desert)", x, y);
            f.DoubleShape(cp, 1, "Scantid (Desert)", x, y)
            # (Line 48) KillUnitAt(All, "Scantid (Desert)", "Anywhere", cp);
            # (Line 50) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
            DoActions(KillUnitAt(All, "Scantid (Desert)", "Anywhere", cp))
            # (Line 51) Order("40 + 1n Wraith", cp, "Anywhere", Attack, f.location[cp]);
            DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
            # (Line 53) f.SkillWait(cp, 80);
            DoActions(Order("40 + 1n Wraith", cp, "Anywhere", Attack, f.location[cp]))
            f.SkillWait(cp, 80)
            # (Line 55) f.loop[cp] += 1;
            _ARRW(f.loop, cp).__iadd__(1)
            # (Line 57) if (f.loop[cp] == 4)
            if EUDIf()(f.loop[cp] == 4):
                # (Line 58) {
                # (Line 59) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 60) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 61) }
                # (Line 62) }
            EUDEndIf()
            # (Line 63) else if (f.count[cp] == 2)
        if EUDElseIf()(f.count[cp] == 2):
            # (Line 64) {
            # (Line 65) f.Table_Sin(cp, 90 - 22 * f.loop[cp], 150);
            f.Table_Sin(cp, 90 - 22 * f.loop[cp], 150)
            # (Line 66) f.Table_Cos(cp, 90 - 22 * f.loop[cp], 150);
            f.Table_Cos(cp, 90 - 22 * f.loop[cp], 150)
            # (Line 68) var x = f.CosAngle[cp];
            x = EUDVariable()
            x << (f.CosAngle[cp])
            # (Line 69) var y = f.SinAngle[cp];
            y = EUDVariable()
            y << (f.SinAngle[cp])
            # (Line 71) if (f.loop[cp] % 2 == 0)
            if EUDIf()(f.loop[cp] % 2 == 0):
                # (Line 72) {
                # (Line 73) RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", cp);
                # (Line 75) if (f.loop[cp] == 0)
                DoActions(RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", cp))
                if EUDIf()(f.loop[cp] == 0):
                    # (Line 76) {
                    # (Line 77) f.SquareShape(cp, 1, "50 + 1n Battlecruiser", x, y);
                    f.SquareShape(cp, 1, "50 + 1n Battlecruiser", x, y)
                    # (Line 78) }
                    # (Line 79) else if (f.loop[cp] == 2)
                if EUDElseIf()(f.loop[cp] == 2):
                    # (Line 80) {
                    # (Line 81) f.SquareShape(cp, 1, "100 + 1n Hyperion", x, y);
                    f.SquareShape(cp, 1, "100 + 1n Hyperion", x, y)
                    # (Line 82) }
                    # (Line 83) f.SquareShape(cp, 1, "50 + 1n Tank", x, y);
                EUDEndIf()
                f.SquareShape(cp, 1, "50 + 1n Tank", x, y)
                # (Line 84) KillUnitAt(All, "50 + 1n Tank", "Anywhere", cp);
                # (Line 86) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", cp))
                # (Line 87) Order("100 + 1n Hyperion", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 88) Order("50 + 1n Battlecruiser", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(Order("100 + 1n Hyperion", cp, "Anywhere", Attack, f.location[cp]))
                # (Line 89) }
                DoActions(Order("50 + 1n Battlecruiser", cp, "Anywhere", Attack, f.location[cp]))
                # (Line 90) else if (f.loop[cp] % 2 == 1)
            if EUDElseIf()(f.loop[cp] % 2 == 1):
                # (Line 91) {
                # (Line 92) f.SquareShape(cp, 1, "40 + 1n Gantrithor", x, y);
                f.SquareShape(cp, 1, "40 + 1n Gantrithor", x, y)
                # (Line 93) f.SquareShape(cp, 1, "60 + 1n Archon", x, y);
                f.SquareShape(cp, 1, "60 + 1n Archon", x, y)
                # (Line 94) KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", cp);
                # (Line 95) KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp);
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", cp))
                # (Line 96) }
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp))
                # (Line 98) f.SkillWait(cp, 80);
            EUDEndIf()
            f.SkillWait(cp, 80)
            # (Line 100) f.loop[cp] += 1;
            _ARRW(f.loop, cp).__iadd__(1)
            # (Line 102) if (f.loop[cp] == 4)
            if EUDIf()(f.loop[cp] == 4):
                # (Line 103) {
                # (Line 104) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 105) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 106) }
                # (Line 107) }
            EUDEndIf()
            # (Line 108) else if (f.count[cp] == 3)
        if EUDElseIf()(f.count[cp] == 3):
            # (Line 109) {
            # (Line 110) if (f.loop[cp] < 4)
            if EUDIf()(f.loop[cp] >= 4, neg=True):
                # (Line 111) {
                # (Line 112) var x = 300 - 75 * f.loop[cp];
                x = EUDVariable()
                x << (300 - 75 * f.loop[cp])
                # (Line 113) var y = 75 * f.loop[cp];
                y = EUDVariable()
                y << (75 * f.loop[cp])
                # (Line 115) f.SquareShape(cp, 1, "60 + 1n Siege", x, y);
                f.SquareShape(cp, 1, "60 + 1n Siege", x, y)
                # (Line 116) f.SquareShape(cp, 8, "Protoss Dark Archon", x, y);
                f.SquareShape(cp, 8, "Protoss Dark Archon", x, y)
                # (Line 117) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp);
                # (Line 119) if (f.loop[cp] == 0)
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp))
                if EUDIf()(f.loop[cp] == 0):
                    # (Line 120) {
                    # (Line 121) KillUnitAt(All, "100 + 1n Hyperion", "Anywhere", cp);
                    # (Line 123) f.Table_Sin(cp, 90, 150);
                    DoActions(KillUnitAt(All, "100 + 1n Hyperion", "Anywhere", cp))
                    f.Table_Sin(cp, 90, 150)
                    # (Line 124) f.Table_Cos(cp, 90, 150);
                    f.Table_Cos(cp, 90, 150)
                    # (Line 126) x = f.CosAngle[cp];
                    x << (f.CosAngle[cp])
                    # (Line 127) y = f.SinAngle[cp];
                    y << (f.SinAngle[cp])
                    # (Line 129) f.SquareShape(cp, 9, "60 + 1n Archon", x, y);
                    f.SquareShape(cp, 9, "60 + 1n Archon", x, y)
                    # (Line 130) KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp);
                    # (Line 132) }
                    DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp))
                    # (Line 133) else if (f.loop[cp] == 2)
                if EUDElseIf()(f.loop[cp] == 2):
                    # (Line 134) {
                    # (Line 135) f.Table_Sin(cp, 45, 150);
                    f.Table_Sin(cp, 45, 150)
                    # (Line 136) f.Table_Cos(cp, 45, 150);
                    f.Table_Cos(cp, 45, 150)
                    # (Line 138) x = f.CosAngle[cp];
                    x << (f.CosAngle[cp])
                    # (Line 139) y = f.SinAngle[cp];
                    y << (f.SinAngle[cp])
                    # (Line 141) f.SquareShape(cp, 1, "40 + 1n Gantrithor", x, y);
                    f.SquareShape(cp, 1, "40 + 1n Gantrithor", x, y)
                    # (Line 142) f.SquareShape(cp, 9, "60 + 1n Archon", x, y);
                    f.SquareShape(cp, 9, "60 + 1n Archon", x, y)
                    # (Line 143) KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp);
                    # (Line 144) }
                    DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp))
                    # (Line 145) }
                EUDEndIf()
                # (Line 147) f.SkillWait(cp, 80);
            EUDEndIf()
            f.SkillWait(cp, 80)
            # (Line 149) f.loop[cp] += 1;
            _ARRW(f.loop, cp).__iadd__(1)
            # (Line 151) if (f.loop[cp] == 4)
            if EUDIf()(f.loop[cp] == 4):
                # (Line 152) {
                # (Line 153) ModifyUnitHangarCount(2, All, "40 + 1n Gantrithor", CurrentPlayer, "Anywhere");
                # (Line 154) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                DoActions(ModifyUnitHangarCount(2, All, "40 + 1n Gantrithor", CurrentPlayer, "Anywhere"))
                # (Line 155) Order("40 + 1n Gantrithor", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 157) f.count[cp] += 1;
                DoActions(Order("40 + 1n Gantrithor", cp, "Anywhere", Attack, f.location[cp]))
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 158) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 159) }
                # (Line 160) }
            EUDEndIf()
            # (Line 161) else if (f.count[cp] == 4)
        if EUDElseIf()(f.count[cp] == 4):
            # (Line 162) {
            # (Line 163) var x = 0;
            x = EUDVariable()
            x << (0)
            # (Line 164) var y = 0;
            y = EUDVariable()
            y << (0)
            # (Line 166) if (f.loop[cp] < 4)
            if EUDIf()(f.loop[cp] >= 4, neg=True):
                # (Line 167) {
                # (Line 168) var i = 0;
                i = EUDVariable()
                i << (0)
                # (Line 170) for (; i <= f.loop[cp]; i++)
                if EUDWhile()(i <= f.loop[cp]):
                    def _t20():
                        i.__iadd__(1)
                    # (Line 171) {
                    # (Line 172) f.Table_Sin(cp, 22 + 45 * i, 50 + 75 * i);
                    f.Table_Sin(cp, 22 + 45 * i, 50 + 75 * i)
                    # (Line 173) f.Table_Cos(cp, 22 + 45 * i, 50 + 75 * i);
                    f.Table_Cos(cp, 22 + 45 * i, 50 + 75 * i)
                    # (Line 175) x = f.CosAngle[cp];
                    x << (f.CosAngle[cp])
                    # (Line 176) y = f.SinAngle[cp];
                    y << (f.SinAngle[cp])
                    # (Line 178) EdgeShapeAt(cp, 1, "60 + 1n High Templar", 22, 3, 32, x, y);
                    EdgeShapeAt(cp, 1, "60 + 1n High Templar", 22, 3, 32, x, y)
                    # (Line 179) KillUnitAt(All, "60 + 1n High Templar", "Anywhere", cp);
                    # (Line 180) }
                    DoActions(KillUnitAt(All, "60 + 1n High Templar", "Anywhere", cp))
                    # (Line 181) }
                    EUDSetContinuePoint()
                    _t20()
                EUDEndWhile()
                # (Line 183) var r = 0;
            EUDEndIf()
            r = EUDVariable()
            r << (0)
            # (Line 184) var d = 0;
            d = EUDVariable()
            d << (0)
            # (Line 186) if (f.loop[cp] == 3)
            if EUDIf()(f.loop[cp] == 3):
                # (Line 187) {
                # (Line 188) r = 22;
                r << (22)
                # (Line 189) d = 200;
                d << (200)
                # (Line 190) }
                # (Line 191) else if (f.loop[cp] == 4)
            if EUDElseIf()(f.loop[cp] == 4):
                # (Line 192) {
                # (Line 193) r = 67;
                r << (67)
                # (Line 194) d = 150;
                d << (150)
                # (Line 195) }
                # (Line 196) else if (f.loop[cp] == 5)
            if EUDElseIf()(f.loop[cp] == 5):
                # (Line 197) {
                # (Line 198) r = 22;
                r << (22)
                # (Line 199) d = 250;
                d << (250)
                # (Line 200) }
                # (Line 201) else if (f.loop[cp] == 6)
            if EUDElseIf()(f.loop[cp] == 6):
                # (Line 202) {
                # (Line 203) r = 67;
                r << (67)
                # (Line 204) d = 100;
                d << (100)
                # (Line 205) }
                # (Line 206) else if (f.loop[cp] == 7)
            if EUDElseIf()(f.loop[cp] == 7):
                # (Line 207) {
                # (Line 208) r = 67;
                r << (67)
                # (Line 209) d = 250;
                d << (250)
                # (Line 210) }
                # (Line 211) else if (f.loop[cp] == 8)
            if EUDElseIf()(f.loop[cp] == 8):
                # (Line 212) {
                # (Line 213) r = 22;
                r << (22)
                # (Line 214) d = 150;
                d << (150)
                # (Line 215) }
                # (Line 216) else if (f.loop[cp] == 9)
            if EUDElseIf()(f.loop[cp] == 9):
                # (Line 217) {
                # (Line 218) r = 22;
                r << (22)
                # (Line 219) d = 250;
                d << (250)
                # (Line 221) SetSwitch("Recall - Oda", Set);
                # (Line 222) }
                DoActions(SetSwitch("Recall - Oda", Set))
                # (Line 224) KillUnitAt(All, "40 + 1n Mojo", "Anywhere", cp);
            EUDEndIf()
            # (Line 226) if (f.loop[cp] >= 3 && f.loop[cp] < 10)
            DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", cp))
            if EUDIf()(EUDSCAnd()(f.loop[cp] >= 3)(f.loop[cp] >= 10, neg=True)()):
                # (Line 227) {
                # (Line 228) f.Table_Sin(cp, r, d);
                f.Table_Sin(cp, r, d)
                # (Line 229) f.Table_Cos(cp, r, d);
                f.Table_Cos(cp, r, d)
                # (Line 231) x = f.CosAngle[cp];
                x << (f.CosAngle[cp])
                # (Line 232) y = f.SinAngle[cp];
                y << (f.SinAngle[cp])
                # (Line 234) EdgeShapeAt(cp, 1, "40 + 1n Mojo", 22, 3, 32, x, y);
                EdgeShapeAt(cp, 1, "40 + 1n Mojo", 22, 3, 32, x, y)
                # (Line 235) EdgeShapeAt(cp, 1, " Unit. Hoffnung 25000", 22, 3, 32, x, y);
                EdgeShapeAt(cp, 1, " Unit. Hoffnung 25000", 22, 3, 32, x, y)
                # (Line 236) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp);
                # (Line 238) f.Table_Sin(cp, r + 90, d);
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp))
                f.Table_Sin(cp, r + 90, d)
                # (Line 239) f.Table_Cos(cp, r + 90, d);
                f.Table_Cos(cp, r + 90, d)
                # (Line 241) x = f.CosAngle[cp];
                x << (f.CosAngle[cp])
                # (Line 242) y = f.SinAngle[cp];
                y << (f.SinAngle[cp])
                # (Line 244) EdgeShapeAt(cp, 1, "Target", 22, 3, 32, x, y);
                EdgeShapeAt(cp, 1, "Target", 22, 3, 32, x, y)
                # (Line 245) EdgeShapeAt(cp, 1, "60 + 1n Archon", 22, 3, 32, x, y);
                EdgeShapeAt(cp, 1, "60 + 1n Archon", 22, 3, 32, x, y)
                # (Line 246) KillUnitAt(All, "Target", "Anywhere", cp);
                # (Line 247) KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp);
                DoActions(KillUnitAt(All, "Target", "Anywhere", cp))
                # (Line 249) if (f.loop[cp] % 2 == 1)
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp))
                if EUDIf()(f.loop[cp] % 2 == 1):
                    # (Line 250) {
                    # (Line 251) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                    # (Line 252) Order("40 + 1n Mojo", cp, "Anywhere", Attack, f.location[cp]);
                    DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                    # (Line 253) }
                    DoActions(Order("40 + 1n Mojo", cp, "Anywhere", Attack, f.location[cp]))
                    # (Line 255) if (f.loop[cp] == 3)
                EUDEndIf()
                if EUDIf()(f.loop[cp] == 3):
                    # (Line 256) {
                    # (Line 257) f.SquareShape(cp, 1, "40 + 1n Goliath", x, y);
                    f.SquareShape(cp, 1, "40 + 1n Goliath", x, y)
                    # (Line 259) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                    # (Line 260) MoveUnit(All, "40 + 1n Goliath", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                    DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                    # (Line 261) Order("40 + 1n Goliath", cp, "Anywhere", Attack, f.location[cp]);
                    DoActions(MoveUnit(All, "40 + 1n Goliath", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                    # (Line 262) }
                    DoActions(Order("40 + 1n Goliath", cp, "Anywhere", Attack, f.location[cp]))
                    # (Line 263) if (f.loop[cp] == 4)
                EUDEndIf()
                if EUDIf()(f.loop[cp] == 4):
                    # (Line 264) {
                    # (Line 265) f.SquareShape(cp, 1, "40 + 1n Drone", x, y);
                    f.SquareShape(cp, 1, "40 + 1n Drone", x, y)
                    # (Line 267) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                    # (Line 268) MoveUnit(All, "40 + 1n Drone", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                    DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                    # (Line 269) Order("40 + 1n Drone", cp, "Anywhere", Attack, f.location[cp]);
                    DoActions(MoveUnit(All, "40 + 1n Drone", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                    # (Line 270) }
                    DoActions(Order("40 + 1n Drone", cp, "Anywhere", Attack, f.location[cp]))
                    # (Line 271) if (f.loop[cp] == 5)
                EUDEndIf()
                if EUDIf()(f.loop[cp] == 5):
                    # (Line 272) {
                    # (Line 273) f.SquareShape(cp, 1, "50 + 1n Tank", x, y);
                    f.SquareShape(cp, 1, "50 + 1n Tank", x, y)
                    # (Line 275) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                    # (Line 276) MoveUnit(All, "50 + 1n Tank", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                    DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                    # (Line 277) Order("50 + 1n Tank", cp, "Anywhere", Attack, f.location[cp]);
                    DoActions(MoveUnit(All, "50 + 1n Tank", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                    # (Line 278) }
                    DoActions(Order("50 + 1n Tank", cp, "Anywhere", Attack, f.location[cp]))
                    # (Line 279) if (f.loop[cp] == 6)
                EUDEndIf()
                if EUDIf()(f.loop[cp] == 6):
                    # (Line 280) {
                    # (Line 281) f.SquareShape(cp, 1, "40 + 1n Drone", x, y);
                    f.SquareShape(cp, 1, "40 + 1n Drone", x, y)
                    # (Line 283) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                    # (Line 284) MoveUnit(All, "40 + 1n Drone", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                    DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                    # (Line 285) Order("40 + 1n Drone", cp, "Anywhere", Attack, f.location[cp]);
                    DoActions(MoveUnit(All, "40 + 1n Drone", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                    # (Line 286) }
                    DoActions(Order("40 + 1n Drone", cp, "Anywhere", Attack, f.location[cp]))
                    # (Line 287) if (f.loop[cp] == 7)
                EUDEndIf()
                if EUDIf()(f.loop[cp] == 7):
                    # (Line 288) {
                    # (Line 289) f.SquareShape(cp, 1, "60 + 1n Dragoon", x, y);
                    f.SquareShape(cp, 1, "60 + 1n Dragoon", x, y)
                    # (Line 291) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                    # (Line 292) MoveUnit(All, "60 + 1n Dragoon", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                    DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                    # (Line 293) Order("60 + 1n Dragoon", cp, "Anywhere", Attack, f.location[cp]);
                    DoActions(MoveUnit(All, "60 + 1n Dragoon", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                    # (Line 294) }
                    DoActions(Order("60 + 1n Dragoon", cp, "Anywhere", Attack, f.location[cp]))
                    # (Line 295) if (f.loop[cp] == 8)
                EUDEndIf()
                if EUDIf()(f.loop[cp] == 8):
                    # (Line 296) {
                    # (Line 297) f.SquareShape(cp, 1, "40 + 1n Firebat", x, y);
                    f.SquareShape(cp, 1, "40 + 1n Firebat", x, y)
                    # (Line 299) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                    # (Line 300) MoveUnit(All, "40 + 1n Firebat", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                    DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                    # (Line 301) Order("40 + 1n Firebat", cp, "Anywhere", Attack, f.location[cp]);
                    DoActions(MoveUnit(All, "40 + 1n Firebat", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                    # (Line 302) }
                    DoActions(Order("40 + 1n Firebat", cp, "Anywhere", Attack, f.location[cp]))
                    # (Line 303) if (f.loop[cp] == 9)
                EUDEndIf()
                if EUDIf()(f.loop[cp] == 9):
                    # (Line 304) {
                    # (Line 305) f.SquareShape(cp, 1, "40 + 1n Drone", x, y);
                    f.SquareShape(cp, 1, "40 + 1n Drone", x, y)
                    # (Line 307) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                    # (Line 308) MoveUnit(All, "40 + 1n Drone", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                    DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                    # (Line 309) Order("40 + 1n Drone", cp, "Anywhere", Attack, f.location[cp]);
                    DoActions(MoveUnit(All, "40 + 1n Drone", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                    # (Line 310) }
                    DoActions(Order("40 + 1n Drone", cp, "Anywhere", Attack, f.location[cp]))
                    # (Line 311) }
                EUDEndIf()
                # (Line 313) f.SkillWait(cp, 80);
            EUDEndIf()
            f.SkillWait(cp, 80)
            # (Line 315) f.loop[cp] += 1;
            _ARRW(f.loop, cp).__iadd__(1)
            # (Line 317) if (f.loop[cp] == 67)
            if EUDIf()(f.loop[cp] == 67):
                # (Line 318) {
                # (Line 319) f.Voice_Routine(cp, 23);
                f.Voice_Routine(cp, 23)
                # (Line 321) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 322) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 323) }
                # (Line 324) }
            EUDEndIf()
            # (Line 325) else if (f.count[cp] == 5)
        if EUDElseIf()(f.count[cp] == 5):
            # (Line 326) {
            # (Line 327) if (f.loop[cp] == 0)
            if EUDIf()(f.loop[cp] == 0):
                # (Line 328) {
                # (Line 329) KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", cp);
                # (Line 330) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp);
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", cp))
                # (Line 332) }
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp))
                # (Line 333) if (f.loop[cp] == 18)
            EUDEndIf()
            if EUDIf()(f.loop[cp] == 18):
                # (Line 334) {
                # (Line 335) KillUnitAt(All, "40 + 1n Goliath", "Anywhere", cp);
                # (Line 336) KillUnitAt(All, "40 + 1n Drone", "Anywhere", cp);
                DoActions(KillUnitAt(All, "40 + 1n Goliath", "Anywhere", cp))
                # (Line 337) KillUnitAt(All, "50 + 1n Tank", "Anywhere", cp);
                DoActions(KillUnitAt(All, "40 + 1n Drone", "Anywhere", cp))
                # (Line 338) KillUnitAt(All, "60 + 1n Siege", "Anywhere", cp);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", cp))
                # (Line 339) KillUnitAt(All, "60 + 1n Dragoon", "Anywhere", cp);
                DoActions(KillUnitAt(All, "60 + 1n Siege", "Anywhere", cp))
                # (Line 340) KillUnitAt(All, "40 + 1n Firebat", "Anywhere", cp);
                DoActions(KillUnitAt(All, "60 + 1n Dragoon", "Anywhere", cp))
                # (Line 342) SetSwitch("Recall - Oda", Clear);
                DoActions(KillUnitAt(All, "40 + 1n Firebat", "Anywhere", cp))
                # (Line 343) }
                DoActions(SetSwitch("Recall - Oda", Clear))
                # (Line 345) f.SkillWait(cp, 80);
            EUDEndIf()
            f.SkillWait(cp, 80)
            # (Line 347) f.loop[cp] += 1;
            _ARRW(f.loop, cp).__iadd__(1)
            # (Line 349) if (f.loop[cp] == 19)
            if EUDIf()(f.loop[cp] == 19):
                # (Line 350) {
                # (Line 351) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 352) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 353) }
                # (Line 354) }
            EUDEndIf()
            # (Line 355) else if (f.count[cp] == 6)
        if EUDElseIf()(f.count[cp] == 6):
            # (Line 356) {
            # (Line 357) f.SkillEnd(cp);
            f.SkillEnd(cp)
            # (Line 358) }
            # (Line 359) }
        EUDEndIf()
        # (Line 361) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
    EUDEndIf()
    # (Line 362) }
    DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
    # (Line 364) function EdgeShapeAt(cp : TrgPlayer, count, Unit : TrgUnit, degree, n, interval, x, y)

# (Line 365) {
@EUDTypedFunc([TrgPlayer, None, TrgUnit, None, None, None, None, None])
def EdgeShapeAt(cp, count, Unit, degree, n, interval, x, y):
    # (Line 366) f.EdgeShapeAt(cp, count, Unit, degree, n, interval, x, y);
    f.EdgeShapeAt(cp, count, Unit, degree, n, interval, x, y)
    # (Line 367) f.EdgeShapeAt(cp, count, Unit, degree, n, interval, -x, -y);
    f.EdgeShapeAt(cp, count, Unit, degree, n, interval, -x, -y)
    # (Line 368) f.EdgeShapeAt(cp, count, Unit, degree, n, interval, -y, x);
    f.EdgeShapeAt(cp, count, Unit, degree, n, interval, -y, x)
    # (Line 369) f.EdgeShapeAt(cp, count, Unit, degree, n, interval, y, -x);
    f.EdgeShapeAt(cp, count, Unit, degree, n, interval, y, -x)
    # (Line 371) f.DotShape(cp, count, Unit, x, y);
    f.DotShape(cp, count, Unit, x, y)
    # (Line 372) f.DotShape(cp, count, Unit, -x, -y);
    f.DotShape(cp, count, Unit, -x, -y)
    # (Line 373) f.DotShape(cp, count, Unit, -y, x);
    f.DotShape(cp, count, Unit, -y, x)
    # (Line 374) f.DotShape(cp, count, Unit, y, -x);
    f.DotShape(cp, count, Unit, y, -x)
    # (Line 375) }
