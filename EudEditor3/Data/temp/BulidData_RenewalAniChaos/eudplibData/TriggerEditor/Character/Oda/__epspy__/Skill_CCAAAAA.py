## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import PluginVariables as msqcvar;
import PluginVariables as msqcvar
# (Line 2) import Function as f;
import Function as f
# (Line 4) function EdgeShapeAt(cp : TrgPlayer, count, Unit : TrgUnit, degree, n, interval, x, y);
# (Line 6) function main(cp)
# (Line 7) {
@EUDFunc
def f_main(cp):
    # (Line 8) MoveUnit(All, "50 + 1n Battlecruiser", cp, "Anywhere", "[Skill]HoldPosition");
    # (Line 9) MoveUnit(All, "40 + 1n Gantrithor", cp, "Anywhere", "[Skill]HoldPosition");
    DoActions(MoveUnit(All, "50 + 1n Battlecruiser", cp, "Anywhere", "[Skill]HoldPosition"))
    # (Line 11) f.BanReturn(cp);
    DoActions(MoveUnit(All, "40 + 1n Gantrithor", cp, "Anywhere", "[Skill]HoldPosition"))
    f.BanReturn(cp)
    # (Line 12) f.HoldPosition(cp);
    f.HoldPosition(cp)
    # (Line 14) if (f.delay[cp] == 0)
    if EUDIf()(f.delay[cp] == 0):
        # (Line 15) {
        # (Line 16) if (f.count[cp] == 0)
        if EUDIf()(f.count[cp] == 0):
            # (Line 17) {
            # (Line 18) f.Table_Sin(cp, 22 * f.loop[cp], 150);
            f.Table_Sin(cp, 22 * f.loop[cp], 150)
            # (Line 19) f.Table_Cos(cp, 22 * f.loop[cp], 150);
            f.Table_Cos(cp, 22 * f.loop[cp], 150)
            # (Line 21) var x = f.CosAngle[cp];
            x = EUDVariable()
            x << (f.CosAngle[cp])
            # (Line 22) var y = f.SinAngle[cp];
            y = EUDVariable()
            y << (f.SinAngle[cp])
            # (Line 24) f.SquareShape(cp, 1, "40 + 1n Lurker", x, y);
            f.SquareShape(cp, 1, "40 + 1n Lurker", x, y)
            # (Line 25) KillUnitAt(All, "40 + 1n Lurker", "Anywhere", cp);
            # (Line 27) f.SkillWait(cp, 80);
            DoActions(KillUnitAt(All, "40 + 1n Lurker", "Anywhere", cp))
            f.SkillWait(cp, 80)
            # (Line 29) f.loop[cp] += 1;
            _ARRW(f.loop, cp).__iadd__(1)
            # (Line 31) if (f.loop[cp] == 4)
            if EUDIf()(f.loop[cp] == 4):
                # (Line 32) {
                # (Line 33) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 34) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 35) }
                # (Line 36) }
            EUDEndIf()
            # (Line 37) else if (f.count[cp] == 1)
        if EUDElseIf()(f.count[cp] == 1):
            # (Line 38) {
            # (Line 39) RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", cp);
            # (Line 41) f.Table_Sin(cp, 45 * f.loop[cp], 100);
            DoActions(RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", cp))
            f.Table_Sin(cp, 45 * f.loop[cp], 100)
            # (Line 42) f.Table_Cos(cp, 45 * f.loop[cp], 100);
            f.Table_Cos(cp, 45 * f.loop[cp], 100)
            # (Line 44) var x = f.CosAngle[cp];
            x = EUDVariable()
            x << (f.CosAngle[cp])
            # (Line 45) var y = f.SinAngle[cp];
            y = EUDVariable()
            y << (f.SinAngle[cp])
            # (Line 47) f.DoubleShape(cp, 1, "40 + 1n Wraith", x, y);
            f.DoubleShape(cp, 1, "40 + 1n Wraith", x, y)
            # (Line 48) f.DoubleShape(cp, 1, "Scantid (Desert)", x, y);
            f.DoubleShape(cp, 1, "Scantid (Desert)", x, y)
            # (Line 49) KillUnitAt(All, "Scantid (Desert)", "Anywhere", cp);
            # (Line 51) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
            DoActions(KillUnitAt(All, "Scantid (Desert)", "Anywhere", cp))
            # (Line 52) Order("40 + 1n Wraith", cp, "Anywhere", Attack, f.location[cp]);
            DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
            # (Line 54) f.SkillWait(cp, 80);
            DoActions(Order("40 + 1n Wraith", cp, "Anywhere", Attack, f.location[cp]))
            f.SkillWait(cp, 80)
            # (Line 56) f.loop[cp] += 1;
            _ARRW(f.loop, cp).__iadd__(1)
            # (Line 58) if (f.loop[cp] == 4)
            if EUDIf()(f.loop[cp] == 4):
                # (Line 59) {
                # (Line 60) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 61) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 62) }
                # (Line 63) }
            EUDEndIf()
            # (Line 64) else if (f.count[cp] == 2)
        if EUDElseIf()(f.count[cp] == 2):
            # (Line 65) {
            # (Line 66) f.Table_Sin(cp, 90 - 22 * f.loop[cp], 150);
            f.Table_Sin(cp, 90 - 22 * f.loop[cp], 150)
            # (Line 67) f.Table_Cos(cp, 90 - 22 * f.loop[cp], 150);
            f.Table_Cos(cp, 90 - 22 * f.loop[cp], 150)
            # (Line 69) var x = f.CosAngle[cp];
            x = EUDVariable()
            x << (f.CosAngle[cp])
            # (Line 70) var y = f.SinAngle[cp];
            y = EUDVariable()
            y << (f.SinAngle[cp])
            # (Line 72) if (f.loop[cp] % 2 == 0)
            if EUDIf()(f.loop[cp] % 2 == 0):
                # (Line 73) {
                # (Line 74) RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", cp);
                # (Line 76) if (f.loop[cp] == 0)
                DoActions(RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", cp))
                if EUDIf()(f.loop[cp] == 0):
                    # (Line 77) {
                    # (Line 78) f.SquareShape(cp, 1, "50 + 1n Battlecruiser", x, y);
                    f.SquareShape(cp, 1, "50 + 1n Battlecruiser", x, y)
                    # (Line 79) }
                    # (Line 80) else if (f.loop[cp] == 2)
                if EUDElseIf()(f.loop[cp] == 2):
                    # (Line 81) {
                    # (Line 82) f.SquareShape(cp, 1, "100 + 1n Hyperion", x, y);
                    f.SquareShape(cp, 1, "100 + 1n Hyperion", x, y)
                    # (Line 83) }
                    # (Line 84) f.SquareShape(cp, 1, "50 + 1n Tank", x, y);
                EUDEndIf()
                f.SquareShape(cp, 1, "50 + 1n Tank", x, y)
                # (Line 85) KillUnitAt(All, "50 + 1n Tank", "Anywhere", cp);
                # (Line 87) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", cp))
                # (Line 88) Order("100 + 1n Hyperion", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 89) Order("50 + 1n Battlecruiser", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(Order("100 + 1n Hyperion", cp, "Anywhere", Attack, f.location[cp]))
                # (Line 90) }
                DoActions(Order("50 + 1n Battlecruiser", cp, "Anywhere", Attack, f.location[cp]))
                # (Line 91) else if (f.loop[cp] % 2 == 1)
            if EUDElseIf()(f.loop[cp] % 2 == 1):
                # (Line 92) {
                # (Line 93) f.SquareShape(cp, 1, "40 + 1n Gantrithor", x, y);
                f.SquareShape(cp, 1, "40 + 1n Gantrithor", x, y)
                # (Line 94) f.SquareShape(cp, 1, "60 + 1n Archon", x, y);
                f.SquareShape(cp, 1, "60 + 1n Archon", x, y)
                # (Line 95) KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", cp);
                # (Line 96) KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp);
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", cp))
                # (Line 97) }
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp))
                # (Line 99) f.SkillWait(cp, 80);
            EUDEndIf()
            f.SkillWait(cp, 80)
            # (Line 101) f.loop[cp] += 1;
            _ARRW(f.loop, cp).__iadd__(1)
            # (Line 103) if (f.loop[cp] == 4)
            if EUDIf()(f.loop[cp] == 4):
                # (Line 104) {
                # (Line 105) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 106) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 107) }
                # (Line 108) }
            EUDEndIf()
            # (Line 109) else if (f.count[cp] == 3)
        if EUDElseIf()(f.count[cp] == 3):
            # (Line 110) {
            # (Line 111) if (f.loop[cp] < 4)
            if EUDIf()(f.loop[cp] >= 4, neg=True):
                # (Line 112) {
                # (Line 113) var x = 300 - 75 * f.loop[cp];
                x = EUDVariable()
                x << (300 - 75 * f.loop[cp])
                # (Line 114) var y = 75 * f.loop[cp];
                y = EUDVariable()
                y << (75 * f.loop[cp])
                # (Line 116) f.SquareShape(cp, 1, "60 + 1n Siege", x, y);
                f.SquareShape(cp, 1, "60 + 1n Siege", x, y)
                # (Line 117) f.SquareShape(cp, 8, "Protoss Dark Archon", x, y);
                f.SquareShape(cp, 8, "Protoss Dark Archon", x, y)
                # (Line 118) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp);
                # (Line 120) if (f.loop[cp] == 0)
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp))
                if EUDIf()(f.loop[cp] == 0):
                    # (Line 121) {
                    # (Line 122) KillUnitAt(All, "100 + 1n Hyperion", "Anywhere", cp);
                    # (Line 124) f.Table_Sin(cp, 90, 150);
                    DoActions(KillUnitAt(All, "100 + 1n Hyperion", "Anywhere", cp))
                    f.Table_Sin(cp, 90, 150)
                    # (Line 125) f.Table_Cos(cp, 90, 150);
                    f.Table_Cos(cp, 90, 150)
                    # (Line 127) x = f.CosAngle[cp];
                    x << (f.CosAngle[cp])
                    # (Line 128) y = f.SinAngle[cp];
                    y << (f.SinAngle[cp])
                    # (Line 130) f.SquareShape(cp, 9, "60 + 1n Archon", x, y);
                    f.SquareShape(cp, 9, "60 + 1n Archon", x, y)
                    # (Line 131) KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp);
                    # (Line 133) }
                    DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp))
                    # (Line 134) else if (f.loop[cp] == 2)
                if EUDElseIf()(f.loop[cp] == 2):
                    # (Line 135) {
                    # (Line 136) f.Table_Sin(cp, 45, 150);
                    f.Table_Sin(cp, 45, 150)
                    # (Line 137) f.Table_Cos(cp, 45, 150);
                    f.Table_Cos(cp, 45, 150)
                    # (Line 139) x = f.CosAngle[cp];
                    x << (f.CosAngle[cp])
                    # (Line 140) y = f.SinAngle[cp];
                    y << (f.SinAngle[cp])
                    # (Line 142) f.SquareShape(cp, 1, "40 + 1n Gantrithor", x, y);
                    f.SquareShape(cp, 1, "40 + 1n Gantrithor", x, y)
                    # (Line 143) f.SquareShape(cp, 9, "60 + 1n Archon", x, y);
                    f.SquareShape(cp, 9, "60 + 1n Archon", x, y)
                    # (Line 144) KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp);
                    # (Line 145) }
                    DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp))
                    # (Line 146) }
                EUDEndIf()
                # (Line 148) f.SkillWait(cp, 80);
            EUDEndIf()
            f.SkillWait(cp, 80)
            # (Line 150) f.loop[cp] += 1;
            _ARRW(f.loop, cp).__iadd__(1)
            # (Line 152) if (f.loop[cp] == 4)
            if EUDIf()(f.loop[cp] == 4):
                # (Line 153) {
                # (Line 154) ModifyUnitHangarCount(2, All, "40 + 1n Gantrithor", CurrentPlayer, "Anywhere");
                # (Line 155) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                DoActions(ModifyUnitHangarCount(2, All, "40 + 1n Gantrithor", CurrentPlayer, "Anywhere"))
                # (Line 156) Order("40 + 1n Gantrithor", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 158) f.count[cp] += 1;
                DoActions(Order("40 + 1n Gantrithor", cp, "Anywhere", Attack, f.location[cp]))
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 159) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 160) }
                # (Line 161) }
            EUDEndIf()
            # (Line 162) else if (f.count[cp] == 4)
        if EUDElseIf()(f.count[cp] == 4):
            # (Line 163) {
            # (Line 164) var x = 0;
            x = EUDVariable()
            x << (0)
            # (Line 165) var y = 0;
            y = EUDVariable()
            y << (0)
            # (Line 167) if (f.loop[cp] < 4)
            if EUDIf()(f.loop[cp] >= 4, neg=True):
                # (Line 168) {
                # (Line 169) var i = 0;
                i = EUDVariable()
                i << (0)
                # (Line 171) for (; i <= f.loop[cp]; i++)
                if EUDWhile()(i <= f.loop[cp]):
                    def _t20():
                        i.__iadd__(1)
                    # (Line 172) {
                    # (Line 173) f.Table_Sin(cp, 22 + 45 * i, 50 + 75 * i);
                    f.Table_Sin(cp, 22 + 45 * i, 50 + 75 * i)
                    # (Line 174) f.Table_Cos(cp, 22 + 45 * i, 50 + 75 * i);
                    f.Table_Cos(cp, 22 + 45 * i, 50 + 75 * i)
                    # (Line 176) x = f.CosAngle[cp];
                    x << (f.CosAngle[cp])
                    # (Line 177) y = f.SinAngle[cp];
                    y << (f.SinAngle[cp])
                    # (Line 179) EdgeShapeAt(cp, 1, "60 + 1n High Templar", 22, 3, 32, x, y);
                    EdgeShapeAt(cp, 1, "60 + 1n High Templar", 22, 3, 32, x, y)
                    # (Line 180) KillUnitAt(All, "60 + 1n High Templar", "Anywhere", cp);
                    # (Line 181) }
                    DoActions(KillUnitAt(All, "60 + 1n High Templar", "Anywhere", cp))
                    # (Line 182) }
                    EUDSetContinuePoint()
                    _t20()
                EUDEndWhile()
                # (Line 184) var r = 0;
            EUDEndIf()
            r = EUDVariable()
            r << (0)
            # (Line 185) var d = 0;
            d = EUDVariable()
            d << (0)
            # (Line 187) if (f.loop[cp] == 3)
            if EUDIf()(f.loop[cp] == 3):
                # (Line 188) {
                # (Line 189) r = 22;
                r << (22)
                # (Line 190) d = 200;
                d << (200)
                # (Line 191) }
                # (Line 192) else if (f.loop[cp] == 4)
            if EUDElseIf()(f.loop[cp] == 4):
                # (Line 193) {
                # (Line 194) r = 67;
                r << (67)
                # (Line 195) d = 150;
                d << (150)
                # (Line 196) }
                # (Line 197) else if (f.loop[cp] == 5)
            if EUDElseIf()(f.loop[cp] == 5):
                # (Line 198) {
                # (Line 199) r = 22;
                r << (22)
                # (Line 200) d = 250;
                d << (250)
                # (Line 201) }
                # (Line 202) else if (f.loop[cp] == 6)
            if EUDElseIf()(f.loop[cp] == 6):
                # (Line 203) {
                # (Line 204) r = 67;
                r << (67)
                # (Line 205) d = 100;
                d << (100)
                # (Line 206) }
                # (Line 207) else if (f.loop[cp] == 7)
            if EUDElseIf()(f.loop[cp] == 7):
                # (Line 208) {
                # (Line 209) r = 67;
                r << (67)
                # (Line 210) d = 250;
                d << (250)
                # (Line 211) }
                # (Line 212) else if (f.loop[cp] == 8)
            if EUDElseIf()(f.loop[cp] == 8):
                # (Line 213) {
                # (Line 214) r = 22;
                r << (22)
                # (Line 215) d = 150;
                d << (150)
                # (Line 216) }
                # (Line 217) else if (f.loop[cp] == 9)
            if EUDElseIf()(f.loop[cp] == 9):
                # (Line 218) {
                # (Line 219) r = 22;
                r << (22)
                # (Line 220) d = 250;
                d << (250)
                # (Line 222) SetSwitch("Recall - Oda", Set);
                # (Line 223) }
                DoActions(SetSwitch("Recall - Oda", Set))
                # (Line 226) if (f.loop[cp] >= 3 && f.loop[cp] < 10)
            EUDEndIf()
            if EUDIf()(EUDSCAnd()(f.loop[cp] >= 3)(f.loop[cp] >= 10, neg=True)()):
                # (Line 227) {
                # (Line 228) f.Table_Sin(cp, r, d);
                f.Table_Sin(cp, r, d)
                # (Line 229) f.Table_Cos(cp, r, d);
                f.Table_Cos(cp, r, d)
                # (Line 231) x = f.CosAngle[cp];
                x << (f.CosAngle[cp])
                # (Line 232) y = f.SinAngle[cp];
                y << (f.SinAngle[cp])
                # (Line 234) EdgeShapeAt(cp, 1, "40 + 1n Mojo", 22, 2, 50, x, y);
                EdgeShapeAt(cp, 1, "40 + 1n Mojo", 22, 2, 50, x, y)
                # (Line 235) KillUnitAt(All, "40 + 1n Mojo", "Anywhere", cp);
                # (Line 237) f.Table_Sin(cp, r + 90, d);
                DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", cp))
                f.Table_Sin(cp, r + 90, d)
                # (Line 238) f.Table_Cos(cp, r + 90, d);
                f.Table_Cos(cp, r + 90, d)
                # (Line 240) x = f.CosAngle[cp];
                x << (f.CosAngle[cp])
                # (Line 241) y = f.SinAngle[cp];
                y << (f.SinAngle[cp])
                # (Line 243) EdgeShapeAt(cp, 1, "Target", 22, 3, 32, x, y);
                EdgeShapeAt(cp, 1, "Target", 22, 3, 32, x, y)
                # (Line 244) EdgeShapeAt(cp, 1, "60 + 1n Archon", 22, 2, 50, x, y);
                EdgeShapeAt(cp, 1, "60 + 1n Archon", 22, 2, 50, x, y)
                # (Line 245) KillUnitAt(All, "Target", "Anywhere", cp);
                # (Line 246) KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp);
                DoActions(KillUnitAt(All, "Target", "Anywhere", cp))
                # (Line 248) if (f.loop[cp] % 2 == 1)
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp))
                if EUDIf()(f.loop[cp] % 2 == 1):
                    # (Line 249) {
                    # (Line 250) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                    # (Line 251) Order("40 + 1n Mojo", cp, "Anywhere", Attack, f.location[cp]);
                    DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                    # (Line 252) }
                    DoActions(Order("40 + 1n Mojo", cp, "Anywhere", Attack, f.location[cp]))
                    # (Line 254) if (f.loop[cp] == 3)
                EUDEndIf()
                if EUDIf()(f.loop[cp] == 3):
                    # (Line 255) {
                    # (Line 256) f.SquareShape(cp, 1, "40 + 1n Goliath", x, y);
                    f.SquareShape(cp, 1, "40 + 1n Goliath", x, y)
                    # (Line 258) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                    # (Line 259) MoveUnit(All, "40 + 1n Goliath", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                    DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                    # (Line 260) Order("40 + 1n Goliath", cp, "Anywhere", Attack, f.location[cp]);
                    DoActions(MoveUnit(All, "40 + 1n Goliath", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                    # (Line 261) }
                    DoActions(Order("40 + 1n Goliath", cp, "Anywhere", Attack, f.location[cp]))
                    # (Line 262) if (f.loop[cp] == 4)
                EUDEndIf()
                if EUDIf()(f.loop[cp] == 4):
                    # (Line 263) {
                    # (Line 264) f.SquareShape(cp, 1, "40 + 1n Drone", x, y);
                    f.SquareShape(cp, 1, "40 + 1n Drone", x, y)
                    # (Line 266) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                    # (Line 267) MoveUnit(All, "40 + 1n Drone", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                    DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                    # (Line 268) Order("40 + 1n Drone", cp, "Anywhere", Attack, f.location[cp]);
                    DoActions(MoveUnit(All, "40 + 1n Drone", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                    # (Line 269) }
                    DoActions(Order("40 + 1n Drone", cp, "Anywhere", Attack, f.location[cp]))
                    # (Line 270) if (f.loop[cp] == 5)
                EUDEndIf()
                if EUDIf()(f.loop[cp] == 5):
                    # (Line 271) {
                    # (Line 272) f.SquareShape(cp, 1, "50 + 1n Tank", x, y);
                    f.SquareShape(cp, 1, "50 + 1n Tank", x, y)
                    # (Line 274) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                    # (Line 275) MoveUnit(All, "50 + 1n Tank", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                    DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                    # (Line 276) Order("50 + 1n Tank", cp, "Anywhere", Attack, f.location[cp]);
                    DoActions(MoveUnit(All, "50 + 1n Tank", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                    # (Line 277) }
                    DoActions(Order("50 + 1n Tank", cp, "Anywhere", Attack, f.location[cp]))
                    # (Line 278) if (f.loop[cp] == 6)
                EUDEndIf()
                if EUDIf()(f.loop[cp] == 6):
                    # (Line 279) {
                    # (Line 280) f.SquareShape(cp, 1, "40 + 1n Drone", x, y);
                    f.SquareShape(cp, 1, "40 + 1n Drone", x, y)
                    # (Line 282) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                    # (Line 283) MoveUnit(All, "40 + 1n Drone", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                    DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                    # (Line 284) Order("40 + 1n Drone", cp, "Anywhere", Attack, f.location[cp]);
                    DoActions(MoveUnit(All, "40 + 1n Drone", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                    # (Line 285) }
                    DoActions(Order("40 + 1n Drone", cp, "Anywhere", Attack, f.location[cp]))
                    # (Line 286) if (f.loop[cp] == 7)
                EUDEndIf()
                if EUDIf()(f.loop[cp] == 7):
                    # (Line 287) {
                    # (Line 288) f.SquareShape(cp, 1, "60 + 1n Dragoon", x, y);
                    f.SquareShape(cp, 1, "60 + 1n Dragoon", x, y)
                    # (Line 290) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                    # (Line 291) MoveUnit(All, "60 + 1n Dragoon", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                    DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                    # (Line 292) Order("60 + 1n Dragoon", cp, "Anywhere", Attack, f.location[cp]);
                    DoActions(MoveUnit(All, "60 + 1n Dragoon", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                    # (Line 293) }
                    DoActions(Order("60 + 1n Dragoon", cp, "Anywhere", Attack, f.location[cp]))
                    # (Line 294) if (f.loop[cp] == 8)
                EUDEndIf()
                if EUDIf()(f.loop[cp] == 8):
                    # (Line 295) {
                    # (Line 296) f.SquareShape(cp, 1, "40 + 1n Firebat", x, y);
                    f.SquareShape(cp, 1, "40 + 1n Firebat", x, y)
                    # (Line 298) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                    # (Line 299) MoveUnit(All, "40 + 1n Firebat", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                    DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                    # (Line 300) Order("40 + 1n Firebat", cp, "Anywhere", Attack, f.location[cp]);
                    DoActions(MoveUnit(All, "40 + 1n Firebat", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                    # (Line 301) }
                    DoActions(Order("40 + 1n Firebat", cp, "Anywhere", Attack, f.location[cp]))
                    # (Line 302) if (f.loop[cp] == 9)
                EUDEndIf()
                if EUDIf()(f.loop[cp] == 9):
                    # (Line 303) {
                    # (Line 304) f.SquareShape(cp, 1, "40 + 1n Drone", x, y);
                    f.SquareShape(cp, 1, "40 + 1n Drone", x, y)
                    # (Line 306) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                    # (Line 307) MoveUnit(All, "40 + 1n Drone", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                    DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                    # (Line 308) Order("40 + 1n Drone", cp, "Anywhere", Attack, f.location[cp]);
                    DoActions(MoveUnit(All, "40 + 1n Drone", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                    # (Line 309) }
                    DoActions(Order("40 + 1n Drone", cp, "Anywhere", Attack, f.location[cp]))
                    # (Line 310) }
                EUDEndIf()
                # (Line 312) f.SkillWait(cp, 80);
            EUDEndIf()
            f.SkillWait(cp, 80)
            # (Line 314) f.loop[cp] += 1;
            _ARRW(f.loop, cp).__iadd__(1)
            # (Line 316) if (f.loop[cp] == 67)
            if EUDIf()(f.loop[cp] == 67):
                # (Line 317) {
                # (Line 318) f.Voice_Routine(cp, 23);
                f.Voice_Routine(cp, 23)
                # (Line 320) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 321) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 322) }
                # (Line 323) }
            EUDEndIf()
            # (Line 324) else if (f.count[cp] == 5)
        if EUDElseIf()(f.count[cp] == 5):
            # (Line 325) {
            # (Line 326) if (f.loop[cp] == 0)
            if EUDIf()(f.loop[cp] == 0):
                # (Line 327) {
                # (Line 328) KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", cp);
                # (Line 329) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp);
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", cp))
                # (Line 331) }
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp))
                # (Line 332) if (f.loop[cp] == 18)
            EUDEndIf()
            if EUDIf()(f.loop[cp] == 18):
                # (Line 333) {
                # (Line 334) KillUnitAt(All, "40 + 1n Goliath", "Anywhere", cp);
                # (Line 335) KillUnitAt(All, "40 + 1n Drone", "Anywhere", cp);
                DoActions(KillUnitAt(All, "40 + 1n Goliath", "Anywhere", cp))
                # (Line 336) KillUnitAt(All, "50 + 1n Tank", "Anywhere", cp);
                DoActions(KillUnitAt(All, "40 + 1n Drone", "Anywhere", cp))
                # (Line 337) KillUnitAt(All, "60 + 1n Siege", "Anywhere", cp);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", cp))
                # (Line 338) KillUnitAt(All, "60 + 1n Dragoon", "Anywhere", cp);
                DoActions(KillUnitAt(All, "60 + 1n Siege", "Anywhere", cp))
                # (Line 339) KillUnitAt(All, "40 + 1n Firebat", "Anywhere", cp);
                DoActions(KillUnitAt(All, "60 + 1n Dragoon", "Anywhere", cp))
                # (Line 341) SetSwitch("Recall - Oda", Clear);
                DoActions(KillUnitAt(All, "40 + 1n Firebat", "Anywhere", cp))
                # (Line 342) }
                DoActions(SetSwitch("Recall - Oda", Clear))
                # (Line 344) f.SkillWait(cp, 80);
            EUDEndIf()
            f.SkillWait(cp, 80)
            # (Line 346) f.loop[cp] += 1;
            _ARRW(f.loop, cp).__iadd__(1)
            # (Line 348) if (f.loop[cp] == 19)
            if EUDIf()(f.loop[cp] == 19):
                # (Line 349) {
                # (Line 350) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 351) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 352) }
                # (Line 353) }
            EUDEndIf()
            # (Line 354) else if (f.count[cp] == 6)
        if EUDElseIf()(f.count[cp] == 6):
            # (Line 355) {
            # (Line 356) f.SkillEnd(cp);
            f.SkillEnd(cp)
            # (Line 357) }
            # (Line 358) }
        EUDEndIf()
        # (Line 360) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
    EUDEndIf()
    # (Line 361) }
    DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
    # (Line 363) function EdgeShapeAt(cp : TrgPlayer, count, Unit : TrgUnit, degree, n, interval, x, y)

# (Line 364) {
@EUDTypedFunc([TrgPlayer, None, TrgUnit, None, None, None, None, None])
def EdgeShapeAt(cp, count, Unit, degree, n, interval, x, y):
    # (Line 365) f.EdgeShapeAt(cp, count, Unit, degree, n, interval, x, y);
    f.EdgeShapeAt(cp, count, Unit, degree, n, interval, x, y)
    # (Line 366) f.EdgeShapeAt(cp, count, Unit, degree, n, interval, -x, -y);
    f.EdgeShapeAt(cp, count, Unit, degree, n, interval, -x, -y)
    # (Line 367) f.EdgeShapeAt(cp, count, Unit, degree, n, interval, -y, x);
    f.EdgeShapeAt(cp, count, Unit, degree, n, interval, -y, x)
    # (Line 368) f.EdgeShapeAt(cp, count, Unit, degree, n, interval, y, -x);
    f.EdgeShapeAt(cp, count, Unit, degree, n, interval, y, -x)
    # (Line 370) f.DotShape(cp, count, Unit, x, y);
    f.DotShape(cp, count, Unit, x, y)
    # (Line 371) f.DotShape(cp, count, Unit, -x, -y);
    f.DotShape(cp, count, Unit, -x, -y)
    # (Line 372) f.DotShape(cp, count, Unit, -y, x);
    f.DotShape(cp, count, Unit, -y, x)
    # (Line 373) f.DotShape(cp, count, Unit, y, -x);
    f.DotShape(cp, count, Unit, y, -x)
    # (Line 374) }
