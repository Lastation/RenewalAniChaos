## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import Function as f;
import Function as f
# (Line 3) function main(cp)
# (Line 4) {
@EUDFunc
def f_main(cp):
    # (Line 5) if (f.delay[cp] == 0)
    if EUDIf()(f.delay[cp] == 0):
        # (Line 6) {
        # (Line 7) if (f.count[cp] == 0)
        if EUDIf()(f.count[cp] == 0):
            # (Line 8) {
            # (Line 9) RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", cp);
            # (Line 11) f.Table_Sin(cp, 22 + 45 * f.loop[cp], 100);
            DoActions(RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", cp))
            f.Table_Sin(cp, 22 + 45 * f.loop[cp], 100)
            # (Line 12) f.Table_Cos(cp, 22 + 45 * f.loop[cp], 100);
            f.Table_Cos(cp, 22 + 45 * f.loop[cp], 100)
            # (Line 14) f.SquareShape(cp, 1, "Rhynadon (Badlands)", f.CosAngle[cp], f.SinAngle[cp]);
            f.SquareShape(cp, 1, "Rhynadon (Badlands)", f.CosAngle[cp], f.SinAngle[cp])
            # (Line 15) KillUnitAt(All, "Rhynadon (Badlands)", "Anywhere", cp);
            # (Line 17) f.DotShape(cp, 1, "40 + 1n Wraith", 0, 0);
            DoActions(KillUnitAt(All, "Rhynadon (Badlands)", "Anywhere", cp))
            f.DotShape(cp, 1, "40 + 1n Wraith", 0, 0)
            # (Line 18) Order("40 + 1n Wraith", cp, "Anywhere", Attack, "Anywhere");
            # (Line 20) f.SkillWait(cp, 160);
            DoActions(Order("40 + 1n Wraith", cp, "Anywhere", Attack, "Anywhere"))
            f.SkillWait(cp, 160)
            # (Line 22) f.loop[cp] += 1;
            _ARRW(f.loop, cp).__iadd__(1)
            # (Line 24) if (f.loop[cp] == 4)
            if EUDIf()(f.loop[cp] == 4):
                # (Line 25) {
                # (Line 26) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 27) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 28) }
                # (Line 29) }
            EUDEndIf()
            # (Line 30) else if (f.count[cp] == 1)
        if EUDElseIf()(f.count[cp] == 1):
            # (Line 31) {
            # (Line 32) if (f.loop[cp] == 0)
            if EUDIf()(f.loop[cp] == 0):
                # (Line 33) {
                # (Line 34) RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", cp);
                # (Line 36) f.EdgeShape(cp, 1, "50 + 1n Tank", 45, 5, 100);
                DoActions(RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", cp))
                f.EdgeShape(cp, 1, "50 + 1n Tank", 45, 5, 100)
                # (Line 37) KillUnitAt(All, "50 + 1n Tank", "Anywhere", cp);
                # (Line 38) }
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", cp))
                # (Line 39) else if (f.loop[cp] == 1)
            if EUDElseIf()(f.loop[cp] == 1):
                # (Line 40) {
                # (Line 41) f.EdgeShape(cp, 1, " Unit. Hoffnung 25000", 45, 5, 100);
                f.EdgeShape(cp, 1, " Unit. Hoffnung 25000", 45, 5, 100)
                # (Line 42) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp);
                # (Line 44) f.NxNSquareShape(cp, 1, "40 + 1n Wraith", 3, 50);
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp))
                f.NxNSquareShape(cp, 1, "40 + 1n Wraith", 3, 50)
                # (Line 45) Order("40 + 1n Wraith", cp, "Anywhere", Attack, "Anywhere");
                # (Line 46) }
                DoActions(Order("40 + 1n Wraith", cp, "Anywhere", Attack, "Anywhere"))
                # (Line 47) else if (f.loop[cp] == 3)
            if EUDElseIf()(f.loop[cp] == 3):
                # (Line 48) {
                # (Line 49) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", cp);
                # (Line 50) }
                DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", cp))
                # (Line 51) else if (f.loop[cp] == 4)
            if EUDElseIf()(f.loop[cp] == 4):
                # (Line 52) {
                # (Line 53) f.LineShapeAt(cp, 1, "40 + 1n Wraith", 135, 4, 50, 100, 50);
                f.LineShapeAt(cp, 1, "40 + 1n Wraith", 135, 4, 50, 100, 50)
                # (Line 54) f.LineShapeAt(cp, 1, "40 + 1n Wraith", 135, 4, 50, -100, -50);
                f.LineShapeAt(cp, 1, "40 + 1n Wraith", 135, 4, 50, -100, -50)
                # (Line 55) f.LineShapeAt(cp, 1, "50 + 1n Tank", 135, 4, 50, 100, 50);
                f.LineShapeAt(cp, 1, "50 + 1n Tank", 135, 4, 50, 100, 50)
                # (Line 56) f.LineShapeAt(cp, 1, "50 + 1n Tank", 135, 4, 50, -100, -50);
                f.LineShapeAt(cp, 1, "50 + 1n Tank", 135, 4, 50, -100, -50)
                # (Line 57) KillUnitAt(All, "50 + 1n Tank", "Anywhere", cp);
                # (Line 59) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", cp))
                # (Line 60) Order("40 + 1n Wraith", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 61) }
                DoActions(Order("40 + 1n Wraith", cp, "Anywhere", Attack, f.location[cp]))
                # (Line 62) else if (f.loop[cp] == 5)
            if EUDElseIf()(f.loop[cp] == 5):
                # (Line 63) {
                # (Line 64) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", cp);
                # (Line 66) f.LineShapeAt(cp, 1, "40 + 1n Wraith", 45, 4, 50, -50, 100);
                DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", cp))
                f.LineShapeAt(cp, 1, "40 + 1n Wraith", 45, 4, 50, -50, 100)
                # (Line 67) f.LineShapeAt(cp, 1, "40 + 1n Wraith", 45, 4, 50, 50, -100);
                f.LineShapeAt(cp, 1, "40 + 1n Wraith", 45, 4, 50, 50, -100)
                # (Line 68) f.LineShapeAt(cp, 1, "50 + 1n Tank", 45, 4, 50, -50, 100);
                f.LineShapeAt(cp, 1, "50 + 1n Tank", 45, 4, 50, -50, 100)
                # (Line 69) f.LineShapeAt(cp, 1, "50 + 1n Tank", 45, 4, 50, 50, -100);
                f.LineShapeAt(cp, 1, "50 + 1n Tank", 45, 4, 50, 50, -100)
                # (Line 70) KillUnitAt(All, "50 + 1n Tank", "Anywhere", cp);
                # (Line 72) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", cp))
                # (Line 73) Order("40 + 1n Wraith", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 74) }
                DoActions(Order("40 + 1n Wraith", cp, "Anywhere", Attack, f.location[cp]))
                # (Line 75) else if (f.loop[cp] == 6)
            if EUDElseIf()(f.loop[cp] == 6):
                # (Line 76) {
                # (Line 77) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", cp);
                # (Line 78) }
                DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", cp))
                # (Line 80) f.SkillWait(cp, 160);
            EUDEndIf()
            f.SkillWait(cp, 160)
            # (Line 82) f.loop[cp] += 1;
            _ARRW(f.loop, cp).__iadd__(1)
            # (Line 84) if (f.loop[cp] == 7)
            if EUDIf()(f.loop[cp] == 7):
                # (Line 85) {
                # (Line 86) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 87) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 88) }
                # (Line 89) }
            EUDEndIf()
            # (Line 90) else if (f.count[cp] == 2)
        if EUDElseIf()(f.count[cp] == 2):
            # (Line 91) {
            # (Line 92) f.SkillEnd(cp);
            f.SkillEnd(cp)
            # (Line 93) }
            # (Line 94) }
        EUDEndIf()
        # (Line 95) }
    EUDEndIf()
