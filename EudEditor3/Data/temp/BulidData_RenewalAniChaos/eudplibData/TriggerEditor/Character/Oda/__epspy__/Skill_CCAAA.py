## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import PluginVariables as msqcvar;
import PluginVariables as msqcvar
# (Line 2) import Function as f;
import Function as f
# (Line 4) function main(cp)
# (Line 5) {
@EUDFunc
def f_main(cp):
    # (Line 6) MoveUnit(All, "50 + 1n Tank", cp, "Anywhere", "[Skill]HoldPosition");
    # (Line 7) MoveUnit(All, "40 + 1n Goliath", cp, "Anywhere", "[Skill]HoldPosition");
    DoActions(MoveUnit(All, "50 + 1n Tank", cp, "Anywhere", "[Skill]HoldPosition"))
    # (Line 8) MoveUnit(All, "60 + 1n Dragoon", cp, "Anywhere", "[Skill]HoldPosition");
    DoActions(MoveUnit(All, "40 + 1n Goliath", cp, "Anywhere", "[Skill]HoldPosition"))
    # (Line 10) f.BanReturn(cp);
    DoActions(MoveUnit(All, "60 + 1n Dragoon", cp, "Anywhere", "[Skill]HoldPosition"))
    f.BanReturn(cp)
    # (Line 11) f.HoldPosition(cp);
    f.HoldPosition(cp)
    # (Line 13) if (f.delay[cp] == 0)
    if EUDIf()(f.delay[cp] == 0):
        # (Line 14) {
        # (Line 15) if (f.count[cp] == 0)
        if EUDIf()(f.count[cp] == 0):
            # (Line 16) {
            # (Line 17) var i = 50;
            i = EUDVariable()
            i << (50)
            # (Line 18) var d = 25 + 25 * f.loop[cp];
            d = EUDVariable()
            d << (25 + 25 * f.loop[cp])
            # (Line 20) f.Table_Sin(cp, 45, 25);
            f.Table_Sin(cp, 45, 25)
            # (Line 21) f.Table_Cos(cp, 45, 25);
            f.Table_Cos(cp, 45, 25)
            # (Line 23) var x_i = f.CosAngle[cp];
            x_i = EUDVariable()
            x_i << (f.CosAngle[cp])
            # (Line 24) var y_i = f.SinAngle[cp];
            y_i = EUDVariable()
            y_i << (f.SinAngle[cp])
            # (Line 26) f.DoubleShape(cp, 1, "Vulture Spider Mine", d - i / 2 + x_i, d + i / 2 + y_i);
            f.DoubleShape(cp, 1, "Vulture Spider Mine", d - i // 2 + x_i, d + i // 2 + y_i)
            # (Line 27) f.DoubleShape(cp, 1, "Vulture Spider Mine", d - i, d + i);
            f.DoubleShape(cp, 1, "Vulture Spider Mine", d - i, d + i)
            # (Line 28) f.DoubleShape(cp, 1, "Vulture Spider Mine", d + 2 * x_i, d + 2 * y_i);
            f.DoubleShape(cp, 1, "Vulture Spider Mine", d + 2 * x_i, d + 2 * y_i)
            # (Line 29) f.DoubleShape(cp, 1, "Vulture Spider Mine", d + i, d - i);
            f.DoubleShape(cp, 1, "Vulture Spider Mine", d + i, d - i)
            # (Line 30) f.DoubleShape(cp, 1, "Vulture Spider Mine", d + i / 2 + x_i, d - i / 2 + y_i);
            f.DoubleShape(cp, 1, "Vulture Spider Mine", d + i // 2 + x_i, d - i // 2 + y_i)
            # (Line 32) f.DoubleShape(cp, 1, " Unit. Hoffnung 25000", d - i, d + i);
            f.DoubleShape(cp, 1, " Unit. Hoffnung 25000", d - i, d + i)
            # (Line 33) f.DoubleShape(cp, 1, " Unit. Hoffnung 25000", d, d);
            f.DoubleShape(cp, 1, " Unit. Hoffnung 25000", d, d)
            # (Line 34) f.DoubleShape(cp, 1, " Unit. Hoffnung 25000", d - i, d + i);
            f.DoubleShape(cp, 1, " Unit. Hoffnung 25000", d - i, d + i)
            # (Line 36) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp);
            # (Line 37) KillUnitAt(All, "Vulture Spider Mine", "Anywhere", cp);
            DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp))
            # (Line 39) f.SkillWait(cp, 80);
            DoActions(KillUnitAt(All, "Vulture Spider Mine", "Anywhere", cp))
            f.SkillWait(cp, 80)
            # (Line 41) f.loop[cp] += 1;
            _ARRW(f.loop, cp).__iadd__(1)
            # (Line 43) if (f.loop[cp] == 6)
            if EUDIf()(f.loop[cp] == 6):
                # (Line 44) {
                # (Line 45) f.DoubleShape(cp, 1, "60 + 1n Siege", d - i / 2 + x_i, d + i / 2 + y_i);
                f.DoubleShape(cp, 1, "60 + 1n Siege", d - i // 2 + x_i, d + i // 2 + y_i)
                # (Line 46) f.DoubleShape(cp, 1, "60 + 1n Siege", d - i, d + i);
                f.DoubleShape(cp, 1, "60 + 1n Siege", d - i, d + i)
                # (Line 47) f.DoubleShape(cp, 1, "60 + 1n Siege", d + 2 * x_i, d + 2 * y_i);
                f.DoubleShape(cp, 1, "60 + 1n Siege", d + 2 * x_i, d + 2 * y_i)
                # (Line 48) f.DoubleShape(cp, 1, "60 + 1n Siege", d + i, d - i);
                f.DoubleShape(cp, 1, "60 + 1n Siege", d + i, d - i)
                # (Line 49) f.DoubleShape(cp, 1, "60 + 1n Siege", d + i / 2 + x_i, d - i / 2 + y_i);
                f.DoubleShape(cp, 1, "60 + 1n Siege", d + i // 2 + x_i, d - i // 2 + y_i)
                # (Line 51) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 52) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 53) }
                # (Line 54) }
            EUDEndIf()
            # (Line 55) else if (f.count[cp] == 1)
        if EUDElseIf()(f.count[cp] == 1):
            # (Line 56) {
            # (Line 58) var i = 50;
            i = EUDVariable()
            i << (50)
            # (Line 59) var d = 25 + 25 * f.loop[cp];
            d = EUDVariable()
            d << (25 + 25 * f.loop[cp])
            # (Line 61) f.Table_Sin(cp, 45, 25);
            f.Table_Sin(cp, 45, 25)
            # (Line 62) f.Table_Cos(cp, 45, 25);
            f.Table_Cos(cp, 45, 25)
            # (Line 64) var x_i = f.CosAngle[cp];
            x_i = EUDVariable()
            x_i << (f.CosAngle[cp])
            # (Line 65) var y_i = f.SinAngle[cp];
            y_i = EUDVariable()
            y_i << (f.SinAngle[cp])
            # (Line 67) f.DoubleShape(cp, 1, "Vulture Spider Mine", -d + i / 2 - x_i, d + i / 2 + y_i);
            f.DoubleShape(cp, 1, "Vulture Spider Mine", -d + i // 2 - x_i, d + i // 2 + y_i)
            # (Line 68) f.DoubleShape(cp, 1, "Vulture Spider Mine", -d + i, d + i);
            f.DoubleShape(cp, 1, "Vulture Spider Mine", -d + i, d + i)
            # (Line 69) f.DoubleShape(cp, 1, "Vulture Spider Mine", -d - 2 * x_i, d + 2 * y_i);
            f.DoubleShape(cp, 1, "Vulture Spider Mine", -d - 2 * x_i, d + 2 * y_i)
            # (Line 70) f.DoubleShape(cp, 1, "Vulture Spider Mine", -d - i, d - i);
            f.DoubleShape(cp, 1, "Vulture Spider Mine", -d - i, d - i)
            # (Line 71) f.DoubleShape(cp, 1, "Vulture Spider Mine", -d - i / 2 - x_i, d - i / 2 + y_i);
            f.DoubleShape(cp, 1, "Vulture Spider Mine", -d - i // 2 - x_i, d - i // 2 + y_i)
            # (Line 73) f.DoubleShape(cp, 1, " Unit. Hoffnung 25000", -d + i, d + i);
            f.DoubleShape(cp, 1, " Unit. Hoffnung 25000", -d + i, d + i)
            # (Line 74) f.DoubleShape(cp, 1, " Unit. Hoffnung 25000", -d, d);
            f.DoubleShape(cp, 1, " Unit. Hoffnung 25000", -d, d)
            # (Line 75) f.DoubleShape(cp, 1, " Unit. Hoffnung 25000", -d + i, d + i);
            f.DoubleShape(cp, 1, " Unit. Hoffnung 25000", -d + i, d + i)
            # (Line 77) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp);
            # (Line 78) KillUnitAt(All, "Vulture Spider Mine", "Anywhere", cp);
            DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp))
            # (Line 80) f.SkillWait(cp, 80);
            DoActions(KillUnitAt(All, "Vulture Spider Mine", "Anywhere", cp))
            f.SkillWait(cp, 80)
            # (Line 82) f.loop[cp] += 1;
            _ARRW(f.loop, cp).__iadd__(1)
            # (Line 84) if (f.loop[cp] == 6)
            if EUDIf()(f.loop[cp] == 6):
                # (Line 85) {
                # (Line 86) f.DoubleShape(cp, 1, "60 + 1n Siege", -d + i / 2 - x_i, d + i / 2 + y_i);
                f.DoubleShape(cp, 1, "60 + 1n Siege", -d + i // 2 - x_i, d + i // 2 + y_i)
                # (Line 87) f.DoubleShape(cp, 1, "60 + 1n Siege", -d + i, d + i);
                f.DoubleShape(cp, 1, "60 + 1n Siege", -d + i, d + i)
                # (Line 88) f.DoubleShape(cp, 1, "60 + 1n Siege", -d - 2 * x_i, d + 2 * y_i);
                f.DoubleShape(cp, 1, "60 + 1n Siege", -d - 2 * x_i, d + 2 * y_i)
                # (Line 89) f.DoubleShape(cp, 1, "60 + 1n Siege", -d - i, d - i);
                f.DoubleShape(cp, 1, "60 + 1n Siege", -d - i, d - i)
                # (Line 90) f.DoubleShape(cp, 1, "60 + 1n Siege", -d - i / 2 - x_i, d - i / 2 + y_i);
                f.DoubleShape(cp, 1, "60 + 1n Siege", -d - i // 2 - x_i, d - i // 2 + y_i)
                # (Line 92) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 93) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 94) }
                # (Line 95) }
            EUDEndIf()
            # (Line 96) else if (f.count[cp] == 2)
        if EUDElseIf()(f.count[cp] == 2):
            # (Line 97) {
            # (Line 98) if (f.loop[cp] < 7)
            if EUDIf()(f.loop[cp] >= 7, neg=True):
                # (Line 99) {
                # (Line 100) var i = 50;
                i = EUDVariable()
                i << (50)
                # (Line 101) var d = 150 - 25 * f.loop[cp];
                d = EUDVariable()
                d << (150 - 25 * f.loop[cp])
                # (Line 103) f.Table_Sin(cp, 45, 15);
                f.Table_Sin(cp, 45, 15)
                # (Line 104) f.Table_Cos(cp, 45, 15);
                f.Table_Cos(cp, 45, 15)
                # (Line 106) var x_i = f.CosAngle[cp];
                x_i = EUDVariable()
                x_i << (f.CosAngle[cp])
                # (Line 107) var y_i = f.SinAngle[cp];
                y_i = EUDVariable()
                y_i << (f.SinAngle[cp])
                # (Line 109) f.SquareShape(cp, 1, "40 + 1n Guardian", d - i + x_i, d + i + y_i);
                f.SquareShape(cp, 1, "40 + 1n Guardian", d - i + x_i, d + i + y_i)
                # (Line 110) f.SquareShape(cp, 1, "40 + 1n Guardian", d + 2 * x_i, d + 2 * y_i);
                f.SquareShape(cp, 1, "40 + 1n Guardian", d + 2 * x_i, d + 2 * y_i)
                # (Line 111) f.SquareShape(cp, 1, "40 + 1n Guardian", d + i + x_i, d - i + y_i);
                f.SquareShape(cp, 1, "40 + 1n Guardian", d + i + x_i, d - i + y_i)
                # (Line 113) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp);
                # (Line 115) if (f.loop[cp] == 1)
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp))
                if EUDIf()(f.loop[cp] == 1):
                    # (Line 116) {
                    # (Line 117) f.SquareShape(cp, 1, "40 + 1n Drone", d - i + x_i, d + i + y_i);
                    f.SquareShape(cp, 1, "40 + 1n Drone", d - i + x_i, d + i + y_i)
                    # (Line 118) f.SquareShape(cp, 1, "40 + 1n Drone", d + 2 * x_i, d + 2 * y_i);
                    f.SquareShape(cp, 1, "40 + 1n Drone", d + 2 * x_i, d + 2 * y_i)
                    # (Line 119) f.SquareShape(cp, 1, "40 + 1n Drone", d + i + x_i, d - i + y_i);
                    f.SquareShape(cp, 1, "40 + 1n Drone", d + i + x_i, d - i + y_i)
                    # (Line 121) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                    # (Line 122) MoveUnit(All, "40 + 1n Drone", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                    DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                    # (Line 123) Order("40 + 1n Drone", cp, "Anywhere", Attack, f.location[cp]);
                    DoActions(MoveUnit(All, "40 + 1n Drone", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                    # (Line 125) }
                    DoActions(Order("40 + 1n Drone", cp, "Anywhere", Attack, f.location[cp]))
                    # (Line 126) }
                EUDEndIf()
                # (Line 128) f.SkillWait(cp, 80);
            EUDEndIf()
            f.SkillWait(cp, 80)
            # (Line 130) f.loop[cp] += 1;
            _ARRW(f.loop, cp).__iadd__(1)
            # (Line 132) if (f.loop[cp] == 9)
            if EUDIf()(f.loop[cp] == 9):
                # (Line 133) {
                # (Line 134) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 135) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 136) }
                # (Line 137) }
            EUDEndIf()
            # (Line 138) else if (f.count[cp] == 3)
        if EUDElseIf()(f.count[cp] == 3):
            # (Line 139) {
            # (Line 140) var i = 0;
            i = EUDVariable()
            i << (0)
            # (Line 141) var x = 0;
            x = EUDVariable()
            x << (0)
            # (Line 142) var y = 0;
            y = EUDVariable()
            y << (0)
            # (Line 144) if (f.loop[cp] < 4)
            if EUDIf()(f.loop[cp] >= 4, neg=True):
                # (Line 145) {
                # (Line 146) i = f.loop[cp];
                i << (f.loop[cp])
                # (Line 148) if (i < 2)
                if EUDIf()(i >= 2, neg=True):
                    # (Line 149) {
                    # (Line 150) x = 50 - 50 * i;
                    x << (50 - 50 * i)
                    # (Line 151) y = 50 + 50 * i;
                    y << (50 + 50 * i)
                    # (Line 152) }
                    # (Line 153) else
                    # (Line 154) {
                if EUDElse()():
                    # (Line 155) x = -50 - 50 * (i - 2);
                    x << (-50 - 50 * (i - 2))
                    # (Line 156) y = 50 - 50 * (i - 2);
                    y << (50 - 50 * (i - 2))
                    # (Line 157) }
                    # (Line 158) }
                EUDEndIf()
                # (Line 159) else if (f.loop[cp] < 12)
            if EUDElseIf()(f.loop[cp] >= 12, neg=True):
                # (Line 160) {
                # (Line 161) i = f.loop[cp] - 4;
                i << (f.loop[cp] - 4)
                # (Line 163) if (i < 4)
                if EUDIf()(i >= 4, neg=True):
                    # (Line 164) {
                    # (Line 165) x = 150 - 50 * i;
                    x << (150 - 50 * i)
                    # (Line 166) y = 50 + 50 * i;
                    y << (50 + 50 * i)
                    # (Line 167) }
                    # (Line 168) else
                    # (Line 169) {
                if EUDElse()():
                    # (Line 170) x = -50 - 50 * (i - 4);
                    x << (-50 - 50 * (i - 4))
                    # (Line 171) y = 150 - 50 * (i - 4);
                    y << (150 - 50 * (i - 4))
                    # (Line 172) }
                    # (Line 173) }
                EUDEndIf()
                # (Line 175) if (i % 2 == 0 && f.loop[cp] < 12)
            EUDEndIf()
            if EUDIf()(EUDSCAnd()(i % 2 == 0)(f.loop[cp] >= 12, neg=True)()):
                # (Line 176) {
                # (Line 177) f.EdgeShapeAt(cp, 1, "Kakaru (Twilight)", 0, 2, 25, x, y);
                f.EdgeShapeAt(cp, 1, "Kakaru (Twilight)", 0, 2, 25, x, y)
                # (Line 178) f.EdgeShapeAt(cp, 1, "Rhynadon (Badlands)", 0, 2, 25, x, y);
                f.EdgeShapeAt(cp, 1, "Rhynadon (Badlands)", 0, 2, 25, x, y)
                # (Line 179) f.EdgeShapeAt(cp, 1, "Kakaru (Twilight)", 0, 2, 25, -x, -y);
                f.EdgeShapeAt(cp, 1, "Kakaru (Twilight)", 0, 2, 25, -x, -y)
                # (Line 180) f.EdgeShapeAt(cp, 1, "Rhynadon (Badlands)", 0, 2, 25, -x, -y);
                f.EdgeShapeAt(cp, 1, "Rhynadon (Badlands)", 0, 2, 25, -x, -y)
                # (Line 182) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", cp);
                # (Line 183) KillUnitAt(All, "Rhynadon (Badlands)", "Anywhere", cp);
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", cp))
                # (Line 184) }
                DoActions(KillUnitAt(All, "Rhynadon (Badlands)", "Anywhere", cp))
                # (Line 185) else
                # (Line 186) {
            if EUDElse()():
                # (Line 187) f.EdgeShapeAt(cp, 1, "40 + 1n Guardian", 0, 2, 25, x, y);
                f.EdgeShapeAt(cp, 1, "40 + 1n Guardian", 0, 2, 25, x, y)
                # (Line 188) f.EdgeShapeAt(cp, 1, "60 + 1n Archon", 0, 2, 25, x, y);
                f.EdgeShapeAt(cp, 1, "60 + 1n Archon", 0, 2, 25, x, y)
                # (Line 189) f.DotShape(cp, 1, "50 + 1n Tank", x, y);
                f.DotShape(cp, 1, "50 + 1n Tank", x, y)
                # (Line 190) f.EdgeShapeAt(cp, 1, "40 + 1n Guardian", 0, 2, 25, -x, -y);
                f.EdgeShapeAt(cp, 1, "40 + 1n Guardian", 0, 2, 25, -x, -y)
                # (Line 191) f.EdgeShapeAt(cp, 1, "60 + 1n Archon", 0, 2, 25, -x, -y);
                f.EdgeShapeAt(cp, 1, "60 + 1n Archon", 0, 2, 25, -x, -y)
                # (Line 192) f.DotShape(cp, 1, "50 + 1n Tank", -x, -y);
                f.DotShape(cp, 1, "50 + 1n Tank", -x, -y)
                # (Line 194) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp);
                # (Line 195) KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp))
                # (Line 197) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp))
                # (Line 198) MoveUnit(All, "50 + 1n Tank", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 199) Order("50 + 1n Tank", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveUnit(All, "50 + 1n Tank", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                # (Line 200) }
                DoActions(Order("50 + 1n Tank", cp, "Anywhere", Attack, f.location[cp]))
                # (Line 202) f.SkillWait(cp, 80);
            EUDEndIf()
            f.SkillWait(cp, 80)
            # (Line 204) f.loop[cp] += 1;
            _ARRW(f.loop, cp).__iadd__(1)
            # (Line 206) if (f.loop[cp] == 12)
            if EUDIf()(f.loop[cp] == 12):
                # (Line 207) {
                # (Line 208) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 209) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 210) }
                # (Line 211) }
            EUDEndIf()
            # (Line 212) else if (f.count[cp] == 4)
        if EUDElseIf()(f.count[cp] == 4):
            # (Line 213) {
            # (Line 214) if (f.loop[cp] == 0)
            if EUDIf()(f.loop[cp] == 0):
                # (Line 215) {
                # (Line 216) f.SquareShape(cp, 1, "40 + 1n Gantrithor", 50, 50);
                f.SquareShape(cp, 1, "40 + 1n Gantrithor", 50, 50)
                # (Line 217) f.SquareShape(cp, 1, "60 + 1n Dragoon", 50, 50);
                f.SquareShape(cp, 1, "60 + 1n Dragoon", 50, 50)
                # (Line 219) }
                # (Line 220) else if (f.loop[cp] == 1)
            if EUDElseIf()(f.loop[cp] == 1):
                # (Line 221) {
                # (Line 222) f.SquareShape(cp, 1, "40 + 1n Gantrithor", 50, 150);
                f.SquareShape(cp, 1, "40 + 1n Gantrithor", 50, 150)
                # (Line 223) f.SquareShape(cp, 1, "60 + 1n Dragoon", 50, 150);
                f.SquareShape(cp, 1, "60 + 1n Dragoon", 50, 150)
                # (Line 225) }
                # (Line 226) else if (f.loop[cp] == 2)
            if EUDElseIf()(f.loop[cp] == 2):
                # (Line 227) {
                # (Line 228) f.SquareShape(cp, 1, "40 + 1n Gantrithor", 150, 50);
                f.SquareShape(cp, 1, "40 + 1n Gantrithor", 150, 50)
                # (Line 229) f.SquareShape(cp, 1, "60 + 1n Dragoon", 150, 50);
                f.SquareShape(cp, 1, "60 + 1n Dragoon", 150, 50)
                # (Line 230) }
                # (Line 232) KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", cp);
            EUDEndIf()
            # (Line 234) f.SkillWait(cp, 160);
            DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", cp))
            f.SkillWait(cp, 160)
            # (Line 236) f.loop[cp] += 1;
            _ARRW(f.loop, cp).__iadd__(1)
            # (Line 238) if (f.loop[cp] == 9)
            if EUDIf()(f.loop[cp] == 9):
                # (Line 239) {
                # (Line 240) f.Voice_Routine(cp, 21);
                f.Voice_Routine(cp, 21)
                # (Line 242) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 243) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 244) }
                # (Line 245) }
            EUDEndIf()
            # (Line 246) else if (f.count[cp] == 5)
        if EUDElseIf()(f.count[cp] == 5):
            # (Line 247) {
            # (Line 248) if (f.loop[cp] < 6)
            if EUDIf()(f.loop[cp] >= 6, neg=True):
                # (Line 249) {
                # (Line 250) f.DoubleShape(cp, 1, "Protoss Dark Archon", 150 - 50 * f.loop[cp], 150);
                f.DoubleShape(cp, 1, "Protoss Dark Archon", 150 - 50 * f.loop[cp], 150)
                # (Line 251) f.DoubleShape(cp, 1, "80 + 1n Tank", -150, 150 - 50 * f.loop[cp]);
                f.DoubleShape(cp, 1, "80 + 1n Tank", -150, 150 - 50 * f.loop[cp])
                # (Line 252) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp);
                # (Line 253) KillUnitAt(All, "80 + 1n Tank", "Anywhere", cp);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp))
                # (Line 254) }
                DoActions(KillUnitAt(All, "80 + 1n Tank", "Anywhere", cp))
                # (Line 256) if (f.loop[cp] == 0)
            EUDEndIf()
            if EUDIf()(f.loop[cp] == 0):
                # (Line 257) {
                # (Line 258) f.EdgeShape(cp, 1, "40 + 1n Mojo", 45, 3, 75);
                f.EdgeShape(cp, 1, "40 + 1n Mojo", 45, 3, 75)
                # (Line 259) KillUnitAt(All, "40 + 1n Mojo", "Anywhere", cp);
                # (Line 260) }
                DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", cp))
                # (Line 261) else if (f.loop[cp] == 2)
            if EUDElseIf()(f.loop[cp] == 2):
                # (Line 262) {
                # (Line 263) f.EdgeShape(cp, 1, "40 + 1n Mojo", 45, 5, 150);
                f.EdgeShape(cp, 1, "40 + 1n Mojo", 45, 5, 150)
                # (Line 264) KillUnitAt(All, "40 + 1n Mojo", "Anywhere", cp);
                # (Line 265) }
                DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", cp))
                # (Line 266) else if (f.loop[cp] == 4)
            if EUDElseIf()(f.loop[cp] == 4):
                # (Line 267) {
                # (Line 268) f.EdgeShape(cp, 1, "Protoss Dark Archon", 22, 3, 75);
                f.EdgeShape(cp, 1, "Protoss Dark Archon", 22, 3, 75)
                # (Line 269) f.EdgeShape(cp, 1, "40 + 1n Guardian", 22, 3, 75);
                f.EdgeShape(cp, 1, "40 + 1n Guardian", 22, 3, 75)
                # (Line 270) f.DotShape(cp, 1, "40 + 1n Guardian", 0, 0);
                f.DotShape(cp, 1, "40 + 1n Guardian", 0, 0)
                # (Line 271) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp);
                # (Line 272) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp))
                # (Line 273) }
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp))
                # (Line 274) else if (f.loop[cp] == 5)
            if EUDElseIf()(f.loop[cp] == 5):
                # (Line 275) {
                # (Line 276) f.EdgeShape(cp, 1, "60 + 1n Archon", 45, 3, 100);
                f.EdgeShape(cp, 1, "60 + 1n Archon", 45, 3, 100)
                # (Line 277) f.EdgeShape(cp, 1, "50 + 1n Battlecruiser", 45, 2, 100);
                f.EdgeShape(cp, 1, "50 + 1n Battlecruiser", 45, 2, 100)
                # (Line 278) f.DotShape(cp, 1, "50 + 1n Battlecruiser", 0, 0);
                f.DotShape(cp, 1, "50 + 1n Battlecruiser", 0, 0)
                # (Line 279) KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp);
                # (Line 281) Order("50 + 1n Battlecruiser", cp, "Anywhere", Attack, "Anywhere");
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp))
                # (Line 282) }
                DoActions(Order("50 + 1n Battlecruiser", cp, "Anywhere", Attack, "Anywhere"))
                # (Line 283) else if (f.loop[cp] == 7)
            if EUDElseIf()(f.loop[cp] == 7):
                # (Line 284) {
                # (Line 285) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp);
                # (Line 286) }
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp))
                # (Line 287) else if (f.loop[cp] == 8)
            if EUDElseIf()(f.loop[cp] == 8):
                # (Line 288) {
                # (Line 289) f.EdgeShape(cp, 1, "Protoss Dark Archon", 45, 3, 50);
                f.EdgeShape(cp, 1, "Protoss Dark Archon", 45, 3, 50)
                # (Line 290) f.EdgeShape(cp, 1, "40 + 1n Guardian", 45, 3, 50);
                f.EdgeShape(cp, 1, "40 + 1n Guardian", 45, 3, 50)
                # (Line 291) f.DotShape(cp, 1, "40 + 1n Guardian", 0, 0);
                f.DotShape(cp, 1, "40 + 1n Guardian", 0, 0)
                # (Line 292) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp);
                # (Line 293) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp))
                # (Line 294) }
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp))
                # (Line 295) else if (f.loop[cp] == 9)
            if EUDElseIf()(f.loop[cp] == 9):
                # (Line 296) {
                # (Line 297) f.EdgeShape(cp, 1, "60 + 1n Archon", 22, 3, 75);
                f.EdgeShape(cp, 1, "60 + 1n Archon", 22, 3, 75)
                # (Line 298) f.EdgeShape(cp, 1, "50 + 1n Battlecruiser", 22, 3, 75);
                f.EdgeShape(cp, 1, "50 + 1n Battlecruiser", 22, 3, 75)
                # (Line 299) f.DotShape(cp, 1, "50 + 1n Battlecruiser", 0, 0);
                f.DotShape(cp, 1, "50 + 1n Battlecruiser", 0, 0)
                # (Line 300) KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp);
                # (Line 302) Order("50 + 1n Battlecruiser", cp, "Anywhere", Attack, "Anywhere");
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp))
                # (Line 303) }
                DoActions(Order("50 + 1n Battlecruiser", cp, "Anywhere", Attack, "Anywhere"))
                # (Line 304) else if (f.loop[cp] == 11)
            if EUDElseIf()(f.loop[cp] == 11):
                # (Line 305) {
                # (Line 306) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp);
                # (Line 307) }
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp))
                # (Line 308) else if (f.loop[cp] == 12)
            if EUDElseIf()(f.loop[cp] == 12):
                # (Line 309) {
                # (Line 310) f.EdgeShape(cp, 1, "Protoss Dark Archon", 22, 3, 75);
                f.EdgeShape(cp, 1, "Protoss Dark Archon", 22, 3, 75)
                # (Line 311) f.EdgeShape(cp, 1, "40 + 1n Guardian", 22, 3, 75);
                f.EdgeShape(cp, 1, "40 + 1n Guardian", 22, 3, 75)
                # (Line 312) f.DotShape(cp, 1, "40 + 1n Guardian", 0, 0);
                f.DotShape(cp, 1, "40 + 1n Guardian", 0, 0)
                # (Line 313) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp);
                # (Line 314) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp))
                # (Line 315) }
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp))
                # (Line 316) else if (f.loop[cp] == 13)
            if EUDElseIf()(f.loop[cp] == 13):
                # (Line 317) {
                # (Line 318) f.EdgeShape(cp, 1, "60 + 1n Archon", 45, 3, 100);
                f.EdgeShape(cp, 1, "60 + 1n Archon", 45, 3, 100)
                # (Line 319) f.EdgeShape(cp, 1, "50 + 1n Battlecruiser", 45, 3, 100);
                f.EdgeShape(cp, 1, "50 + 1n Battlecruiser", 45, 3, 100)
                # (Line 320) f.DotShape(cp, 1, "50 + 1n Battlecruiser", 0, 0);
                f.DotShape(cp, 1, "50 + 1n Battlecruiser", 0, 0)
                # (Line 321) KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp);
                # (Line 323) Order("50 + 1n Battlecruiser", cp, "Anywhere", Attack, "Anywhere");
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp))
                # (Line 324) }
                DoActions(Order("50 + 1n Battlecruiser", cp, "Anywhere", Attack, "Anywhere"))
                # (Line 325) else if (f.loop[cp] == 15)
            if EUDElseIf()(f.loop[cp] == 15):
                # (Line 326) {
                # (Line 327) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp);
                # (Line 328) }
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp))
                # (Line 330) f.SkillWait(cp, 80);
            EUDEndIf()
            f.SkillWait(cp, 80)
            # (Line 332) f.loop[cp] += 1;
            _ARRW(f.loop, cp).__iadd__(1)
            # (Line 334) if (f.loop[cp] == 26)
            if EUDIf()(f.loop[cp] == 26):
                # (Line 335) {
                # (Line 336) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 337) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 338) }
                # (Line 339) }
            EUDEndIf()
            # (Line 341) else if (f.count[cp] == 6)
        if EUDElseIf()(f.count[cp] == 6):
            # (Line 342) {
            # (Line 343) KillUnitAt(All, "40 + 1n Goliath", "Anywhere", cp);
            # (Line 344) KillUnitAt(All, "40 + 1n Drone", "Anywhere", cp);
            DoActions(KillUnitAt(All, "40 + 1n Goliath", "Anywhere", cp))
            # (Line 345) KillUnitAt(All, "50 + 1n Tank", "Anywhere", cp);
            DoActions(KillUnitAt(All, "40 + 1n Drone", "Anywhere", cp))
            # (Line 346) KillUnitAt(All, "60 + 1n Siege", "Anywhere", cp);
            DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", cp))
            # (Line 347) KillUnitAt(All, "60 + 1n Dragoon", "Anywhere", cp);
            DoActions(KillUnitAt(All, "60 + 1n Siege", "Anywhere", cp))
            # (Line 349) f.SkillEnd(cp);
            DoActions(KillUnitAt(All, "60 + 1n Dragoon", "Anywhere", cp))
            f.SkillEnd(cp)
            # (Line 350) }
            # (Line 351) }
        EUDEndIf()
        # (Line 352) }
    EUDEndIf()
