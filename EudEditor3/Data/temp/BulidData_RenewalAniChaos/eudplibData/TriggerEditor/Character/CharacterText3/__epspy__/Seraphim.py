## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import customText as tct;
import customText as tct
# (Line 2) import Variable as v;
import Variable as v
# (Line 4) var txtPtr, btnPtr, btnPos, oldCP;
txtPtr, btnPtr, btnPos, oldCP = EUDCreateVariables(4)
# (Line 6) function NormalText(cp)
# (Line 7) {
@EUDFunc
def NormalText(cp):
    # (Line 8) switch (v.Sound_Text3[cp])
    EUDSwitch(v.Sound_Text3[cp])
    # (Line 9) {
    # (Line 10) case 4000:
    _t1 = EUDSwitchCase()
    # (Line 11) PlayWAV("Seraphim_SSS.ogg");
    if _t1(4000):
        # (Line 12) v.Sound_Text3[cp] = 0;
        DoActions(PlayWAV("Seraphim_SSS.ogg"))
        _ARRW(v.Sound_Text3, cp) << (0)
        # (Line 13) tct.print("\n\n\x13\x1BSeraphim\n\x13\x04역시 그런가, 조금도 신선한게 없네\n\n");
        tct.f_print("\n\n\x13\x1BSeraphim\n\x13\x04역시 그런가, 조금도 신선한게 없네\n\n")
        # (Line 14) break;
        EUDBreak()
        # (Line 15) case 4001:
    _t2 = EUDSwitchCase()
    # (Line 16) PlayWAV("Seraphim_AAC.ogg");
    if _t2(4001):
        # (Line 17) v.Sound_Text3[cp] = 0;
        DoActions(PlayWAV("Seraphim_AAC.ogg"))
        _ARRW(v.Sound_Text3, cp) << (0)
        # (Line 18) tct.print("\n\n\x13\x1BSeraphim\n\x13\x04이제 됐어\n\x13\x04네가 그렇게 결정했다면, 이루어주지\n\n");
        tct.f_print("\n\n\x13\x1BSeraphim\n\x13\x04이제 됐어\n\x13\x04네가 그렇게 결정했다면, 이루어주지\n\n")
        # (Line 19) break;
        EUDBreak()
        # (Line 20) case 4002:
    _t3 = EUDSwitchCase()
    # (Line 21) PlayWAV("Seraphim_CC.ogg");
    if _t3(4002):
        # (Line 22) v.Sound_Text3[cp] = 0;
        DoActions(PlayWAV("Seraphim_CC.ogg"))
        _ARRW(v.Sound_Text3, cp) << (0)
        # (Line 23) tct.print("\n\n\x13\x1BSeraphim\n\x13\x04불쌍한 녀석이야\n\n");
        tct.f_print("\n\n\x13\x1BSeraphim\n\x13\x04불쌍한 녀석이야\n\n")
        # (Line 24) break;
        EUDBreak()
        # (Line 25) case 4003:
    _t4 = EUDSwitchCase()
    # (Line 26) PlayWAV("Seraphim_CCAA.ogg");
    if _t4(4003):
        # (Line 27) v.Sound_Text3[cp] = 0;
        DoActions(PlayWAV("Seraphim_CCAA.ogg"))
        _ARRW(v.Sound_Text3, cp) << (0)
        # (Line 28) tct.print("\n\n\x13\x1BSeraphim\n\x13\x04소원을 이루기 위해 진실에서 눈을 돌려버리고 말았어\n\n");
        tct.f_print("\n\n\x13\x1BSeraphim\n\x13\x04소원을 이루기 위해 진실에서 눈을 돌려버리고 말았어\n\n")
        # (Line 29) break;
        EUDBreak()
        # (Line 30) }
    # (Line 31) }
    EUDEndSwitch()
    # (Line 33) function UiltimateText(cp)

# (Line 34) {
@EUDFunc
def UiltimateText(cp):
    # (Line 35) switch (v.Sound_Text_Uilti[cp])
    EUDSwitch(v.Sound_Text_Uilti[cp])
    # (Line 36) {
    # (Line 37) case 16000:
    _t1 = EUDSwitchCase()
    # (Line 38) PlayWAV("Seraphim_AAAA.ogg");
    if _t1(16000):
        # (Line 39) v.Sound_Text_Uilti[cp] = 0;
        DoActions(PlayWAV("Seraphim_AAAA.ogg"))
        _ARRW(v.Sound_Text_Uilti, cp) << (0)
        # (Line 40) tct.print("\n\n\x13\x1BSeraphim\n\x13\x04하지만...\n\n");
        tct.f_print("\n\n\x13\x1BSeraphim\n\x13\x04하지만...\n\n")
        # (Line 41) break;
        EUDBreak()
        # (Line 42) case 16001:
    _t2 = EUDSwitchCase()
    # (Line 43) tct.print("\n\n\x13\x1BSeraphim\n\x13\x04분명 후회할테니까\n\n");
    if _t2(16001):
        tct.f_print("\n\n\x13\x1BSeraphim\n\x13\x04분명 후회할테니까\n\n")
        # (Line 44) v.Sound_Text_Uilti[cp] = 0;
        _ARRW(v.Sound_Text_Uilti, cp) << (0)
        # (Line 45) break;
        EUDBreak()
        # (Line 46) case 16010:
    _t3 = EUDSwitchCase()
    # (Line 47) PlayWAV("Seraphim_O_Ult.ogg");
    if _t3(16010):
        # (Line 48) v.Sound_Text_Uilti[cp] = 0;
        DoActions(PlayWAV("Seraphim_O_Ult.ogg"))
        _ARRW(v.Sound_Text_Uilti, cp) << (0)
        # (Line 49) break;
        EUDBreak()
        # (Line 50) }
    # (Line 51) }
    EUDEndSwitch()
    # (Line 53) function UniqueText(cp)

# (Line 54) {
@EUDFunc
def UniqueText(cp):
    # (Line 55) switch (v.Sound_Text_Uniq[cp])
    EUDSwitch(v.Sound_Text_Uniq[cp])
    # (Line 56) {
    # (Line 57) case 16000:
    _t1 = EUDSwitchCase()
    # (Line 58) tct.print("\n\n\x13\x1BSeraphim\n\x13\x04행복한 세계,\n\x13\x04모든 사람이 행복할 수 있는 세상은...\n\n");
    if _t1(16000):
        tct.f_print("\n\n\x13\x1BSeraphim\n\x13\x04행복한 세계,\n\x13\x04모든 사람이 행복할 수 있는 세상은...\n\n")
        # (Line 59) PlayWAV("Seraphim_O_0.ogg");
        # (Line 60) v.Sound_Text_Uniq[cp] = 0;
        DoActions(PlayWAV("Seraphim_O_0.ogg"))
        _ARRW(v.Sound_Text_Uniq, cp) << (0)
        # (Line 61) break;
        EUDBreak()
        # (Line 62) case 16001:
    _t2 = EUDSwitchCase()
    # (Line 63) tct.print("\n\n\x13\x1BSeraphim\n\x13\x04역시 실현할 수 없는 건가...\n\n");
    if _t2(16001):
        tct.f_print("\n\n\x13\x1BSeraphim\n\x13\x04역시 실현할 수 없는 건가...\n\n")
        # (Line 64) v.Sound_Text_Uniq[cp] = 0;
        _ARRW(v.Sound_Text_Uniq, cp) << (0)
        # (Line 65) break;
        EUDBreak()
        # (Line 66) case 16011:
    _t3 = EUDSwitchCase()
    # (Line 67) PlayWAV("Seraphim_O_1.ogg");
    if _t3(16011):
        # (Line 68) tct.print("\n\n\x13\x1BSeraphim\n\x13\x04하지만 너는, 내 소원을 이해할 수 있을 리가 없어\n\n");
        DoActions(PlayWAV("Seraphim_O_1.ogg"))
        tct.f_print("\n\n\x13\x1BSeraphim\n\x13\x04하지만 너는, 내 소원을 이해할 수 있을 리가 없어\n\n")
        # (Line 69) v.Sound_Text_Uniq[cp] = 0;
        _ARRW(v.Sound_Text_Uniq, cp) << (0)
        # (Line 70) break;
        EUDBreak()
        # (Line 71) case 16012:
    _t4 = EUDSwitchCase()
    # (Line 72) PlayWAV("Seraphim_O_2.ogg");
    if _t4(16012):
        # (Line 73) tct.print("\n\n\x13\x1BSeraphim\n\x13\x04말해봐 내 소원은... 뭐지?\n\n");
        DoActions(PlayWAV("Seraphim_O_2.ogg"))
        tct.f_print("\n\n\x13\x1BSeraphim\n\x13\x04말해봐 내 소원은... 뭐지?\n\n")
        # (Line 74) v.Sound_Text_Uniq[cp] = 0;
        _ARRW(v.Sound_Text_Uniq, cp) << (0)
        # (Line 75) break;
        EUDBreak()
        # (Line 76) case 16013:
    _t5 = EUDSwitchCase()
    # (Line 77) PlayWAV("Seraphim_O_3.ogg");
    if _t5(16013):
        # (Line 78) tct.print("\n\n\x13\x1BSeraphim\n\x13\x04종말을 막는 소원을 빌어 나를 구해준다라...\n\x13\x04나쁘지 않네\n\n");
        DoActions(PlayWAV("Seraphim_O_3.ogg"))
        tct.f_print("\n\n\x13\x1BSeraphim\n\x13\x04종말을 막는 소원을 빌어 나를 구해준다라...\n\x13\x04나쁘지 않네\n\n")
        # (Line 79) v.Sound_Text_Uniq[cp] = 0;
        _ARRW(v.Sound_Text_Uniq, cp) << (0)
        # (Line 80) break;
        EUDBreak()
        # (Line 81) case 16014:
    _t6 = EUDSwitchCase()
    # (Line 82) PlayWAV("Seraphim_O_4.ogg");
    if _t6(16014):
        # (Line 83) tct.print("\n\n\x13\x1BSeraphim\n\x13\x04이번의 너는 뭐랄까 조금,\n\x13\x047일의 시간이 너무 짧게 느껴지게 만들어\n\n");
        DoActions(PlayWAV("Seraphim_O_4.ogg"))
        tct.f_print("\n\n\x13\x1BSeraphim\n\x13\x04이번의 너는 뭐랄까 조금,\n\x13\x047일의 시간이 너무 짧게 느껴지게 만들어\n\n")
        # (Line 84) v.Sound_Text_Uniq[cp] = 0;
        _ARRW(v.Sound_Text_Uniq, cp) << (0)
        # (Line 85) break;
        EUDBreak()
        # (Line 86) case 16015:
    _t7 = EUDSwitchCase()
    # (Line 87) PlayWAV("Seraphim_O_5.ogg");
    if _t7(16015):
        # (Line 88) tct.print("\n\n\x13\x1BSeraphim\n\x13\x04내가 사라져도 이 세계의 윤회는 계속해서 이어질 거야\n\n");
        DoActions(PlayWAV("Seraphim_O_5.ogg"))
        tct.f_print("\n\n\x13\x1BSeraphim\n\x13\x04내가 사라져도 이 세계의 윤회는 계속해서 이어질 거야\n\n")
        # (Line 89) v.Sound_Text_Uniq[cp] = 0;
        _ARRW(v.Sound_Text_Uniq, cp) << (0)
        # (Line 90) break;
        EUDBreak()
        # (Line 91) case 16016:
    _t8 = EUDSwitchCase()
    # (Line 92) PlayWAV("Seraphim_O_6.ogg");
    if _t8(16016):
        # (Line 93) tct.print("\n\n\x13\x1BSeraphim\n\x13\x04너는 이 세계를 지키고 싶어,\n\x13\x04하지만 이 세계에 있어 지금의 나는 진정한 위협이니까\n");
        DoActions(PlayWAV("Seraphim_O_6.ogg"))
        tct.f_print("\n\n\x13\x1BSeraphim\n\x13\x04너는 이 세계를 지키고 싶어,\n\x13\x04하지만 이 세계에 있어 지금의 나는 진정한 위협이니까\n")
        # (Line 94) v.Sound_Text_Uniq[cp] = 0;
        _ARRW(v.Sound_Text_Uniq, cp) << (0)
        # (Line 95) break;
        EUDBreak()
        # (Line 96) case 16017:
    _t9 = EUDSwitchCase()
    # (Line 97) PlayWAV("Seraphim_O_7.ogg");
    if _t9(16017):
        # (Line 98) tct.print("\n\n\x13\x1BSeraphim\n\x13\x04네 소원은, 확실히 받아뒀어\n");
        DoActions(PlayWAV("Seraphim_O_7.ogg"))
        tct.f_print("\n\n\x13\x1BSeraphim\n\x13\x04네 소원은, 확실히 받아뒀어\n")
        # (Line 99) v.Sound_Text_Uniq[cp] = 0;
        _ARRW(v.Sound_Text_Uniq, cp) << (0)
        # (Line 100) break;
        EUDBreak()
        # (Line 101) case 16021:
    _t10 = EUDSwitchCase()
    # (Line 102) txtPtr = dwread_epd(EPD(0x640B58));
    if _t10(16021):
        txtPtr << (f_dwread_epd(EPD(0x640B58)))
        # (Line 103) tct.print("\n\n\x13\x02\" \x02너의 \x02\"                \n\n");
        tct.f_print("\n\n\x13\x02\" \x02너의 \x02\"                \n\n")
        # (Line 104) SetMemory(0x640B58, SetTo, txtPtr);
        # (Line 105) v.Sound_Text_Uniq[cp] = 0;
        DoActions(SetMemory(0x640B58, SetTo, txtPtr))
        _ARRW(v.Sound_Text_Uniq, cp) << (0)
        # (Line 106) break;
        EUDBreak()
        # (Line 107) case 16022:
    _t11 = EUDSwitchCase()
    # (Line 108) txtPtr = dwread_epd(EPD(0x640B58));
    if _t11(16022):
        txtPtr << (f_dwread_epd(EPD(0x640B58)))
        # (Line 109) tct.print("\n\n\x13\x04\" \x04너의 \x04\"                \n\n");
        tct.f_print("\n\n\x13\x04\" \x04너의 \x04\"                \n\n")
        # (Line 110) SetMemory(0x640B58, SetTo, txtPtr);
        # (Line 111) v.Sound_Text_Uniq[cp] = 0;
        DoActions(SetMemory(0x640B58, SetTo, txtPtr))
        _ARRW(v.Sound_Text_Uniq, cp) << (0)
        # (Line 112) break;
        EUDBreak()
        # (Line 113) case 16023:
    _t12 = EUDSwitchCase()
    # (Line 114) txtPtr = dwread_epd(EPD(0x640B58));
    if _t12(16023):
        txtPtr << (f_dwread_epd(EPD(0x640B58)))
        # (Line 115) tct.print("\n\n\x13\x04\" \x04너의 \x04\"                \n\x13\x02          \" \x02소원 \x02\"\n");
        tct.f_print("\n\n\x13\x04\" \x04너의 \x04\"                \n\x13\x02          \" \x02소원 \x02\"\n")
        # (Line 116) SetMemory(0x640B58, SetTo, txtPtr);
        # (Line 117) v.Sound_Text_Uniq[cp] = 0;
        DoActions(SetMemory(0x640B58, SetTo, txtPtr))
        _ARRW(v.Sound_Text_Uniq, cp) << (0)
        # (Line 118) break;
        EUDBreak()
        # (Line 119) case 16024:
    _t13 = EUDSwitchCase()
    # (Line 120) txtPtr = dwread_epd(EPD(0x640B58));
    if _t13(16024):
        txtPtr << (f_dwread_epd(EPD(0x640B58)))
        # (Line 121) tct.print("\n\n\x13\x04\" \x04너의 \x04\"                \n\x13\x04          \" \x04소원 \x04\"\n");
        tct.f_print("\n\n\x13\x04\" \x04너의 \x04\"                \n\x13\x04          \" \x04소원 \x04\"\n")
        # (Line 122) SetMemory(0x640B58, SetTo, txtPtr);
        # (Line 123) v.Sound_Text_Uniq[cp] = 0;
        DoActions(SetMemory(0x640B58, SetTo, txtPtr))
        _ARRW(v.Sound_Text_Uniq, cp) << (0)
        # (Line 124) break;
        EUDBreak()
        # (Line 125) case 16031:
    _t14 = EUDSwitchCase()
    # (Line 126) txtPtr = dwread_epd(EPD(0x640B58));
    if _t14(16031):
        txtPtr << (f_dwread_epd(EPD(0x640B58)))
        # (Line 127) tct.print("\n\n\x13\x02\" \x02신의 소원을 지키기 위해           \n\n");
        tct.f_print("\n\n\x13\x02\" \x02신의 소원을 지키기 위해           \n\n")
        # (Line 128) SetMemory(0x640B58, SetTo, txtPtr);
        # (Line 129) v.Sound_Text_Uniq[cp] = 0;
        DoActions(SetMemory(0x640B58, SetTo, txtPtr))
        _ARRW(v.Sound_Text_Uniq, cp) << (0)
        # (Line 130) break;
        EUDBreak()
        # (Line 131) case 16032:
    _t15 = EUDSwitchCase()
    # (Line 132) txtPtr = dwread_epd(EPD(0x640B58));
    if _t15(16032):
        txtPtr << (f_dwread_epd(EPD(0x640B58)))
        # (Line 133) tct.print("\n\n\x13\x04\" 신의 소원을 지키기 위해           \n\n");
        tct.f_print("\n\n\x13\x04\" 신의 소원을 지키기 위해           \n\n")
        # (Line 134) SetMemory(0x640B58, SetTo, txtPtr);
        # (Line 135) v.Sound_Text_Uniq[cp] = 0;
        DoActions(SetMemory(0x640B58, SetTo, txtPtr))
        _ARRW(v.Sound_Text_Uniq, cp) << (0)
        # (Line 136) break;
        EUDBreak()
        # (Line 137) case 16033:
    _t16 = EUDSwitchCase()
    # (Line 138) txtPtr = dwread_epd(EPD(0x640B58));
    if _t16(16033):
        txtPtr << (f_dwread_epd(EPD(0x640B58)))
        # (Line 139) tct.print("\n\n\x13\x04\" 신의 소원을 지키기 위해           \n\x13\x1B             인간은 어리석은 맹세를 하였다 \"\n");
        tct.f_print("\n\n\x13\x04\" 신의 소원을 지키기 위해           \n\x13\x1B             인간은 어리석은 맹세를 하였다 \"\n")
        # (Line 140) SetMemory(0x640B58, SetTo, txtPtr);
        # (Line 141) v.Sound_Text_Uniq[cp] = 0;
        DoActions(SetMemory(0x640B58, SetTo, txtPtr))
        _ARRW(v.Sound_Text_Uniq, cp) << (0)
        # (Line 142) break;
        EUDBreak()
        # (Line 143) case 16034:
    _t17 = EUDSwitchCase()
    # (Line 144) txtPtr = dwread_epd(EPD(0x640B58));
    if _t17(16034):
        txtPtr << (f_dwread_epd(EPD(0x640B58)))
        # (Line 145) tct.print("\n\n\x13\x04\" 신의 소원을 지키기 위해           \n\x13\x08             인간은 어리석은 맹세를 하였다 \"\n");
        tct.f_print("\n\n\x13\x04\" 신의 소원을 지키기 위해           \n\x13\x08             인간은 어리석은 맹세를 하였다 \"\n")
        # (Line 146) SetMemory(0x640B58, SetTo, txtPtr);
        # (Line 147) v.Sound_Text_Uniq[cp] = 0;
        DoActions(SetMemory(0x640B58, SetTo, txtPtr))
        _ARRW(v.Sound_Text_Uniq, cp) << (0)
        # (Line 148) break;
        EUDBreak()
        # (Line 149) case 16041:
    _t18 = EUDSwitchCase()
    # (Line 150) txtPtr = dwread_epd(EPD(0x640B58));
    if _t18(16041):
        txtPtr << (f_dwread_epd(EPD(0x640B58)))
        # (Line 151) tct.print("\n\n\x13\x02\" 영원히 윤회에 속박되고       \n\n\n");
        tct.f_print("\n\n\x13\x02\" 영원히 윤회에 속박되고       \n\n\n")
        # (Line 152) SetMemory(0x640B58, SetTo, txtPtr);
        # (Line 153) v.Sound_Text_Uniq[cp] = 0;
        DoActions(SetMemory(0x640B58, SetTo, txtPtr))
        _ARRW(v.Sound_Text_Uniq, cp) << (0)
        # (Line 154) break;
        EUDBreak()
        # (Line 155) case 16042:
    _t19 = EUDSwitchCase()
    # (Line 156) txtPtr = dwread_epd(EPD(0x640B58));
    if _t19(16042):
        txtPtr << (f_dwread_epd(EPD(0x640B58)))
        # (Line 157) tct.print("\n\n\x13\x04\" 영원히 윤회에 속박되고       \n  \n\n");
        tct.f_print("\n\n\x13\x04\" 영원히 윤회에 속박되고       \n  \n\n")
        # (Line 158) SetMemory(0x640B58, SetTo, txtPtr);
        # (Line 159) v.Sound_Text_Uniq[cp] = 0;
        DoActions(SetMemory(0x640B58, SetTo, txtPtr))
        _ARRW(v.Sound_Text_Uniq, cp) << (0)
        # (Line 160) break;
        EUDBreak()
        # (Line 161) case 16043:
    _t20 = EUDSwitchCase()
    # (Line 162) txtPtr = dwread_epd(EPD(0x640B58));
    if _t20(16043):
        txtPtr << (f_dwread_epd(EPD(0x640B58)))
        # (Line 163) tct.print("\n\n\x13\x04\" 영원히 윤회에 속박되고       \n\x13\x02             영원히 시간 속에서 헤맨다 \"       \n\n");
        tct.f_print("\n\n\x13\x04\" 영원히 윤회에 속박되고       \n\x13\x02             영원히 시간 속에서 헤맨다 \"       \n\n")
        # (Line 164) SetMemory(0x640B58, SetTo, txtPtr);
        # (Line 165) v.Sound_Text_Uniq[cp] = 0;
        DoActions(SetMemory(0x640B58, SetTo, txtPtr))
        _ARRW(v.Sound_Text_Uniq, cp) << (0)
        # (Line 166) break;
        EUDBreak()
        # (Line 167) case 16044:
    _t21 = EUDSwitchCase()
    # (Line 168) txtPtr = dwread_epd(EPD(0x640B58));
    if _t21(16044):
        txtPtr << (f_dwread_epd(EPD(0x640B58)))
        # (Line 169) tct.print("\n\n\x13\x04\" 영원히 윤회에 속박되고       \n\x13\x04             영원히 시간 속에서 헤맨다 \"       \n\n");
        tct.f_print("\n\n\x13\x04\" 영원히 윤회에 속박되고       \n\x13\x04             영원히 시간 속에서 헤맨다 \"       \n\n")
        # (Line 170) SetMemory(0x640B58, SetTo, txtPtr);
        # (Line 171) v.Sound_Text_Uniq[cp] = 0;
        DoActions(SetMemory(0x640B58, SetTo, txtPtr))
        _ARRW(v.Sound_Text_Uniq, cp) << (0)
        # (Line 172) break;
        EUDBreak()
        # (Line 173) case 16045:
    _t22 = EUDSwitchCase()
    # (Line 174) txtPtr = dwread_epd(EPD(0x640B58));
    if _t22(16045):
        txtPtr << (f_dwread_epd(EPD(0x640B58)))
        # (Line 175) tct.print("\n\n\x13\x04\" 영원히 윤회에 속박되고       \n\x13\x04             영원히 시간 속에서 헤맨다 \"       \n\x13\x1B             \" 신이라는 존재는 그저... \"\n");
        tct.f_print("\n\n\x13\x04\" 영원히 윤회에 속박되고       \n\x13\x04             영원히 시간 속에서 헤맨다 \"       \n\x13\x1B             \" 신이라는 존재는 그저... \"\n")
        # (Line 176) SetMemory(0x640B58, SetTo, txtPtr);
        # (Line 177) v.Sound_Text_Uniq[cp] = 0;
        DoActions(SetMemory(0x640B58, SetTo, txtPtr))
        _ARRW(v.Sound_Text_Uniq, cp) << (0)
        # (Line 178) break;
        EUDBreak()
        # (Line 179) case 16046:
    _t23 = EUDSwitchCase()
    # (Line 180) txtPtr = dwread_epd(EPD(0x640B58));
    if _t23(16046):
        txtPtr << (f_dwread_epd(EPD(0x640B58)))
        # (Line 181) tct.print("\n\n\x13\x04\" 영원히 윤회에 속박되고       \n\x13\x04             영원히 시간 속에서 헤맨다 \"       \n\x13\x08             \" 신이라는 존재는 그저... \"\n");
        tct.f_print("\n\n\x13\x04\" 영원히 윤회에 속박되고       \n\x13\x04             영원히 시간 속에서 헤맨다 \"       \n\x13\x08             \" 신이라는 존재는 그저... \"\n")
        # (Line 182) SetMemory(0x640B58, SetTo, txtPtr);
        # (Line 183) v.Sound_Text_Uniq[cp] = 0;
        DoActions(SetMemory(0x640B58, SetTo, txtPtr))
        _ARRW(v.Sound_Text_Uniq, cp) << (0)
        # (Line 184) break;
        EUDBreak()
        # (Line 185) case 16051:
    _t24 = EUDSwitchCase()
    # (Line 186) txtPtr = dwread_epd(EPD(0x640B58));
    if _t24(16051):
        txtPtr << (f_dwread_epd(EPD(0x640B58)))
        # (Line 187) tct.print("\n\n\x13\x02\" 홀로 \"   \" 모래성을 쌓는 자일 뿐 \"\n\n");
        tct.f_print("\n\n\x13\x02\" 홀로 \"   \" 모래성을 쌓는 자일 뿐 \"\n\n")
        # (Line 188) SetMemory(0x640B58, SetTo, txtPtr);
        # (Line 189) v.Sound_Text_Uniq[cp] = 0;
        DoActions(SetMemory(0x640B58, SetTo, txtPtr))
        _ARRW(v.Sound_Text_Uniq, cp) << (0)
        # (Line 190) break;
        EUDBreak()
        # (Line 191) case 16052:
    _t25 = EUDSwitchCase()
    # (Line 192) txtPtr = dwread_epd(EPD(0x640B58));
    if _t25(16052):
        txtPtr << (f_dwread_epd(EPD(0x640B58)))
        # (Line 193) tct.print("\n\n\x13\x04\" 홀로 \"   \" 모래성을 쌓는 자일 뿐 \"\n\n");
        tct.f_print("\n\n\x13\x04\" 홀로 \"   \" 모래성을 쌓는 자일 뿐 \"\n\n")
        # (Line 194) SetMemory(0x640B58, SetTo, txtPtr);
        # (Line 195) v.Sound_Text_Uniq[cp] = 0;
        DoActions(SetMemory(0x640B58, SetTo, txtPtr))
        _ARRW(v.Sound_Text_Uniq, cp) << (0)
        # (Line 196) break;
        EUDBreak()
        # (Line 197) }
    # (Line 198) }
    EUDEndSwitch()
