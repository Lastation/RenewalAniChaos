## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import Variable as v;
import Variable as v
# (Line 3) import Character.TextA.Rusaruka		as rusaruka;
from Character.TextA import Rusaruka as rusaruka
# (Line 4) import Character.TextA.Chtholly 		as chtholly;
from Character.TextA import Chtholly as chtholly
# (Line 5) import Character.TextA.Maihime 		as maihime;
from Character.TextA import Maihime as maihime
# (Line 6) import Character.TextA.Tenshi 		as tenshi;
from Character.TextA import Tenshi as tenshi
# (Line 7) import Character.TextA.Miyuki 		as miyuki;
from Character.TextA import Miyuki as miyuki
# (Line 8) import Character.TextA.Negev 		as negev;
from Character.TextA import Negev as negev
# (Line 10) import Character.TextB.Cecillia 		as cecillia;
from Character.TextB import Cecillia as cecillia
# (Line 11) import Character.TextB.Anzu 			as anzu;
from Character.TextB import Anzu as anzu
# (Line 12) import Character.TextB.HotoMoka 	as hotomoka;
from Character.TextB import HotoMoka as hotomoka
# (Line 13) import Character.TextB.Altherego 	as alterego;
from Character.TextB import Altherego as alterego
# (Line 14) import Character.TextB.Ryuzu 		as ryuzu;
from Character.TextB import Ryuzu as ryuzu
# (Line 15) import Character.TextB.Kurumi 		as kurumi;
from Character.TextB import Kurumi as kurumi
# (Line 17) import Character.TextC.Sakura 		as sakura;
from Character.TextC import Sakura as sakura
# (Line 18) import Character.TextC.Yashiro 		as yashiro;
from Character.TextC import Yashiro as yashiro
# (Line 19) import Character.TextC.Rin 			as rin;
from Character.TextC import Rin as rin
# (Line 20) import Character.TextC.Seraphim 	as seraphim;
from Character.TextC import Seraphim as seraphim
# (Line 21) import Character.TextC.Kiana 		as kiana;
from Character.TextC import Kiana as kiana
# (Line 22) import Character.TextC.Tenkei 		as tenkei;
from Character.TextC import Tenkei as tenkei
# (Line 25) function MargeSound(cp)
# (Line 26) {
@EUDFunc
def MargeSound(cp):
    # (Line 28) if (v.Sound_Text1[cp] != 0)
    if EUDIf()(v.Sound_Text1[cp] == 0, neg=True):
        # (Line 29) {
        # (Line 30) rusaruka.NormalText(cp);
        rusaruka.NormalText(cp)
        # (Line 31) chtholly.NormalText(cp);
        chtholly.NormalText(cp)
        # (Line 32) maihime.NormalText(cp);
        maihime.NormalText(cp)
        # (Line 33) tenshi.NormalText(cp);
        tenshi.NormalText(cp)
        # (Line 34) miyuki.NormalText(cp);
        miyuki.NormalText(cp)
        # (Line 35) negev.NormalText(cp);
        negev.NormalText(cp)
        # (Line 36) }
        # (Line 39) if (v.Sound_Text2[cp] != 0)
    EUDEndIf()
    if EUDIf()(v.Sound_Text2[cp] == 0, neg=True):
        # (Line 40) {
        # (Line 41) cecillia.NormalText(cp);
        cecillia.NormalText(cp)
        # (Line 42) anzu.NormalText(cp);
        anzu.NormalText(cp)
        # (Line 43) hotomoka.NormalText(cp);
        hotomoka.NormalText(cp)
        # (Line 44) alterego.NormalText(cp);
        alterego.NormalText(cp)
        # (Line 45) ryuzu.NormalText(cp);
        ryuzu.NormalText(cp)
        # (Line 47) }
        # (Line 50) if (v.Sound_Text3[cp] != 0)
    EUDEndIf()
    if EUDIf()(v.Sound_Text3[cp] == 0, neg=True):
        # (Line 51) {
        # (Line 52) sakura.NormalText(cp);
        sakura.NormalText(cp)
        # (Line 53) yashiro.NormalText(cp);
        yashiro.NormalText(cp)
        # (Line 54) rin.NormalText(cp);
        rin.NormalText(cp)
        # (Line 55) seraphim.NormalText(cp);
        seraphim.NormalText(cp)
        # (Line 56) kiana.NormalText(cp);
        kiana.NormalText(cp)
        # (Line 57) tenkei.NormalText(cp);
        tenkei.NormalText(cp)
        # (Line 58) }
        # (Line 60) if (v.Sound_Text_Uilti[cp] != 0)
    EUDEndIf()
    if EUDIf()(v.Sound_Text_Uilti[cp] == 0, neg=True):
        # (Line 61) {
        # (Line 63) rusaruka.UiltimateText(cp);
        rusaruka.UiltimateText(cp)
        # (Line 64) chtholly.UiltimateText(cp);
        chtholly.UiltimateText(cp)
        # (Line 65) maihime.UiltimateText(cp);
        maihime.UiltimateText(cp)
        # (Line 66) tenshi.UiltimateText(cp);
        tenshi.UiltimateText(cp)
        # (Line 67) miyuki.UiltimateText(cp);
        miyuki.UiltimateText(cp)
        # (Line 68) negev.UiltimateText(cp);
        negev.UiltimateText(cp)
        # (Line 71) cecillia.UiltimateText(cp);
        cecillia.UiltimateText(cp)
        # (Line 72) anzu.UiltimateText(cp);
        anzu.UiltimateText(cp)
        # (Line 73) hotomoka.UiltimateText(cp);
        hotomoka.UiltimateText(cp)
        # (Line 74) alterego.UiltimateText(cp);
        alterego.UiltimateText(cp)
        # (Line 75) ryuzu.UiltimateText(cp);
        ryuzu.UiltimateText(cp)
        # (Line 79) sakura.UiltimateText(cp);
        sakura.UiltimateText(cp)
        # (Line 80) yashiro.UiltimateText(cp);
        yashiro.UiltimateText(cp)
        # (Line 81) rin.UiltimateText(cp);
        rin.UiltimateText(cp)
        # (Line 82) seraphim.UiltimateText(cp);
        seraphim.UiltimateText(cp)
        # (Line 83) kiana.UiltimateText(cp);
        kiana.UiltimateText(cp)
        # (Line 84) tenkei.UiltimateText(cp);
        tenkei.UiltimateText(cp)
        # (Line 85) }
        # (Line 86) if (v.Sound_Text_Uniq[cp] != 0)
    EUDEndIf()
    if EUDIf()(v.Sound_Text_Uniq[cp] == 0, neg=True):
        # (Line 87) {
        # (Line 89) rusaruka.UniqueText(cp);
        rusaruka.UniqueText(cp)
        # (Line 90) chtholly.UniqueText(cp);
        chtholly.UniqueText(cp)
        # (Line 91) maihime.UniqueText(cp);
        maihime.UniqueText(cp)
        # (Line 92) tenshi.UniqueText(cp);
        tenshi.UniqueText(cp)
        # (Line 93) miyuki.UniqueText(cp);
        miyuki.UniqueText(cp)
        # (Line 94) negev.UniqueText(cp);
        negev.UniqueText(cp)
        # (Line 97) cecillia.UniqueText(cp);
        cecillia.UniqueText(cp)
        # (Line 98) anzu.UniqueText(cp);
        anzu.UniqueText(cp)
        # (Line 99) hotomoka.UniqueText(cp);
        hotomoka.UniqueText(cp)
        # (Line 100) alterego.UniqueText(cp);
        alterego.UniqueText(cp)
        # (Line 101) ryuzu.UniqueText(cp);
        ryuzu.UniqueText(cp)
        # (Line 105) sakura.UniqueText(cp);
        sakura.UniqueText(cp)
        # (Line 106) yashiro.UniqueText(cp);
        yashiro.UniqueText(cp)
        # (Line 107) rin.UniqueText(cp);
        rin.UniqueText(cp)
        # (Line 108) seraphim.UniqueText(cp);
        seraphim.UniqueText(cp)
        # (Line 109) kiana.UniqueText(cp);
        kiana.UniqueText(cp)
        # (Line 110) tenkei.UniqueText(cp);
        tenkei.UniqueText(cp)
        # (Line 111) }
        # (Line 112) }
    EUDEndIf()
