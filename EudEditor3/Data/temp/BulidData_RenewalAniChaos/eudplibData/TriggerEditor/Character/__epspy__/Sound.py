## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import Variable 						as v;
import Variable as v
# (Line 2) import Function 						as f;
import Function as f
# (Line 4) import Character.Rusaruka.Main 		as rusarukaMain;
from Character.Rusaruka import Main as rusarukaMain
# (Line 5) import Character.Kiana.Main 			as kianaMain;
from Character.Kiana import Main as kianaMain
# (Line 6) import Character.Yuuna.Main 		as yuunaMain;
from Character.Yuuna import Main as yuunaMain
# (Line 7) import Character.Mayuri.Main 		as mayuriMain;
from Character.Mayuri import Main as mayuriMain
# (Line 8) import Character.Nanami.Main 		as nanamiMain;
from Character.Nanami import Main as nanamiMain
# (Line 9) import Character.Milim.Main 		as milimMain;
from Character.Milim import Main as milimMain
# (Line 10) import Character.Yume.Main 		as yumeMain;
from Character.Yume import Main as yumeMain
# (Line 11) import Character.Magane.Main 		as maganeMain;
from Character.Magane import Main as maganeMain
# (Line 12) import Character.Oda.Main 			as odaMain;
from Character.Oda import Main as odaMain
# (Line 14) import Character.TextA.Chtholly 		as chtholly;
from Character.TextA import Chtholly as chtholly
# (Line 15) import Character.TextA.Maihime 		as maihime;
from Character.TextA import Maihime as maihime
# (Line 16) import Character.TextA.Tenshi 		as tenshi;
from Character.TextA import Tenshi as tenshi
# (Line 17) import Character.TextA.Miyuki 		as miyuki;
from Character.TextA import Miyuki as miyuki
# (Line 18) import Character.TextA.Negev 		as negev;
from Character.TextA import Negev as negev
# (Line 20) import Character.TextB.Cecillia 		as cecillia;
from Character.TextB import Cecillia as cecillia
# (Line 21) import Character.TextB.Anzu 			as anzu;
from Character.TextB import Anzu as anzu
# (Line 22) import Character.TextB.HotoMoka 	as hotomoka;
from Character.TextB import HotoMoka as hotomoka
# (Line 23) import Character.TextB.Altherego 	as alterego;
from Character.TextB import Altherego as alterego
# (Line 24) import Character.TextB.Ryuzu 		as ryuzu;
from Character.TextB import Ryuzu as ryuzu
# (Line 25) import Character.TextB.Kurumi 		as kurumi;
from Character.TextB import Kurumi as kurumi
# (Line 27) import Character.TextC.Sakura 		as sakura;
from Character.TextC import Sakura as sakura
# (Line 28) import Character.TextC.Yashiro 		as yashiro;
from Character.TextC import Yashiro as yashiro
# (Line 29) import Character.TextC.Rin 			as rin;
from Character.TextC import Rin as rin
# (Line 30) import Character.TextC.Seraphim 	as seraphim;
from Character.TextC import Seraphim as seraphim
# (Line 31) import Character.TextC.Tenkei 		as tenkei;
from Character.TextC import Tenkei as tenkei
# (Line 33) import Character.TextD.MN 			as mn;
from Character.TextD import MN as mn
# (Line 34) import Character.TextD.EmetSelch 	as emet;
from Character.TextD import EmetSelch as emet
# (Line 35) import Character.TextD.Magellan 	as magellan;
from Character.TextD import Magellan as magellan
# (Line 37) function MargeSound(cp);
# (Line 39) function main(cp)
# (Line 40) {
@EUDFunc
def f_main(cp):
    # (Line 41) rusarukaMain.SkillVoice(cp);
    rusarukaMain.SkillVoice(cp)
    # (Line 42) yuunaMain.SkillVoice(cp);
    yuunaMain.SkillVoice(cp)
    # (Line 43) mayuriMain.SkillVoice(cp);
    mayuriMain.SkillVoice(cp)
    # (Line 44) nanamiMain.SkillVoice(cp);
    nanamiMain.SkillVoice(cp)
    # (Line 45) milimMain.SkillVoice(cp);
    milimMain.SkillVoice(cp)
    # (Line 46) yumeMain.SkillVoice(cp);
    yumeMain.SkillVoice(cp)
    # (Line 47) maganeMain.SkillVoice(cp);
    maganeMain.SkillVoice(cp)
    # (Line 48) odaMain.SkillVoice(cp);
    odaMain.SkillVoice(cp)
    # (Line 50) MargeSound(cp);
    MargeSound(cp)
    # (Line 51) }
    # (Line 53) function MargeSound(cp)

# (Line 54) {
@EUDFunc
def MargeSound(cp):
    # (Line 56) if (getuserplayerid() >= 128)
    if EUDIf()(f_getuserplayerid() >= 128):
        # (Line 57) {
        # (Line 62) }
        # (Line 66) if (v.Sound_Text1[cp] > 0)
        pass
    EUDEndIf()
    if EUDIf()(v.Sound_Text1[cp] <= 0, neg=True):
        # (Line 67) {
        # (Line 68) chtholly.NormalText(cp);
        chtholly.NormalText(cp)
        # (Line 69) maihime.NormalText(cp);
        maihime.NormalText(cp)
        # (Line 70) tenshi.NormalText(cp);
        tenshi.NormalText(cp)
        # (Line 71) miyuki.NormalText(cp);
        miyuki.NormalText(cp)
        # (Line 72) negev.NormalText(cp);
        negev.NormalText(cp)
        # (Line 73) }
        # (Line 75) if (v.Sound_Text2[cp] > 0)
    EUDEndIf()
    if EUDIf()(v.Sound_Text2[cp] <= 0, neg=True):
        # (Line 76) {
        # (Line 77) cecillia.NormalText(cp);
        cecillia.NormalText(cp)
        # (Line 78) anzu.NormalText(cp);
        anzu.NormalText(cp)
        # (Line 79) hotomoka.NormalText(cp);
        hotomoka.NormalText(cp)
        # (Line 80) alterego.NormalText(cp);
        alterego.NormalText(cp)
        # (Line 82) ryuzu.NormalText(cp);
        ryuzu.NormalText(cp)
        # (Line 83) }
        # (Line 86) if (v.Sound_Text3[cp] > 0)
    EUDEndIf()
    if EUDIf()(v.Sound_Text3[cp] <= 0, neg=True):
        # (Line 87) {
        # (Line 88) sakura.NormalText(cp);
        sakura.NormalText(cp)
        # (Line 89) yashiro.NormalText(cp);
        yashiro.NormalText(cp)
        # (Line 90) rin.NormalText(cp);
        rin.NormalText(cp)
        # (Line 91) seraphim.NormalText(cp);
        seraphim.NormalText(cp)
        # (Line 92) tenkei.NormalText(cp);
        tenkei.NormalText(cp)
        # (Line 93) }
        # (Line 96) if (v.Sound_Text4[cp] > 0)
    EUDEndIf()
    if EUDIf()(v.Sound_Text4[cp] <= 0, neg=True):
        # (Line 97) {
        # (Line 98) mn.NormalText(cp);
        mn.NormalText(cp)
        # (Line 99) emet.NormalText(cp);
        emet.NormalText(cp)
        # (Line 100) magellan.NormalText(cp);
        magellan.NormalText(cp)
        # (Line 101) }
        # (Line 103) if (v.Sound_Text_Uilti[cp] > 0)
    EUDEndIf()
    if EUDIf()(v.Sound_Text_Uilti[cp] <= 0, neg=True):
        # (Line 104) {
        # (Line 106) chtholly.UiltimateText(cp);
        chtholly.UiltimateText(cp)
        # (Line 107) maihime.UiltimateText(cp);
        maihime.UiltimateText(cp)
        # (Line 108) tenshi.UiltimateText(cp);
        tenshi.UiltimateText(cp)
        # (Line 109) miyuki.UiltimateText(cp);
        miyuki.UiltimateText(cp)
        # (Line 110) negev.UiltimateText(cp);
        negev.UiltimateText(cp)
        # (Line 113) cecillia.UiltimateText(cp);
        cecillia.UiltimateText(cp)
        # (Line 114) anzu.UiltimateText(cp);
        anzu.UiltimateText(cp)
        # (Line 115) hotomoka.UiltimateText(cp);
        hotomoka.UiltimateText(cp)
        # (Line 116) alterego.UiltimateText(cp);
        alterego.UiltimateText(cp)
        # (Line 118) ryuzu.UiltimateText(cp);
        ryuzu.UiltimateText(cp)
        # (Line 121) sakura.UiltimateText(cp);
        sakura.UiltimateText(cp)
        # (Line 122) yashiro.UiltimateText(cp);
        yashiro.UiltimateText(cp)
        # (Line 123) rin.UiltimateText(cp);
        rin.UiltimateText(cp)
        # (Line 124) seraphim.UiltimateText(cp);
        seraphim.UiltimateText(cp)
        # (Line 125) tenkei.UiltimateText(cp);
        tenkei.UiltimateText(cp)
        # (Line 128) mn.UiltimateText(cp);
        mn.UiltimateText(cp)
        # (Line 129) emet.UiltimateText(cp);
        emet.UiltimateText(cp)
        # (Line 130) magellan.UiltimateText(cp);
        magellan.UiltimateText(cp)
        # (Line 131) }
        # (Line 133) if (v.Sound_Text_Uniq[cp] > 0)
    EUDEndIf()
    if EUDIf()(v.Sound_Text_Uniq[cp] <= 0, neg=True):
        # (Line 134) {
        # (Line 136) chtholly.UniqueText(cp);
        chtholly.UniqueText(cp)
        # (Line 137) maihime.UniqueText(cp);
        maihime.UniqueText(cp)
        # (Line 138) tenshi.UniqueText(cp);
        tenshi.UniqueText(cp)
        # (Line 139) miyuki.UniqueText(cp);
        miyuki.UniqueText(cp)
        # (Line 140) negev.UniqueText(cp);
        negev.UniqueText(cp)
        # (Line 143) cecillia.UniqueText(cp);
        cecillia.UniqueText(cp)
        # (Line 144) anzu.UniqueText(cp);
        anzu.UniqueText(cp)
        # (Line 145) hotomoka.UniqueText(cp);
        hotomoka.UniqueText(cp)
        # (Line 146) alterego.UniqueText(cp);
        alterego.UniqueText(cp)
        # (Line 148) ryuzu.UniqueText(cp);
        ryuzu.UniqueText(cp)
        # (Line 151) sakura.UniqueText(cp);
        sakura.UniqueText(cp)
        # (Line 152) yashiro.UniqueText(cp);
        yashiro.UniqueText(cp)
        # (Line 153) rin.UniqueText(cp);
        rin.UniqueText(cp)
        # (Line 154) seraphim.UniqueText(cp);
        seraphim.UniqueText(cp)
        # (Line 155) tenkei.UniqueText(cp);
        tenkei.UniqueText(cp)
        # (Line 158) mn.UniqueText(cp);
        mn.UniqueText(cp)
        # (Line 159) emet.UniqueText(cp);
        emet.UniqueText(cp)
        # (Line 160) magellan.UniqueText(cp);
        magellan.UniqueText(cp)
        # (Line 161) }
        # (Line 162) }
    EUDEndIf()
