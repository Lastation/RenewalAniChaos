## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import Function as f;
import Function as f
# (Line 3) const looker = PVariable();
looker = _CGFW(lambda: [PVariable()], 1)[0]
# (Line 5) function Text(num);
# (Line 6) function Looker()
# (Line 7) {
@EUDFunc
def Looker():
    # (Line 8) if (looker[getuserplayerid() - 128] > 0)
    if EUDIf()(looker[f_getuserplayerid() - 128] <= 0, neg=True):
        # (Line 9) {
        # (Line 10) Text(looker[getuserplayerid() - 128]);
        Text(looker[f_getuserplayerid() - 128])
        # (Line 11) looker[getuserplayerid() - 128] = 0;
        _ARRW(looker, f_getuserplayerid() - 128) << (0)
        # (Line 12) }
        # (Line 13) }
    EUDEndIf()
    # (Line 15) function main(cp)

# (Line 16) {
@EUDFunc
def f_main(cp):
    # (Line 17) if (f.Park_Voice[cp] > 0)
    if EUDIf()(f.Park_Voice[cp] <= 0, neg=True):
        # (Line 18) {
        # (Line 19) Text(f.Park_Voice[cp]);
        Text(f.Park_Voice[cp])
        # (Line 20) looker[cp] = f.Park_Voice[cp];
        _ARRW(looker, cp) << (f.Park_Voice[cp])
        # (Line 21) f.Park_Voice[cp] = 0;
        _ARRW(f.Park_Voice, cp) << (0)
        # (Line 22) }
        # (Line 23) }
    EUDEndIf()
    # (Line 25) function Text(num)

# (Line 26) {
@EUDFunc
def Text(num):
    # (Line 27) switch (num)
    EUDSwitch(num)
    # (Line 28) {
    # (Line 29) case 1:
    _t1 = EUDSwitchCase()
    # (Line 30) PlayWAV("Oda_Ult01.ogg");
    if _t1(1):
        # (Line 31) break;
        DoActions(PlayWAV("Oda_Ult01.ogg"))
        EUDBreak()
        # (Line 32) case 2:
    _t2 = EUDSwitchCase()
    # (Line 33) f.stb.print("\x13\x1BOda Sakunosuke\n");
    if _t2(2):
        f.stb.print("\x13\x1BOda Sakunosuke\n")
        # (Line 34) f.stb.print("\x13\x04목이 아팠다\x04");
        f.stb.print("\x13\x04목이 아팠다\x04")
        # (Line 35) break;
        EUDBreak()
        # (Line 36) case 3:
    _t3 = EUDSwitchCase()
    # (Line 37) f.stb.print("\x13\x1BOda Sakunosuke\n");
    if _t3(3):
        f.stb.print("\x13\x1BOda Sakunosuke\n")
        # (Line 38) f.stb.print("\x13\x04숨을 쉴 수가 없었다\x04");
        f.stb.print("\x13\x04숨을 쉴 수가 없었다\x04")
        # (Line 39) break;
        EUDBreak()
        # (Line 40) case 4:
    _t4 = EUDSwitchCase()
    # (Line 41) f.stb.print("\x13\x1BOda Sakunosuke\n");
    if _t4(4):
        f.stb.print("\x13\x1BOda Sakunosuke\n")
        # (Line 42) f.stb.print("\x13\x04누군가의 절규가 들려왔다\x04");
        f.stb.print("\x13\x04누군가의 절규가 들려왔다\x04")
        # (Line 43) break;
        EUDBreak()
        # (Line 44) case 5:
    _t5 = EUDSwitchCase()
    # (Line 45) f.stb.print("\x13\x1BOda Sakunosuke\n");
    if _t5(5):
        f.stb.print("\x13\x1BOda Sakunosuke\n")
        # (Line 46) f.stb.print("\x13\x04목이 너무 아팠기에 그제야 깨달았다\x04");
        f.stb.print("\x13\x04목이 너무 아팠기에 그제야 깨달았다\x04")
        # (Line 47) break;
        EUDBreak()
        # (Line 48) case 6:
    _t6 = EUDSwitchCase()
    # (Line 49) f.stb.print("\x13\x1BOda Sakunosuke\n");
    if _t6(6):
        f.stb.print("\x13\x1BOda Sakunosuke\n")
        # (Line 50) f.stb.print("\x13\x04절규하고 있는 게 나라는 걸\x04");
        f.stb.print("\x13\x04절규하고 있는 게 나라는 걸\x04")
        # (Line 51) break;
        EUDBreak()
        # (Line 52) case 7:
    _t7 = EUDSwitchCase()
    # (Line 53) PlayWAV("Oda_Ult02.ogg");
    if _t7(7):
        # (Line 54) break;
        DoActions(PlayWAV("Oda_Ult02.ogg"))
        EUDBreak()
        # (Line 55) case 8:
    _t8 = EUDSwitchCase()
    # (Line 56) f.stb.printAt(4, "\n\x13\x04그럼 네가 써라");
    if _t8(8):
        f.stb.printAt(4, "\n\x13\x04그럼 네가 써라")
        # (Line 57) break;
        EUDBreak()
        # (Line 58) case 9:
    _t9 = EUDSwitchCase()
    # (Line 59) f.stb.printAt(4, "\n\x13\x04그게 그 소설을 완벽하게 간직할 유일한 방법이다");
    if _t9(9):
        f.stb.printAt(4, "\n\x13\x04그게 그 소설을 완벽하게 간직할 유일한 방법이다")
        # (Line 60) break;
        EUDBreak()
        # (Line 61) case 10:
    _t10 = EUDSwitchCase()
    # (Line 62) f.stb.printAt(3, "\x13\x1BOda Sakunosuke\n");
    if _t10(10):
        f.stb.printAt(3, "\x13\x1BOda Sakunosuke\n")
        # (Line 63) f.stb.printAt(5, "\x13\x04이젠 쓸 수 없어\x04");
        f.stb.printAt(5, "\x13\x04이젠 쓸 수 없어\x04")
        # (Line 64) break;
        EUDBreak()
        # (Line 65) case 11:
    _t11 = EUDSwitchCase()
    # (Line 66) f.stb.printAt(3, "\x13\x1BOda Sakunosuke\n");
    if _t11(11):
        f.stb.printAt(3, "\x13\x1BOda Sakunosuke\n")
        # (Line 67) f.stb.printAt(5, "\x13\x04난 이제\x04");
        f.stb.printAt(5, "\x13\x04난 이제\x04")
        # (Line 68) break;
        EUDBreak()
        # (Line 69) case 12:
    _t12 = EUDSwitchCase()
    # (Line 70) f.stb.printAt(3, "\x13\x1BOda Sakunosuke\n");
    if _t12(12):
        f.stb.printAt(3, "\x13\x1BOda Sakunosuke\n")
        # (Line 71) f.stb.printAt(5, "\x13\x04소설 같은 건 쓸 수 없어\x04");
        f.stb.printAt(5, "\x13\x04소설 같은 건 쓸 수 없어\x04")
        # (Line 72) break;
        EUDBreak()
        # (Line 73) case 13:
    _t13 = EUDSwitchCase()
    # (Line 74) PlayWAV("Oda_01.ogg");
    if _t13(13):
        # (Line 75) f.stb.print("\x13\x1BOda Sakunosuke\n");
        DoActions(PlayWAV("Oda_01.ogg"))
        f.stb.print("\x13\x1BOda Sakunosuke\n")
        # (Line 76) f.stb.print("\x13\x04나에게는 살인을 하지 않는 이유가 있다\x04");
        f.stb.print("\x13\x04나에게는 살인을 하지 않는 이유가 있다\x04")
        # (Line 77) break;
        EUDBreak()
        # (Line 78) case 14:
    _t14 = EUDSwitchCase()
    # (Line 79) PlayWAV("Oda_02.ogg");
    if _t14(14):
        # (Line 80) f.stb.print("\x13\x1BOda Sakunosuke\n");
        DoActions(PlayWAV("Oda_02.ogg"))
        f.stb.print("\x13\x1BOda Sakunosuke\n")
        # (Line 81) f.stb.print("\x13\x04내가 너의 소원을 들어줄 수 없는 건, 꿈이 있기 때문이다\x04");
        f.stb.print("\x13\x04내가 너의 소원을 들어줄 수 없는 건, 꿈이 있기 때문이다\x04")
        # (Line 82) break;
        EUDBreak()
        # (Line 83) case 15:
    _t15 = EUDSwitchCase()
    # (Line 84) PlayWAV("Oda_03.ogg");
    if _t15(15):
        # (Line 85) f.stb.print("\x13\x1BOda Sakunosuke\n");
        DoActions(PlayWAV("Oda_03.ogg"))
        f.stb.print("\x13\x1BOda Sakunosuke\n")
        # (Line 86) f.stb.print("\x13\x04어떤 사람이 소설을 쓰는 건 인간을 쓰는 거라고 하더군\x04");
        f.stb.print("\x13\x04어떤 사람이 소설을 쓰는 건 인간을 쓰는 거라고 하더군\x04")
        # (Line 87) break;
        EUDBreak()
        # (Line 88) case 16:
    _t16 = EUDSwitchCase()
    # (Line 89) f.stb.print("\x13\x1BOda Sakunosuke\n");
    if _t16(16):
        f.stb.print("\x13\x1BOda Sakunosuke\n")
        # (Line 90) f.stb.print("\x13\x04남의 목숨을 빼앗는 자가 인생을 쓸 수는 없지\x04");
        f.stb.print("\x13\x04남의 목숨을 빼앗는 자가 인생을 쓸 수는 없지\x04")
        # (Line 91) break;
        EUDBreak()
        # (Line 92) case 17:
    _t17 = EUDSwitchCase()
    # (Line 93) f.stb.print("\x13\x1BOda Sakunosuke\n");
    if _t17(17):
        f.stb.print("\x13\x1BOda Sakunosuke\n")
        # (Line 94) f.stb.print("\x13\x04그래서 살인하지 않는 거다\x04");
        f.stb.print("\x13\x04그래서 살인하지 않는 거다\x04")
        # (Line 95) break;
        EUDBreak()
        # (Line 96) case 18:
    _t18 = EUDSwitchCase()
    # (Line 97) PlayWAV("Oda_04.ogg");
    if _t18(18):
        # (Line 98) f.stb.print("\x13\x1BOda Sakunosuke\n");
        DoActions(PlayWAV("Oda_04.ogg"))
        f.stb.print("\x13\x1BOda Sakunosuke\n")
        # (Line 99) f.stb.print("\x13\x04이제 다 끝났어\x04");
        f.stb.print("\x13\x04이제 다 끝났어\x04")
        # (Line 100) break;
        EUDBreak()
        # (Line 101) case 19:
    _t19 = EUDSwitchCase()
    # (Line 102) PlayWAV("Oda_05.ogg");
    if _t19(19):
        # (Line 103) f.stb.print("\x13\x1BOda Sakunosuke\n");
        DoActions(PlayWAV("Oda_05.ogg"))
        f.stb.print("\x13\x1BOda Sakunosuke\n")
        # (Line 104) f.stb.print("\x13\x04나는 소설가가 되고 싶었어\x04");
        f.stb.print("\x13\x04나는 소설가가 되고 싶었어\x04")
        # (Line 105) break;
        EUDBreak()
        # (Line 106) case 20:
    _t20 = EUDSwitchCase()
    # (Line 107) PlayWAV("Oda_06.ogg");
    if _t20(20):
        # (Line 108) f.stb.print("\x13\x1BOda Sakunosuke\n");
        DoActions(PlayWAV("Oda_06.ogg"))
        f.stb.print("\x13\x1BOda Sakunosuke\n")
        # (Line 109) f.stb.print("\x13\x04또다시 사람을 죽였다간 그럴 자격이 없어질 것 같아서\x04");
        f.stb.print("\x13\x04또다시 사람을 죽였다간 그럴 자격이 없어질 것 같아서\x04")
        # (Line 110) break;
        EUDBreak()
        # (Line 111) case 21:
    _t21 = EUDSwitchCase()
    # (Line 112) f.stb.print("\x13\x1BOda Sakunosuke\n");
    if _t21(21):
        f.stb.print("\x13\x1BOda Sakunosuke\n")
        # (Line 113) f.stb.print("\x13\x04그래서 살인을 관뒀다\x04");
        f.stb.print("\x13\x04그래서 살인을 관뒀다\x04")
        # (Line 114) break;
        EUDBreak()
        # (Line 115) case 22:
    _t22 = EUDSwitchCase()
    # (Line 116) PlayWAV("Oda_07.ogg");
    if _t22(22):
        # (Line 117) f.stb.print("\x13\x1BOda Sakunosuke\n");
        DoActions(PlayWAV("Oda_07.ogg"))
        f.stb.print("\x13\x1BOda Sakunosuke\n")
        # (Line 118) f.stb.print("\x13\x04하지만 그것도 다 끝났어\x04");
        f.stb.print("\x13\x04하지만 그것도 다 끝났어\x04")
        # (Line 119) break;
        EUDBreak()
        # (Line 120) case 23:
    _t23 = EUDSwitchCase()
    # (Line 121) f.stb.print("\x13\x1BOda Sakunosuke\n");
    if _t23(23):
        f.stb.print("\x13\x1BOda Sakunosuke\n")
        # (Line 122) f.stb.print("\x13\x04내가 원하는 건 하나뿐이야\x04");
        f.stb.print("\x13\x04내가 원하는 건 하나뿐이야\x04")
        # (Line 123) break;
        EUDBreak()
        # (Line 124) case 24:
    _t24 = EUDSwitchCase()
    # (Line 125) PlayWAV("Oda_08.ogg");
    if _t24(24):
        # (Line 126) break;
        DoActions(PlayWAV("Oda_08.ogg"))
        EUDBreak()
        # (Line 127) case 25:
    _t25 = EUDSwitchCase()
    # (Line 128) PlayWAV("Oda_09.ogg");
    if _t25(25):
        # (Line 129) f.stb.print("\x13\x1BOda Sakunosuke\n");
        DoActions(PlayWAV("Oda_09.ogg"))
        f.stb.print("\x13\x1BOda Sakunosuke\n")
        # (Line 130) f.stb.print("\x13\x04그런 것 같군\x04");
        f.stb.print("\x13\x04그런 것 같군\x04")
        # (Line 131) break;
        EUDBreak()
        # (Line 132) case 26:
    _t26 = EUDSwitchCase()
    # (Line 133) PlayWAV("Oda_10.ogg");
    if _t26(26):
        # (Line 134) f.stb.print("\x13\x1BOda Sakunosuke\n");
        DoActions(PlayWAV("Oda_10.ogg"))
        f.stb.print("\x13\x1BOda Sakunosuke\n")
        # (Line 135) f.stb.print("\x13\x04그렇다면 미래 예측을 쓰지 않고 싸울 뿐이다\x04");
        f.stb.print("\x13\x04그렇다면 미래 예측을 쓰지 않고 싸울 뿐이다\x04")
        # (Line 136) break;
        EUDBreak()
        # (Line 137) case 27:
    _t27 = EUDSwitchCase()
    # (Line 138) PlayWAV("Oda_Unique.ogg");
    if _t27(27):
        # (Line 139) break;
        DoActions(PlayWAV("Oda_Unique.ogg"))
        EUDBreak()
        # (Line 140) case 28:
    _t28 = EUDSwitchCase()
    # (Line 141) PlayWAV("Oda_Ult03.ogg");
    if _t28(28):
        # (Line 142) f.stb.print("\x13\x1BOda Sakunosuke\n");
        DoActions(PlayWAV("Oda_Ult03.ogg"))
        f.stb.print("\x13\x1BOda Sakunosuke\n")
        # (Line 143) f.stb.print("\x13\x04잘자라, 코스케\x04");
        f.stb.print("\x13\x04잘자라, 코스케\x04")
        # (Line 144) break;
        EUDBreak()
        # (Line 145) case 29:
    _t29 = EUDSwitchCase()
    # (Line 146) f.stb.print("\x13\x1BOda Sakunosuke\n");
    if _t29(29):
        f.stb.print("\x13\x1BOda Sakunosuke\n")
        # (Line 147) f.stb.print("\x13\x04잘자라, 카츠미\x04");
        f.stb.print("\x13\x04잘자라, 카츠미\x04")
        # (Line 148) break;
        EUDBreak()
        # (Line 149) case 30:
    _t30 = EUDSwitchCase()
    # (Line 150) f.stb.print("\x13\x1BOda Sakunosuke\n");
    if _t30(30):
        f.stb.print("\x13\x1BOda Sakunosuke\n")
        # (Line 151) f.stb.print("\x13\x04잘자라, 유우\x04");
        f.stb.print("\x13\x04잘자라, 유우\x04")
        # (Line 152) break;
        EUDBreak()
        # (Line 153) case 31:
    _t31 = EUDSwitchCase()
    # (Line 154) f.stb.print("\x13\x1BOda Sakunosuke\n");
    if _t31(31):
        f.stb.print("\x13\x1BOda Sakunosuke\n")
        # (Line 155) f.stb.print("\x13\x04잘자라, 신지\x04");
        f.stb.print("\x13\x04잘자라, 신지\x04")
        # (Line 156) break;
        EUDBreak()
        # (Line 157) case 32:
    _t32 = EUDSwitchCase()
    # (Line 158) f.stb.print("\x13\x1BOda Sakunosuke\n");
    if _t32(32):
        f.stb.print("\x13\x1BOda Sakunosuke\n")
        # (Line 159) f.stb.print("\x13\x04잘자라, 사쿠라\x04");
        f.stb.print("\x13\x04잘자라, 사쿠라\x04")
        # (Line 160) break;
        EUDBreak()
        # (Line 161) case 33:
    _t33 = EUDSwitchCase()
    # (Line 162) f.stb.print("\x13\x1BOda Sakunosuke\n");
    if _t33(33):
        f.stb.print("\x13\x1BOda Sakunosuke\n")
        # (Line 163) f.stb.print("\x13\x04평안히 잠들어라\x04");
        f.stb.print("\x13\x04평안히 잠들어라\x04")
        # (Line 164) break;
        EUDBreak()
        # (Line 165) case 34:
    _t34 = EUDSwitchCase()
    # (Line 166) f.stb.print("\x13\x1BOda Sakunosuke\n");
    if _t34(34):
        f.stb.print("\x13\x1BOda Sakunosuke\n")
        # (Line 167) f.stb.print("\x13\x04다녀오마");
        f.stb.print("\x13\x04다녀오마")
        # (Line 168) break;
        EUDBreak()
        # (Line 169) }
    # (Line 170) }
    EUDEndSwitch()
