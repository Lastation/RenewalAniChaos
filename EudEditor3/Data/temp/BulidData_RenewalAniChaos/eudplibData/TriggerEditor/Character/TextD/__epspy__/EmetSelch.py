## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 2) import Variable as v;
import Variable as v
# (Line 4) const s = StringBuffer();
s = _CGFW(lambda: [StringBuffer()], 1)[0]
# (Line 6) function NormalText(cp)
# (Line 7) {
@EUDFunc
def NormalText(cp):
    # (Line 8) switch (v.Sound_Text4[cp])
    EUDSwitch(v.Sound_Text4[cp])
    # (Line 9) {
    # (Line 10) case 2000:
    _t1 = EUDSwitchCase()
    # (Line 11) PlayWAV("EmetSelch_SSS.ogg");
    if _t1(2000):
        # (Line 12) v.Sound_Text4[cp] = 0;
        DoActions(PlayWAV("EmetSelch_SSS.ogg"))
        _ARRW(v.Sound_Text4, cp) << (0)
        # (Line 13) s.print("\n\n\x13\x19Emet Selch\n\x13\x04자신들이 짓밟히는 건 불합리하다고 생각하나?\n\n");
        s.print("\n\n\x13\x19Emet Selch\n\x13\x04자신들이 짓밟히는 건 불합리하다고 생각하나?\n\n")
        # (Line 14) break;
        EUDBreak()
        # (Line 15) case 2001:
    _t2 = EUDSwitchCase()
    # (Line 16) v.Sound_Text4[cp] = 0;
    if _t2(2001):
        _ARRW(v.Sound_Text4, cp) << (0)
        # (Line 17) s.print("\n\n\x13\x19Emet Selch\n\x13\x04고대인을 위해 희생되는게 부당하다고?\n\n");
        s.print("\n\n\x13\x19Emet Selch\n\x13\x04고대인을 위해 희생되는게 부당하다고?\n\n")
        # (Line 18) break;
        EUDBreak()
        # (Line 19) case 2002:
    _t3 = EUDSwitchCase()
    # (Line 20) PlayWAV("EmetSelch_SSSCC.ogg");
    if _t3(2002):
        # (Line 21) v.Sound_Text4[cp] = 0;
        DoActions(PlayWAV("EmetSelch_SSSCC.ogg"))
        _ARRW(v.Sound_Text4, cp) << (0)
        # (Line 22) s.print("\n\n\x13\x19Emet Selch\n\x13\x04나를 봐라...! 그 누구보다도 오랫동안 너희 사이에 섞여 살아왔다!\n\n");
        s.print("\n\n\x13\x19Emet Selch\n\x13\x04나를 봐라...! 그 누구보다도 오랫동안 너희 사이에 섞여 살아왔다!\n\n")
        # (Line 23) break;
        EUDBreak()
        # (Line 24) case 2003:
    _t4 = EUDSwitchCase()
    # (Line 25) PlayWAV("EmetSelch_SSSCCAA.ogg");
    if _t4(2003):
        # (Line 26) v.Sound_Text4[cp] = 0;
        DoActions(PlayWAV("EmetSelch_SSSCCAA.ogg"))
        _ARRW(v.Sound_Text4, cp) << (0)
        # (Line 27) s.print("\n\n\x13\x19Emet Selch\n\x13\x04함께 밥을 먹고, 싸우고, 아프고, 늙기도 했다!\n\n");
        s.print("\n\n\x13\x19Emet Selch\n\x13\x04함께 밥을 먹고, 싸우고, 아프고, 늙기도 했다!\n\n")
        # (Line 28) break;
        EUDBreak()
        # (Line 29) case 2004:
    _t5 = EUDSwitchCase()
    # (Line 30) v.Sound_Text4[cp] = 0;
    if _t5(2004):
        _ARRW(v.Sound_Text4, cp) << (0)
        # (Line 31) s.print("\n\n\x13\x19Emet Selch\n\x13\x04곁에서 죽음을 지켜보고 때로는 아이를 가진 적도 있다!\n\n");
        s.print("\n\n\x13\x19Emet Selch\n\x13\x04곁에서 죽음을 지켜보고 때로는 아이를 가진 적도 있다!\n\n")
        # (Line 32) break;
        EUDBreak()
        # (Line 33) case 2005:
    _t6 = EUDSwitchCase()
    # (Line 34) PlayWAV("EmetSelch_SSSCCAACCA.ogg");
    if _t6(2005):
        # (Line 35) v.Sound_Text4[cp] = 0;
        DoActions(PlayWAV("EmetSelch_SSSCCAACCA.ogg"))
        _ARRW(v.Sound_Text4, cp) << (0)
        # (Line 36) s.print("\n\n\x13\x19Emet Selch\n\x13\x04그렇게 수없이 재어 보고, 그때마다 수업이 판단한 거다!\n\n");
        s.print("\n\n\x13\x19Emet Selch\n\x13\x04그렇게 수없이 재어 보고, 그때마다 수업이 판단한 거다!\n\n")
        # (Line 37) break;
        EUDBreak()
        # (Line 38) case 2006:
    _t7 = EUDSwitchCase()
    # (Line 39) v.Sound_Text4[cp] = 0;
    if _t7(2006):
        _ARRW(v.Sound_Text4, cp) << (0)
        # (Line 40) s.print("\n\n\x13\x19Emet Selch\n\x13\x04너희들은 어리석고 나약해서 이 별을 지키며 살아가기엔 한참 부족하다고!\n\n");
        s.print("\n\n\x13\x19Emet Selch\n\x13\x04너희들은 어리석고 나약해서 이 별을 지키며 살아가기엔 한참 부족하다고!\n\n")
        # (Line 41) break;
        EUDBreak()
        # (Line 42) case 2007:
    _t8 = EUDSwitchCase()
    # (Line 43) v.Sound_Text4[cp] = 0;
    if _t8(2007):
        _ARRW(v.Sound_Text4, cp) << (0)
        # (Line 44) PlayWAV("EmetSelch_CCA.ogg");
        # (Line 45) s.print("\n\n\x13\x19Emet Selch\n\x13\x04되다 만 것들이 우리들의 소망을 말하지 마라!\n\n");
        DoActions(PlayWAV("EmetSelch_CCA.ogg"))
        s.print("\n\n\x13\x19Emet Selch\n\x13\x04되다 만 것들이 우리들의 소망을 말하지 마라!\n\n")
        # (Line 46) break;
        EUDBreak()
        # (Line 47) case 2008:
    _t9 = EUDSwitchCase()
    # (Line 48) v.Sound_Text4[cp] = 0;
    if _t9(2008):
        _ARRW(v.Sound_Text4, cp) << (0)
        # (Line 49) PlayWAV("EmetSelch_CCAA.ogg");
        # (Line 50) s.print("\n\n\x13\x19Emet Selch\n\x13\x04세계는 우리들이 되찾는다\n\n");
        DoActions(PlayWAV("EmetSelch_CCAA.ogg"))
        s.print("\n\n\x13\x19Emet Selch\n\x13\x04세계는 우리들이 되찾는다\n\n")
        # (Line 51) break;
        EUDBreak()
        # (Line 52) case 2009:
    _t10 = EUDSwitchCase()
    # (Line 53) v.Sound_Text4[cp] = 0;
    if _t10(2009):
        _ARRW(v.Sound_Text4, cp) << (0)
        # (Line 54) PlayWAV("EmetSelch_CCAAA.ogg");
        # (Line 55) s.print("\n\n\x13\x19Emet Selch\n\x13\x04영웅따윈 없었던 거야\n\n");
        DoActions(PlayWAV("EmetSelch_CCAAA.ogg"))
        s.print("\n\n\x13\x19Emet Selch\n\x13\x04영웅따윈 없었던 거야\n\n")
        # (Line 56) break;
        EUDBreak()
        # (Line 58) }
    # (Line 60) }
    EUDEndSwitch()
    # (Line 63) function UniqueText(cp)

# (Line 64) {
@EUDFunc
def UniqueText(cp):
    # (Line 65) switch (v.Sound_Text_Uniq[cp])
    EUDSwitch(v.Sound_Text_Uniq[cp])
    # (Line 66) {
    # (Line 67) case 20000:
    _t1 = EUDSwitchCase()
    # (Line 68) s.print("\n\n\x13\x19Emet Selch\n\x13\x04그럼 제군, 다시 보도록 하지\n\n");
    if _t1(20000):
        s.print("\n\n\x13\x19Emet Selch\n\x13\x04그럼 제군, 다시 보도록 하지\n\n")
        # (Line 69) PlayWAV("EmetSelch_O.ogg");
        # (Line 70) v.Sound_Text_Uniq[cp] = 0;
        DoActions(PlayWAV("EmetSelch_O.ogg"))
        _ARRW(v.Sound_Text_Uniq, cp) << (0)
        # (Line 71) break;
        EUDBreak()
        # (Line 72) }
    # (Line 73) }
    EUDEndSwitch()
    # (Line 76) function UiltimateText(cp)

# (Line 77) {
@EUDFunc
def UiltimateText(cp):
    # (Line 78) switch (v.Sound_Text_Uilti[cp])
    EUDSwitch(v.Sound_Text_Uilti[cp])
    # (Line 79) {
    # (Line 80) case 20000:
    _t1 = EUDSwitchCase()
    # (Line 81) PlayWAV("EmetSelch_AACC.ogg");
    if _t1(20000):
        # (Line 82) v.Sound_Text_Uilti[cp] = 0;
        DoActions(PlayWAV("EmetSelch_AACC.ogg"))
        _ARRW(v.Sound_Text_Uilti, cp) << (0)
        # (Line 83) break;
        EUDBreak()
        # (Line 84) case 20001:
    _t2 = EUDSwitchCase()
    # (Line 85) s.print("\n\n\x13\x19Emet Selch\n\x13\x04종말의 재앙... 우리 시대의 끝이자, 내 집념의 시작...\n\n");
    if _t2(20001):
        s.print("\n\n\x13\x19Emet Selch\n\x13\x04종말의 재앙... 우리 시대의 끝이자, 내 집념의 시작...\n\n")
        # (Line 86) v.Sound_Text_Uilti[cp] = 0;
        _ARRW(v.Sound_Text_Uilti, cp) << (0)
        # (Line 87) break;
        EUDBreak()
        # (Line 88) case 20002:
    _t3 = EUDSwitchCase()
    # (Line 89) s.print("\n\n\x13\x19Emet Selch\n\x13\x04너희를 판정하기 위해, 또 한 차례 재연해 보이겠다.\n\n");
    if _t3(20002):
        s.print("\n\n\x13\x19Emet Selch\n\x13\x04너희를 판정하기 위해, 또 한 차례 재연해 보이겠다.\n\n")
        # (Line 90) v.Sound_Text_Uilti[cp] = 0;
        _ARRW(v.Sound_Text_Uilti, cp) << (0)
        # (Line 91) break;
        EUDBreak()
        # (Line 92) }
    # (Line 94) }
    EUDEndSwitch()
