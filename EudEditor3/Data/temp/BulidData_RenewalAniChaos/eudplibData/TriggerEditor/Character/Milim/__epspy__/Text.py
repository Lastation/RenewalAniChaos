## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import Function as f;
import Function as f
# (Line 3) function main(cp)
# (Line 4) {
@EUDFunc
def f_main(cp):
    # (Line 5) if (f.Milim_Voice[cp] > 0)
    if EUDIf()(f.Milim_Voice[cp] <= 0, neg=True):
        # (Line 6) {
        # (Line 7) switch (f.Milim_Voice[cp])
        EUDSwitch(f.Milim_Voice[cp])
        # (Line 8) {
        # (Line 9) case 1:
        _t2 = EUDSwitchCase()
        # (Line 10) PlayWAV("Milim_01.ogg");
        if _t2(1):
            # (Line 11) f.stb.print("\x13\x1BMilim Nava\n");
            DoActions(PlayWAV("Milim_01.ogg"))
            f.stb.print("\x13\x1BMilim Nava\n")
            # (Line 12) f.stb.print("\x13\x04재미있어~ 재미있는 거다!\x04\n");
            f.stb.print("\x13\x04재미있어~ 재미있는 거다!\x04\n")
            # (Line 13) break;
            EUDBreak()
            # (Line 14) case 2:
        _t3 = EUDSwitchCase()
        # (Line 15) PlayWAV("Milim_Unique01.ogg");
        if _t3(2):
            # (Line 16) break;
            DoActions(PlayWAV("Milim_Unique01.ogg"))
            EUDBreak()
            # (Line 17) case 3:
        _t4 = EUDSwitchCase()
        # (Line 18) PlayWAV("Milim_Unique02.ogg");
        if _t4(3):
            # (Line 19) break;
            DoActions(PlayWAV("Milim_Unique02.ogg"))
            EUDBreak()
            # (Line 20) case 4:
        _t5 = EUDSwitchCase()
        # (Line 21) PlayWAV("Milim_Unique03.ogg");
        if _t5(4):
            # (Line 22) f.stb.print("\x13\x1BMilim Nava\n");
            DoActions(PlayWAV("Milim_Unique03.ogg"))
            f.stb.print("\x13\x1BMilim Nava\n")
            # (Line 23) f.stb.print("\x13\x04만나서 반갑다!\x04\n");
            f.stb.print("\x13\x04만나서 반갑다!\x04\n")
            # (Line 24) f.stb.print("\x13\x04나는 단 한 명 남은 드라고노이드이자, 디스트로이의 이명을 가진\x04\n");
            f.stb.print("\x13\x04나는 단 한 명 남은 드라고노이드이자, 디스트로이의 이명을 가진\x04\n")
            # (Line 25) f.stb.print("\x13\x04마왕, 밀림 나바다!\x04\n");
            f.stb.print("\x13\x04마왕, 밀림 나바다!\x04\n")
            # (Line 26) break;
            EUDBreak()
            # (Line 27) case 5:
        _t6 = EUDSwitchCase()
        # (Line 28) PlayWAV("Milim_04.ogg");
        if _t6(5):
            # (Line 29) f.stb.print("\x13\x1BMilim Nava\n");
            DoActions(PlayWAV("Milim_04.ogg"))
            f.stb.print("\x13\x1BMilim Nava\n")
            # (Line 30) f.stb.print("\x13\x04그 기술은 이미 봤다\x04\n");
            f.stb.print("\x13\x04그 기술은 이미 봤다\x04\n")
            # (Line 31) f.stb.print("\x13\x04이번엔 내가 보여주마\x04\n");
            f.stb.print("\x13\x04이번엔 내가 보여주마\x04\n")
            # (Line 32) break;
            EUDBreak()
            # (Line 33) case 6:
        _t7 = EUDSwitchCase()
        # (Line 34) PlayWAV("Milim_05.ogg");
        if _t7(6):
            # (Line 35) f.stb.print("\x13\x1BMilim Nava\n");
            DoActions(PlayWAV("Milim_05.ogg"))
            f.stb.print("\x13\x1BMilim Nava\n")
            # (Line 36) f.stb.print("\x13\x04좋다! 재미있어 보이는구나!\x04\n");
            f.stb.print("\x13\x04좋다! 재미있어 보이는구나!\x04\n")
            # (Line 37) break;
            EUDBreak()
            # (Line 38) case 7:
        _t8 = EUDSwitchCase()
        # (Line 39) PlayWAV("Milim_Ult.ogg");
        if _t8(7):
            # (Line 40) f.stb.print("\x13\x1BMilim Nava\n");
            DoActions(PlayWAV("Milim_Ult.ogg"))
            f.stb.print("\x13\x1BMilim Nava\n")
            # (Line 41) f.stb.print("\x13\x04이것이, 힘조절이라는 것이다ㅡ!!\x04\n");
            f.stb.print("\x13\x04이것이, 힘조절이라는 것이다ㅡ!!\x04\n")
            # (Line 42) break;
            EUDBreak()
            # (Line 43) case 8:
        _t9 = EUDSwitchCase()
        # (Line 44) f.stb.print("\x13\x1BMilim Nava\n");
        if _t9(8):
            f.stb.print("\x13\x1BMilim Nava\n")
            # (Line 45) f.stb.print("\x13\x04드래곤 버스트!\x04\n");
            f.stb.print("\x13\x04드래곤 버스트!\x04\n")
            # (Line 46) break;
            EUDBreak()
            # (Line 47) }
        # (Line 48) f.Milim_Voice[cp] = 0;
        EUDEndSwitch()
        _ARRW(f.Milim_Voice, cp) << (0)
        # (Line 49) }
        # (Line 50) }
    EUDEndIf()
