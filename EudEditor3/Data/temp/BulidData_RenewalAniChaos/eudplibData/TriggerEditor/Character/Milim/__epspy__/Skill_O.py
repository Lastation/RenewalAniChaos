## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import Function as f;
import Function as f
# (Line 3) const s = StringBuffer();
s = _CGFW(lambda: [StringBuffer()], 1)[0]
# (Line 5) function main(cp)
# (Line 6) {
@EUDFunc
def f_main(cp):
    # (Line 7) if (f.count[cp] == 1)
    if EUDIf()(f.count[cp] == 1):
        # (Line 8) {
        # (Line 9) MoveLocation("25.Milim_Bozo", f.heroID[cp], cp, "Anywhere");
        # (Line 10) }
        DoActions(MoveLocation("25.Milim_Bozo", f.heroID[cp], cp, "Anywhere"))
        # (Line 12) f.HoldPosition(cp);
    EUDEndIf()
    f.HoldPosition(cp)
    # (Line 13) f.BanReturn(cp);
    f.BanReturn(cp)
    # (Line 15) if (f.delay[cp] == 0)
    if EUDIf()(f.delay[cp] == 0):
        # (Line 16) {
        # (Line 17) if (f.count[cp] == 0)
        if EUDIf()(f.count[cp] == 0):
            # (Line 18) {
            # (Line 19) if (f.loop[cp] == 0)
            if EUDIf()(f.loop[cp] == 0):
                # (Line 20) {
                # (Line 21) CreateUnit(1, "Flame Blue", "[Skill]Unit_Wait_8", cp);
                # (Line 22) SetInvincibility(Enable, "Any unit", cp, "[Skill]Unit_Wait_ALL");
                DoActions(CreateUnit(1, "Flame Blue", "[Skill]Unit_Wait_8", cp))
                # (Line 23) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                DoActions(SetInvincibility(Enable, "Any unit", cp, "[Skill]Unit_Wait_ALL"))
                # (Line 24) MoveUnit(All, "Flame Blue", cp, "Anywhere", f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 25) MoveLocation("25.Milim_Bozo", "Flame Blue", cp, "Anywhere");
                DoActions(MoveUnit(All, "Flame Blue", cp, "Anywhere", f.location[cp]))
                # (Line 27) f.SkillWait(cp, 80);
                DoActions(MoveLocation("25.Milim_Bozo", "Flame Blue", cp, "Anywhere"))
                f.SkillWait(cp, 80)
                # (Line 29) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 30) }
                # (Line 31) else if (f.loop[cp] < 60)
            if EUDElseIf()(f.loop[cp] >= 60, neg=True):
                # (Line 32) {
                # (Line 33) var x = 50;
                x = EUDVariable()
                x << (50)
                # (Line 35) if (cp >= 3) x = -x;
                if EUDIf()(cp >= 3):
                    x << (-x)
                    # (Line 37) f.DotShape(cp, 8, "40 + 1n Zealot", 0, 0);
                EUDEndIf()
                f.DotShape(cp, 8, "40 + 1n Zealot", 0, 0)
                # (Line 38) KillUnitAt(All, "40 + 1n Zealot", "Anywhere", cp);
                # (Line 40) addloc("25.Milim_Bozo", x * 3, 0);
                DoActions(KillUnitAt(All, "40 + 1n Zealot", "Anywhere", cp))
                f_addloc("25.Milim_Bozo", x * 3, 0)
                # (Line 41) MoveUnit(All, "Flame Blue", cp, "Anywhere", "25.Milim_Bozo");
                # (Line 43) CreateUnit(3, "40 + 1n Wraith", "[Skill]Unit_Wait_8", cp);
                DoActions(MoveUnit(All, "Flame Blue", cp, "Anywhere", "25.Milim_Bozo"))
                # (Line 44) SetInvincibility(Enable, "Any unit", cp, "[Skill]Unit_Wait_ALL");
                DoActions(CreateUnit(3, "40 + 1n Wraith", "[Skill]Unit_Wait_8", cp))
                # (Line 46) MoveLocation(f.location[cp], "Flame Blue", cp, "Anywhere");
                DoActions(SetInvincibility(Enable, "Any unit", cp, "[Skill]Unit_Wait_ALL"))
                # (Line 47) MoveUnit(1, "40 + 1n Wraith", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                DoActions(MoveLocation(f.location[cp], "Flame Blue", cp, "Anywhere"))
                # (Line 48) addloc(f.location[cp], -x, 0);
                DoActions(MoveUnit(1, "40 + 1n Wraith", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                f_addloc(f.location[cp], -x, 0)
                # (Line 49) MoveUnit(1, "40 + 1n Wraith", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                # (Line 50) addloc(f.location[cp], -x, 0);
                DoActions(MoveUnit(1, "40 + 1n Wraith", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                f_addloc(f.location[cp], -x, 0)
                # (Line 51) MoveUnit(1, "40 + 1n Wraith", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                # (Line 52) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", cp);
                DoActions(MoveUnit(1, "40 + 1n Wraith", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                # (Line 54) if ((cp >= 3 && (Bring(cp, AtLeast, 1, "Flame Blue", "[Potal]Shop7") || Bring(cp, AtLeast, 1, "Flame Blue", "[Potal]Potal7")))
                DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", cp))
                _t7 = EUDIf()
                # (Line 55) || (cp < 3 && (Bring(cp, AtLeast, 1, "Flame Blue", "[Potal]Shop8") || Bring(cp, AtLeast, 1, "Flame Blue", "[Potal]Potal8"))))
                if _t7(EUDSCOr()((EUDSCAnd()(cp >= 3)((EUDSCOr()(Bring(cp, AtLeast, 1, "Flame Blue", "[Potal]Shop7"))(Bring(cp, AtLeast, 1, "Flame Blue", "[Potal]Potal7"))()))()))((EUDSCAnd()(cp >= 3, neg=True)((EUDSCOr()(Bring(cp, AtLeast, 1, "Flame Blue", "[Potal]Shop8"))(Bring(cp, AtLeast, 1, "Flame Blue", "[Potal]Potal8"))()))()))()):
                    # (Line 56) {
                    # (Line 57) SetDeaths(cp, SetTo, 120, " `UniqueCoolTime");
                    # (Line 59) f.SkillWait(cp, 80);
                    DoActions(SetDeaths(cp, SetTo, 120, " `UniqueCoolTime"))
                    f.SkillWait(cp, 80)
                    # (Line 61) f.count[cp] = 2;
                    _ARRW(f.count, cp) << (2)
                    # (Line 62) f.loop[cp] = 0;
                    _ARRW(f.loop, cp) << (0)
                    # (Line 63) }
                    # (Line 64) else if (cp < 3)
                if EUDElseIf()(cp >= 3, neg=True):
                    # (Line 65) {
                    # (Line 66) if (Bring(P8, AtLeast, 1, "Buildings", "25.Milim_Bozo"))
                    if EUDIf()(Bring(P8, AtLeast, 1, "Buildings", "25.Milim_Bozo")):
                        # (Line 67) {
                        # (Line 68) SetSwitch("Unique - MilimWarning", Set);
                        # (Line 69) SetSwitch("Recall - Milim", Set);
                        DoActions(SetSwitch("Unique - MilimWarning", Set))
                        # (Line 71) f.Voice_Routine(cp, 3);
                        DoActions(SetSwitch("Recall - Milim", Set))
                        f.Voice_Routine(cp, 3)
                        # (Line 73) f.SkillWait(cp, 80);
                        f.SkillWait(cp, 80)
                        # (Line 75) f.count[cp] += 1;
                        _ARRW(f.count, cp).__iadd__(1)
                        # (Line 76) f.loop[cp] = 0;
                        _ARRW(f.loop, cp) << (0)
                        # (Line 77) }
                        # (Line 78) else
                        # (Line 79) {
                    if EUDElse()():
                        # (Line 80) f.SkillWait(cp, 80);
                        f.SkillWait(cp, 80)
                        # (Line 82) f.loop[cp] += 1;
                        _ARRW(f.loop, cp).__iadd__(1)
                        # (Line 83) }
                        # (Line 84) }
                    EUDEndIf()
                    # (Line 85) else if (cp >= 3)
                if EUDElseIf()(cp >= 3):
                    # (Line 86) {
                    # (Line 87) if (Bring(P7, AtLeast, 1, "Buildings", "25.Milim_Bozo"))
                    if EUDIf()(Bring(P7, AtLeast, 1, "Buildings", "25.Milim_Bozo")):
                        # (Line 88) {
                        # (Line 89) SetSwitch("Unique - MilimWarning", Set);
                        # (Line 90) SetSwitch("Recall - Milim", Set);
                        DoActions(SetSwitch("Unique - MilimWarning", Set))
                        # (Line 92) f.Voice_Routine(cp, 3);
                        DoActions(SetSwitch("Recall - Milim", Set))
                        f.Voice_Routine(cp, 3)
                        # (Line 94) f.SkillWait(cp, 80);
                        f.SkillWait(cp, 80)
                        # (Line 96) f.count[cp] += 1;
                        _ARRW(f.count, cp).__iadd__(1)
                        # (Line 97) f.loop[cp] = 0;
                        _ARRW(f.loop, cp) << (0)
                        # (Line 98) }
                        # (Line 99) else
                        # (Line 100) {
                    if EUDElse()():
                        # (Line 101) f.SkillWait(cp, 80);
                        f.SkillWait(cp, 80)
                        # (Line 103) f.loop[cp] += 1;
                        _ARRW(f.loop, cp).__iadd__(1)
                        # (Line 104) }
                        # (Line 105) }
                    EUDEndIf()
                    # (Line 106) }
                EUDEndIf()
                # (Line 107) else if (f.loop[cp] == 60)
            if EUDElseIf()(f.loop[cp] == 60):
                # (Line 108) {
                # (Line 109) SetDeaths(cp, SetTo, 120, " `UniqueCoolTime");
                # (Line 111) f.SkillWait(cp, 80);
                DoActions(SetDeaths(cp, SetTo, 120, " `UniqueCoolTime"))
                f.SkillWait(cp, 80)
                # (Line 113) f.count[cp] = 2;
                _ARRW(f.count, cp) << (2)
                # (Line 114) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 115) }
                # (Line 116) }
            EUDEndIf()
            # (Line 117) else if (f.count[cp] == 1)
        if EUDElseIf()(f.count[cp] == 1):
            # (Line 118) {
            # (Line 119) if (f.loop[cp] < 40)
            if EUDIf()(f.loop[cp] >= 40, neg=True):
                # (Line 120) {
                # (Line 121) f.EdgeShape(cp, 1, "50 + 1n Tank", 0, 7, 120);
                f.EdgeShape(cp, 1, "50 + 1n Tank", 0, 7, 120)
                # (Line 122) if (f.loop[cp] % 2 == 0)
                if EUDIf()(f.loop[cp] % 2 == 0):
                    # (Line 123) {
                    # (Line 124) f.EdgeShape(cp, 1, "Protoss Dark Archon", 0, 3, 40);
                    f.EdgeShape(cp, 1, "Protoss Dark Archon", 0, 3, 40)
                    # (Line 125) }
                    # (Line 126) else if (f.loop[cp] % 2 == 1)
                if EUDElseIf()(f.loop[cp] % 2 == 1):
                    # (Line 127) {
                    # (Line 128) f.EdgeShape(cp, 1, "Protoss Dark Archon", 0, 5, 80);
                    f.EdgeShape(cp, 1, "Protoss Dark Archon", 0, 5, 80)
                    # (Line 129) }
                    # (Line 130) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp);
                EUDEndIf()
                # (Line 131) KillUnitAt(All, "50 + 1n Tank", "Anywhere", cp);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp))
                # (Line 132) KillUnitAt(All, "60 + 1n High Templar", "Anywhere", cp);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", cp))
                # (Line 133) KillUnitAt(All, "Rhynadon (Badlands)", "Anywhere", cp);
                DoActions(KillUnitAt(All, "60 + 1n High Templar", "Anywhere", cp))
                # (Line 135) f.SkillWait(cp, 80);
                DoActions(KillUnitAt(All, "Rhynadon (Badlands)", "Anywhere", cp))
                f.SkillWait(cp, 80)
                # (Line 137) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 138) }
                # (Line 139) else if (f.loop[cp] == 40)
            if EUDElseIf()(f.loop[cp] == 40):
                # (Line 140) {
                # (Line 141) MoveLocation("25.Milim_Bozo", "Flame Blue", cp, "Anywhere");
                # (Line 143) if (Deaths(CurrentPlayer, Exactly, 0, (210)))
                DoActions(MoveLocation("25.Milim_Bozo", "Flame Blue", cp, "Anywhere"))
                if EUDIf()(Deaths(CurrentPlayer, Exactly, 0, (210))):
                    # (Line 144) {
                    # (Line 145) MoveUnit(All, f.heroID[cp], cp, "Anywhere", "25.Milim_Bozo");
                    # (Line 146) CenterView("25.Milim_Bozo");
                    DoActions(MoveUnit(All, f.heroID[cp], cp, "Anywhere", "25.Milim_Bozo"))
                    # (Line 147) }
                    DoActions(CenterView("25.Milim_Bozo"))
                    # (Line 149) f.NxNSquareShape(cp, 1, "130 + 1n Norad", 3, 75);
                EUDEndIf()
                f.NxNSquareShape(cp, 1, "130 + 1n Norad", 3, 75)
                # (Line 150) f.DotShape(cp, 16, "80 + 1n Goliath", 0, 0);
                f.DotShape(cp, 16, "80 + 1n Goliath", 0, 0)
                # (Line 151) Order("130 + 1n Norad", cp, "Anywhere", Attack, "Anywhere");
                # (Line 152) MoveUnit(All, "80 + 1n Goliath", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                DoActions(Order("130 + 1n Norad", cp, "Anywhere", Attack, "Anywhere"))
                # (Line 153) Order("80 + 1n Goliath", cp, "Anywhere", Attack, "Anywhere");
                DoActions(MoveUnit(All, "80 + 1n Goliath", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                # (Line 154) SetSwitch("Recall - Milim", Clear);
                DoActions(Order("80 + 1n Goliath", cp, "Anywhere", Attack, "Anywhere"))
                # (Line 156) f.SkillWait(cp, 80);
                DoActions(SetSwitch("Recall - Milim", Clear))
                f.SkillWait(cp, 80)
                # (Line 158) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 159) }
                # (Line 160) else if (f.loop[cp] < 45)
            if EUDElseIf()(f.loop[cp] >= 45, neg=True):
                # (Line 161) {
                # (Line 162) var i = f.loop[cp] - 41;
                i = EUDVariable()
                i << (f.loop[cp] - 41)
                # (Line 164) f.EdgeShape(cp, 1, "60 + 1n Siege", 0, 5 + 2 * i, 100 + 50 * i);
                f.EdgeShape(cp, 1, "60 + 1n Siege", 0, 5 + 2 * i, 100 + 50 * i)
                # (Line 165) f.EdgeShape(cp, 1, "50 + 1n Battlecruiser", 0, 3 + 2 * i, 50 + 50 * i);
                f.EdgeShape(cp, 1, "50 + 1n Battlecruiser", 0, 3 + 2 * i, 50 + 50 * i)
                # (Line 166) KillUnitAt(All, "60 + 1n Siege", "Anywhere", cp);
                # (Line 167) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp);
                DoActions(KillUnitAt(All, "60 + 1n Siege", "Anywhere", cp))
                # (Line 169) f.SkillWait(cp, 80);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp))
                f.SkillWait(cp, 80)
                # (Line 171) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 172) }
                # (Line 173) else if (f.loop[cp] == 45)
            if EUDElseIf()(f.loop[cp] == 45):
                # (Line 174) {
                # (Line 175) KillUnitAt(All, "130 + 1n Norad", "Anywhere", cp);
                # (Line 176) KillUnitAt(All, "80 + 1n Goliath", "Anywhere", cp);
                DoActions(KillUnitAt(All, "130 + 1n Norad", "Anywhere", cp))
                # (Line 178) f.EdgeShape(cp, 1, " Unit. Hoffnung 25000", 0, 3, 50);
                DoActions(KillUnitAt(All, "80 + 1n Goliath", "Anywhere", cp))
                f.EdgeShape(cp, 1, " Unit. Hoffnung 25000", 0, 3, 50)
                # (Line 179) f.EdgeShape(cp, 1, " Unit. Hoffnung 25000", 0, 5, 100);
                f.EdgeShape(cp, 1, " Unit. Hoffnung 25000", 0, 5, 100)
                # (Line 180) f.EdgeShape(cp, 1, " Unit. Hoffnung 25000", 0, 7, 150);
                f.EdgeShape(cp, 1, " Unit. Hoffnung 25000", 0, 7, 150)
                # (Line 181) f.EdgeShape(cp, 1, " Unit. Hoffnung 25000", 0, 9, 150);
                f.EdgeShape(cp, 1, " Unit. Hoffnung 25000", 0, 9, 150)
                # (Line 182) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp);
                # (Line 184) f.SkillWait(cp, 80);
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp))
                f.SkillWait(cp, 80)
                # (Line 186) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 187) }
                # (Line 188) else if (f.loop[cp] == 46)
            if EUDElseIf()(f.loop[cp] == 46):
                # (Line 189) {
                # (Line 190) f.Voice_Routine(cp, 4);
                f.Voice_Routine(cp, 4)
                # (Line 191) SetSwitch("Unique - Milim", Set);
                # (Line 192) SetDeaths(cp, SetTo, 2880, " `UniqueCoolTime");
                DoActions(SetSwitch("Unique - Milim", Set))
                # (Line 193) SetDeaths(cp, SetTo, 720, " `UniqueSkill");
                DoActions(SetDeaths(cp, SetTo, 2880, " `UniqueCoolTime"))
                # (Line 195) f.SkillWait(cp, 80);
                DoActions(SetDeaths(cp, SetTo, 720, " `UniqueSkill"))
                f.SkillWait(cp, 80)
                # (Line 197) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 198) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 199) }
                # (Line 200) }
            EUDEndIf()
            # (Line 201) else if (f.count[cp] == 2)
        if EUDElseIf()(f.count[cp] == 2):
            # (Line 202) {
            # (Line 203) RemoveUnitAt(All, "Flame Blue", "Anywhere", cp);
            # (Line 204) SetSwitch("Unique - MilimWarning", Clear);
            DoActions(RemoveUnitAt(All, "Flame Blue", "Anywhere", cp))
            # (Line 205) f.SkillEnd(cp);
            DoActions(SetSwitch("Unique - MilimWarning", Clear))
            f.SkillEnd(cp)
            # (Line 206) }
            # (Line 208) }
        EUDEndIf()
        # (Line 209) }
    EUDEndIf()
