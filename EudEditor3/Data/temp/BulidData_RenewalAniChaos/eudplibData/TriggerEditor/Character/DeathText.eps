import Variable as v;

const s = StringBuffer();

function SetDeathValue(cp)
{
	if (Deaths(CurrentPlayer, (0), 1000, (210)))
	{
		v.DeathOre[0] = 250 + v.Level[cp] * 10;
		v.DeathOre[1] = 250 + v.Level[cp] * 10;
		v.DeathOre[2] = 250 + v.Level[cp] * 10;
		v.DeathOre[3] = 250 + v.Level[cp] * 10;
		v.DeathOre[4] = 250 + v.Level[cp] * 10;
		v.DeathOre[5] = 250 + v.Level[cp] * 10;
		
		CenterView((96));
		
		if (cp >= 0 && cp <= 2)
		{
			v.Team_Num[0] = 2;
			v.Team_Num[1] = 2;
			v.Team_Num[2] = 2;
			v.Team_Num[3] = 2;
			v.Team_Num[4] = 2;
			v.Team_Num[5] = 2;
		
			if (Deaths((0), (10), 15, (172)) || Deaths((1), (10), 15, (172)) || Deaths((2), (10), 15, (172))) { SetSwitch((20), (4)); }
			if (Switch((22), (2)))
			{
				if (Deaths((0), (10), 16, (172)) || Deaths((1), (10), 16, (172)) || Deaths((2), (10), 16, (172))) 
				{ SetDeaths((13), (7), 12, (210)); SetSwitch((23), (4)); }
				else { SetDeaths(CurrentPlayer, SetTo, 120 + v.Level[cp] * 12, (210)); }
			}
			else { SetDeaths(CurrentPlayer, SetTo, 120 + v.Level[cp] * 12, (210)); }
			
			if (Bring((6), (1), 6, (162), (153))) { SetScore((6), (8), 5, (7)); }
			SetResources((0), (8), v.DeathOre[cp], (0));
			SetResources((1), (8), v.DeathOre[cp], (0));
			SetResources((2), (8), v.DeathOre[cp], (0));
			SetResources((3), (8), v.DeathOre[cp], (0));
			SetResources((4), (8), v.DeathOre[cp], (0));
			SetResources((5), (8), v.DeathOre[cp], (0));
		}
		if (cp >= 3 && cp <= 5)
		{
			v.Team_Num[0] = 1;
			v.Team_Num[1] = 1;
			v.Team_Num[2] = 1;
			v.Team_Num[3] = 1;
			v.Team_Num[4] = 1;
			v.Team_Num[5] = 1;
		
			if (Deaths((3), (10), 15, (172)) || Deaths((4), (10), 15, (172)) || Deaths((5), (10), 15, (172))) { SetSwitch((20), (4)); }
			if (Switch((22), (2)))
			{
				if (Deaths((3), (10), 16, (172)) || Deaths((4), (10), 16, (172)) || Deaths((5), (10), 16, (172))) 
				{ SetDeaths((13), (7), 12, (210)); SetSwitch((23), (4)); }
				else { SetDeaths(CurrentPlayer, SetTo, 120 + v.Level[cp] * 12, (210)); }
			}
			else { SetDeaths(CurrentPlayer, SetTo, 120 + v.Level[cp] * 12, (210)); }
			
			if (Bring((7), (1), 6, (162), (153))) { SetScore((7), (8), 5, (7)); }
			SetResources((0), (8), v.DeathOre[cp], (0));
			SetResources((1), (8), v.DeathOre[cp], (0));
			SetResources((2), (8), v.DeathOre[cp], (0));
			SetResources((3), (8), v.DeathOre[cp], (0));
			SetResources((4), (8), v.DeathOre[cp], (0));
			SetResources((5), (8), v.DeathOre[cp], (0));
		}
		
		v.DeathOre_Text[cp] = v.DeathOre[cp];
		
		v.Death_Score[cp] += 1;
	}
}


function DeathText(cp)
{
	if (v.DeathOre_Text[cp] != 0)
	{
		const value = dwread_epd(EPD(0x58A364 + 48 * 211 + 4 * cp));
		
		s.printAt(1,"\n\x13\x08!! Warning !!\n\x13\x19:: \x17", 
		ptr2s(v.Hero_Name[value]), "\x04이 치명상을 입었습니다. \x19::\n\n\x13\x07", 
		v.Team_Num[cp], "\x04Team \x17+ ",
		v.DeathOre_Text[cp], " \x04Ore\n");
		
		SetDeaths((13), (7), 0, (211));
		v.DeathOre_Text[cp] = 0;
	}
}

function SetKillScore(cp)
{
	if (Kills(CurrentPlayer, AtLeast, 1, 51))	{ v.Kill_Score[cp] += 1; SetKills(CurrentPlayer, Subtract, 1, 51); }
	if (Kills(CurrentPlayer, AtLeast, 1, 77))	{ v.Kill_Score[cp] += 1; SetKills(CurrentPlayer, Subtract, 1, 77); }
	if (Kills(CurrentPlayer, AtLeast, 1, 74))	{ v.Kill_Score[cp] += 1; SetKills(CurrentPlayer, Subtract, 1, 74); }
	if (Kills(CurrentPlayer, AtLeast, 1, 16))	{ v.Kill_Score[cp] += 1; SetKills(CurrentPlayer, Subtract, 1, 16); }
	if (Kills(CurrentPlayer, AtLeast, 1, 54))	{ v.Kill_Score[cp] += 1; SetKills(CurrentPlayer, Subtract, 1, 54); }
	if (Kills(CurrentPlayer, AtLeast, 1, 99))	{ v.Kill_Score[cp] += 1; SetKills(CurrentPlayer, Subtract, 1, 99); }
}