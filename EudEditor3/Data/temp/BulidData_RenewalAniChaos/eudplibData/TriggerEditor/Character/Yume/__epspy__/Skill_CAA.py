## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import PluginVariables as msqcvar;
import PluginVariables as msqcvar
# (Line 2) import Function as f;
import Function as f
# (Line 4) function main(cp)
# (Line 5) {
@EUDFunc
def f_main(cp):
    # (Line 6) ModifyUnitShields(All, f.heroID[cp], cp, "Anywhere", 1);
    # (Line 8) if (f.delay[cp] == 0)
    DoActions(ModifyUnitShields(All, f.heroID[cp], cp, "Anywhere", 1))
    if EUDIf()(f.delay[cp] == 0):
        # (Line 9) {
        # (Line 10) if (f.count[cp] == 0)
        if EUDIf()(f.count[cp] == 0):
            # (Line 11) {
            # (Line 12) if (f.loop[cp] < 8)
            if EUDIf()(f.loop[cp] >= 8, neg=True):
                # (Line 13) {
                # (Line 14) if (f.loop[cp] == 0)
                if EUDIf()(f.loop[cp] == 0):
                    # (Line 15) {
                    # (Line 16) f.LineShape(cp, 1, "40 + 1n Mojo", 45, 3, 50, 0);
                    f.LineShape(cp, 1, "40 + 1n Mojo", 45, 3, 50, 0)
                    # (Line 17) f.LineShape(cp, 1, " Unit. Hoffnung 25000", 45, 3, 50, 0);
                    f.LineShape(cp, 1, " Unit. Hoffnung 25000", 45, 3, 50, 0)
                    # (Line 18) }
                    # (Line 19) else if (f.loop[cp] == 2)
                if EUDElseIf()(f.loop[cp] == 2):
                    # (Line 20) {
                    # (Line 21) RemoveUnitAt(All, "40 + 1n Mojo", "Anywhere", cp);
                    # (Line 23) f.LineShape(cp, 1, "40 + 1n Mojo", 45, 5, 50, 0);
                    DoActions(RemoveUnitAt(All, "40 + 1n Mojo", "Anywhere", cp))
                    f.LineShape(cp, 1, "40 + 1n Mojo", 45, 5, 50, 0)
                    # (Line 24) f.LineShape(cp, 1, " Unit. Hoffnung 25000", 45, 5, 50, 0);
                    f.LineShape(cp, 1, " Unit. Hoffnung 25000", 45, 5, 50, 0)
                    # (Line 25) }
                    # (Line 26) else if (f.loop[cp] == 4)
                if EUDElseIf()(f.loop[cp] == 4):
                    # (Line 27) {
                    # (Line 28) RemoveUnitAt(All, "40 + 1n Mojo", "Anywhere", cp);
                    # (Line 30) f.LineShape(cp, 1, "40 + 1n Wraith", 45, 7, 50, 0);
                    DoActions(RemoveUnitAt(All, "40 + 1n Mojo", "Anywhere", cp))
                    f.LineShape(cp, 1, "40 + 1n Wraith", 45, 7, 50, 0)
                    # (Line 31) f.LineShape(cp, 1, " Unit. Hoffnung 25000", 45, 7, 50, 0);
                    f.LineShape(cp, 1, " Unit. Hoffnung 25000", 45, 7, 50, 0)
                    # (Line 32) }
                    # (Line 33) else if (f.loop[cp] == 6)
                if EUDElseIf()(f.loop[cp] == 6):
                    # (Line 34) {
                    # (Line 35) RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", cp);
                    # (Line 37) f.LineShape(cp, 1, "50 + 1n Battlecruiser", 45, 5, 75, 0);
                    DoActions(RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", cp))
                    f.LineShape(cp, 1, "50 + 1n Battlecruiser", 45, 5, 75, 0)
                    # (Line 38) f.NxNSquareShapeAt(cp, 1, "Protoss Dark Archon", 3, 25, 75, 75);
                    f.NxNSquareShapeAt(cp, 1, "Protoss Dark Archon", 3, 25, 75, 75)
                    # (Line 39) f.NxNSquareShapeAt(cp, 1, "Protoss Dark Archon", 3, 25, 150, 150);
                    f.NxNSquareShapeAt(cp, 1, "Protoss Dark Archon", 3, 25, 150, 150)
                    # (Line 40) f.NxNSquareShapeAt(cp, 1, "Protoss Dark Archon", 3, 25, 0, 0);
                    f.NxNSquareShapeAt(cp, 1, "Protoss Dark Archon", 3, 25, 0, 0)
                    # (Line 41) f.NxNSquareShapeAt(cp, 1, "Protoss Dark Archon", 3, 25, -75, -75);
                    f.NxNSquareShapeAt(cp, 1, "Protoss Dark Archon", 3, 25, -75, -75)
                    # (Line 42) f.NxNSquareShapeAt(cp, 1, "Protoss Dark Archon", 3, 25, -150, -150);
                    f.NxNSquareShapeAt(cp, 1, "Protoss Dark Archon", 3, 25, -150, -150)
                    # (Line 43) }
                    # (Line 45) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                EUDEndIf()
                # (Line 46) Order("50 + 1n Battlecruiser", cp, "Anywhere", Attack, "Anywhere");
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 47) Order("40 + 1n Wraith", cp, "Anywhere", Attack, "Anywhere");
                DoActions(Order("50 + 1n Battlecruiser", cp, "Anywhere", Attack, "Anywhere"))
                # (Line 48) Order("40 + 1n Mojo", cp, "Anywhere", Attack, "Anywhere");
                DoActions(Order("40 + 1n Wraith", cp, "Anywhere", Attack, "Anywhere"))
                # (Line 50) f.SquareShape(cp, 8, "Vulture Spider Mine", 160 - 40 * f.loop[cp], 160);
                DoActions(Order("40 + 1n Mojo", cp, "Anywhere", Attack, "Anywhere"))
                f.SquareShape(cp, 8, "Vulture Spider Mine", 160 - 40 * f.loop[cp], 160)
                # (Line 51) f.SquareShape(cp, 1, "40 + 1n Guardian", 160 - 40 * f.loop[cp], 160);
                f.SquareShape(cp, 1, "40 + 1n Guardian", 160 - 40 * f.loop[cp], 160)
                # (Line 53) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp);
                # (Line 54) KillUnitAt(All, "Vulture Spider Mine", "Anywhere", cp);
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp))
                # (Line 55) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp);
                DoActions(KillUnitAt(All, "Vulture Spider Mine", "Anywhere", cp))
                # (Line 56) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp))
                # (Line 58) f.SkillWait(cp, 80);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp))
                f.SkillWait(cp, 80)
                # (Line 60) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 61) }
                # (Line 62) else if (f.loop[cp] == 8)
            if EUDElseIf()(f.loop[cp] == 8):
                # (Line 63) {
                # (Line 64) f.SkillWait(cp, 80);
                f.SkillWait(cp, 80)
                # (Line 66) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 67) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 68) }
                # (Line 69) }
            EUDEndIf()
            # (Line 70) else if (f.count[cp] == 1)
        if EUDElseIf()(f.count[cp] == 1):
            # (Line 71) {
            # (Line 72) if (f.loop[cp] < 8)
            if EUDIf()(f.loop[cp] >= 8, neg=True):
                # (Line 73) {
                # (Line 75) if (f.loop[cp] == 0)
                if EUDIf()(f.loop[cp] == 0):
                    # (Line 76) {
                    # (Line 77) f.Table_Sin(cp, 22 + 45 * (f.loop[cp] % 4), 50);
                    f.Table_Sin(cp, 22 + 45 * (f.loop[cp] % 4), 50)
                    # (Line 78) f.Table_Cos(cp, 22 + 45 * (f.loop[cp] % 4), 50);
                    f.Table_Cos(cp, 22 + 45 * (f.loop[cp] % 4), 50)
                    # (Line 80) f.SquareShape(cp, 1, "40 + 1n Guardian", f.CosAngle[cp], f.SinAngle[cp]);
                    f.SquareShape(cp, 1, "40 + 1n Guardian", f.CosAngle[cp], f.SinAngle[cp])
                    # (Line 81) f.SquareShape(cp, 1, "60 + 1n Archon", f.CosAngle[cp], f.SinAngle[cp]);
                    f.SquareShape(cp, 1, "60 + 1n Archon", f.CosAngle[cp], f.SinAngle[cp])
                    # (Line 82) }
                    # (Line 83) else if (f.loop[cp] == 2)
                if EUDElseIf()(f.loop[cp] == 2):
                    # (Line 84) {
                    # (Line 85) f.Table_Sin(cp, 22 + 45 * (f.loop[cp] % 4), 100);
                    f.Table_Sin(cp, 22 + 45 * (f.loop[cp] % 4), 100)
                    # (Line 86) f.Table_Cos(cp, 22 + 45 * (f.loop[cp] % 4), 100);
                    f.Table_Cos(cp, 22 + 45 * (f.loop[cp] % 4), 100)
                    # (Line 88) f.SquareShape(cp, 1, "40 + 1n Guardian", f.CosAngle[cp], f.SinAngle[cp]);
                    f.SquareShape(cp, 1, "40 + 1n Guardian", f.CosAngle[cp], f.SinAngle[cp])
                    # (Line 89) f.SquareShape(cp, 1, "60 + 1n Archon", f.CosAngle[cp], f.SinAngle[cp]);
                    f.SquareShape(cp, 1, "60 + 1n Archon", f.CosAngle[cp], f.SinAngle[cp])
                    # (Line 90) }
                    # (Line 91) else if (f.loop[cp] == 4)
                if EUDElseIf()(f.loop[cp] == 4):
                    # (Line 92) {
                    # (Line 93) f.Table_Sin(cp, 22 + 45 * (f.loop[cp] % 4), 100);
                    f.Table_Sin(cp, 22 + 45 * (f.loop[cp] % 4), 100)
                    # (Line 94) f.Table_Cos(cp, 22 + 45 * (f.loop[cp] % 4), 100);
                    f.Table_Cos(cp, 22 + 45 * (f.loop[cp] % 4), 100)
                    # (Line 96) f.SquareShape(cp, 1, "40 + 1n Guardian", f.CosAngle[cp], f.SinAngle[cp]);
                    f.SquareShape(cp, 1, "40 + 1n Guardian", f.CosAngle[cp], f.SinAngle[cp])
                    # (Line 97) f.SquareShape(cp, 1, "60 + 1n Archon", f.CosAngle[cp], f.SinAngle[cp]);
                    f.SquareShape(cp, 1, "60 + 1n Archon", f.CosAngle[cp], f.SinAngle[cp])
                    # (Line 98) }
                    # (Line 99) else if (f.loop[cp] == 6)
                if EUDElseIf()(f.loop[cp] == 6):
                    # (Line 100) {
                    # (Line 101) f.Table_Sin(cp, 22 + 45 * (f.loop[cp] % 4), 150);
                    f.Table_Sin(cp, 22 + 45 * (f.loop[cp] % 4), 150)
                    # (Line 102) f.Table_Cos(cp, 22 + 45 * (f.loop[cp] % 4), 150);
                    f.Table_Cos(cp, 22 + 45 * (f.loop[cp] % 4), 150)
                    # (Line 104) f.SquareShape(cp, 1, "40 + 1n Guardian", f.CosAngle[cp], f.SinAngle[cp]);
                    f.SquareShape(cp, 1, "40 + 1n Guardian", f.CosAngle[cp], f.SinAngle[cp])
                    # (Line 105) f.SquareShape(cp, 1, "60 + 1n Archon", f.CosAngle[cp], f.SinAngle[cp]);
                    f.SquareShape(cp, 1, "60 + 1n Archon", f.CosAngle[cp], f.SinAngle[cp])
                    # (Line 106) }
                    # (Line 108) if (f.loop[cp] % 2 == 0)
                EUDEndIf()
                if EUDIf()(f.loop[cp] % 2 == 0):
                    # (Line 109) {
                    # (Line 110) KillUnitAt(All, " Creep. Dunkelheit", "Anywhere", cp);
                    # (Line 112) f.LineShape(cp, 1, " Creep. Dunkelheit", 45, 5, 75, f.loop[cp] * 25);
                    DoActions(KillUnitAt(All, " Creep. Dunkelheit", "Anywhere", cp))
                    f.LineShape(cp, 1, " Creep. Dunkelheit", 45, 5, 75, f.loop[cp] * 25)
                    # (Line 113) f.LineShape(cp, 1, " Creep. Dunkelheit", 225, 5, 75, f.loop[cp] * 25);
                    f.LineShape(cp, 1, " Creep. Dunkelheit", 225, 5, 75, f.loop[cp] * 25)
                    # (Line 114) f.LineShape(cp, 8, "Vulture Spider Mine", 45, 5, 75, f.loop[cp] * 25);
                    f.LineShape(cp, 8, "Vulture Spider Mine", 45, 5, 75, f.loop[cp] * 25)
                    # (Line 115) f.LineShape(cp, 8, "Vulture Spider Mine", 225, 5, 75, f.loop[cp] * 25);
                    f.LineShape(cp, 8, "Vulture Spider Mine", 225, 5, 75, f.loop[cp] * 25)
                    # (Line 116) f.LineShape(cp, 1, "40 + 1n Wraith", 45, 7, 50, f.loop[cp] * 25);
                    f.LineShape(cp, 1, "40 + 1n Wraith", 45, 7, 50, f.loop[cp] * 25)
                    # (Line 117) f.LineShape(cp, 1, "40 + 1n Wraith", 225, 7, 50, f.loop[cp] * 25);
                    f.LineShape(cp, 1, "40 + 1n Wraith", 225, 7, 50, f.loop[cp] * 25)
                    # (Line 118) }
                    # (Line 120) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                EUDEndIf()
                # (Line 121) MoveUnit(All, " Creep. Dunkelheit", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 122) Order(" Creep. Dunkelheit", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveUnit(All, " Creep. Dunkelheit", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                # (Line 124) f.SquareShape(cp, 1, " Unit. Hoffnung 25000", 160 - 40 * f.loop[cp], 160);
                DoActions(Order(" Creep. Dunkelheit", cp, "Anywhere", Attack, f.location[cp]))
                f.SquareShape(cp, 1, " Unit. Hoffnung 25000", 160 - 40 * f.loop[cp], 160)
                # (Line 126) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp);
                # (Line 127) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp);
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp))
                # (Line 128) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp))
                # (Line 129) KillUnitAt(All, "Vulture Spider Mine", "Anywhere", cp);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp))
                # (Line 130) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", cp);
                DoActions(KillUnitAt(All, "Vulture Spider Mine", "Anywhere", cp))
                # (Line 131) KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp);
                DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", cp))
                # (Line 132) RemoveUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp))
                # (Line 134) f.SkillWait(cp, 80);
                DoActions(RemoveUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp))
                f.SkillWait(cp, 80)
                # (Line 136) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 137) }
                # (Line 138) else if (f.loop[cp] == 8)
            if EUDElseIf()(f.loop[cp] == 8):
                # (Line 139) {
                # (Line 140) KillUnitAt(All, " Creep. Dunkelheit", "Anywhere", cp);
                # (Line 142) f.Table_Sin(cp, 22, 50);
                DoActions(KillUnitAt(All, " Creep. Dunkelheit", "Anywhere", cp))
                f.Table_Sin(cp, 22, 50)
                # (Line 143) f.Table_Cos(cp, 22, 50);
                f.Table_Cos(cp, 22, 50)
                # (Line 145) f.SquareShape(cp, 1, " Unit. Hoffnung 25000", f.CosAngle[cp], f.SinAngle[cp]);
                f.SquareShape(cp, 1, " Unit. Hoffnung 25000", f.CosAngle[cp], f.SinAngle[cp])
                # (Line 147) f.Table_Sin(cp, 67, 100);
                f.Table_Sin(cp, 67, 100)
                # (Line 148) f.Table_Cos(cp, 67, 100);
                f.Table_Cos(cp, 67, 100)
                # (Line 150) f.SquareShape(cp, 1, " Unit. Hoffnung 25000", f.CosAngle[cp], f.SinAngle[cp]);
                f.SquareShape(cp, 1, " Unit. Hoffnung 25000", f.CosAngle[cp], f.SinAngle[cp])
                # (Line 151) f.SquareShape(cp, 1, "40 + 1n Drone", f.CosAngle[cp], f.SinAngle[cp]);
                f.SquareShape(cp, 1, "40 + 1n Drone", f.CosAngle[cp], f.SinAngle[cp])
                # (Line 153) f.Table_Sin(cp, 22, 100);
                f.Table_Sin(cp, 22, 100)
                # (Line 154) f.Table_Cos(cp, 22, 100);
                f.Table_Cos(cp, 22, 100)
                # (Line 156) f.SquareShape(cp, 1, " Unit. Hoffnung 25000", f.CosAngle[cp], f.SinAngle[cp]);
                f.SquareShape(cp, 1, " Unit. Hoffnung 25000", f.CosAngle[cp], f.SinAngle[cp])
                # (Line 158) f.Table_Sin(cp, 67, 150);
                f.Table_Sin(cp, 67, 150)
                # (Line 159) f.Table_Cos(cp, 67, 150);
                f.Table_Cos(cp, 67, 150)
                # (Line 161) f.SquareShape(cp, 1, " Unit. Hoffnung 25000", f.CosAngle[cp], f.SinAngle[cp]);
                f.SquareShape(cp, 1, " Unit. Hoffnung 25000", f.CosAngle[cp], f.SinAngle[cp])
                # (Line 162) f.SquareShape(cp, 1, "40 + 1n Drone", f.CosAngle[cp], f.SinAngle[cp]);
                f.SquareShape(cp, 1, "40 + 1n Drone", f.CosAngle[cp], f.SinAngle[cp])
                # (Line 164) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp);
                # (Line 166) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp))
                # (Line 167) MoveUnit(All, "40 + 1n Drone", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 168) Order("40 + 1n Drone", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveUnit(All, "40 + 1n Drone", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                # (Line 170) f.SkillWait(cp, 560);
                DoActions(Order("40 + 1n Drone", cp, "Anywhere", Attack, f.location[cp]))
                f.SkillWait(cp, 560)
                # (Line 172) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 173) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 174) }
                # (Line 175) }
            EUDEndIf()
            # (Line 176) else if (f.count[cp] == 2)
        if EUDElseIf()(f.count[cp] == 2):
            # (Line 177) {
            # (Line 178) if (f.loop[cp] < 3)
            if EUDIf()(f.loop[cp] >= 3, neg=True):
                # (Line 179) {
                # (Line 180) SetDeaths(cp, SetTo, 1, " `ShieldRecharge");
                # (Line 182) var x = 50 + 50 * f.loop[cp];
                DoActions(SetDeaths(cp, SetTo, 1, " `ShieldRecharge"))
                x = EUDVariable()
                x << (50 + 50 * f.loop[cp])
                # (Line 183) var y = 50 + 50 * f.loop[cp];
                y = EUDVariable()
                y << (50 + 50 * f.loop[cp])
                # (Line 184) var interval = 50 + 10 * f.loop[cp];
                interval = EUDVariable()
                interval << (50 + 10 * f.loop[cp])
                # (Line 186) f.DoubleShape(cp, 1, " Unit. Hoffnung 25000", x, y);
                f.DoubleShape(cp, 1, " Unit. Hoffnung 25000", x, y)
                # (Line 187) f.DoubleShape(cp, 1, " Unit. Hoffnung 25000", x - interval, y);
                f.DoubleShape(cp, 1, " Unit. Hoffnung 25000", x - interval, y)
                # (Line 188) f.DoubleShape(cp, 1, " Unit. Hoffnung 25000", x, y - interval);
                f.DoubleShape(cp, 1, " Unit. Hoffnung 25000", x, y - interval)
                # (Line 190) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp);
                # (Line 192) f.SkillWait(cp, 80);
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp))
                f.SkillWait(cp, 80)
                # (Line 194) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 195) }
                # (Line 196) else if (f.loop[cp] == 3)
            if EUDElseIf()(f.loop[cp] == 3):
                # (Line 197) {
                # (Line 198) var x = 150;
                x = EUDVariable()
                x << (150)
                # (Line 199) var y = 150;
                y = EUDVariable()
                y << (150)
                # (Line 200) var interval = 70;
                interval = EUDVariable()
                interval << (70)
                # (Line 202) f.DoubleShape(cp, 1, "40 + 1n Guardian", x, y);
                f.DoubleShape(cp, 1, "40 + 1n Guardian", x, y)
                # (Line 203) f.DoubleShape(cp, 1, "40 + 1n Guardian", x - interval, y);
                f.DoubleShape(cp, 1, "40 + 1n Guardian", x - interval, y)
                # (Line 204) f.DoubleShape(cp, 1, "40 + 1n Guardian", x, y - interval);
                f.DoubleShape(cp, 1, "40 + 1n Guardian", x, y - interval)
                # (Line 205) f.DoubleShape(cp, 1, "Protoss Dark Archon", x, y);
                f.DoubleShape(cp, 1, "Protoss Dark Archon", x, y)
                # (Line 206) f.DoubleShape(cp, 1, "Protoss Dark Archon", x - interval, y);
                f.DoubleShape(cp, 1, "Protoss Dark Archon", x - interval, y)
                # (Line 207) f.DoubleShape(cp, 1, "Protoss Dark Archon", x, y - interval);
                f.DoubleShape(cp, 1, "Protoss Dark Archon", x, y - interval)
                # (Line 209) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp);
                # (Line 210) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp))
                # (Line 212) f.SkillWait(cp, 80);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp))
                f.SkillWait(cp, 80)
                # (Line 214) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 215) }
                # (Line 216) else if (f.loop[cp] == 4)
            if EUDElseIf()(f.loop[cp] == 4):
                # (Line 217) {
                # (Line 218) var x = 150;
                x = EUDVariable()
                x << (150)
                # (Line 219) var y = 150;
                y = EUDVariable()
                y << (150)
                # (Line 220) var interval = 70;
                interval = EUDVariable()
                interval << (70)
                # (Line 222) f.DoubleShape(cp, 1, "40 + 1n Wraith", x, y);
                f.DoubleShape(cp, 1, "40 + 1n Wraith", x, y)
                # (Line 223) f.DoubleShape(cp, 1, "40 + 1n Wraith", x - interval, y);
                f.DoubleShape(cp, 1, "40 + 1n Wraith", x - interval, y)
                # (Line 224) f.DoubleShape(cp, 1, "40 + 1n Wraith", x, y - interval);
                f.DoubleShape(cp, 1, "40 + 1n Wraith", x, y - interval)
                # (Line 225) f.DoubleShape(cp, 1, "40 + 1n Ghost", x, y);
                f.DoubleShape(cp, 1, "40 + 1n Ghost", x, y)
                # (Line 226) f.DoubleShape(cp, 1, "40 + 1n Ghost", x - interval, y);
                f.DoubleShape(cp, 1, "40 + 1n Ghost", x - interval, y)
                # (Line 227) f.DoubleShape(cp, 1, "40 + 1n Ghost", x, y - interval);
                f.DoubleShape(cp, 1, "40 + 1n Ghost", x, y - interval)
                # (Line 229) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                # (Line 230) MoveUnit(All, "40 + 1n Ghost", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 231) Order("40 + 1n Ghost", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveUnit(All, "40 + 1n Ghost", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                # (Line 232) Order("40 + 1n Wraith", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(Order("40 + 1n Ghost", cp, "Anywhere", Attack, f.location[cp]))
                # (Line 234) f.SkillWait(cp, 160);
                DoActions(Order("40 + 1n Wraith", cp, "Anywhere", Attack, f.location[cp]))
                f.SkillWait(cp, 160)
                # (Line 236) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 237) }
                # (Line 239) else if (f.loop[cp] < 8)
            if EUDElseIf()(f.loop[cp] >= 8, neg=True):
                # (Line 240) {
                # (Line 241) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", cp);
                # (Line 243) var x = -50 - 50 * (f.loop[cp] - 5);
                DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", cp))
                x = EUDVariable()
                x << (-50 - 50 * (f.loop[cp] - 5))
                # (Line 244) var y = 50 + 50 * (f.loop[cp] - 5);
                y = EUDVariable()
                y << (50 + 50 * (f.loop[cp] - 5))
                # (Line 245) var interval = 50 + 10 * (f.loop[cp] - 5);
                interval = EUDVariable()
                interval << (50 + 10 * (f.loop[cp] - 5))
                # (Line 247) f.DoubleShape(cp, 1, " Unit. Hoffnung 25000", x, y);
                f.DoubleShape(cp, 1, " Unit. Hoffnung 25000", x, y)
                # (Line 248) f.DoubleShape(cp, 1, " Unit. Hoffnung 25000", x + interval, y);
                f.DoubleShape(cp, 1, " Unit. Hoffnung 25000", x + interval, y)
                # (Line 249) f.DoubleShape(cp, 1, " Unit. Hoffnung 25000", x, y - interval);
                f.DoubleShape(cp, 1, " Unit. Hoffnung 25000", x, y - interval)
                # (Line 251) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp);
                # (Line 253) f.SkillWait(cp, 80);
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp))
                f.SkillWait(cp, 80)
                # (Line 255) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 256) }
                # (Line 257) else if (f.loop[cp] == 8)
            if EUDElseIf()(f.loop[cp] == 8):
                # (Line 258) {
                # (Line 259) var x = -150;
                x = EUDVariable()
                x << (-150)
                # (Line 260) var y = 150;
                y = EUDVariable()
                y << (150)
                # (Line 261) var interval = 70;
                interval = EUDVariable()
                interval << (70)
                # (Line 263) f.DoubleShape(cp, 1, "40 + 1n Guardian", x, y);
                f.DoubleShape(cp, 1, "40 + 1n Guardian", x, y)
                # (Line 264) f.DoubleShape(cp, 1, "40 + 1n Guardian", x + interval, y);
                f.DoubleShape(cp, 1, "40 + 1n Guardian", x + interval, y)
                # (Line 265) f.DoubleShape(cp, 1, "40 + 1n Guardian", x, y - interval);
                f.DoubleShape(cp, 1, "40 + 1n Guardian", x, y - interval)
                # (Line 266) f.DoubleShape(cp, 1, "Protoss Dark Archon", x, y);
                f.DoubleShape(cp, 1, "Protoss Dark Archon", x, y)
                # (Line 267) f.DoubleShape(cp, 1, "Protoss Dark Archon", x + interval, y);
                f.DoubleShape(cp, 1, "Protoss Dark Archon", x + interval, y)
                # (Line 268) f.DoubleShape(cp, 1, "Protoss Dark Archon", x, y - interval);
                f.DoubleShape(cp, 1, "Protoss Dark Archon", x, y - interval)
                # (Line 270) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp);
                # (Line 271) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp))
                # (Line 273) f.SkillWait(cp, 80);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp))
                f.SkillWait(cp, 80)
                # (Line 275) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 276) }
                # (Line 277) else if (f.loop[cp] == 9)
            if EUDElseIf()(f.loop[cp] == 9):
                # (Line 278) {
                # (Line 279) var x = -150;
                x = EUDVariable()
                x << (-150)
                # (Line 280) var y = 150;
                y = EUDVariable()
                y << (150)
                # (Line 281) var interval = 70;
                interval = EUDVariable()
                interval << (70)
                # (Line 283) f.DoubleShape(cp, 1, "40 + 1n Wraith", x, y);
                f.DoubleShape(cp, 1, "40 + 1n Wraith", x, y)
                # (Line 284) f.DoubleShape(cp, 1, "40 + 1n Wraith", x + interval, y);
                f.DoubleShape(cp, 1, "40 + 1n Wraith", x + interval, y)
                # (Line 285) f.DoubleShape(cp, 1, "40 + 1n Wraith", x, y - interval);
                f.DoubleShape(cp, 1, "40 + 1n Wraith", x, y - interval)
                # (Line 286) f.DoubleShape(cp, 1, "40 + 1n Ghost", x, y);
                f.DoubleShape(cp, 1, "40 + 1n Ghost", x, y)
                # (Line 287) f.DoubleShape(cp, 1, "40 + 1n Ghost", x + interval, y);
                f.DoubleShape(cp, 1, "40 + 1n Ghost", x + interval, y)
                # (Line 288) f.DoubleShape(cp, 1, "40 + 1n Ghost", x, y - interval);
                f.DoubleShape(cp, 1, "40 + 1n Ghost", x, y - interval)
                # (Line 290) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                # (Line 291) MoveUnit(All, "40 + 1n Ghost", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 292) Order("40 + 1n Ghost", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveUnit(All, "40 + 1n Ghost", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                # (Line 293) Order("40 + 1n Wraith", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(Order("40 + 1n Ghost", cp, "Anywhere", Attack, f.location[cp]))
                # (Line 295) f.SkillWait(cp, 160);
                DoActions(Order("40 + 1n Wraith", cp, "Anywhere", Attack, f.location[cp]))
                f.SkillWait(cp, 160)
                # (Line 297) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 298) }
                # (Line 299) else if (f.loop[cp] == 10)
            if EUDElseIf()(f.loop[cp] == 10):
                # (Line 300) {
                # (Line 301) f.SkillWait(cp, 80);
                f.SkillWait(cp, 80)
                # (Line 303) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 304) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 305) }
                # (Line 306) }
            EUDEndIf()
            # (Line 307) else if (f.count[cp] == 3)
        if EUDElseIf()(f.count[cp] == 3):
            # (Line 308) {
            # (Line 309) if (f.loop[cp] < 4)
            if EUDIf()(f.loop[cp] >= 4, neg=True):
                # (Line 310) {
                # (Line 311) RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", cp);
                # (Line 313) f.LineShape(cp, 1, "40 + 1n Wraith", 45 + 45 * f.loop[cp], 7, 50, 0);
                DoActions(RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", cp))
                f.LineShape(cp, 1, "40 + 1n Wraith", 45 + 45 * f.loop[cp], 7, 50, 0)
                # (Line 314) f.LineShape(cp, 1, "Protoss Dark Archon", 45 + 45 * f.loop[cp], 7, 50, 0);
                f.LineShape(cp, 1, "Protoss Dark Archon", 45 + 45 * f.loop[cp], 7, 50, 0)
                # (Line 316) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                # (Line 317) Order("40 + 1n Wraith", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 319) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp);
                DoActions(Order("40 + 1n Wraith", cp, "Anywhere", Attack, f.location[cp]))
                # (Line 321) f.SkillWait(cp, 160);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp))
                f.SkillWait(cp, 160)
                # (Line 323) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 324) }
                # (Line 325) else if (f.loop[cp] < 7)
            if EUDElseIf()(f.loop[cp] >= 7, neg=True):
                # (Line 326) {
                # (Line 327) RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", cp);
                # (Line 329) f.LineShape(cp, 1, "40 + 1n Wraith", 45, 7, 50, 0);
                DoActions(RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", cp))
                f.LineShape(cp, 1, "40 + 1n Wraith", 45, 7, 50, 0)
                # (Line 330) f.LineShape(cp, 1, "Protoss Dark Archon", 45, 7, 50, 0);
                f.LineShape(cp, 1, "Protoss Dark Archon", 45, 7, 50, 0)
                # (Line 331) f.LineShape(cp, 1, "40 + 1n Wraith", 90, 7, 50, 0);
                f.LineShape(cp, 1, "40 + 1n Wraith", 90, 7, 50, 0)
                # (Line 332) f.LineShape(cp, 1, "Protoss Dark Archon", 90, 7, 50, 0);
                f.LineShape(cp, 1, "Protoss Dark Archon", 90, 7, 50, 0)
                # (Line 333) f.LineShape(cp, 1, "40 + 1n Wraith", 135, 7, 50, 0);
                f.LineShape(cp, 1, "40 + 1n Wraith", 135, 7, 50, 0)
                # (Line 334) f.LineShape(cp, 1, "Protoss Dark Archon", 135, 7, 50, 0);
                f.LineShape(cp, 1, "Protoss Dark Archon", 135, 7, 50, 0)
                # (Line 335) f.LineShape(cp, 1, "40 + 1n Wraith", 0, 7, 50, 0);
                f.LineShape(cp, 1, "40 + 1n Wraith", 0, 7, 50, 0)
                # (Line 336) f.LineShape(cp, 1, "Protoss Dark Archon", 0, 7, 50, 0);
                f.LineShape(cp, 1, "Protoss Dark Archon", 0, 7, 50, 0)
                # (Line 337) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", cp);
                # (Line 338) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp);
                DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", cp))
                # (Line 340) f.SkillWait(cp, 80);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp))
                f.SkillWait(cp, 80)
                # (Line 342) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 343) }
                # (Line 344) else if (f.loop[cp] == 7)
            if EUDElseIf()(f.loop[cp] == 7):
                # (Line 345) {
                # (Line 346) f.SkillWait(cp, 80);
                f.SkillWait(cp, 80)
                # (Line 348) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 349) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 350) }
                # (Line 351) }
            EUDEndIf()
            # (Line 352) else if (f.count[cp] == 4)
        if EUDElseIf()(f.count[cp] == 4):
            # (Line 353) {
            # (Line 354) if (f.loop[cp] == 0)
            if EUDIf()(f.loop[cp] == 0):
                # (Line 355) {
                # (Line 356) f.EdgeShape(cp, 1, "40 + 1n Guardian", 0, 3, 50);
                f.EdgeShape(cp, 1, "40 + 1n Guardian", 0, 3, 50)
                # (Line 357) f.EdgeShape(cp, 1, "Protoss Dark Archon", 0, 3, 50);
                f.EdgeShape(cp, 1, "Protoss Dark Archon", 0, 3, 50)
                # (Line 359) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp);
                # (Line 360) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp))
                # (Line 362) f.SkillWait(cp, 80);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp))
                f.SkillWait(cp, 80)
                # (Line 364) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 365) }
                # (Line 366) else if (f.loop[cp] == 1)
            if EUDElseIf()(f.loop[cp] == 1):
                # (Line 367) {
                # (Line 368) f.EdgeShape(cp, 1, "40 + 1n Guardian", 0, 5, 100);
                f.EdgeShape(cp, 1, "40 + 1n Guardian", 0, 5, 100)
                # (Line 369) f.EdgeShape(cp, 1, "Protoss Dark Archon", 0, 5, 100);
                f.EdgeShape(cp, 1, "Protoss Dark Archon", 0, 5, 100)
                # (Line 371) f.EdgeShape(cp, 1, "40 + 1n Ghost", 0, 5, 100);
                f.EdgeShape(cp, 1, "40 + 1n Ghost", 0, 5, 100)
                # (Line 373) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                # (Line 374) MoveUnit(All, "40 + 1n Ghost", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 375) Order("40 + 1n Ghost", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveUnit(All, "40 + 1n Ghost", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                # (Line 377) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp);
                DoActions(Order("40 + 1n Ghost", cp, "Anywhere", Attack, f.location[cp]))
                # (Line 378) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp))
                # (Line 380) f.SkillWait(cp, 80);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp))
                f.SkillWait(cp, 80)
                # (Line 382) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 383) }
                # (Line 384) else if (f.loop[cp] == 2)
            if EUDElseIf()(f.loop[cp] == 2):
                # (Line 385) {
                # (Line 386) f.EdgeShape(cp, 1, "50 + 1n Battlecruiser", 0, 5, 100);
                f.EdgeShape(cp, 1, "50 + 1n Battlecruiser", 0, 5, 100)
                # (Line 387) f.EdgeShape(cp, 1, "50 + 1n Tank", 0, 5, 100);
                f.EdgeShape(cp, 1, "50 + 1n Tank", 0, 5, 100)
                # (Line 389) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp);
                # (Line 390) KillUnitAt(All, "50 + 1n Tank", "Anywhere", cp);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp))
                # (Line 392) f.SkillWait(cp, 80);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", cp))
                f.SkillWait(cp, 80)
                # (Line 394) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 395) }
                # (Line 396) else if (f.loop[cp] == 3)
            if EUDElseIf()(f.loop[cp] == 3):
                # (Line 397) {
                # (Line 398) f.EdgeShape(cp, 1, "Kakaru (Twilight)", 0, 3, 50);
                f.EdgeShape(cp, 1, "Kakaru (Twilight)", 0, 3, 50)
                # (Line 400) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", cp);
                # (Line 402) f.SkillWait(cp, 80);
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", cp))
                f.SkillWait(cp, 80)
                # (Line 404) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 405) }
                # (Line 406) else if (f.loop[cp] == 4)
            if EUDElseIf()(f.loop[cp] == 4):
                # (Line 407) {
                # (Line 408) KillUnitAt(All, "40 + 1n Ghost", "Anywhere", cp);
                # (Line 409) KillUnitAt(All, "40 + 1n Drone", "Anywhere", cp);
                DoActions(KillUnitAt(All, "40 + 1n Ghost", "Anywhere", cp))
                # (Line 411) f.SkillWait(cp, 80);
                DoActions(KillUnitAt(All, "40 + 1n Drone", "Anywhere", cp))
                f.SkillWait(cp, 80)
                # (Line 413) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 414) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 415) }
                # (Line 416) }
            EUDEndIf()
            # (Line 417) else if (f.count[cp] == 5)
        if EUDElseIf()(f.count[cp] == 5):
            # (Line 418) {
            # (Line 419) SetDeaths(cp, SetTo, 0, " `ShieldRecharge");
            # (Line 421) if (Bring(cp, AtLeast, 1, "Protoss Carrier", "[Skill]UseSkill") &&
            DoActions(SetDeaths(cp, SetTo, 0, " `ShieldRecharge"))
            _t36 = EUDIf()
            # (Line 422) Bring(cp, AtLeast, 1, "Protoss Arbiter", "[Skill]UseSkill") && f.step[cp] == 210)
            if _t36(EUDSCAnd()(Bring(cp, AtLeast, 1, "Protoss Carrier", "[Skill]UseSkill"))(Bring(cp, AtLeast, 1, "Protoss Arbiter", "[Skill]UseSkill"))(f.step[cp] == 210)()):
                # (Line 423) {
                # (Line 424) f.Voice_Routine(cp, 4);
                f.Voice_Routine(cp, 4)
                # (Line 425) f.wait[cp] = 0;
                _ARRW(f.wait, cp) << (0)
                # (Line 426) f.count[cp] = 0;
                _ARRW(f.count, cp) << (0)
                # (Line 427) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 428) f.step[cp] = 220;
                _ARRW(f.step, cp) << (220)
                # (Line 429) KillUnitAt(1, "Protoss Arbiter", "[Skill]UseSkill", cp);
                # (Line 430) KillUnitAt(1, "Protoss Carrier", "[Skill]UseSkill", cp);
                DoActions(KillUnitAt(1, "Protoss Arbiter", "[Skill]UseSkill", cp))
                # (Line 431) }
                DoActions(KillUnitAt(1, "Protoss Carrier", "[Skill]UseSkill", cp))
                # (Line 432) else {
            if EUDElse()():
                # (Line 433) f.SkillEnd(cp);
                f.SkillEnd(cp)
                # (Line 434) }
                # (Line 436) }
            EUDEndIf()
            # (Line 437) }
        EUDEndIf()
        # (Line 438) }
    EUDEndIf()
