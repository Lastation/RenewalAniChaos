## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import PluginVariables as msqcvar;
import PluginVariables as msqcvar
# (Line 2) import Function as f;
import Function as f
# (Line 4) function main(cp)
# (Line 5) {
@EUDFunc
def f_main(cp):
    # (Line 6) ModifyUnitShields(All, f.heroID[cp], cp, "Anywhere", 1);
    # (Line 8) if (f.delay[cp] == 0)
    DoActions(ModifyUnitShields(All, f.heroID[cp], cp, "Anywhere", 1))
    if EUDIf()(f.delay[cp] == 0):
        # (Line 9) {
        # (Line 10) if (f.count[cp] == 0)
        if EUDIf()(f.count[cp] == 0):
            # (Line 11) {
            # (Line 12) if (f.loop[cp] < 8)
            if EUDIf()(f.loop[cp] >= 8, neg=True):
                # (Line 13) {
                # (Line 14) if (f.loop[cp] == 0)
                if EUDIf()(f.loop[cp] == 0):
                    # (Line 15) {
                    # (Line 16) f.Table_Sin(cp, 22, 50);
                    f.Table_Sin(cp, 22, 50)
                    # (Line 17) f.Table_Cos(cp, 22, 50);
                    f.Table_Cos(cp, 22, 50)
                    # (Line 19) f.SquareShape(cp, 1, "40 + 1n Wraith", f.CosAngle[cp], f.SinAngle[cp]);
                    f.SquareShape(cp, 1, "40 + 1n Wraith", f.CosAngle[cp], f.SinAngle[cp])
                    # (Line 20) f.SquareShape(cp, 1, "40 + 1n Zealot", f.CosAngle[cp], f.SinAngle[cp]);
                    f.SquareShape(cp, 1, "40 + 1n Zealot", f.CosAngle[cp], f.SinAngle[cp])
                    # (Line 22) f.Table_Sin(cp, 67, 100);
                    f.Table_Sin(cp, 67, 100)
                    # (Line 23) f.Table_Cos(cp, 67, 100);
                    f.Table_Cos(cp, 67, 100)
                    # (Line 25) f.SquareShape(cp, 1, "40 + 1n Wraith", f.CosAngle[cp], f.SinAngle[cp]);
                    f.SquareShape(cp, 1, "40 + 1n Wraith", f.CosAngle[cp], f.SinAngle[cp])
                    # (Line 26) f.SquareShape(cp, 1, "40 + 1n Zealot", f.CosAngle[cp], f.SinAngle[cp]);
                    f.SquareShape(cp, 1, "40 + 1n Zealot", f.CosAngle[cp], f.SinAngle[cp])
                    # (Line 28) }
                    # (Line 29) else if (f.loop[cp] == 2)
                if EUDElseIf()(f.loop[cp] == 2):
                    # (Line 30) {
                    # (Line 31) RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", cp);
                    # (Line 33) f.Table_Sin(cp, 22, 100);
                    DoActions(RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", cp))
                    f.Table_Sin(cp, 22, 100)
                    # (Line 34) f.Table_Cos(cp, 22, 100);
                    f.Table_Cos(cp, 22, 100)
                    # (Line 36) f.SquareShape(cp, 1, "40 + 1n Wraith", f.CosAngle[cp], f.SinAngle[cp]);
                    f.SquareShape(cp, 1, "40 + 1n Wraith", f.CosAngle[cp], f.SinAngle[cp])
                    # (Line 37) f.SquareShape(cp, 1, "40 + 1n Zealot", f.CosAngle[cp], f.SinAngle[cp]);
                    f.SquareShape(cp, 1, "40 + 1n Zealot", f.CosAngle[cp], f.SinAngle[cp])
                    # (Line 39) f.Table_Sin(cp, 67, 150);
                    f.Table_Sin(cp, 67, 150)
                    # (Line 40) f.Table_Cos(cp, 67, 150);
                    f.Table_Cos(cp, 67, 150)
                    # (Line 42) f.SquareShape(cp, 1, "40 + 1n Wraith", f.CosAngle[cp], f.SinAngle[cp]);
                    f.SquareShape(cp, 1, "40 + 1n Wraith", f.CosAngle[cp], f.SinAngle[cp])
                    # (Line 43) f.SquareShape(cp, 1, "40 + 1n Zealot", f.CosAngle[cp], f.SinAngle[cp]);
                    f.SquareShape(cp, 1, "40 + 1n Zealot", f.CosAngle[cp], f.SinAngle[cp])
                    # (Line 44) }
                    # (Line 45) else if (f.loop[cp] == 4)
                if EUDElseIf()(f.loop[cp] == 4):
                    # (Line 46) {
                    # (Line 47) RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", cp);
                    # (Line 49) f.Table_Sin(cp, 22, 50);
                    DoActions(RemoveUnitAt(All, "40 + 1n Wraith", "Anywhere", cp))
                    f.Table_Sin(cp, 22, 50)
                    # (Line 50) f.Table_Cos(cp, 22, 50);
                    f.Table_Cos(cp, 22, 50)
                    # (Line 52) f.SquareShape(cp, 1, " Unit. Hoffnung 25000", f.CosAngle[cp], f.SinAngle[cp]);
                    f.SquareShape(cp, 1, " Unit. Hoffnung 25000", f.CosAngle[cp], f.SinAngle[cp])
                    # (Line 53) f.SquareShape(cp, 1, "Kakaru (Twilight)", f.CosAngle[cp], f.SinAngle[cp]);
                    f.SquareShape(cp, 1, "Kakaru (Twilight)", f.CosAngle[cp], f.SinAngle[cp])
                    # (Line 55) f.Table_Sin(cp, 67, 100);
                    f.Table_Sin(cp, 67, 100)
                    # (Line 56) f.Table_Cos(cp, 67, 100);
                    f.Table_Cos(cp, 67, 100)
                    # (Line 58) f.SquareShape(cp, 1, " Unit. Hoffnung 25000", f.CosAngle[cp], f.SinAngle[cp]);
                    f.SquareShape(cp, 1, " Unit. Hoffnung 25000", f.CosAngle[cp], f.SinAngle[cp])
                    # (Line 59) f.SquareShape(cp, 1, "Kakaru (Twilight)", f.CosAngle[cp], f.SinAngle[cp]);
                    f.SquareShape(cp, 1, "Kakaru (Twilight)", f.CosAngle[cp], f.SinAngle[cp])
                    # (Line 61) f.Table_Sin(cp, 22, 100);
                    f.Table_Sin(cp, 22, 100)
                    # (Line 62) f.Table_Cos(cp, 22, 100);
                    f.Table_Cos(cp, 22, 100)
                    # (Line 64) f.SquareShape(cp, 1, " Unit. Hoffnung 25000", f.CosAngle[cp], f.SinAngle[cp]);
                    f.SquareShape(cp, 1, " Unit. Hoffnung 25000", f.CosAngle[cp], f.SinAngle[cp])
                    # (Line 65) f.SquareShape(cp, 1, "Kakaru (Twilight)", f.CosAngle[cp], f.SinAngle[cp]);
                    f.SquareShape(cp, 1, "Kakaru (Twilight)", f.CosAngle[cp], f.SinAngle[cp])
                    # (Line 67) f.Table_Sin(cp, 67, 150);
                    f.Table_Sin(cp, 67, 150)
                    # (Line 68) f.Table_Cos(cp, 67, 150);
                    f.Table_Cos(cp, 67, 150)
                    # (Line 70) f.SquareShape(cp, 1, " Unit. Hoffnung 25000", f.CosAngle[cp], f.SinAngle[cp]);
                    f.SquareShape(cp, 1, " Unit. Hoffnung 25000", f.CosAngle[cp], f.SinAngle[cp])
                    # (Line 71) f.SquareShape(cp, 1, "Kakaru (Twilight)", f.CosAngle[cp], f.SinAngle[cp]);
                    f.SquareShape(cp, 1, "Kakaru (Twilight)", f.CosAngle[cp], f.SinAngle[cp])
                    # (Line 73) f.Table_Sin(cp, 22, 150);
                    f.Table_Sin(cp, 22, 150)
                    # (Line 74) f.Table_Cos(cp, 22, 150);
                    f.Table_Cos(cp, 22, 150)
                    # (Line 76) f.SquareShape(cp, 1, " Unit. Hoffnung 25000", f.CosAngle[cp], f.SinAngle[cp]);
                    f.SquareShape(cp, 1, " Unit. Hoffnung 25000", f.CosAngle[cp], f.SinAngle[cp])
                    # (Line 77) f.SquareShape(cp, 1, "Kakaru (Twilight)", f.CosAngle[cp], f.SinAngle[cp]);
                    f.SquareShape(cp, 1, "Kakaru (Twilight)", f.CosAngle[cp], f.SinAngle[cp])
                    # (Line 79) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp);
                    # (Line 80) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", cp);
                    DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp))
                    # (Line 81) }
                    DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", cp))
                    # (Line 83) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                EUDEndIf()
                # (Line 84) Order("40 + 1n Wraith", cp, "Anywhere", Attack, "Anywhere");
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 86) f.SquareShape(cp, 1, "40 + 1n Guardian", 160 - 40 * f.loop[cp], 160);
                DoActions(Order("40 + 1n Wraith", cp, "Anywhere", Attack, "Anywhere"))
                f.SquareShape(cp, 1, "40 + 1n Guardian", 160 - 40 * f.loop[cp], 160)
                # (Line 87) f.SquareShape(cp, 1, "60 + 1n Archon", 160 - 40 * f.loop[cp], 160);
                f.SquareShape(cp, 1, "60 + 1n Archon", 160 - 40 * f.loop[cp], 160)
                # (Line 89) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp);
                # (Line 90) KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp))
                # (Line 91) KillUnitAt(All, "40 + 1n Zealot", "Anywhere", cp);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp))
                # (Line 94) f.SkillWait(cp, 80);
                DoActions(KillUnitAt(All, "40 + 1n Zealot", "Anywhere", cp))
                f.SkillWait(cp, 80)
                # (Line 96) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 97) }
                # (Line 98) else if (f.loop[cp] == 8)
            if EUDElseIf()(f.loop[cp] == 8):
                # (Line 99) {
                # (Line 100) f.EdgeShape(cp, 1, "40 + 1n Ghost", 0, 3, 160);
                f.EdgeShape(cp, 1, "40 + 1n Ghost", 0, 3, 160)
                # (Line 102) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                # (Line 103) MoveUnit(All, "40 + 1n Ghost", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 104) Order("40 + 1n Ghost", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveUnit(All, "40 + 1n Ghost", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                # (Line 106) f.EdgeShape(cp, 1, "40 + 1n Guardian", 45, 7, 160);
                DoActions(Order("40 + 1n Ghost", cp, "Anywhere", Attack, f.location[cp]))
                f.EdgeShape(cp, 1, "40 + 1n Guardian", 45, 7, 160)
                # (Line 107) f.EdgeShape(cp, 1, "60 + 1n Archon", 45, 7, 160);
                f.EdgeShape(cp, 1, "60 + 1n Archon", 45, 7, 160)
                # (Line 108) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp);
                # (Line 109) KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp))
                # (Line 111) f.SkillWait(cp, 80);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp))
                f.SkillWait(cp, 80)
                # (Line 113) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 114) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 115) }
                # (Line 116) }
            EUDEndIf()
            # (Line 117) else if (f.count[cp] == 1)
        if EUDElseIf()(f.count[cp] == 1):
            # (Line 118) {
            # (Line 119) if (f.loop[cp] < 3)
            if EUDIf()(f.loop[cp] >= 3, neg=True):
                # (Line 120) {
                # (Line 121) RemoveUnitAt(All, " Creep. Dunkelheit", "Anywhere", cp);
                # (Line 123) f.DotShape(cp, 8, "Bengalaas (Jungle)", 0, 0);
                DoActions(RemoveUnitAt(All, " Creep. Dunkelheit", "Anywhere", cp))
                f.DotShape(cp, 8, "Bengalaas (Jungle)", 0, 0)
                # (Line 124) f.DotShape(cp, 1, "40 + 1n Guardian", 0, 0);
                f.DotShape(cp, 1, "40 + 1n Guardian", 0, 0)
                # (Line 126) KillUnitAt(All, "Bengalaas (Jungle)", "Anywhere", cp);
                # (Line 127) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp);
                DoActions(KillUnitAt(All, "Bengalaas (Jungle)", "Anywhere", cp))
                # (Line 129) f.EdgeShape(cp, 1, "40 + 1n Guardian", 45, 7, 160);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp))
                f.EdgeShape(cp, 1, "40 + 1n Guardian", 45, 7, 160)
                # (Line 130) f.EdgeShape(cp, 1, "60 + 1n Archon", 45, 7, 160);
                f.EdgeShape(cp, 1, "60 + 1n Archon", 45, 7, 160)
                # (Line 132) f.SquareShape(cp, 1, " Creep. Dunkelheit", 80, 80);
                f.SquareShape(cp, 1, " Creep. Dunkelheit", 80, 80)
                # (Line 133) f.SquareShape(cp, 7, "60 + 1n High Templar", 80, 80);
                f.SquareShape(cp, 7, "60 + 1n High Templar", 80, 80)
                # (Line 135) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                # (Line 136) MoveUnit(All, " Creep. Dunkelheit", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 137) Order(" Creep. Dunkelheit", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveUnit(All, " Creep. Dunkelheit", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                # (Line 139) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp);
                DoActions(Order(" Creep. Dunkelheit", cp, "Anywhere", Attack, f.location[cp]))
                # (Line 140) KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp))
                # (Line 141) KillUnitAt(All, "60 + 1n High Templar", "Anywhere", cp);
                DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", cp))
                # (Line 143) f.SkillWait(cp, 160);
                DoActions(KillUnitAt(All, "60 + 1n High Templar", "Anywhere", cp))
                f.SkillWait(cp, 160)
                # (Line 145) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 146) }
                # (Line 147) else if (f.loop[cp] == 3)
            if EUDElseIf()(f.loop[cp] == 3):
                # (Line 148) {
                # (Line 149) RemoveUnitAt(All, " Creep. Dunkelheit", "Anywhere", cp);
                # (Line 150) KillUnitAt(All, "40 + 1n Ghost", "Anywhere", cp);
                DoActions(RemoveUnitAt(All, " Creep. Dunkelheit", "Anywhere", cp))
                # (Line 152) f.EdgeShape(cp, 1, "40 + 1n Wraith", 45, 7, 160);
                DoActions(KillUnitAt(All, "40 + 1n Ghost", "Anywhere", cp))
                f.EdgeShape(cp, 1, "40 + 1n Wraith", 45, 7, 160)
                # (Line 153) f.EdgeShape(cp, 1, " Creep. Dunkelheit", 45, 7, 160);
                f.EdgeShape(cp, 1, " Creep. Dunkelheit", 45, 7, 160)
                # (Line 154) KillUnitAt(All, " Creep. Dunkelheit", "Anywhere", cp);
                # (Line 156) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                DoActions(KillUnitAt(All, " Creep. Dunkelheit", "Anywhere", cp))
                # (Line 157) Order("40 + 1n Wraith", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 159) f.SkillWait(cp, 160);
                DoActions(Order("40 + 1n Wraith", cp, "Anywhere", Attack, f.location[cp]))
                f.SkillWait(cp, 160)
                # (Line 161) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 162) }
                # (Line 164) else if (f.loop[cp] == 4)
            if EUDElseIf()(f.loop[cp] == 4):
                # (Line 165) {
                # (Line 166) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", cp);
                # (Line 167) KillUnitAt(All, " Creep. Dunkelheit", "Anywhere", cp);
                DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", cp))
                # (Line 169) f.EdgeShape(cp, 1, "Kakaru (Twilight)", 45, 7, 160);
                DoActions(KillUnitAt(All, " Creep. Dunkelheit", "Anywhere", cp))
                f.EdgeShape(cp, 1, "Kakaru (Twilight)", 45, 7, 160)
                # (Line 170) f.EdgeShape(cp, 1, " Unit. Hoffnung 25000", 45, 7, 160);
                f.EdgeShape(cp, 1, " Unit. Hoffnung 25000", 45, 7, 160)
                # (Line 171) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp);
                # (Line 172) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", cp);
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp))
                # (Line 174) f.SkillWait(cp, 80);
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", cp))
                f.SkillWait(cp, 80)
                # (Line 176) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 177) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 178) }
                # (Line 179) }
            EUDEndIf()
            # (Line 180) else if (f.count[cp] == 2)
        if EUDElseIf()(f.count[cp] == 2):
            # (Line 181) {
            # (Line 182) f.SkillEnd(cp);
            f.SkillEnd(cp)
            # (Line 183) }
            # (Line 184) }
        EUDEndIf()
        # (Line 185) }
    EUDEndIf()
