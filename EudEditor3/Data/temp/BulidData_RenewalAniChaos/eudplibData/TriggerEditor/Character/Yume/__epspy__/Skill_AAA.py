## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import Function as f;
import Function as f
# (Line 3) function MoveLoc(Unit : TrgUnit, cp : TrgPlayer, x, y);
# (Line 4) function SkillUnit(cp : TrgPlayer, count, Unit : TrgUnit);
# (Line 5) function SquareShapeAt(cp : TrgPlayer, count, Unit : TrgUnit, x, y, distanceX, distanceY);
# (Line 6) function NxNSquareShapeAt(cp : TrgPlayer, count, Unit : TrgUnit, n, interval, distanceX, distanceY);
# (Line 8) var i = 0;
i = EUDCreateVariables(1)
_IGVA([i], lambda: [0])
# (Line 10) function main(cp)
# (Line 11) {
@EUDFunc
def f_main(cp):
    # (Line 12) MoveLocation("26.Yume_Bozo", f.heroID[cp], cp, "Anywhere");
    # (Line 14) if (cp < 3)
    DoActions(MoveLocation("26.Yume_Bozo", f.heroID[cp], cp, "Anywhere"))
    if EUDIf()(cp >= 3, neg=True):
        # (Line 15) {
        # (Line 16) if (Bring(3, AtLeast, 1, f.heroID[3], "26.Yume_Bozo"))
        if EUDIf()(Bring(3, AtLeast, 1, f.heroID[3], "26.Yume_Bozo")):
            # (Line 17) {
            # (Line 18) KillUnitAt(All, "Protoss Observer", "Anywhere", 3);
            # (Line 19) }
            DoActions(KillUnitAt(All, "Protoss Observer", "Anywhere", 3))
            # (Line 20) if (Bring(4, AtLeast, 1, f.heroID[4], "26.Yume_Bozo"))
        EUDEndIf()
        if EUDIf()(Bring(4, AtLeast, 1, f.heroID[4], "26.Yume_Bozo")):
            # (Line 21) {
            # (Line 22) KillUnitAt(All, "Protoss Observer", "Anywhere", 4);
            # (Line 23) }
            DoActions(KillUnitAt(All, "Protoss Observer", "Anywhere", 4))
            # (Line 24) if (Bring(5, AtLeast, 1, f.heroID[5], "26.Yume_Bozo"))
        EUDEndIf()
        if EUDIf()(Bring(5, AtLeast, 1, f.heroID[5], "26.Yume_Bozo")):
            # (Line 25) {
            # (Line 26) KillUnitAt(All, "Protoss Observer", "Anywhere", 5);
            # (Line 27) }
            DoActions(KillUnitAt(All, "Protoss Observer", "Anywhere", 5))
            # (Line 28) }
        EUDEndIf()
        # (Line 29) else if (cp >= 3)
    if EUDElseIf()(cp >= 3):
        # (Line 30) {
        # (Line 31) if (Bring(0, AtLeast, 1, f.heroID[0], "26.Yume_Bozo"))
        if EUDIf()(Bring(0, AtLeast, 1, f.heroID[0], "26.Yume_Bozo")):
            # (Line 32) {
            # (Line 33) KillUnitAt(All, "Protoss Observer", "Anywhere", 0);
            # (Line 34) }
            DoActions(KillUnitAt(All, "Protoss Observer", "Anywhere", 0))
            # (Line 35) if (Bring(1, AtLeast, 1, f.heroID[1], "26.Yume_Bozo"))
        EUDEndIf()
        if EUDIf()(Bring(1, AtLeast, 1, f.heroID[1], "26.Yume_Bozo")):
            # (Line 36) {
            # (Line 37) KillUnitAt(All, "Protoss Observer", "Anywhere", 1);
            # (Line 38) }
            DoActions(KillUnitAt(All, "Protoss Observer", "Anywhere", 1))
            # (Line 39) if (Bring(2, AtLeast, 1, f.heroID[2], "26.Yume_Bozo"))
        EUDEndIf()
        if EUDIf()(Bring(2, AtLeast, 1, f.heroID[2], "26.Yume_Bozo")):
            # (Line 40) {
            # (Line 41) KillUnitAt(All, "Protoss Observer", "Anywhere", 2);
            # (Line 42) }
            DoActions(KillUnitAt(All, "Protoss Observer", "Anywhere", 2))
            # (Line 43) }
        EUDEndIf()
        # (Line 45) if (f.delay[cp] == 0)
    EUDEndIf()
    if EUDIf()(f.delay[cp] == 0):
        # (Line 46) {
        # (Line 47) if (f.count[cp] == 0)
        if EUDIf()(f.count[cp] == 0):
            # (Line 48) {
            # (Line 49) if (f.loop[cp] == 0)
            if EUDIf()(f.loop[cp] == 0):
                # (Line 50) {
                # (Line 51) SetSwitch("ComputerAlliy", Set);
                # (Line 53) SetAllianceStatus(P7, Ally);
                DoActions(SetSwitch("ComputerAlliy", Set))
                # (Line 54) SetAllianceStatus(P8, Ally);
                DoActions(SetAllianceStatus(P7, Ally))
                # (Line 56) f.DotShape(cp, 1, "40 + 1n Gantrithor", 0, 0);
                DoActions(SetAllianceStatus(P8, Ally))
                f.DotShape(cp, 1, "40 + 1n Gantrithor", 0, 0)
                # (Line 57) KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", cp);
                # (Line 59) SetInvincibility(Enable, f.heroID[cp], cp, "Anywhere");
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", cp))
                # (Line 61) f.SkillWait(cp, 560);
                DoActions(SetInvincibility(Enable, f.heroID[cp], cp, "Anywhere"))
                f.SkillWait(cp, 560)
                # (Line 63) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 64) }
                # (Line 65) else if (f.loop[cp] == 1)
            if EUDElseIf()(f.loop[cp] == 1):
                # (Line 66) {
                # (Line 67) MoveLocation("26.Yume_Bozo", f.heroID[cp], cp, "Anywhere");
                # (Line 69) i = 0;
                DoActions(MoveLocation("26.Yume_Bozo", f.heroID[cp], cp, "Anywhere"))
                i << (0)
                # (Line 71) if (cp < 3)
                if EUDIf()(cp >= 3, neg=True):
                    # (Line 72) {
                    # (Line 73) if (Bring(3, AtLeast, 1, f.heroID[3], "26.Yume_Bozo"))
                    if EUDIf()(Bring(3, AtLeast, 1, f.heroID[3], "26.Yume_Bozo")):
                        # (Line 74) {
                        # (Line 75) CreateUnitWithProperties(1, "Zerg Defiler", "[Skill]Unit_Wait_1", cp, UnitProperty(burrowed=True));
                        # (Line 76) SetInvincibility(Enable, "Any unit", cp, "[Skill]Unit_Wait_ALL");
                        DoActions(CreateUnitWithProperties(1, "Zerg Defiler", "[Skill]Unit_Wait_1", cp, UnitProperty(burrowed=True)))
                        # (Line 77) MoveLocation(f.location[cp], f.heroID[3], 3, "Anywhere");
                        DoActions(SetInvincibility(Enable, "Any unit", cp, "[Skill]Unit_Wait_ALL"))
                        # (Line 78) MoveUnit(All, "Zerg Defiler", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                        DoActions(MoveLocation(f.location[cp], f.heroID[3], 3, "Anywhere"))
                        # (Line 80) i += 1;
                        DoActions(MoveUnit(All, "Zerg Defiler", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                        i.__iadd__(1)
                        # (Line 81) }
                        # (Line 82) if (Bring(4, AtLeast, 1, f.heroID[4], "26.Yume_Bozo"))
                    EUDEndIf()
                    if EUDIf()(Bring(4, AtLeast, 1, f.heroID[4], "26.Yume_Bozo")):
                        # (Line 83) {
                        # (Line 84) CreateUnitWithProperties(1, "Zerg Defiler", "[Skill]Unit_Wait_1", cp, UnitProperty(burrowed=True));
                        # (Line 85) SetInvincibility(Enable, "Any unit", cp, "[Skill]Unit_Wait_ALL");
                        DoActions(CreateUnitWithProperties(1, "Zerg Defiler", "[Skill]Unit_Wait_1", cp, UnitProperty(burrowed=True)))
                        # (Line 86) MoveLocation(f.location[cp], f.heroID[4], 4, "Anywhere");
                        DoActions(SetInvincibility(Enable, "Any unit", cp, "[Skill]Unit_Wait_ALL"))
                        # (Line 87) MoveUnit(All, "Zerg Defiler", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                        DoActions(MoveLocation(f.location[cp], f.heroID[4], 4, "Anywhere"))
                        # (Line 89) i += 1;
                        DoActions(MoveUnit(All, "Zerg Defiler", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                        i.__iadd__(1)
                        # (Line 90) }
                        # (Line 91) if (Bring(5, AtLeast, 1, f.heroID[5], "26.Yume_Bozo"))
                    EUDEndIf()
                    if EUDIf()(Bring(5, AtLeast, 1, f.heroID[5], "26.Yume_Bozo")):
                        # (Line 92) {
                        # (Line 93) CreateUnitWithProperties(1, "Zerg Defiler", "[Skill]Unit_Wait_1", cp, UnitProperty(burrowed=True));
                        # (Line 94) SetInvincibility(Enable, "Any unit", cp, "[Skill]Unit_Wait_ALL");
                        DoActions(CreateUnitWithProperties(1, "Zerg Defiler", "[Skill]Unit_Wait_1", cp, UnitProperty(burrowed=True)))
                        # (Line 95) MoveLocation(f.location[cp], f.heroID[5], 5, "Anywhere");
                        DoActions(SetInvincibility(Enable, "Any unit", cp, "[Skill]Unit_Wait_ALL"))
                        # (Line 96) MoveUnit(All, "Zerg Defiler", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                        DoActions(MoveLocation(f.location[cp], f.heroID[5], 5, "Anywhere"))
                        # (Line 98) i += 1;
                        DoActions(MoveUnit(All, "Zerg Defiler", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                        i.__iadd__(1)
                        # (Line 99) }
                        # (Line 101) }
                    EUDEndIf()
                    # (Line 102) else if (cp >= 3)
                if EUDElseIf()(cp >= 3):
                    # (Line 103) {
                    # (Line 104) if (Bring(0, AtLeast, 1, f.heroID[0], "26.Yume_Bozo"))
                    if EUDIf()(Bring(0, AtLeast, 1, f.heroID[0], "26.Yume_Bozo")):
                        # (Line 105) {
                        # (Line 106) CreateUnitWithProperties(1, "Zerg Defiler", "[Skill]Unit_Wait_1", cp, UnitProperty(burrowed=True));
                        # (Line 107) SetInvincibility(Enable, "Any unit", cp, "[Skill]Unit_Wait_ALL");
                        DoActions(CreateUnitWithProperties(1, "Zerg Defiler", "[Skill]Unit_Wait_1", cp, UnitProperty(burrowed=True)))
                        # (Line 108) MoveLocation(f.location[cp], f.heroID[0], 0, "Anywhere");
                        DoActions(SetInvincibility(Enable, "Any unit", cp, "[Skill]Unit_Wait_ALL"))
                        # (Line 109) MoveUnit(All, "Zerg Defiler", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                        DoActions(MoveLocation(f.location[cp], f.heroID[0], 0, "Anywhere"))
                        # (Line 111) i += 1;
                        DoActions(MoveUnit(All, "Zerg Defiler", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                        i.__iadd__(1)
                        # (Line 112) }
                        # (Line 113) if (Bring(1, AtLeast, 1, f.heroID[1], "26.Yume_Bozo"))
                    EUDEndIf()
                    if EUDIf()(Bring(1, AtLeast, 1, f.heroID[1], "26.Yume_Bozo")):
                        # (Line 114) {
                        # (Line 115) CreateUnitWithProperties(1, "Zerg Defiler", "[Skill]Unit_Wait_1", cp, UnitProperty(burrowed=True));
                        # (Line 116) SetInvincibility(Enable, "Any unit", cp, "[Skill]Unit_Wait_ALL");
                        DoActions(CreateUnitWithProperties(1, "Zerg Defiler", "[Skill]Unit_Wait_1", cp, UnitProperty(burrowed=True)))
                        # (Line 117) MoveLocation(f.location[cp], f.heroID[1], 1, "Anywhere");
                        DoActions(SetInvincibility(Enable, "Any unit", cp, "[Skill]Unit_Wait_ALL"))
                        # (Line 118) MoveUnit(All, "Zerg Defiler", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                        DoActions(MoveLocation(f.location[cp], f.heroID[1], 1, "Anywhere"))
                        # (Line 120) i += 1;
                        DoActions(MoveUnit(All, "Zerg Defiler", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                        i.__iadd__(1)
                        # (Line 121) }
                        # (Line 122) if (Bring(2, AtLeast, 1, f.heroID[2], "26.Yume_Bozo"))
                    EUDEndIf()
                    if EUDIf()(Bring(2, AtLeast, 1, f.heroID[2], "26.Yume_Bozo")):
                        # (Line 123) {
                        # (Line 124) CreateUnitWithProperties(1, "Zerg Defiler", "[Skill]Unit_Wait_1", cp, UnitProperty(burrowed=True));
                        # (Line 125) SetInvincibility(Enable, "Any unit", cp, "[Skill]Unit_Wait_ALL");
                        DoActions(CreateUnitWithProperties(1, "Zerg Defiler", "[Skill]Unit_Wait_1", cp, UnitProperty(burrowed=True)))
                        # (Line 126) MoveLocation(f.location[cp], f.heroID[2], 2, "Anywhere");
                        DoActions(SetInvincibility(Enable, "Any unit", cp, "[Skill]Unit_Wait_ALL"))
                        # (Line 127) MoveUnit(All, "Zerg Defiler", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                        DoActions(MoveLocation(f.location[cp], f.heroID[2], 2, "Anywhere"))
                        # (Line 129) i += 1;
                        DoActions(MoveUnit(All, "Zerg Defiler", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                        i.__iadd__(1)
                        # (Line 130) }
                        # (Line 131) }
                    EUDEndIf()
                    # (Line 133) f.SkillWait(cp, 80);
                EUDEndIf()
                f.SkillWait(cp, 80)
                # (Line 135) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 136) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 137) }
                # (Line 138) }
            EUDEndIf()
            # (Line 139) else if (f.count[cp] == 1)
        if EUDElseIf()(f.count[cp] == 1):
            # (Line 140) {
            # (Line 141) if (f.loop[cp] < 4)
            if EUDIf()(f.loop[cp] >= 4, neg=True):
                # (Line 142) {
                # (Line 143) RemoveUnitAt(All, "80 + 1n Artanis", "Anywhere", cp);
                # (Line 144) RemoveUnitAt(All, "80 + 1n Tom Kazansky", "Anywhere", cp);
                DoActions(RemoveUnitAt(All, "80 + 1n Artanis", "Anywhere", cp))
                # (Line 146) var j = 0;
                DoActions(RemoveUnitAt(All, "80 + 1n Tom Kazansky", "Anywhere", cp))
                j = EUDVariable()
                j << (0)
                # (Line 148) for (; j < i; j++)
                if EUDWhile()(j >= i, neg=True):
                    def _t24():
                        j.__iadd__(1)
                    # (Line 149) {
                    # (Line 150) if (f.loop[cp] == 0)
                    if EUDIf()(f.loop[cp] == 0):
                        # (Line 151) {
                        # (Line 152) f.Table_Sin(cp, 22, 100);
                        f.Table_Sin(cp, 22, 100)
                        # (Line 153) f.Table_Cos(cp, 22, 100);
                        f.Table_Cos(cp, 22, 100)
                        # (Line 155) var x = f.CosAngle[cp];
                        x = EUDVariable()
                        x << (f.CosAngle[cp])
                        # (Line 156) var y = f.SinAngle[cp];
                        y = EUDVariable()
                        y << (f.SinAngle[cp])
                        # (Line 158) NxNSquareShapeAt(cp, 1, "80 + 1n Artanis", 4, 50, x, y);
                        NxNSquareShapeAt(cp, 1, "80 + 1n Artanis", 4, 50, x, y)
                        # (Line 159) NxNSquareShapeAt(cp, 1, "80 + 1n Artanis", 4, 50, -x, -y);
                        NxNSquareShapeAt(cp, 1, "80 + 1n Artanis", 4, 50, -x, -y)
                        # (Line 160) NxNSquareShapeAt(cp, 1, "80 + 1n Artanis", 4, 50, -y, x);
                        NxNSquareShapeAt(cp, 1, "80 + 1n Artanis", 4, 50, -y, x)
                        # (Line 161) NxNSquareShapeAt(cp, 1, "80 + 1n Artanis", 4, 50, y, -x);
                        NxNSquareShapeAt(cp, 1, "80 + 1n Artanis", 4, 50, y, -x)
                        # (Line 162) NxNSquareShapeAt(cp, 1, " Unit. Hoffnung 25000", 4, 50, x, y);
                        NxNSquareShapeAt(cp, 1, " Unit. Hoffnung 25000", 4, 50, x, y)
                        # (Line 163) NxNSquareShapeAt(cp, 1, " Unit. Hoffnung 25000", 4, 50, -x, -y);
                        NxNSquareShapeAt(cp, 1, " Unit. Hoffnung 25000", 4, 50, -x, -y)
                        # (Line 164) NxNSquareShapeAt(cp, 1, " Unit. Hoffnung 25000", 4, 50, -y, x);
                        NxNSquareShapeAt(cp, 1, " Unit. Hoffnung 25000", 4, 50, -y, x)
                        # (Line 165) NxNSquareShapeAt(cp, 1, " Unit. Hoffnung 25000", 4, 50, y, -x);
                        NxNSquareShapeAt(cp, 1, " Unit. Hoffnung 25000", 4, 50, y, -x)
                        # (Line 166) }
                        # (Line 167) else if (f.loop[cp] == 1)
                    if EUDElseIf()(f.loop[cp] == 1):
                        # (Line 168) {
                        # (Line 169) f.Table_Sin(cp, 22, 100);
                        f.Table_Sin(cp, 22, 100)
                        # (Line 170) f.Table_Cos(cp, 22, 100);
                        f.Table_Cos(cp, 22, 100)
                        # (Line 172) var x = f.CosAngle[cp];
                        x = EUDVariable()
                        x << (f.CosAngle[cp])
                        # (Line 173) var y = f.SinAngle[cp];
                        y = EUDVariable()
                        y << (f.SinAngle[cp])
                        # (Line 175) NxNSquareShapeAt(cp, 1, "Kakaru (Twilight)", 4, 50, x, y);
                        NxNSquareShapeAt(cp, 1, "Kakaru (Twilight)", 4, 50, x, y)
                        # (Line 176) NxNSquareShapeAt(cp, 1, "Kakaru (Twilight)", 4, 50, -x, -y);
                        NxNSquareShapeAt(cp, 1, "Kakaru (Twilight)", 4, 50, -x, -y)
                        # (Line 177) NxNSquareShapeAt(cp, 1, "Kakaru (Twilight)", 4, 50, -y, x);
                        NxNSquareShapeAt(cp, 1, "Kakaru (Twilight)", 4, 50, -y, x)
                        # (Line 178) NxNSquareShapeAt(cp, 1, "Kakaru (Twilight)", 4, 50, y, -x);
                        NxNSquareShapeAt(cp, 1, "Kakaru (Twilight)", 4, 50, y, -x)
                        # (Line 179) }
                        # (Line 180) else if (f.loop[cp] == 2)
                    if EUDElseIf()(f.loop[cp] == 2):
                        # (Line 181) {
                        # (Line 182) f.Table_Sin(cp, 67, 100);
                        f.Table_Sin(cp, 67, 100)
                        # (Line 183) f.Table_Cos(cp, 67, 100);
                        f.Table_Cos(cp, 67, 100)
                        # (Line 185) var x = f.CosAngle[cp];
                        x = EUDVariable()
                        x << (f.CosAngle[cp])
                        # (Line 186) var y = f.SinAngle[cp];
                        y = EUDVariable()
                        y << (f.SinAngle[cp])
                        # (Line 188) NxNSquareShapeAt(cp, 1, "80 + 1n Tom Kazansky", 4, 50, x, y);
                        NxNSquareShapeAt(cp, 1, "80 + 1n Tom Kazansky", 4, 50, x, y)
                        # (Line 189) NxNSquareShapeAt(cp, 1, "80 + 1n Tom Kazansky", 4, 50, -x, -y);
                        NxNSquareShapeAt(cp, 1, "80 + 1n Tom Kazansky", 4, 50, -x, -y)
                        # (Line 190) NxNSquareShapeAt(cp, 1, "80 + 1n Tom Kazansky", 4, 50, -y, x);
                        NxNSquareShapeAt(cp, 1, "80 + 1n Tom Kazansky", 4, 50, -y, x)
                        # (Line 191) NxNSquareShapeAt(cp, 1, "80 + 1n Tom Kazansky", 4, 50, y, -x);
                        NxNSquareShapeAt(cp, 1, "80 + 1n Tom Kazansky", 4, 50, y, -x)
                        # (Line 192) NxNSquareShapeAt(cp, 1, " Unit. Hoffnung 25000", 4, 50, x, y);
                        NxNSquareShapeAt(cp, 1, " Unit. Hoffnung 25000", 4, 50, x, y)
                        # (Line 193) NxNSquareShapeAt(cp, 1, " Unit. Hoffnung 25000", 4, 50, -x, -y);
                        NxNSquareShapeAt(cp, 1, " Unit. Hoffnung 25000", 4, 50, -x, -y)
                        # (Line 194) NxNSquareShapeAt(cp, 1, " Unit. Hoffnung 25000", 4, 50, -y, x);
                        NxNSquareShapeAt(cp, 1, " Unit. Hoffnung 25000", 4, 50, -y, x)
                        # (Line 195) NxNSquareShapeAt(cp, 1, " Unit. Hoffnung 25000", 4, 50, y, -x);
                        NxNSquareShapeAt(cp, 1, " Unit. Hoffnung 25000", 4, 50, y, -x)
                        # (Line 196) }
                        # (Line 197) else if (f.loop[cp] == 3)
                    if EUDElseIf()(f.loop[cp] == 3):
                        # (Line 198) {
                        # (Line 199) f.Table_Sin(cp, 67, 100);
                        f.Table_Sin(cp, 67, 100)
                        # (Line 200) f.Table_Cos(cp, 67, 100);
                        f.Table_Cos(cp, 67, 100)
                        # (Line 202) var x = f.CosAngle[cp];
                        x = EUDVariable()
                        x << (f.CosAngle[cp])
                        # (Line 203) var y = f.SinAngle[cp];
                        y = EUDVariable()
                        y << (f.SinAngle[cp])
                        # (Line 205) NxNSquareShapeAt(cp, 1, "Kakaru (Twilight)", 4, 50, x, y);
                        NxNSquareShapeAt(cp, 1, "Kakaru (Twilight)", 4, 50, x, y)
                        # (Line 206) NxNSquareShapeAt(cp, 1, "Kakaru (Twilight)", 4, 50, -x, -y);
                        NxNSquareShapeAt(cp, 1, "Kakaru (Twilight)", 4, 50, -x, -y)
                        # (Line 207) NxNSquareShapeAt(cp, 1, "Kakaru (Twilight)", 4, 50, -y, x);
                        NxNSquareShapeAt(cp, 1, "Kakaru (Twilight)", 4, 50, -y, x)
                        # (Line 208) NxNSquareShapeAt(cp, 1, "Kakaru (Twilight)", 4, 50, y, -x);
                        NxNSquareShapeAt(cp, 1, "Kakaru (Twilight)", 4, 50, y, -x)
                        # (Line 209) }
                        # (Line 211) CreateUnitWithProperties(1, "40 + 1n Zergling", "[Skill]Unit_Wait_1", cp, UnitProperty(burrowed=True));
                    EUDEndIf()
                    # (Line 212) SetInvincibility(Enable, "Any unit", cp, "[Skill]Unit_Wait_ALL");
                    DoActions(CreateUnitWithProperties(1, "40 + 1n Zergling", "[Skill]Unit_Wait_1", cp, UnitProperty(burrowed=True)))
                    # (Line 213) MoveLocation(f.location[cp], "Zerg Defiler", cp, "Anywhere");
                    DoActions(SetInvincibility(Enable, "Any unit", cp, "[Skill]Unit_Wait_ALL"))
                    # (Line 214) RemoveUnitAt(1, "Zerg Defiler", "Anywhere", cp);
                    DoActions(MoveLocation(f.location[cp], "Zerg Defiler", cp, "Anywhere"))
                    # (Line 215) MoveUnit(All, "40 + 1n Zergling", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                    DoActions(RemoveUnitAt(1, "Zerg Defiler", "Anywhere", cp))
                    # (Line 217) }
                    DoActions(MoveUnit(All, "40 + 1n Zergling", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                    # (Line 219) Order("80 + 1n Artanis", cp, "Anywhere", Attack, "Anywhere");
                    EUDSetContinuePoint()
                    _t24()
                EUDEndWhile()
                # (Line 220) Order("80 + 1n Tom Kazansky", cp, "Anywhere", Attack, "Anywhere");
                DoActions(Order("80 + 1n Artanis", cp, "Anywhere", Attack, "Anywhere"))
                # (Line 222) KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp);
                DoActions(Order("80 + 1n Tom Kazansky", cp, "Anywhere", Attack, "Anywhere"))
                # (Line 223) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", cp);
                DoActions(KillUnitAt(All, " Unit. Hoffnung 25000", "Anywhere", cp))
                # (Line 225) j = 0;
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", cp))
                j << (0)
                # (Line 227) for (; j < i; j++)
                if EUDWhile()(j >= i, neg=True):
                    def _t30():
                        j.__iadd__(1)
                    # (Line 228) {
                    # (Line 229) CreateUnitWithProperties(1, "Zerg Defiler", "[Skill]Unit_Wait_1", cp, UnitProperty(burrowed=True));
                    # (Line 230) SetInvincibility(Enable, "Any unit", cp, "[Skill]Unit_Wait_ALL");
                    DoActions(CreateUnitWithProperties(1, "Zerg Defiler", "[Skill]Unit_Wait_1", cp, UnitProperty(burrowed=True)))
                    # (Line 231) MoveLocation(f.location[cp], "40 + 1n Zergling", cp, "Anywhere");
                    DoActions(SetInvincibility(Enable, "Any unit", cp, "[Skill]Unit_Wait_ALL"))
                    # (Line 232) RemoveUnitAt(1, "40 + 1n Zergling", "Anywhere", cp);
                    DoActions(MoveLocation(f.location[cp], "40 + 1n Zergling", cp, "Anywhere"))
                    # (Line 233) MoveUnit(All, "Zerg Defiler", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                    DoActions(RemoveUnitAt(1, "40 + 1n Zergling", "Anywhere", cp))
                    # (Line 234) }
                    DoActions(MoveUnit(All, "Zerg Defiler", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                    # (Line 236) f.SkillWait(cp, 80);
                    EUDSetContinuePoint()
                    _t30()
                EUDEndWhile()
                f.SkillWait(cp, 80)
                # (Line 238) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 239) }
                # (Line 240) else if (f.loop[cp] == 4)
            if EUDElseIf()(f.loop[cp] == 4):
                # (Line 241) {
                # (Line 242) RemoveUnitAt(All, "80 + 1n Artanis", "Anywhere", cp);
                # (Line 243) RemoveUnitAt(All, "80 + 1n Tom Kazansky", "Anywhere", cp);
                DoActions(RemoveUnitAt(All, "80 + 1n Artanis", "Anywhere", cp))
                # (Line 244) RemoveUnitAt(All, "Zerg Defiler", "Anywhere", cp);
                DoActions(RemoveUnitAt(All, "80 + 1n Tom Kazansky", "Anywhere", cp))
                # (Line 246) f.SkillWait(cp, 2320);
                DoActions(RemoveUnitAt(All, "Zerg Defiler", "Anywhere", cp))
                f.SkillWait(cp, 2320)
                # (Line 248) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 249) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 250) }
                # (Line 251) }
            EUDEndIf()
            # (Line 252) else if (f.count[cp] == 2)
        if EUDElseIf()(f.count[cp] == 2):
            # (Line 253) {
            # (Line 254) if (f.loop[cp] == 0)
            if EUDIf()(f.loop[cp] == 0):
                # (Line 255) {
                # (Line 256) f.DotShape(cp, 1, "40 + 1n Gantrithor", 0, 0);
                f.DotShape(cp, 1, "40 + 1n Gantrithor", 0, 0)
                # (Line 257) KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", cp);
                # (Line 259) SetInvincibility(Disable, f.heroID[cp], cp, "Anywhere");
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", cp))
                # (Line 261) f.SkillWait(cp, 480);
                DoActions(SetInvincibility(Disable, f.heroID[cp], cp, "Anywhere"))
                f.SkillWait(cp, 480)
                # (Line 263) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 264) }
                # (Line 265) else if (f.loop[cp] == 1)
            if EUDElseIf()(f.loop[cp] == 1):
                # (Line 266) {
                # (Line 267) f.Voice_Routine(cp, 6);
                f.Voice_Routine(cp, 6)
                # (Line 269) f.SkillWait(cp, 80);
                f.SkillWait(cp, 80)
                # (Line 271) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 272) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 273) }
                # (Line 274) }
            EUDEndIf()
            # (Line 275) else if (f.count[cp] == 3)
        if EUDElseIf()(f.count[cp] == 3):
            # (Line 276) {
            # (Line 277) SetSwitch("ComputerAlliy", Clear);
            # (Line 279) if (cp < 3)
            DoActions(SetSwitch("ComputerAlliy", Clear))
            if EUDIf()(cp >= 3, neg=True):
                # (Line 280) {
                # (Line 281) SetAllianceStatus(P8, Enemy);
                # (Line 282) }
                DoActions(SetAllianceStatus(P8, Enemy))
                # (Line 283) else if (cp >= 3)
            if EUDElseIf()(cp >= 3):
                # (Line 284) {
                # (Line 285) SetAllianceStatus(P7, Enemy);
                # (Line 286) }
                DoActions(SetAllianceStatus(P7, Enemy))
                # (Line 288) f.SkillEnd(cp);
            EUDEndIf()
            f.SkillEnd(cp)
            # (Line 289) }
            # (Line 290) }
        EUDEndIf()
        # (Line 291) }
    EUDEndIf()
    # (Line 295) function MoveLoc(Unit : TrgUnit, cp : TrgPlayer, x, y)

# (Line 296) {
@EUDTypedFunc([TrgUnit, TrgPlayer, None, None])
def MoveLoc(Unit, cp, x, y):
    # (Line 297) MoveLocation(f.location[cp], "Zerg Defiler", cp, "Anywhere");
    # (Line 298) addloc(f.location[cp], x, y);
    DoActions(MoveLocation(f.location[cp], "Zerg Defiler", cp, "Anywhere"))
    f_addloc(f.location[cp], x, y)
    # (Line 299) }
    # (Line 301) function SkillUnit(cp : TrgPlayer, count, Unit : TrgUnit)

# (Line 302) {
@EUDTypedFunc([TrgPlayer, None, TrgUnit])
def SkillUnit(cp, count, Unit):
    # (Line 303) CreateUnit(count, Unit, dwrand() % 8 + 33, cp);
    # (Line 304) SetInvincibility(Enable, Unit, cp, "[Skill]Unit_Wait_ALL");
    DoActions(CreateUnit(count, Unit, f_dwrand() % 8 + 33, cp))
    # (Line 305) MoveUnit(count, Unit, cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
    DoActions(SetInvincibility(Enable, Unit, cp, "[Skill]Unit_Wait_ALL"))
    # (Line 306) }
    DoActions(MoveUnit(count, Unit, cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
    # (Line 308) function SquareShapeAt(cp : TrgPlayer, count, Unit : TrgUnit, x, y, distanceX, distanceY)

# (Line 309) {
@EUDTypedFunc([TrgPlayer, None, TrgUnit, None, None, None, None])
def SquareShapeAt(cp, count, Unit, x, y, distanceX, distanceY):
    # (Line 310) MoveLoc(f.heroID[cp], cp, x + distanceX, y + distanceY);
    MoveLoc(f.heroID[cp], cp, x + distanceX, y + distanceY)
    # (Line 311) SkillUnit(cp, count, Unit);
    SkillUnit(cp, count, Unit)
    # (Line 312) MoveLoc(f.heroID[cp], cp, -y + distanceX, x + distanceY);
    MoveLoc(f.heroID[cp], cp, -y + distanceX, x + distanceY)
    # (Line 313) SkillUnit(cp, count, Unit);
    SkillUnit(cp, count, Unit)
    # (Line 314) MoveLoc(f.heroID[cp], cp, -x + distanceX, -y + distanceY);
    MoveLoc(f.heroID[cp], cp, -x + distanceX, -y + distanceY)
    # (Line 315) SkillUnit(cp, count, Unit);
    SkillUnit(cp, count, Unit)
    # (Line 316) MoveLoc(f.heroID[cp], cp, y + distanceX, -x + distanceY);
    MoveLoc(f.heroID[cp], cp, y + distanceX, -x + distanceY)
    # (Line 317) SkillUnit(cp, count, Unit);
    SkillUnit(cp, count, Unit)
    # (Line 318) }
    # (Line 320) function NxNSquareShapeAt(cp : TrgPlayer, count, Unit : TrgUnit, n, interval, distanceX, distanceY)

# (Line 321) {
@EUDTypedFunc([TrgPlayer, None, TrgUnit, None, None, None, None])
def NxNSquareShapeAt(cp, count, Unit, n, interval, distanceX, distanceY):
    # (Line 322) var i = 0;
    i_1 = EUDVariable()
    i_1 << (0)
    # (Line 323) var destX, destY;
    destX, destY = EUDCreateVariables(2)
    # (Line 324) var distance = interval / 2;
    distance = EUDVariable()
    distance << (interval // 2)
    # (Line 325) var size = n * n;
    size = EUDVariable()
    size << (n * n)
    # (Line 327) for (; i < size / 4; i++)
    if EUDWhile()(i_1 >= size // 4, neg=True):
        def _t2():
            i_1.__iadd__(1)
        # (Line 328) {
        # (Line 329) if (n == 1)
        if EUDIf()(n == 1):
            # (Line 330) {
            # (Line 331) MoveLoc(f.heroID[cp] ,cp, distanceX, distanceY);
            MoveLoc(f.heroID[cp], cp, distanceX, distanceY)
            # (Line 332) SkillUnit(cp, count, Unit);
            SkillUnit(cp, count, Unit)
            # (Line 333) }
            # (Line 334) else if (n % 2 == 0)
        if EUDElseIf()(n % 2 == 0):
            # (Line 335) {
            # (Line 336) destX = i % (n / 2) + 1;
            destX << (i_1 % (n // 2) + 1)
            # (Line 337) destY = i / (n / 2) + 1;
            destY << (i_1 // (n // 2) + 1)
            # (Line 339) if (destX == 1)
            if EUDIf()(destX == 1):
                # (Line 340) {
                # (Line 341) SquareShapeAt(cp, count, Unit, distance, destY * interval - distance, distanceX, distanceY);
                SquareShapeAt(cp, count, Unit, distance, destY * interval - distance, distanceX, distanceY)
                # (Line 342) }
                # (Line 343) else if (destY == 1)
            if EUDElseIf()(destY == 1):
                # (Line 344) {
                # (Line 345) SquareShapeAt(cp, count, Unit, destX * interval - distance, distance, distanceX, distanceY);
                SquareShapeAt(cp, count, Unit, destX * interval - distance, distance, distanceX, distanceY)
                # (Line 346) }
                # (Line 347) else
                # (Line 348) {
            if EUDElse()():
                # (Line 349) SquareShapeAt(cp, count, Unit, destX * interval - distance, destY * interval - distance, distanceX, distanceY);
                SquareShapeAt(cp, count, Unit, destX * interval - distance, destY * interval - distance, distanceX, distanceY)
                # (Line 350) }
                # (Line 351) }
            EUDEndIf()
            # (Line 352) else if (n % 2 == 1)
        if EUDElseIf()(n % 2 == 1):
            # (Line 353) {
            # (Line 354) destX = i % (n / 2);
            destX << (i_1 % (n // 2))
            # (Line 355) destY = i / (n / 2);
            destY << (i_1 // (n // 2))
            # (Line 357) if (i == 0)
            if EUDIf()(i_1 == 0):
                # (Line 358) {
                # (Line 359) MoveLoc(f.heroID[cp] ,cp, distanceX, distanceY);
                MoveLoc(f.heroID[cp], cp, distanceX, distanceY)
                # (Line 360) SkillUnit(cp, count, Unit);
                SkillUnit(cp, count, Unit)
                # (Line 361) }
                # (Line 362) else if (destY == 0)
            if EUDElseIf()(destY == 0):
                # (Line 363) {
                # (Line 364) SquareShapeAt(cp, count, Unit, destX * interval, 0, distanceX, distanceY);
                SquareShapeAt(cp, count, Unit, destX * interval, 0, distanceX, distanceY)
                # (Line 365) }
                # (Line 366) else
                # (Line 367) {
            if EUDElse()():
                # (Line 368) SquareShapeAt(cp, count, Unit, destX * interval + interval, destY * interval, distanceX, distanceY);
                SquareShapeAt(cp, count, Unit, destX * interval + interval, destY * interval, distanceX, distanceY)
                # (Line 369) }
                # (Line 371) if (i == size / 4 - 1)
            EUDEndIf()
            if EUDIf()(i_1 == size // 4 - 1):
                # (Line 372) {
                # (Line 373) SquareShapeAt(cp, count, Unit, (n / 2) * interval, 0, distanceX, distanceY);
                SquareShapeAt(cp, count, Unit, (n // 2) * interval, 0, distanceX, distanceY)
                # (Line 374) }
                # (Line 375) }
            EUDEndIf()
            # (Line 376) }
        EUDEndIf()
        # (Line 377) }
        EUDSetContinuePoint()
        _t2()
    EUDEndWhile()
