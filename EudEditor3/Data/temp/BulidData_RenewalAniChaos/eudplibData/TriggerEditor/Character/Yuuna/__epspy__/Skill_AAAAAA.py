## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import Function as f;
import Function as f
# (Line 3) const s = StringBuffer();
s = _CGFW(lambda: [StringBuffer()], 1)[0]
# (Line 4) function FlowerShape(cp : TrgPlayer, count, Unit : TrgUnit, i, distance, interval);
# (Line 6) function main(cp)
# (Line 7) {
@EUDFunc
def f_main(cp):
    # (Line 8) MoveLocation("22.Yuuna_Bozo", f.heroID[cp], cp, "Anywhere");
    # (Line 9) f.BanReturn(cp);
    DoActions(MoveLocation("22.Yuuna_Bozo", f.heroID[cp], cp, "Anywhere"))
    f.BanReturn(cp)
    # (Line 10) f.HoldPosition(cp);
    f.HoldPosition(cp)
    # (Line 12) if (f.delay[cp] == 0)
    if EUDIf()(f.delay[cp] == 0):
        # (Line 13) {
        # (Line 14) if (f.count[cp] == 0)
        if EUDIf()(f.count[cp] == 0):
            # (Line 15) {
            # (Line 16) if (f.loop[cp] == 0)
            if EUDIf()(f.loop[cp] == 0):
                # (Line 17) {
                # (Line 18) SetSwitch("Recall - Yuuna", Set);
                # (Line 20) f.SkillWait(cp, 2000);
                DoActions(SetSwitch("Recall - Yuuna", Set))
                f.SkillWait(cp, 2000)
                # (Line 22) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 23) }
                # (Line 24) else if (f.loop[cp] == 1)
            if EUDElseIf()(f.loop[cp] == 1):
                # (Line 25) {
                # (Line 26) f.SkillWait(cp, 80);
                f.SkillWait(cp, 80)
                # (Line 28) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 29) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 30) f.loopB[cp] = 0;
                _ARRW(f.loopB, cp) << (0)
                # (Line 31) }
                # (Line 32) }
            EUDEndIf()
            # (Line 33) else if (f.count[cp] == 1)
        if EUDElseIf()(f.count[cp] == 1):
            # (Line 34) {
            # (Line 35) if (f.loop[cp] == 0)
            if EUDIf()(f.loop[cp] == 0):
                # (Line 36) {
                # (Line 37) f.SkillWait(cp, 3200);
                f.SkillWait(cp, 3200)
                # (Line 39) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 40) }
                # (Line 41) else if (f.loop[cp] == 1)
            if EUDElseIf()(f.loop[cp] == 1):
                # (Line 42) {
                # (Line 43) f.Voice_Routine(cp, 13);
                f.Voice_Routine(cp, 13)
                # (Line 45) f.SkillWait(cp, 80);
                f.SkillWait(cp, 80)
                # (Line 47) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 48) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 49) f.loopB[cp] = 0;
                _ARRW(f.loopB, cp) << (0)
                # (Line 50) }
                # (Line 51) }
            EUDEndIf()
            # (Line 52) else if (f.count[cp] == 2)
        if EUDElseIf()(f.count[cp] == 2):
            # (Line 53) {
            # (Line 54) if (f.loop[cp] < 4)
            if EUDIf()(f.loop[cp] >= 4, neg=True):
                # (Line 55) {
                # (Line 56) f.NxNSquareShape(cp, 1, "40 + 1n Wraith", 2 * f.loop[cp] + 5, 75);
                f.NxNSquareShape(cp, 1, "40 + 1n Wraith", 2 * f.loop[cp] + 5, 75)
                # (Line 57) f.NxNSquareShape(cp, 1, "50 + 1n Tank", 2 * f.loop[cp] + 5, 75);
                f.NxNSquareShape(cp, 1, "50 + 1n Tank", 2 * f.loop[cp] + 5, 75)
                # (Line 58) KillUnitAt(All, "50 + 1n Tank", "Anywhere", cp);
                # (Line 59) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", cp);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", cp))
                # (Line 61) f.SkillWait(cp, 80);
                DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", cp))
                f.SkillWait(cp, 80)
                # (Line 63) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 64) }
                # (Line 65) else if (f.loop[cp] == 4)
            if EUDElseIf()(f.loop[cp] == 4):
                # (Line 66) {
                # (Line 67) f.NxNSquareShape(cp, 1, "130 + 1n Norad", 11, 75);
                f.NxNSquareShape(cp, 1, "130 + 1n Norad", 11, 75)
                # (Line 68) f.NxNSquareShape(cp, 1, "60 + 1n Siege", 11, 75);
                f.NxNSquareShape(cp, 1, "60 + 1n Siege", 11, 75)
                # (Line 69) KillUnitAt(All, "130 + 1n Norad", "Anywhere", cp);
                # (Line 71) f.SkillWait(cp, 80);
                DoActions(KillUnitAt(All, "130 + 1n Norad", "Anywhere", cp))
                f.SkillWait(cp, 80)
                # (Line 73) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 74) }
                # (Line 75) else if (f.loop[cp] == 5)
            if EUDElseIf()(f.loop[cp] == 5):
                # (Line 76) {
                # (Line 77) f.SkillWait(cp, 1120);
                f.SkillWait(cp, 1120)
                # (Line 79) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 80) }
                # (Line 81) else if (f.loop[cp] == 6)
            if EUDElseIf()(f.loop[cp] == 6):
                # (Line 82) {
                # (Line 83) f.SkillWait(cp, 80);
                f.SkillWait(cp, 80)
                # (Line 85) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 86) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 87) f.loopB[cp] = 0;
                _ARRW(f.loopB, cp) << (0)
                # (Line 88) }
                # (Line 89) }
            EUDEndIf()
            # (Line 90) else if (f.count[cp] == 3)
        if EUDElseIf()(f.count[cp] == 3):
            # (Line 91) {
            # (Line 92) if (f.loop[cp] == 0)
            if EUDIf()(f.loop[cp] == 0):
                # (Line 93) {
                # (Line 94) f.SkillWait(cp, 1280);
                f.SkillWait(cp, 1280)
                # (Line 96) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 97) }
                # (Line 98) else if (f.loop[cp] == 1)
            if EUDElseIf()(f.loop[cp] == 1):
                # (Line 99) {
                # (Line 100) f.SkillWait(cp, 80);
                f.SkillWait(cp, 80)
                # (Line 102) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 103) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 104) f.loopB[cp] = 0;
                _ARRW(f.loopB, cp) << (0)
                # (Line 105) }
                # (Line 106) }
            EUDEndIf()
            # (Line 107) else if (f.count[cp] == 4)
        if EUDElseIf()(f.count[cp] == 4):
            # (Line 108) {
            # (Line 109) if (f.loop[cp] < 4)
            if EUDIf()(f.loop[cp] >= 4, neg=True):
                # (Line 110) {
                # (Line 111) RemoveUnitAt(All, "130 + 1n Norad", "Anywhere", cp);
                # (Line 112) f.NxNSquareShape(cp, 1, "130 + 1n Norad", 2 * f.loop[cp] + 5, 75);
                DoActions(RemoveUnitAt(All, "130 + 1n Norad", "Anywhere", cp))
                f.NxNSquareShape(cp, 1, "130 + 1n Norad", 2 * f.loop[cp] + 5, 75)
                # (Line 113) f.NxNSquareShape(cp, 1, "50 + 1n Tank", 2 * f.loop[cp] + 5, 75);
                f.NxNSquareShape(cp, 1, "50 + 1n Tank", 2 * f.loop[cp] + 5, 75)
                # (Line 114) KillUnitAt(All, "50 + 1n Tank", "Anywhere", cp);
                # (Line 115) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", cp))
                # (Line 116) Order("130 + 1n Norad", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 118) f.SkillWait(cp, 80);
                DoActions(Order("130 + 1n Norad", cp, "Anywhere", Attack, f.location[cp]))
                f.SkillWait(cp, 80)
                # (Line 120) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 121) }
                # (Line 122) else if (f.loop[cp] == 4)
            if EUDElseIf()(f.loop[cp] == 4):
                # (Line 123) {
                # (Line 124) f.SkillWait(cp, 4000);
                f.SkillWait(cp, 4000)
                # (Line 126) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 127) }
                # (Line 128) else if (f.loop[cp] == 5)
            if EUDElseIf()(f.loop[cp] == 5):
                # (Line 129) {
                # (Line 130) KillUnitAt(All, "130 + 1n Norad", "Anywhere", cp);
                # (Line 131) KillUnitAt(All, "60 + 1n Siege", "Anywhere", cp);
                DoActions(KillUnitAt(All, "130 + 1n Norad", "Anywhere", cp))
                # (Line 133) f.SkillWait(cp, 80);
                DoActions(KillUnitAt(All, "60 + 1n Siege", "Anywhere", cp))
                f.SkillWait(cp, 80)
                # (Line 135) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 136) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 137) f.loopB[cp] = 0;
                _ARRW(f.loopB, cp) << (0)
                # (Line 138) }
                # (Line 139) }
            EUDEndIf()
            # (Line 140) else if (f.count[cp] == 5)
        if EUDElseIf()(f.count[cp] == 5):
            # (Line 141) {
            # (Line 142) SetSwitch("Recall - Yuuna", Clear);
            # (Line 143) SetSwitch("UiltimateSwitch", Clear);
            DoActions(SetSwitch("Recall - Yuuna", Clear))
            # (Line 144) f.SkillEnd(cp);
            DoActions(SetSwitch("UiltimateSwitch", Clear))
            f.SkillEnd(cp)
            # (Line 145) }
            # (Line 146) }
        EUDEndIf()
        # (Line 148) if (f.delayB[cp] == 0)
    EUDEndIf()
    if EUDIf()(f.delayB[cp] == 0):
        # (Line 149) {
        # (Line 150) if (f.count[cp] == 1)
        if EUDIf()(f.count[cp] == 1):
            # (Line 151) {
            # (Line 152) if (f.loopB[cp] < 32)
            if EUDIf()(f.loopB[cp] >= 32, neg=True):
                # (Line 153) {
                # (Line 154) f.Table_Sin(cp, 50 * f.loopB[cp], 50 + 10 * f.loopB[cp]);
                f.Table_Sin(cp, 50 * f.loopB[cp], 50 + 10 * f.loopB[cp])
                # (Line 155) f.Table_Cos(cp, 50 * f.loopB[cp], 50 + 10 * f.loopB[cp]);
                f.Table_Cos(cp, 50 * f.loopB[cp], 50 + 10 * f.loopB[cp])
                # (Line 157) f.SquareShape(cp, 16, "Rhynadon (Badlands)", f.CosAngle[cp], f.SinAngle[cp]);
                f.SquareShape(cp, 16, "Rhynadon (Badlands)", f.CosAngle[cp], f.SinAngle[cp])
                # (Line 158) KillUnitAt(All, "Rhynadon (Badlands)", "Anywhere", cp);
                # (Line 160) f.SkillWaitB(cp, 80);
                DoActions(KillUnitAt(All, "Rhynadon (Badlands)", "Anywhere", cp))
                f.SkillWaitB(cp, 80)
                # (Line 162) f.loopB[cp] += 1;
                _ARRW(f.loopB, cp).__iadd__(1)
                # (Line 163) }
                # (Line 164) }
            EUDEndIf()
            # (Line 165) if (f.count[cp] == 3)
        EUDEndIf()
        if EUDIf()(f.count[cp] == 3):
            # (Line 166) {
            # (Line 167) if (f.loopB[cp] == 0)
            if EUDIf()(f.loopB[cp] == 0):
                # (Line 168) {
                # (Line 169) RemoveUnitAt(All, "130 + 1n Norad", "Anywhere", cp);
                # (Line 170) f.NxNSquareShape(cp, 1, "130 + 1n Norad", 3, 75);
                DoActions(RemoveUnitAt(All, "130 + 1n Norad", "Anywhere", cp))
                f.NxNSquareShape(cp, 1, "130 + 1n Norad", 3, 75)
                # (Line 171) Order("130 + 1n Norad", cp, "Anywhere", Attack, "Anywhere");
                # (Line 172) f.NxNSquareShape(cp, 1, "50 + 1n Tank", 3, 75);
                DoActions(Order("130 + 1n Norad", cp, "Anywhere", Attack, "Anywhere"))
                f.NxNSquareShape(cp, 1, "50 + 1n Tank", 3, 75)
                # (Line 173) KillUnitAt(All, "50 + 1n Tank", "Anywhere", cp);
                # (Line 175) f.SkillWaitB(cp, 80);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", cp))
                f.SkillWaitB(cp, 80)
                # (Line 177) f.loopB[cp] = 0;
                _ARRW(f.loopB, cp) << (0)
                # (Line 178) }
                # (Line 179) }
            EUDEndIf()
            # (Line 180) }
        EUDEndIf()
        # (Line 181) }
    EUDEndIf()
