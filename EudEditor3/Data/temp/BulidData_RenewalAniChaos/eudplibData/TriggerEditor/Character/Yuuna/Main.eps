import Function as f;

import Character.Yuuna.Skill_O as O;
import Character.Yuuna.Skill_S as S;
import Character.Yuuna.Skill_C as C;
import Character.Yuuna.Skill_A as A;

import Character.Variable_Text as voice;
import Character.Yuuna.Text as text;

const stb = StringBuffer();

function SkillList(cp);

function main(cp)
{
	if (Deaths(cp, Exactly, 3000, 54))
	{
		f.location[cp] = 181;
		f.heroID[cp] = 54;
		f.step[cp] = dwread_epd(179 * 12 + cp);
		
		SkillList(cp);
		
		if (Deaths(cp, Exactly, 0, " `SkillWait"))
		{
			switch(f.step[cp])
			{
			case 1:
				O.main(cp, f.location[cp], f.heroID[cp]);
				break;
			case 100:
				S.main(cp, f.location[cp], f.heroID[cp]);
				break;
			case 200:
				C.main(cp, f.location[cp], f.heroID[cp]);
				break;
			case 300:
				A.main(cp, f.location[cp], f.heroID[cp]);
				break;
			}
		}
		
		if (Deaths(cp, AtLeast, 1, 186))	// Skill Text
		{
			voice.Rusaruka_Voice[0] = dwread_epd(186 * 12 + cp);
			voice.Rusaruka_Voice[1] = dwread_epd(186 * 12 + cp);
			voice.Rusaruka_Voice[2] = dwread_epd(186 * 12 + cp);
			voice.Rusaruka_Voice[3] = dwread_epd(186 * 12 + cp);
			voice.Rusaruka_Voice[4] = dwread_epd(186 * 12 + cp);
			voice.Rusaruka_Voice[5] = dwread_epd(186 * 12 + cp);
			SetDeaths(cp, SetTo, 0, 186);
		}
	}
	
	// Character Voice 건드리지 말것
	text.main(cp);
}

function SkillList(cp)
{
	if(Memory(0x596A44, Exactly, 0x00000100))	// Insert key Pressed
	{
		stb.printAt(0, "\n");
		stb.printAt(1, "\x1F　＃\x04- 유우키 \x1B유우나　\x04[ 유우키 유우나는 용사다 ]");
		stb.printAt(2, "　　\x1FA\x04ction List");
		stb.printAt(3, "　　　\x18O \x04만개 \x19[ 만개 스택 5 소모 / 공 5 업 방 5 다운 / 중첩 가능 / 사망 시 해제 ]");
		stb.printAt(4, "　　　\x04\x1F>SSS + SS \x04>미정 \x19[ 대인 / 공성 ]");
		stb.printAt(5, "　　　\x04\x1F>CCC + AA \x04미정 \x19[ 공성 / 후속 스킬 귀환봉인, 자리고정 ]");
		stb.printAt(6, "　　　\x04\x1F>CCAA + 200 Gas \x04희생 \x19[ 공성 / 자리고정 ]");
		stb.printAt(7, "\n");
		stb.printAt(8, "　　　\x08AAA \x04갈망 \x19[ 공성 / 선딜없음 /  장판형 스킬 ] \x05650");
		stb.printAt(9, "\n");
	}
}