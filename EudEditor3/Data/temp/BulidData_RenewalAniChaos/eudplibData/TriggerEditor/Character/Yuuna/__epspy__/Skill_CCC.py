## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import Function as f;
import Function as f
# (Line 3) const s = StringBuffer();
s = _CGFW(lambda: [StringBuffer()], 1)[0]
# (Line 5) function main(cp, location, heroID)
# (Line 6) {
@EUDFunc
def f_main(cp, location, heroID):
    # (Line 7) if (f.delay[cp] == 0)
    if EUDIf()(f.delay[cp] == 0):
        # (Line 8) {
        # (Line 9) if (f.count[cp] == 0)
        if EUDIf()(f.count[cp] == 0):
            # (Line 10) {
            # (Line 11) if (f.loop[cp] < 4)
            if EUDIf()(f.loop[cp] >= 4, neg=True):
                # (Line 12) {
                # (Line 14) f.NxNSquareShape(heroID, 1, "40 + 1n Wraith", location, cp, 2 * f.loop[cp] + 1, 50);
                f.NxNSquareShape(heroID, 1, "40 + 1n Wraith", location, cp, 2 * f.loop[cp] + 1, 50)
                # (Line 15) KillUnitAt(All, "40 + 1n Wraith", "Anywhere", cp);
                # (Line 17) f.SkillWait(cp, 80);
                DoActions(KillUnitAt(All, "40 + 1n Wraith", "Anywhere", cp))
                f.SkillWait(cp, 80)
                # (Line 19) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 20) }
                # (Line 21) else if (f.loop[cp] == 4)
            if EUDElseIf()(f.loop[cp] == 4):
                # (Line 22) {
                # (Line 23) f.NxNSquareShape(heroID, 1, "40 + 1n Guardian", location, cp, 6, 75);
                f.NxNSquareShape(heroID, 1, "40 + 1n Guardian", location, cp, 6, 75)
                # (Line 24) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp);
                # (Line 26) f.SkillWait(cp, 80);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp))
                f.SkillWait(cp, 80)
                # (Line 28) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 29) }
                # (Line 30) else if (f.loop[cp] == 5)
            if EUDElseIf()(f.loop[cp] == 5):
                # (Line 31) {
                # (Line 32) f.SquareShape(heroID, 1, "60 + 1n Siege", location, cp, 114, 114);
                f.SquareShape(heroID, 1, "60 + 1n Siege", location, cp, 114, 114)
                # (Line 33) f.SquareShape(heroID, 1, "60 + 1n Siege", location, cp, 114, 190);
                f.SquareShape(heroID, 1, "60 + 1n Siege", location, cp, 114, 190)
                # (Line 34) f.SquareShape(heroID, 1, "60 + 1n Siege", location, cp, 190, 114);
                f.SquareShape(heroID, 1, "60 + 1n Siege", location, cp, 190, 114)
                # (Line 35) f.SquareShape(heroID, 1, "60 + 1n Siege", location, cp, 190, 190);
                f.SquareShape(heroID, 1, "60 + 1n Siege", location, cp, 190, 190)
                # (Line 36) f.SquareShape(heroID, 1, "60 + 1n Siege", location, cp, 38, 114);
                f.SquareShape(heroID, 1, "60 + 1n Siege", location, cp, 38, 114)
                # (Line 37) f.SquareShape(heroID, 1, "60 + 1n Siege", location, cp, 38, 175);
                f.SquareShape(heroID, 1, "60 + 1n Siege", location, cp, 38, 175)
                # (Line 38) f.SquareShape(heroID, 1, "60 + 1n Siege", location, cp, 114, 38);
                f.SquareShape(heroID, 1, "60 + 1n Siege", location, cp, 114, 38)
                # (Line 39) f.SquareShape(heroID, 1, "50 + 1n Battlecruiser", location, cp, 175, 38);
                f.SquareShape(heroID, 1, "50 + 1n Battlecruiser", location, cp, 175, 38)
                # (Line 40) f.SquareShape(heroID, 1, "50 + 1n Battlecruiser", location, cp, 114, 114);
                f.SquareShape(heroID, 1, "50 + 1n Battlecruiser", location, cp, 114, 114)
                # (Line 41) f.SquareShape(heroID, 1, "50 + 1n Battlecruiser", location, cp, 114, 190);
                f.SquareShape(heroID, 1, "50 + 1n Battlecruiser", location, cp, 114, 190)
                # (Line 42) f.SquareShape(heroID, 1, "50 + 1n Battlecruiser", location, cp, 190, 114);
                f.SquareShape(heroID, 1, "50 + 1n Battlecruiser", location, cp, 190, 114)
                # (Line 43) f.SquareShape(heroID, 1, "50 + 1n Battlecruiser", location, cp, 190, 190);
                f.SquareShape(heroID, 1, "50 + 1n Battlecruiser", location, cp, 190, 190)
                # (Line 44) f.SquareShape(heroID, 1, "50 + 1n Battlecruiser", location, cp, 38, 114);
                f.SquareShape(heroID, 1, "50 + 1n Battlecruiser", location, cp, 38, 114)
                # (Line 45) f.SquareShape(heroID, 1, "50 + 1n Battlecruiser", location, cp, 38, 175);
                f.SquareShape(heroID, 1, "50 + 1n Battlecruiser", location, cp, 38, 175)
                # (Line 46) f.SquareShape(heroID, 1, "50 + 1n Battlecruiser", location, cp, 114, 38);
                f.SquareShape(heroID, 1, "50 + 1n Battlecruiser", location, cp, 114, 38)
                # (Line 47) f.SquareShape(heroID, 1, "50 + 1n Battlecruiser", location, cp, 175, 38);
                f.SquareShape(heroID, 1, "50 + 1n Battlecruiser", location, cp, 175, 38)
                # (Line 48) MoveLocation(location, heroID, cp, "Anywhere");
                # (Line 49) Order("50 + 1n Battlecruiser", cp, "Anywhere", Attack, location);
                DoActions(MoveLocation(location, heroID, cp, "Anywhere"))
                # (Line 50) f.SkillWait(cp, 720);
                DoActions(Order("50 + 1n Battlecruiser", cp, "Anywhere", Attack, location))
                f.SkillWait(cp, 720)
                # (Line 52) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 53) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 54) }
                # (Line 56) }
            EUDEndIf()
            # (Line 57) else if (f.count[cp] == 1)
        if EUDElseIf()(f.count[cp] == 1):
            # (Line 58) {
            # (Line 59) if (f.loop[cp] == 0)
            if EUDIf()(f.loop[cp] == 0):
                # (Line 60) {
                # (Line 61) f.NxNSquareShape(heroID, 1, "Kakaru (Twilight)", location, cp, 3, 50);
                f.NxNSquareShape(heroID, 1, "Kakaru (Twilight)", location, cp, 3, 50)
                # (Line 62) f.NxNSquareShape(heroID, 1, "40 + 1n Goliath", location, cp, 3, 50);
                f.NxNSquareShape(heroID, 1, "40 + 1n Goliath", location, cp, 3, 50)
                # (Line 63) Order("40 + 1n Goliath", cp, "Anywhere", Attack, "Anywhere");
                # (Line 64) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", cp);
                DoActions(Order("40 + 1n Goliath", cp, "Anywhere", Attack, "Anywhere"))
                # (Line 66) f.SkillWait(cp, 320);
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", cp))
                f.SkillWait(cp, 320)
                # (Line 68) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 71) }
                # (Line 72) if (f.loop[cp] == 1)
            EUDEndIf()
            if EUDIf()(f.loop[cp] == 1):
                # (Line 73) {
                # (Line 74) KillUnitAt(All, "40 + 1n Goliath", "Anywhere", cp);
                # (Line 76) f.SquareShape(heroID, 1, "Kakaru (Twilight)", location, cp, 100, 0);
                DoActions(KillUnitAt(All, "40 + 1n Goliath", "Anywhere", cp))
                f.SquareShape(heroID, 1, "Kakaru (Twilight)", location, cp, 100, 0)
                # (Line 77) f.SquareShape(heroID, 1, "Kakaru (Twilight)", location, cp, 100, 50);
                f.SquareShape(heroID, 1, "Kakaru (Twilight)", location, cp, 100, 50)
                # (Line 78) f.SquareShape(heroID, 1, "Kakaru (Twilight)", location, cp, 100, 100);
                f.SquareShape(heroID, 1, "Kakaru (Twilight)", location, cp, 100, 100)
                # (Line 79) f.SquareShape(heroID, 1, "Kakaru (Twilight)", location, cp, 100, 150);
                f.SquareShape(heroID, 1, "Kakaru (Twilight)", location, cp, 100, 150)
                # (Line 80) f.SquareShape(heroID, 1, "Kakaru (Twilight)", location, cp, 100, 200);
                f.SquareShape(heroID, 1, "Kakaru (Twilight)", location, cp, 100, 200)
                # (Line 81) f.SquareShape(heroID, 1, "Kakaru (Twilight)", location, cp, 150, 0);
                f.SquareShape(heroID, 1, "Kakaru (Twilight)", location, cp, 150, 0)
                # (Line 82) f.SquareShape(heroID, 1, "Kakaru (Twilight)", location, cp, 150, 50);
                f.SquareShape(heroID, 1, "Kakaru (Twilight)", location, cp, 150, 50)
                # (Line 83) f.SquareShape(heroID, 1, "Kakaru (Twilight)", location, cp, 150, 100);
                f.SquareShape(heroID, 1, "Kakaru (Twilight)", location, cp, 150, 100)
                # (Line 84) f.SquareShape(heroID, 1, "Kakaru (Twilight)", location, cp, 150, 150);
                f.SquareShape(heroID, 1, "Kakaru (Twilight)", location, cp, 150, 150)
                # (Line 85) f.SquareShape(heroID, 1, "Kakaru (Twilight)", location, cp, 150, 200);
                f.SquareShape(heroID, 1, "Kakaru (Twilight)", location, cp, 150, 200)
                # (Line 86) f.SquareShape(heroID, 1, "Kakaru (Twilight)", location, cp, 200, 0);
                f.SquareShape(heroID, 1, "Kakaru (Twilight)", location, cp, 200, 0)
                # (Line 87) f.SquareShape(heroID, 1, "Kakaru (Twilight)", location, cp, 200, 50);
                f.SquareShape(heroID, 1, "Kakaru (Twilight)", location, cp, 200, 50)
                # (Line 88) f.SquareShape(heroID, 1, "Kakaru (Twilight)", location, cp, 200, 100);
                f.SquareShape(heroID, 1, "Kakaru (Twilight)", location, cp, 200, 100)
                # (Line 89) f.SquareShape(heroID, 1, "Kakaru (Twilight)", location, cp, 200, 150);
                f.SquareShape(heroID, 1, "Kakaru (Twilight)", location, cp, 200, 150)
                # (Line 90) f.SquareShape(heroID, 1, "Kakaru (Twilight)", location, cp, 200, 200);
                f.SquareShape(heroID, 1, "Kakaru (Twilight)", location, cp, 200, 200)
                # (Line 91) f.SquareShape(heroID, 1, "Kakaru (Twilight)", location, cp, 50, 100);
                f.SquareShape(heroID, 1, "Kakaru (Twilight)", location, cp, 50, 100)
                # (Line 92) f.SquareShape(heroID, 1, "Kakaru (Twilight)", location, cp, 50, 150);
                f.SquareShape(heroID, 1, "Kakaru (Twilight)", location, cp, 50, 150)
                # (Line 93) f.SquareShape(heroID, 1, "Kakaru (Twilight)", location, cp, 50, 200);
                f.SquareShape(heroID, 1, "Kakaru (Twilight)", location, cp, 50, 200)
                # (Line 94) f.SquareShape(heroID, 1, "40 + 1n Goliath", location, cp, 175, 38);
                f.SquareShape(heroID, 1, "40 + 1n Goliath", location, cp, 175, 38)
                # (Line 95) f.SquareShape(heroID, 1, "40 + 1n Goliath", location, cp, 114, 114);
                f.SquareShape(heroID, 1, "40 + 1n Goliath", location, cp, 114, 114)
                # (Line 96) f.SquareShape(heroID, 1, "40 + 1n Goliath", location, cp, 114, 190);
                f.SquareShape(heroID, 1, "40 + 1n Goliath", location, cp, 114, 190)
                # (Line 97) f.SquareShape(heroID, 1, "40 + 1n Goliath", location, cp, 190, 114);
                f.SquareShape(heroID, 1, "40 + 1n Goliath", location, cp, 190, 114)
                # (Line 98) f.SquareShape(heroID, 1, "40 + 1n Goliath", location, cp, 190, 190);
                f.SquareShape(heroID, 1, "40 + 1n Goliath", location, cp, 190, 190)
                # (Line 99) f.SquareShape(heroID, 1, "40 + 1n Goliath", location, cp, 38, 114);
                f.SquareShape(heroID, 1, "40 + 1n Goliath", location, cp, 38, 114)
                # (Line 100) f.SquareShape(heroID, 1, "40 + 1n Goliath", location, cp, 38, 175);
                f.SquareShape(heroID, 1, "40 + 1n Goliath", location, cp, 38, 175)
                # (Line 101) f.SquareShape(heroID, 1, "40 + 1n Goliath", location, cp, 114, 38);
                f.SquareShape(heroID, 1, "40 + 1n Goliath", location, cp, 114, 38)
                # (Line 102) f.SquareShape(heroID, 1, "40 + 1n Goliath", location, cp, 175, 38);
                f.SquareShape(heroID, 1, "40 + 1n Goliath", location, cp, 175, 38)
                # (Line 103) Order("40 + 1n Goliath", cp, "Anywhere", Attack, "Anywhere");
                # (Line 104) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", cp);
                DoActions(Order("40 + 1n Goliath", cp, "Anywhere", Attack, "Anywhere"))
                # (Line 106) f.SkillWait(cp, 320);
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", cp))
                f.SkillWait(cp, 320)
                # (Line 108) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 109) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 110) }
                # (Line 113) }
            EUDEndIf()
            # (Line 114) else if (f.count[cp] == 2)
        if EUDElseIf()(f.count[cp] == 2):
            # (Line 115) {
            # (Line 116) if (Bring(cp, AtLeast, 2, "Protoss Arbiter", "[Skill]UseSkill") && Deaths(cp, Exactly, 210, " `SkillStep"))
            if EUDIf()(EUDSCAnd()(Bring(cp, AtLeast, 2, "Protoss Arbiter", "[Skill]UseSkill"))(Deaths(cp, Exactly, 210, " `SkillStep"))()):
                # (Line 117) {
                # (Line 118) KillUnitAt(All, "40 + 1n Goliath", "Anywhere", cp);
                # (Line 119) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp);
                DoActions(KillUnitAt(All, "40 + 1n Goliath", "Anywhere", cp))
                # (Line 120) SetDeaths(cp, SetTo, 4, 136);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp))
                # (Line 121) SetDeaths(cp, SetTo, 0, " `SkillWait");
                DoActions(SetDeaths(cp, SetTo, 4, 136))
                # (Line 122) SetDeaths(cp, SetTo, 0, " `SkillCount");
                DoActions(SetDeaths(cp, SetTo, 0, " `SkillWait"))
                # (Line 123) f.loop[cp] = 0;
                DoActions(SetDeaths(cp, SetTo, 0, " `SkillCount"))
                _ARRW(f.loop, cp) << (0)
                # (Line 124) SetDeaths(cp, SetTo, 220, " `SkillStep");
                # (Line 125) KillUnitAt(2, "Protoss Arbiter", "[Skill]UseSkill", cp);
                DoActions(SetDeaths(cp, SetTo, 220, " `SkillStep"))
                # (Line 126) }
                DoActions(KillUnitAt(2, "Protoss Arbiter", "[Skill]UseSkill", cp))
                # (Line 127) else
                # (Line 128) {
            if EUDElse()():
                # (Line 129) KillUnitAt(All, "40 + 1n Goliath", "Anywhere", cp);
                # (Line 130) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp);
                DoActions(KillUnitAt(All, "40 + 1n Goliath", "Anywhere", cp))
                # (Line 131) KillUnitAt(All, "60 + 1n Siege", "Anywhere", cp);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp))
                # (Line 132) f.SkillEnd(cp);
                DoActions(KillUnitAt(All, "60 + 1n Siege", "Anywhere", cp))
                f.SkillEnd(cp)
                # (Line 133) }
                # (Line 136) }
            EUDEndIf()
            # (Line 139) }
        EUDEndIf()
        # (Line 140) }
    EUDEndIf()
