## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import Function as f;
import Function as f
# (Line 3) const s = StringBuffer();
s = _CGFW(lambda: [StringBuffer()], 1)[0]
# (Line 5) function main(cp)
# (Line 6) {
@EUDFunc
def f_main(cp):
    # (Line 7) f.HoldPosition(cp);
    f.HoldPosition(cp)
    # (Line 8) ModifyUnitShields(All, f.heroID[cp], cp, "Anywhere", 1);
    # (Line 10) MoveUnit(All, "40 + 1n Marine", cp, "Anywhere", "[Skill]HoldPosition");
    DoActions(ModifyUnitShields(All, f.heroID[cp], cp, "Anywhere", 1))
    # (Line 11) MoveUnit(All, "40 + 1n Ghost", cp, "Anywhere", "[Skill]HoldPosition");
    DoActions(MoveUnit(All, "40 + 1n Marine", cp, "Anywhere", "[Skill]HoldPosition"))
    # (Line 13) if (f.delay[cp] == 0)
    DoActions(MoveUnit(All, "40 + 1n Ghost", cp, "Anywhere", "[Skill]HoldPosition"))
    if EUDIf()(f.delay[cp] == 0):
        # (Line 14) {
        # (Line 15) if (f.count[cp] == 0)
        if EUDIf()(f.count[cp] == 0):
            # (Line 16) {
            # (Line 17) if (f.loop[cp] == 0)
            if EUDIf()(f.loop[cp] == 0):
                # (Line 18) {
                # (Line 19) SetDeaths(cp, SetTo, 1, " `ShieldRecharge");
                # (Line 20) f.SquareShape(cp, 1, "40 + 1n Mutalisk", 50, 0);
                DoActions(SetDeaths(cp, SetTo, 1, " `ShieldRecharge"))
                f.SquareShape(cp, 1, "40 + 1n Mutalisk", 50, 0)
                # (Line 21) f.SquareShape(cp, 1, "40 + 1n Mutalisk", 100, 0);
                f.SquareShape(cp, 1, "40 + 1n Mutalisk", 100, 0)
                # (Line 23) KillUnitAt(All, "40 + 1n Mutalisk", "Anywhere", cp);
                # (Line 25) f.SkillWait(cp, 80);
                DoActions(KillUnitAt(All, "40 + 1n Mutalisk", "Anywhere", cp))
                f.SkillWait(cp, 80)
                # (Line 27) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 28) }
                # (Line 29) else if (f.loop[cp] == 1)
            if EUDElseIf()(f.loop[cp] == 1):
                # (Line 30) {
                # (Line 31) f.SquareShape(cp, 1, "40 + 1n Mutalisk", 50, 50);
                f.SquareShape(cp, 1, "40 + 1n Mutalisk", 50, 50)
                # (Line 32) f.SquareShape(cp, 1, "40 + 1n Mutalisk", 100, 100);
                f.SquareShape(cp, 1, "40 + 1n Mutalisk", 100, 100)
                # (Line 34) KillUnitAt(All, "40 + 1n Mutalisk", "Anywhere", cp);
                # (Line 36) f.SkillWait(cp, 80);
                DoActions(KillUnitAt(All, "40 + 1n Mutalisk", "Anywhere", cp))
                f.SkillWait(cp, 80)
                # (Line 38) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 39) }
                # (Line 40) else if (f.loop[cp] == 2)
            if EUDElseIf()(f.loop[cp] == 2):
                # (Line 41) {
                # (Line 42) f.EdgeShape(cp, 1, "40 + 1n Guardian", 0, 5, 100);
                f.EdgeShape(cp, 1, "40 + 1n Guardian", 0, 5, 100)
                # (Line 44) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp);
                # (Line 46) f.SkillWait(cp, 80);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp))
                f.SkillWait(cp, 80)
                # (Line 48) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 49) }
                # (Line 50) else if (f.loop[cp] == 3)
            if EUDElseIf()(f.loop[cp] == 3):
                # (Line 51) {
                # (Line 52) f.EdgeShape(cp, 1, "Protoss Dark Archon", 0, 7, 150);
                f.EdgeShape(cp, 1, "Protoss Dark Archon", 0, 7, 150)
                # (Line 54) f.SquareShape(cp, 1, "40 + 1n Guardian", 200, 125);
                f.SquareShape(cp, 1, "40 + 1n Guardian", 200, 125)
                # (Line 55) f.SquareShape(cp, 1, "40 + 1n Guardian", 125, 200);
                f.SquareShape(cp, 1, "40 + 1n Guardian", 125, 200)
                # (Line 56) f.SquareShape(cp, 1, "40 + 1n Guardian", 200, 275);
                f.SquareShape(cp, 1, "40 + 1n Guardian", 200, 275)
                # (Line 57) f.SquareShape(cp, 1, "40 + 1n Guardian", 275, 200);
                f.SquareShape(cp, 1, "40 + 1n Guardian", 275, 200)
                # (Line 59) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp);
                # (Line 61) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", cp))
                # (Line 63) f.SkillWait(cp, 80);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", cp))
                f.SkillWait(cp, 80)
                # (Line 65) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 66) }
                # (Line 67) else if (f.loop[cp] == 4)
            if EUDElseIf()(f.loop[cp] == 4):
                # (Line 68) {
                # (Line 69) f.SquareShape(cp, 1, "50 + 1n Battlecruiser", 200, 125);
                f.SquareShape(cp, 1, "50 + 1n Battlecruiser", 200, 125)
                # (Line 70) f.SquareShape(cp, 1, "50 + 1n Battlecruiser", 125, 200);
                f.SquareShape(cp, 1, "50 + 1n Battlecruiser", 125, 200)
                # (Line 71) f.SquareShape(cp, 1, "50 + 1n Battlecruiser", 200, 275);
                f.SquareShape(cp, 1, "50 + 1n Battlecruiser", 200, 275)
                # (Line 72) f.SquareShape(cp, 1, "50 + 1n Battlecruiser", 275, 200);
                f.SquareShape(cp, 1, "50 + 1n Battlecruiser", 275, 200)
                # (Line 73) f.SquareShape(cp, 1, "50 + 1n Tank", 200, 125);
                f.SquareShape(cp, 1, "50 + 1n Tank", 200, 125)
                # (Line 74) f.SquareShape(cp, 1, "50 + 1n Tank", 125, 200);
                f.SquareShape(cp, 1, "50 + 1n Tank", 125, 200)
                # (Line 75) f.SquareShape(cp, 1, "50 + 1n Tank", 200, 275);
                f.SquareShape(cp, 1, "50 + 1n Tank", 200, 275)
                # (Line 76) f.SquareShape(cp, 1, "50 + 1n Tank", 275, 200);
                f.SquareShape(cp, 1, "50 + 1n Tank", 275, 200)
                # (Line 77) f.SquareShape(cp, 1, "50 + 1n Battlecruiser", 150, 0);
                f.SquareShape(cp, 1, "50 + 1n Battlecruiser", 150, 0)
                # (Line 78) f.SquareShape(cp, 1, "50 + 1n Tank", 150, 0);
                f.SquareShape(cp, 1, "50 + 1n Tank", 150, 0)
                # (Line 80) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                # (Line 81) Order("50 + 1n Battlecruiser", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 83) KillUnitAt(All, "50 + 1n Tank", "Anywhere", cp);
                DoActions(Order("50 + 1n Battlecruiser", cp, "Anywhere", Attack, f.location[cp]))
                # (Line 84) KillUnitAt(All, "40 + 1n Ghost", "Anywhere", cp);
                DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", cp))
                # (Line 86) f.SkillWait(cp, 960);
                DoActions(KillUnitAt(All, "40 + 1n Ghost", "Anywhere", cp))
                f.SkillWait(cp, 960)
                # (Line 88) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 89) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 90) }
                # (Line 91) }
            EUDEndIf()
            # (Line 92) else if (f.count[cp] == 1)
        if EUDElseIf()(f.count[cp] == 1):
            # (Line 93) {
            # (Line 94) if (f.loop[cp] < 16)
            if EUDIf()(f.loop[cp] >= 16, neg=True):
                # (Line 95) {
                # (Line 96) KillUnitAt(All, " Creep. Dunkelheit", "Anywhere", cp);
                # (Line 98) if (f.loop[cp] % 3 == 0)
                DoActions(KillUnitAt(All, " Creep. Dunkelheit", "Anywhere", cp))
                if EUDIf()(f.loop[cp] % 3 == 0):
                    # (Line 99) {
                    # (Line 100) f.EdgeShape(cp, 1, "60 + 1n High Templar", 0, 7, 150);
                    f.EdgeShape(cp, 1, "60 + 1n High Templar", 0, 7, 150)
                    # (Line 101) KillUnitAt(All, "60 + 1n High Templar", "Anywhere", cp);
                    # (Line 103) f.EdgeShape(cp, 1, "Target", 0, 5, 100);
                    DoActions(KillUnitAt(All, "60 + 1n High Templar", "Anywhere", cp))
                    f.EdgeShape(cp, 1, "Target", 0, 5, 100)
                    # (Line 104) KillUnitAt(All, "Target", "Anywhere", cp);
                    # (Line 105) }
                    DoActions(KillUnitAt(All, "Target", "Anywhere", cp))
                    # (Line 107) MoveLocation(f.location[cp], "40 + 1n Marine", cp, "Anywhere");
                EUDEndIf()
                # (Line 108) RemoveUnitAt(1, "40 + 1n Marine", "Anywhere", cp);
                DoActions(MoveLocation(f.location[cp], "40 + 1n Marine", cp, "Anywhere"))
                # (Line 110) CreateUnit(2, " Creep. Dunkelheit", "[Skill]Unit_Wait_1", cp);
                DoActions(RemoveUnitAt(1, "40 + 1n Marine", "Anywhere", cp))
                # (Line 111) CreateUnit(6, "80 + 1n Vulture", "[Skill]Unit_Wait_1", cp);
                DoActions(CreateUnit(2, " Creep. Dunkelheit", "[Skill]Unit_Wait_1", cp))
                # (Line 112) SetInvincibility(Enable, "80 + 1n Vulture", cp, "[Skill]Unit_Wait_ALL");
                DoActions(CreateUnit(6, "80 + 1n Vulture", "[Skill]Unit_Wait_1", cp))
                # (Line 113) SetInvincibility(Enable, " Creep. Dunkelheit", cp, "[Skill]Unit_Wait_ALL");
                DoActions(SetInvincibility(Enable, "80 + 1n Vulture", cp, "[Skill]Unit_Wait_ALL"))
                # (Line 114) MoveUnit(2, " Creep. Dunkelheit", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                DoActions(SetInvincibility(Enable, " Creep. Dunkelheit", cp, "[Skill]Unit_Wait_ALL"))
                # (Line 115) MoveUnit(6, "80 + 1n Vulture", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                DoActions(MoveUnit(2, " Creep. Dunkelheit", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                # (Line 116) KillUnitAt(All, "80 + 1n Vulture", "Anywhere", cp);
                DoActions(MoveUnit(6, "80 + 1n Vulture", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                # (Line 118) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                DoActions(KillUnitAt(All, "80 + 1n Vulture", "Anywhere", cp))
                # (Line 119) MoveUnit(All, " Creep. Dunkelheit", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 120) Order(" Creep. Dunkelheit", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveUnit(All, " Creep. Dunkelheit", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                # (Line 122) f.SkillWait(cp, 80);
                DoActions(Order(" Creep. Dunkelheit", cp, "Anywhere", Attack, f.location[cp]))
                f.SkillWait(cp, 80)
                # (Line 123) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 124) }
                # (Line 125) else if (f.loop[cp] == 16)
            if EUDElseIf()(f.loop[cp] == 16):
                # (Line 126) {
                # (Line 127) KillUnitAt(All, " Creep. Dunkelheit", "Anywhere", cp);
                # (Line 128) KillUnitAt(All, "80 + 1n Vulture", "Anywhere", cp);
                DoActions(KillUnitAt(All, " Creep. Dunkelheit", "Anywhere", cp))
                # (Line 129) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp);
                DoActions(KillUnitAt(All, "80 + 1n Vulture", "Anywhere", cp))
                # (Line 131) f.SkillWait(cp, 80);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp))
                f.SkillWait(cp, 80)
                # (Line 133) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 134) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 135) }
                # (Line 136) }
            EUDEndIf()
            # (Line 137) else if (f.count[cp] == 2)
        if EUDElseIf()(f.count[cp] == 2):
            # (Line 138) {
            # (Line 139) SetDeaths(cp, SetTo, 0, " `ShieldRecharge");
            # (Line 140) KillUnitAt(All, "40 + 1n Ghost", "Anywhere", cp);
            DoActions(SetDeaths(cp, SetTo, 0, " `ShieldRecharge"))
            # (Line 141) f.SkillEnd(cp);
            DoActions(KillUnitAt(All, "40 + 1n Ghost", "Anywhere", cp))
            f.SkillEnd(cp)
            # (Line 142) }
            # (Line 143) }
        EUDEndIf()
        # (Line 144) }
    EUDEndIf()
