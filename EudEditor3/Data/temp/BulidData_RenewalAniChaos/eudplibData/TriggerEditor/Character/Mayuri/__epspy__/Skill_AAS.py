## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import Function as f;
import Function as f
# (Line 3) const s = StringBuffer();
s = _CGFW(lambda: [StringBuffer()], 1)[0]
# (Line 5) function main(cp)
# (Line 6) {
@EUDFunc
def f_main(cp):
    # (Line 7) MoveLocation("23.Mayuri_Bozo", f.heroID[cp], cp, "Anywhere");
    # (Line 8) ModifyUnitShields(All, f.heroID[cp], cp, "Anywhere", 1);
    DoActions(MoveLocation("23.Mayuri_Bozo", f.heroID[cp], cp, "Anywhere"))
    # (Line 10) if (f.delay[cp] == 0)
    DoActions(ModifyUnitShields(All, f.heroID[cp], cp, "Anywhere", 1))
    if EUDIf()(f.delay[cp] == 0):
        # (Line 11) {
        # (Line 12) if (f.count[cp] == 0)
        if EUDIf()(f.count[cp] == 0):
            # (Line 13) {
            # (Line 14) if (f.loop[cp] == 0)
            if EUDIf()(f.loop[cp] == 0):
                # (Line 15) {
                # (Line 16) SetDeaths(cp, SetTo, 1, " `ShieldRecharge");
                # (Line 17) SetSwitch("Recall - Mayuri", Set);
                DoActions(SetDeaths(cp, SetTo, 1, " `ShieldRecharge"))
                # (Line 19) f.SkillWait(cp, 1600);
                DoActions(SetSwitch("Recall - Mayuri", Set))
                f.SkillWait(cp, 1600)
                # (Line 21) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 22) }
                # (Line 23) else if (f.loop[cp] == 1)
            if EUDElseIf()(f.loop[cp] == 1):
                # (Line 24) {
                # (Line 25) f.Voice_Routine(cp, 4);
                f.Voice_Routine(cp, 4)
                # (Line 27) f.SkillWait(cp, 80);
                f.SkillWait(cp, 80)
                # (Line 29) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 30) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 31) }
                # (Line 32) }
            EUDEndIf()
            # (Line 33) else if (f.count[cp] == 1)
        if EUDElseIf()(f.count[cp] == 1):
            # (Line 34) {
            # (Line 35) if (f.loop[cp] < 8)
            if EUDIf()(f.loop[cp] >= 8, neg=True):
                # (Line 36) {
                # (Line 37) KillUnitAt(All, " Creep. Dunkelheit", "Anywhere", cp);
                # (Line 39) f.DotShape(cp, 1, " Creep. Dunkelheit", 25, 175 - 50 * f.loop[cp]);
                DoActions(KillUnitAt(All, " Creep. Dunkelheit", "Anywhere", cp))
                f.DotShape(cp, 1, " Creep. Dunkelheit", 25, 175 - 50 * f.loop[cp])
                # (Line 40) f.DotShape(cp, 1, " Creep. Dunkelheit", 75, 175 - 50 * f.loop[cp]);
                f.DotShape(cp, 1, " Creep. Dunkelheit", 75, 175 - 50 * f.loop[cp])
                # (Line 41) f.DotShape(cp, 1, " Creep. Dunkelheit", 125, 175 - 50 * f.loop[cp]);
                f.DotShape(cp, 1, " Creep. Dunkelheit", 125, 175 - 50 * f.loop[cp])
                # (Line 42) f.DotShape(cp, 1, " Creep. Dunkelheit", 175, 175 - 50 * f.loop[cp]);
                f.DotShape(cp, 1, " Creep. Dunkelheit", 175, 175 - 50 * f.loop[cp])
                # (Line 43) f.DotShape(cp, 1, " Creep. Dunkelheit", -25, -175 + 50 * f.loop[cp]);
                f.DotShape(cp, 1, " Creep. Dunkelheit", -25, -175 + 50 * f.loop[cp])
                # (Line 44) f.DotShape(cp, 1, " Creep. Dunkelheit", -75, -175 + 50 * f.loop[cp]);
                f.DotShape(cp, 1, " Creep. Dunkelheit", -75, -175 + 50 * f.loop[cp])
                # (Line 45) f.DotShape(cp, 1, " Creep. Dunkelheit", -125, -175 + 50 * f.loop[cp]);
                f.DotShape(cp, 1, " Creep. Dunkelheit", -125, -175 + 50 * f.loop[cp])
                # (Line 46) f.DotShape(cp, 1, " Creep. Dunkelheit", -175, -175 + 50 * f.loop[cp]);
                f.DotShape(cp, 1, " Creep. Dunkelheit", -175, -175 + 50 * f.loop[cp])
                # (Line 48) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                # (Line 49) MoveUnit(All, " Creep. Dunkelheit", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 50) Order(" Creep. Dunkelheit", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveUnit(All, " Creep. Dunkelheit", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                # (Line 52) f.DotShape(cp, 1, "40 + 1n Mojo", 25, 175 - 50 * f.loop[cp]);
                DoActions(Order(" Creep. Dunkelheit", cp, "Anywhere", Attack, f.location[cp]))
                f.DotShape(cp, 1, "40 + 1n Mojo", 25, 175 - 50 * f.loop[cp])
                # (Line 53) f.DotShape(cp, 1, "40 + 1n Mojo", 75, 175 - 50 * f.loop[cp]);
                f.DotShape(cp, 1, "40 + 1n Mojo", 75, 175 - 50 * f.loop[cp])
                # (Line 54) f.DotShape(cp, 1, "40 + 1n Mojo", 125, 175 - 50 * f.loop[cp]);
                f.DotShape(cp, 1, "40 + 1n Mojo", 125, 175 - 50 * f.loop[cp])
                # (Line 55) f.DotShape(cp, 1, "40 + 1n Mojo", 175, 175 - 50 * f.loop[cp]);
                f.DotShape(cp, 1, "40 + 1n Mojo", 175, 175 - 50 * f.loop[cp])
                # (Line 56) f.DotShape(cp, 1, "40 + 1n Mojo", -25, -175 + 50 * f.loop[cp]);
                f.DotShape(cp, 1, "40 + 1n Mojo", -25, -175 + 50 * f.loop[cp])
                # (Line 57) f.DotShape(cp, 1, "40 + 1n Mojo", -75, -175 + 50 * f.loop[cp]);
                f.DotShape(cp, 1, "40 + 1n Mojo", -75, -175 + 50 * f.loop[cp])
                # (Line 58) f.DotShape(cp, 1, "40 + 1n Mojo", -125, -175 + 50 * f.loop[cp]);
                f.DotShape(cp, 1, "40 + 1n Mojo", -125, -175 + 50 * f.loop[cp])
                # (Line 59) f.DotShape(cp, 1, "40 + 1n Mojo", -175, -175 + 50 * f.loop[cp]);
                f.DotShape(cp, 1, "40 + 1n Mojo", -175, -175 + 50 * f.loop[cp])
                # (Line 60) f.DotShape(cp, 1, "Kakaru (Twilight)", 25, 225 - 50 * f.loop[cp]);
                f.DotShape(cp, 1, "Kakaru (Twilight)", 25, 225 - 50 * f.loop[cp])
                # (Line 61) f.DotShape(cp, 1, "Kakaru (Twilight)", 75, 225 - 50 * f.loop[cp]);
                f.DotShape(cp, 1, "Kakaru (Twilight)", 75, 225 - 50 * f.loop[cp])
                # (Line 62) f.DotShape(cp, 1, "Kakaru (Twilight)", 125, 225 - 50 * f.loop[cp]);
                f.DotShape(cp, 1, "Kakaru (Twilight)", 125, 225 - 50 * f.loop[cp])
                # (Line 63) f.DotShape(cp, 1, "Kakaru (Twilight)", 175, 225 - 50 * f.loop[cp]);
                f.DotShape(cp, 1, "Kakaru (Twilight)", 175, 225 - 50 * f.loop[cp])
                # (Line 64) f.DotShape(cp, 1, "Kakaru (Twilight)", -25, -225 + 50 * f.loop[cp]);
                f.DotShape(cp, 1, "Kakaru (Twilight)", -25, -225 + 50 * f.loop[cp])
                # (Line 65) f.DotShape(cp, 1, "Kakaru (Twilight)", -75, -225 + 50 * f.loop[cp]);
                f.DotShape(cp, 1, "Kakaru (Twilight)", -75, -225 + 50 * f.loop[cp])
                # (Line 66) f.DotShape(cp, 1, "Kakaru (Twilight)", -125, -225 + 50 * f.loop[cp]);
                f.DotShape(cp, 1, "Kakaru (Twilight)", -125, -225 + 50 * f.loop[cp])
                # (Line 67) f.DotShape(cp, 1, "Kakaru (Twilight)", -175, -225 + 50 * f.loop[cp]);
                f.DotShape(cp, 1, "Kakaru (Twilight)", -175, -225 + 50 * f.loop[cp])
                # (Line 69) KillUnitAt(All, "40 + 1n Mojo", "Anywhere", cp);
                # (Line 70) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", cp);
                DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", cp))
                # (Line 72) f.SkillWait(cp, 80);
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", cp))
                f.SkillWait(cp, 80)
                # (Line 73) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 74) }
                # (Line 75) else if (f.loop[cp] == 8)
            if EUDElseIf()(f.loop[cp] == 8):
                # (Line 76) {
                # (Line 77) KillUnitAt(All, " Creep. Dunkelheit", "Anywhere", cp);
                # (Line 79) f.SkillWait(cp, 1040);
                DoActions(KillUnitAt(All, " Creep. Dunkelheit", "Anywhere", cp))
                f.SkillWait(cp, 1040)
                # (Line 81) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 82) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 83) }
                # (Line 84) }
            EUDEndIf()
            # (Line 85) else if (f.count[cp] == 2)
        if EUDElseIf()(f.count[cp] == 2):
            # (Line 86) {
            # (Line 87) if (f.loop[cp] < 8)
            if EUDIf()(f.loop[cp] >= 8, neg=True):
                # (Line 88) {
                # (Line 89) KillUnitAt(All, " Creep. Dunkelheit", "Anywhere", cp);
                # (Line 91) f.DotShape(cp, 1, " Creep. Dunkelheit", 175 - 50 * f.loop[cp], 25);
                DoActions(KillUnitAt(All, " Creep. Dunkelheit", "Anywhere", cp))
                f.DotShape(cp, 1, " Creep. Dunkelheit", 175 - 50 * f.loop[cp], 25)
                # (Line 92) f.DotShape(cp, 1, " Creep. Dunkelheit", 175 - 50 * f.loop[cp], 75);
                f.DotShape(cp, 1, " Creep. Dunkelheit", 175 - 50 * f.loop[cp], 75)
                # (Line 93) f.DotShape(cp, 1, " Creep. Dunkelheit", 175 - 50 * f.loop[cp], 125);
                f.DotShape(cp, 1, " Creep. Dunkelheit", 175 - 50 * f.loop[cp], 125)
                # (Line 94) f.DotShape(cp, 1, " Creep. Dunkelheit", 175 - 50 * f.loop[cp], 175);
                f.DotShape(cp, 1, " Creep. Dunkelheit", 175 - 50 * f.loop[cp], 175)
                # (Line 95) f.DotShape(cp, 1, " Creep. Dunkelheit", -175 + 50 * f.loop[cp], -25);
                f.DotShape(cp, 1, " Creep. Dunkelheit", -175 + 50 * f.loop[cp], -25)
                # (Line 96) f.DotShape(cp, 1, " Creep. Dunkelheit", -175 + 50 * f.loop[cp], -75);
                f.DotShape(cp, 1, " Creep. Dunkelheit", -175 + 50 * f.loop[cp], -75)
                # (Line 97) f.DotShape(cp, 1, " Creep. Dunkelheit", -175 + 50 * f.loop[cp], -125);
                f.DotShape(cp, 1, " Creep. Dunkelheit", -175 + 50 * f.loop[cp], -125)
                # (Line 98) f.DotShape(cp, 1, " Creep. Dunkelheit", -175 + 50 * f.loop[cp], -175);
                f.DotShape(cp, 1, " Creep. Dunkelheit", -175 + 50 * f.loop[cp], -175)
                # (Line 100) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                # (Line 101) MoveUnit(All, " Creep. Dunkelheit", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 102) Order(" Creep. Dunkelheit", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveUnit(All, " Creep. Dunkelheit", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                # (Line 104) f.DotShape(cp, 1, "40 + 1n Mojo", 175 - 50 * f.loop[cp], 25);
                DoActions(Order(" Creep. Dunkelheit", cp, "Anywhere", Attack, f.location[cp]))
                f.DotShape(cp, 1, "40 + 1n Mojo", 175 - 50 * f.loop[cp], 25)
                # (Line 105) f.DotShape(cp, 1, "40 + 1n Mojo", 175 - 50 * f.loop[cp], 75);
                f.DotShape(cp, 1, "40 + 1n Mojo", 175 - 50 * f.loop[cp], 75)
                # (Line 106) f.DotShape(cp, 1, "40 + 1n Mojo", 175 - 50 * f.loop[cp], 125);
                f.DotShape(cp, 1, "40 + 1n Mojo", 175 - 50 * f.loop[cp], 125)
                # (Line 107) f.DotShape(cp, 1, "40 + 1n Mojo", 175 - 50 * f.loop[cp], 175);
                f.DotShape(cp, 1, "40 + 1n Mojo", 175 - 50 * f.loop[cp], 175)
                # (Line 108) f.DotShape(cp, 1, "40 + 1n Mojo", -175 + 50 * f.loop[cp], -25);
                f.DotShape(cp, 1, "40 + 1n Mojo", -175 + 50 * f.loop[cp], -25)
                # (Line 109) f.DotShape(cp, 1, "40 + 1n Mojo", -175 + 50 * f.loop[cp], -75);
                f.DotShape(cp, 1, "40 + 1n Mojo", -175 + 50 * f.loop[cp], -75)
                # (Line 110) f.DotShape(cp, 1, "40 + 1n Mojo", -175 + 50 * f.loop[cp], -125);
                f.DotShape(cp, 1, "40 + 1n Mojo", -175 + 50 * f.loop[cp], -125)
                # (Line 111) f.DotShape(cp, 1, "40 + 1n Mojo", -175 + 50 * f.loop[cp], -175);
                f.DotShape(cp, 1, "40 + 1n Mojo", -175 + 50 * f.loop[cp], -175)
                # (Line 112) f.DotShape(cp, 1, "Kakaru (Twilight)", 175 - 50 * f.loop[cp], 25);
                f.DotShape(cp, 1, "Kakaru (Twilight)", 175 - 50 * f.loop[cp], 25)
                # (Line 113) f.DotShape(cp, 1, "Kakaru (Twilight)", 175 - 50 * f.loop[cp], 75);
                f.DotShape(cp, 1, "Kakaru (Twilight)", 175 - 50 * f.loop[cp], 75)
                # (Line 114) f.DotShape(cp, 1, "Kakaru (Twilight)", 175 - 50 * f.loop[cp], 125);
                f.DotShape(cp, 1, "Kakaru (Twilight)", 175 - 50 * f.loop[cp], 125)
                # (Line 115) f.DotShape(cp, 1, "Kakaru (Twilight)", 175 - 50 * f.loop[cp], 175);
                f.DotShape(cp, 1, "Kakaru (Twilight)", 175 - 50 * f.loop[cp], 175)
                # (Line 116) f.DotShape(cp, 1, "Kakaru (Twilight)", -175 + 50 * f.loop[cp], -25);
                f.DotShape(cp, 1, "Kakaru (Twilight)", -175 + 50 * f.loop[cp], -25)
                # (Line 117) f.DotShape(cp, 1, "Kakaru (Twilight)", -175 + 50 * f.loop[cp], -75);
                f.DotShape(cp, 1, "Kakaru (Twilight)", -175 + 50 * f.loop[cp], -75)
                # (Line 118) f.DotShape(cp, 1, "Kakaru (Twilight)", -175 + 50 * f.loop[cp], -125);
                f.DotShape(cp, 1, "Kakaru (Twilight)", -175 + 50 * f.loop[cp], -125)
                # (Line 119) f.DotShape(cp, 1, "Kakaru (Twilight)", -175 + 50 * f.loop[cp], -175);
                f.DotShape(cp, 1, "Kakaru (Twilight)", -175 + 50 * f.loop[cp], -175)
                # (Line 121) KillUnitAt(All, "40 + 1n Mojo", "Anywhere", cp);
                # (Line 122) KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", cp);
                DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", cp))
                # (Line 124) f.SkillWait(cp, 80);
                DoActions(KillUnitAt(All, "Kakaru (Twilight)", "Anywhere", cp))
                f.SkillWait(cp, 80)
                # (Line 125) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 126) }
                # (Line 127) else if (f.loop[cp] == 8)
            if EUDElseIf()(f.loop[cp] == 8):
                # (Line 128) {
                # (Line 129) KillUnitAt(All, " Creep. Dunkelheit", "Anywhere", cp);
                # (Line 131) f.SkillWait(cp, 80);
                DoActions(KillUnitAt(All, " Creep. Dunkelheit", "Anywhere", cp))
                f.SkillWait(cp, 80)
                # (Line 133) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 134) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 135) }
                # (Line 136) }
            EUDEndIf()
            # (Line 137) else if (f.count[cp] == 3)
        if EUDElseIf()(f.count[cp] == 3):
            # (Line 138) {
            # (Line 139) SetSwitch("Recall - Mayuri", Clear);
            # (Line 140) SetDeaths(cp, SetTo, 0, " `ShieldRecharge");
            DoActions(SetSwitch("Recall - Mayuri", Clear))
            # (Line 141) f.SkillEnd(cp);
            DoActions(SetDeaths(cp, SetTo, 0, " `ShieldRecharge"))
            f.SkillEnd(cp)
            # (Line 142) }
            # (Line 143) }
        EUDEndIf()
        # (Line 144) }
    EUDEndIf()
