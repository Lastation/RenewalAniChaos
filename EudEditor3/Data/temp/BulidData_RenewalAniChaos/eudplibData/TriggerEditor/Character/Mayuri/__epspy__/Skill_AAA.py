## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import Function as f;
import Function as f
# (Line 3) function main(cp)
# (Line 4) {
@EUDFunc
def f_main(cp):
    # (Line 5) MoveUnit(All, "50 + 1n Battlecruiser", cp, "Anywhere", "[Skill]HoldPosition");
    # (Line 6) ModifyUnitShields(All, f.heroID[cp], cp, "Anywhere", 1);
    DoActions(MoveUnit(All, "50 + 1n Battlecruiser", cp, "Anywhere", "[Skill]HoldPosition"))
    # (Line 8) if (f.count[cp] < 2)
    DoActions(ModifyUnitShields(All, f.heroID[cp], cp, "Anywhere", 1))
    if EUDIf()(f.count[cp] >= 2, neg=True):
        # (Line 9) {
        # (Line 10) SetAllianceStatus(P7, Ally);
        # (Line 11) SetAllianceStatus(P8, Ally);
        DoActions(SetAllianceStatus(P7, Ally))
        # (Line 12) }
        DoActions(SetAllianceStatus(P8, Ally))
        # (Line 14) if (f.delay[cp] == 0)
    EUDEndIf()
    if EUDIf()(f.delay[cp] == 0):
        # (Line 15) {
        # (Line 16) if (f.count[cp] == 0)
        if EUDIf()(f.count[cp] == 0):
            # (Line 17) {
            # (Line 18) if (f.loop[cp] < 12)
            if EUDIf()(f.loop[cp] >= 12, neg=True):
                # (Line 19) {
                # (Line 20) SetSwitch("ComputerAlliy", Set);
                # (Line 22) SetDeaths(cp, SetTo, 1, " `ShieldRecharge");
                DoActions(SetSwitch("ComputerAlliy", Set))
                # (Line 24) KillUnitAt(All, "80 + 1n Vulture", "Anywhere", cp);
                DoActions(SetDeaths(cp, SetTo, 1, " `ShieldRecharge"))
                # (Line 26) f.Table_Sin(cp, (30 * f.loop[cp]), 160);
                DoActions(KillUnitAt(All, "80 + 1n Vulture", "Anywhere", cp))
                f.Table_Sin(cp, (30 * f.loop[cp]), 160)
                # (Line 27) f.Table_Cos(cp, (30 * f.loop[cp]), 160);
                f.Table_Cos(cp, (30 * f.loop[cp]), 160)
                # (Line 29) f.SquareShape(cp, 1, "60 + 3n Siege", 120 + f.CosAngle[cp], 120 + f.SinAngle[cp]);
                f.SquareShape(cp, 1, "60 + 3n Siege", 120 + f.CosAngle[cp], 120 + f.SinAngle[cp])
                # (Line 30) f.SquareShape(cp, 16, "80 + 1n Vulture", 120 + f.CosAngle[cp], 120 + f.SinAngle[cp]);
                f.SquareShape(cp, 16, "80 + 1n Vulture", 120 + f.CosAngle[cp], 120 + f.SinAngle[cp])
                # (Line 31) GiveUnits(All, "60 + 3n Siege", cp, "Anywhere", P9);
                # (Line 33) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                DoActions(GiveUnits(All, "60 + 3n Siege", cp, "Anywhere", P9))
                # (Line 34) MoveUnit(All, "80 + 1n Vulture", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 35) Order("80 + 1n Vulture", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveUnit(All, "80 + 1n Vulture", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                # (Line 37) f.SkillWait(cp, 80);
                DoActions(Order("80 + 1n Vulture", cp, "Anywhere", Attack, f.location[cp]))
                f.SkillWait(cp, 80)
                # (Line 39) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 40) }
                # (Line 41) else if (f.loop[cp] == 12)
            if EUDElseIf()(f.loop[cp] == 12):
                # (Line 42) {
                # (Line 43) KillUnitAt(All, "80 + 1n Vulture", "Anywhere", cp);
                # (Line 45) f.SkillWait(cp, 640);
                DoActions(KillUnitAt(All, "80 + 1n Vulture", "Anywhere", cp))
                f.SkillWait(cp, 640)
                # (Line 47) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 48) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 49) }
                # (Line 50) }
            EUDEndIf()
            # (Line 51) else if (f.count[cp] == 1)
        if EUDElseIf()(f.count[cp] == 1):
            # (Line 52) {
            # (Line 53) if (f.loop[cp] < 12)
            if EUDIf()(f.loop[cp] >= 12, neg=True):
                # (Line 54) {
                # (Line 55) KillUnitAt(All, "80 + 1n Vulture", "Anywhere", cp);
                # (Line 57) f.Table_Sin(cp, (30 * f.loop[cp]), 160);
                DoActions(KillUnitAt(All, "80 + 1n Vulture", "Anywhere", cp))
                f.Table_Sin(cp, (30 * f.loop[cp]), 160)
                # (Line 58) f.Table_Cos(cp, (30 * f.loop[cp]), 160);
                f.Table_Cos(cp, (30 * f.loop[cp]), 160)
                # (Line 60) f.SquareShape(cp, 1, "60 + 3n Siege", 160 + f.CosAngle[cp], f.SinAngle[cp]);
                f.SquareShape(cp, 1, "60 + 3n Siege", 160 + f.CosAngle[cp], f.SinAngle[cp])
                # (Line 61) f.SquareShape(cp, 16, "80 + 1n Vulture", 160 + f.CosAngle[cp], f.SinAngle[cp]);
                f.SquareShape(cp, 16, "80 + 1n Vulture", 160 + f.CosAngle[cp], f.SinAngle[cp])
                # (Line 62) GiveUnits(All, "60 + 3n Siege", cp, "Anywhere", P9);
                # (Line 64) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                DoActions(GiveUnits(All, "60 + 3n Siege", cp, "Anywhere", P9))
                # (Line 65) MoveUnit(All, "80 + 1n Vulture", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 66) Order("80 + 1n Vulture", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveUnit(All, "80 + 1n Vulture", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                # (Line 68) f.SkillWait(cp, 80);
                DoActions(Order("80 + 1n Vulture", cp, "Anywhere", Attack, f.location[cp]))
                f.SkillWait(cp, 80)
                # (Line 70) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 71) }
                # (Line 72) else if (f.loop[cp] == 12)
            if EUDElseIf()(f.loop[cp] == 12):
                # (Line 73) {
                # (Line 74) KillUnitAt(All, "80 + 1n Vulture", "Anywhere", cp);
                # (Line 76) f.SkillWait(cp, 560);
                DoActions(KillUnitAt(All, "80 + 1n Vulture", "Anywhere", cp))
                f.SkillWait(cp, 560)
                # (Line 78) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 79) }
                # (Line 80) else if (f.loop[cp] == 13)
            if EUDElseIf()(f.loop[cp] == 13):
                # (Line 81) {
                # (Line 82) f.Voice_Routine(cp, 11);
                f.Voice_Routine(cp, 11)
                # (Line 84) f.SkillWait(cp, 80);
                f.SkillWait(cp, 80)
                # (Line 86) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 87) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 88) }
                # (Line 90) }
            EUDEndIf()
            # (Line 91) else if (f.count[cp] == 2)
        if EUDElseIf()(f.count[cp] == 2):
            # (Line 92) {
            # (Line 93) if (f.loop[cp] < 12)
            if EUDIf()(f.loop[cp] >= 12, neg=True):
                # (Line 94) {
                # (Line 95) SetSwitch("ComputerAlliy", Clear);
                # (Line 97) if (cp < 3)
                DoActions(SetSwitch("ComputerAlliy", Clear))
                if EUDIf()(cp >= 3, neg=True):
                    # (Line 98) {
                    # (Line 99) SetAllianceStatus(P8, Enemy);
                    # (Line 100) }
                    DoActions(SetAllianceStatus(P8, Enemy))
                    # (Line 101) else
                    # (Line 102) {
                if EUDElse()():
                    # (Line 103) SetAllianceStatus(P7, Enemy);
                    # (Line 104) }
                    DoActions(SetAllianceStatus(P7, Enemy))
                    # (Line 106) KillUnitAt(All, "80 + 1n Vulture", "Anywhere", cp);
                EUDEndIf()
                # (Line 108) f.Table_Sin(cp, (30 * f.loop[cp]), 160);
                DoActions(KillUnitAt(All, "80 + 1n Vulture", "Anywhere", cp))
                f.Table_Sin(cp, (30 * f.loop[cp]), 160)
                # (Line 109) f.Table_Cos(cp, (30 * f.loop[cp]), 160);
                f.Table_Cos(cp, (30 * f.loop[cp]), 160)
                # (Line 111) f.SquareShape(cp, 1, "50 + 1n Battlecruiser", 120 + f.CosAngle[cp], 120 + f.SinAngle[cp]);
                f.SquareShape(cp, 1, "50 + 1n Battlecruiser", 120 + f.CosAngle[cp], 120 + f.SinAngle[cp])
                # (Line 112) f.SquareShape(cp, 8, "80 + 1n Vulture", 120 + f.CosAngle[cp], 120 + f.SinAngle[cp]);
                f.SquareShape(cp, 8, "80 + 1n Vulture", 120 + f.CosAngle[cp], 120 + f.SinAngle[cp])
                # (Line 114) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                # (Line 115) MoveUnit(All, "80 + 1n Vulture", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 116) Order("80 + 1n Vulture", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveUnit(All, "80 + 1n Vulture", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                # (Line 117) Order("50 + 1n Battlecruiser", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(Order("80 + 1n Vulture", cp, "Anywhere", Attack, f.location[cp]))
                # (Line 119) f.SkillWait(cp, 80);
                DoActions(Order("50 + 1n Battlecruiser", cp, "Anywhere", Attack, f.location[cp]))
                f.SkillWait(cp, 80)
                # (Line 121) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 122) }
                # (Line 123) else if (f.loop[cp] == 12)
            if EUDElseIf()(f.loop[cp] == 12):
                # (Line 124) {
                # (Line 125) KillUnitAt(All, "80 + 1n Vulture", "Anywhere", cp);
                # (Line 127) f.SkillWait(cp, 1760);
                DoActions(KillUnitAt(All, "80 + 1n Vulture", "Anywhere", cp))
                f.SkillWait(cp, 1760)
                # (Line 129) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 130) }
                # (Line 131) else if (f.loop[cp] == 13)
            if EUDElseIf()(f.loop[cp] == 13):
                # (Line 132) {
                # (Line 133) f.Voice_Routine(cp, 12);
                f.Voice_Routine(cp, 12)
                # (Line 135) f.SkillWait(cp, 80);
                f.SkillWait(cp, 80)
                # (Line 137) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 138) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 139) }
                # (Line 140) }
            EUDEndIf()
            # (Line 141) else if (f.count[cp] == 3)
        if EUDElseIf()(f.count[cp] == 3):
            # (Line 142) {
            # (Line 143) if (f.loop[cp] < 12)
            if EUDIf()(f.loop[cp] >= 12, neg=True):
                # (Line 144) {
                # (Line 145) KillUnitAt(All, "80 + 1n Vulture", "Anywhere", cp);
                # (Line 147) f.Table_Sin(cp, (30 * f.loop[cp]), 160);
                DoActions(KillUnitAt(All, "80 + 1n Vulture", "Anywhere", cp))
                f.Table_Sin(cp, (30 * f.loop[cp]), 160)
                # (Line 148) f.Table_Cos(cp, (30 * f.loop[cp]), 160);
                f.Table_Cos(cp, (30 * f.loop[cp]), 160)
                # (Line 150) f.SquareShape(cp, 1, "50 + 1n Battlecruiser", 160 + f.CosAngle[cp], f.SinAngle[cp]);
                f.SquareShape(cp, 1, "50 + 1n Battlecruiser", 160 + f.CosAngle[cp], f.SinAngle[cp])
                # (Line 151) f.SquareShape(cp, 8, "80 + 1n Vulture", 160 + f.CosAngle[cp], f.SinAngle[cp]);
                f.SquareShape(cp, 8, "80 + 1n Vulture", 160 + f.CosAngle[cp], f.SinAngle[cp])
                # (Line 153) MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere");
                # (Line 154) MoveUnit(All, "80 + 1n Vulture", cp, "[Skill]Unit_Wait_ALL", f.location[cp]);
                DoActions(MoveLocation(f.location[cp], f.heroID[cp], cp, "Anywhere"))
                # (Line 155) Order("80 + 1n Vulture", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(MoveUnit(All, "80 + 1n Vulture", cp, "[Skill]Unit_Wait_ALL", f.location[cp]))
                # (Line 156) Order("50 + 1n Battlecruiser", cp, "Anywhere", Attack, f.location[cp]);
                DoActions(Order("80 + 1n Vulture", cp, "Anywhere", Attack, f.location[cp]))
                # (Line 158) f.SkillWait(cp, 80);
                DoActions(Order("50 + 1n Battlecruiser", cp, "Anywhere", Attack, f.location[cp]))
                f.SkillWait(cp, 80)
                # (Line 160) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 161) }
                # (Line 162) else if (f.loop[cp] == 12)
            if EUDElseIf()(f.loop[cp] == 12):
                # (Line 163) {
                # (Line 164) KillUnitAt(All, "80 + 1n Vulture", "Anywhere", cp);
                # (Line 166) f.SkillWait(cp, 560);
                DoActions(KillUnitAt(All, "80 + 1n Vulture", "Anywhere", cp))
                f.SkillWait(cp, 560)
                # (Line 168) f.loop[cp] += 1;
                _ARRW(f.loop, cp).__iadd__(1)
                # (Line 169) }
                # (Line 170) else if (f.loop[cp] == 13)
            if EUDElseIf()(f.loop[cp] == 13):
                # (Line 171) {
                # (Line 172) f.SkillWait(cp, 1440);
                f.SkillWait(cp, 1440)
                # (Line 174) f.count[cp] += 1;
                _ARRW(f.count, cp).__iadd__(1)
                # (Line 175) f.loop[cp] = 0;
                _ARRW(f.loop, cp) << (0)
                # (Line 176) }
                # (Line 178) }
            EUDEndIf()
            # (Line 179) else if (f.count[cp] == 4)
        if EUDElseIf()(f.count[cp] == 4):
            # (Line 180) {
            # (Line 181) if (Bring(cp, AtLeast, 2, "Protoss Arbiter", "[Skill]UseSkill")
            _t20 = EUDIf()
            # (Line 182) && Deaths(cp, AtLeast, f.UltimateB[cp], " `UltimateCoolTime"))
            if _t20(EUDSCAnd()(Bring(cp, AtLeast, 2, "Protoss Arbiter", "[Skill]UseSkill"))(Deaths(cp, AtLeast, f.UltimateB[cp], " `UltimateCoolTime"))()):
                # (Line 183) {
                # (Line 184) if (Switch("UiltimateSwitch", Cleared))
                if EUDIf()(Switch("UiltimateSwitch", Cleared)):
                    # (Line 185) {
                    # (Line 186) SetSwitch("UiltimateSwitch", Set);
                    # (Line 187) f.Voice_Routine(cp, 13);
                    DoActions(SetSwitch("UiltimateSwitch", Set))
                    f.Voice_Routine(cp, 13)
                    # (Line 188) CreateUnit(1, " Item. Flag", "[Uiltimate]Flag", CurrentPlayer);
                    # (Line 189) f.wait[cp] = 0;
                    DoActions(CreateUnit(1, " Item. Flag", "[Uiltimate]Flag", CurrentPlayer))
                    _ARRW(f.wait, cp) << (0)
                    # (Line 190) f.count[cp] = 0;
                    _ARRW(f.count, cp) << (0)
                    # (Line 191) f.loop[cp] = 0;
                    _ARRW(f.loop, cp) << (0)
                    # (Line 192) f.step[cp] = 330;
                    _ARRW(f.step, cp) << (330)
                    # (Line 193) SetDeaths(cp, Subtract, f.UltimateB[cp], " `UltimateCoolTime");
                    # (Line 194) KillUnitAt(2, "Protoss Arbiter", "[Skill]UseSkill", cp);
                    DoActions(SetDeaths(cp, Subtract, f.UltimateB[cp], " `UltimateCoolTime"))
                    # (Line 195) }
                    DoActions(KillUnitAt(2, "Protoss Arbiter", "[Skill]UseSkill", cp))
                    # (Line 196) else
                    # (Line 197) {
                if EUDElse()():
                    # (Line 198) SetResources(CurrentPlayer, Add, 600, Gas);
                    # (Line 199) KillUnitAt(2, "Protoss Arbiter", "[Skill]UseSkill", cp);
                    DoActions(SetResources(CurrentPlayer, Add, 600, Gas))
                    # (Line 200) SetDeaths(CurrentPlayer, SetTo, 999, " `SYSTEMTEXT");
                    DoActions(KillUnitAt(2, "Protoss Arbiter", "[Skill]UseSkill", cp))
                    # (Line 201) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp);
                    DoActions(SetDeaths(CurrentPlayer, SetTo, 999, " `SYSTEMTEXT"))
                    # (Line 202) KillUnitAt(All, "60 + 3n Siege", "Anywhere", P9);
                    DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp))
                    # (Line 203) SetDeaths(cp, SetTo, 0, " `ShieldRecharge");
                    DoActions(KillUnitAt(All, "60 + 3n Siege", "Anywhere", P9))
                    # (Line 204) f.SkillEnd(cp);
                    DoActions(SetDeaths(cp, SetTo, 0, " `ShieldRecharge"))
                    f.SkillEnd(cp)
                    # (Line 205) }
                    # (Line 206) }
                EUDEndIf()
                # (Line 207) else
                # (Line 208) {
            if EUDElse()():
                # (Line 209) SetDeaths(cp, SetTo, 0, " `ShieldRecharge");
                # (Line 210) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp);
                DoActions(SetDeaths(cp, SetTo, 0, " `ShieldRecharge"))
                # (Line 211) KillUnitAt(All, "60 + 3n Siege", "Anywhere", P9);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", cp))
                # (Line 212) f.SkillEnd(cp);
                DoActions(KillUnitAt(All, "60 + 3n Siege", "Anywhere", P9))
                f.SkillEnd(cp)
                # (Line 213) }
                # (Line 217) }
            EUDEndIf()
            # (Line 218) }
        EUDEndIf()
        # (Line 219) }
    EUDEndIf()
