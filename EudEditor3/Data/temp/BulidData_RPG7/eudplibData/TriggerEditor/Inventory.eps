import Variables as v;
import Main as m;
import Function as func;

const s = StringBuffer(1000);
const InvenName = EUDArray(21*6);
const InvenAmount = EUDArray(21*6);
const InvenPage = PVariable();
const InvenSlot = PVariable();
const num = PVariable();
const UseItem = PVariable();

function Select(num);
function Back();

function beforeTriggerExec() {
	EUDPlayerLoop()();
		if(Deaths(CurrentPlayer, Exactly, 1, "Terran Dropship"))
		{
			if(v.isInventory[getcurpl()] == 0)
			{
				v.isInventory[getcurpl()] = 1;
				InvenPage[getcurpl()] = 1;
				InvenSlot[getcurpl()] = 1;
				break;
			}
			else if(v.isInventory[getcurpl()] == 1)
			{
				func.CloseInven();
				break;
			}
		}
		
		if(v.isInventory[getcurpl()] == 1)
		{
			if(InvenPage[getcurpl()] == 1) num[getcurpl()] = 0;
			else if(InvenPage[getcurpl()] == 2) num[getcurpl()] = 7;
			else if(InvenPage[getcurpl()] == 3) num[getcurpl()] = 14;
			// 좌우 {
			if(Deaths(CurrentPlayer, Exactly, 2, "Terran Dropship"))
			{
				if(InvenPage[getcurpl()] > 1) InvenPage[getcurpl()] -= 1;
			}
			else if(Deaths(CurrentPlayer, Exactly, 4, "Terran Dropship"))
			{
				if(InvenPage[getcurpl()] < 3) InvenPage[getcurpl()] += 1;
			}//}
			// 텍스트 {
			if(UseItem[getcurpl()] == 0)
			{
				s.printAt(0, "\x13\x07◀  [Z]   \x04INVENTORY [", InvenPage[getcurpl()], ' / 3 ]   \x07▶  [X]');
				//s.printAt(1, ' ');
				s.printAt(1, '\x13\x0f[2]  \x04', ptr2s(InvenName[21 * getcurpl() + num[getcurpl()]]), " \x04: ", InvenAmount[21 * getcurpl() + num[getcurpl()]], " \x04개");
				s.printAt(2, '\x13\x0f[3]  \x04', ptr2s(InvenName[21 * getcurpl() + num[getcurpl()] + 1]), " \x04: ", InvenAmount[21 * getcurpl() + num[getcurpl()] + 1], " \x04개");
				s.printAt(3, '\x13\x0f[4]  \x04', ptr2s(InvenName[21 * getcurpl() + num[getcurpl()] + 2]), " \x04: ", InvenAmount[21 * getcurpl() + num[getcurpl()] + 2], " \x04개");
				s.printAt(4, '\x13\x0f[5]  \x04', ptr2s(InvenName[21 * getcurpl() + num[getcurpl()] + 3]), " \x04: ", InvenAmount[21 * getcurpl() + num[getcurpl()] + 3], " \x04개");
				s.printAt(5, '\x13\x0f[6]  \x04', ptr2s(InvenName[21 * getcurpl() + num[getcurpl()] + 4]), " \x04: ", InvenAmount[21 * getcurpl() + num[getcurpl()] + 4], " \x04개");
				s.printAt(6, '\x13\x0f[7]  \x04', ptr2s(InvenName[21 * getcurpl() + num[getcurpl()] + 5]), " \x04: ", InvenAmount[21 * getcurpl() + num[getcurpl()] + 5], " \x04개");
				s.printAt(7, '\x13\x0f[8]  \x04', ptr2s(InvenName[21 * getcurpl() + num[getcurpl()] + 6]), " \x04: ", InvenAmount[21 * getcurpl() + num[getcurpl()] + 6], " \x04개");
				
				if(Deaths(CurrentPlayer, AtLeast, 2, "Cave") && Deaths(CurrentPlayer, AtMost, 8, "Cave"))
				{
					func.TextClear();
					Select(dwread_epd(179 * 12 + getcurpl()) + num[getcurpl()] - 2);
				}
			}
			//}
			
			// 원목 {
			switch(UseItem[getcurpl()])
			{
				case 1: // 원목
					s.printAt(0, "\x13\x16[ ", v.UnsawnTimber.name," ]");
					s.printAt(1, " ");
					s.printAt(2, "\x13\x0F", v.UnsawnTimber.content);
					s.printAt(3, "\x13\x04수량 : ", v.ITEM_UnsawnTimber[getcurpl()]);
					s.printAt(4, " ");
					s.printAt(5, "\x13\x07[2] \x04버리기");
					s.printAt(6, "\x13\x07[3] \x04뒤로가기");
					if(Deaths(CurrentPlayer, Exactly, 2, "Cave")) func.RemoveItem(v.UnsawnTimber.name, 1);
					if(Deaths(CurrentPlayer, Exactly, 3, "Cave")) Back();
					break;
				case 2: // 목재
					s.printAt(0, "\x13\x16[ ", v.Timber.name," ]");
					s.printAt(1, " ");
					s.printAt(2, "\x13\x0F", v.Timber.content);
					s.printAt(3, "\x13\x04수량 : ", v.ITEM_Timber[getcurpl()]);
					s.printAt(4, " ");
					s.printAt(5, "\x13\x07[2] \x04버리기");
					s.printAt(6, "\x13\x07[3] \x04뒤로가기");
					if(Deaths(CurrentPlayer, Exactly, 2, "Cave")) func.RemoveItem(v.Timber.name, 1);
					if(Deaths(CurrentPlayer, Exactly, 3, "Cave")) Back();
					break;
				case 3: // 철광석
					s.printAt(0, "\x13\x16[ ", v.IronOre.name," ]");
					s.printAt(1, " ");
					s.printAt(2, "\x13\x0F", v.IronOre.content);
					s.printAt(3, "\x13\x04수량 : ", v.ITEM_IronOre[getcurpl()]);
					s.printAt(4, " ");
					s.printAt(5, "\x13\x07[2] \x04버리기");
					s.printAt(6, "\x13\x07[3] \x04뒤로가기");
					if(Deaths(CurrentPlayer, Exactly, 2, "Cave")) func.RemoveItem(v.IronOre.name, 1);
					if(Deaths(CurrentPlayer, Exactly, 3, "Cave")) Back();
					break;
				case 4: // HP 포션 1
					s.printAt(0, "\x13\x16[ ", v.HPPotion1.name," ]");
					s.printAt(1, " ");
					s.printAt(2, "\x13\x0F", v.HPPotion1.content);
					s.printAt(3, "\x13\x04수량 : ", v.ITEM_HPPotion1[getcurpl()]);
					s.printAt(4, " ");
					s.printAt(5, "\x13\x07[2] \x04버리기");
					s.printAt(6, "\x13\x07[3] \x04뒤로가기");
					if(Deaths(CurrentPlayer, Exactly, 2, "Cave")) func.RemoveItem(v.HPPotion1.name, 1);
					if(Deaths(CurrentPlayer, Exactly, 3, "Cave")) Back();
					break;
				case 5: // HP 포션 2
					s.printAt(0, "\x13\x16[ ", v.HPPotion2.name," ]");
					s.printAt(1, " ");
					s.printAt(2, "\x13\x0F", v.HPPotion2.content);
					s.printAt(3, "\x13\x04수량 : ", v.ITEM_HPPotion2[getcurpl()]);
					s.printAt(4, " ");
					s.printAt(5, "\x13\x07[2] \x04버리기");
					s.printAt(6, "\x13\x07[3] \x04뒤로가기");
					if(Deaths(CurrentPlayer, Exactly, 2, "Cave")) func.RemoveItem(v.HPPotion2.name, 1);
					if(Deaths(CurrentPlayer, Exactly, 3, "Cave")) Back();
					break;
				case 6: // HP 포션 3
					s.printAt(0, "\x13\x16[ ", v.HPPotion3.name," ]");
					s.printAt(1, " ");
					s.printAt(2, "\x13\x0F", v.HPPotion3.content);
					s.printAt(3, "\x13\x04수량 : ", v.ITEM_HPPotion3[getcurpl()]);
					s.printAt(4, " ");
					s.printAt(5, "\x13\x07[2] \x04버리기");
					s.printAt(6, "\x13\x07[3] \x04뒤로가기");
					if(Deaths(CurrentPlayer, Exactly, 2, "Cave")) func.RemoveItem(v.HPPotion3.name, 1);
					if(Deaths(CurrentPlayer, Exactly, 3, "Cave")) Back();
					break;
				case 7: // HP 포션 4
					s.printAt(0, "\x13\x16[ ", v.HPPotion4.name," ]");
					s.printAt(1, " ");
					s.printAt(2, "\x13\x0F", v.HPPotion4.content);
					s.printAt(3, "\x13\x04수량 : ", v.ITEM_HPPotion4[getcurpl()]);
					s.printAt(4, " ");
					s.printAt(5, "\x13\x07[2] \x04버리기");
					s.printAt(6, "\x13\x07[3] \x04뒤로가기");
					if(Deaths(CurrentPlayer, Exactly, 2, "Cave")) func.RemoveItem(v.HPPotion4.name, 1);
					if(Deaths(CurrentPlayer, Exactly, 3, "Cave")) Back();
					break;
				case 8: // HP 포션 5
					s.printAt(0, "\x13\x16[ ", v.HPPotion5.name," ]");
					s.printAt(1, " ");
					s.printAt(2, "\x13\x0F", v.HPPotion5.content);
					s.printAt(3, "\x13\x04수량 : ", v.ITEM_HPPotion5[getcurpl()]);
					s.printAt(4, " ");
					s.printAt(5, "\x13\x07[2] \x04버리기");
					s.printAt(6, "\x13\x07[3] \x04뒤로가기");
					if(Deaths(CurrentPlayer, Exactly, 2, "Cave")) func.RemoveItem(v.HPPotion5.name, 1);
					if(Deaths(CurrentPlayer, Exactly, 3, "Cave")) Back();
					break;
				case 9: // 고블린의 이빨
					s.printAt(0, "\x13\x16[ ", v.GoblinTooth.name," ]");
					s.printAt(1, " ");
					s.printAt(2, "\x13\x0F", v.GoblinTooth.content);
					s.printAt(3, "\x13\x04수량 : ", v.ITEM_GoblinTooth[getcurpl()]);
					s.printAt(4, " ");
					s.printAt(5, "\x13\x07[2] \x04버리기");
					s.printAt(6, "\x13\x07[3] \x04뒤로가기");
					if(Deaths(CurrentPlayer, Exactly, 2, "Cave")) func.RemoveItem(v.GoblinTooth.name, 1);
					if(Deaths(CurrentPlayer, Exactly, 3, "Cave")) Back();
					break;
			}
			//}
		}
		//eprintln(v.isInventory[getcurpl()]);
	EUDEndPlayerLoop();
	
}

function Select(num) {
	if(strcmp(InvenName[21 * getcurpl() + num], v.UnsawnTimber.name) == 0) UseItem[getcurpl()] = 1;
	else if(strcmp(InvenName[21 * getcurpl() + num], v.Timber.name) == 0) UseItem[getcurpl()] = 2;
	else if(strcmp(InvenName[21 * getcurpl() + num], v.IronOre.name) == 0) UseItem[getcurpl()] = 3;
	else if(strcmp(InvenName[21 * getcurpl() + num], v.HPPotion1.name) == 0) UseItem[getcurpl()] = 4;
	else if(strcmp(InvenName[21 * getcurpl() + num], v.HPPotion2.name) == 0) UseItem[getcurpl()] = 5;
	else if(strcmp(InvenName[21 * getcurpl() + num], v.HPPotion3.name) == 0) UseItem[getcurpl()] = 6;
	else if(strcmp(InvenName[21 * getcurpl() + num], v.HPPotion4.name) == 0) UseItem[getcurpl()] = 7;
	else if(strcmp(InvenName[21 * getcurpl() + num], v.HPPotion5.name) == 0) UseItem[getcurpl()] = 8;
	else if(strcmp(InvenName[21 * getcurpl() + num], v.GoblinTooth.name) == 0) UseItem[getcurpl()] = 9;
	SetDeaths(CurrentPlayer, SetTo, 0, "Cave");
}
function Back() {
	UseItem[getcurpl()] = 0;
	func.TextClear();
}

