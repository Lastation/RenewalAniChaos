## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import timeline as tL;
import timeline as tL
# (Line 2) import Variables as v;
import Variables as v
# (Line 3) import Function as func;
import Function as func
# (Line 5) object Monster {
# (Line 6) var name;
class Monster(EUDStruct):
    # (Line 7) var dmg;
    # (Line 8) var le;
    # (Line 9) var hp;
    # (Line 10) var speed;
    # (Line 11) var exp;
    # (Line 12) var gold;
    # (Line 13) };
    # (Line 15) const Goblin = Monster();
    _fields_ = [
        'name',
        'dmg',
        'le',
        'hp',
        'speed',
        'exp',
        'gold',
    ]

Goblin = _CGFW(lambda: [Monster()], 1)[0]
# (Line 16) const Biter = Monster();
Biter = _CGFW(lambda: [Monster()], 1)[0]
# (Line 17) const Orc = Monster();
Orc = _CGFW(lambda: [Monster()], 1)[0]
# (Line 18) const Lamia = Monster();
Lamia = _CGFW(lambda: [Monster()], 1)[0]
# (Line 19) const Peng = Monster();
Peng = _CGFW(lambda: [Monster()], 1)[0]
# (Line 20) const Zergling = Monster();
Zergling = _CGFW(lambda: [Monster()], 1)[0]
# (Line 21) const Zealot = Monster();
Zealot = _CGFW(lambda: [Monster()], 1)[0]
# (Line 23) function onPluginStart()
# (Line 24) {
@EUDFunc
def onPluginStart():
    # (Line 26) Goblin.name = Db("\x04고블린");
    _ATTW(Goblin, 'name') << (Db("\x04고블린"))
    # (Line 27) Goblin.dmg = 5;
    _ATTW(Goblin, 'dmg') << (5)
    # (Line 28) Goblin.hp = 30;
    _ATTW(Goblin, 'hp') << (30)
    # (Line 29) Goblin.speed = 700;
    _ATTW(Goblin, 'speed') << (700)
    # (Line 30) Goblin.exp = 3;
    _ATTW(Goblin, 'exp') << (3)
    # (Line 31) Goblin.gold = 5;
    _ATTW(Goblin, 'gold') << (5)
    # (Line 34) Biter.name = Db("\x04바이터");
    _ATTW(Biter, 'name') << (Db("\x04바이터"))
    # (Line 35) Biter.dmg = 5;
    _ATTW(Biter, 'dmg') << (5)
    # (Line 36) Biter.hp = 30;
    _ATTW(Biter, 'hp') << (30)
    # (Line 37) Biter.speed = 700;
    _ATTW(Biter, 'speed') << (700)
    # (Line 38) Biter.exp = 3;
    _ATTW(Biter, 'exp') << (3)
    # (Line 39) Biter.gold = 5;
    _ATTW(Biter, 'gold') << (5)
    # (Line 42) Orc.name = Db("\x04오크");
    _ATTW(Orc, 'name') << (Db("\x04오크"))
    # (Line 43) Orc.dmg = 8;
    _ATTW(Orc, 'dmg') << (8)
    # (Line 44) Orc.hp = 50;
    _ATTW(Orc, 'hp') << (50)
    # (Line 45) Orc.speed = 750;
    _ATTW(Orc, 'speed') << (750)
    # (Line 46) Orc.exp = 5;
    _ATTW(Orc, 'exp') << (5)
    # (Line 47) Orc.gold = 10;
    _ATTW(Orc, 'gold') << (10)
    # (Line 50) Lamia.name = Db("\x04라미아");
    _ATTW(Lamia, 'name') << (Db("\x04라미아"))
    # (Line 51) Lamia.dmg = 8;
    _ATTW(Lamia, 'dmg') << (8)
    # (Line 52) Lamia.hp = 75;
    _ATTW(Lamia, 'hp') << (75)
    # (Line 53) Lamia.speed = 650;
    _ATTW(Lamia, 'speed') << (650)
    # (Line 54) Lamia.exp = 12;
    _ATTW(Lamia, 'exp') << (12)
    # (Line 55) Lamia.gold = 20;
    _ATTW(Lamia, 'gold') << (20)
    # (Line 58) Peng.name = Db("\x04펭");
    _ATTW(Peng, 'name') << (Db("\x04펭"))
    # (Line 59) Peng.dmg = 8;
    _ATTW(Peng, 'dmg') << (8)
    # (Line 60) Peng.hp = 75;
    _ATTW(Peng, 'hp') << (75)
    # (Line 61) Peng.speed = 600;
    _ATTW(Peng, 'speed') << (600)
    # (Line 62) Peng.exp = 12;
    _ATTW(Peng, 'exp') << (12)
    # (Line 63) Peng.gold = 20;
    _ATTW(Peng, 'gold') << (20)
    # (Line 66) Zergling.name = Db("\x04두루룹");
    _ATTW(Zergling, 'name') << (Db("\x04두루룹"))
    # (Line 67) Zergling.dmg = 8;
    _ATTW(Zergling, 'dmg') << (8)
    # (Line 68) Zergling.hp = 75;
    _ATTW(Zergling, 'hp') << (75)
    # (Line 69) Zergling.speed = 600;
    _ATTW(Zergling, 'speed') << (600)
    # (Line 70) Zergling.exp = 12;
    _ATTW(Zergling, 'exp') << (12)
    # (Line 71) Zergling.gold = 20;
    _ATTW(Zergling, 'gold') << (20)
    # (Line 74) Zealot.name = Db("\x04두루룹");
    _ATTW(Zealot, 'name') << (Db("\x04두루룹"))
    # (Line 75) Zealot.dmg = 8;
    _ATTW(Zealot, 'dmg') << (8)
    # (Line 76) Zealot.hp = 75;
    _ATTW(Zealot, 'hp') << (75)
    # (Line 77) Zealot.speed = 600;
    _ATTW(Zealot, 'speed') << (600)
    # (Line 78) Zealot.exp = 12;
    _ATTW(Zealot, 'exp') << (12)
    # (Line 79) Zealot.gold = 20;
    _ATTW(Zealot, 'gold') << (20)
    # (Line 81) dwwrite(0x65FD00 + 9808 + 41 * 4, Goblin.hp * 256);
    f_dwwrite(0x65FD00 + 9808 + 41 * 4, Goblin.hp * 256)
    # (Line 82) wwrite(0x6564E0 + 2512 + 43 * 2, Goblin.dmg);
    f_wwrite(0x6564E0 + 2512 + 43 * 2, Goblin.dmg)
    # (Line 83) dwwrite(0x6C9858 + 1696 + 5 * 4, Goblin.speed);
    f_dwwrite(0x6C9858 + 1696 + 5 * 4, Goblin.speed)
    # (Line 85) dwwrite(0x65FD00 + 9808 + 40 * 4, Biter.hp);
    f_dwwrite(0x65FD00 + 9808 + 40 * 4, Biter.hp)
    # (Line 86) dwwrite(0x6C9858 + 1696 + 1 * 4, Biter.dmg);
    f_dwwrite(0x6C9858 + 1696 + 1 * 4, Biter.dmg)
    # (Line 87) wwrite(0x6564E0 + 2512 + 42 * 2, Biter.speed);
    f_wwrite(0x6564E0 + 2512 + 42 * 2, Biter.speed)
    # (Line 89) dwwrite(0x65FD00 + 9808 + 37 * 4, Orc.hp * 256);
    f_dwwrite(0x65FD00 + 9808 + 37 * 4, Orc.hp * 256)
    # (Line 90) wwrite(0x6564E0 + 2512 + 35 * 2, Orc.dmg);
    f_wwrite(0x6564E0 + 2512 + 35 * 2, Orc.dmg)
    # (Line 91) dwwrite(0x6C9858 + 1696 + 15 * 4, Orc.speed);
    f_dwwrite(0x6C9858 + 1696 + 15 * 4, Orc.speed)
    # (Line 93) dwwrite(0x65FD00 + 9808 + 38 * 4, Lamia.hp * 256);
    f_dwwrite(0x65FD00 + 9808 + 38 * 4, Lamia.hp * 256)
    # (Line 94) wwrite(0x6564E0 + 2512 + 38 * 2, Lamia.dmg);
    f_wwrite(0x6564E0 + 2512 + 38 * 2, Lamia.dmg)
    # (Line 95) dwwrite(0x6C9858 + 1696 + 8 * 4, Lamia.speed);
    f_dwwrite(0x6C9858 + 1696 + 8 * 4, Lamia.speed)
    # (Line 97) dwwrite(0x65FD00 + 9808 + 46 * 4, Peng.hp * 256);
    f_dwwrite(0x65FD00 + 9808 + 46 * 4, Peng.hp * 256)
    # (Line 98) wwrite(0x6564E0 + 2512 + 50 * 2, Peng.dmg);
    f_wwrite(0x6564E0 + 2512 + 50 * 2, Peng.dmg)
    # (Line 99) dwwrite(0x6C9858 + 1696 + 4 * 4, Peng.speed);
    f_dwwrite(0x6C9858 + 1696 + 4 * 4, Peng.speed)
    # (Line 101) dwwrite(0x65FD00 + 9808 + 54 * 4, Zergling.hp * 256);
    f_dwwrite(0x65FD00 + 9808 + 54 * 4, Zergling.hp * 256)
    # (Line 102) wwrite(0x6564E0 + 2512 + 36 * 2, Zergling.dmg);
    f_wwrite(0x6564E0 + 2512 + 36 * 2, Zergling.dmg)
    # (Line 104) dwwrite(0x65FD00 + 9808 + 65 * 4, Zealot.hp * 256);
    f_dwwrite(0x65FD00 + 9808 + 65 * 4, Zealot.hp * 256)
    # (Line 105) dwwrite(0x6C9858 + 1696 + 49 * 4, Zealot.dmg);
    f_dwwrite(0x6C9858 + 1696 + 49 * 4, Zealot.dmg)
    # (Line 106) wwrite(0x6564E0 + 2512 + 64 * 2, Zealot.speed);
    f_wwrite(0x6564E0 + 2512 + 64 * 2, Zealot.speed)
    # (Line 108) }
    # (Line 110) function beforeTriggerExec()

# (Line 111) {
@EUDFunc
def beforeTriggerExec():
    # (Line 112) var ran = 0;
    ran = EUDVariable()
    ran << (0)
    # (Line 113) EUDPlayerLoop()();
    EUDPlayerLoop()()
    # (Line 115) if(getcurpl() == 7)
    if EUDIf()(f_getcurpl() == 7):
        # (Line 116) {
        # (Line 117) foreach(t : tL.Timeline(72))
        for t in tL.Timeline(72):
            # (Line 118) {
            # (Line 119) if(t == 71)
            if EUDIf()(t == 71):
                # (Line 120) {
                # (Line 121) RunAIScriptAt("Set Unit Order To: Junk Yard Dog", "Anywhere");
                # (Line 122) }
                DoActions(RunAIScriptAt("Set Unit Order To: Junk Yard Dog", "Anywhere"))
                # (Line 123) }
            EUDEndIf()
            # (Line 125) foreach(z : tL.Timeline(100))

        for z in tL.Timeline(100):
            # (Line 126) {
            # (Line 127) if(z == (99))
            if EUDIf()(z == (99)):
                # (Line 128) {
                # (Line 129) if(Bring(P8, AtMost, 9, "Zerg Drone", "Field 01"))
                if EUDIf()(Bring(P8, AtMost, 9, "Zerg Drone", "Field 01")):
                    # (Line 130) {
                    # (Line 131) ran = (dwrand() % 5) + 1;
                    ran << ((f_dwrand() % 5) + 1)
                    # (Line 132) switch(ran)
                    EUDSwitch(ran)
                    # (Line 133) {
                    # (Line 134) case 1:
                    _t5 = EUDSwitchCase()
                    # (Line 135) setloc(19, 583, 765); // CreateMonster 로케이션 20
                    if _t5(1):
                        f_setloc(19, 583, 765)
                        # (Line 136) break;
                        EUDBreak()
                        # (Line 137) case 2:
                    _t6 = EUDSwitchCase()
                    # (Line 138) setloc(19, 565, 915);
                    if _t6(2):
                        f_setloc(19, 565, 915)
                        # (Line 139) break;
                        EUDBreak()
                        # (Line 140) case 3:
                    _t7 = EUDSwitchCase()
                    # (Line 141) setloc(19, 212, 915);
                    if _t7(3):
                        f_setloc(19, 212, 915)
                        # (Line 142) break;
                        EUDBreak()
                        # (Line 143) case 4:
                    _t8 = EUDSwitchCase()
                    # (Line 144) setloc(19, 472, 1179);
                    if _t8(4):
                        f_setloc(19, 472, 1179)
                        # (Line 145) break;
                        EUDBreak()
                        # (Line 146) case 5:
                    _t9 = EUDSwitchCase()
                    # (Line 147) setloc(19, 661, 1161);
                    if _t9(5):
                        f_setloc(19, 661, 1161)
                        # (Line 148) break;
                        EUDBreak()
                        # (Line 149) }
                    # (Line 151) v.MonsterTemp = epdread_epd(EPD(0x628438));
                    EUDEndSwitch()
                    _ATTW(v, 'MonsterTemp') << (f_epdread_epd(EPD(0x628438)))
                    # (Line 152) CreateUnit(1, "Zerg Drone", "CreateMonster", P8);
                    # (Line 153) bwrite_epd(v.MonsterTemp + 0x08F / 4,  0x08F % 4, 1);
                    DoActions(CreateUnit(1, "Zerg Drone", "CreateMonster", P8))
                    f_bwrite_epd(v.MonsterTemp + 0x08F // 4, 0x08F % 4, 1)
                    # (Line 154) }
                    # (Line 213) }
                EUDEndIf()
                # (Line 214) }//}
            EUDEndIf()
            # (Line 215) }//}

        # (Line 217) if(Kills(CurrentPlayer, AtLeast, 1, "Zerg Drone"))
    EUDEndIf()
    if EUDIf()(Kills(CurrentPlayer, AtLeast, 1, "Zerg Drone")):
        # (Line 218) {
        # (Line 219) SetKills(CurrentPlayer, Subtract, 1, "Zerg Drone");
        # (Line 220) v.user_Exp[getcurpl()] += Goblin.exp;
        DoActions(SetKills(CurrentPlayer, Subtract, 1, "Zerg Drone"))
        _ARRW(v.user_Exp, f_getcurpl()).__iadd__(Goblin.exp)
        # (Line 221) v.user_Gold[getcurpl()] += Goblin.gold;
        _ARRW(v.user_Gold, f_getcurpl()).__iadd__(Goblin.gold)
        # (Line 222) v.user_TotalAcquireGold[getcurpl()] += Goblin.gold;
        _ARRW(v.user_TotalAcquireGold, f_getcurpl()).__iadd__(Goblin.gold)
        # (Line 223) v.GoblinKills[getcurpl()] += 1;
        _ARRW(v.GoblinKills, f_getcurpl()).__iadd__(1)
        # (Line 224) func.AddItem(100, v.GoblinTooth.name, 1);
        func.AddItem(100, v.GoblinTooth.name, 1)
        # (Line 225) func.AddItem(100, v.HPPotion1.name, 1);
        func.AddItem(100, v.HPPotion1.name, 1)
        # (Line 226) func.AddItem(100, v.HPPotion2.name, 1);
        func.AddItem(100, v.HPPotion2.name, 1)
        # (Line 227) func.AddItem(100, v.HPPotion3.name, 1);
        func.AddItem(100, v.HPPotion3.name, 1)
        # (Line 228) }
        # (Line 229) if(Kills(CurrentPlayer, AtLeast, 1, "Zerg Broodling"))
    EUDEndIf()
    if EUDIf()(Kills(CurrentPlayer, AtLeast, 1, "Zerg Broodling")):
        # (Line 230) {
        # (Line 231) SetKills(CurrentPlayer, Subtract, 1, "Zerg Broodling");
        # (Line 232) v.user_Exp[getcurpl()] += Biter.exp;
        DoActions(SetKills(CurrentPlayer, Subtract, 1, "Zerg Broodling"))
        _ARRW(v.user_Exp, f_getcurpl()).__iadd__(Biter.exp)
        # (Line 233) v.user_Gold[getcurpl()] += Biter.gold;
        _ARRW(v.user_Gold, f_getcurpl()).__iadd__(Biter.gold)
        # (Line 234) v.user_TotalAcquireGold[getcurpl()] += Biter.gold;
        _ARRW(v.user_TotalAcquireGold, f_getcurpl()).__iadd__(Biter.gold)
        # (Line 235) v.BiterKills[getcurpl()] += 1;
        _ARRW(v.BiterKills, f_getcurpl()).__iadd__(1)
        # (Line 236) func.AddItem(12, v.HPPotion1.name, 1);
        func.AddItem(12, v.HPPotion1.name, 1)
        # (Line 237) }
        # (Line 238) if(Kills(CurrentPlayer, AtLeast, 1, "Zerg Zergling"))
    EUDEndIf()
    if EUDIf()(Kills(CurrentPlayer, AtLeast, 1, "Zerg Zergling")):
        # (Line 239) {
        # (Line 240) SetKills(CurrentPlayer, Subtract, 1, "Zerg Zergling");
        # (Line 241) v.user_Exp[getcurpl()] += Orc.exp;
        DoActions(SetKills(CurrentPlayer, Subtract, 1, "Zerg Zergling"))
        _ARRW(v.user_Exp, f_getcurpl()).__iadd__(Orc.exp)
        # (Line 242) v.user_Gold[getcurpl()] += Orc.gold;
        _ARRW(v.user_Gold, f_getcurpl()).__iadd__(Orc.gold)
        # (Line 243) v.user_TotalAcquireGold[getcurpl()] += Orc.gold;
        _ARRW(v.user_TotalAcquireGold, f_getcurpl()).__iadd__(Orc.gold)
        # (Line 244) v.OrcKills[getcurpl()] += 1;
        _ARRW(v.OrcKills, f_getcurpl()).__iadd__(1)
        # (Line 245) func.AddItem(11, v.HPPotion1.name, 1);
        func.AddItem(11, v.HPPotion1.name, 1)
        # (Line 246) }
        # (Line 247) if(Kills(CurrentPlayer, AtLeast, 1, "Zerg Hydralisk"))
    EUDEndIf()
    if EUDIf()(Kills(CurrentPlayer, AtLeast, 1, "Zerg Hydralisk")):
        # (Line 248) {
        # (Line 249) SetKills(CurrentPlayer, Subtract, 1, "Zerg Hydralisk");
        # (Line 250) v.user_Exp[getcurpl()] += Lamia.exp;
        DoActions(SetKills(CurrentPlayer, Subtract, 1, "Zerg Hydralisk"))
        _ARRW(v.user_Exp, f_getcurpl()).__iadd__(Lamia.exp)
        # (Line 251) v.user_Gold[getcurpl()] += Lamia.gold;
        _ARRW(v.user_Gold, f_getcurpl()).__iadd__(Lamia.gold)
        # (Line 252) v.user_TotalAcquireGold[getcurpl()] += Lamia.gold;
        _ARRW(v.user_TotalAcquireGold, f_getcurpl()).__iadd__(Lamia.gold)
        # (Line 253) v.LamiaKills[getcurpl()] += 1;
        _ARRW(v.LamiaKills, f_getcurpl()).__iadd__(1)
        # (Line 254) func.AddItem(12, v.HPPotion1.name, 1);
        func.AddItem(12, v.HPPotion1.name, 1)
        # (Line 255) }
        # (Line 256) if(Kills(CurrentPlayer, AtLeast, 1, "Zerg Defiler"))
    EUDEndIf()
    if EUDIf()(Kills(CurrentPlayer, AtLeast, 1, "Zerg Defiler")):
        # (Line 257) {
        # (Line 258) SetKills(CurrentPlayer, Subtract, 1, "Zerg Defiler");
        # (Line 259) v.user_Exp[getcurpl()] += Peng.exp;
        DoActions(SetKills(CurrentPlayer, Subtract, 1, "Zerg Defiler"))
        _ARRW(v.user_Exp, f_getcurpl()).__iadd__(Peng.exp)
        # (Line 260) v.user_Gold[getcurpl()] += Peng.gold;
        _ARRW(v.user_Gold, f_getcurpl()).__iadd__(Peng.gold)
        # (Line 261) v.user_TotalAcquireGold[getcurpl()] += Peng.gold;
        _ARRW(v.user_TotalAcquireGold, f_getcurpl()).__iadd__(Peng.gold)
        # (Line 262) v.PengKills[getcurpl()] += 1;
        _ARRW(v.PengKills, f_getcurpl()).__iadd__(1)
        # (Line 263) func.AddItem(12, v.HPPotion1.name, 1);
        func.AddItem(12, v.HPPotion1.name, 1)
        # (Line 264) }
        # (Line 265) if(Kills(CurrentPlayer, AtLeast, 1, "Devouring One (Zergling)"))
    EUDEndIf()
    if EUDIf()(Kills(CurrentPlayer, AtLeast, 1, "Devouring One (Zergling)")):
        # (Line 266) {
        # (Line 267) SetKills(CurrentPlayer, Subtract, 1, "Devouring One (Zergling)");
        # (Line 268) v.user_Exp[getcurpl()] += Zergling.exp;
        DoActions(SetKills(CurrentPlayer, Subtract, 1, "Devouring One (Zergling)"))
        _ARRW(v.user_Exp, f_getcurpl()).__iadd__(Zergling.exp)
        # (Line 269) v.user_Gold[getcurpl()] += Zergling.gold;
        _ARRW(v.user_Gold, f_getcurpl()).__iadd__(Zergling.gold)
        # (Line 270) v.user_TotalAcquireGold[getcurpl()] += Zergling.gold;
        _ARRW(v.user_TotalAcquireGold, f_getcurpl()).__iadd__(Zergling.gold)
        # (Line 272) func.AddItem(12, v.HPPotion1.name, 1);
        func.AddItem(12, v.HPPotion1.name, 1)
        # (Line 273) }
        # (Line 274) if(Kills(CurrentPlayer, AtLeast, 1, "Protoss Zealot"))
    EUDEndIf()
    if EUDIf()(Kills(CurrentPlayer, AtLeast, 1, "Protoss Zealot")):
        # (Line 275) {
        # (Line 276) SetKills(CurrentPlayer, Subtract, 1, "Protoss Zealot");
        # (Line 277) v.user_Exp[getcurpl()] += Zealot.exp;
        DoActions(SetKills(CurrentPlayer, Subtract, 1, "Protoss Zealot"))
        _ARRW(v.user_Exp, f_getcurpl()).__iadd__(Zealot.exp)
        # (Line 278) v.user_Gold[getcurpl()] += Zealot.gold;
        _ARRW(v.user_Gold, f_getcurpl()).__iadd__(Zealot.gold)
        # (Line 279) v.user_TotalAcquireGold[getcurpl()] += Zealot.gold;
        _ARRW(v.user_TotalAcquireGold, f_getcurpl()).__iadd__(Zealot.gold)
        # (Line 281) func.AddItem(12, v.HPPotion1.name, 1);
        func.AddItem(12, v.HPPotion1.name, 1)
        # (Line 282) }
        # (Line 285) EUDEndPlayerLoop();
    EUDEndIf()
    EUDEndPlayerLoop()
    # (Line 287) }
