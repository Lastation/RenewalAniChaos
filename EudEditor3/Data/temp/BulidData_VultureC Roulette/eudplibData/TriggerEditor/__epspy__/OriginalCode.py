## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import customText as tct;
import customText as tct
# (Line 2) import SCArchive as sca;
import SCArchive as sca
# (Line 3) import SCA as scaload;
import SCA as scaload
# (Line 4) import AuraList as auralist;
import AuraList as auralist
# (Line 7) const StageClearCount = PVariable();
StageClearCount = _CGFW(lambda: [PVariable()], 1)[0]
# (Line 9) var txtPtr, btnPtr, btnPos, oldCP;
txtPtr, btnPtr, btnPos, oldCP = EUDCreateVariables(4)
# (Line 10) const trgk = $T('Artanis & safhfh');
trgk = _CGFW(lambda: [GetStringIndex('Artanis & safhfh')], 1)[0]
# (Line 11) var Timer = 0;
Timer = EUDCreateVariables(1)
_IGVA([Timer], lambda: [0])
# (Line 12) const Vulture = [0, 0, 0, 0, 0, 0, 0, 0];
Vulture = _CGFW(lambda: [_ARR(FlattenList([0, 0, 0, 0, 0, 0, 0, 0]))], 1)[0]
# (Line 13) const CamTimer = [0, 0, 0, 0, 0, 0, 0, 0];
CamTimer = _CGFW(lambda: [_ARR(FlattenList([0, 0, 0, 0, 0, 0, 0, 0]))], 1)[0]
# (Line 14) const MachineShop = [0, 0, 0, 0, 0, 0, 0, 0];
MachineShop = _CGFW(lambda: [_ARR(FlattenList([0, 0, 0, 0, 0, 0, 0, 0]))], 1)[0]
# (Line 15) const SkipCooltime = [0, 0, 0, 0, 0, 0, 0, 0];
SkipCooltime = _CGFW(lambda: [_ARR(FlattenList([0, 0, 0, 0, 0, 0, 0, 0]))], 1)[0]
# (Line 16) const ChartCheck = [0, 0, 0, 0, 0, 0, 0, 0];
ChartCheck = _CGFW(lambda: [_ARR(FlattenList([0, 0, 0, 0, 0, 0, 0, 0]))], 1)[0]
# (Line 17) const ChartCheckTimer = [0, 0, 0, 0, 0, 0, 0, 0];
ChartCheckTimer = _CGFW(lambda: [_ARR(FlattenList([0, 0, 0, 0, 0, 0, 0, 0]))], 1)[0]
# (Line 18) var CTimer = 0;
CTimer = EUDCreateVariables(1)
_IGVA([CTimer], lambda: [0])
# (Line 19) const SkipTimer = [0, 0, 0, 0, 0, 0, 0, 0];
SkipTimer = _CGFW(lambda: [_ARR(FlattenList([0, 0, 0, 0, 0, 0, 0, 0]))], 1)[0]
# (Line 20) const Light = [0, 0, 0, 0, 0, 0, 0, 0];
Light = _CGFW(lambda: [_ARR(FlattenList([0, 0, 0, 0, 0, 0, 0, 0]))], 1)[0]
# (Line 21) const Patrol = [0, 0, 0, 0, 0, 0, 0, 0];
Patrol = _CGFW(lambda: [_ARR(FlattenList([0, 0, 0, 0, 0, 0, 0, 0]))], 1)[0]
# (Line 22) const Skin_Scout = [0, 0, 0, 0, 0, 0, 0, 0];
Skin_Scout = _CGFW(lambda: [_ARR(FlattenList([0, 0, 0, 0, 0, 0, 0, 0]))], 1)[0]
# (Line 23) const Skin_Select = [0, 0, 0, 0, 0, 0, 0, 0];
Skin_Select = _CGFW(lambda: [_ARR(FlattenList([0, 0, 0, 0, 0, 0, 0, 0]))], 1)[0]
# (Line 24) const Vulture_Booster = [0, 0, 0, 0, 0, 0, 0, 0];
Vulture_Booster = _CGFW(lambda: [_ARR(FlattenList([0, 0, 0, 0, 0, 0, 0, 0]))], 1)[0]
# (Line 25) const Skin_Wraith = [0, 0, 0, 0, 0, 0, 0, 0];
Skin_Wraith = _CGFW(lambda: [_ARR(FlattenList([0, 0, 0, 0, 0, 0, 0, 0]))], 1)[0]
# (Line 26) const Skin_Wraith_Smoke = [0, 0, 0, 0, 0, 0, 0, 0];
Skin_Wraith_Smoke = _CGFW(lambda: [_ARR(FlattenList([0, 0, 0, 0, 0, 0, 0, 0]))], 1)[0]
# (Line 27) const Vulture_Hitpoints = [0, 0, 0, 0, 0, 0, 0, 0];
Vulture_Hitpoints = _CGFW(lambda: [_ARR(FlattenList([0, 0, 0, 0, 0, 0, 0, 0]))], 1)[0]
# (Line 28) const Ban = [0, 0, 0, 0, 0, 0, 0, 0];
Ban = _CGFW(lambda: [_ARR(FlattenList([0, 0, 0, 0, 0, 0, 0, 0]))], 1)[0]
# (Line 29) const Hold_on = [0, 0, 0, 0, 0, 0, 0, 0];
Hold_on = _CGFW(lambda: [_ARR(FlattenList([0, 0, 0, 0, 0, 0, 0, 0]))], 1)[0]
# (Line 30) const Hold_firecount = [0, 0, 0, 0, 0, 0, 0, 0];
Hold_firecount = _CGFW(lambda: [_ARR(FlattenList([0, 0, 0, 0, 0, 0, 0, 0]))], 1)[0]
# (Line 31) const Hold_fireunit = [0, 0, 0, 0, 0, 0, 0, 0];
Hold_fireunit = _CGFW(lambda: [_ARR(FlattenList([0, 0, 0, 0, 0, 0, 0, 0]))], 1)[0]
# (Line 32) const Vulture_Direction = [0, 0, 0, 0, 0, 0, 0, 0];
Vulture_Direction = _CGFW(lambda: [_ARR(FlattenList([0, 0, 0, 0, 0, 0, 0, 0]))], 1)[0]
# (Line 33) const Hold_Firetimer = [0, 0, 0, 0, 0, 0, 0, 0];
Hold_Firetimer = _CGFW(lambda: [_ARR(FlattenList([0, 0, 0, 0, 0, 0, 0, 0]))], 1)[0]
# (Line 34) var ControlDirection = 0;
ControlDirection = EUDCreateVariables(1)
_IGVA([ControlDirection], lambda: [0])
# (Line 35) const CS_Death = [0, 0, 0, 0, 0, 0, 0, 0];
CS_Death = _CGFW(lambda: [_ARR(FlattenList([0, 0, 0, 0, 0, 0, 0, 0]))], 1)[0]
# (Line 36) var Unit_Count = 0;
Unit_Count = EUDCreateVariables(1)
_IGVA([Unit_Count], lambda: [0])
# (Line 37) var Unit = 0;
Unit = EUDCreateVariables(1)
_IGVA([Unit], lambda: [0])
# (Line 38) var Health = 0;
Health = EUDCreateVariables(1)
_IGVA([Health], lambda: [0])
# (Line 39) var Shield = 0;
Shield = EUDCreateVariables(1)
_IGVA([Shield], lambda: [0])
# (Line 40) var UnitSkillTimer = 0;
UnitSkillTimer = EUDCreateVariables(1)
_IGVA([UnitSkillTimer], lambda: [0])
# (Line 41) var Unit_Direction = 0;
Unit_Direction = EUDCreateVariables(1)
_IGVA([Unit_Direction], lambda: [0])
# (Line 42) var Bullet = 0;
Bullet = EUDCreateVariables(1)
_IGVA([Bullet], lambda: [0])
# (Line 43) var Unit_PositionX = 0;
Unit_PositionX = EUDCreateVariables(1)
_IGVA([Unit_PositionX], lambda: [0])
# (Line 44) var Unit_PositionY = 0;
Unit_PositionY = EUDCreateVariables(1)
_IGVA([Unit_PositionY], lambda: [0])
# (Line 45) var TargetUnitPositionX = 0;
TargetUnitPositionX = EUDCreateVariables(1)
_IGVA([TargetUnitPositionX], lambda: [0])
# (Line 46) var TargetUnitPositionY = 0;
TargetUnitPositionY = EUDCreateVariables(1)
_IGVA([TargetUnitPositionY], lambda: [0])
# (Line 47) const AlreadyHit = [0, 0, 0, 0, 0, 0, 0, 0];
AlreadyHit = _CGFW(lambda: [_ARR(FlattenList([0, 0, 0, 0, 0, 0, 0, 0]))], 1)[0]
# (Line 48) var RandomNum = 0;
RandomNum = EUDCreateVariables(1)
_IGVA([RandomNum], lambda: [0])
# (Line 49) const Skin_Mutalisk = [0, 0, 0, 0, 0, 0, 0, 0];
Skin_Mutalisk = _CGFW(lambda: [_ARR(FlattenList([0, 0, 0, 0, 0, 0, 0, 0]))], 1)[0]
# (Line 50) const Skin_Mutalisk_Effect = [0, 0, 0, 0, 0, 0, 0, 0];
Skin_Mutalisk_Effect = _CGFW(lambda: [_ARR(FlattenList([0, 0, 0, 0, 0, 0, 0, 0]))], 1)[0]
# (Line 51) var RandomSkill = 0;
RandomSkill = EUDCreateVariables(1)
_IGVA([RandomSkill], lambda: [0])
# (Line 52) var Damage = 0;
Damage = EUDCreateVariables(1)
_IGVA([Damage], lambda: [0])
# (Line 53) const CircleAleadyHit = [0, 0, 0, 0, 0, 0, 0, 0];
CircleAleadyHit = _CGFW(lambda: [_ARR(FlattenList([0, 0, 0, 0, 0, 0, 0, 0]))], 1)[0]
# (Line 54) var BossPhase = 0;
BossPhase = EUDCreateVariables(1)
_IGVA([BossPhase], lambda: [0])
# (Line 55) var PhaseChange = 0;
PhaseChange = EUDCreateVariables(1)
_IGVA([PhaseChange], lambda: [0])
# (Line 56) var RandomNum2 = 0;
RandomNum2 = EUDCreateVariables(1)
_IGVA([RandomNum2], lambda: [0])
# (Line 57) var Bullet2 = 0;
Bullet2 = EUDCreateVariables(1)
_IGVA([Bullet2], lambda: [0])
# (Line 58) var EffectTimer = 0;
EffectTimer = EUDCreateVariables(1)
_IGVA([EffectTimer], lambda: [0])
# (Line 59) var SkinBlackVulture = 0;
SkinBlackVulture = EUDCreateVariables(1)
_IGVA([SkinBlackVulture], lambda: [0])
# (Line 60) const Skin_BlackVulture = [0, 0, 0, 0, 0, 0, 0, 0];
Skin_BlackVulture = _CGFW(lambda: [_ARR(FlattenList([0, 0, 0, 0, 0, 0, 0, 0]))], 1)[0]
# (Line 61) var BlackVultureIndex = 0;
BlackVultureIndex = EUDCreateVariables(1)
_IGVA([BlackVultureIndex], lambda: [0])
# (Line 62) var Defeated = 0;
Defeated = EUDCreateVariables(1)
_IGVA([Defeated], lambda: [0])
# (Line 63) const UnitSkillTimerP = [0, 0, 0, 0, 0, 0, 0, 0];
UnitSkillTimerP = _CGFW(lambda: [_ARR(FlattenList([0, 0, 0, 0, 0, 0, 0, 0]))], 1)[0]
# (Line 64) var Clear = 0;
Clear = EUDCreateVariables(1)
_IGVA([Clear], lambda: [0])
# (Line 65) var AuraVIP = 0;
AuraVIP = EUDCreateVariables(1)
_IGVA([AuraVIP], lambda: [0])
# (Line 66) var AuraVIPIndex = 0;
AuraVIPIndex = EUDCreateVariables(1)
_IGVA([AuraVIPIndex], lambda: [0])
# (Line 67) const Skin_Scout_Effect = [0, 0, 0, 0, 0, 0, 0, 0];
Skin_Scout_Effect = _CGFW(lambda: [_ARR(FlattenList([0, 0, 0, 0, 0, 0, 0, 0]))], 1)[0]
# (Line 68) var Roulette_Timer = 0;
Roulette_Timer = EUDCreateVariables(1)
_IGVA([Roulette_Timer], lambda: [0])
# (Line 69) var Roulette_Count = 3;
Roulette_Count = EUDCreateVariables(1)
_IGVA([Roulette_Count], lambda: [3])
# (Line 70) const Roulette_Sound = [0, 0, 0, 0, 0, 0, 0, 0];
Roulette_Sound = _CGFW(lambda: [_ARR(FlattenList([0, 0, 0, 0, 0, 0, 0, 0]))], 1)[0]
# (Line 71) var StageDisplay = 0;
StageDisplay = EUDCreateVariables(1)
_IGVA([StageDisplay], lambda: [0])
# (Line 72) const OpTimer = [0, 0, 0, 0, 0, 0, 0, 0];
OpTimer = _CGFW(lambda: [_ARR(FlattenList([0, 0, 0, 0, 0, 0, 0, 0]))], 1)[0]
# (Line 73) var TrainingMode = 0;
TrainingMode = EUDCreateVariables(1)
_IGVA([TrainingMode], lambda: [0])
# (Line 74) var OptionCount = 0;
OptionCount = EUDCreateVariables(1)
_IGVA([OptionCount], lambda: [0])
# (Line 75) var RangeDisplay = 0;
RangeDisplay = EUDCreateVariables(1)
_IGVA([RangeDisplay], lambda: [0])
# (Line 76) var HealthTotal = 0;
HealthTotal = EUDCreateVariables(1)
_IGVA([HealthTotal], lambda: [0])
# (Line 77) var ShieldTotal = 0;
ShieldTotal = EUDCreateVariables(1)
_IGVA([ShieldTotal], lambda: [0])
# (Line 78) var Stat_Health = 0;
Stat_Health = EUDCreateVariables(1)
_IGVA([Stat_Health], lambda: [0])
# (Line 79) var Stat_Damage = 0;
Stat_Damage = EUDCreateVariables(1)
_IGVA([Stat_Damage], lambda: [0])
# (Line 80) var Stat_RangeL = 0;
Stat_RangeL = EUDCreateVariables(1)
_IGVA([Stat_RangeL], lambda: [0])
# (Line 81) var Stat_Speed = 0;
Stat_Speed = EUDCreateVariables(1)
_IGVA([Stat_Speed], lambda: [0])
# (Line 82) var Stat_RangeR = 0;
Stat_RangeR = EUDCreateVariables(1)
_IGVA([Stat_RangeR], lambda: [0])
# (Line 83) var Stat_Armor = 0;
Stat_Armor = EUDCreateVariables(1)
_IGVA([Stat_Armor], lambda: [0])
# (Line 84) var 러시안룰렛 = 0;
러시안룰렛 = EUDCreateVariables(1)
_IGVA([러시안룰렛], lambda: [0])
# (Line 85) var 건전지 = 0;
건전지 = EUDCreateVariables(1)
_IGVA([건전지], lambda: [0])
# (Line 86) var GraphicChange = 0;
GraphicChange = EUDCreateVariables(1)
_IGVA([GraphicChange], lambda: [0])
# (Line 87) var Stat_Shield = 0;
Stat_Shield = EUDCreateVariables(1)
_IGVA([Stat_Shield], lambda: [0])
# (Line 88) var 체력회복불가 = 0;
체력회복불가 = EUDCreateVariables(1)
_IGVA([체력회복불가], lambda: [0])
# (Line 89) var 포문개방취소 = 0;
포문개방취소 = EUDCreateVariables(1)
_IGVA([포문개방취소], lambda: [0])
# (Line 90) var 중상 = 0;
중상 = EUDCreateVariables(1)
_IGVA([중상], lambda: [0])
# (Line 91) var HealthRegen = 0;
HealthRegen = EUDCreateVariables(1)
_IGVA([HealthRegen], lambda: [0])
# (Line 92) var autoStart = 0;
autoStart = EUDCreateVariables(1)
_IGVA([autoStart], lambda: [0])
# (Line 93) var autoStartDisplay = 0;
autoStartDisplay = EUDCreateVariables(1)
_IGVA([autoStartDisplay], lambda: [0])
# (Line 94) const WeaponSkin1 = [0, 0, 0, 0, 0, 0, 0, 0];
WeaponSkin1 = _CGFW(lambda: [_ARR(FlattenList([0, 0, 0, 0, 0, 0, 0, 0]))], 1)[0]
# (Line 95) const WeaponSkin_Select = [0, 0, 0, 0, 0, 0, 0, 0];
WeaponSkin_Select = _CGFW(lambda: [_ARR(FlattenList([0, 0, 0, 0, 0, 0, 0, 0]))], 1)[0]
# (Line 96) const WeaponSkin2 = [0, 0, 0, 0, 0, 0, 0, 0];
WeaponSkin2 = _CGFW(lambda: [_ARR(FlattenList([0, 0, 0, 0, 0, 0, 0, 0]))], 1)[0]
# (Line 97) var BossReward = 0;
BossReward = EUDCreateVariables(1)
_IGVA([BossReward], lambda: [0])
# (Line 98) var KukulzaReward = 0;
KukulzaReward = EUDCreateVariables(1)
_IGVA([KukulzaReward], lambda: [0])
# (Line 99) var RewardOption = 0;
RewardOption = EUDCreateVariables(1)
_IGVA([RewardOption], lambda: [0])
# (Line 100) const Reward_Sound = [0, 0, 0, 0, 0, 0, 0, 0];
Reward_Sound = _CGFW(lambda: [_ARR(FlattenList([0, 0, 0, 0, 0, 0, 0, 0]))], 1)[0]
# (Line 101) var RewardCount = 0;
RewardCount = EUDCreateVariables(1)
_IGVA([RewardCount], lambda: [0])
# (Line 102) var ProbPlus = 0;
ProbPlus = EUDCreateVariables(1)
_IGVA([ProbPlus], lambda: [0])
# (Line 103) var 팔라딘 = 0;
팔라딘 = EUDCreateVariables(1)
_IGVA([팔라딘], lambda: [0])
# (Line 104) var 약화 = 0;
약화 = EUDCreateVariables(1)
_IGVA([약화], lambda: [0])
# (Line 105) var 잔상 = 0;
잔상 = EUDCreateVariables(1)
_IGVA([잔상], lambda: [0])
# (Line 106) var 총기개조 = 0;
총기개조 = EUDCreateVariables(1)
_IGVA([총기개조], lambda: [0])
# (Line 107) var 형님 = 0;
형님 = EUDCreateVariables(1)
_IGVA([형님], lambda: [0])
# (Line 108) var 형님공격 = 0;
형님공격 = EUDCreateVariables(1)
_IGVA([형님공격], lambda: [0])
# (Line 109) const ClassO = [0, 0, 0, 0, 0, 0, 0, 0];
ClassO = _CGFW(lambda: [_ARR(FlattenList([0, 0, 0, 0, 0, 0, 0, 0]))], 1)[0]
# (Line 110) var ClassOEffect = 0;
ClassOEffect = EUDCreateVariables(1)
_IGVA([ClassOEffect], lambda: [0])
# (Line 111) const SuzumuraAlrI = [0, 0, 0, 0, 0, 0, 0, 0];
SuzumuraAlrI = _CGFW(lambda: [_ARR(FlattenList([0, 0, 0, 0, 0, 0, 0, 0]))], 1)[0]
# (Line 112) const IGO_Sera = [0, 0, 0, 0, 0, 0, 0, 0];
IGO_Sera = _CGFW(lambda: [_ARR(FlattenList([0, 0, 0, 0, 0, 0, 0, 0]))], 1)[0]
# (Line 113) var IGO_Sera_Attack = 0;
IGO_Sera_Attack = EUDCreateVariables(1)
_IGVA([IGO_Sera_Attack], lambda: [0])
# (Line 114) const WeaponSkin3 = [0, 0, 0, 0, 0, 0, 0, 0];
WeaponSkin3 = _CGFW(lambda: [_ARR(FlattenList([0, 0, 0, 0, 0, 0, 0, 0]))], 1)[0]
# (Line 115) var Roulette_Again = 274;
Roulette_Again = EUDCreateVariables(1)
_IGVA([Roulette_Again], lambda: [274])
# (Line 116) var Roulette_Again_Display = 0;
Roulette_Again_Display = EUDCreateVariables(1)
_IGVA([Roulette_Again_Display], lambda: [0])
# (Line 117) var TomReward = 0;
TomReward = EUDCreateVariables(1)
_IGVA([TomReward], lambda: [0])
# (Line 118) var SkinRainbow = 0;
SkinRainbow = EUDCreateVariables(1)
_IGVA([SkinRainbow], lambda: [0])
# (Line 119) var SkinRainbowIndex = 0;
SkinRainbowIndex = EUDCreateVariables(1)
_IGVA([SkinRainbowIndex], lambda: [0])
# (Line 120) const Skin_Rainbow = [0, 0, 0, 0, 0, 0, 0, 0];
Skin_Rainbow = _CGFW(lambda: [_ARR(FlattenList([0, 0, 0, 0, 0, 0, 0, 0]))], 1)[0]
# (Line 121) const RainbowEnabled = [0, 0, 0, 0, 0, 0, 0, 0];
RainbowEnabled = _CGFW(lambda: [_ARR(FlattenList([0, 0, 0, 0, 0, 0, 0, 0]))], 1)[0]
# (Line 122) const color = [0, 0, 0, 0, 0, 0, 0, 0];
color = _CGFW(lambda: [_ARR(FlattenList([0, 0, 0, 0, 0, 0, 0, 0]))], 1)[0]
# (Line 123) var colorComputer = 0;
colorComputer = EUDCreateVariables(1)
_IGVA([colorComputer], lambda: [0])
# (Line 124) const Aura_RainbowArchon = [0, 0, 0, 0, 0, 0, 0, 0];
Aura_RainbowArchon = _CGFW(lambda: [_ARR(FlattenList([0, 0, 0, 0, 0, 0, 0, 0]))], 1)[0]
# (Line 125) var AuraRainbowArchon = 0;
AuraRainbowArchon = EUDCreateVariables(1)
_IGVA([AuraRainbowArchon], lambda: [0])
# (Line 126) var AuraRainbowArchonIndex = 0;
AuraRainbowArchonIndex = EUDCreateVariables(1)
_IGVA([AuraRainbowArchonIndex], lambda: [0])
# (Line 127) const Aura_RainbowArchonEnabled = [0, 0, 0, 0, 0, 0, 0, 0];
Aura_RainbowArchonEnabled = _CGFW(lambda: [_ARR(FlattenList([0, 0, 0, 0, 0, 0, 0, 0]))], 1)[0]
# (Line 128) const Aura_RainbowArchonP = [0, 0, 0, 0, 0, 0, 0, 0];
Aura_RainbowArchonP = _CGFW(lambda: [_ARR(FlattenList([0, 0, 0, 0, 0, 0, 0, 0]))], 1)[0]
# (Line 130) const PLoc = [28,29,30,31,32,33];
PLoc = _CGFW(lambda: [_ARR(FlattenList([28, 29, 30, 31, 32, 33]))], 1)[0]
# (Line 131) const EnemyP = [2,8,11,19,21,23];
EnemyP = _CGFW(lambda: [_ARR(FlattenList([2, 8, 11, 19, 21, 23]))], 1)[0]
# (Line 132) const StartP = [1,6,9,18,20,22];
StartP = _CGFW(lambda: [_ARR(FlattenList([1, 6, 9, 18, 20, 22]))], 1)[0]
# (Line 133) const KeyP = [1,3,7,8,24,56];
KeyP = _CGFW(lambda: [_ARR(FlattenList([1, 3, 7, 8, 24, 56]))], 1)[0]
# (Line 134) const RandomOption = [0,0,0,0,0,0,0,0];
RandomOption = _CGFW(lambda: [_ARR(FlattenList([0, 0, 0, 0, 0, 0, 0, 0]))], 1)[0]
# (Line 135) const PVulture = [0,1,2,7,8,19];
PVulture = _CGFW(lambda: [_ARR(FlattenList([0, 1, 2, 7, 8, 19]))], 1)[0]
# (Line 136) const PHoldFire = [194,195,196,197,198,199];
PHoldFire = _CGFW(lambda: [_ARR(FlattenList([194, 195, 196, 197, 198, 199]))], 1)[0]
# (Line 137) const WeaponList = [5,15,16,28,48,53,79,9999];
WeaponList = _CGFW(lambda: [_ARR(FlattenList([5, 15, 16, 28, 48, 53, 79, 9999]))], 1)[0]
# (Line 138) const Pcolor = [0,1,2,3,4,6];
Pcolor = _CGFW(lambda: [_ARR(FlattenList([0, 1, 2, 3, 4, 6]))], 1)[0]
# (Line 141) function SetUnitColorEPD(UnitEPD ,Color) {
@EUDFunc
def SetUnitColorEPD(UnitEPD, Color):
    # (Line 153) var spriteEPD;
    spriteEPD = EUDVariable()
    # (Line 154) spriteEPD = epdread_epd(UnitEPD + 0x00C / 4);
    spriteEPD << (f_epdread_epd(UnitEPD + 0x00C // 4))
    # (Line 155) bwrite_epd(spriteEPD + 0x0A/4, 0x0A%4, Color);
    f_bwrite_epd(spriteEPD + 0x0A // 4, 0x0A % 4, Color)
    # (Line 156) }
    # (Line 157) function AttackGround(attackLoc ,targetLoc ,attackUnit ,targetUnit ,player) {

@EUDFunc
def AttackGround(attackLoc, targetLoc, attackUnit, targetUnit, player):
    # (Line 174) var ap, ae, tp, te;
    ap, ae, tp, te = EUDCreateVariables(4)
    # (Line 175) ap, ae = cunitepdread_epd(EPD(0x628438));
    _SV([ap, ae], [f_cunitepdread_epd(EPD(0x628438))])
    # (Line 176) CreateUnit(1, (attackUnit), (attackLoc + 1), (player));
    # (Line 177) if(
    DoActions(CreateUnit(1, (attackUnit), (attackLoc + 1), (player)))
    _t1 = EUDIf()
    # (Line 178) Memory(0x628438, (10), ap)
    # (Line 179) ){
    if _t1(Memory(0x628438, (10), ap)):
        # (Line 180) return false;
        EUDReturn(False)
        # (Line 181) }
        # (Line 182) wwrite_epd(ae + 0x110 / 4,  0x110 % 4, 2);
    EUDEndIf()
    f_wwrite_epd(ae + 0x110 // 4, 0x110 % 4, 2)
    # (Line 183) tp, te = cunitepdread_epd(EPD(0x628438));
    _SV([tp, te], [f_cunitepdread_epd(EPD(0x628438))])
    # (Line 184) CreateUnit(1, (targetUnit), (targetLoc + 1), (player));
    # (Line 185) if(
    DoActions(CreateUnit(1, (targetUnit), (targetLoc + 1), (player)))
    _t2 = EUDIf()
    # (Line 186) Memory(0x628438, (10), tp)
    # (Line 187) ){
    if _t2(Memory(0x628438, (10), tp)):
        # (Line 188) return false;
        EUDReturn(False)
        # (Line 189) }
        # (Line 190) wwrite_epd(targetUnit + 0x110 / 4,  0x110 % 4, 2);
    EUDEndIf()
    f_wwrite_epd(targetUnit + 0x110 // 4, 0x110 % 4, 2)
    # (Line 191) SetMemoryEPD(attackUnit + 0x05C / 4, SetTo, targetUnit);
    # (Line 192) return true;
    DoActions(SetMemoryEPD(attackUnit + 0x05C // 4, SetTo, targetUnit))
    EUDReturn(True)
    # (Line 193) }
    # (Line 194) function hotkeyUnitEPD(epd ,player ,hotkey ,slot) {

@EUDFunc
def f_hotkeyUnitEPD(epd, player, hotkey, slot):
    # (Line 210) const targetOrderSpecial = dwread_epd(epd + 0xA5 / 4) & 0xFF00;
    targetOrderSpecial = f_dwread_epd(epd + 0xA5 // 4) & 0xFF00
    # (Line 211) var alphaID = 0;
    alphaID = EUDVariable()
    alphaID << (0)
    # (Line 212) if(
    _t1 = EUDIf()
    # (Line 213) epd == 19025
    # (Line 214) ){
    if _t1(epd == 19025):
        # (Line 215) alphaID = 1 + targetOrderSpecial * 8;
        alphaID << (1 + targetOrderSpecial * 8)
        # (Line 216) }
        # (Line 217) else{
    if EUDElse()():
        # (Line 218) alphaID = 1701 - (0x27821 - epd) / 0x54 + targetOrderSpecial * 8;
        alphaID << (1701 - (0x27821 - epd) // 0x54 + targetOrderSpecial * 8)
        # (Line 219) }
        # (Line 220) SetMemoryEPD(EPD(0x57FE60) + 216 * player + 12 * hotkey + slot, SetTo, alphaID);
    EUDEndIf()
    # (Line 221) }
    DoActions(SetMemoryEPD(EPD(0x57FE60) + 216 * player + 12 * hotkey + slot, SetTo, alphaID))
    # (Line 222) function NameCheck(Player ,CheckName) {

@EUDFunc
def NameCheck(Player, CheckName):
    # (Line 234) const PlayerNameVar = 0x57EEEB + 36 * Player;
    PlayerNameVar = 0x57EEEB + 36 * Player
    # (Line 235) const CheckNameVar = CheckName;
    CheckNameVar = CheckName
    # (Line 236) if(
    _t1 = EUDIf()
    # (Line 237) strcmp(PlayerNameVar, CheckNameVar) == 0
    # (Line 238) ){
    if _t1(f_strcmp(PlayerNameVar, CheckNameVar) == 0):
        # (Line 239) return True;
        EUDReturn(True)
        # (Line 240) }
        # (Line 241) else{
    if EUDElse()():
        # (Line 242) return False;
        EUDReturn(False)
        # (Line 243) }
        # (Line 244) }
    EUDEndIf()
    # (Line 245) function EUDMoveLocation(Location ,X ,Y) {

@EUDFunc
def EUDMoveLocation(Location, X, Y):
    # (Line 258) SetMemory(0x58DC60 + Location * 20 + 4 * 0, Add, X);
    # (Line 259) SetMemory(0x58DC60 + Location * 20 + 4 * 2, Add, X);
    DoActions(SetMemory(0x58DC60 + Location * 20 + 4 * 0, Add, X))
    # (Line 260) SetMemory(0x58DC60 + Location * 20 + 4 * 1, Add, -Y);
    DoActions(SetMemory(0x58DC60 + Location * 20 + 4 * 2, Add, X))
    # (Line 261) SetMemory(0x58DC60 + Location * 20 + 4 * 3, Add, -Y);
    DoActions(SetMemory(0x58DC60 + Location * 20 + 4 * 1, Add, -Y))
    # (Line 262) }
    DoActions(SetMemory(0x58DC60 + Location * 20 + 4 * 3, Add, -Y))
    # (Line 263) function BuildCheckEPD(unitEPD ,Unit) {

@EUDFunc
def BuildCheckEPD(unitEPD, Unit_1):
    # (Line 275) if(
    _t1 = EUDIf()
    # (Line 276) wread_epd(unitEPD + 0x098 / 4,  0x098 % 4) == Unit ||
    # (Line 277) wread_epd(unitEPD + 0x09A / 4,  0x09A % 4) == Unit ||
    # (Line 278) wread_epd(unitEPD + 0x09C / 4,  0x09C % 4) == Unit ||
    # (Line 279) wread_epd(unitEPD + 0x09E / 4,  0x09E % 4) == Unit ||
    # (Line 280) wread_epd(unitEPD + 0x0A0 / 4,  0x0A0 % 4) == Unit
    # (Line 281) ){
    if _t1(EUDSCOr()(f_wread_epd(unitEPD + 0x098 // 4, 0x098 % 4) == Unit_1)(f_wread_epd(unitEPD + 0x09A // 4, 0x09A % 4) == Unit_1)(f_wread_epd(unitEPD + 0x09C // 4, 0x09C % 4) == Unit_1)(f_wread_epd(unitEPD + 0x09E // 4, 0x09E % 4) == Unit_1)(f_wread_epd(unitEPD + 0x0A0 // 4, 0x0A0 % 4) == Unit_1)()):
        # (Line 282) return True;
        EUDReturn(True)
        # (Line 283) }
        # (Line 284) return False;
    EUDEndIf()
    EUDReturn(False)
    # (Line 285) }
    # (Line 286) function BuildResetEPD(unitEPD) {

@EUDFunc
def BuildResetEPD(unitEPD):
    # (Line 296) unitEPD += 0x098 / 4;
    unitEPD.__iadd__(0x098 // 4)
    # (Line 297) const oldcp = getcurpl();
    oldcp = f_getcurpl()
    # (Line 298) setcurpl(unitEPD);
    f_setcurpl(unitEPD)
    # (Line 299) DoActions(list(
    # (Line 300) SetDeaths(CurrentPlayer, SetTo, 0xE400E4, 0),
    # (Line 301) SetMemory(0x6509B0, Add, 1),
    # (Line 302) SetDeaths(CurrentPlayer, SetTo, 0xE400E4, 0),
    # (Line 303) SetMemory(0x6509B0, Add, 1),
    # (Line 304) SetDeathsX(CurrentPlayer, SetTo, 228, 0, 0xFFFF),
    # (Line 305) SetMemory(0x6509B0, Add, 1),
    # (Line 306) SetDeathsX(CurrentPlayer, SetTo, 0x20000, 0, 0xFF0000),
    # (Line 307) ));
    DoActions(FlattenList([SetDeaths(CurrentPlayer, SetTo, 0xE400E4, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 0xE400E4, 0), SetMemory(0x6509B0, Add, 1), SetDeathsX(CurrentPlayer, SetTo, 228, 0, 0xFFFF), SetMemory(0x6509B0, Add, 1), SetDeathsX(CurrentPlayer, SetTo, 0x20000, 0, 0xFF0000)]))
    # (Line 308) setcurpl(oldcp);
    f_setcurpl(oldcp)
    # (Line 309) }
    # (Line 310) function UnitClickCheck(ClickPlayer ,Index) {

@EUDFunc
def UnitClickCheck(ClickPlayer, Index):
    # (Line 322) if(
    _t1 = EUDIf()
    # (Line 323) Memory(0x6284E8 + ClickPlayer * 48, (10), 0x628298 - 0x150 * Index)
    # (Line 324) ){
    if _t1(Memory(0x6284E8 + ClickPlayer * 48, (10), 0x628298 - 0x150 * Index)):
        # (Line 325) return True;
        EUDReturn(True)
        # (Line 326) }
        # (Line 327) return False;
    EUDEndIf()
    EUDReturn(False)
    # (Line 328) }
    # (Line 329) function VultureSkinCreate() {

@EUDFunc
def VultureSkinCreate():
    # (Line 330) EUDPlayerLoop()();
    EUDPlayerLoop()()
    # (Line 331) if (getcurpl() == 0 || getcurpl() == 1 || getcurpl() == 2 || getcurpl() == 3 || getcurpl() == 4 || getcurpl() == 5) {
    if EUDIf()(EUDSCOr()(f_getcurpl() == 0)(f_getcurpl() == 1)(f_getcurpl() == 2)(f_getcurpl() == 3)(f_getcurpl() == 4)(f_getcurpl() == 5)()):
        # (Line 332) if(
        _t2 = EUDIf()
        # (Line 333) ControlDirection == 0
        # (Line 334) ){
        if _t2(ControlDirection == 0):
            # (Line 335) CenterView((6));
            # (Line 336) CreateUnit(1, (84), (6), (13));
            DoActions(CenterView((6)))
            # (Line 337) }
            DoActions(CreateUnit(1, (84), (6), (13)))
            # (Line 338) else{
        if EUDElse()():
            # (Line 339) CenterView((8));
            # (Line 340) CreateUnit(1, (84), (8), (13));
            DoActions(CenterView((8)))
            # (Line 341) }
            DoActions(CreateUnit(1, (84), (8), (13)))
            # (Line 342) KillUnit((84), (13));
        EUDEndIf()
        # (Line 343) Vulture[getcurpl()] = epdread_epd(EPD(0x628438));
        DoActions(KillUnit((84), (13)))
        _ARRW(Vulture, f_getcurpl()) << (f_epdread_epd(EPD(0x628438)))
        # (Line 344) if(
        _t3 = EUDIf()
        # (Line 345) ControlDirection == 0
        # (Line 346) ){
        if _t3(ControlDirection == 0):
            # (Line 347) if(
            _t4 = EUDIf()
            # (Line 348) Skin_Select[getcurpl()] == 1
            # (Line 349) ){
            if _t4(Skin_Select[f_getcurpl()] == 1):
                # (Line 350) wwrite(0x665AC0 + 1696 + 244 * 2, 140);
                f_wwrite(0x665AC0 + 1696 + 244 * 2, 140)
                # (Line 352) if(
                _t5 = EUDIf()
                # (Line 353) IGO_Sera[getcurpl()] == 1
                # (Line 354) ){
                if _t5(IGO_Sera[f_getcurpl()] == 1):
                    # (Line 355) bwrite(0x666778 + 14000 + 929 * 1, 16);
                    f_bwrite(0x666778 + 14000 + 929 * 1, 16)
                    # (Line 356) wwrite(0x665AC0 + 1696 + 244 * 2, 929);
                    f_wwrite(0x665AC0 + 1696 + 244 * 2, 929)
                    # (Line 357) dwwrite(0x666778 + 34000 + 141 * 4, 269);
                    f_dwwrite(0x666778 + 34000 + 141 * 4, 269)
                    # (Line 358) }
                    # (Line 360) CreateUnit(1, (PVulture[getcurpl()]), (6), (13));
                EUDEndIf()
                # (Line 361) dwwrite(0x666778 + 34000 + 141 * 4, 275);
                DoActions(CreateUnit(1, (PVulture[f_getcurpl()]), (6), (13)))
                f_dwwrite(0x666778 + 34000 + 141 * 4, 275)
                # (Line 362) }
                # (Line 363) else{
            if EUDElse()():
                # (Line 364) if(
                _t6 = EUDIf()
                # (Line 365) Skin_Select[getcurpl()] == 2
                # (Line 366) ){
                if _t6(Skin_Select[f_getcurpl()] == 2):
                    # (Line 367) wwrite(0x665AC0 + 1696 + 244 * 2, 243);
                    f_wwrite(0x665AC0 + 1696 + 244 * 2, 243)
                    # (Line 368) CreateUnit(1, (PVulture[getcurpl()]), (6), (13));
                    # (Line 369) }
                    DoActions(CreateUnit(1, (PVulture[f_getcurpl()]), (6), (13)))
                    # (Line 370) else{
                if EUDElse()():
                    # (Line 371) if(
                    _t7 = EUDIf()
                    # (Line 372) Skin_Select[getcurpl()] == 3
                    # (Line 373) ){
                    if _t7(Skin_Select[f_getcurpl()] == 3):
                        # (Line 374) wwrite(0x665AC0 + 1696 + 244 * 2, 38);
                        f_wwrite(0x665AC0 + 1696 + 244 * 2, 38)
                        # (Line 375) CreateUnit(1, (PVulture[getcurpl()]), (6), (13));
                        # (Line 376) }
                        DoActions(CreateUnit(1, (PVulture[f_getcurpl()]), (6), (13)))
                        # (Line 377) else{
                    if EUDElse()():
                        # (Line 378) if(
                        _t8 = EUDIf()
                        # (Line 379) Skin_Select[getcurpl()] == 4
                        # (Line 380) ){
                        if _t8(Skin_Select[f_getcurpl()] == 4):
                            # (Line 381) wwrite(0x665AC0 + 1696 + 244 * 2, 256);
                            f_wwrite(0x665AC0 + 1696 + 244 * 2, 256)
                            # (Line 382) bwrite(0x666778 + 14000 + 256 * 1, 10);
                            f_bwrite(0x666778 + 14000 + 256 * 1, 10)
                            # (Line 383) dwwrite(0x666778 + 34000 + 256 * 4, 362);
                            f_dwwrite(0x666778 + 34000 + 256 * 4, 362)
                            # (Line 384) dwwrite(0x666778 + 34000 + 940 * 4, 269);
                            f_dwwrite(0x666778 + 34000 + 940 * 4, 269)
                            # (Line 385) CreateUnit(1, (PVulture[getcurpl()]), (6), (13));
                            # (Line 386) }
                            DoActions(CreateUnit(1, (PVulture[f_getcurpl()]), (6), (13)))
                            # (Line 387) else{
                        if EUDElse()():
                            # (Line 388) wwrite(0x665AC0 + 1696 + 244 * 2, 256);
                            f_wwrite(0x665AC0 + 1696 + 244 * 2, 256)
                            # (Line 389) bwrite(0x666778 + 14000 + 256 * 1, 0);
                            f_bwrite(0x666778 + 14000 + 256 * 1, 0)
                            # (Line 390) dwwrite(0x666778 + 34000 + 256 * 4, 86);
                            f_dwwrite(0x666778 + 34000 + 256 * 4, 86)
                            # (Line 391) CreateUnit(1, (PVulture[getcurpl()]), (6), (13));
                            # (Line 392) }
                            DoActions(CreateUnit(1, (PVulture[f_getcurpl()]), (6), (13)))
                            # (Line 393) }
                        EUDEndIf()
                        # (Line 394) }
                    EUDEndIf()
                    # (Line 395) }
                EUDEndIf()
                # (Line 396) }
            EUDEndIf()
            # (Line 397) else{
        if EUDElse()():
            # (Line 398) if(
            _t9 = EUDIf()
            # (Line 399) Skin_Select[getcurpl()] == 1
            # (Line 400) ){
            if _t9(Skin_Select[f_getcurpl()] == 1):
                # (Line 401) wwrite(0x665AC0 + 1696 + 244 * 2, 140);
                f_wwrite(0x665AC0 + 1696 + 244 * 2, 140)
                # (Line 403) if(
                _t10 = EUDIf()
                # (Line 404) IGO_Sera[getcurpl()] == 1
                # (Line 405) ){
                if _t10(IGO_Sera[f_getcurpl()] == 1):
                    # (Line 406) bwrite(0x666778 + 14000 + 929 * 1, 16);
                    f_bwrite(0x666778 + 14000 + 929 * 1, 16)
                    # (Line 407) wwrite(0x665AC0 + 1696 + 244 * 2, 929);
                    f_wwrite(0x665AC0 + 1696 + 244 * 2, 929)
                    # (Line 408) dwwrite(0x666778 + 34000 + 141 * 4, 269);
                    f_dwwrite(0x666778 + 34000 + 141 * 4, 269)
                    # (Line 409) }
                    # (Line 411) CreateUnit(1, (PVulture[getcurpl()]), (8), (13));
                EUDEndIf()
                # (Line 412) dwwrite(0x666778 + 34000 + 141 * 4, 275);
                DoActions(CreateUnit(1, (PVulture[f_getcurpl()]), (8), (13)))
                f_dwwrite(0x666778 + 34000 + 141 * 4, 275)
                # (Line 413) }
                # (Line 414) else{
            if EUDElse()():
                # (Line 415) if(
                _t11 = EUDIf()
                # (Line 416) Skin_Select[getcurpl()] == 2
                # (Line 417) ){
                if _t11(Skin_Select[f_getcurpl()] == 2):
                    # (Line 418) wwrite(0x665AC0 + 1696 + 244 * 2, 243);
                    f_wwrite(0x665AC0 + 1696 + 244 * 2, 243)
                    # (Line 419) CreateUnit(1, (PVulture[getcurpl()]), (8), (13));
                    # (Line 420) }
                    DoActions(CreateUnit(1, (PVulture[f_getcurpl()]), (8), (13)))
                    # (Line 421) else{
                if EUDElse()():
                    # (Line 422) if(
                    _t12 = EUDIf()
                    # (Line 423) Skin_Select[getcurpl()] == 3
                    # (Line 424) ){
                    if _t12(Skin_Select[f_getcurpl()] == 3):
                        # (Line 425) wwrite(0x665AC0 + 1696 + 244 * 2, 38);
                        f_wwrite(0x665AC0 + 1696 + 244 * 2, 38)
                        # (Line 426) CreateUnit(1, (PVulture[getcurpl()]), (8), (13));
                        # (Line 427) }
                        DoActions(CreateUnit(1, (PVulture[f_getcurpl()]), (8), (13)))
                        # (Line 428) else{
                    if EUDElse()():
                        # (Line 429) if(
                        _t13 = EUDIf()
                        # (Line 430) Skin_Select[getcurpl()] == 4
                        # (Line 431) ){
                        if _t13(Skin_Select[f_getcurpl()] == 4):
                            # (Line 432) wwrite(0x665AC0 + 1696 + 244 * 2, 256);
                            f_wwrite(0x665AC0 + 1696 + 244 * 2, 256)
                            # (Line 433) bwrite(0x666778 + 14000 + 256 * 1, 10);
                            f_bwrite(0x666778 + 14000 + 256 * 1, 10)
                            # (Line 434) dwwrite(0x666778 + 34000 + 256 * 4, 362);
                            f_dwwrite(0x666778 + 34000 + 256 * 4, 362)
                            # (Line 435) dwwrite(0x666778 + 34000 + 940 * 4, 269);
                            f_dwwrite(0x666778 + 34000 + 940 * 4, 269)
                            # (Line 436) CreateUnit(1, (PVulture[getcurpl()]), (8), (13));
                            # (Line 437) }
                            DoActions(CreateUnit(1, (PVulture[f_getcurpl()]), (8), (13)))
                            # (Line 438) else{
                        if EUDElse()():
                            # (Line 439) wwrite(0x665AC0 + 1696 + 244 * 2, 256);
                            f_wwrite(0x665AC0 + 1696 + 244 * 2, 256)
                            # (Line 440) bwrite(0x666778 + 14000 + 256 * 1, 0);
                            f_bwrite(0x666778 + 14000 + 256 * 1, 0)
                            # (Line 441) dwwrite(0x666778 + 34000 + 256 * 4, 86);
                            f_dwwrite(0x666778 + 34000 + 256 * 4, 86)
                            # (Line 442) CreateUnit(1, (PVulture[getcurpl()]), (8), (13));
                            # (Line 443) }
                            DoActions(CreateUnit(1, (PVulture[f_getcurpl()]), (8), (13)))
                            # (Line 444) }
                        EUDEndIf()
                        # (Line 445) }
                    EUDEndIf()
                    # (Line 446) }
                EUDEndIf()
                # (Line 447) }
            EUDEndIf()
            # (Line 448) if(
        EUDEndIf()
        _t14 = EUDIf()
        # (Line 449) Vulture_Booster[getcurpl()] == 1
        # (Line 450) ){
        if _t14(Vulture_Booster[f_getcurpl()] == 1):
            # (Line 451) SetMemoryEPD(Vulture[getcurpl()] + 0x034 / 4, SetTo, 1575);
            # (Line 452) wwrite_epd(Vulture[getcurpl()] + 0x048 / 4,  0x048 % 4, 46);
            DoActions(SetMemoryEPD(Vulture[f_getcurpl()] + 0x034 // 4, SetTo, 1575))
            f_wwrite_epd(Vulture[f_getcurpl()] + 0x048 // 4, 0x048 % 4, 46)
            # (Line 453) bwrite_epd(Vulture[getcurpl()] + 0x022 / 4,  0x022 % 4, 60);
            f_bwrite_epd(Vulture[f_getcurpl()] + 0x022 // 4, 0x022 % 4, 60)
            # (Line 454) if(
            _t15 = EUDIf()
            # (Line 455) Memory(0x57F1B0, Exactly, (getcurpl()))
            # (Line 456) ){
            if _t15(Memory(0x57F1B0, Exactly, (f_getcurpl()))):
                # (Line 457) btnPtr, btnPos = EPD(0x5187EC) + 57, 5 * 5;
                _SV([btnPtr, btnPos], [EPD(0x5187EC) + 57, 5 * 5])
                # (Line 458) dwadd_epd(btnPtr, 0);
                f_dwadd_epd(btnPtr, 0)
                # (Line 459) btnPos += epdread_epd(btnPtr);
                btnPos.__iadd__(f_epdread_epd(btnPtr))
                # (Line 460) oldCP = getcurpl();
                oldCP << (f_getcurpl())
                # (Line 461) DoActions(list(
                # (Line 462) SetMemory(0x6509B0, SetTo, btnPos),
                # (Line 463) SetDeaths(CurrentPlayer, SetTo, 24576007, 0),
                # (Line 464) SetMemory(0x6509B0, Add, 1),
                # (Line 465) SetDeaths(CurrentPlayer, SetTo, 4361824, 0),
                # (Line 466) SetMemory(0x6509B0, Add, 1),
                # (Line 467) SetDeaths(CurrentPlayer, SetTo, 4338864, 0),
                # (Line 468) SetMemory(0x6509B0, Add, 1),
                # (Line 469) SetDeaths(CurrentPlayer, SetTo, 327685, 0),
                # (Line 470) SetMemory(0x6509B0, Add, 1),
                # (Line 471) SetDeaths(CurrentPlayer, SetTo, 1396, 0),
                # (Line 472) SetMemory(0x6509B0, SetTo, oldCP),
                # (Line 473) ));
                DoActions(FlattenList([SetMemory(0x6509B0, SetTo, btnPos), SetDeaths(CurrentPlayer, SetTo, 24576007, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 4361824, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 4338864, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 327685, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 1396, 0), SetMemory(0x6509B0, SetTo, oldCP)]))
                # (Line 474) }
                # (Line 475) }
            EUDEndIf()
            # (Line 476) else{
        if EUDElse()():
            # (Line 477) SetMemoryEPD(Vulture[getcurpl()] + 0x034 / 4, SetTo, 1050);
            # (Line 478) wwrite_epd(Vulture[getcurpl()] + 0x048 / 4,  0x048 % 4, 23);
            DoActions(SetMemoryEPD(Vulture[f_getcurpl()] + 0x034 // 4, SetTo, 1050))
            f_wwrite_epd(Vulture[f_getcurpl()] + 0x048 // 4, 0x048 % 4, 23)
            # (Line 479) bwrite_epd(Vulture[getcurpl()] + 0x022 / 4,  0x022 % 4, 28);
            f_bwrite_epd(Vulture[f_getcurpl()] + 0x022 // 4, 0x022 % 4, 28)
            # (Line 480) if(
            _t16 = EUDIf()
            # (Line 481) Memory(0x57F1B0, Exactly, (getcurpl()))
            # (Line 482) ){
            if _t16(Memory(0x57F1B0, Exactly, (f_getcurpl()))):
                # (Line 483) btnPtr, btnPos = EPD(0x5187EC) + 57, 5 * 5;
                _SV([btnPtr, btnPos], [EPD(0x5187EC) + 57, 5 * 5])
                # (Line 484) dwadd_epd(btnPtr, 0);
                f_dwadd_epd(btnPtr, 0)
                # (Line 485) btnPos += epdread_epd(btnPtr);
                btnPos.__iadd__(f_epdread_epd(btnPtr))
                # (Line 486) oldCP = getcurpl();
                oldCP << (f_getcurpl())
                # (Line 487) DoActions(list(
                # (Line 488) SetMemory(0x6509B0, SetTo, btnPos),
                # (Line 489) SetDeaths(CurrentPlayer, SetTo, 24510471, 0),
                # (Line 490) SetMemory(0x6509B0, Add, 1),
                # (Line 491) SetDeaths(CurrentPlayer, SetTo, 4361824, 0),
                # (Line 492) SetMemory(0x6509B0, Add, 1),
                # (Line 493) SetDeaths(CurrentPlayer, SetTo, 4338864, 0),
                # (Line 494) SetMemory(0x6509B0, Add, 1),
                # (Line 495) SetDeaths(CurrentPlayer, SetTo, 327685, 0),
                # (Line 496) SetMemory(0x6509B0, Add, 1),
                # (Line 497) SetDeaths(CurrentPlayer, SetTo, 1395, 0),
                # (Line 498) SetMemory(0x6509B0, SetTo, oldCP),
                # (Line 499) ));
                DoActions(FlattenList([SetMemory(0x6509B0, SetTo, btnPos), SetDeaths(CurrentPlayer, SetTo, 24510471, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 4361824, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 4338864, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 327685, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 1395, 0), SetMemory(0x6509B0, SetTo, oldCP)]))
                # (Line 500) }
                # (Line 501) }
            EUDEndIf()
            # (Line 502) hotkeyUnitEPD(Vulture[getcurpl()],getcurpl(),1,0);
        EUDEndIf()
        f_hotkeyUnitEPD(Vulture[f_getcurpl()], f_getcurpl(), 1, 0)
        # (Line 503) }
        # (Line 504) EUDEndPlayerLoop();
    EUDEndIf()
    EUDEndPlayerLoop()
    # (Line 505) }
    # (Line 506) function EnemyCreate(Units ,Counts_1 ,Counts_2 ,Counts_3) {

@EUDFunc
def EnemyCreate(Units, Counts_1, Counts_2, Counts_3):
    # (Line 507) if(
    _t1 = EUDIf()
    # (Line 508) ControlDirection == 0
    # (Line 509) ){
    if _t1(ControlDirection == 0):
        # (Line 510) CreateUnit(Counts_1, (Units), (2), (6));
        # (Line 511) if(
        DoActions(CreateUnit(Counts_1, (Units), (2), (6)))
        _t2 = EUDIf()
        # (Line 512) Counts_2 >= 1
        # (Line 513) ){
        if _t2(Counts_2 >= 1):
            # (Line 514) CreateUnit(Counts_2, (Units), (8), (6));
            # (Line 515) }
            DoActions(CreateUnit(Counts_2, (Units), (8), (6)))
            # (Line 516) CreateUnit(Counts_3, (Units), (11), (6));
        EUDEndIf()
        # (Line 517) Order((230), (6), (2), (1), (1));
        DoActions(CreateUnit(Counts_3, (Units), (11), (6)))
        # (Line 518) Order((230), (6), (8), (1), (6));
        DoActions(Order((230), (6), (2), (1), (1)))
        # (Line 519) Order((230), (6), (11), (1), (9));
        DoActions(Order((230), (6), (8), (1), (6)))
        # (Line 520) }
        DoActions(Order((230), (6), (11), (1), (9)))
        # (Line 521) else{
    if EUDElse()():
        # (Line 522) CreateUnit(Counts_1, (Units), (1), (6));
        # (Line 523) if(
        DoActions(CreateUnit(Counts_1, (Units), (1), (6)))
        _t3 = EUDIf()
        # (Line 524) Counts_2 >= 1
        # (Line 525) ){
        if _t3(Counts_2 >= 1):
            # (Line 526) CreateUnit(Counts_2, (Units), (6), (6));
            # (Line 527) }
            DoActions(CreateUnit(Counts_2, (Units), (6), (6)))
            # (Line 528) CreateUnit(Counts_3, (Units), (9), (6));
        EUDEndIf()
        # (Line 529) Order((230), (6), (1), (1), (2));
        DoActions(CreateUnit(Counts_3, (Units), (9), (6)))
        # (Line 530) Order((230), (6), (6), (1), (8));
        DoActions(Order((230), (6), (1), (1), (2)))
        # (Line 531) Order((230), (6), (9), (1), (11));
        DoActions(Order((230), (6), (6), (1), (8)))
        # (Line 532) }
        DoActions(Order((230), (6), (9), (1), (11)))
        # (Line 533) }
    EUDEndIf()
    # (Line 534) function EnemyCreateOne(Units ,Counts) {

@EUDFunc
def EnemyCreateOne(Units, Counts):
    # (Line 535) if(
    _t1 = EUDIf()
    # (Line 536) ControlDirection == 0
    # (Line 537) ){
    if _t1(ControlDirection == 0):
        # (Line 538) CreateUnit(Counts, (Units), (8), (6));
        # (Line 539) Order((230), (6), (24), (1), (6));
        DoActions(CreateUnit(Counts, (Units), (8), (6)))
        # (Line 540) }
        DoActions(Order((230), (6), (24), (1), (6)))
        # (Line 541) else{
    if EUDElse()():
        # (Line 542) CreateUnit(Counts, (Units), (6), (6));
        # (Line 543) Order((230), (6), (24), (1), (8));
        DoActions(CreateUnit(Counts, (Units), (6), (6)))
        # (Line 544) }
        DoActions(Order((230), (6), (24), (1), (8)))
        # (Line 545) }
    EUDEndIf()
    # (Line 546) function 방향_조정(Direction ,총알 ,유닛) {

@EUDFunc
def f_방향_조정(Direction, 총알, 유닛):
    # (Line 547) Unit_Direction = bread_epd(유닛 + 0x021 / 4,  0x021 % 4);
    Unit_Direction << (f_bread_epd(유닛 + 0x021 // 4, 0x021 % 4))
    # (Line 548) if(
    _t1 = EUDIf()
    # (Line 549) Unit_Direction + Direction > 255 &&
    # (Line 550) Unit_Direction + Direction < 510
    # (Line 551) ){
    if _t1(EUDSCAnd()(Unit_Direction + Direction <= 255, neg=True)(Unit_Direction + Direction >= 510, neg=True)()):
        # (Line 552) Unit_Direction -= 255;
        Unit_Direction.__isub__(255)
        # (Line 553) bwrite_epd(총알 + 0x021 / 4,  0x021 % 4, Unit_Direction + Direction);
        f_bwrite_epd(총알 + 0x021 // 4, 0x021 % 4, Unit_Direction + Direction)
        # (Line 554) bwrite_epd(총알 + 0x023 / 4,  0x023 % 4, Unit_Direction + Direction);
        f_bwrite_epd(총알 + 0x023 // 4, 0x023 % 4, Unit_Direction + Direction)
        # (Line 555) }
        # (Line 556) else{
    if EUDElse()():
        # (Line 557) if(
        _t2 = EUDIf()
        # (Line 558) 255 + Unit_Direction + Direction <= 255
        # (Line 559) ){
        if _t2(255 + Unit_Direction + Direction <= 255):
            # (Line 560) Unit_Direction += 255;
            Unit_Direction.__iadd__(255)
            # (Line 561) bwrite_epd(총알 + 0x021 / 4,  0x021 % 4, Unit_Direction + Direction);
            f_bwrite_epd(총알 + 0x021 // 4, 0x021 % 4, Unit_Direction + Direction)
            # (Line 562) bwrite_epd(총알 + 0x023 / 4,  0x023 % 4, Unit_Direction + Direction);
            f_bwrite_epd(총알 + 0x023 // 4, 0x023 % 4, Unit_Direction + Direction)
            # (Line 563) }
            # (Line 564) else{
        if EUDElse()():
            # (Line 565) bwrite_epd(총알 + 0x021 / 4,  0x021 % 4, Unit_Direction + Direction);
            f_bwrite_epd(총알 + 0x021 // 4, 0x021 % 4, Unit_Direction + Direction)
            # (Line 566) bwrite_epd(총알 + 0x023 / 4,  0x023 % 4, Unit_Direction + Direction);
            f_bwrite_epd(총알 + 0x023 // 4, 0x023 % 4, Unit_Direction + Direction)
            # (Line 567) }
            # (Line 568) }
        EUDEndIf()
        # (Line 569) }
    EUDEndIf()
    # (Line 570) function 방향_조정_수동(Direction ,총알) {

@EUDFunc
def f_방향_조정_수동(Direction, 총알):
    # (Line 571) if(
    _t1 = EUDIf()
    # (Line 572) Direction > 255 &&
    # (Line 573) Direction < 5000
    # (Line 574) ){
    if _t1(EUDSCAnd()(Direction <= 255, neg=True)(Direction >= 5000, neg=True)()):
        # (Line 575) Direction -= 255;
        Direction.__isub__(255)
        # (Line 576) bwrite_epd(총알 + 0x021 / 4,  0x021 % 4, Direction);
        f_bwrite_epd(총알 + 0x021 // 4, 0x021 % 4, Direction)
        # (Line 577) bwrite_epd(총알 + 0x023 / 4,  0x023 % 4, Direction);
        f_bwrite_epd(총알 + 0x023 // 4, 0x023 % 4, Direction)
        # (Line 578) }
        # (Line 579) else{
    if EUDElse()():
        # (Line 580) if(
        _t2 = EUDIf()
        # (Line 581) 255 + Direction <= 255
        # (Line 582) ){
        if _t2(255 + Direction <= 255):
            # (Line 583) Direction += 255;
            Direction.__iadd__(255)
            # (Line 584) bwrite_epd(총알 + 0x021 / 4,  0x021 % 4, Direction);
            f_bwrite_epd(총알 + 0x021 // 4, 0x021 % 4, Direction)
            # (Line 585) bwrite_epd(총알 + 0x023 / 4,  0x023 % 4, Direction);
            f_bwrite_epd(총알 + 0x023 // 4, 0x023 % 4, Direction)
            # (Line 586) }
            # (Line 587) else{
        if EUDElse()():
            # (Line 588) bwrite_epd(총알 + 0x021 / 4,  0x021 % 4, Direction);
            f_bwrite_epd(총알 + 0x021 // 4, 0x021 % 4, Direction)
            # (Line 589) bwrite_epd(총알 + 0x023 / 4,  0x023 % 4, Direction);
            f_bwrite_epd(총알 + 0x023 // 4, 0x023 % 4, Direction)
            # (Line 590) }
            # (Line 591) }
        EUDEndIf()
        # (Line 592) }
    EUDEndIf()
    # (Line 593) function SetLocationToUnitPos_epd(Location ,UnitEPD) {

@EUDFunc
def SetLocationToUnitPos_epd(Location, UnitEPD):
    # (Line 594) const UnitXY = dwread_epd(UnitEPD + 0x28/4);
    UnitXY = f_dwread_epd(UnitEPD + 0x28 // 4)
    # (Line 595) const UnitX, UnitY = dwbreak(UnitXY)[[0, 1]];
    UnitX, UnitY = List2Assignable([_SRET(f_dwbreak(UnitXY), [0, 1])])
    # (Line 596) SetMemoryEPD(EPD(0x58DC60) + Location * 5 + 0, (7), UnitX);
    # (Line 597) SetMemoryEPD(EPD(0x58DC60) + Location * 5 + 1, (7), UnitY);
    DoActions(SetMemoryEPD(EPD(0x58DC60) + Location * 5 + 0, (7), UnitX))
    # (Line 598) SetMemoryEPD(EPD(0x58DC60) + Location * 5 + 2, (7), UnitX);
    DoActions(SetMemoryEPD(EPD(0x58DC60) + Location * 5 + 1, (7), UnitY))
    # (Line 599) SetMemoryEPD(EPD(0x58DC60) + Location * 5 + 3, (7), UnitY);
    DoActions(SetMemoryEPD(EPD(0x58DC60) + Location * 5 + 2, (7), UnitX))
    # (Line 600) }
    DoActions(SetMemoryEPD(EPD(0x58DC60) + Location * 5 + 3, (7), UnitY))
    # (Line 601) function SetLocation(Location ,X ,Y ,Width ,Height) {

@EUDFunc
def SetLocation(Location, X, Y, Width, Height):
    # (Line 618) SetMemory(0x58DC60 + Location * 20 + 4 * 0, SetTo, X - Width / 2);
    # (Line 619) SetMemory(0x58DC60 + Location * 20 + 4 * 2, SetTo, X + Width / 2);
    DoActions(SetMemory(0x58DC60 + Location * 20 + 4 * 0, SetTo, X - Width // 2))
    # (Line 620) SetMemory(0x58DC60 + Location * 20 + 4 * 1, SetTo, Y - Height / 2);
    DoActions(SetMemory(0x58DC60 + Location * 20 + 4 * 2, SetTo, X + Width // 2))
    # (Line 621) SetMemory(0x58DC60 + Location * 20 + 4 * 3, SetTo, Y + Height / 2);
    DoActions(SetMemory(0x58DC60 + Location * 20 + 4 * 1, SetTo, Y - Height // 2))
    # (Line 622) }
    DoActions(SetMemory(0x58DC60 + Location * 20 + 4 * 3, SetTo, Y + Height // 2))
    # (Line 623) function 팔레트(Plt_Player ,Plt_Image ,Plt_Location) {

@EUDFunc
def f_팔레트(Plt_Player, Plt_Image, Plt_Location):
    # (Line 624) wwrite(0x665AC0 + 1696 + 380 * 2, Plt_Image);
    f_wwrite(0x665AC0 + 1696 + 380 * 2, Plt_Image)
    # (Line 625) CreateUnit(1, (33), (Plt_Location + 1), (Plt_Player));
    # (Line 626) KillUnit((33), (Plt_Player));
    DoActions(CreateUnit(1, (33), (Plt_Location + 1), (Plt_Player)))
    # (Line 627) }
    DoActions(KillUnit((33), (Plt_Player)))
    # (Line 628) function 원모양이펙트(Loc_ ,atLoc_ ,TargetPlayer ,TargetUnit ,R ,Effect) {

@EUDFunc
def f_원모양이펙트(Loc_, atLoc_, TargetPlayer, TargetUnit, R, Effect):
    # (Line 648) for(var i = 1; i<R / 32 + 1; i++){
    i = EUDVariable()
    i << (1)
    if EUDWhile()(i >= R // 32 + 1, neg=True):
        def _t2():
            i.__iadd__(1)
        # (Line 649) MoveLocation((Loc_ + 1), (TargetUnit), (TargetPlayer), (atLoc_ + 1));
        # (Line 650) EUDMoveLocation(Loc_,32 * i,sqrt(R*R - (32 * i)*(32 * i)));
        DoActions(MoveLocation((Loc_ + 1), (TargetUnit), (TargetPlayer), (atLoc_ + 1)))
        EUDMoveLocation(Loc_, 32 * i, f_sqrt(R * R - (32 * i) * (32 * i)))
        # (Line 651) 팔레트(6,Effect,Loc_);
        f_팔레트(6, Effect, Loc_)
        # (Line 652) }
        # (Line 653) for(var i = 1; i<R / 32; i++){
        EUDSetContinuePoint()
        _t2()
    EUDEndWhile()
    i = EUDVariable()
    i << (1)
    if EUDWhile()(i >= R // 32, neg=True):
        def _t4():
            i.__iadd__(1)
        # (Line 654) MoveLocation((Loc_ + 1), (TargetUnit), (TargetPlayer), (atLoc_ + 1));
        # (Line 655) EUDMoveLocation(Loc_,sqrt(R*R - (32 * i)*(32 * i)),32 * i);
        DoActions(MoveLocation((Loc_ + 1), (TargetUnit), (TargetPlayer), (atLoc_ + 1)))
        EUDMoveLocation(Loc_, f_sqrt(R * R - (32 * i) * (32 * i)), 32 * i)
        # (Line 656) 팔레트(6,Effect,Loc_);
        f_팔레트(6, Effect, Loc_)
        # (Line 657) }
        # (Line 660) for(var i = 1; i<R / 32; i++){
        EUDSetContinuePoint()
        _t4()
    EUDEndWhile()
    i = EUDVariable()
    i << (1)
    if EUDWhile()(i >= R // 32, neg=True):
        def _t6():
            i.__iadd__(1)
        # (Line 661) MoveLocation((Loc_ + 1), (TargetUnit), (TargetPlayer), (atLoc_ + 1));
        # (Line 662) EUDMoveLocation(Loc_,32 * i,-sqrt(R*R - (32 * i)*(32 * i)));
        DoActions(MoveLocation((Loc_ + 1), (TargetUnit), (TargetPlayer), (atLoc_ + 1)))
        EUDMoveLocation(Loc_, 32 * i, -f_sqrt(R * R - (32 * i) * (32 * i)))
        # (Line 663) 팔레트(6,Effect,Loc_);
        f_팔레트(6, Effect, Loc_)
        # (Line 664) }
        # (Line 665) for(var i = 1; i<R / 32 + 1; i++){
        EUDSetContinuePoint()
        _t6()
    EUDEndWhile()
    i = EUDVariable()
    i << (1)
    if EUDWhile()(i >= R // 32 + 1, neg=True):
        def _t8():
            i.__iadd__(1)
        # (Line 666) MoveLocation((Loc_ + 1), (TargetUnit), (TargetPlayer), (atLoc_ + 1));
        # (Line 667) EUDMoveLocation(Loc_,sqrt(R*R - (32 * i)*(32 * i)),-32 * i);
        DoActions(MoveLocation((Loc_ + 1), (TargetUnit), (TargetPlayer), (atLoc_ + 1)))
        EUDMoveLocation(Loc_, f_sqrt(R * R - (32 * i) * (32 * i)), -32 * i)
        # (Line 668) 팔레트(6,Effect,Loc_);
        f_팔레트(6, Effect, Loc_)
        # (Line 669) }
        # (Line 672) for(var i = 1; i<R / 32 + 1; i++){
        EUDSetContinuePoint()
        _t8()
    EUDEndWhile()
    i = EUDVariable()
    i << (1)
    if EUDWhile()(i >= R // 32 + 1, neg=True):
        def _t10():
            i.__iadd__(1)
        # (Line 673) MoveLocation((Loc_ + 1), (TargetUnit), (TargetPlayer), (atLoc_ + 1));
        # (Line 674) EUDMoveLocation(Loc_,-32 * i,-sqrt(R*R - (32 * i)*(32 * i)));
        DoActions(MoveLocation((Loc_ + 1), (TargetUnit), (TargetPlayer), (atLoc_ + 1)))
        EUDMoveLocation(Loc_, -32 * i, -f_sqrt(R * R - (32 * i) * (32 * i)))
        # (Line 675) 팔레트(6,Effect,Loc_);
        f_팔레트(6, Effect, Loc_)
        # (Line 676) }
        # (Line 677) for(var i = 1; i<R / 32; i++){
        EUDSetContinuePoint()
        _t10()
    EUDEndWhile()
    i = EUDVariable()
    i << (1)
    if EUDWhile()(i >= R // 32, neg=True):
        def _t12():
            i.__iadd__(1)
        # (Line 678) MoveLocation((Loc_ + 1), (TargetUnit), (TargetPlayer), (atLoc_ + 1));
        # (Line 679) EUDMoveLocation(Loc_,-sqrt(R*R - (32 * i)*(32 * i)),-32 * i);
        DoActions(MoveLocation((Loc_ + 1), (TargetUnit), (TargetPlayer), (atLoc_ + 1)))
        EUDMoveLocation(Loc_, -f_sqrt(R * R - (32 * i) * (32 * i)), -32 * i)
        # (Line 680) 팔레트(6,Effect,Loc_);
        f_팔레트(6, Effect, Loc_)
        # (Line 681) }
        # (Line 684) for(var i = 1; i<R / 32; i++){
        EUDSetContinuePoint()
        _t12()
    EUDEndWhile()
    i = EUDVariable()
    i << (1)
    if EUDWhile()(i >= R // 32, neg=True):
        def _t14():
            i.__iadd__(1)
        # (Line 685) MoveLocation((Loc_ + 1), (TargetUnit), (TargetPlayer), (atLoc_ + 1));
        # (Line 686) EUDMoveLocation(Loc_,-32 * i,sqrt(R*R - (32 * i)*(32 * i)));
        DoActions(MoveLocation((Loc_ + 1), (TargetUnit), (TargetPlayer), (atLoc_ + 1)))
        EUDMoveLocation(Loc_, -32 * i, f_sqrt(R * R - (32 * i) * (32 * i)))
        # (Line 687) 팔레트(6,Effect,Loc_);
        f_팔레트(6, Effect, Loc_)
        # (Line 688) }
        # (Line 689) for(var i = 1; i<R / 32 + 1; i++){
        EUDSetContinuePoint()
        _t14()
    EUDEndWhile()
    i = EUDVariable()
    i << (1)
    if EUDWhile()(i >= R // 32 + 1, neg=True):
        def _t16():
            i.__iadd__(1)
        # (Line 690) MoveLocation((Loc_ + 1), (TargetUnit), (TargetPlayer), (atLoc_ + 1));
        # (Line 691) EUDMoveLocation(Loc_,-sqrt(R*R - (32 * i)*(32 * i)),32 * i);
        DoActions(MoveLocation((Loc_ + 1), (TargetUnit), (TargetPlayer), (atLoc_ + 1)))
        EUDMoveLocation(Loc_, -f_sqrt(R * R - (32 * i) * (32 * i)), 32 * i)
        # (Line 692) 팔레트(6,Effect,Loc_);
        f_팔레트(6, Effect, Loc_)
        # (Line 693) }
        # (Line 695) }
        EUDSetContinuePoint()
        _t16()
    EUDEndWhile()
    # (Line 696) function 원모양이펙트데미지(Loc_ ,atLoc_ ,TargetPlayer ,TargetUnit ,R ,Effect ,EDamage) {

@EUDFunc
def f_원모양이펙트데미지(Loc_, atLoc_, TargetPlayer, TargetUnit, R, Effect, EDamage):
    # (Line 718) for(var i = 1; i<R / 32 + 1; i++){
    i = EUDVariable()
    i << (1)
    if EUDWhile()(i >= R // 32 + 1, neg=True):
        def _t2():
            i.__iadd__(1)
        # (Line 719) MoveLocation((Loc_ + 1), (TargetUnit), (TargetPlayer), (atLoc_ + 1));
        # (Line 720) EUDMoveLocation(Loc_,32 * i,sqrt(R*R - (32 * i)*(32 * i)));
        DoActions(MoveLocation((Loc_ + 1), (TargetUnit), (TargetPlayer), (atLoc_ + 1)))
        EUDMoveLocation(Loc_, 32 * i, f_sqrt(R * R - (32 * i) * (32 * i)))
        # (Line 721) 팔레트(6,Effect,Loc_);
        f_팔레트(6, Effect, Loc_)
        # (Line 723) EUDPlayerLoop()();
        EUDPlayerLoop()()
        # (Line 724) if (getcurpl() == 0 || getcurpl() == 1 || getcurpl() == 2 || getcurpl() == 3 || getcurpl() == 4 || getcurpl() == 5) {
        if EUDIf()(EUDSCOr()(f_getcurpl() == 0)(f_getcurpl() == 1)(f_getcurpl() == 2)(f_getcurpl() == 3)(f_getcurpl() == 4)(f_getcurpl() == 5)()):
            # (Line 725) if(
            _t4 = EUDIf()
            # (Line 726) Bring((13), (10), 1, (19), (Loc_ + 1)) &&
            # (Line 727) Deaths((13), (10), 0, (197)) &&
            # (Line 728) CircleAleadyHit[getcurpl()] == 0
            # (Line 729) ){
            if _t4(EUDSCAnd()(Bring((13), (10), 1, (19), (Loc_ + 1)))(Deaths((13), (10), 0, (197)))(CircleAleadyHit[f_getcurpl()] == 0)()):
                # (Line 730) SetDeaths((13), (8), EDamage, (197));
                # (Line 731) CreateUnitWithProperties(1, (94), (PLoc[getcurpl()]), (6), UnitProperty(hitpoint = 100, shield = 100, energy = 50, resource = 0, hanger = 0, cloaked = False, burrowed = False, intransit = False, hallucinated = False, invincible = True));
                DoActions(SetDeaths((13), (8), EDamage, (197)))
                # (Line 732) KillUnit((94), (6));
                DoActions(CreateUnitWithProperties(1, (94), (PLoc[f_getcurpl()]), (6), UnitProperty(hitpoint=100, shield=100, energy=50, resource=0, hanger=0, cloaked=False, burrowed=False, intransit=False, hallucinated=False, invincible=True)))
                # (Line 733) CircleAleadyHit[getcurpl()] = 1;
                DoActions(KillUnit((94), (6)))
                _ARRW(CircleAleadyHit, f_getcurpl()) << (1)
                # (Line 734) }
                # (Line 735) }
            EUDEndIf()
            # (Line 736) EUDEndPlayerLoop();
        EUDEndIf()
        EUDEndPlayerLoop()
        # (Line 738) }
        # (Line 739) for(var i = 1; i<R / 32; i++){
        EUDSetContinuePoint()
        _t2()
    EUDEndWhile()
    i = EUDVariable()
    i << (1)
    if EUDWhile()(i >= R // 32, neg=True):
        def _t6():
            i.__iadd__(1)
        # (Line 740) MoveLocation((Loc_ + 1), (TargetUnit), (TargetPlayer), (atLoc_ + 1));
        # (Line 741) EUDMoveLocation(Loc_,sqrt(R*R - (32 * i)*(32 * i)),32 * i);
        DoActions(MoveLocation((Loc_ + 1), (TargetUnit), (TargetPlayer), (atLoc_ + 1)))
        EUDMoveLocation(Loc_, f_sqrt(R * R - (32 * i) * (32 * i)), 32 * i)
        # (Line 742) 팔레트(6,Effect,Loc_);
        f_팔레트(6, Effect, Loc_)
        # (Line 744) EUDPlayerLoop()();
        EUDPlayerLoop()()
        # (Line 745) if (getcurpl() == 0 || getcurpl() == 1 || getcurpl() == 2 || getcurpl() == 3 || getcurpl() == 4 || getcurpl() == 5) {
        if EUDIf()(EUDSCOr()(f_getcurpl() == 0)(f_getcurpl() == 1)(f_getcurpl() == 2)(f_getcurpl() == 3)(f_getcurpl() == 4)(f_getcurpl() == 5)()):
            # (Line 746) if(
            _t8 = EUDIf()
            # (Line 747) Bring((13), (10), 1, (19), (Loc_ + 1)) &&
            # (Line 748) Deaths((13), (10), 0, (197)) &&
            # (Line 749) CircleAleadyHit[getcurpl()] == 0
            # (Line 750) ){
            if _t8(EUDSCAnd()(Bring((13), (10), 1, (19), (Loc_ + 1)))(Deaths((13), (10), 0, (197)))(CircleAleadyHit[f_getcurpl()] == 0)()):
                # (Line 751) SetDeaths((13), (8), EDamage, (197));
                # (Line 752) CreateUnitWithProperties(1, (94), (PLoc[getcurpl()]), (6), UnitProperty(hitpoint = 100, shield = 100, energy = 50, resource = 0, hanger = 0, cloaked = False, burrowed = False, intransit = False, hallucinated = False, invincible = True));
                DoActions(SetDeaths((13), (8), EDamage, (197)))
                # (Line 753) KillUnit((94), (6));
                DoActions(CreateUnitWithProperties(1, (94), (PLoc[f_getcurpl()]), (6), UnitProperty(hitpoint=100, shield=100, energy=50, resource=0, hanger=0, cloaked=False, burrowed=False, intransit=False, hallucinated=False, invincible=True)))
                # (Line 754) CircleAleadyHit[getcurpl()] = 1;
                DoActions(KillUnit((94), (6)))
                _ARRW(CircleAleadyHit, f_getcurpl()) << (1)
                # (Line 755) }
                # (Line 756) }
            EUDEndIf()
            # (Line 757) EUDEndPlayerLoop();
        EUDEndIf()
        EUDEndPlayerLoop()
        # (Line 759) }
        # (Line 762) for(var i = 1; i<R / 32; i++){
        EUDSetContinuePoint()
        _t6()
    EUDEndWhile()
    i = EUDVariable()
    i << (1)
    if EUDWhile()(i >= R // 32, neg=True):
        def _t10():
            i.__iadd__(1)
        # (Line 763) MoveLocation((Loc_ + 1), (TargetUnit), (TargetPlayer), (atLoc_ + 1));
        # (Line 764) EUDMoveLocation(Loc_,32 * i,-sqrt(R*R - (32 * i)*(32 * i)));
        DoActions(MoveLocation((Loc_ + 1), (TargetUnit), (TargetPlayer), (atLoc_ + 1)))
        EUDMoveLocation(Loc_, 32 * i, -f_sqrt(R * R - (32 * i) * (32 * i)))
        # (Line 765) 팔레트(6,Effect,Loc_);
        f_팔레트(6, Effect, Loc_)
        # (Line 767) EUDPlayerLoop()();
        EUDPlayerLoop()()
        # (Line 768) if (getcurpl() == 0 || getcurpl() == 1 || getcurpl() == 2 || getcurpl() == 3 || getcurpl() == 4 || getcurpl() == 5) {
        if EUDIf()(EUDSCOr()(f_getcurpl() == 0)(f_getcurpl() == 1)(f_getcurpl() == 2)(f_getcurpl() == 3)(f_getcurpl() == 4)(f_getcurpl() == 5)()):
            # (Line 769) if(
            _t12 = EUDIf()
            # (Line 770) Bring((13), (10), 1, (19), (Loc_ + 1)) &&
            # (Line 771) Deaths((13), (10), 0, (197)) &&
            # (Line 772) CircleAleadyHit[getcurpl()] == 0
            # (Line 773) ){
            if _t12(EUDSCAnd()(Bring((13), (10), 1, (19), (Loc_ + 1)))(Deaths((13), (10), 0, (197)))(CircleAleadyHit[f_getcurpl()] == 0)()):
                # (Line 774) SetDeaths((13), (8), EDamage, (197));
                # (Line 775) CreateUnitWithProperties(1, (94), (PLoc[getcurpl()]), (6), UnitProperty(hitpoint = 100, shield = 100, energy = 50, resource = 0, hanger = 0, cloaked = False, burrowed = False, intransit = False, hallucinated = False, invincible = True));
                DoActions(SetDeaths((13), (8), EDamage, (197)))
                # (Line 776) KillUnit((94), (6));
                DoActions(CreateUnitWithProperties(1, (94), (PLoc[f_getcurpl()]), (6), UnitProperty(hitpoint=100, shield=100, energy=50, resource=0, hanger=0, cloaked=False, burrowed=False, intransit=False, hallucinated=False, invincible=True)))
                # (Line 777) CircleAleadyHit[getcurpl()] = 1;
                DoActions(KillUnit((94), (6)))
                _ARRW(CircleAleadyHit, f_getcurpl()) << (1)
                # (Line 778) }
                # (Line 779) }
            EUDEndIf()
            # (Line 780) EUDEndPlayerLoop();
        EUDEndIf()
        EUDEndPlayerLoop()
        # (Line 782) }
        # (Line 783) for(var i = 1; i<R / 32 + 1; i++){
        EUDSetContinuePoint()
        _t10()
    EUDEndWhile()
    i = EUDVariable()
    i << (1)
    if EUDWhile()(i >= R // 32 + 1, neg=True):
        def _t14():
            i.__iadd__(1)
        # (Line 784) MoveLocation((Loc_ + 1), (TargetUnit), (TargetPlayer), (atLoc_ + 1));
        # (Line 785) EUDMoveLocation(Loc_,sqrt(R*R - (32 * i)*(32 * i)),-32 * i);
        DoActions(MoveLocation((Loc_ + 1), (TargetUnit), (TargetPlayer), (atLoc_ + 1)))
        EUDMoveLocation(Loc_, f_sqrt(R * R - (32 * i) * (32 * i)), -32 * i)
        # (Line 786) 팔레트(6,Effect,Loc_);
        f_팔레트(6, Effect, Loc_)
        # (Line 788) EUDPlayerLoop()();
        EUDPlayerLoop()()
        # (Line 789) if (getcurpl() == 0 || getcurpl() == 1 || getcurpl() == 2 || getcurpl() == 3 || getcurpl() == 4 || getcurpl() == 5) {
        if EUDIf()(EUDSCOr()(f_getcurpl() == 0)(f_getcurpl() == 1)(f_getcurpl() == 2)(f_getcurpl() == 3)(f_getcurpl() == 4)(f_getcurpl() == 5)()):
            # (Line 790) if(
            _t16 = EUDIf()
            # (Line 791) Bring((13), (10), 1, (19), (Loc_ + 1)) &&
            # (Line 792) Deaths((13), (10), 0, (197)) &&
            # (Line 793) CircleAleadyHit[getcurpl()] == 0
            # (Line 794) ){
            if _t16(EUDSCAnd()(Bring((13), (10), 1, (19), (Loc_ + 1)))(Deaths((13), (10), 0, (197)))(CircleAleadyHit[f_getcurpl()] == 0)()):
                # (Line 795) SetDeaths((13), (8), EDamage, (197));
                # (Line 796) CreateUnitWithProperties(1, (94), (PLoc[getcurpl()]), (6), UnitProperty(hitpoint = 100, shield = 100, energy = 50, resource = 0, hanger = 0, cloaked = False, burrowed = False, intransit = False, hallucinated = False, invincible = True));
                DoActions(SetDeaths((13), (8), EDamage, (197)))
                # (Line 797) KillUnit((94), (6));
                DoActions(CreateUnitWithProperties(1, (94), (PLoc[f_getcurpl()]), (6), UnitProperty(hitpoint=100, shield=100, energy=50, resource=0, hanger=0, cloaked=False, burrowed=False, intransit=False, hallucinated=False, invincible=True)))
                # (Line 798) CircleAleadyHit[getcurpl()] = 1;
                DoActions(KillUnit((94), (6)))
                _ARRW(CircleAleadyHit, f_getcurpl()) << (1)
                # (Line 799) }
                # (Line 800) }
            EUDEndIf()
            # (Line 801) EUDEndPlayerLoop();
        EUDEndIf()
        EUDEndPlayerLoop()
        # (Line 803) }
        # (Line 806) for(var i = 1; i<R / 32 + 1; i++){
        EUDSetContinuePoint()
        _t14()
    EUDEndWhile()
    i = EUDVariable()
    i << (1)
    if EUDWhile()(i >= R // 32 + 1, neg=True):
        def _t18():
            i.__iadd__(1)
        # (Line 807) MoveLocation((Loc_ + 1), (TargetUnit), (TargetPlayer), (atLoc_ + 1));
        # (Line 808) EUDMoveLocation(Loc_,-32 * i,-sqrt(R*R - (32 * i)*(32 * i)));
        DoActions(MoveLocation((Loc_ + 1), (TargetUnit), (TargetPlayer), (atLoc_ + 1)))
        EUDMoveLocation(Loc_, -32 * i, -f_sqrt(R * R - (32 * i) * (32 * i)))
        # (Line 809) 팔레트(6,Effect,Loc_);
        f_팔레트(6, Effect, Loc_)
        # (Line 811) EUDPlayerLoop()();
        EUDPlayerLoop()()
        # (Line 812) if (getcurpl() == 0 || getcurpl() == 1 || getcurpl() == 2 || getcurpl() == 3 || getcurpl() == 4 || getcurpl() == 5) {
        if EUDIf()(EUDSCOr()(f_getcurpl() == 0)(f_getcurpl() == 1)(f_getcurpl() == 2)(f_getcurpl() == 3)(f_getcurpl() == 4)(f_getcurpl() == 5)()):
            # (Line 813) if(
            _t20 = EUDIf()
            # (Line 814) Bring((13), (10), 1, (19), (Loc_ + 1)) &&
            # (Line 815) Deaths((13), (10), 0, (197)) &&
            # (Line 816) CircleAleadyHit[getcurpl()] == 0
            # (Line 817) ){
            if _t20(EUDSCAnd()(Bring((13), (10), 1, (19), (Loc_ + 1)))(Deaths((13), (10), 0, (197)))(CircleAleadyHit[f_getcurpl()] == 0)()):
                # (Line 818) SetDeaths((13), (8), EDamage, (197));
                # (Line 819) CreateUnitWithProperties(1, (94), (PLoc[getcurpl()]), (6), UnitProperty(hitpoint = 100, shield = 100, energy = 50, resource = 0, hanger = 0, cloaked = False, burrowed = False, intransit = False, hallucinated = False, invincible = True));
                DoActions(SetDeaths((13), (8), EDamage, (197)))
                # (Line 820) KillUnit((94), (6));
                DoActions(CreateUnitWithProperties(1, (94), (PLoc[f_getcurpl()]), (6), UnitProperty(hitpoint=100, shield=100, energy=50, resource=0, hanger=0, cloaked=False, burrowed=False, intransit=False, hallucinated=False, invincible=True)))
                # (Line 821) CircleAleadyHit[getcurpl()] = 1;
                DoActions(KillUnit((94), (6)))
                _ARRW(CircleAleadyHit, f_getcurpl()) << (1)
                # (Line 822) }
                # (Line 823) }
            EUDEndIf()
            # (Line 824) EUDEndPlayerLoop();
        EUDEndIf()
        EUDEndPlayerLoop()
        # (Line 826) }
        # (Line 827) for(var i = 1; i<R / 32; i++){
        EUDSetContinuePoint()
        _t18()
    EUDEndWhile()
    i = EUDVariable()
    i << (1)
    if EUDWhile()(i >= R // 32, neg=True):
        def _t22():
            i.__iadd__(1)
        # (Line 828) MoveLocation((Loc_ + 1), (TargetUnit), (TargetPlayer), (atLoc_ + 1));
        # (Line 829) EUDMoveLocation(Loc_,-sqrt(R*R - (32 * i)*(32 * i)),-32 * i);
        DoActions(MoveLocation((Loc_ + 1), (TargetUnit), (TargetPlayer), (atLoc_ + 1)))
        EUDMoveLocation(Loc_, -f_sqrt(R * R - (32 * i) * (32 * i)), -32 * i)
        # (Line 830) 팔레트(6,Effect,Loc_);
        f_팔레트(6, Effect, Loc_)
        # (Line 832) EUDPlayerLoop()();
        EUDPlayerLoop()()
        # (Line 833) if (getcurpl() == 0 || getcurpl() == 1 || getcurpl() == 2 || getcurpl() == 3 || getcurpl() == 4 || getcurpl() == 5) {
        if EUDIf()(EUDSCOr()(f_getcurpl() == 0)(f_getcurpl() == 1)(f_getcurpl() == 2)(f_getcurpl() == 3)(f_getcurpl() == 4)(f_getcurpl() == 5)()):
            # (Line 834) if(
            _t24 = EUDIf()
            # (Line 835) Bring((13), (10), 1, (19), (Loc_ + 1)) &&
            # (Line 836) Deaths((13), (10), 0, (197)) &&
            # (Line 837) CircleAleadyHit[getcurpl()] == 0
            # (Line 838) ){
            if _t24(EUDSCAnd()(Bring((13), (10), 1, (19), (Loc_ + 1)))(Deaths((13), (10), 0, (197)))(CircleAleadyHit[f_getcurpl()] == 0)()):
                # (Line 839) SetDeaths((13), (8), EDamage, (197));
                # (Line 840) CreateUnitWithProperties(1, (94), (PLoc[getcurpl()]), (6), UnitProperty(hitpoint = 100, shield = 100, energy = 50, resource = 0, hanger = 0, cloaked = False, burrowed = False, intransit = False, hallucinated = False, invincible = True));
                DoActions(SetDeaths((13), (8), EDamage, (197)))
                # (Line 841) KillUnit((94), (6));
                DoActions(CreateUnitWithProperties(1, (94), (PLoc[f_getcurpl()]), (6), UnitProperty(hitpoint=100, shield=100, energy=50, resource=0, hanger=0, cloaked=False, burrowed=False, intransit=False, hallucinated=False, invincible=True)))
                # (Line 842) CircleAleadyHit[getcurpl()] = 1;
                DoActions(KillUnit((94), (6)))
                _ARRW(CircleAleadyHit, f_getcurpl()) << (1)
                # (Line 843) }
                # (Line 844) }
            EUDEndIf()
            # (Line 845) EUDEndPlayerLoop();
        EUDEndIf()
        EUDEndPlayerLoop()
        # (Line 847) }
        # (Line 850) for(var i = 1; i<R / 32; i++){
        EUDSetContinuePoint()
        _t22()
    EUDEndWhile()
    i = EUDVariable()
    i << (1)
    if EUDWhile()(i >= R // 32, neg=True):
        def _t26():
            i.__iadd__(1)
        # (Line 851) MoveLocation((Loc_ + 1), (TargetUnit), (TargetPlayer), (atLoc_ + 1));
        # (Line 852) EUDMoveLocation(Loc_,-32 * i,sqrt(R*R - (32 * i)*(32 * i)));
        DoActions(MoveLocation((Loc_ + 1), (TargetUnit), (TargetPlayer), (atLoc_ + 1)))
        EUDMoveLocation(Loc_, -32 * i, f_sqrt(R * R - (32 * i) * (32 * i)))
        # (Line 853) 팔레트(6,Effect,Loc_);
        f_팔레트(6, Effect, Loc_)
        # (Line 855) EUDPlayerLoop()();
        EUDPlayerLoop()()
        # (Line 856) if (getcurpl() == 0 || getcurpl() == 1 || getcurpl() == 2 || getcurpl() == 3 || getcurpl() == 4 || getcurpl() == 5) {
        if EUDIf()(EUDSCOr()(f_getcurpl() == 0)(f_getcurpl() == 1)(f_getcurpl() == 2)(f_getcurpl() == 3)(f_getcurpl() == 4)(f_getcurpl() == 5)()):
            # (Line 857) if(
            _t28 = EUDIf()
            # (Line 858) Bring((13), (10), 1, (19), (Loc_ + 1)) &&
            # (Line 859) Deaths((13), (10), 0, (197)) &&
            # (Line 860) CircleAleadyHit[getcurpl()] == 0
            # (Line 861) ){
            if _t28(EUDSCAnd()(Bring((13), (10), 1, (19), (Loc_ + 1)))(Deaths((13), (10), 0, (197)))(CircleAleadyHit[f_getcurpl()] == 0)()):
                # (Line 862) SetDeaths((13), (8), EDamage, (197));
                # (Line 863) CreateUnitWithProperties(1, (94), (PLoc[getcurpl()]), (6), UnitProperty(hitpoint = 100, shield = 100, energy = 50, resource = 0, hanger = 0, cloaked = False, burrowed = False, intransit = False, hallucinated = False, invincible = True));
                DoActions(SetDeaths((13), (8), EDamage, (197)))
                # (Line 864) KillUnit((94), (6));
                DoActions(CreateUnitWithProperties(1, (94), (PLoc[f_getcurpl()]), (6), UnitProperty(hitpoint=100, shield=100, energy=50, resource=0, hanger=0, cloaked=False, burrowed=False, intransit=False, hallucinated=False, invincible=True)))
                # (Line 865) CircleAleadyHit[getcurpl()] = 1;
                DoActions(KillUnit((94), (6)))
                _ARRW(CircleAleadyHit, f_getcurpl()) << (1)
                # (Line 866) }
                # (Line 867) }
            EUDEndIf()
            # (Line 868) EUDEndPlayerLoop();
        EUDEndIf()
        EUDEndPlayerLoop()
        # (Line 870) }
        # (Line 871) for(var i = 1; i<R / 32 + 1; i++){
        EUDSetContinuePoint()
        _t26()
    EUDEndWhile()
    i = EUDVariable()
    i << (1)
    if EUDWhile()(i >= R // 32 + 1, neg=True):
        def _t30():
            i.__iadd__(1)
        # (Line 872) MoveLocation((Loc_ + 1), (TargetUnit), (TargetPlayer), (atLoc_ + 1));
        # (Line 873) EUDMoveLocation(Loc_,-sqrt(R*R - (32 * i)*(32 * i)),32 * i);
        DoActions(MoveLocation((Loc_ + 1), (TargetUnit), (TargetPlayer), (atLoc_ + 1)))
        EUDMoveLocation(Loc_, -f_sqrt(R * R - (32 * i) * (32 * i)), 32 * i)
        # (Line 874) 팔레트(6,Effect,Loc_);
        f_팔레트(6, Effect, Loc_)
        # (Line 876) EUDPlayerLoop()();
        EUDPlayerLoop()()
        # (Line 877) if (getcurpl() == 0 || getcurpl() == 1 || getcurpl() == 2 || getcurpl() == 3 || getcurpl() == 4 || getcurpl() == 5) {
        if EUDIf()(EUDSCOr()(f_getcurpl() == 0)(f_getcurpl() == 1)(f_getcurpl() == 2)(f_getcurpl() == 3)(f_getcurpl() == 4)(f_getcurpl() == 5)()):
            # (Line 878) if(
            _t32 = EUDIf()
            # (Line 879) Bring((13), (10), 1, (19), (Loc_ + 1)) &&
            # (Line 880) Deaths((13), (10), 0, (197)) &&
            # (Line 881) CircleAleadyHit[getcurpl()] == 0
            # (Line 882) ){
            if _t32(EUDSCAnd()(Bring((13), (10), 1, (19), (Loc_ + 1)))(Deaths((13), (10), 0, (197)))(CircleAleadyHit[f_getcurpl()] == 0)()):
                # (Line 883) SetDeaths((13), (8), EDamage, (197));
                # (Line 884) CreateUnitWithProperties(1, (94), (PLoc[getcurpl()]), (6), UnitProperty(hitpoint = 100, shield = 100, energy = 50, resource = 0, hanger = 0, cloaked = False, burrowed = False, intransit = False, hallucinated = False, invincible = True));
                DoActions(SetDeaths((13), (8), EDamage, (197)))
                # (Line 885) KillUnit((94), (6));
                DoActions(CreateUnitWithProperties(1, (94), (PLoc[f_getcurpl()]), (6), UnitProperty(hitpoint=100, shield=100, energy=50, resource=0, hanger=0, cloaked=False, burrowed=False, intransit=False, hallucinated=False, invincible=True)))
                # (Line 886) CircleAleadyHit[getcurpl()] = 1;
                DoActions(KillUnit((94), (6)))
                _ARRW(CircleAleadyHit, f_getcurpl()) << (1)
                # (Line 887) }
                # (Line 888) }
            EUDEndIf()
            # (Line 889) EUDEndPlayerLoop();
        EUDEndIf()
        EUDEndPlayerLoop()
        # (Line 891) }
        # (Line 893) }
        EUDSetContinuePoint()
        _t30()
    EUDEndWhile()
    # (Line 894) function 원모양이펙트데미지2(Loc_ ,targetpositionX ,targetpositionY ,Loc_Size ,R ,Effect ,EDamage) {

@EUDFunc
def f_원모양이펙트데미지2(Loc_, targetpositionX, targetpositionY, Loc_Size, R, Effect, EDamage):
    # (Line 916) for(var i = 1; i<R / 32 + 1; i++){
    i = EUDVariable()
    i << (1)
    if EUDWhile()(i >= R // 32 + 1, neg=True):
        def _t2():
            i.__iadd__(1)
        # (Line 917) SetLocation(Loc_,targetpositionX,targetpositionY,Loc_Size,Loc_Size);
        SetLocation(Loc_, targetpositionX, targetpositionY, Loc_Size, Loc_Size)
        # (Line 918) EUDMoveLocation(Loc_,32 * i,sqrt(R*R - (32 * i)*(32 * i)));
        EUDMoveLocation(Loc_, 32 * i, f_sqrt(R * R - (32 * i) * (32 * i)))
        # (Line 919) 팔레트(6,Effect,Loc_);
        f_팔레트(6, Effect, Loc_)
        # (Line 921) EUDPlayerLoop()();
        EUDPlayerLoop()()
        # (Line 922) if (getcurpl() == 0 || getcurpl() == 1 || getcurpl() == 2 || getcurpl() == 3 || getcurpl() == 4 || getcurpl() == 5) {
        if EUDIf()(EUDSCOr()(f_getcurpl() == 0)(f_getcurpl() == 1)(f_getcurpl() == 2)(f_getcurpl() == 3)(f_getcurpl() == 4)(f_getcurpl() == 5)()):
            # (Line 923) if(
            _t4 = EUDIf()
            # (Line 924) Bring((13), (10), 1, (19), (Loc_ + 1)) &&
            # (Line 925) Deaths((13), (10), 0, (197)) &&
            # (Line 926) CircleAleadyHit[getcurpl()] == 0
            # (Line 927) ){
            if _t4(EUDSCAnd()(Bring((13), (10), 1, (19), (Loc_ + 1)))(Deaths((13), (10), 0, (197)))(CircleAleadyHit[f_getcurpl()] == 0)()):
                # (Line 928) SetDeaths((13), (8), EDamage, (197));
                # (Line 929) CreateUnitWithProperties(1, (94), (PLoc[getcurpl()]), (6), UnitProperty(hitpoint = 100, shield = 100, energy = 50, resource = 0, hanger = 0, cloaked = False, burrowed = False, intransit = False, hallucinated = False, invincible = True));
                DoActions(SetDeaths((13), (8), EDamage, (197)))
                # (Line 930) KillUnit((94), (6));
                DoActions(CreateUnitWithProperties(1, (94), (PLoc[f_getcurpl()]), (6), UnitProperty(hitpoint=100, shield=100, energy=50, resource=0, hanger=0, cloaked=False, burrowed=False, intransit=False, hallucinated=False, invincible=True)))
                # (Line 931) CircleAleadyHit[getcurpl()] = 1;
                DoActions(KillUnit((94), (6)))
                _ARRW(CircleAleadyHit, f_getcurpl()) << (1)
                # (Line 932) }
                # (Line 933) }
            EUDEndIf()
            # (Line 934) EUDEndPlayerLoop();
        EUDEndIf()
        EUDEndPlayerLoop()
        # (Line 936) }
        # (Line 937) for(var i = 1; i<R / 32; i++){
        EUDSetContinuePoint()
        _t2()
    EUDEndWhile()
    i = EUDVariable()
    i << (1)
    if EUDWhile()(i >= R // 32, neg=True):
        def _t6():
            i.__iadd__(1)
        # (Line 938) SetLocation(Loc_,targetpositionX,targetpositionY,Loc_Size,Loc_Size);
        SetLocation(Loc_, targetpositionX, targetpositionY, Loc_Size, Loc_Size)
        # (Line 939) EUDMoveLocation(Loc_,sqrt(R*R - (32 * i)*(32 * i)),32 * i);
        EUDMoveLocation(Loc_, f_sqrt(R * R - (32 * i) * (32 * i)), 32 * i)
        # (Line 940) 팔레트(6,Effect,Loc_);
        f_팔레트(6, Effect, Loc_)
        # (Line 942) EUDPlayerLoop()();
        EUDPlayerLoop()()
        # (Line 943) if (getcurpl() == 0 || getcurpl() == 1 || getcurpl() == 2 || getcurpl() == 3 || getcurpl() == 4 || getcurpl() == 5) {
        if EUDIf()(EUDSCOr()(f_getcurpl() == 0)(f_getcurpl() == 1)(f_getcurpl() == 2)(f_getcurpl() == 3)(f_getcurpl() == 4)(f_getcurpl() == 5)()):
            # (Line 944) if(
            _t8 = EUDIf()
            # (Line 945) Bring((13), (10), 1, (19), (Loc_ + 1)) &&
            # (Line 946) Deaths((13), (10), 0, (197)) &&
            # (Line 947) CircleAleadyHit[getcurpl()] == 0
            # (Line 948) ){
            if _t8(EUDSCAnd()(Bring((13), (10), 1, (19), (Loc_ + 1)))(Deaths((13), (10), 0, (197)))(CircleAleadyHit[f_getcurpl()] == 0)()):
                # (Line 949) SetDeaths((13), (8), EDamage, (197));
                # (Line 950) CreateUnitWithProperties(1, (94), (PLoc[getcurpl()]), (6), UnitProperty(hitpoint = 100, shield = 100, energy = 50, resource = 0, hanger = 0, cloaked = False, burrowed = False, intransit = False, hallucinated = False, invincible = True));
                DoActions(SetDeaths((13), (8), EDamage, (197)))
                # (Line 951) KillUnit((94), (6));
                DoActions(CreateUnitWithProperties(1, (94), (PLoc[f_getcurpl()]), (6), UnitProperty(hitpoint=100, shield=100, energy=50, resource=0, hanger=0, cloaked=False, burrowed=False, intransit=False, hallucinated=False, invincible=True)))
                # (Line 952) CircleAleadyHit[getcurpl()] = 1;
                DoActions(KillUnit((94), (6)))
                _ARRW(CircleAleadyHit, f_getcurpl()) << (1)
                # (Line 953) }
                # (Line 954) }
            EUDEndIf()
            # (Line 955) EUDEndPlayerLoop();
        EUDEndIf()
        EUDEndPlayerLoop()
        # (Line 957) }
        # (Line 960) for(var i = 1; i<R / 32; i++){
        EUDSetContinuePoint()
        _t6()
    EUDEndWhile()
    i = EUDVariable()
    i << (1)
    if EUDWhile()(i >= R // 32, neg=True):
        def _t10():
            i.__iadd__(1)
        # (Line 961) SetLocation(Loc_,targetpositionX,targetpositionY,Loc_Size,Loc_Size);
        SetLocation(Loc_, targetpositionX, targetpositionY, Loc_Size, Loc_Size)
        # (Line 962) EUDMoveLocation(Loc_,32 * i,-sqrt(R*R - (32 * i)*(32 * i)));
        EUDMoveLocation(Loc_, 32 * i, -f_sqrt(R * R - (32 * i) * (32 * i)))
        # (Line 963) 팔레트(6,Effect,Loc_);
        f_팔레트(6, Effect, Loc_)
        # (Line 965) EUDPlayerLoop()();
        EUDPlayerLoop()()
        # (Line 966) if (getcurpl() == 0 || getcurpl() == 1 || getcurpl() == 2 || getcurpl() == 3 || getcurpl() == 4 || getcurpl() == 5) {
        if EUDIf()(EUDSCOr()(f_getcurpl() == 0)(f_getcurpl() == 1)(f_getcurpl() == 2)(f_getcurpl() == 3)(f_getcurpl() == 4)(f_getcurpl() == 5)()):
            # (Line 967) if(
            _t12 = EUDIf()
            # (Line 968) Bring((13), (10), 1, (19), (Loc_ + 1)) &&
            # (Line 969) Deaths((13), (10), 0, (197)) &&
            # (Line 970) CircleAleadyHit[getcurpl()] == 0
            # (Line 971) ){
            if _t12(EUDSCAnd()(Bring((13), (10), 1, (19), (Loc_ + 1)))(Deaths((13), (10), 0, (197)))(CircleAleadyHit[f_getcurpl()] == 0)()):
                # (Line 972) SetDeaths((13), (8), EDamage, (197));
                # (Line 973) CreateUnitWithProperties(1, (94), (PLoc[getcurpl()]), (6), UnitProperty(hitpoint = 100, shield = 100, energy = 50, resource = 0, hanger = 0, cloaked = False, burrowed = False, intransit = False, hallucinated = False, invincible = True));
                DoActions(SetDeaths((13), (8), EDamage, (197)))
                # (Line 974) KillUnit((94), (6));
                DoActions(CreateUnitWithProperties(1, (94), (PLoc[f_getcurpl()]), (6), UnitProperty(hitpoint=100, shield=100, energy=50, resource=0, hanger=0, cloaked=False, burrowed=False, intransit=False, hallucinated=False, invincible=True)))
                # (Line 975) CircleAleadyHit[getcurpl()] = 1;
                DoActions(KillUnit((94), (6)))
                _ARRW(CircleAleadyHit, f_getcurpl()) << (1)
                # (Line 976) }
                # (Line 977) }
            EUDEndIf()
            # (Line 978) EUDEndPlayerLoop();
        EUDEndIf()
        EUDEndPlayerLoop()
        # (Line 980) }
        # (Line 981) for(var i = 1; i<R / 32 + 1; i++){
        EUDSetContinuePoint()
        _t10()
    EUDEndWhile()
    i = EUDVariable()
    i << (1)
    if EUDWhile()(i >= R // 32 + 1, neg=True):
        def _t14():
            i.__iadd__(1)
        # (Line 982) SetLocation(Loc_,targetpositionX,targetpositionY,Loc_Size,Loc_Size);
        SetLocation(Loc_, targetpositionX, targetpositionY, Loc_Size, Loc_Size)
        # (Line 983) EUDMoveLocation(Loc_,sqrt(R*R - (32 * i)*(32 * i)),-32 * i);
        EUDMoveLocation(Loc_, f_sqrt(R * R - (32 * i) * (32 * i)), -32 * i)
        # (Line 984) 팔레트(6,Effect,Loc_);
        f_팔레트(6, Effect, Loc_)
        # (Line 986) EUDPlayerLoop()();
        EUDPlayerLoop()()
        # (Line 987) if (getcurpl() == 0 || getcurpl() == 1 || getcurpl() == 2 || getcurpl() == 3 || getcurpl() == 4 || getcurpl() == 5) {
        if EUDIf()(EUDSCOr()(f_getcurpl() == 0)(f_getcurpl() == 1)(f_getcurpl() == 2)(f_getcurpl() == 3)(f_getcurpl() == 4)(f_getcurpl() == 5)()):
            # (Line 988) if(
            _t16 = EUDIf()
            # (Line 989) Bring((13), (10), 1, (19), (Loc_ + 1)) &&
            # (Line 990) Deaths((13), (10), 0, (197)) &&
            # (Line 991) CircleAleadyHit[getcurpl()] == 0
            # (Line 992) ){
            if _t16(EUDSCAnd()(Bring((13), (10), 1, (19), (Loc_ + 1)))(Deaths((13), (10), 0, (197)))(CircleAleadyHit[f_getcurpl()] == 0)()):
                # (Line 993) SetDeaths((13), (8), EDamage, (197));
                # (Line 994) CreateUnitWithProperties(1, (94), (PLoc[getcurpl()]), (6), UnitProperty(hitpoint = 100, shield = 100, energy = 50, resource = 0, hanger = 0, cloaked = False, burrowed = False, intransit = False, hallucinated = False, invincible = True));
                DoActions(SetDeaths((13), (8), EDamage, (197)))
                # (Line 995) KillUnit((94), (6));
                DoActions(CreateUnitWithProperties(1, (94), (PLoc[f_getcurpl()]), (6), UnitProperty(hitpoint=100, shield=100, energy=50, resource=0, hanger=0, cloaked=False, burrowed=False, intransit=False, hallucinated=False, invincible=True)))
                # (Line 996) CircleAleadyHit[getcurpl()] = 1;
                DoActions(KillUnit((94), (6)))
                _ARRW(CircleAleadyHit, f_getcurpl()) << (1)
                # (Line 997) }
                # (Line 998) }
            EUDEndIf()
            # (Line 999) EUDEndPlayerLoop();
        EUDEndIf()
        EUDEndPlayerLoop()
        # (Line 1001) }
        # (Line 1004) for(var i = 1; i<R / 32 + 1; i++){
        EUDSetContinuePoint()
        _t14()
    EUDEndWhile()
    i = EUDVariable()
    i << (1)
    if EUDWhile()(i >= R // 32 + 1, neg=True):
        def _t18():
            i.__iadd__(1)
        # (Line 1005) SetLocation(Loc_,targetpositionX,targetpositionY,Loc_Size,Loc_Size);
        SetLocation(Loc_, targetpositionX, targetpositionY, Loc_Size, Loc_Size)
        # (Line 1006) EUDMoveLocation(Loc_,-32 * i,-sqrt(R*R - (32 * i)*(32 * i)));
        EUDMoveLocation(Loc_, -32 * i, -f_sqrt(R * R - (32 * i) * (32 * i)))
        # (Line 1007) 팔레트(6,Effect,Loc_);
        f_팔레트(6, Effect, Loc_)
        # (Line 1009) EUDPlayerLoop()();
        EUDPlayerLoop()()
        # (Line 1010) if (getcurpl() == 0 || getcurpl() == 1 || getcurpl() == 2 || getcurpl() == 3 || getcurpl() == 4 || getcurpl() == 5) {
        if EUDIf()(EUDSCOr()(f_getcurpl() == 0)(f_getcurpl() == 1)(f_getcurpl() == 2)(f_getcurpl() == 3)(f_getcurpl() == 4)(f_getcurpl() == 5)()):
            # (Line 1011) if(
            _t20 = EUDIf()
            # (Line 1012) Bring((13), (10), 1, (19), (Loc_ + 1)) &&
            # (Line 1013) Deaths((13), (10), 0, (197)) &&
            # (Line 1014) CircleAleadyHit[getcurpl()] == 0
            # (Line 1015) ){
            if _t20(EUDSCAnd()(Bring((13), (10), 1, (19), (Loc_ + 1)))(Deaths((13), (10), 0, (197)))(CircleAleadyHit[f_getcurpl()] == 0)()):
                # (Line 1016) SetDeaths((13), (8), EDamage, (197));
                # (Line 1017) CreateUnitWithProperties(1, (94), (PLoc[getcurpl()]), (6), UnitProperty(hitpoint = 100, shield = 100, energy = 50, resource = 0, hanger = 0, cloaked = False, burrowed = False, intransit = False, hallucinated = False, invincible = True));
                DoActions(SetDeaths((13), (8), EDamage, (197)))
                # (Line 1018) KillUnit((94), (6));
                DoActions(CreateUnitWithProperties(1, (94), (PLoc[f_getcurpl()]), (6), UnitProperty(hitpoint=100, shield=100, energy=50, resource=0, hanger=0, cloaked=False, burrowed=False, intransit=False, hallucinated=False, invincible=True)))
                # (Line 1019) CircleAleadyHit[getcurpl()] = 1;
                DoActions(KillUnit((94), (6)))
                _ARRW(CircleAleadyHit, f_getcurpl()) << (1)
                # (Line 1020) }
                # (Line 1021) }
            EUDEndIf()
            # (Line 1022) EUDEndPlayerLoop();
        EUDEndIf()
        EUDEndPlayerLoop()
        # (Line 1024) }
        # (Line 1025) for(var i = 1; i<R / 32; i++){
        EUDSetContinuePoint()
        _t18()
    EUDEndWhile()
    i = EUDVariable()
    i << (1)
    if EUDWhile()(i >= R // 32, neg=True):
        def _t22():
            i.__iadd__(1)
        # (Line 1026) SetLocation(Loc_,targetpositionX,targetpositionY,Loc_Size,Loc_Size);
        SetLocation(Loc_, targetpositionX, targetpositionY, Loc_Size, Loc_Size)
        # (Line 1027) EUDMoveLocation(Loc_,-sqrt(R*R - (32 * i)*(32 * i)),-32 * i);
        EUDMoveLocation(Loc_, -f_sqrt(R * R - (32 * i) * (32 * i)), -32 * i)
        # (Line 1028) 팔레트(6,Effect,Loc_);
        f_팔레트(6, Effect, Loc_)
        # (Line 1030) EUDPlayerLoop()();
        EUDPlayerLoop()()
        # (Line 1031) if (getcurpl() == 0 || getcurpl() == 1 || getcurpl() == 2 || getcurpl() == 3 || getcurpl() == 4 || getcurpl() == 5) {
        if EUDIf()(EUDSCOr()(f_getcurpl() == 0)(f_getcurpl() == 1)(f_getcurpl() == 2)(f_getcurpl() == 3)(f_getcurpl() == 4)(f_getcurpl() == 5)()):
            # (Line 1032) if(
            _t24 = EUDIf()
            # (Line 1033) Bring((13), (10), 1, (19), (Loc_ + 1)) &&
            # (Line 1034) Deaths((13), (10), 0, (197)) &&
            # (Line 1035) CircleAleadyHit[getcurpl()] == 0
            # (Line 1036) ){
            if _t24(EUDSCAnd()(Bring((13), (10), 1, (19), (Loc_ + 1)))(Deaths((13), (10), 0, (197)))(CircleAleadyHit[f_getcurpl()] == 0)()):
                # (Line 1037) SetDeaths((13), (8), EDamage, (197));
                # (Line 1038) CreateUnitWithProperties(1, (94), (PLoc[getcurpl()]), (6), UnitProperty(hitpoint = 100, shield = 100, energy = 50, resource = 0, hanger = 0, cloaked = False, burrowed = False, intransit = False, hallucinated = False, invincible = True));
                DoActions(SetDeaths((13), (8), EDamage, (197)))
                # (Line 1039) KillUnit((94), (6));
                DoActions(CreateUnitWithProperties(1, (94), (PLoc[f_getcurpl()]), (6), UnitProperty(hitpoint=100, shield=100, energy=50, resource=0, hanger=0, cloaked=False, burrowed=False, intransit=False, hallucinated=False, invincible=True)))
                # (Line 1040) CircleAleadyHit[getcurpl()] = 1;
                DoActions(KillUnit((94), (6)))
                _ARRW(CircleAleadyHit, f_getcurpl()) << (1)
                # (Line 1041) }
                # (Line 1042) }
            EUDEndIf()
            # (Line 1043) EUDEndPlayerLoop();
        EUDEndIf()
        EUDEndPlayerLoop()
        # (Line 1045) }
        # (Line 1048) for(var i = 1; i<R / 32; i++){
        EUDSetContinuePoint()
        _t22()
    EUDEndWhile()
    i = EUDVariable()
    i << (1)
    if EUDWhile()(i >= R // 32, neg=True):
        def _t26():
            i.__iadd__(1)
        # (Line 1049) SetLocation(Loc_,targetpositionX,targetpositionY,Loc_Size,Loc_Size);
        SetLocation(Loc_, targetpositionX, targetpositionY, Loc_Size, Loc_Size)
        # (Line 1050) EUDMoveLocation(Loc_,-32 * i,sqrt(R*R - (32 * i)*(32 * i)));
        EUDMoveLocation(Loc_, -32 * i, f_sqrt(R * R - (32 * i) * (32 * i)))
        # (Line 1051) 팔레트(6,Effect,Loc_);
        f_팔레트(6, Effect, Loc_)
        # (Line 1053) EUDPlayerLoop()();
        EUDPlayerLoop()()
        # (Line 1054) if (getcurpl() == 0 || getcurpl() == 1 || getcurpl() == 2 || getcurpl() == 3 || getcurpl() == 4 || getcurpl() == 5) {
        if EUDIf()(EUDSCOr()(f_getcurpl() == 0)(f_getcurpl() == 1)(f_getcurpl() == 2)(f_getcurpl() == 3)(f_getcurpl() == 4)(f_getcurpl() == 5)()):
            # (Line 1055) if(
            _t28 = EUDIf()
            # (Line 1056) Bring((13), (10), 1, (19), (Loc_ + 1)) &&
            # (Line 1057) Deaths((13), (10), 0, (197)) &&
            # (Line 1058) CircleAleadyHit[getcurpl()] == 0
            # (Line 1059) ){
            if _t28(EUDSCAnd()(Bring((13), (10), 1, (19), (Loc_ + 1)))(Deaths((13), (10), 0, (197)))(CircleAleadyHit[f_getcurpl()] == 0)()):
                # (Line 1060) SetDeaths((13), (8), EDamage, (197));
                # (Line 1061) CreateUnitWithProperties(1, (94), (PLoc[getcurpl()]), (6), UnitProperty(hitpoint = 100, shield = 100, energy = 50, resource = 0, hanger = 0, cloaked = False, burrowed = False, intransit = False, hallucinated = False, invincible = True));
                DoActions(SetDeaths((13), (8), EDamage, (197)))
                # (Line 1062) KillUnit((94), (6));
                DoActions(CreateUnitWithProperties(1, (94), (PLoc[f_getcurpl()]), (6), UnitProperty(hitpoint=100, shield=100, energy=50, resource=0, hanger=0, cloaked=False, burrowed=False, intransit=False, hallucinated=False, invincible=True)))
                # (Line 1063) CircleAleadyHit[getcurpl()] = 1;
                DoActions(KillUnit((94), (6)))
                _ARRW(CircleAleadyHit, f_getcurpl()) << (1)
                # (Line 1064) }
                # (Line 1065) }
            EUDEndIf()
            # (Line 1066) EUDEndPlayerLoop();
        EUDEndIf()
        EUDEndPlayerLoop()
        # (Line 1068) }
        # (Line 1069) for(var i = 1; i<R / 32 + 1; i++){
        EUDSetContinuePoint()
        _t26()
    EUDEndWhile()
    i = EUDVariable()
    i << (1)
    if EUDWhile()(i >= R // 32 + 1, neg=True):
        def _t30():
            i.__iadd__(1)
        # (Line 1070) SetLocation(Loc_,targetpositionX,targetpositionY,Loc_Size,Loc_Size);
        SetLocation(Loc_, targetpositionX, targetpositionY, Loc_Size, Loc_Size)
        # (Line 1071) EUDMoveLocation(Loc_,-sqrt(R*R - (32 * i)*(32 * i)),32 * i);
        EUDMoveLocation(Loc_, -f_sqrt(R * R - (32 * i) * (32 * i)), 32 * i)
        # (Line 1072) 팔레트(6,Effect,Loc_);
        f_팔레트(6, Effect, Loc_)
        # (Line 1074) EUDPlayerLoop()();
        EUDPlayerLoop()()
        # (Line 1075) if (getcurpl() == 0 || getcurpl() == 1 || getcurpl() == 2 || getcurpl() == 3 || getcurpl() == 4 || getcurpl() == 5) {
        if EUDIf()(EUDSCOr()(f_getcurpl() == 0)(f_getcurpl() == 1)(f_getcurpl() == 2)(f_getcurpl() == 3)(f_getcurpl() == 4)(f_getcurpl() == 5)()):
            # (Line 1076) if(
            _t32 = EUDIf()
            # (Line 1077) Bring((13), (10), 1, (19), (Loc_ + 1)) &&
            # (Line 1078) Deaths((13), (10), 0, (197)) &&
            # (Line 1079) CircleAleadyHit[getcurpl()] == 0
            # (Line 1080) ){
            if _t32(EUDSCAnd()(Bring((13), (10), 1, (19), (Loc_ + 1)))(Deaths((13), (10), 0, (197)))(CircleAleadyHit[f_getcurpl()] == 0)()):
                # (Line 1081) SetDeaths((13), (8), EDamage, (197));
                # (Line 1082) CreateUnitWithProperties(1, (94), (PLoc[getcurpl()]), (6), UnitProperty(hitpoint = 100, shield = 100, energy = 50, resource = 0, hanger = 0, cloaked = False, burrowed = False, intransit = False, hallucinated = False, invincible = True));
                DoActions(SetDeaths((13), (8), EDamage, (197)))
                # (Line 1083) KillUnit((94), (6));
                DoActions(CreateUnitWithProperties(1, (94), (PLoc[f_getcurpl()]), (6), UnitProperty(hitpoint=100, shield=100, energy=50, resource=0, hanger=0, cloaked=False, burrowed=False, intransit=False, hallucinated=False, invincible=True)))
                # (Line 1084) CircleAleadyHit[getcurpl()] = 1;
                DoActions(KillUnit((94), (6)))
                _ARRW(CircleAleadyHit, f_getcurpl()) << (1)
                # (Line 1085) }
                # (Line 1086) }
            EUDEndIf()
            # (Line 1087) EUDEndPlayerLoop();
        EUDEndIf()
        EUDEndPlayerLoop()
        # (Line 1089) }
        # (Line 1091) }
        EUDSetContinuePoint()
        _t30()
    EUDEndWhile()
    # (Line 1092) function 원모양이펙트보스(Loc_ ,atLoc_ ,TargetPlayer ,TargetUnit ,R ,Effect) {

@EUDFunc
def f_원모양이펙트보스(Loc_, atLoc_, TargetPlayer, TargetUnit, R, Effect):
    # (Line 1111) RandomNum = dwrand() % (1 + 1);
    RandomNum << (f_dwrand() % (1 + 1))
    # (Line 1112) var RandomPosition = 0;
    RandomPosition = EUDVariable()
    RandomPosition << (0)
    # (Line 1114) for(var i = 1; i<R / 32 + 1; i++){
    i = EUDVariable()
    i << (1)
    if EUDWhile()(i >= R // 32 + 1, neg=True):
        def _t2():
            i.__iadd__(1)
        # (Line 1115) MoveLocation((Loc_ + 1), (TargetUnit), (TargetPlayer), (atLoc_ + 1));
        # (Line 1116) EUDMoveLocation(Loc_,32 * i,sqrt(R*R - (32 * i)*(32 * i)));
        DoActions(MoveLocation((Loc_ + 1), (TargetUnit), (TargetPlayer), (atLoc_ + 1)))
        EUDMoveLocation(Loc_, 32 * i, f_sqrt(R * R - (32 * i) * (32 * i)))
        # (Line 1117) 팔레트(6,Effect,Loc_);
        f_팔레트(6, Effect, Loc_)
        # (Line 1119) if(
        _t3 = EUDIf()
        # (Line 1120) RandomNum == 0
        # (Line 1121) ){
        if _t3(RandomNum == 0):
            # (Line 1122) RandomPosition = dwrand() % (R / 32 + 1);
            RandomPosition << (f_dwrand() % (R // 32 + 1))
            # (Line 1123) if(
            _t4 = EUDIf()
            # (Line 1124) i == RandomPosition
            # (Line 1125) ){
            if _t4(i == RandomPosition):
                # (Line 1126) CreateUnitWithProperties(1, (195), (Loc_ + 1), (6), UnitProperty(hitpoint = 100, shield = 100, energy = 50, resource = 0, hanger = 0, cloaked = False, burrowed = False, intransit = False, hallucinated = False, invincible = True));
                # (Line 1127) Order((195), (6), (64), (0), (14));
                DoActions(CreateUnitWithProperties(1, (195), (Loc_ + 1), (6), UnitProperty(hitpoint=100, shield=100, energy=50, resource=0, hanger=0, cloaked=False, burrowed=False, intransit=False, hallucinated=False, invincible=True)))
                # (Line 1128) }
                DoActions(Order((195), (6), (64), (0), (14)))
                # (Line 1129) }
            EUDEndIf()
            # (Line 1131) }
        EUDEndIf()
        # (Line 1132) for(var i = 1; i<R / 32; i++){
        EUDSetContinuePoint()
        _t2()
    EUDEndWhile()
    i = EUDVariable()
    i << (1)
    if EUDWhile()(i >= R // 32, neg=True):
        def _t6():
            i.__iadd__(1)
        # (Line 1133) MoveLocation((Loc_ + 1), (TargetUnit), (TargetPlayer), (atLoc_ + 1));
        # (Line 1134) EUDMoveLocation(Loc_,sqrt(R*R - (32 * i)*(32 * i)),32 * i);
        DoActions(MoveLocation((Loc_ + 1), (TargetUnit), (TargetPlayer), (atLoc_ + 1)))
        EUDMoveLocation(Loc_, f_sqrt(R * R - (32 * i) * (32 * i)), 32 * i)
        # (Line 1135) 팔레트(6,Effect,Loc_);
        f_팔레트(6, Effect, Loc_)
        # (Line 1137) if(
        _t7 = EUDIf()
        # (Line 1138) RandomNum == 1
        # (Line 1139) ){
        if _t7(RandomNum == 1):
            # (Line 1140) RandomPosition = dwrand() % (R / 32 + 1);
            RandomPosition << (f_dwrand() % (R // 32 + 1))
            # (Line 1141) if(
            _t8 = EUDIf()
            # (Line 1142) i == RandomPosition
            # (Line 1143) ){
            if _t8(i == RandomPosition):
                # (Line 1144) CreateUnitWithProperties(1, (195), (Loc_ + 1), (6), UnitProperty(hitpoint = 100, shield = 100, energy = 50, resource = 0, hanger = 0, cloaked = False, burrowed = False, intransit = False, hallucinated = False, invincible = True));
                # (Line 1145) Order((195), (6), (64), (0), (14));
                DoActions(CreateUnitWithProperties(1, (195), (Loc_ + 1), (6), UnitProperty(hitpoint=100, shield=100, energy=50, resource=0, hanger=0, cloaked=False, burrowed=False, intransit=False, hallucinated=False, invincible=True)))
                # (Line 1146) }
                DoActions(Order((195), (6), (64), (0), (14)))
                # (Line 1147) }
            EUDEndIf()
            # (Line 1149) }
        EUDEndIf()
        # (Line 1152) for(var i = 1; i<R / 32; i++){
        EUDSetContinuePoint()
        _t6()
    EUDEndWhile()
    i = EUDVariable()
    i << (1)
    if EUDWhile()(i >= R // 32, neg=True):
        def _t10():
            i.__iadd__(1)
        # (Line 1153) MoveLocation((Loc_ + 1), (TargetUnit), (TargetPlayer), (atLoc_ + 1));
        # (Line 1154) EUDMoveLocation(Loc_,32 * i,-sqrt(R*R - (32 * i)*(32 * i)));
        DoActions(MoveLocation((Loc_ + 1), (TargetUnit), (TargetPlayer), (atLoc_ + 1)))
        EUDMoveLocation(Loc_, 32 * i, -f_sqrt(R * R - (32 * i) * (32 * i)))
        # (Line 1155) 팔레트(6,Effect,Loc_);
        f_팔레트(6, Effect, Loc_)
        # (Line 1157) if(
        _t11 = EUDIf()
        # (Line 1158) RandomNum == 0
        # (Line 1159) ){
        if _t11(RandomNum == 0):
            # (Line 1160) RandomPosition = dwrand() % (R / 32 + 1);
            RandomPosition << (f_dwrand() % (R // 32 + 1))
            # (Line 1161) if(
            _t12 = EUDIf()
            # (Line 1162) i == RandomPosition
            # (Line 1163) ){
            if _t12(i == RandomPosition):
                # (Line 1164) CreateUnitWithProperties(1, (195), (Loc_ + 1), (6), UnitProperty(hitpoint = 100, shield = 100, energy = 50, resource = 0, hanger = 0, cloaked = False, burrowed = False, intransit = False, hallucinated = False, invincible = True));
                # (Line 1165) Order((195), (6), (64), (0), (14));
                DoActions(CreateUnitWithProperties(1, (195), (Loc_ + 1), (6), UnitProperty(hitpoint=100, shield=100, energy=50, resource=0, hanger=0, cloaked=False, burrowed=False, intransit=False, hallucinated=False, invincible=True)))
                # (Line 1166) }
                DoActions(Order((195), (6), (64), (0), (14)))
                # (Line 1167) }
            EUDEndIf()
            # (Line 1169) }
        EUDEndIf()
        # (Line 1170) for(var i = 1; i<R / 32 + 1; i++){
        EUDSetContinuePoint()
        _t10()
    EUDEndWhile()
    i = EUDVariable()
    i << (1)
    if EUDWhile()(i >= R // 32 + 1, neg=True):
        def _t14():
            i.__iadd__(1)
        # (Line 1171) MoveLocation((Loc_ + 1), (TargetUnit), (TargetPlayer), (atLoc_ + 1));
        # (Line 1172) EUDMoveLocation(Loc_,sqrt(R*R - (32 * i)*(32 * i)),-32 * i);
        DoActions(MoveLocation((Loc_ + 1), (TargetUnit), (TargetPlayer), (atLoc_ + 1)))
        EUDMoveLocation(Loc_, f_sqrt(R * R - (32 * i) * (32 * i)), -32 * i)
        # (Line 1173) 팔레트(6,Effect,Loc_);
        f_팔레트(6, Effect, Loc_)
        # (Line 1175) if(
        _t15 = EUDIf()
        # (Line 1176) RandomNum == 1
        # (Line 1177) ){
        if _t15(RandomNum == 1):
            # (Line 1178) RandomPosition = dwrand() % (R / 32 + 1);
            RandomPosition << (f_dwrand() % (R // 32 + 1))
            # (Line 1179) if(
            _t16 = EUDIf()
            # (Line 1180) i == RandomPosition
            # (Line 1181) ){
            if _t16(i == RandomPosition):
                # (Line 1182) CreateUnitWithProperties(1, (195), (Loc_ + 1), (6), UnitProperty(hitpoint = 100, shield = 100, energy = 50, resource = 0, hanger = 0, cloaked = False, burrowed = False, intransit = False, hallucinated = False, invincible = True));
                # (Line 1183) Order((195), (6), (64), (0), (14));
                DoActions(CreateUnitWithProperties(1, (195), (Loc_ + 1), (6), UnitProperty(hitpoint=100, shield=100, energy=50, resource=0, hanger=0, cloaked=False, burrowed=False, intransit=False, hallucinated=False, invincible=True)))
                # (Line 1184) }
                DoActions(Order((195), (6), (64), (0), (14)))
                # (Line 1185) }
            EUDEndIf()
            # (Line 1187) }
        EUDEndIf()
        # (Line 1190) for(var i = 1; i<R / 32 + 1; i++){
        EUDSetContinuePoint()
        _t14()
    EUDEndWhile()
    i = EUDVariable()
    i << (1)
    if EUDWhile()(i >= R // 32 + 1, neg=True):
        def _t18():
            i.__iadd__(1)
        # (Line 1191) MoveLocation((Loc_ + 1), (TargetUnit), (TargetPlayer), (atLoc_ + 1));
        # (Line 1192) EUDMoveLocation(Loc_,-32 * i,-sqrt(R*R - (32 * i)*(32 * i)));
        DoActions(MoveLocation((Loc_ + 1), (TargetUnit), (TargetPlayer), (atLoc_ + 1)))
        EUDMoveLocation(Loc_, -32 * i, -f_sqrt(R * R - (32 * i) * (32 * i)))
        # (Line 1193) 팔레트(6,Effect,Loc_);
        f_팔레트(6, Effect, Loc_)
        # (Line 1195) if(
        _t19 = EUDIf()
        # (Line 1196) RandomNum == 0
        # (Line 1197) ){
        if _t19(RandomNum == 0):
            # (Line 1198) RandomPosition = dwrand() % (R / 32 + 1);
            RandomPosition << (f_dwrand() % (R // 32 + 1))
            # (Line 1199) if(
            _t20 = EUDIf()
            # (Line 1200) i == RandomPosition
            # (Line 1201) ){
            if _t20(i == RandomPosition):
                # (Line 1202) CreateUnitWithProperties(1, (195), (Loc_ + 1), (6), UnitProperty(hitpoint = 100, shield = 100, energy = 50, resource = 0, hanger = 0, cloaked = False, burrowed = False, intransit = False, hallucinated = False, invincible = True));
                # (Line 1203) Order((195), (6), (64), (0), (14));
                DoActions(CreateUnitWithProperties(1, (195), (Loc_ + 1), (6), UnitProperty(hitpoint=100, shield=100, energy=50, resource=0, hanger=0, cloaked=False, burrowed=False, intransit=False, hallucinated=False, invincible=True)))
                # (Line 1204) }
                DoActions(Order((195), (6), (64), (0), (14)))
                # (Line 1205) }
            EUDEndIf()
            # (Line 1207) }
        EUDEndIf()
        # (Line 1208) for(var i = 1; i<R / 32; i++){
        EUDSetContinuePoint()
        _t18()
    EUDEndWhile()
    i = EUDVariable()
    i << (1)
    if EUDWhile()(i >= R // 32, neg=True):
        def _t22():
            i.__iadd__(1)
        # (Line 1209) MoveLocation((Loc_ + 1), (TargetUnit), (TargetPlayer), (atLoc_ + 1));
        # (Line 1210) EUDMoveLocation(Loc_,-sqrt(R*R - (32 * i)*(32 * i)),-32 * i);
        DoActions(MoveLocation((Loc_ + 1), (TargetUnit), (TargetPlayer), (atLoc_ + 1)))
        EUDMoveLocation(Loc_, -f_sqrt(R * R - (32 * i) * (32 * i)), -32 * i)
        # (Line 1211) 팔레트(6,Effect,Loc_);
        f_팔레트(6, Effect, Loc_)
        # (Line 1213) if(
        _t23 = EUDIf()
        # (Line 1214) RandomNum == 1
        # (Line 1215) ){
        if _t23(RandomNum == 1):
            # (Line 1216) RandomPosition = dwrand() % (R / 32 + 1);
            RandomPosition << (f_dwrand() % (R // 32 + 1))
            # (Line 1217) if(
            _t24 = EUDIf()
            # (Line 1218) i == RandomPosition
            # (Line 1219) ){
            if _t24(i == RandomPosition):
                # (Line 1220) CreateUnitWithProperties(1, (195), (Loc_ + 1), (6), UnitProperty(hitpoint = 100, shield = 100, energy = 50, resource = 0, hanger = 0, cloaked = False, burrowed = False, intransit = False, hallucinated = False, invincible = True));
                # (Line 1221) Order((195), (6), (64), (0), (14));
                DoActions(CreateUnitWithProperties(1, (195), (Loc_ + 1), (6), UnitProperty(hitpoint=100, shield=100, energy=50, resource=0, hanger=0, cloaked=False, burrowed=False, intransit=False, hallucinated=False, invincible=True)))
                # (Line 1222) }
                DoActions(Order((195), (6), (64), (0), (14)))
                # (Line 1223) }
            EUDEndIf()
            # (Line 1225) }
        EUDEndIf()
        # (Line 1228) for(var i = 1; i<R / 32; i++){
        EUDSetContinuePoint()
        _t22()
    EUDEndWhile()
    i = EUDVariable()
    i << (1)
    if EUDWhile()(i >= R // 32, neg=True):
        def _t26():
            i.__iadd__(1)
        # (Line 1229) MoveLocation((Loc_ + 1), (TargetUnit), (TargetPlayer), (atLoc_ + 1));
        # (Line 1230) EUDMoveLocation(Loc_,-32 * i,sqrt(R*R - (32 * i)*(32 * i)));
        DoActions(MoveLocation((Loc_ + 1), (TargetUnit), (TargetPlayer), (atLoc_ + 1)))
        EUDMoveLocation(Loc_, -32 * i, f_sqrt(R * R - (32 * i) * (32 * i)))
        # (Line 1231) 팔레트(6,Effect,Loc_);
        f_팔레트(6, Effect, Loc_)
        # (Line 1233) if(
        _t27 = EUDIf()
        # (Line 1234) RandomNum == 0
        # (Line 1235) ){
        if _t27(RandomNum == 0):
            # (Line 1236) RandomPosition = dwrand() % (R / 32 + 1);
            RandomPosition << (f_dwrand() % (R // 32 + 1))
            # (Line 1237) if(
            _t28 = EUDIf()
            # (Line 1238) i == RandomPosition
            # (Line 1239) ){
            if _t28(i == RandomPosition):
                # (Line 1240) CreateUnitWithProperties(1, (195), (Loc_ + 1), (6), UnitProperty(hitpoint = 100, shield = 100, energy = 50, resource = 0, hanger = 0, cloaked = False, burrowed = False, intransit = False, hallucinated = False, invincible = True));
                # (Line 1241) Order((195), (6), (64), (0), (14));
                DoActions(CreateUnitWithProperties(1, (195), (Loc_ + 1), (6), UnitProperty(hitpoint=100, shield=100, energy=50, resource=0, hanger=0, cloaked=False, burrowed=False, intransit=False, hallucinated=False, invincible=True)))
                # (Line 1242) }
                DoActions(Order((195), (6), (64), (0), (14)))
                # (Line 1243) }
            EUDEndIf()
            # (Line 1245) }
        EUDEndIf()
        # (Line 1246) for(var i = 1; i<R / 32 + 1; i++){
        EUDSetContinuePoint()
        _t26()
    EUDEndWhile()
    i = EUDVariable()
    i << (1)
    if EUDWhile()(i >= R // 32 + 1, neg=True):
        def _t30():
            i.__iadd__(1)
        # (Line 1247) MoveLocation((Loc_ + 1), (TargetUnit), (TargetPlayer), (atLoc_ + 1));
        # (Line 1248) EUDMoveLocation(Loc_,-sqrt(R*R - (32 * i)*(32 * i)),32 * i);
        DoActions(MoveLocation((Loc_ + 1), (TargetUnit), (TargetPlayer), (atLoc_ + 1)))
        EUDMoveLocation(Loc_, -f_sqrt(R * R - (32 * i) * (32 * i)), 32 * i)
        # (Line 1249) 팔레트(6,Effect,Loc_);
        f_팔레트(6, Effect, Loc_)
        # (Line 1251) if(
        _t31 = EUDIf()
        # (Line 1252) RandomNum == 1
        # (Line 1253) ){
        if _t31(RandomNum == 1):
            # (Line 1254) RandomPosition = dwrand() % (R / 32 + 1);
            RandomPosition << (f_dwrand() % (R // 32 + 1))
            # (Line 1255) if(
            _t32 = EUDIf()
            # (Line 1256) i == RandomPosition
            # (Line 1257) ){
            if _t32(i == RandomPosition):
                # (Line 1258) CreateUnitWithProperties(1, (195), (Loc_ + 1), (6), UnitProperty(hitpoint = 100, shield = 100, energy = 50, resource = 0, hanger = 0, cloaked = False, burrowed = False, intransit = False, hallucinated = False, invincible = True));
                # (Line 1259) Order((195), (6), (64), (0), (14));
                DoActions(CreateUnitWithProperties(1, (195), (Loc_ + 1), (6), UnitProperty(hitpoint=100, shield=100, energy=50, resource=0, hanger=0, cloaked=False, burrowed=False, intransit=False, hallucinated=False, invincible=True)))
                # (Line 1260) }
                DoActions(Order((195), (6), (64), (0), (14)))
                # (Line 1261) }
            EUDEndIf()
            # (Line 1263) }
        EUDEndIf()
        # (Line 1265) }
        EUDSetContinuePoint()
        _t30()
    EUDEndWhile()
    # (Line 1266) function perSpeedUp(perNum) {

@EUDFunc
def f_perSpeedUp(perNum):
    # (Line 1267) var speed_;
    speed_ = EUDVariable()
    # (Line 1268) speed_ = dwread(0x6C9858 + 1696 + 70 * 4);
    speed_ << (f_dwread(0x6C9858 + 1696 + 70 * 4))
    # (Line 1269) speed_ = speed_ * (100 + perNum) / 100;
    speed_ << (speed_ * (100 + perNum) // 100)
    # (Line 1270) dwwrite(0x6C9858 + 1696 + 70 * 4, speed_);
    f_dwwrite(0x6C9858 + 1696 + 70 * 4, speed_)
    # (Line 1271) }
    # (Line 1272) function perAttSpeedUp(perNum) {

@EUDFunc
def f_perAttSpeedUp(perNum):
    # (Line 1273) var attackspeed_;
    attackspeed_ = EUDVariable()
    # (Line 1274) attackspeed_ = bread(0x6564E0 + 2776 + 19 * 1);
    attackspeed_ << (f_bread(0x6564E0 + 2776 + 19 * 1))
    # (Line 1275) attackspeed_ = attackspeed_ * (100 + perNum) / 100;
    attackspeed_ << (attackspeed_ * (100 + perNum) // 100)
    # (Line 1276) bwrite(0x6564E0 + 2776 + 19 * 1, attackspeed_);
    f_bwrite(0x6564E0 + 2776 + 19 * 1, attackspeed_)
    # (Line 1277) }
    # (Line 1278) function perDamageUp(perNum) {

@EUDFunc
def f_perDamageUp(perNum):
    # (Line 1279) var damage_;
    damage_ = EUDVariable()
    # (Line 1280) damage_ = wread(0x6564E0 + 2512 + 19 * 2);
    damage_ << (f_wread(0x6564E0 + 2512 + 19 * 2))
    # (Line 1281) damage_ = damage_ * (100 + perNum) / 100;
    damage_ << (damage_ * (100 + perNum) // 100)
    # (Line 1282) wwrite(0x6564E0 + 2512 + 19 * 2, damage_);
    f_wwrite(0x6564E0 + 2512 + 19 * 2, damage_)
    # (Line 1283) }
    # (Line 1284) function perHealthUp(perNum) {

@EUDFunc
def f_perHealthUp(perNum):
    # (Line 1285) var health_;
    health_ = EUDVariable()
    # (Line 1286) health_ = dwread(0x65FD00 + 9808 + 12 * 4);
    health_ << (f_dwread(0x65FD00 + 9808 + 12 * 4))
    # (Line 1287) health_ = health_ * (100 + perNum) / 100;
    health_ << (health_ * (100 + perNum) // 100)
    # (Line 1288) dwwrite(0x65FD00 + 9808 + 12 * 4, health_);
    f_dwwrite(0x65FD00 + 9808 + 12 * 4, health_)
    # (Line 1289) }
    # (Line 1290) function perShieldUp(perNum) {

@EUDFunc
def f_perShieldUp(perNum):
    # (Line 1291) var shield_;
    shield_ = EUDVariable()
    # (Line 1292) shield_ = wread(0x65FD00 + 4352 + 12 * 2);
    shield_ << (f_wread(0x65FD00 + 4352 + 12 * 2))
    # (Line 1293) shield_ = shield_ * (100 + perNum) / 100;
    shield_ << (shield_ * (100 + perNum) // 100)
    # (Line 1294) wwrite(0x65FD00 + 4352 + 12 * 2, shield_);
    f_wwrite(0x65FD00 + 4352 + 12 * 2, shield_)
    # (Line 1295) }
    # (Line 1296) function SetBossStats() {

@EUDFunc
def SetBossStats():
    # (Line 1298) dwwrite(0x65FD00 + 9808 + 12 * 4, 400 * 256);
    f_dwwrite(0x65FD00 + 9808 + 12 * 4, 400 * 256)
    # (Line 1299) bwrite(0x65FD00 + 456 + 12 * 1, 0);
    f_bwrite(0x65FD00 + 456 + 12 * 1, 0)
    # (Line 1300) bwrite(0x65FD00 + 19120 + 12 * 1, 0);
    f_bwrite(0x65FD00 + 19120 + 12 * 1, 0)
    # (Line 1301) wwrite(0x65FD00 + 4352 + 12 * 2, 0);
    f_wwrite(0x65FD00 + 4352 + 12 * 2, 0)
    # (Line 1302) bwrite(0x65FD00 + 13392 + 12 * 1, 16);
    f_bwrite(0x65FD00 + 13392 + 12 * 1, 16)
    # (Line 1303) wwrite(0x65FD00 + 12936 + 12 * 2, 11);
    f_wwrite(0x65FD00 + 12936 + 12 * 2, 11)
    # (Line 1304) wwrite(0x6C9858 + 2752 + 70 * 2, 225);
    f_wwrite(0x6C9858 + 2752 + 70 * 2, 225)
    # (Line 1305) SetMemory(0x661828, (7), 1900581);
    # (Line 1306) SetMemory(0x66182C, (7), 1900581);
    DoActions(SetMemory(0x661828, (7), 1900581))
    # (Line 1307) dwwrite(0x6564E0 + 1992 + 19 * 4, 148);
    DoActions(SetMemory(0x66182C, (7), 1900581))
    f_dwwrite(0x6564E0 + 1992 + 19 * 4, 148)
    # (Line 1308) wwrite(0x6564E0 + 2512 + 19 * 2, 20);
    f_wwrite(0x6564E0 + 2512 + 19 * 2, 20)
    # (Line 1309) dwwrite(0x6564E0 + 3984 + 19 * 4, 128);
    f_dwwrite(0x6564E0 + 3984 + 19 * 4, 128)
    # (Line 1310) bwrite(0x6564E0 + 5168 + 19 * 1, 75);
    f_bwrite(0x6564E0 + 5168 + 19 * 1, 75)
    # (Line 1311) bwrite(0x6564E0 + 400 + 19 * 1, 0);
    f_bwrite(0x6564E0 + 400 + 19 * 1, 0)
    # (Line 1312) bwrite(0x6564E0 + 1200 + 19 * 1, 25);
    f_bwrite(0x6564E0 + 1200 + 19 * 1, 25)
    # (Line 1313) bwrite(0x6564E0 + 2776 + 19 * 1, 17);
    f_bwrite(0x6564E0 + 2776 + 19 * 1, 17)
    # (Line 1314) wwrite(0x6564E0 + 672 + 19 * 2, 333);
    f_wwrite(0x6564E0 + 672 + 19 * 2, 333)
    # (Line 1315) dwwrite(0x6C9858 + 1696 + 70 * 4, 325);
    f_dwwrite(0x6C9858 + 1696 + 70 * 4, 325)
    # (Line 1316) wwrite(0x6C9858 + 1056 + 70 * 2, 9);
    f_wwrite(0x6C9858 + 1056 + 70 * 2, 9)
    # (Line 1317) dwwrite(0x6C9858 + 216 + 70 * 4, 2850);
    f_dwwrite(0x6C9858 + 216 + 70 * 4, 2850)
    # (Line 1318) bwrite(0x6C9858 + 1480 + 70 * 1, 27);
    f_bwrite(0x6C9858 + 1480 + 70 * 1, 27)
    # (Line 1319) GraphicChange = 0;
    GraphicChange << (0)
    # (Line 1320) 건전지 = 0;
    건전지 << (0)
    # (Line 1321) 체력회복불가 = 0;
    체력회복불가 << (0)
    # (Line 1322) HealthRegen = 0;
    HealthRegen << (0)
    # (Line 1323) for(var i=0;i>=0;i++){
    i = EUDVariable()
    i << (0)
    if EUDWhile()(i >= 0):
        def _t2():
            i.__iadd__(1)
        # (Line 1324) if (WeaponList[i] == 9999) break;
        if EUDIf()(WeaponList[i] == 9999):
            EUDBreak()
            # (Line 1325) wwrite(0x6564E0 + 2512 + WeaponList[i] * 2, 10);
        EUDEndIf()
        f_wwrite(0x6564E0 + 2512 + WeaponList[i] * 2, 10)
        # (Line 1326) bwrite(0x6564E0 + 3448 + WeaponList[i] * 1, 3);
        f_bwrite(0x6564E0 + 3448 + WeaponList[i] * 1, 3)
        # (Line 1327) bwrite(0x6564E0 + 5032 + WeaponList[i] * 1, 0);
        f_bwrite(0x6564E0 + 5032 + WeaponList[i] * 1, 0)
        # (Line 1328) bwrite(0x6564E0 + 0 + WeaponList[i] * 1, 1);
        f_bwrite(0x6564E0 + 0 + WeaponList[i] * 1, 1)
        # (Line 1329) }
        # (Line 1330) EUDPlayerLoop()();
        EUDSetContinuePoint()
        _t2()
    EUDEndWhile()
    EUDPlayerLoop()()
    # (Line 1331) if (getcurpl() == 0 || getcurpl() == 1 || getcurpl() == 2 || getcurpl() == 3 || getcurpl() == 4 || getcurpl() == 5) {
    if EUDIf()(EUDSCOr()(f_getcurpl() == 0)(f_getcurpl() == 1)(f_getcurpl() == 2)(f_getcurpl() == 3)(f_getcurpl() == 4)(f_getcurpl() == 5)()):
        # (Line 1332) dwwrite(0x65FD00 + 9808 + PVulture[getcurpl()] * 4, 256 * 100);
        f_dwwrite(0x65FD00 + 9808 + PVulture[f_getcurpl()] * 4, 256 * 100)
        # (Line 1333) SetDeaths((18), (7), 0, (PVulture[getcurpl()]));
        # (Line 1334) }
        DoActions(SetDeaths((18), (7), 0, (PVulture[f_getcurpl()])))
        # (Line 1335) EUDEndPlayerLoop();
    EUDEndIf()
    EUDEndPlayerLoop()
    # (Line 1338) for(var i=0; i<Roulette_Count; i++){
    i = EUDVariable()
    i << (0)
    if EUDWhile()(i >= Roulette_Count, neg=True):
        def _t6():
            i.__iadd__(1)
        # (Line 1341) if(
        _t7 = EUDIf()
        # (Line 1342) RandomOption[i] == 1
        # (Line 1343) ){
        if _t7(RandomOption[i] == 1):
            # (Line 1344) wwrite(0x6564E0 + 2512 + 19 * 2, wread(0x6564E0 + 2512 + 19 * 2) + 5);
            f_wwrite(0x6564E0 + 2512 + 19 * 2, f_wread(0x6564E0 + 2512 + 19 * 2) + 5)
            # (Line 1345) }
            # (Line 1348) if(
        EUDEndIf()
        _t8 = EUDIf()
        # (Line 1349) RandomOption[i] == 2
        # (Line 1350) ){
        if _t8(RandomOption[i] == 2):
            # (Line 1351) dwwrite(0x65FD00 + 9808 + 12 * 4, dwread(0x65FD00 + 9808 + 12 * 4) + 75 * 256);
            f_dwwrite(0x65FD00 + 9808 + 12 * 4, f_dwread(0x65FD00 + 9808 + 12 * 4) + 75 * 256)
            # (Line 1352) }
            # (Line 1355) if(
        EUDEndIf()
        _t9 = EUDIf()
        # (Line 1356) RandomOption[i] == 4
        # (Line 1357) ){
        if _t9(RandomOption[i] == 4):
            # (Line 1358) dwwrite(0x65FD00 + 9808 + 12 * 4, dwread(0x65FD00 + 9808 + 12 * 4) + 100 * 256);
            f_dwwrite(0x65FD00 + 9808 + 12 * 4, f_dwread(0x65FD00 + 9808 + 12 * 4) + 100 * 256)
            # (Line 1359) }
            # (Line 1362) if(
        EUDEndIf()
        _t10 = EUDIf()
        # (Line 1363) RandomOption[i] == 5
        # (Line 1364) ){
        if _t10(RandomOption[i] == 5):
            # (Line 1365) bwrite(0x65FD00 + 456 + 12 * 1, bread(0x65FD00 + 456 + 12 * 1) + 1);
            f_bwrite(0x65FD00 + 456 + 12 * 1, f_bread(0x65FD00 + 456 + 12 * 1) + 1)
            # (Line 1366) }
            # (Line 1369) if(
        EUDEndIf()
        _t11 = EUDIf()
        # (Line 1370) RandomOption[i] == 6
        # (Line 1371) ){
        if _t11(RandomOption[i] == 6):
            # (Line 1372) dwwrite(0x65FD00 + 9808 + 12 * 4, dwread(0x65FD00 + 9808 + 12 * 4) + -70 * 256);
            f_dwwrite(0x65FD00 + 9808 + 12 * 4, f_dwread(0x65FD00 + 9808 + 12 * 4) + -70 * 256)
            # (Line 1373) wwrite(0x6564E0 + 2512 + 19 * 2, wread(0x6564E0 + 2512 + 19 * 2) + 7);
            f_wwrite(0x6564E0 + 2512 + 19 * 2, f_wread(0x6564E0 + 2512 + 19 * 2) + 7)
            # (Line 1374) }
            # (Line 1377) if(
        EUDEndIf()
        _t12 = EUDIf()
        # (Line 1378) RandomOption[i] == 7
        # (Line 1379) ){
        if _t12(RandomOption[i] == 7):
            # (Line 1380) wwrite(0x6564E0 + 2512 + 19 * 2, wread(0x6564E0 + 2512 + 19 * 2) + 7);
            f_wwrite(0x6564E0 + 2512 + 19 * 2, f_wread(0x6564E0 + 2512 + 19 * 2) + 7)
            # (Line 1381) dwwrite(0x6564E0 + 3984 + 19 * 4, dwread(0x6564E0 + 3984 + 19 * 4) + 4);
            f_dwwrite(0x6564E0 + 3984 + 19 * 4, f_dwread(0x6564E0 + 3984 + 19 * 4) + 4)
            # (Line 1382) }
            # (Line 1385) if(
        EUDEndIf()
        _t13 = EUDIf()
        # (Line 1386) RandomOption[i] == 8
        # (Line 1387) ){
        if _t13(RandomOption[i] == 8):
            # (Line 1388) wwrite(0x6564E0 + 2512 + 19 * 2, wread(0x6564E0 + 2512 + 19 * 2) + 15);
            f_wwrite(0x6564E0 + 2512 + 19 * 2, f_wread(0x6564E0 + 2512 + 19 * 2) + 15)
            # (Line 1389) }
            # (Line 1392) if(
        EUDEndIf()
        _t14 = EUDIf()
        # (Line 1393) RandomOption[i] == 11
        # (Line 1394) ){
        if _t14(RandomOption[i] == 11):
            # (Line 1395) dwwrite(0x6564E0 + 3984 + 19 * 4, dwread(0x6564E0 + 3984 + 19 * 4) + 8);
            f_dwwrite(0x6564E0 + 3984 + 19 * 4, f_dwread(0x6564E0 + 3984 + 19 * 4) + 8)
            # (Line 1396) }
            # (Line 1399) if(
        EUDEndIf()
        _t15 = EUDIf()
        # (Line 1400) RandomOption[i] == 13
        # (Line 1401) ){
        if _t15(RandomOption[i] == 13):
            # (Line 1402) bwrite(0x65FD00 + 456 + 12 * 1, bread(0x65FD00 + 456 + 12 * 1) + 2);
            f_bwrite(0x65FD00 + 456 + 12 * 1, f_bread(0x65FD00 + 456 + 12 * 1) + 2)
            # (Line 1403) }
            # (Line 1406) if(
        EUDEndIf()
        _t16 = EUDIf()
        # (Line 1407) RandomOption[i] == 14
        # (Line 1408) ){
        if _t16(RandomOption[i] == 14):
            # (Line 1409) dwwrite(0x65FD00 + 9808 + 12 * 4, dwread(0x65FD00 + 9808 + 12 * 4) + 200 * 256);
            f_dwwrite(0x65FD00 + 9808 + 12 * 4, f_dwread(0x65FD00 + 9808 + 12 * 4) + 200 * 256)
            # (Line 1410) }
            # (Line 1413) if(
        EUDEndIf()
        _t17 = EUDIf()
        # (Line 1414) RandomOption[i] == 16
        # (Line 1415) ){
        if _t17(RandomOption[i] == 16):
            # (Line 1416) wwrite(0x6564E0 + 2512 + 19 * 2, wread(0x6564E0 + 2512 + 19 * 2) + 35);
            f_wwrite(0x6564E0 + 2512 + 19 * 2, f_wread(0x6564E0 + 2512 + 19 * 2) + 35)
            # (Line 1417) }
            # (Line 1420) if(
        EUDEndIf()
        _t18 = EUDIf()
        # (Line 1421) RandomOption[i] == 18
        # (Line 1422) ){
        if _t18(RandomOption[i] == 18):
            # (Line 1423) dwwrite(0x6564E0 + 3984 + 19 * 4, dwread(0x6564E0 + 3984 + 19 * 4) + 6);
            f_dwwrite(0x6564E0 + 3984 + 19 * 4, f_dwread(0x6564E0 + 3984 + 19 * 4) + 6)
            # (Line 1424) }
            # (Line 1427) if(
        EUDEndIf()
        _t19 = EUDIf()
        # (Line 1428) RandomOption[i] == 21
        # (Line 1429) ){
        if _t19(RandomOption[i] == 21):
            # (Line 1430) bwrite(0x65FD00 + 456 + 12 * 1, bread(0x65FD00 + 456 + 12 * 1) + 3);
            f_bwrite(0x65FD00 + 456 + 12 * 1, f_bread(0x65FD00 + 456 + 12 * 1) + 3)
            # (Line 1431) }
            # (Line 1434) if(
        EUDEndIf()
        _t20 = EUDIf()
        # (Line 1435) RandomOption[i] == 22
        # (Line 1436) ){
        if _t20(RandomOption[i] == 22):
            # (Line 1437) dwwrite(0x6564E0 + 3984 + 19 * 4, dwread(0x6564E0 + 3984 + 19 * 4) + -4);
            f_dwwrite(0x6564E0 + 3984 + 19 * 4, f_dwread(0x6564E0 + 3984 + 19 * 4) + -4)
            # (Line 1438) wwrite(0x6564E0 + 2512 + 19 * 2, wread(0x6564E0 + 2512 + 19 * 2) + 20);
            f_wwrite(0x6564E0 + 2512 + 19 * 2, f_wread(0x6564E0 + 2512 + 19 * 2) + 20)
            # (Line 1439) }
            # (Line 1442) if(
        EUDEndIf()
        _t21 = EUDIf()
        # (Line 1443) RandomOption[i] == 24
        # (Line 1444) ){
        if _t21(RandomOption[i] == 24):
            # (Line 1445) dwwrite(0x6564E0 + 3984 + 19 * 4, dwread(0x6564E0 + 3984 + 19 * 4) + 8);
            f_dwwrite(0x6564E0 + 3984 + 19 * 4, f_dwread(0x6564E0 + 3984 + 19 * 4) + 8)
            # (Line 1446) }
            # (Line 1449) if(
        EUDEndIf()
        _t22 = EUDIf()
        # (Line 1450) RandomOption[i] == 25
        # (Line 1451) ){
        if _t22(RandomOption[i] == 25):
            # (Line 1452) wwrite(0x6564E0 + 2512 + 19 * 2, wread(0x6564E0 + 2512 + 19 * 2) + 2);
            f_wwrite(0x6564E0 + 2512 + 19 * 2, f_wread(0x6564E0 + 2512 + 19 * 2) + 2)
            # (Line 1453) dwwrite(0x65FD00 + 9808 + 12 * 4, dwread(0x65FD00 + 9808 + 12 * 4) + 25 * 256);
            f_dwwrite(0x65FD00 + 9808 + 12 * 4, f_dwread(0x65FD00 + 9808 + 12 * 4) + 25 * 256)
            # (Line 1454) }
            # (Line 1457) if(
        EUDEndIf()
        _t23 = EUDIf()
        # (Line 1458) RandomOption[i] == 26
        # (Line 1459) ){
        if _t23(RandomOption[i] == 26):
            # (Line 1460) wwrite(0x6564E0 + 2512 + 19 * 2, wread(0x6564E0 + 2512 + 19 * 2) + 5);
            f_wwrite(0x6564E0 + 2512 + 19 * 2, f_wread(0x6564E0 + 2512 + 19 * 2) + 5)
            # (Line 1461) dwwrite(0x65FD00 + 9808 + 12 * 4, dwread(0x65FD00 + 9808 + 12 * 4) + 50 * 256);
            f_dwwrite(0x65FD00 + 9808 + 12 * 4, f_dwread(0x65FD00 + 9808 + 12 * 4) + 50 * 256)
            # (Line 1462) bwrite(0x65FD00 + 456 + 12 * 1, bread(0x65FD00 + 456 + 12 * 1) + 1);
            f_bwrite(0x65FD00 + 456 + 12 * 1, f_bread(0x65FD00 + 456 + 12 * 1) + 1)
            # (Line 1463) }
            # (Line 1466) if(
        EUDEndIf()
        _t24 = EUDIf()
        # (Line 1467) RandomOption[i] == 27
        # (Line 1468) ){
        if _t24(RandomOption[i] == 27):
            # (Line 1469) wwrite(0x6564E0 + 2512 + 19 * 2, wread(0x6564E0 + 2512 + 19 * 2) + 12);
            f_wwrite(0x6564E0 + 2512 + 19 * 2, f_wread(0x6564E0 + 2512 + 19 * 2) + 12)
            # (Line 1470) dwwrite(0x65FD00 + 9808 + 12 * 4, dwread(0x65FD00 + 9808 + 12 * 4) + 100 * 256);
            f_dwwrite(0x65FD00 + 9808 + 12 * 4, f_dwread(0x65FD00 + 9808 + 12 * 4) + 100 * 256)
            # (Line 1471) bwrite(0x65FD00 + 456 + 12 * 1, bread(0x65FD00 + 456 + 12 * 1) + 1);
            f_bwrite(0x65FD00 + 456 + 12 * 1, f_bread(0x65FD00 + 456 + 12 * 1) + 1)
            # (Line 1472) }
            # (Line 1475) if(
        EUDEndIf()
        _t25 = EUDIf()
        # (Line 1476) RandomOption[i] == 35
        # (Line 1477) ){
        if _t25(RandomOption[i] == 35):
            # (Line 1478) wwrite(0x6564E0 + 2512 + 19 * 2, wread(0x6564E0 + 2512 + 19 * 2) + 70);
            f_wwrite(0x6564E0 + 2512 + 19 * 2, f_wread(0x6564E0 + 2512 + 19 * 2) + 70)
            # (Line 1479) }
            # (Line 1482) if(
        EUDEndIf()
        _t26 = EUDIf()
        # (Line 1483) RandomOption[i] == 38
        # (Line 1484) ){
        if _t26(RandomOption[i] == 38):
            # (Line 1485) EUDPlayerLoop()();
            EUDPlayerLoop()()
            # (Line 1486) if (getcurpl() == 0 || getcurpl() == 1 || getcurpl() == 2 || getcurpl() == 3 || getcurpl() == 4 || getcurpl() == 5) {
            if EUDIf()(EUDSCOr()(f_getcurpl() == 0)(f_getcurpl() == 1)(f_getcurpl() == 2)(f_getcurpl() == 3)(f_getcurpl() == 4)(f_getcurpl() == 5)()):
                # (Line 1487) dwwrite(0x65FD00 + 9808 + PVulture[getcurpl()] * 4, dwread(0x65FD00 + 9808 + PVulture[getcurpl()] * 4) + 75 * 256);
                f_dwwrite(0x65FD00 + 9808 + PVulture[f_getcurpl()] * 4, f_dwread(0x65FD00 + 9808 + PVulture[f_getcurpl()] * 4) + 75 * 256)
                # (Line 1488) }
                # (Line 1489) EUDEndPlayerLoop();
            EUDEndIf()
            EUDEndPlayerLoop()
            # (Line 1490) }
            # (Line 1493) if(
        EUDEndIf()
        _t28 = EUDIf()
        # (Line 1494) RandomOption[i] == 41
        # (Line 1495) ){
        if _t28(RandomOption[i] == 41):
            # (Line 1496) bwrite(0x65FD00 + 19120 + 12 * 1, bread(0x65FD00 + 19120 + 12 * 1) + 1);
            f_bwrite(0x65FD00 + 19120 + 12 * 1, f_bread(0x65FD00 + 19120 + 12 * 1) + 1)
            # (Line 1497) wwrite(0x65FD00 + 4352 + 12 * 2, wread(0x65FD00 + 4352 + 12 * 2) + 300);
            f_wwrite(0x65FD00 + 4352 + 12 * 2, f_wread(0x65FD00 + 4352 + 12 * 2) + 300)
            # (Line 1498) }
            # (Line 1501) if(
        EUDEndIf()
        _t29 = EUDIf()
        # (Line 1502) RandomOption[i] == 45
        # (Line 1503) ){
        if _t29(RandomOption[i] == 45):
            # (Line 1504) bwrite(0x65FD00 + 19120 + 12 * 1, bread(0x65FD00 + 19120 + 12 * 1) + 1);
            f_bwrite(0x65FD00 + 19120 + 12 * 1, f_bread(0x65FD00 + 19120 + 12 * 1) + 1)
            # (Line 1505) wwrite(0x65FD00 + 4352 + 12 * 2, wread(0x65FD00 + 4352 + 12 * 2) + 100);
            f_wwrite(0x65FD00 + 4352 + 12 * 2, f_wread(0x65FD00 + 4352 + 12 * 2) + 100)
            # (Line 1506) dwwrite(0x65FD00 + 9808 + 12 * 4, dwread(0x65FD00 + 9808 + 12 * 4) + 100 * 256);
            f_dwwrite(0x65FD00 + 9808 + 12 * 4, f_dwread(0x65FD00 + 9808 + 12 * 4) + 100 * 256)
            # (Line 1507) }
            # (Line 1510) if(
        EUDEndIf()
        _t30 = EUDIf()
        # (Line 1511) RandomOption[i] == 50
        # (Line 1512) ){
        if _t30(RandomOption[i] == 50):
            # (Line 1513) bwrite(0x65FD00 + 19120 + 12 * 1, bread(0x65FD00 + 19120 + 12 * 1) + 1);
            f_bwrite(0x65FD00 + 19120 + 12 * 1, f_bread(0x65FD00 + 19120 + 12 * 1) + 1)
            # (Line 1514) wwrite(0x65FD00 + 4352 + 12 * 2, wread(0x65FD00 + 4352 + 12 * 2) + 150);
            f_wwrite(0x65FD00 + 4352 + 12 * 2, f_wread(0x65FD00 + 4352 + 12 * 2) + 150)
            # (Line 1515) }
            # (Line 1518) if(
        EUDEndIf()
        _t31 = EUDIf()
        # (Line 1519) RandomOption[i] == 54
        # (Line 1520) ){
        if _t31(RandomOption[i] == 54):
            # (Line 1521) dwwrite(0x6564E0 + 3984 + 19 * 4, dwread(0x6564E0 + 3984 + 19 * 4) + 6);
            f_dwwrite(0x6564E0 + 3984 + 19 * 4, f_dwread(0x6564E0 + 3984 + 19 * 4) + 6)
            # (Line 1522) wwrite(0x6564E0 + 2512 + 19 * 2, wread(0x6564E0 + 2512 + 19 * 2) + 15);
            f_wwrite(0x6564E0 + 2512 + 19 * 2, f_wread(0x6564E0 + 2512 + 19 * 2) + 15)
            # (Line 1523) }
            # (Line 1526) if(
        EUDEndIf()
        _t32 = EUDIf()
        # (Line 1527) RandomOption[i] == 55
        # (Line 1528) ){
        if _t32(RandomOption[i] == 55):
            # (Line 1529) dwwrite(0x6564E0 + 3984 + 19 * 4, dwread(0x6564E0 + 3984 + 19 * 4) + 8);
            f_dwwrite(0x6564E0 + 3984 + 19 * 4, f_dwread(0x6564E0 + 3984 + 19 * 4) + 8)
            # (Line 1530) }
            # (Line 1533) if(
        EUDEndIf()
        _t33 = EUDIf()
        # (Line 1534) RandomOption[i] == 58
        # (Line 1535) ){
        if _t33(RandomOption[i] == 58):
            # (Line 1536) wwrite(0x6564E0 + 2512 + 19 * 2, wread(0x6564E0 + 2512 + 19 * 2) + 7);
            f_wwrite(0x6564E0 + 2512 + 19 * 2, f_wread(0x6564E0 + 2512 + 19 * 2) + 7)
            # (Line 1537) }
            # (Line 1540) if(
        EUDEndIf()
        _t34 = EUDIf()
        # (Line 1541) RandomOption[i] == 59
        # (Line 1542) ){
        if _t34(RandomOption[i] == 59):
            # (Line 1543) dwwrite(0x65FD00 + 9808 + 12 * 4, dwread(0x65FD00 + 9808 + 12 * 4) + -40 * 256);
            f_dwwrite(0x65FD00 + 9808 + 12 * 4, f_dwread(0x65FD00 + 9808 + 12 * 4) + -40 * 256)
            # (Line 1544) }
            # (Line 1549) if(
        EUDEndIf()
        _t35 = EUDIf()
        # (Line 1550) RandomOption[i] == 61
        # (Line 1551) ){
        if _t35(RandomOption[i] == 61):
            # (Line 1552) dwwrite(0x6564E0 + 3984 + 19 * 4, dwread(0x6564E0 + 3984 + 19 * 4) + 4);
            f_dwwrite(0x6564E0 + 3984 + 19 * 4, f_dwread(0x6564E0 + 3984 + 19 * 4) + 4)
            # (Line 1553) }
            # (Line 1556) if(
        EUDEndIf()
        _t36 = EUDIf()
        # (Line 1557) RandomOption[i] == 69
        # (Line 1558) ){
        if _t36(RandomOption[i] == 69):
            # (Line 1559) wwrite(0x6564E0 + 2512 + 19 * 2, wread(0x6564E0 + 2512 + 19 * 2) + 25);
            f_wwrite(0x6564E0 + 2512 + 19 * 2, f_wread(0x6564E0 + 2512 + 19 * 2) + 25)
            # (Line 1560) dwwrite(0x65FD00 + 9808 + 12 * 4, dwread(0x65FD00 + 9808 + 12 * 4) + 150 * 256);
            f_dwwrite(0x65FD00 + 9808 + 12 * 4, f_dwread(0x65FD00 + 9808 + 12 * 4) + 150 * 256)
            # (Line 1561) bwrite(0x65FD00 + 456 + 12 * 1, bread(0x65FD00 + 456 + 12 * 1) + 2);
            f_bwrite(0x65FD00 + 456 + 12 * 1, f_bread(0x65FD00 + 456 + 12 * 1) + 2)
            # (Line 1562) }
            # (Line 1565) if(
        EUDEndIf()
        _t37 = EUDIf()
        # (Line 1566) RandomOption[i] == 70
        # (Line 1567) ){
        if _t37(RandomOption[i] == 70):
            # (Line 1568) wwrite(0x6564E0 + 2512 + 19 * 2, wread(0x6564E0 + 2512 + 19 * 2) + -5);
            f_wwrite(0x6564E0 + 2512 + 19 * 2, f_wread(0x6564E0 + 2512 + 19 * 2) + -5)
            # (Line 1569) }
            # (Line 1572) if(
        EUDEndIf()
        _t38 = EUDIf()
        # (Line 1573) RandomOption[i] == 79
        # (Line 1574) ){
        if _t38(RandomOption[i] == 79):
            # (Line 1575) wwrite(0x6564E0 + 2512 + 19 * 2, wread(0x6564E0 + 2512 + 19 * 2) + 15);
            f_wwrite(0x6564E0 + 2512 + 19 * 2, f_wread(0x6564E0 + 2512 + 19 * 2) + 15)
            # (Line 1576) }
            # (Line 1579) }
        EUDEndIf()
        # (Line 1582) for(var i=0; i<Roulette_Count; i++){
        EUDSetContinuePoint()
        _t6()
    EUDEndWhile()
    i = EUDVariable()
    i << (0)
    if EUDWhile()(i >= Roulette_Count, neg=True):
        def _t40():
            i.__iadd__(1)
        # (Line 1584) if(
        _t41 = EUDIf()
        # (Line 1585) RandomOption[i] == 3
        # (Line 1586) ){
        if _t41(RandomOption[i] == 3):
            # (Line 1587) perSpeedUp(15);
            f_perSpeedUp(15)
            # (Line 1588) wwrite(0x6C9858 + 1056 + 70 * 2, wread(0x6C9858 + 1056 + 70 * 2) + 2);
            f_wwrite(0x6C9858 + 1056 + 70 * 2, f_wread(0x6C9858 + 1056 + 70 * 2) + 2)
            # (Line 1589) }
            # (Line 1592) if(
        EUDEndIf()
        _t42 = EUDIf()
        # (Line 1593) RandomOption[i] == 9
        # (Line 1594) ){
        if _t42(RandomOption[i] == 9):
            # (Line 1595) perSpeedUp(40);
            f_perSpeedUp(40)
            # (Line 1596) wwrite(0x6C9858 + 1056 + 70 * 2, wread(0x6C9858 + 1056 + 70 * 2) + 3);
            f_wwrite(0x6C9858 + 1056 + 70 * 2, f_wread(0x6C9858 + 1056 + 70 * 2) + 3)
            # (Line 1597) }
            # (Line 1600) if(
        EUDEndIf()
        _t43 = EUDIf()
        # (Line 1601) RandomOption[i] == 10
        # (Line 1602) ){
        if _t43(RandomOption[i] == 10):
            # (Line 1603) perSpeedUp(10);
            f_perSpeedUp(10)
            # (Line 1604) perDamageUp(10);
            f_perDamageUp(10)
            # (Line 1605) }
            # (Line 1608) if(
        EUDEndIf()
        _t44 = EUDIf()
        # (Line 1609) RandomOption[i] == 11
        # (Line 1610) ){
        if _t44(RandomOption[i] == 11):
            # (Line 1611) perSpeedUp(-20);
            f_perSpeedUp(-20)
            # (Line 1612) wwrite(0x6C9858 + 1056 + 70 * 2, wread(0x6C9858 + 1056 + 70 * 2) + -2);
            f_wwrite(0x6C9858 + 1056 + 70 * 2, f_wread(0x6C9858 + 1056 + 70 * 2) + -2)
            # (Line 1613) }
            # (Line 1616) if(
        EUDEndIf()
        _t45 = EUDIf()
        # (Line 1617) RandomOption[i] == 12
        # (Line 1618) ){
        if _t45(RandomOption[i] == 12):
            # (Line 1619) perDamageUp(25);
            f_perDamageUp(25)
            # (Line 1620) }
            # (Line 1623) if(
        EUDEndIf()
        _t46 = EUDIf()
        # (Line 1624) RandomOption[i] == 13
        # (Line 1625) ){
        if _t46(RandomOption[i] == 13):
            # (Line 1626) perHealthUp(-20);
            f_perHealthUp(-20)
            # (Line 1627) }
            # (Line 1630) if(
        EUDEndIf()
        _t47 = EUDIf()
        # (Line 1631) RandomOption[i] == 17
        # (Line 1632) ){
        if _t47(RandomOption[i] == 17):
            # (Line 1633) perSpeedUp(70);
            f_perSpeedUp(70)
            # (Line 1634) wwrite(0x6C9858 + 1056 + 70 * 2, wread(0x6C9858 + 1056 + 70 * 2) + 3);
            f_wwrite(0x6C9858 + 1056 + 70 * 2, f_wread(0x6C9858 + 1056 + 70 * 2) + 3)
            # (Line 1635) }
            # (Line 1638) if(
        EUDEndIf()
        _t48 = EUDIf()
        # (Line 1639) RandomOption[i] == 20
        # (Line 1640) ){
        if _t48(RandomOption[i] == 20):
            # (Line 1641) perSpeedUp(30);
            f_perSpeedUp(30)
            # (Line 1642) wwrite(0x6C9858 + 1056 + 70 * 2, wread(0x6C9858 + 1056 + 70 * 2) + 2);
            f_wwrite(0x6C9858 + 1056 + 70 * 2, f_wread(0x6C9858 + 1056 + 70 * 2) + 2)
            # (Line 1643) perHealthUp(30);
            f_perHealthUp(30)
            # (Line 1644) }
            # (Line 1647) if(
        EUDEndIf()
        _t49 = EUDIf()
        # (Line 1648) RandomOption[i] == 25
        # (Line 1649) ){
        if _t49(RandomOption[i] == 25):
            # (Line 1650) perSpeedUp(10);
            f_perSpeedUp(10)
            # (Line 1651) }
            # (Line 1654) if(
        EUDEndIf()
        _t50 = EUDIf()
        # (Line 1655) RandomOption[i] == 26
        # (Line 1656) ){
        if _t50(RandomOption[i] == 26):
            # (Line 1657) perSpeedUp(25);
            f_perSpeedUp(25)
            # (Line 1658) wwrite(0x6C9858 + 1056 + 70 * 2, wread(0x6C9858 + 1056 + 70 * 2) + 1);
            f_wwrite(0x6C9858 + 1056 + 70 * 2, f_wread(0x6C9858 + 1056 + 70 * 2) + 1)
            # (Line 1659) }
            # (Line 1662) if(
        EUDEndIf()
        _t51 = EUDIf()
        # (Line 1663) RandomOption[i] == 27
        # (Line 1664) ){
        if _t51(RandomOption[i] == 27):
            # (Line 1665) perSpeedUp(30);
            f_perSpeedUp(30)
            # (Line 1666) wwrite(0x6C9858 + 1056 + 70 * 2, wread(0x6C9858 + 1056 + 70 * 2) + 2);
            f_wwrite(0x6C9858 + 1056 + 70 * 2, f_wread(0x6C9858 + 1056 + 70 * 2) + 2)
            # (Line 1667) }
            # (Line 1670) if(
        EUDEndIf()
        _t52 = EUDIf()
        # (Line 1671) RandomOption[i] == 28
        # (Line 1672) ){
        if _t52(RandomOption[i] == 28):
            # (Line 1673) perSpeedUp(100);
            f_perSpeedUp(100)
            # (Line 1674) wwrite(0x6C9858 + 1056 + 70 * 2, wread(0x6C9858 + 1056 + 70 * 2) + 9);
            f_wwrite(0x6C9858 + 1056 + 70 * 2, f_wread(0x6C9858 + 1056 + 70 * 2) + 9)
            # (Line 1675) }
            # (Line 1678) if(
        EUDEndIf()
        _t53 = EUDIf()
        # (Line 1679) RandomOption[i] == 31
        # (Line 1680) ){
        if _t53(RandomOption[i] == 31):
            # (Line 1681) for(var j=0;j>=0;j++){
            j = EUDVariable()
            j << (0)
            if EUDWhile()(j >= 0):
                def _t55():
                    j.__iadd__(1)
                # (Line 1682) if (WeaponList[j] == 9999) break;
                if EUDIf()(WeaponList[j] == 9999):
                    EUDBreak()
                    # (Line 1683) var damage_;
                EUDEndIf()
                damage_ = EUDVariable()
                # (Line 1684) damage_ = wread(0x6564E0 + 2512 + WeaponList[j] * 2);
                damage_ << (f_wread(0x6564E0 + 2512 + WeaponList[j] * 2))
                # (Line 1685) damage_ = damage_ * 200 / 100;
                damage_ << (damage_ * 200 // 100)
                # (Line 1686) wwrite(0x6564E0 + 2512 + WeaponList[j] * 2, damage_);
                f_wwrite(0x6564E0 + 2512 + WeaponList[j] * 2, damage_)
                # (Line 1687) }
                # (Line 1688) }
                EUDSetContinuePoint()
                _t55()
            EUDEndWhile()
            # (Line 1691) if(
        EUDEndIf()
        _t57 = EUDIf()
        # (Line 1692) RandomOption[i] == 33
        # (Line 1693) ){
        if _t57(RandomOption[i] == 33):
            # (Line 1694) perSpeedUp(-20);
            f_perSpeedUp(-20)
            # (Line 1695) wwrite(0x6C9858 + 1056 + 70 * 2, wread(0x6C9858 + 1056 + 70 * 2) + -3);
            f_wwrite(0x6C9858 + 1056 + 70 * 2, f_wread(0x6C9858 + 1056 + 70 * 2) + -3)
            # (Line 1696) perHealthUp(30);
            f_perHealthUp(30)
            # (Line 1697) }
            # (Line 1700) if(
        EUDEndIf()
        _t58 = EUDIf()
        # (Line 1701) RandomOption[i] == 40
        # (Line 1702) ){
        if _t58(RandomOption[i] == 40):
            # (Line 1703) perSpeedUp(60);
            f_perSpeedUp(60)
            # (Line 1704) wwrite(0x6C9858 + 1056 + 70 * 2, wread(0x6C9858 + 1056 + 70 * 2) + 5);
            f_wwrite(0x6C9858 + 1056 + 70 * 2, f_wread(0x6C9858 + 1056 + 70 * 2) + 5)
            # (Line 1705) perHealthUp(-15);
            f_perHealthUp(-15)
            # (Line 1706) }
            # (Line 1709) if(
        EUDEndIf()
        _t59 = EUDIf()
        # (Line 1710) RandomOption[i] == 44
        # (Line 1711) ){
        if _t59(RandomOption[i] == 44):
            # (Line 1712) perSpeedUp(30);
            f_perSpeedUp(30)
            # (Line 1713) wwrite(0x6C9858 + 1056 + 70 * 2, wread(0x6C9858 + 1056 + 70 * 2) + 2);
            f_wwrite(0x6C9858 + 1056 + 70 * 2, f_wread(0x6C9858 + 1056 + 70 * 2) + 2)
            # (Line 1714) perAttSpeedUp(-30);
            f_perAttSpeedUp(-30)
            # (Line 1715) }
            # (Line 1718) if(
        EUDEndIf()
        _t60 = EUDIf()
        # (Line 1719) RandomOption[i] == 50
        # (Line 1720) ){
        if _t60(RandomOption[i] == 50):
            # (Line 1721) perSpeedUp(20);
            f_perSpeedUp(20)
            # (Line 1722) wwrite(0x6C9858 + 1056 + 70 * 2, wread(0x6C9858 + 1056 + 70 * 2) + 2);
            f_wwrite(0x6C9858 + 1056 + 70 * 2, f_wread(0x6C9858 + 1056 + 70 * 2) + 2)
            # (Line 1723) }
            # (Line 1726) if(
        EUDEndIf()
        _t61 = EUDIf()
        # (Line 1727) RandomOption[i] == 53
        # (Line 1728) ){
        if _t61(RandomOption[i] == 53):
            # (Line 1729) perHealthUp(20);
            f_perHealthUp(20)
            # (Line 1730) perDamageUp(30);
            f_perDamageUp(30)
            # (Line 1731) }
            # (Line 1734) if(
        EUDEndIf()
        _t62 = EUDIf()
        # (Line 1735) RandomOption[i] == 55
        # (Line 1736) ){
        if _t62(RandomOption[i] == 55):
            # (Line 1737) var angle_;
            angle_ = EUDVariable()
            # (Line 1738) angle_ = bread(0x6564E0 + 1200 + 19 * 1);
            angle_ << (f_bread(0x6564E0 + 1200 + 19 * 1))
            # (Line 1739) angle_ = angle_ * 80 / 100;
            angle_ << (angle_ * 80 // 100)
            # (Line 1740) bwrite(0x6564E0 + 1200 + 19 * 1, angle_);
            f_bwrite(0x6564E0 + 1200 + 19 * 1, angle_)
            # (Line 1741) }
            # (Line 1744) if(
        EUDEndIf()
        _t63 = EUDIf()
        # (Line 1745) RandomOption[i] == 61
        # (Line 1746) ){
        if _t63(RandomOption[i] == 61):
            # (Line 1747) perSpeedUp(40);
            f_perSpeedUp(40)
            # (Line 1748) wwrite(0x6C9858 + 1056 + 70 * 2, wread(0x6C9858 + 1056 + 70 * 2) + 3);
            f_wwrite(0x6C9858 + 1056 + 70 * 2, f_wread(0x6C9858 + 1056 + 70 * 2) + 3)
            # (Line 1749) }
            # (Line 1752) if(
        EUDEndIf()
        _t64 = EUDIf()
        # (Line 1753) RandomOption[i] == 69
        # (Line 1754) ){
        if _t64(RandomOption[i] == 69):
            # (Line 1755) perSpeedUp(45);
            f_perSpeedUp(45)
            # (Line 1756) wwrite(0x6C9858 + 1056 + 70 * 2, wread(0x6C9858 + 1056 + 70 * 2) + 3);
            f_wwrite(0x6C9858 + 1056 + 70 * 2, f_wread(0x6C9858 + 1056 + 70 * 2) + 3)
            # (Line 1757) }
            # (Line 1760) if(
        EUDEndIf()
        _t65 = EUDIf()
        # (Line 1761) RandomOption[i] == 76
        # (Line 1762) ){
        if _t65(RandomOption[i] == 76):
            # (Line 1763) perDamageUp(70);
            f_perDamageUp(70)
            # (Line 1764) }
            # (Line 1767) if(
        EUDEndIf()
        _t66 = EUDIf()
        # (Line 1768) RandomOption[i] == 78
        # (Line 1769) ){
        if _t66(RandomOption[i] == 78):
            # (Line 1770) perHealthUp(-25);
            f_perHealthUp(-25)
            # (Line 1771) perShieldUp(75);
            f_perShieldUp(75)
            # (Line 1772) }
            # (Line 1775) if(
        EUDEndIf()
        _t67 = EUDIf()
        # (Line 1776) RandomOption[i] == 79
        # (Line 1777) ){
        if _t67(RandomOption[i] == 79):
            # (Line 1778) perDamageUp(10);
            f_perDamageUp(10)
            # (Line 1779) }
            # (Line 1781) }
        EUDEndIf()
        # (Line 1784) for(var i=0; i<Roulette_Count; i++){
        EUDSetContinuePoint()
        _t40()
    EUDEndWhile()
    i = EUDVariable()
    i << (0)
    if EUDWhile()(i >= Roulette_Count, neg=True):
        def _t69():
            i.__iadd__(1)
        # (Line 1787) if(
        _t70 = EUDIf()
        # (Line 1788) RandomOption[i] == 19
        # (Line 1789) ){
        if _t70(RandomOption[i] == 19):
            # (Line 1790) HealthRegen += 8;
            HealthRegen.__iadd__(8)
            # (Line 1791) }
            # (Line 1794) if(
        EUDEndIf()
        _t71 = EUDIf()
        # (Line 1795) RandomOption[i] == 30
        # (Line 1796) ){
        if _t71(RandomOption[i] == 30):
            # (Line 1797) bwrite(0x65FD00 + 19120 + 12 * 1, 1);
            f_bwrite(0x65FD00 + 19120 + 12 * 1, 1)
            # (Line 1798) wwrite(0x65FD00 + 4352 + 12 * 2, wread(0x65FD00 + 4352 + 12 * 2) + 30);
            f_wwrite(0x65FD00 + 4352 + 12 * 2, f_wread(0x65FD00 + 4352 + 12 * 2) + 30)
            # (Line 1799) 건전지 = 1;
            건전지 << (1)
            # (Line 1800) }
            # (Line 1803) if(
        EUDEndIf()
        _t72 = EUDIf()
        # (Line 1804) RandomOption[i] == 46
        # (Line 1805) ){
        if _t72(RandomOption[i] == 46):
            # (Line 1806) HealthRegen += 21;
            HealthRegen.__iadd__(21)
            # (Line 1807) }
            # (Line 1810) if(
        EUDEndIf()
        _t73 = EUDIf()
        # (Line 1811) RandomOption[i] == 52
        # (Line 1812) ){
        if _t73(RandomOption[i] == 52):
            # (Line 1813) HealthRegen += 16;
            HealthRegen.__iadd__(16)
            # (Line 1814) }
            # (Line 1817) if(
        EUDEndIf()
        _t74 = EUDIf()
        # (Line 1818) RandomOption[i] == 73
        # (Line 1819) ){
        if _t74(RandomOption[i] == 73):
            # (Line 1820) HealthRegen += 32;
            HealthRegen.__iadd__(32)
            # (Line 1821) }
            # (Line 1825) if(
        EUDEndIf()
        _t75 = EUDIf()
        # (Line 1826) RandomOption[i] == 15
        # (Line 1827) ){
        if _t75(RandomOption[i] == 15):
            # (Line 1828) bwrite(0x65FD00 + 13392 + 12 * 1, 4);
            f_bwrite(0x65FD00 + 13392 + 12 * 1, 4)
            # (Line 1829) bwrite(0x6C9858 + 1480 + 70 * 1, 40);
            f_bwrite(0x6C9858 + 1480 + 70 * 1, 40)
            # (Line 1830) }
            # (Line 1833) if(
        EUDEndIf()
        _t76 = EUDIf()
        # (Line 1834) RandomOption[i] == 23
        # (Line 1835) ){
        if _t76(RandomOption[i] == 23):
            # (Line 1836) dwwrite(0x6564E0 + 3984 + 19 * 4, 144);
            f_dwwrite(0x6564E0 + 3984 + 19 * 4, 144)
            # (Line 1837) }
            # (Line 1840) if(
        EUDEndIf()
        _t77 = EUDIf()
        # (Line 1841) RandomOption[i] == 29
        # (Line 1842) ){
        if _t77(RandomOption[i] == 29):
            # (Line 1843) 러시안룰렛 = 1;
            러시안룰렛 << (1)
            # (Line 1844) }
            # (Line 1847) if(
        EUDEndIf()
        _t78 = EUDIf()
        # (Line 1848) RandomOption[i] == 34
        # (Line 1849) ){
        if _t78(RandomOption[i] == 34):
            # (Line 1850) var speed_;
            speed_ = EUDVariable()
            # (Line 1851) speed_ = dwread(0x6C9858 + 1696 + 70 * 4);
            speed_ << (f_dwread(0x6C9858 + 1696 + 70 * 4))
            # (Line 1852) speed_ = speed_ * 80 / 100;
            speed_ << (speed_ * 80 // 100)
            # (Line 1853) dwwrite(0x6C9858 + 1696 + 70 * 4, speed_);
            f_dwwrite(0x6C9858 + 1696 + 70 * 4, speed_)
            # (Line 1854) wwrite(0x6C9858 + 1056 + 70 * 2, wread(0x6C9858 + 1056 + 70 * 2) + 20);
            f_wwrite(0x6C9858 + 1056 + 70 * 2, f_wread(0x6C9858 + 1056 + 70 * 2) + 20)
            # (Line 1855) speed_ = wread(0x6C9858 + 1056 + 70 * 2);
            speed_ << (f_wread(0x6C9858 + 1056 + 70 * 2))
            # (Line 1856) speed_ = speed_ * 200 / 100;
            speed_ << (speed_ * 200 // 100)
            # (Line 1857) wwrite(0x6C9858 + 1056 + 70 * 2, speed_);
            f_wwrite(0x6C9858 + 1056 + 70 * 2, speed_)
            # (Line 1858) dwwrite(0x6C9858 + 216 + 70 * 4, dwread(0x6C9858 + 216 + 70 * 4) + 13000);
            f_dwwrite(0x6C9858 + 216 + 70 * 4, f_dwread(0x6C9858 + 216 + 70 * 4) + 13000)
            # (Line 1859) }
            # (Line 1862) if(
        EUDEndIf()
        _t79 = EUDIf()
        # (Line 1863) RandomOption[i] == 37
        # (Line 1864) ){
        if _t79(RandomOption[i] == 37):
            # (Line 1865) bwrite(0x6564E0 + 1200 + 19 * 1, 127);
            f_bwrite(0x6564E0 + 1200 + 19 * 1, 127)
            # (Line 1866) var damage_;
            damage_ = EUDVariable()
            # (Line 1867) damage_ = wread(0x6564E0 + 2512 + 19 * 2);
            damage_ << (f_wread(0x6564E0 + 2512 + 19 * 2))
            # (Line 1868) damage_ = damage_ * 110 / 100;
            damage_ << (damage_ * 110 // 100)
            # (Line 1869) wwrite(0x6564E0 + 2512 + 19 * 2, damage_);
            f_wwrite(0x6564E0 + 2512 + 19 * 2, damage_)
            # (Line 1870) }
            # (Line 1873) if(
        EUDEndIf()
        _t80 = EUDIf()
        # (Line 1874) RandomOption[i] == 39
        # (Line 1875) ){
        if _t80(RandomOption[i] == 39):
            # (Line 1876) for(var j=0;j>=0;j++){
            j = EUDVariable()
            j << (0)
            if EUDWhile()(j >= 0):
                def _t82():
                    j.__iadd__(1)
                # (Line 1877) if (WeaponList[j] == 9999) break;
                if EUDIf()(WeaponList[j] == 9999):
                    EUDBreak()
                    # (Line 1878) bwrite(0x6564E0 + 3448 + WeaponList[j] * 1, 4);
                EUDEndIf()
                f_bwrite(0x6564E0 + 3448 + WeaponList[j] * 1, 4)
                # (Line 1879) }
                # (Line 1880) }
                EUDSetContinuePoint()
                _t82()
            EUDEndWhile()
            # (Line 1883) if(
        EUDEndIf()
        _t84 = EUDIf()
        # (Line 1884) RandomOption[i] == 49
        # (Line 1885) ){
        if _t84(RandomOption[i] == 49):
            # (Line 1886) 중상 = 1;
            중상 << (1)
            # (Line 1887) }
            # (Line 1890) if(
        EUDEndIf()
        _t85 = EUDIf()
        # (Line 1891) RandomOption[i] == 51
        # (Line 1892) ){
        if _t85(RandomOption[i] == 51):
            # (Line 1893) dwwrite(0x6C9858 + 216 + 70 * 4, 0);
            f_dwwrite(0x6C9858 + 216 + 70 * 4, 0)
            # (Line 1894) }
            # (Line 1897) if(
        EUDEndIf()
        _t86 = EUDIf()
        # (Line 1898) RandomOption[i] == 56
        # (Line 1899) ){
        if _t86(RandomOption[i] == 56):
            # (Line 1900) for(var j=0;j>=0;j++){
            j = EUDVariable()
            j << (0)
            if EUDWhile()(j >= 0):
                def _t88():
                    j.__iadd__(1)
                # (Line 1901) if (WeaponList[j] == 9999) break;
                if EUDIf()(WeaponList[j] == 9999):
                    EUDBreak()
                    # (Line 1902) bwrite(0x6564E0 + 5032 + WeaponList[j] * 1, 64);
                EUDEndIf()
                f_bwrite(0x6564E0 + 5032 + WeaponList[j] * 1, 64)
                # (Line 1903) bwrite(0x6564E0 + 0 + WeaponList[j] * 1, 2);
                f_bwrite(0x6564E0 + 0 + WeaponList[j] * 1, 2)
                # (Line 1904) }
                # (Line 1905) }
                EUDSetContinuePoint()
                _t88()
            EUDEndWhile()
            # (Line 1907) }
        EUDEndIf()
        # (Line 1910) for(var i=0; i<Roulette_Count; i++){
        EUDSetContinuePoint()
        _t69()
    EUDEndWhile()
    i = EUDVariable()
    i << (0)
    if EUDWhile()(i >= Roulette_Count, neg=True):
        def _t91():
            i.__iadd__(1)
        # (Line 1912) if(
        _t92 = EUDIf()
        # (Line 1913) RandomOption[i] == 44
        # (Line 1914) ){
        if _t92(RandomOption[i] == 44):
            # (Line 1915) for(var s = 0 ; s < 2 ; s++){
            s = EUDVariable()
            s << (0)
            if EUDWhile()(s >= 2, neg=True):
                def _t94():
                    s.__iadd__(1)
                # (Line 1916) if(
                _t95 = EUDIf()
                # (Line 1917) bread(0x65FD00 + 456 + 12 * 1) >= 1
                # (Line 1918) ){
                if _t95(f_bread(0x65FD00 + 456 + 12 * 1) >= 1):
                    # (Line 1919) bwrite(0x65FD00 + 456 + 12 * 1, bread(0x65FD00 + 456 + 12 * 1) + -1);
                    f_bwrite(0x65FD00 + 456 + 12 * 1, f_bread(0x65FD00 + 456 + 12 * 1) + -1)
                    # (Line 1920) }
                    # (Line 1921) }
                EUDEndIf()
                # (Line 1922) }
                EUDSetContinuePoint()
                _t94()
            EUDEndWhile()
            # (Line 1925) if(
        EUDEndIf()
        _t96 = EUDIf()
        # (Line 1926) RandomOption[i] == 76
        # (Line 1927) ){
        if _t96(RandomOption[i] == 76):
            # (Line 1928) for(var s = 0 ; s < 3 ; s++){
            s = EUDVariable()
            s << (0)
            if EUDWhile()(s >= 3, neg=True):
                def _t98():
                    s.__iadd__(1)
                # (Line 1929) if(
                _t99 = EUDIf()
                # (Line 1930) bread(0x65FD00 + 456 + 12 * 1) >= 1
                # (Line 1931) ){
                if _t99(f_bread(0x65FD00 + 456 + 12 * 1) >= 1):
                    # (Line 1932) bwrite(0x65FD00 + 456 + 12 * 1, bread(0x65FD00 + 456 + 12 * 1) + -1);
                    f_bwrite(0x65FD00 + 456 + 12 * 1, f_bread(0x65FD00 + 456 + 12 * 1) + -1)
                    # (Line 1933) }
                    # (Line 1934) }
                EUDEndIf()
                # (Line 1935) }
                EUDSetContinuePoint()
                _t98()
            EUDEndWhile()
            # (Line 1937) }
        EUDEndIf()
        # (Line 1940) for(var i=0; i<Roulette_Count; i++){
        EUDSetContinuePoint()
        _t91()
    EUDEndWhile()
    i = EUDVariable()
    i << (0)
    if EUDWhile()(i >= Roulette_Count, neg=True):
        def _t101():
            i.__iadd__(1)
        # (Line 1944) if(
        _t102 = EUDIf()
        # (Line 1945) RandomOption[i] == 32
        # (Line 1946) ){
        if _t102(RandomOption[i] == 32):
            # (Line 1947) wwrite(0x6C9858 + 2752 + 70 * 2, 491);
            f_wwrite(0x6C9858 + 2752 + 70 * 2, 491)
            # (Line 1948) wwrite(0x65FD00 + 12936 + 12 * 2, 91);
            f_wwrite(0x65FD00 + 12936 + 12 * 2, 91)
            # (Line 1949) SetMemory(0x661828, (7), 1048600);
            # (Line 1950) SetMemory(0x66182C, (7), 1310744);
            DoActions(SetMemory(0x661828, (7), 1048600))
            # (Line 1951) dwwrite(0x666778 + 34000 + 940 * 4, 275);
            DoActions(SetMemory(0x66182C, (7), 1310744))
            f_dwwrite(0x666778 + 34000 + 940 * 4, 275)
            # (Line 1952) dwwrite(0x6564E0 + 1992 + 19 * 4, 202);
            f_dwwrite(0x6564E0 + 1992 + 19 * 4, 202)
            # (Line 1953) bwrite(0x6564E0 + 5168 + 19 * 1, 20);
            f_bwrite(0x6564E0 + 5168 + 19 * 1, 20)
            # (Line 1954) bwrite(0x6564E0 + 400 + 19 * 1, 1);
            f_bwrite(0x6564E0 + 400 + 19 * 1, 1)
            # (Line 1955) dwwrite(0x6C9858 + 1696 + 70 * 4, 732);
            f_dwwrite(0x6C9858 + 1696 + 70 * 4, 732)
            # (Line 1956) wwrite(0x6C9858 + 1056 + 70 * 2, wread(0x6C9858 + 1056 + 70 * 2) + 8);
            f_wwrite(0x6C9858 + 1056 + 70 * 2, f_wread(0x6C9858 + 1056 + 70 * 2) + 8)
            # (Line 1957) }
            # (Line 1960) if(
        EUDEndIf()
        _t103 = EUDIf()
        # (Line 1961) RandomOption[i] == 36
        # (Line 1962) ){
        if _t103(RandomOption[i] == 36):
            # (Line 1963) wwrite(0x6C9858 + 2752 + 70 * 2, 235);
            f_wwrite(0x6C9858 + 2752 + 70 * 2, 235)
            # (Line 1964) wwrite(0x65FD00 + 12936 + 12 * 2, 0);
            f_wwrite(0x65FD00 + 12936 + 12 * 2, 0)
            # (Line 1965) SetMemory(0x661828, (7), 589832);
            # (Line 1966) SetMemory(0x66182C, (7), 655368);
            DoActions(SetMemory(0x661828, (7), 589832))
            # (Line 1967) dwwrite(0x65FD00 + 9808 + 12 * 4, dwread(0x65FD00 + 9808 + 12 * 4) + 250 * 256);
            DoActions(SetMemory(0x66182C, (7), 655368))
            f_dwwrite(0x65FD00 + 9808 + 12 * 4, f_dwread(0x65FD00 + 9808 + 12 * 4) + 250 * 256)
            # (Line 1968) dwwrite(0x6564E0 + 1992 + 19 * 4, 152);
            f_dwwrite(0x6564E0 + 1992 + 19 * 4, 152)
            # (Line 1969) bwrite(0x6564E0 + 400 + 19 * 1, 2);
            f_bwrite(0x6564E0 + 400 + 19 * 1, 2)
            # (Line 1970) 체력회복불가 = 1;
            체력회복불가 << (1)
            # (Line 1971) wwrite(0x6C9858 + 1056 + 70 * 2, 300);
            f_wwrite(0x6C9858 + 1056 + 70 * 2, 300)
            # (Line 1972) }
            # (Line 1975) if(
        EUDEndIf()
        _t104 = EUDIf()
        # (Line 1976) RandomOption[i] == 42
        # (Line 1977) ){
        if _t104(RandomOption[i] == 42):
            # (Line 1978) wwrite(0x6C9858 + 2752 + 70 * 2, 146);
            f_wwrite(0x6C9858 + 2752 + 70 * 2, 146)
            # (Line 1979) wwrite(0x65FD00 + 12936 + 12 * 2, 21);
            f_wwrite(0x65FD00 + 12936 + 12 * 2, 21)
            # (Line 1980) SetMemory(0x661828, (7), 655370);
            # (Line 1981) SetMemory(0x66182C, (7), 786442);
            DoActions(SetMemory(0x661828, (7), 655370))
            # (Line 1982) bwrite(0x65FD00 + 13392 + 12 * 1, 4);
            DoActions(SetMemory(0x66182C, (7), 786442))
            f_bwrite(0x65FD00 + 13392 + 12 * 1, 4)
            # (Line 1983) dwwrite(0x6564E0 + 1992 + 19 * 4, 171);
            f_dwwrite(0x6564E0 + 1992 + 19 * 4, 171)
            # (Line 1984) bwrite(0x6564E0 + 400 + 19 * 1, 2);
            f_bwrite(0x6564E0 + 400 + 19 * 1, 2)
            # (Line 1985) dwwrite(0x6564E0 + 3984 + 19 * 4, dwread(0x6564E0 + 3984 + 19 * 4) + 4);
            f_dwwrite(0x6564E0 + 3984 + 19 * 4, f_dwread(0x6564E0 + 3984 + 19 * 4) + 4)
            # (Line 1986) wwrite(0x6C9858 + 1056 + 70 * 2, 300);
            f_wwrite(0x6C9858 + 1056 + 70 * 2, 300)
            # (Line 1987) }
            # (Line 1990) if(
        EUDEndIf()
        _t105 = EUDIf()
        # (Line 1991) RandomOption[i] == 43
        # (Line 1992) ){
        if _t105(RandomOption[i] == 43):
            # (Line 1993) wwrite(0x6C9858 + 2752 + 70 * 2, 201);
            f_wwrite(0x6C9858 + 2752 + 70 * 2, 201)
            # (Line 1994) wwrite(0x65FD00 + 12936 + 12 * 2, 40);
            f_wwrite(0x65FD00 + 12936 + 12 * 2, 40)
            # (Line 1995) SetMemory(0x661828, (7), 327691);
            # (Line 1996) SetMemory(0x66182C, (7), 851979);
            DoActions(SetMemory(0x661828, (7), 327691))
            # (Line 1997) dwwrite(0x6564E0 + 1992 + 19 * 4, 0);
            DoActions(SetMemory(0x66182C, (7), 851979))
            f_dwwrite(0x6564E0 + 1992 + 19 * 4, 0)
            # (Line 1998) bwrite(0x6564E0 + 400 + 19 * 1, 5);
            f_bwrite(0x6564E0 + 400 + 19 * 1, 5)
            # (Line 1999) dwwrite(0x666778 + 34000 + 151 * 4, 31);
            f_dwwrite(0x666778 + 34000 + 151 * 4, 31)
            # (Line 2000) perHealthUp(-20);
            f_perHealthUp(-20)
            # (Line 2001) perShieldUp(50);
            f_perShieldUp(50)
            # (Line 2002) wwrite(0x6C9858 + 1056 + 70 * 2, 300);
            f_wwrite(0x6C9858 + 1056 + 70 * 2, 300)
            # (Line 2003) }
            # (Line 2006) if(
        EUDEndIf()
        _t106 = EUDIf()
        # (Line 2007) RandomOption[i] == 46
        # (Line 2008) ){
        if _t106(RandomOption[i] == 46):
            # (Line 2009) wwrite(0x6C9858 + 2752 + 70 * 2, 151);
            f_wwrite(0x6C9858 + 2752 + 70 * 2, 151)
            # (Line 2010) wwrite(0x65FD00 + 12936 + 12 * 2, 26);
            f_wwrite(0x65FD00 + 12936 + 12 * 2, 26)
            # (Line 2011) SetMemory(0x661828, (7), 1441814);
            # (Line 2012) SetMemory(0x66182C, (7), 1376277);
            DoActions(SetMemory(0x661828, (7), 1441814))
            # (Line 2013) dwwrite(0x6564E0 + 1992 + 19 * 4, 165);
            DoActions(SetMemory(0x66182C, (7), 1376277))
            f_dwwrite(0x6564E0 + 1992 + 19 * 4, 165)
            # (Line 2014) bwrite(0x6564E0 + 5168 + 19 * 1, 5);
            f_bwrite(0x6564E0 + 5168 + 19 * 1, 5)
            # (Line 2015) bwrite(0x6564E0 + 400 + 19 * 1, 0);
            f_bwrite(0x6564E0 + 400 + 19 * 1, 0)
            # (Line 2016) bwrite(0x65FD00 + 456 + 12 * 1, 0);
            f_bwrite(0x65FD00 + 456 + 12 * 1, 0)
            # (Line 2017) }
            # (Line 2020) if(
        EUDEndIf()
        _t107 = EUDIf()
        # (Line 2021) RandomOption[i] == 47
        # (Line 2022) ){
        if _t107(RandomOption[i] == 47):
            # (Line 2023) wwrite(0x6C9858 + 2752 + 70 * 2, 157);
            f_wwrite(0x6C9858 + 2752 + 70 * 2, 157)
            # (Line 2024) wwrite(0x65FD00 + 12936 + 12 * 2, 22);
            f_wwrite(0x65FD00 + 12936 + 12 * 2, 22)
            # (Line 2025) SetMemory(0x661828, (7), 1048595);
            # (Line 2026) SetMemory(0x66182C, (7), 983058);
            DoActions(SetMemory(0x661828, (7), 1048595))
            # (Line 2027) dwwrite(0x6564E0 + 1992 + 19 * 4, 0);
            DoActions(SetMemory(0x66182C, (7), 983058))
            f_dwwrite(0x6564E0 + 1992 + 19 * 4, 0)
            # (Line 2028) bwrite(0x6564E0 + 400 + 19 * 1, 5);
            f_bwrite(0x6564E0 + 400 + 19 * 1, 5)
            # (Line 2029) var shield_;
            shield_ = EUDVariable()
            # (Line 2030) shield_ = wread(0x65FD00 + 4352 + 12 * 2);
            shield_ << (f_wread(0x65FD00 + 4352 + 12 * 2))
            # (Line 2031) shield_ = shield_ * 256;
            shield_ << (shield_ * 256)
            # (Line 2032) dwwrite(0x65FD00 + 9808 + 12 * 4, dwread(0x65FD00 + 9808 + 12 * 4) + shield_);
            f_dwwrite(0x65FD00 + 9808 + 12 * 4, f_dwread(0x65FD00 + 9808 + 12 * 4) + shield_)
            # (Line 2033) wwrite(0x65FD00 + 4352 + 12 * 2, 0);
            f_wwrite(0x65FD00 + 4352 + 12 * 2, 0)
            # (Line 2034) bwrite(0x65FD00 + 19120 + 12 * 1, 0);
            f_bwrite(0x65FD00 + 19120 + 12 * 1, 0)
            # (Line 2035) wwrite(0x6C9858 + 1056 + 70 * 2, 300);
            f_wwrite(0x6C9858 + 1056 + 70 * 2, 300)
            # (Line 2036) }
            # (Line 2039) if(
        EUDEndIf()
        _t108 = EUDIf()
        # (Line 2040) RandomOption[i] == 48
        # (Line 2041) ){
        if _t108(RandomOption[i] == 48):
            # (Line 2042) wwrite(0x6C9858 + 2752 + 70 * 2, 144);
            f_wwrite(0x6C9858 + 2752 + 70 * 2, 144)
            # (Line 2043) wwrite(0x65FD00 + 12936 + 12 * 2, 27);
            f_wwrite(0x65FD00 + 12936 + 12 * 2, 27)
            # (Line 2044) SetMemory(0x661828, (7), 1441814);
            # (Line 2045) SetMemory(0x66182C, (7), 1376277);
            DoActions(SetMemory(0x661828, (7), 1441814))
            # (Line 2046) dwwrite(0x6564E0 + 1992 + 19 * 4, 163);
            DoActions(SetMemory(0x66182C, (7), 1376277))
            f_dwwrite(0x6564E0 + 1992 + 19 * 4, 163)
            # (Line 2047) bwrite(0x6564E0 + 5168 + 19 * 1, 0);
            f_bwrite(0x6564E0 + 5168 + 19 * 1, 0)
            # (Line 2048) bwrite(0x6564E0 + 400 + 19 * 1, 0);
            f_bwrite(0x6564E0 + 400 + 19 * 1, 0)
            # (Line 2049) var speed_;
            speed_ = EUDVariable()
            # (Line 2050) speed_ = dwread(0x6C9858 + 1696 + 70 * 4);
            speed_ << (f_dwread(0x6C9858 + 1696 + 70 * 4))
            # (Line 2051) speed_ = speed_ * 80 / 100;
            speed_ << (speed_ * 80 // 100)
            # (Line 2052) dwwrite(0x6C9858 + 1696 + 70 * 4, speed_);
            f_dwwrite(0x6C9858 + 1696 + 70 * 4, speed_)
            # (Line 2053) dwwrite(0x6564E0 + 3984 + 19 * 4, dwread(0x6564E0 + 3984 + 19 * 4) + 6);
            f_dwwrite(0x6564E0 + 3984 + 19 * 4, f_dwread(0x6564E0 + 3984 + 19 * 4) + 6)
            # (Line 2054) }
            # (Line 2057) if(
        EUDEndIf()
        _t109 = EUDIf()
        # (Line 2058) RandomOption[i] == 57
        # (Line 2059) ){
        if _t109(RandomOption[i] == 57):
            # (Line 2060) wwrite(0x6C9858 + 2752 + 70 * 2, 193);
            f_wwrite(0x6C9858 + 2752 + 70 * 2, 193)
            # (Line 2061) wwrite(0x65FD00 + 12936 + 12 * 2, 48);
            f_wwrite(0x65FD00 + 12936 + 12 * 2, 48)
            # (Line 2062) SetMemory(0x661828, (7), 524296);
            # (Line 2063) SetMemory(0x66182C, (7), 458759);
            DoActions(SetMemory(0x661828, (7), 524296))
            # (Line 2064) dwwrite(0x6564E0 + 1992 + 19 * 4, 155);
            DoActions(SetMemory(0x66182C, (7), 458759))
            f_dwwrite(0x6564E0 + 1992 + 19 * 4, 155)
            # (Line 2065) bwrite(0x6564E0 + 5168 + 19 * 1, 20);
            f_bwrite(0x6564E0 + 5168 + 19 * 1, 20)
            # (Line 2066) bwrite(0x6564E0 + 400 + 19 * 1, 0);
            f_bwrite(0x6564E0 + 400 + 19 * 1, 0)
            # (Line 2067) perSpeedUp(30);
            f_perSpeedUp(30)
            # (Line 2068) }
            # (Line 2071) if(
        EUDEndIf()
        _t110 = EUDIf()
        # (Line 2072) RandomOption[i] == 60
        # (Line 2073) ){
        if _t110(RandomOption[i] == 60):
            # (Line 2074) wwrite(0x6C9858 + 2752 + 70 * 2, 189);
            f_wwrite(0x6C9858 + 2752 + 70 * 2, 189)
            # (Line 2075) wwrite(0x65FD00 + 12936 + 12 * 2, 43);
            f_wwrite(0x65FD00 + 12936 + 12 * 2, 43)
            # (Line 2076) SetMemory(0x661828, (7), 1048592);
            # (Line 2077) SetMemory(0x66182C, (7), 983055);
            DoActions(SetMemory(0x661828, (7), 1048592))
            # (Line 2078) dwwrite(0x6564E0 + 1992 + 19 * 4, 156);
            DoActions(SetMemory(0x66182C, (7), 983055))
            f_dwwrite(0x6564E0 + 1992 + 19 * 4, 156)
            # (Line 2079) bwrite(0x6564E0 + 5168 + 19 * 1, 0);
            f_bwrite(0x6564E0 + 5168 + 19 * 1, 0)
            # (Line 2080) bwrite(0x6564E0 + 400 + 19 * 1, 2);
            f_bwrite(0x6564E0 + 400 + 19 * 1, 2)
            # (Line 2081) var shield_;
            shield_ = EUDVariable()
            # (Line 2082) shield_ = dwread(0x65FD00 + 9808 + 12 * 4);
            shield_ << (f_dwread(0x65FD00 + 9808 + 12 * 4))
            # (Line 2083) shield_ = shield_ / 256;
            shield_ << (shield_ // 256)
            # (Line 2084) wwrite(0x65FD00 + 4352 + 12 * 2, wread(0x65FD00 + 4352 + 12 * 2) + shield_);
            f_wwrite(0x65FD00 + 4352 + 12 * 2, f_wread(0x65FD00 + 4352 + 12 * 2) + shield_)
            # (Line 2085) dwwrite(0x65FD00 + 9808 + 12 * 4, 256);
            f_dwwrite(0x65FD00 + 9808 + 12 * 4, 256)
            # (Line 2086) bwrite(0x65FD00 + 19120 + 12 * 1, 1);
            f_bwrite(0x65FD00 + 19120 + 12 * 1, 1)
            # (Line 2087) shield_ = wread(0x65FD00 + 4352 + 12 * 2);
            shield_ << (f_wread(0x65FD00 + 4352 + 12 * 2))
            # (Line 2088) shield_ = shield_ * 120 / 100;
            shield_ << (shield_ * 120 // 100)
            # (Line 2089) wwrite(0x65FD00 + 4352 + 12 * 2, shield_);
            f_wwrite(0x65FD00 + 4352 + 12 * 2, shield_)
            # (Line 2090) wwrite(0x6C9858 + 1056 + 70 * 2, 300);
            f_wwrite(0x6C9858 + 1056 + 70 * 2, 300)
            # (Line 2091) }
            # (Line 2094) if(
        EUDEndIf()
        _t111 = EUDIf()
        # (Line 2095) RandomOption[i] == 64
        # (Line 2096) ){
        if _t111(RandomOption[i] == 64):
            # (Line 2097) wwrite(0x6C9858 + 2752 + 70 * 2, 238);
            f_wwrite(0x6C9858 + 2752 + 70 * 2, 238)
            # (Line 2098) wwrite(0x65FD00 + 12936 + 12 * 2, 8);
            f_wwrite(0x65FD00 + 12936 + 12 * 2, 8)
            # (Line 2099) SetMemory(0x661828, (7), 983059);
            # (Line 2100) SetMemory(0x66182C, (7), 917522);
            DoActions(SetMemory(0x661828, (7), 983059))
            # (Line 2101) dwwrite(0x6564E0 + 1992 + 19 * 4, 149);
            DoActions(SetMemory(0x66182C, (7), 917522))
            f_dwwrite(0x6564E0 + 1992 + 19 * 4, 149)
            # (Line 2102) bwrite(0x6564E0 + 5168 + 19 * 1, 45);
            f_bwrite(0x6564E0 + 5168 + 19 * 1, 45)
            # (Line 2103) bwrite(0x6564E0 + 400 + 19 * 1, 0);
            f_bwrite(0x6564E0 + 400 + 19 * 1, 0)
            # (Line 2104) dwwrite(0x65FD00 + 9808 + 12 * 4, dwread(0x65FD00 + 9808 + 12 * 4) + -150 * 256);
            f_dwwrite(0x65FD00 + 9808 + 12 * 4, f_dwread(0x65FD00 + 9808 + 12 * 4) + -150 * 256)
            # (Line 2105) perSpeedUp(40);
            f_perSpeedUp(40)
            # (Line 2106) }
            # (Line 2109) if(
        EUDEndIf()
        _t112 = EUDIf()
        # (Line 2110) RandomOption[i] == 67
        # (Line 2111) ){
        if _t112(RandomOption[i] == 67):
            # (Line 2112) wwrite(0x6C9858 + 2752 + 70 * 2, 229);
            f_wwrite(0x6C9858 + 2752 + 70 * 2, 229)
            # (Line 2113) wwrite(0x65FD00 + 12936 + 12 * 2, 1);
            f_wwrite(0x65FD00 + 12936 + 12 * 2, 1)
            # (Line 2114) SetMemory(0x661828, (7), 655367);
            # (Line 2115) SetMemory(0x66182C, (7), 720903);
            DoActions(SetMemory(0x661828, (7), 655367))
            # (Line 2116) dwwrite(0x6564E0 + 1992 + 19 * 4, 143);
            DoActions(SetMemory(0x66182C, (7), 720903))
            f_dwwrite(0x6564E0 + 1992 + 19 * 4, 143)
            # (Line 2117) bwrite(0x6564E0 + 5168 + 19 * 1, 0);
            f_bwrite(0x6564E0 + 5168 + 19 * 1, 0)
            # (Line 2118) bwrite(0x6564E0 + 400 + 19 * 1, 2);
            f_bwrite(0x6564E0 + 400 + 19 * 1, 2)
            # (Line 2119) dwwrite(0x65FD00 + 9808 + 12 * 4, dwread(0x65FD00 + 9808 + 12 * 4) + -150 * 256);
            f_dwwrite(0x65FD00 + 9808 + 12 * 4, f_dwread(0x65FD00 + 9808 + 12 * 4) + -150 * 256)
            # (Line 2120) wwrite(0x6564E0 + 2512 + 19 * 2, wread(0x6564E0 + 2512 + 19 * 2) + 25);
            f_wwrite(0x6564E0 + 2512 + 19 * 2, f_wread(0x6564E0 + 2512 + 19 * 2) + 25)
            # (Line 2121) wwrite(0x6C9858 + 1056 + 70 * 2, 300);
            f_wwrite(0x6C9858 + 1056 + 70 * 2, 300)
            # (Line 2122) }
            # (Line 2125) if(
        EUDEndIf()
        _t113 = EUDIf()
        # (Line 2126) RandomOption[i] == 68
        # (Line 2127) ){
        if _t113(RandomOption[i] == 68):
            # (Line 2128) wwrite(0x6C9858 + 2752 + 70 * 2, 159);
            f_wwrite(0x6C9858 + 2752 + 70 * 2, 159)
            # (Line 2129) wwrite(0x65FD00 + 12936 + 12 * 2, 20);
            f_wwrite(0x65FD00 + 12936 + 12 * 2, 20)
            # (Line 2130) SetMemory(0x661828, (7), 262152);
            # (Line 2131) SetMemory(0x66182C, (7), 720903);
            DoActions(SetMemory(0x661828, (7), 262152))
            # (Line 2132) dwwrite(0x6564E0 + 1992 + 19 * 4, 0);
            DoActions(SetMemory(0x66182C, (7), 720903))
            f_dwwrite(0x6564E0 + 1992 + 19 * 4, 0)
            # (Line 2133) bwrite(0x6564E0 + 5168 + 19 * 1, 0);
            f_bwrite(0x6564E0 + 5168 + 19 * 1, 0)
            # (Line 2134) bwrite(0x6564E0 + 400 + 19 * 1, 5);
            f_bwrite(0x6564E0 + 400 + 19 * 1, 5)
            # (Line 2135) perSpeedUp(25);
            f_perSpeedUp(25)
            # (Line 2136) perAttSpeedUp(-25);
            f_perAttSpeedUp(-25)
            # (Line 2137) wwrite(0x6C9858 + 1056 + 70 * 2, 300);
            f_wwrite(0x6C9858 + 1056 + 70 * 2, 300)
            # (Line 2138) }
            # (Line 2141) if(
        EUDEndIf()
        _t114 = EUDIf()
        # (Line 2142) RandomOption[i] == 71
        # (Line 2143) ){
        if _t114(RandomOption[i] == 71):
            # (Line 2144) wwrite(0x6C9858 + 2752 + 70 * 2, 140);
            f_wwrite(0x6C9858 + 2752 + 70 * 2, 140)
            # (Line 2145) wwrite(0x65FD00 + 12936 + 12 * 2, 24);
            f_wwrite(0x65FD00 + 12936 + 12 * 2, 24)
            # (Line 2146) SetMemory(0x661828, (7), 65547);
            # (Line 2147) SetMemory(0x66182C, (7), 720907);
            DoActions(SetMemory(0x661828, (7), 65547))
            # (Line 2148) dwwrite(0x6564E0 + 1992 + 19 * 4, 171);
            DoActions(SetMemory(0x66182C, (7), 720907))
            f_dwwrite(0x6564E0 + 1992 + 19 * 4, 171)
            # (Line 2149) bwrite(0x6564E0 + 5168 + 19 * 1, 0);
            f_bwrite(0x6564E0 + 5168 + 19 * 1, 0)
            # (Line 2150) bwrite(0x6564E0 + 400 + 19 * 1, 2);
            f_bwrite(0x6564E0 + 400 + 19 * 1, 2)
            # (Line 2151) perHealthUp(-50);
            f_perHealthUp(-50)
            # (Line 2152) bwrite(0x65FD00 + 456 + 12 * 1, 5);
            f_bwrite(0x65FD00 + 456 + 12 * 1, 5)
            # (Line 2153) }
            # (Line 2156) if(
        EUDEndIf()
        _t115 = EUDIf()
        # (Line 2157) RandomOption[i] == 72
        # (Line 2158) ){
        if _t115(RandomOption[i] == 72):
            # (Line 2159) wwrite(0x6C9858 + 2752 + 70 * 2, 195);
            f_wwrite(0x6C9858 + 2752 + 70 * 2, 195)
            # (Line 2160) wwrite(0x65FD00 + 12936 + 12 * 2, 45);
            f_wwrite(0x65FD00 + 12936 + 12 * 2, 45)
            # (Line 2161) SetMemory(0x661828, (7), 1048594);
            # (Line 2162) SetMemory(0x66182C, (7), 983057);
            DoActions(SetMemory(0x661828, (7), 1048594))
            # (Line 2163) dwwrite(0x6564E0 + 1992 + 19 * 4, 152);
            DoActions(SetMemory(0x66182C, (7), 983057))
            f_dwwrite(0x6564E0 + 1992 + 19 * 4, 152)
            # (Line 2164) bwrite(0x6564E0 + 5168 + 19 * 1, 0);
            f_bwrite(0x6564E0 + 5168 + 19 * 1, 0)
            # (Line 2165) bwrite(0x6564E0 + 400 + 19 * 1, 2);
            f_bwrite(0x6564E0 + 400 + 19 * 1, 2)
            # (Line 2166) perSpeedUp(30);
            f_perSpeedUp(30)
            # (Line 2167) wwrite(0x65FD00 + 4352 + 12 * 2, wread(0x65FD00 + 4352 + 12 * 2) + 100);
            f_wwrite(0x65FD00 + 4352 + 12 * 2, f_wread(0x65FD00 + 4352 + 12 * 2) + 100)
            # (Line 2168) bwrite(0x65FD00 + 19120 + 12 * 1, 1);
            f_bwrite(0x65FD00 + 19120 + 12 * 1, 1)
            # (Line 2169) }
            # (Line 2171) }
        EUDEndIf()
        # (Line 2174) for(var i=0; i<Roulette_Count; i++){
        EUDSetContinuePoint()
        _t101()
    EUDEndWhile()
    i = EUDVariable()
    i << (0)
    if EUDWhile()(i >= Roulette_Count, neg=True):
        def _t117():
            i.__iadd__(1)
        # (Line 2178) if(
        _t118 = EUDIf()
        # (Line 2179) RandomOption[i] == 73
        # (Line 2180) ){
        if _t118(RandomOption[i] == 73):
            # (Line 2181) wwrite(0x6C9858 + 2752 + 70 * 2, 151);
            f_wwrite(0x6C9858 + 2752 + 70 * 2, 151)
            # (Line 2182) wwrite(0x65FD00 + 12936 + 12 * 2, 26);
            f_wwrite(0x65FD00 + 12936 + 12 * 2, 26)
            # (Line 2183) SetMemory(0x661828, (7), 1441814);
            # (Line 2184) SetMemory(0x66182C, (7), 1376277);
            DoActions(SetMemory(0x661828, (7), 1441814))
            # (Line 2185) dwwrite(0x6564E0 + 1992 + 19 * 4, 166);
            DoActions(SetMemory(0x66182C, (7), 1376277))
            f_dwwrite(0x6564E0 + 1992 + 19 * 4, 166)
            # (Line 2186) bwrite(0x6564E0 + 5168 + 19 * 1, 5);
            f_bwrite(0x6564E0 + 5168 + 19 * 1, 5)
            # (Line 2187) bwrite(0x6564E0 + 400 + 19 * 1, 0);
            f_bwrite(0x6564E0 + 400 + 19 * 1, 0)
            # (Line 2188) bwrite(0x65FD00 + 456 + 12 * 1, 1);
            f_bwrite(0x65FD00 + 456 + 12 * 1, 1)
            # (Line 2189) wwrite(0x6564E0 + 2512 + 19 * 2, wread(0x6564E0 + 2512 + 19 * 2) + 30);
            f_wwrite(0x6564E0 + 2512 + 19 * 2, f_wread(0x6564E0 + 2512 + 19 * 2) + 30)
            # (Line 2190) BossReward = 1;
            BossReward << (1)
            # (Line 2191) KukulzaReward = 1;
            KukulzaReward << (1)
            # (Line 2192) }
            # (Line 2195) if(
        EUDEndIf()
        _t119 = EUDIf()
        # (Line 2196) RandomOption[i] == 74
        # (Line 2197) ){
        if _t119(RandomOption[i] == 74):
            # (Line 2198) wwrite(0x6C9858 + 2752 + 70 * 2, 195);
            f_wwrite(0x6C9858 + 2752 + 70 * 2, 195)
            # (Line 2199) wwrite(0x65FD00 + 12936 + 12 * 2, 95);
            f_wwrite(0x65FD00 + 12936 + 12 * 2, 95)
            # (Line 2200) SetMemory(0x661828, (7), 1048594);
            # (Line 2201) SetMemory(0x66182C, (7), 983057);
            DoActions(SetMemory(0x661828, (7), 1048594))
            # (Line 2202) dwwrite(0x6564E0 + 1992 + 19 * 4, 154);
            DoActions(SetMemory(0x66182C, (7), 983057))
            f_dwwrite(0x6564E0 + 1992 + 19 * 4, 154)
            # (Line 2203) bwrite(0x6564E0 + 5168 + 19 * 1, 0);
            f_bwrite(0x6564E0 + 5168 + 19 * 1, 0)
            # (Line 2204) bwrite(0x6564E0 + 400 + 19 * 1, 1);
            f_bwrite(0x6564E0 + 400 + 19 * 1, 1)
            # (Line 2205) perSpeedUp(45);
            f_perSpeedUp(45)
            # (Line 2206) wwrite(0x65FD00 + 4352 + 12 * 2, wread(0x65FD00 + 4352 + 12 * 2) + 150);
            f_wwrite(0x65FD00 + 4352 + 12 * 2, f_wread(0x65FD00 + 4352 + 12 * 2) + 150)
            # (Line 2207) bwrite(0x65FD00 + 19120 + 12 * 1, 1);
            f_bwrite(0x65FD00 + 19120 + 12 * 1, 1)
            # (Line 2208) dwwrite(0x6564E0 + 3984 + 19 * 4, dwread(0x6564E0 + 3984 + 19 * 4) + 4);
            f_dwwrite(0x6564E0 + 3984 + 19 * 4, f_dwread(0x6564E0 + 3984 + 19 * 4) + 4)
            # (Line 2209) BossReward = 1;
            BossReward << (1)
            # (Line 2210) }
            # (Line 2213) if(
        EUDEndIf()
        _t120 = EUDIf()
        # (Line 2214) RandomOption[i] == 75
        # (Line 2215) ){
        if _t120(RandomOption[i] == 75):
            # (Line 2216) wwrite(0x6C9858 + 2752 + 70 * 2, 201);
            f_wwrite(0x6C9858 + 2752 + 70 * 2, 201)
            # (Line 2217) wwrite(0x65FD00 + 12936 + 12 * 2, 50);
            f_wwrite(0x65FD00 + 12936 + 12 * 2, 50)
            # (Line 2218) SetMemory(0x661828, (7), 327691);
            # (Line 2219) SetMemory(0x66182C, (7), 851979);
            DoActions(SetMemory(0x661828, (7), 327691))
            # (Line 2220) dwwrite(0x6564E0 + 1992 + 19 * 4, 0);
            DoActions(SetMemory(0x66182C, (7), 851979))
            f_dwwrite(0x6564E0 + 1992 + 19 * 4, 0)
            # (Line 2221) bwrite(0x6564E0 + 400 + 19 * 1, 5);
            f_bwrite(0x6564E0 + 400 + 19 * 1, 5)
            # (Line 2222) dwwrite(0x666778 + 34000 + 151 * 4, 163);
            f_dwwrite(0x666778 + 34000 + 151 * 4, 163)
            # (Line 2223) perSpeedUp(40);
            f_perSpeedUp(40)
            # (Line 2224) perDamageUp(50);
            f_perDamageUp(50)
            # (Line 2225) 형님 = 1;
            형님 << (1)
            # (Line 2226) BossReward = 1;
            BossReward << (1)
            # (Line 2227) wwrite(0x6C9858 + 1056 + 70 * 2, 300);
            f_wwrite(0x6C9858 + 1056 + 70 * 2, 300)
            # (Line 2228) }
            # (Line 2231) if(
        EUDEndIf()
        _t121 = EUDIf()
        # (Line 2232) RandomOption[i] == 77
        # (Line 2233) ){
        if _t121(RandomOption[i] == 77):
            # (Line 2234) wwrite(0x6C9858 + 2752 + 70 * 2, 238);
            f_wwrite(0x6C9858 + 2752 + 70 * 2, 238)
            # (Line 2235) wwrite(0x65FD00 + 12936 + 12 * 2, 8);
            f_wwrite(0x65FD00 + 12936 + 12 * 2, 8)
            # (Line 2236) SetMemory(0x661828, (7), 983059);
            # (Line 2237) SetMemory(0x66182C, (7), 917522);
            DoActions(SetMemory(0x661828, (7), 983059))
            # (Line 2238) dwwrite(0x6564E0 + 1992 + 19 * 4, 149);
            DoActions(SetMemory(0x66182C, (7), 917522))
            f_dwwrite(0x6564E0 + 1992 + 19 * 4, 149)
            # (Line 2239) bwrite(0x6564E0 + 5168 + 19 * 1, 45);
            f_bwrite(0x6564E0 + 5168 + 19 * 1, 45)
            # (Line 2240) bwrite(0x6564E0 + 400 + 19 * 1, 0);
            f_bwrite(0x6564E0 + 400 + 19 * 1, 0)
            # (Line 2241) perSpeedUp(70);
            f_perSpeedUp(70)
            # (Line 2242) perHealthUp(-20);
            f_perHealthUp(-20)
            # (Line 2243) wwrite(0x6564E0 + 2512 + 19 * 2, wread(0x6564E0 + 2512 + 19 * 2) + 30);
            f_wwrite(0x6564E0 + 2512 + 19 * 2, f_wread(0x6564E0 + 2512 + 19 * 2) + 30)
            # (Line 2244) TomReward = 1;
            TomReward << (1)
            # (Line 2245) BossReward = 1;
            BossReward << (1)
            # (Line 2246) }
            # (Line 2248) }
        EUDEndIf()
        # (Line 2251) RangeDisplay = dwread(0x6564E0 + 3984 + 19 * 4);
        EUDSetContinuePoint()
        _t117()
    EUDEndWhile()
    RangeDisplay << (f_dwread(0x6564E0 + 3984 + 19 * 4))
    # (Line 2252) if(
    _t122 = EUDIf()
    # (Line 2253) dwread(0x6564E0 + 3984 + 19 * 4) >= 129 &&
    # (Line 2254) dwread(0x6564E0 + 3984 + 19 * 4) <= 131
    # (Line 2255) ){
    if _t122(EUDSCAnd()(f_dwread(0x6564E0 + 3984 + 19 * 4) >= 129)(f_dwread(0x6564E0 + 3984 + 19 * 4) <= 131)()):
        # (Line 2256) tct.setTbl((247), 25, 1, "\x0D");
        tct.f_setTbl((247), 25, 1, "\x0D")
        # (Line 2257) tct.setTbl((247), 25, 1, RangeDisplay * 10000 / 32 / 10000);
        tct.f_setTbl((247), 25, 1, RangeDisplay * 10000 // 32 // 10000)
        # (Line 2258) tct.setTbl((247), 27, 7, "\x0D\x0D\x0D\x0D\x0D\x0D\x0D");
        tct.f_setTbl((247), 27, 7, "\x0D\x0D\x0D\x0D\x0D\x0D\x0D")
        # (Line 2259) tct.setTbl((247), 27, 7, "0",(RangeDisplay * 10000 / 32) % 1000);
        tct.f_setTbl((247), 27, 7, "0", (RangeDisplay * 10000 // 32) % 1000)
        # (Line 2260) }
        # (Line 2261) else{
    if EUDElse()():
        # (Line 2262) tct.setTbl((247), 25, 1, "\x0D");
        tct.f_setTbl((247), 25, 1, "\x0D")
        # (Line 2263) tct.setTbl((247), 25, 1, RangeDisplay * 10000 / 32 / 10000);
        tct.f_setTbl((247), 25, 1, RangeDisplay * 10000 // 32 // 10000)
        # (Line 2264) tct.setTbl((247), 27, 7, "\x0D\x0D\x0D\x0D\x0D\x0D\x0D");
        tct.f_setTbl((247), 27, 7, "\x0D\x0D\x0D\x0D\x0D\x0D\x0D")
        # (Line 2265) tct.setTbl((247), 27, 7, (RangeDisplay * 10000 / 32) % 10000);
        tct.f_setTbl((247), 27, 7, (RangeDisplay * 10000 // 32) % 10000)
        # (Line 2266) }
        # (Line 2269) HealthTotal = dwread(0x65FD00 + 9808 + 12 * 4);
    EUDEndIf()
    HealthTotal << (f_dwread(0x65FD00 + 9808 + 12 * 4))
    # (Line 2270) ShieldTotal = wread(0x65FD00 + 4352 + 12 * 2);
    ShieldTotal << (f_wread(0x65FD00 + 4352 + 12 * 2))
    # (Line 2271) ShieldTotal = ShieldTotal * 256;
    ShieldTotal << (ShieldTotal * 256)
    # (Line 2275) if(
    _t123 = EUDIf()
    # (Line 2276) RewardOption == 1
    # (Line 2277) ){
    if _t123(RewardOption == 1):
        # (Line 2278) ProbPlus += 5;
        ProbPlus.__iadd__(5)
        # (Line 2279) }
        # (Line 2282) if(
    EUDEndIf()
    _t124 = EUDIf()
    # (Line 2283) RewardOption == 2
    # (Line 2284) ){
    if _t124(RewardOption == 2):
        # (Line 2285) ProbPlus += 10;
        ProbPlus.__iadd__(10)
        # (Line 2286) }
        # (Line 2289) if(
    EUDEndIf()
    _t125 = EUDIf()
    # (Line 2290) RewardOption == 3
    # (Line 2291) ){
    if _t125(RewardOption == 3):
        # (Line 2292) EUDPlayerLoop()();
        EUDPlayerLoop()()
        # (Line 2293) if (getcurpl() == 0 || getcurpl() == 1 || getcurpl() == 2 || getcurpl() == 3 || getcurpl() == 4 || getcurpl() == 5) {
        if EUDIf()(EUDSCOr()(f_getcurpl() == 0)(f_getcurpl() == 1)(f_getcurpl() == 2)(f_getcurpl() == 3)(f_getcurpl() == 4)(f_getcurpl() == 5)()):
            # (Line 2294) dwwrite(0x65FD00 + 9808 + PVulture[getcurpl()] * 4, dwread(0x65FD00 + 9808 + PVulture[getcurpl()] * 4) + 50 * 256);
            f_dwwrite(0x65FD00 + 9808 + PVulture[f_getcurpl()] * 4, f_dwread(0x65FD00 + 9808 + PVulture[f_getcurpl()] * 4) + 50 * 256)
            # (Line 2295) }
            # (Line 2296) EUDEndPlayerLoop();
        EUDEndIf()
        EUDEndPlayerLoop()
        # (Line 2297) }
        # (Line 2300) if(
    EUDEndIf()
    _t127 = EUDIf()
    # (Line 2301) RewardOption == 4
    # (Line 2302) ){
    if _t127(RewardOption == 4):
        # (Line 2303) EUDPlayerLoop()();
        EUDPlayerLoop()()
        # (Line 2304) if (getcurpl() == 0 || getcurpl() == 1 || getcurpl() == 2 || getcurpl() == 3 || getcurpl() == 4 || getcurpl() == 5) {
        if EUDIf()(EUDSCOr()(f_getcurpl() == 0)(f_getcurpl() == 1)(f_getcurpl() == 2)(f_getcurpl() == 3)(f_getcurpl() == 4)(f_getcurpl() == 5)()):
            # (Line 2305) dwwrite(0x65FD00 + 9808 + PVulture[getcurpl()] * 4, dwread(0x65FD00 + 9808 + PVulture[getcurpl()] * 4) + 100 * 256);
            f_dwwrite(0x65FD00 + 9808 + PVulture[f_getcurpl()] * 4, f_dwread(0x65FD00 + 9808 + PVulture[f_getcurpl()] * 4) + 100 * 256)
            # (Line 2306) }
            # (Line 2307) EUDEndPlayerLoop();
        EUDEndIf()
        EUDEndPlayerLoop()
        # (Line 2308) }
        # (Line 2311) if(
    EUDEndIf()
    _t129 = EUDIf()
    # (Line 2312) RewardOption == 5
    # (Line 2313) ){
    if _t129(RewardOption == 5):
        # (Line 2314) 총기개조 += 2;
        총기개조.__iadd__(2)
        # (Line 2315) }
        # (Line 2318) if(
    EUDEndIf()
    _t130 = EUDIf()
    # (Line 2319) RewardOption == 6
    # (Line 2320) ){
    if _t130(RewardOption == 6):
        # (Line 2321) 팔라딘 += 3;
        팔라딘.__iadd__(3)
        # (Line 2322) }
        # (Line 2325) if(
    EUDEndIf()
    _t131 = EUDIf()
    # (Line 2326) RewardOption == 7
    # (Line 2327) ){
    if _t131(RewardOption == 7):
        # (Line 2328) 약화 += 3;
        약화.__iadd__(3)
        # (Line 2329) }
        # (Line 2332) if(
    EUDEndIf()
    _t132 = EUDIf()
    # (Line 2333) RewardOption == 8
    # (Line 2334) ){
    if _t132(RewardOption == 8):
        # (Line 2335) 잔상 += 2;
        잔상.__iadd__(2)
        # (Line 2336) }
        # (Line 2339) if(
    EUDEndIf()
    _t133 = EUDIf()
    # (Line 2340) RewardOption == 10
    # (Line 2341) ){
    if _t133(RewardOption == 10):
        # (Line 2342) for(var j=0;j>=0;j++){
        j = EUDVariable()
        j << (0)
        if EUDWhile()(j >= 0):
            def _t135():
                j.__iadd__(1)
            # (Line 2343) if (WeaponList[j] == 9999) break;
            if EUDIf()(WeaponList[j] == 9999):
                EUDBreak()
                # (Line 2344) wwrite(0x6564E0 + 2512 + WeaponList[j] * 2, wread(0x6564E0 + 2512 + WeaponList[j] * 2) + 7);
            EUDEndIf()
            f_wwrite(0x6564E0 + 2512 + WeaponList[j] * 2, f_wread(0x6564E0 + 2512 + WeaponList[j] * 2) + 7)
            # (Line 2345) }
            # (Line 2346) }
            EUDSetContinuePoint()
            _t135()
        EUDEndWhile()
        # (Line 2349) if(
    EUDEndIf()
    _t137 = EUDIf()
    # (Line 2350) RewardOption == 12
    # (Line 2351) ){
    if _t137(RewardOption == 12):
        # (Line 2352) for(var j=0;j>=0;j++){
        j = EUDVariable()
        j << (0)
        if EUDWhile()(j >= 0):
            def _t139():
                j.__iadd__(1)
            # (Line 2353) if (WeaponList[j] == 9999) break;
            if EUDIf()(WeaponList[j] == 9999):
                EUDBreak()
                # (Line 2354) wwrite(0x6564E0 + 2512 + WeaponList[j] * 2, wread(0x6564E0 + 2512 + WeaponList[j] * 2) + 15);
            EUDEndIf()
            f_wwrite(0x6564E0 + 2512 + WeaponList[j] * 2, f_wread(0x6564E0 + 2512 + WeaponList[j] * 2) + 15)
            # (Line 2355) }
            # (Line 2356) }
            EUDSetContinuePoint()
            _t139()
        EUDEndWhile()
        # (Line 2359) if(
    EUDEndIf()
    _t141 = EUDIf()
    # (Line 2360) RewardOption == 13
    # (Line 2361) ){
    if _t141(RewardOption == 13):
        # (Line 2362) ProbPlus += 20;
        ProbPlus.__iadd__(20)
        # (Line 2363) }
        # (Line 2366) if(
    EUDEndIf()
    _t142 = EUDIf()
    # (Line 2367) RewardOption == 14
    # (Line 2368) ){
    if _t142(RewardOption == 14):
        # (Line 2369) Roulette_Again += 137;
        Roulette_Again.__iadd__(137)
        # (Line 2370) }
        # (Line 2372) RewardOption = 0;
    EUDEndIf()
    RewardOption << (0)
    # (Line 2375) if(
    _t143 = EUDIf()
    # (Line 2376) 총기개조 >= 1
    # (Line 2377) ){
    if _t143(총기개조 >= 1):
        # (Line 2378) 총기개조 -= 1;
        총기개조.__isub__(1)
        # (Line 2379) for(var j=0;j>=0;j++){
        j = EUDVariable()
        j << (0)
        if EUDWhile()(j >= 0):
            def _t145():
                j.__iadd__(1)
            # (Line 2380) if (WeaponList[j] == 9999) break;
            if EUDIf()(WeaponList[j] == 9999):
                EUDBreak()
                # (Line 2381) wwrite(0x6564E0 + 2512 + WeaponList[j] * 2, wread(0x6564E0 + 2512 + WeaponList[j] * 2) + 5);
            EUDEndIf()
            f_wwrite(0x6564E0 + 2512 + WeaponList[j] * 2, f_wread(0x6564E0 + 2512 + WeaponList[j] * 2) + 5)
            # (Line 2382) }
            # (Line 2383) }
            EUDSetContinuePoint()
            _t145()
        EUDEndWhile()
        # (Line 2386) if(
    EUDEndIf()
    _t147 = EUDIf()
    # (Line 2387) 팔라딘 >= 1
    # (Line 2388) ){
    if _t147(팔라딘 >= 1):
        # (Line 2389) 팔라딘 -= 1;
        팔라딘.__isub__(1)
        # (Line 2390) EUDPlayerLoop()();
        EUDPlayerLoop()()
        # (Line 2391) if (getcurpl() == 0 || getcurpl() == 1 || getcurpl() == 2 || getcurpl() == 3 || getcurpl() == 4 || getcurpl() == 5) {
        if EUDIf()(EUDSCOr()(f_getcurpl() == 0)(f_getcurpl() == 1)(f_getcurpl() == 2)(f_getcurpl() == 3)(f_getcurpl() == 4)(f_getcurpl() == 5)()):
            # (Line 2392) dwwrite(0x65FD00 + 9808 + PVulture[getcurpl()] * 4, dwread(0x65FD00 + 9808 + PVulture[getcurpl()] * 4) + 25 * 256);
            f_dwwrite(0x65FD00 + 9808 + PVulture[f_getcurpl()] * 4, f_dwread(0x65FD00 + 9808 + PVulture[f_getcurpl()] * 4) + 25 * 256)
            # (Line 2393) }
            # (Line 2394) EUDEndPlayerLoop();
        EUDEndIf()
        EUDEndPlayerLoop()
        # (Line 2395) }
        # (Line 2398) if(
    EUDEndIf()
    _t149 = EUDIf()
    # (Line 2399) 약화 >= 1
    # (Line 2400) ){
    if _t149(약화 >= 1):
        # (Line 2401) 약화 -= 1;
        약화.__isub__(1)
        # (Line 2402) perHealthUp(-20);
        f_perHealthUp(-20)
        # (Line 2403) }
        # (Line 2406) if(
    EUDEndIf()
    _t150 = EUDIf()
    # (Line 2407) 잔상 >= 1
    # (Line 2408) ){
    if _t150(잔상 >= 1):
        # (Line 2409) 잔상 -= 1;
        잔상.__isub__(1)
        # (Line 2410) perDamageUp(-30);
        f_perDamageUp(-30)
        # (Line 2411) }
        # (Line 2415) }
    EUDEndIf()
    # (Line 2416) function OptionDescribe() {

@EUDFunc
def OptionDescribe():
    # (Line 2417) for(var i=0; i<8; i++){
    i = EUDVariable()
    i << (0)
    if EUDWhile()(i >= 8, neg=True):
        def _t2():
            i.__iadd__(1)
        # (Line 2420) if(
        _t3 = EUDIf()
        # (Line 2421) RandomOption[i] == 0
        # (Line 2422) ){
        if _t3(RandomOption[i] == 0):
            # (Line 2423) DisplayText(" ", (0));
            # (Line 2424) continue;
            DoActions(DisplayText(" ", (0)))
            EUDContinue()
            # (Line 2425) }
            # (Line 2428) if(
        EUDEndIf()
        _t4 = EUDIf()
        # (Line 2429) Roulette_Sound[getcurpl()] == 1
        # (Line 2430) ){
        if _t4(Roulette_Sound[f_getcurpl()] == 1):
            # (Line 2431) Roulette_Sound[getcurpl()] = 0;
            _ARRW(Roulette_Sound, f_getcurpl()) << (0)
            # (Line 2432) PlayWAV("sound\\Bullet\\LASRHIT1.wav");
            # (Line 2433) }
            DoActions(PlayWAV("sound\\Bullet\\LASRHIT1.wav"))
            # (Line 2434) if(
        EUDEndIf()
        _t5 = EUDIf()
        # (Line 2435) RandomOption[i] == 1
        # (Line 2436) ){
        if _t5(RandomOption[i] == 1):
            # (Line 2437) DisplayText("\x13\x17[ 발톱 ] \x1E공격력 + 5", (0));
            # (Line 2438) continue;
            DoActions(DisplayText("\x13\x17[ 발톱 ] \x1E공격력 + 5", (0)))
            EUDContinue()
            # (Line 2439) }
            # (Line 2442) if(
        EUDEndIf()
        _t6 = EUDIf()
        # (Line 2443) Roulette_Sound[getcurpl()] == 2
        # (Line 2444) ){
        if _t6(Roulette_Sound[f_getcurpl()] == 2):
            # (Line 2445) Roulette_Sound[getcurpl()] = 0;
            _ARRW(Roulette_Sound, f_getcurpl()) << (0)
            # (Line 2446) PlayWAV("sound\\Bullet\\LASRHIT1.wav");
            # (Line 2447) }
            DoActions(PlayWAV("sound\\Bullet\\LASRHIT1.wav"))
            # (Line 2448) if(
        EUDEndIf()
        _t7 = EUDIf()
        # (Line 2449) RandomOption[i] == 2
        # (Line 2450) ){
        if _t7(RandomOption[i] == 2):
            # (Line 2451) DisplayText("\x13\x17[ 소형 갑피 ] \x1E체력 + 75", (0));
            # (Line 2452) continue;
            DoActions(DisplayText("\x13\x17[ 소형 갑피 ] \x1E체력 + 75", (0)))
            EUDContinue()
            # (Line 2453) }
            # (Line 2456) if(
        EUDEndIf()
        _t8 = EUDIf()
        # (Line 2457) Roulette_Sound[getcurpl()] == 3
        # (Line 2458) ){
        if _t8(Roulette_Sound[f_getcurpl()] == 3):
            # (Line 2459) Roulette_Sound[getcurpl()] = 0;
            _ARRW(Roulette_Sound, f_getcurpl()) << (0)
            # (Line 2460) PlayWAV("sound\\Bullet\\LASRHIT1.wav");
            # (Line 2461) }
            DoActions(PlayWAV("sound\\Bullet\\LASRHIT1.wav"))
            # (Line 2462) if(
        EUDEndIf()
        _t9 = EUDIf()
        # (Line 2463) RandomOption[i] == 3
        # (Line 2464) ){
        if _t9(RandomOption[i] == 3):
            # (Line 2465) DisplayText("\x13\x17[ 날렵함 ] \x1E이동속도 + 15%", (0));
            # (Line 2466) continue;
            DoActions(DisplayText("\x13\x17[ 날렵함 ] \x1E이동속도 + 15%", (0)))
            EUDContinue()
            # (Line 2467) }
            # (Line 2470) if(
        EUDEndIf()
        _t10 = EUDIf()
        # (Line 2471) Roulette_Sound[getcurpl()] == 4
        # (Line 2472) ){
        if _t10(Roulette_Sound[f_getcurpl()] == 4):
            # (Line 2473) Roulette_Sound[getcurpl()] = 0;
            _ARRW(Roulette_Sound, f_getcurpl()) << (0)
            # (Line 2474) PlayWAV("sound\\Bullet\\LASRHIT1.wav");
            # (Line 2475) }
            DoActions(PlayWAV("sound\\Bullet\\LASRHIT1.wav"))
            # (Line 2476) if(
        EUDEndIf()
        _t11 = EUDIf()
        # (Line 2477) RandomOption[i] == 4
        # (Line 2478) ){
        if _t11(RandomOption[i] == 4):
            # (Line 2479) DisplayText("\x13\x17[ 맷집 ] \x1E체력 + 100", (0));
            # (Line 2480) continue;
            DoActions(DisplayText("\x13\x17[ 맷집 ] \x1E체력 + 100", (0)))
            EUDContinue()
            # (Line 2481) }
            # (Line 2484) if(
        EUDEndIf()
        _t12 = EUDIf()
        # (Line 2485) Roulette_Sound[getcurpl()] == 5
        # (Line 2486) ){
        if _t12(Roulette_Sound[f_getcurpl()] == 5):
            # (Line 2487) Roulette_Sound[getcurpl()] = 0;
            _ARRW(Roulette_Sound, f_getcurpl()) << (0)
            # (Line 2488) PlayWAV("sound\\Bullet\\LASRHIT1.wav");
            # (Line 2489) }
            DoActions(PlayWAV("sound\\Bullet\\LASRHIT1.wav"))
            # (Line 2490) if(
        EUDEndIf()
        _t13 = EUDIf()
        # (Line 2491) RandomOption[i] == 5
        # (Line 2492) ){
        if _t13(RandomOption[i] == 5):
            # (Line 2493) DisplayText("\x13\x17[ 갑옷 ] \x1E방어력 + 1", (0));
            # (Line 2494) continue;
            DoActions(DisplayText("\x13\x17[ 갑옷 ] \x1E방어력 + 1", (0)))
            EUDContinue()
            # (Line 2495) }
            # (Line 2498) if(
        EUDEndIf()
        _t14 = EUDIf()
        # (Line 2499) Roulette_Sound[getcurpl()] == 6
        # (Line 2500) ){
        if _t14(Roulette_Sound[f_getcurpl()] == 6):
            # (Line 2501) Roulette_Sound[getcurpl()] = 0;
            _ARRW(Roulette_Sound, f_getcurpl()) << (0)
            # (Line 2502) PlayWAV("sound\\Bullet\\LASRHIT1.wav");
            # (Line 2503) }
            DoActions(PlayWAV("sound\\Bullet\\LASRHIT1.wav"))
            # (Line 2504) if(
        EUDEndIf()
        _t15 = EUDIf()
        # (Line 2505) RandomOption[i] == 6
        # (Line 2506) ){
        if _t15(RandomOption[i] == 6):
            # (Line 2507) DisplayText("\x13\x17[ 신경쇠약 ] \x1E체 -70, 공 +7", (0));
            # (Line 2508) continue;
            DoActions(DisplayText("\x13\x17[ 신경쇠약 ] \x1E체 -70, 공 +7", (0)))
            EUDContinue()
            # (Line 2509) }
            # (Line 2512) if(
        EUDEndIf()
        _t16 = EUDIf()
        # (Line 2513) Roulette_Sound[getcurpl()] == 7
        # (Line 2514) ){
        if _t16(Roulette_Sound[f_getcurpl()] == 7):
            # (Line 2515) Roulette_Sound[getcurpl()] = 0;
            _ARRW(Roulette_Sound, f_getcurpl()) << (0)
            # (Line 2516) PlayWAV("sound\\Bullet\\TTaFi200.wav");
            # (Line 2517) }
            DoActions(PlayWAV("sound\\Bullet\\TTaFi200.wav"))
            # (Line 2518) if(
        EUDEndIf()
        _t17 = EUDIf()
        # (Line 2519) RandomOption[i] == 7
        # (Line 2520) ){
        if _t17(RandomOption[i] == 7):
            # (Line 2521) DisplayText("\x13\x11[ 공격적 ] \x04공 +7, 사거리+0.125", (0));
            # (Line 2522) continue;
            DoActions(DisplayText("\x13\x11[ 공격적 ] \x04공 +7, 사거리+0.125", (0)))
            EUDContinue()
            # (Line 2523) }
            # (Line 2526) if(
        EUDEndIf()
        _t18 = EUDIf()
        # (Line 2527) Roulette_Sound[getcurpl()] == 8
        # (Line 2528) ){
        if _t18(Roulette_Sound[f_getcurpl()] == 8):
            # (Line 2529) Roulette_Sound[getcurpl()] = 0;
            _ARRW(Roulette_Sound, f_getcurpl()) << (0)
            # (Line 2530) PlayWAV("sound\\Bullet\\TTaFi200.wav");
            # (Line 2531) }
            DoActions(PlayWAV("sound\\Bullet\\TTaFi200.wav"))
            # (Line 2532) if(
        EUDEndIf()
        _t19 = EUDIf()
        # (Line 2533) RandomOption[i] == 8
        # (Line 2534) ){
        if _t19(RandomOption[i] == 8):
            # (Line 2535) DisplayText("\x13\x11[ 포악함 ] \x04공격력 + 15", (0));
            # (Line 2536) continue;
            DoActions(DisplayText("\x13\x11[ 포악함 ] \x04공격력 + 15", (0)))
            EUDContinue()
            # (Line 2537) }
            # (Line 2540) if(
        EUDEndIf()
        _t20 = EUDIf()
        # (Line 2541) Roulette_Sound[getcurpl()] == 9
        # (Line 2542) ){
        if _t20(Roulette_Sound[f_getcurpl()] == 9):
            # (Line 2543) Roulette_Sound[getcurpl()] = 0;
            _ARRW(Roulette_Sound, f_getcurpl()) << (0)
            # (Line 2544) PlayWAV("sound\\Bullet\\TTaFi200.wav");
            # (Line 2545) }
            DoActions(PlayWAV("sound\\Bullet\\TTaFi200.wav"))
            # (Line 2546) if(
        EUDEndIf()
        _t21 = EUDIf()
        # (Line 2547) RandomOption[i] == 9
        # (Line 2548) ){
        if _t21(RandomOption[i] == 9):
            # (Line 2549) DisplayText("\x13\x11[ 날개 ] \x04이동속도 + 40%", (0));
            # (Line 2550) continue;
            DoActions(DisplayText("\x13\x11[ 날개 ] \x04이동속도 + 40%", (0)))
            EUDContinue()
            # (Line 2551) }
            # (Line 2554) if(
        EUDEndIf()
        _t22 = EUDIf()
        # (Line 2555) Roulette_Sound[getcurpl()] == 10
        # (Line 2556) ){
        if _t22(Roulette_Sound[f_getcurpl()] == 10):
            # (Line 2557) Roulette_Sound[getcurpl()] = 0;
            _ARRW(Roulette_Sound, f_getcurpl()) << (0)
            # (Line 2558) PlayWAV("sound\\Bullet\\LASRHIT1.wav");
            # (Line 2559) }
            DoActions(PlayWAV("sound\\Bullet\\LASRHIT1.wav"))
            # (Line 2560) if(
        EUDEndIf()
        _t23 = EUDIf()
        # (Line 2561) RandomOption[i] == 10
        # (Line 2562) ){
        if _t23(RandomOption[i] == 10):
            # (Line 2563) DisplayText("\x13\x17[ 굶주림 ] \x1E공격력 & 이속+10%", (0));
            # (Line 2564) continue;
            DoActions(DisplayText("\x13\x17[ 굶주림 ] \x1E공격력 & 이속+10%", (0)))
            EUDContinue()
            # (Line 2565) }
            # (Line 2568) if(
        EUDEndIf()
        _t24 = EUDIf()
        # (Line 2569) Roulette_Sound[getcurpl()] == 11
        # (Line 2570) ){
        if _t24(Roulette_Sound[f_getcurpl()] == 11):
            # (Line 2571) Roulette_Sound[getcurpl()] = 0;
            _ARRW(Roulette_Sound, f_getcurpl()) << (0)
            # (Line 2572) PlayWAV("sound\\Bullet\\TTaFi200.wav");
            # (Line 2573) }
            DoActions(PlayWAV("sound\\Bullet\\TTaFi200.wav"))
            # (Line 2574) if(
        EUDEndIf()
        _t25 = EUDIf()
        # (Line 2575) RandomOption[i] == 11
        # (Line 2576) ){
        if _t25(RandomOption[i] == 11):
            # (Line 2577) DisplayText("\x13\x11[ 정밀사격 ] \x04이속 -20% & 사거리 +0.25", (0));
            # (Line 2578) continue;
            DoActions(DisplayText("\x13\x11[ 정밀사격 ] \x04이속 -20% & 사거리 +0.25", (0)))
            EUDContinue()
            # (Line 2579) }
            # (Line 2582) if(
        EUDEndIf()
        _t26 = EUDIf()
        # (Line 2583) Roulette_Sound[getcurpl()] == 12
        # (Line 2584) ){
        if _t26(Roulette_Sound[f_getcurpl()] == 12):
            # (Line 2585) Roulette_Sound[getcurpl()] = 0;
            _ARRW(Roulette_Sound, f_getcurpl()) << (0)
            # (Line 2586) PlayWAV("sound\\Bullet\\TTaFi200.wav");
            # (Line 2587) }
            DoActions(PlayWAV("sound\\Bullet\\TTaFi200.wav"))
            # (Line 2588) if(
        EUDEndIf()
        _t27 = EUDIf()
        # (Line 2589) RandomOption[i] == 12
        # (Line 2590) ){
        if _t27(RandomOption[i] == 12):
            # (Line 2591) DisplayText("\x13\x11[ 훈련 ] \x04공격력 + 20%", (0));
            # (Line 2592) continue;
            DoActions(DisplayText("\x13\x11[ 훈련 ] \x04공격력 + 20%", (0)))
            EUDContinue()
            # (Line 2593) }
            # (Line 2596) if(
        EUDEndIf()
        _t28 = EUDIf()
        # (Line 2597) Roulette_Sound[getcurpl()] == 13
        # (Line 2598) ){
        if _t28(Roulette_Sound[f_getcurpl()] == 13):
            # (Line 2599) Roulette_Sound[getcurpl()] = 0;
            _ARRW(Roulette_Sound, f_getcurpl()) << (0)
            # (Line 2600) PlayWAV("sound\\Bullet\\TTaFi200.wav");
            # (Line 2601) }
            DoActions(PlayWAV("sound\\Bullet\\TTaFi200.wav"))
            # (Line 2602) if(
        EUDEndIf()
        _t29 = EUDIf()
        # (Line 2603) RandomOption[i] == 13
        # (Line 2604) ){
        if _t29(RandomOption[i] == 13):
            # (Line 2605) DisplayText("\x13\x11[ 외골격 ] \x04체력 -20%, 방어 +2", (0));
            # (Line 2606) continue;
            DoActions(DisplayText("\x13\x11[ 외골격 ] \x04체력 -20%, 방어 +2", (0)))
            EUDContinue()
            # (Line 2607) }
            # (Line 2610) if(
        EUDEndIf()
        _t30 = EUDIf()
        # (Line 2611) Roulette_Sound[getcurpl()] == 14
        # (Line 2612) ){
        if _t30(Roulette_Sound[f_getcurpl()] == 14):
            # (Line 2613) Roulette_Sound[getcurpl()] = 0;
            _ARRW(Roulette_Sound, f_getcurpl()) << (0)
            # (Line 2614) PlayWAV("sound\\Bullet\\TTaFi200.wav");
            # (Line 2615) }
            DoActions(PlayWAV("sound\\Bullet\\TTaFi200.wav"))
            # (Line 2616) if(
        EUDEndIf()
        _t31 = EUDIf()
        # (Line 2617) RandomOption[i] == 14
        # (Line 2618) ){
        if _t31(RandomOption[i] == 14):
            # (Line 2619) DisplayText("\x13\x11[ 강인함 ] \x04체력 + 200", (0));
            # (Line 2620) continue;
            DoActions(DisplayText("\x13\x11[ 강인함 ] \x04체력 + 200", (0)))
            EUDContinue()
            # (Line 2621) }
            # (Line 2624) if(
        EUDEndIf()
        _t32 = EUDIf()
        # (Line 2625) Roulette_Sound[getcurpl()] == 15
        # (Line 2626) ){
        if _t32(Roulette_Sound[f_getcurpl()] == 15):
            # (Line 2627) Roulette_Sound[getcurpl()] = 0;
            _ARRW(Roulette_Sound, f_getcurpl()) << (0)
            # (Line 2628) PlayWAV("sound\\Misc\\ZRescue.wav");
            # (Line 2629) }
            DoActions(PlayWAV("sound\\Misc\\ZRescue.wav"))
            # (Line 2630) if(
        EUDEndIf()
        _t33 = EUDIf()
        # (Line 2631) RandomOption[i] == 15
        # (Line 2632) ){
        if _t33(RandomOption[i] == 15):
            # (Line 2633) DisplayText("\x13\x10[ 착륙 ] \x04지상화", (0));
            # (Line 2634) continue;
            DoActions(DisplayText("\x13\x10[ 착륙 ] \x04지상화", (0)))
            EUDContinue()
            # (Line 2635) }
            # (Line 2638) if(
        EUDEndIf()
        _t34 = EUDIf()
        # (Line 2639) Roulette_Sound[getcurpl()] == 16
        # (Line 2640) ){
        if _t34(Roulette_Sound[f_getcurpl()] == 16):
            # (Line 2641) Roulette_Sound[getcurpl()] = 0;
            _ARRW(Roulette_Sound, f_getcurpl()) << (0)
            # (Line 2642) PlayWAV("sound\\Bullet\\TNsFir00.wav");
            # (Line 2643) }
            DoActions(PlayWAV("sound\\Bullet\\TNsFir00.wav"))
            # (Line 2644) if(
        EUDEndIf()
        _t35 = EUDIf()
        # (Line 2645) RandomOption[i] == 16
        # (Line 2646) ){
        if _t35(RandomOption[i] == 16):
            # (Line 2647) DisplayText("\x13\x08[ 격분 ] \x04공격력 + 35", (0));
            # (Line 2648) continue;
            DoActions(DisplayText("\x13\x08[ 격분 ] \x04공격력 + 35", (0)))
            EUDContinue()
            # (Line 2649) }
            # (Line 2652) if(
        EUDEndIf()
        _t36 = EUDIf()
        # (Line 2653) Roulette_Sound[getcurpl()] == 17
        # (Line 2654) ){
        if _t36(Roulette_Sound[f_getcurpl()] == 17):
            # (Line 2655) Roulette_Sound[getcurpl()] = 0;
            _ARRW(Roulette_Sound, f_getcurpl()) << (0)
            # (Line 2656) PlayWAV("sound\\Bullet\\TNsFir00.wav");
            # (Line 2657) }
            DoActions(PlayWAV("sound\\Bullet\\TNsFir00.wav"))
            # (Line 2658) if(
        EUDEndIf()
        _t37 = EUDIf()
        # (Line 2659) RandomOption[i] == 17
        # (Line 2660) ){
        if _t37(RandomOption[i] == 17):
            # (Line 2661) DisplayText("\x13\x08[ 터보 ] \x04이동속도 + 70%", (0));
            # (Line 2662) continue;
            DoActions(DisplayText("\x13\x08[ 터보 ] \x04이동속도 + 70%", (0)))
            EUDContinue()
            # (Line 2663) }
            # (Line 2666) if(
        EUDEndIf()
        _t38 = EUDIf()
        # (Line 2667) Roulette_Sound[getcurpl()] == 18
        # (Line 2668) ){
        if _t38(Roulette_Sound[f_getcurpl()] == 18):
            # (Line 2669) Roulette_Sound[getcurpl()] = 0;
            _ARRW(Roulette_Sound, f_getcurpl()) << (0)
            # (Line 2670) PlayWAV("sound\\Bullet\\TTaFi200.wav");
            # (Line 2671) }
            DoActions(PlayWAV("sound\\Bullet\\TTaFi200.wav"))
            # (Line 2672) if(
        EUDEndIf()
        _t39 = EUDIf()
        # (Line 2673) RandomOption[i] == 18
        # (Line 2674) ){
        if _t39(RandomOption[i] == 18):
            # (Line 2675) DisplayText("\x13\x11[ 조준 ] \x04사거리 + 0.1875", (0));
            # (Line 2676) continue;
            DoActions(DisplayText("\x13\x11[ 조준 ] \x04사거리 + 0.1875", (0)))
            EUDContinue()
            # (Line 2677) }
            # (Line 2680) if(
        EUDEndIf()
        _t40 = EUDIf()
        # (Line 2681) Roulette_Sound[getcurpl()] == 19
        # (Line 2682) ){
        if _t40(Roulette_Sound[f_getcurpl()] == 19):
            # (Line 2683) Roulette_Sound[getcurpl()] = 0;
            _ARRW(Roulette_Sound, f_getcurpl()) << (0)
            # (Line 2684) PlayWAV("sound\\Bullet\\LASRHIT1.wav");
            # (Line 2685) }
            DoActions(PlayWAV("sound\\Bullet\\LASRHIT1.wav"))
            # (Line 2686) if(
        EUDEndIf()
        _t41 = EUDIf()
        # (Line 2687) RandomOption[i] == 19
        # (Line 2688) ){
        if _t41(RandomOption[i] == 19):
            # (Line 2689) DisplayText("\x13\x17[ 재생 갑판 ] \x1E피 회복 +1.5/s", (0));
            # (Line 2690) continue;
            DoActions(DisplayText("\x13\x17[ 재생 갑판 ] \x1E피 회복 +1.5/s", (0)))
            EUDContinue()
            # (Line 2691) }
            # (Line 2694) if(
        EUDEndIf()
        _t42 = EUDIf()
        # (Line 2695) Roulette_Sound[getcurpl()] == 20
        # (Line 2696) ){
        if _t42(Roulette_Sound[f_getcurpl()] == 20):
            # (Line 2697) Roulette_Sound[getcurpl()] = 0;
            _ARRW(Roulette_Sound, f_getcurpl()) << (0)
            # (Line 2698) PlayWAV("sound\\Bullet\\TNsFir00.wav");
            # (Line 2699) }
            DoActions(PlayWAV("sound\\Bullet\\TNsFir00.wav"))
            # (Line 2700) if(
        EUDEndIf()
        _t43 = EUDIf()
        # (Line 2701) RandomOption[i] == 20
        # (Line 2702) ){
        if _t43(RandomOption[i] == 20):
            # (Line 2703) DisplayText("\x13\x08[ 마라토너 ] \x04체력 & 이속 +30%", (0));
            # (Line 2704) continue;
            DoActions(DisplayText("\x13\x08[ 마라토너 ] \x04체력 & 이속 +30%", (0)))
            EUDContinue()
            # (Line 2705) }
            # (Line 2708) if(
        EUDEndIf()
        _t44 = EUDIf()
        # (Line 2709) Roulette_Sound[getcurpl()] == 21
        # (Line 2710) ){
        if _t44(Roulette_Sound[f_getcurpl()] == 21):
            # (Line 2711) Roulette_Sound[getcurpl()] = 0;
            _ARRW(Roulette_Sound, f_getcurpl()) << (0)
            # (Line 2712) PlayWAV("sound\\Bullet\\TNsFir00.wav");
            # (Line 2713) }
            DoActions(PlayWAV("sound\\Bullet\\TNsFir00.wav"))
            # (Line 2714) if(
        EUDEndIf()
        _t45 = EUDIf()
        # (Line 2715) RandomOption[i] == 21
        # (Line 2716) ){
        if _t45(RandomOption[i] == 21):
            # (Line 2717) DisplayText("\x13\x08[ 강철 갑판 ] \x04방어력 + 3", (0));
            # (Line 2718) continue;
            DoActions(DisplayText("\x13\x08[ 강철 갑판 ] \x04방어력 + 3", (0)))
            EUDContinue()
            # (Line 2719) }
            # (Line 2722) if(
        EUDEndIf()
        _t46 = EUDIf()
        # (Line 2723) Roulette_Sound[getcurpl()] == 22
        # (Line 2724) ){
        if _t46(Roulette_Sound[f_getcurpl()] == 22):
            # (Line 2725) Roulette_Sound[getcurpl()] = 0;
            _ARRW(Roulette_Sound, f_getcurpl()) << (0)
            # (Line 2726) PlayWAV("sound\\Bullet\\TTaFi200.wav");
            # (Line 2727) }
            DoActions(PlayWAV("sound\\Bullet\\TTaFi200.wav"))
            # (Line 2728) if(
        EUDEndIf()
        _t47 = EUDIf()
        # (Line 2729) RandomOption[i] == 22
        # (Line 2730) ){
        if _t47(RandomOption[i] == 22):
            # (Line 2731) DisplayText("\x13\x11[ 샷건 ] \x04공 +20, 사거리 -0.125", (0));
            # (Line 2732) continue;
            DoActions(DisplayText("\x13\x11[ 샷건 ] \x04공 +20, 사거리 -0.125", (0)))
            EUDContinue()
            # (Line 2733) }
            # (Line 2736) if(
        EUDEndIf()
        _t48 = EUDIf()
        # (Line 2737) Roulette_Sound[getcurpl()] == 23
        # (Line 2738) ){
        if _t48(Roulette_Sound[f_getcurpl()] == 23):
            # (Line 2739) Roulette_Sound[getcurpl()] = 0;
            _ARRW(Roulette_Sound, f_getcurpl()) << (0)
            # (Line 2740) PlayWAV("sound\\Misc\\ZRescue.wav");
            # (Line 2741) }
            DoActions(PlayWAV("sound\\Misc\\ZRescue.wav"))
            # (Line 2742) if(
        EUDEndIf()
        _t49 = EUDIf()
        # (Line 2743) RandomOption[i] == 23
        # (Line 2744) ){
        if _t49(RandomOption[i] == 23):
            # (Line 2745) DisplayText("\x13\x10[ 국룰 ] \x04사거리 4.5 고정", (0));
            # (Line 2746) continue;
            DoActions(DisplayText("\x13\x10[ 국룰 ] \x04사거리 4.5 고정", (0)))
            EUDContinue()
            # (Line 2747) }
            # (Line 2750) if(
        EUDEndIf()
        _t50 = EUDIf()
        # (Line 2751) Roulette_Sound[getcurpl()] == 24
        # (Line 2752) ){
        if _t50(Roulette_Sound[f_getcurpl()] == 24):
            # (Line 2753) Roulette_Sound[getcurpl()] = 0;
            _ARRW(Roulette_Sound, f_getcurpl()) << (0)
            # (Line 2754) PlayWAV("sound\\Bullet\\TNsFir00.wav");
            # (Line 2755) }
            DoActions(PlayWAV("sound\\Bullet\\TNsFir00.wav"))
            # (Line 2756) if(
        EUDEndIf()
        _t51 = EUDIf()
        # (Line 2757) RandomOption[i] == 24
        # (Line 2758) ){
        if _t51(RandomOption[i] == 24):
            # (Line 2759) DisplayText("\x13\x08[ 호크아이 ] \x04사거리 + 0.25", (0));
            # (Line 2760) continue;
            DoActions(DisplayText("\x13\x08[ 호크아이 ] \x04사거리 + 0.25", (0)))
            EUDContinue()
            # (Line 2761) }
            # (Line 2764) if(
        EUDEndIf()
        _t52 = EUDIf()
        # (Line 2765) Roulette_Sound[getcurpl()] == 25
        # (Line 2766) ){
        if _t52(Roulette_Sound[f_getcurpl()] == 25):
            # (Line 2767) Roulette_Sound[getcurpl()] = 0;
            _ARRW(Roulette_Sound, f_getcurpl()) << (0)
            # (Line 2768) PlayWAV("sound\\Bullet\\LASRHIT1.wav");
            # (Line 2769) }
            DoActions(PlayWAV("sound\\Bullet\\LASRHIT1.wav"))
            # (Line 2770) if(
        EUDEndIf()
        _t53 = EUDIf()
        # (Line 2771) RandomOption[i] == 25
        # (Line 2772) ){
        if _t53(RandomOption[i] == 25):
            # (Line 2773) DisplayText("\x13\x17[ Lv+1 ] \x1E공+2, 체+25, 이속+10%", (0));
            # (Line 2774) continue;
            DoActions(DisplayText("\x13\x17[ Lv+1 ] \x1E공+2, 체+25, 이속+10%", (0)))
            EUDContinue()
            # (Line 2775) }
            # (Line 2778) if(
        EUDEndIf()
        _t54 = EUDIf()
        # (Line 2779) Roulette_Sound[getcurpl()] == 26
        # (Line 2780) ){
        if _t54(Roulette_Sound[f_getcurpl()] == 26):
            # (Line 2781) Roulette_Sound[getcurpl()] = 0;
            _ARRW(Roulette_Sound, f_getcurpl()) << (0)
            # (Line 2782) PlayWAV("sound\\Bullet\\TTaFi200.wav");
            # (Line 2783) }
            DoActions(PlayWAV("sound\\Bullet\\TTaFi200.wav"))
            # (Line 2784) if(
        EUDEndIf()
        _t55 = EUDIf()
        # (Line 2785) RandomOption[i] == 26
        # (Line 2786) ){
        if _t55(RandomOption[i] == 26):
            # (Line 2787) DisplayText("\x13\x11[ Lv+2 ] \x04공+5, 체+50, 이속+25%, 방+1", (0));
            # (Line 2788) continue;
            DoActions(DisplayText("\x13\x11[ Lv+2 ] \x04공+5, 체+50, 이속+25%, 방+1", (0)))
            EUDContinue()
            # (Line 2789) }
            # (Line 2792) if(
        EUDEndIf()
        _t56 = EUDIf()
        # (Line 2793) Roulette_Sound[getcurpl()] == 27
        # (Line 2794) ){
        if _t56(Roulette_Sound[f_getcurpl()] == 27):
            # (Line 2795) Roulette_Sound[getcurpl()] = 0;
            _ARRW(Roulette_Sound, f_getcurpl()) << (0)
            # (Line 2796) PlayWAV("sound\\Bullet\\TNsFir00.wav");
            # (Line 2797) }
            DoActions(PlayWAV("sound\\Bullet\\TNsFir00.wav"))
            # (Line 2798) if(
        EUDEndIf()
        _t57 = EUDIf()
        # (Line 2799) RandomOption[i] == 27
        # (Line 2800) ){
        if _t57(RandomOption[i] == 27):
            # (Line 2801) DisplayText("\x13\x08[ Lv+3 ] \x04공+12, 체+100, 이속+30%, 방+1", (0));
            # (Line 2802) continue;
            DoActions(DisplayText("\x13\x08[ Lv+3 ] \x04공+12, 체+100, 이속+30%, 방+1", (0)))
            EUDContinue()
            # (Line 2803) }
            # (Line 2806) if(
        EUDEndIf()
        _t58 = EUDIf()
        # (Line 2807) Roulette_Sound[getcurpl()] == 28
        # (Line 2808) ){
        if _t58(Roulette_Sound[f_getcurpl()] == 28):
            # (Line 2809) Roulette_Sound[getcurpl()] = 0;
            _ARRW(Roulette_Sound, f_getcurpl()) << (0)
            # (Line 2810) PlayWAV("staredit\\wav\\chookjibub.wav");
            # (Line 2811) }
            DoActions(PlayWAV("staredit\\wav\\chookjibub.wav"))
            # (Line 2812) if(
        EUDEndIf()
        _t59 = EUDIf()
        # (Line 2813) RandomOption[i] == 28
        # (Line 2814) ){
        if _t59(RandomOption[i] == 28):
            # (Line 2815) DisplayText("\x13\x1F[ 축지법 ] \x04이동속도 + 100%", (0));
            # (Line 2816) continue;
            DoActions(DisplayText("\x13\x1F[ 축지법 ] \x04이동속도 + 100%", (0)))
            EUDContinue()
            # (Line 2817) }
            # (Line 2820) if(
        EUDEndIf()
        _t60 = EUDIf()
        # (Line 2821) Roulette_Sound[getcurpl()] == 29
        # (Line 2822) ){
        if _t60(Roulette_Sound[f_getcurpl()] == 29):
            # (Line 2823) Roulette_Sound[getcurpl()] = 0;
            _ARRW(Roulette_Sound, f_getcurpl()) << (0)
            # (Line 2824) PlayWAV("staredit\\wav\\reloading.ogg");
            # (Line 2825) }
            DoActions(PlayWAV("staredit\\wav\\reloading.ogg"))
            # (Line 2826) if(
        EUDEndIf()
        _t61 = EUDIf()
        # (Line 2827) RandomOption[i] == 29
        # (Line 2828) ){
        if _t61(RandomOption[i] == 29):
            # (Line 2829) DisplayText("\x13\x1F[ 러시안 룰렛 ] \x04???", (0));
            # (Line 2830) continue;
            DoActions(DisplayText("\x13\x1F[ 러시안 룰렛 ] \x04???", (0)))
            EUDContinue()
            # (Line 2831) }
            # (Line 2834) if(
        EUDEndIf()
        _t62 = EUDIf()
        # (Line 2835) Roulette_Sound[getcurpl()] == 30
        # (Line 2836) ){
        if _t62(Roulette_Sound[f_getcurpl()] == 30):
            # (Line 2837) Roulette_Sound[getcurpl()] = 0;
            _ARRW(Roulette_Sound, f_getcurpl()) << (0)
            # (Line 2838) PlayWAV("sound\\Bullet\\TTaFi200.wav");
            # (Line 2839) }
            DoActions(PlayWAV("sound\\Bullet\\TTaFi200.wav"))
            # (Line 2840) if(
        EUDEndIf()
        _t63 = EUDIf()
        # (Line 2841) RandomOption[i] == 30
        # (Line 2842) ){
        if _t63(RandomOption[i] == 30):
            # (Line 2843) DisplayText("\x13\x11[ 건전지 ] \x04쉴드 +30, 재생 +4/s", (0));
            # (Line 2844) continue;
            DoActions(DisplayText("\x13\x11[ 건전지 ] \x04쉴드 +30, 재생 +4/s", (0)))
            EUDContinue()
            # (Line 2845) }
            # (Line 2850) if(
        EUDEndIf()
        _t64 = EUDIf()
        # (Line 2851) Roulette_Sound[getcurpl()] == 31
        # (Line 2852) ){
        if _t64(Roulette_Sound[f_getcurpl()] == 31):
            # (Line 2853) Roulette_Sound[getcurpl()] = 0;
            _ARRW(Roulette_Sound, f_getcurpl()) << (0)
            # (Line 2854) PlayWAV("staredit\\wav\\legendary drop.ogg");
            # (Line 2855) }
            DoActions(PlayWAV("staredit\\wav\\legendary drop.ogg"))
            # (Line 2856) if(
        EUDEndIf()
        _t65 = EUDIf()
        # (Line 2857) RandomOption[i] == 31
        # (Line 2858) ){
        if _t65(RandomOption[i] == 31):
            # (Line 2859) DisplayText("\x13\x07[ 여포 ] \x11벌쳐 공격력 + 100%", (0));
            # (Line 2860) continue;
            DoActions(DisplayText("\x13\x07[ 여포 ] \x11벌쳐 공격력 + 100%", (0)))
            EUDContinue()
            # (Line 2861) }
            # (Line 2864) if(
        EUDEndIf()
        _t66 = EUDIf()
        # (Line 2865) Roulette_Sound[getcurpl()] == 32
        # (Line 2866) ){
        if _t66(Roulette_Sound[f_getcurpl()] == 32):
            # (Line 2867) Roulette_Sound[getcurpl()] = 0;
            _ARRW(Roulette_Sound, f_getcurpl()) << (0)
            # (Line 2868) PlayWAV("sound\\Terran\\FRIGATE\\TVkWht03.WAV");
            # (Line 2869) }
            DoActions(PlayWAV("sound\\Terran\\FRIGATE\\TVkWht03.WAV"))
            # (Line 2870) if(
        EUDEndIf()
        _t67 = EUDIf()
        # (Line 2871) RandomOption[i] == 32
        # (Line 2872) ){
        if _t67(RandomOption[i] == 32):
            # (Line 2873) DisplayText("\x13\x18[ 발키리 ] \x04이동속도 225% 고정", (0));
            # (Line 2874) continue;
            DoActions(DisplayText("\x13\x18[ 발키리 ] \x04이동속도 225% 고정", (0)))
            EUDContinue()
            # (Line 2875) }
            # (Line 2878) if(
        EUDEndIf()
        _t68 = EUDIf()
        # (Line 2879) Roulette_Sound[getcurpl()] == 33
        # (Line 2880) ){
        if _t68(Roulette_Sound[f_getcurpl()] == 33):
            # (Line 2881) Roulette_Sound[getcurpl()] = 0;
            _ARRW(Roulette_Sound, f_getcurpl()) << (0)
            # (Line 2882) PlayWAV("sound\\Bullet\\TTaFi200.wav");
            # (Line 2883) }
            DoActions(PlayWAV("sound\\Bullet\\TTaFi200.wav"))
            # (Line 2884) if(
        EUDEndIf()
        _t69 = EUDIf()
        # (Line 2885) RandomOption[i] == 33
        # (Line 2886) ){
        if _t69(RandomOption[i] == 33):
            # (Line 2887) DisplayText("\x13\x11[ 게으름 ] \x04이속 -20%, 체력 +30%", (0));
            # (Line 2888) continue;
            DoActions(DisplayText("\x13\x11[ 게으름 ] \x04이속 -20%, 체력 +30%", (0)))
            EUDContinue()
            # (Line 2889) }
            # (Line 2892) if(
        EUDEndIf()
        _t70 = EUDIf()
        # (Line 2893) Roulette_Sound[getcurpl()] == 34
        # (Line 2894) ){
        if _t70(Roulette_Sound[f_getcurpl()] == 34):
            # (Line 2895) Roulette_Sound[getcurpl()] = 0;
            _ARRW(Roulette_Sound, f_getcurpl()) << (0)
            # (Line 2896) PlayWAV("sound\\Misc\\ZRescue.wav");
            # (Line 2897) }
            DoActions(PlayWAV("sound\\Misc\\ZRescue.wav"))
            # (Line 2898) if(
        EUDEndIf()
        _t71 = EUDIf()
        # (Line 2899) RandomOption[i] == 34
        # (Line 2900) ){
        if _t71(RandomOption[i] == 34):
            # (Line 2901) DisplayText("\x13\x10[ 기회주의자 ] \x04최고속도 -20%, 가속 +200%", (0));
            # (Line 2902) continue;
            DoActions(DisplayText("\x13\x10[ 기회주의자 ] \x04최고속도 -20%, 가속 +200%", (0)))
            EUDContinue()
            # (Line 2903) }
            # (Line 2906) if(
        EUDEndIf()
        _t72 = EUDIf()
        # (Line 2907) Roulette_Sound[getcurpl()] == 35
        # (Line 2908) ){
        if _t72(Roulette_Sound[f_getcurpl()] == 35):
            # (Line 2909) Roulette_Sound[getcurpl()] = 0;
            _ARRW(Roulette_Sound, f_getcurpl()) << (0)
            # (Line 2910) PlayWAV("staredit\\wav\\barbarian.ogg");
            # (Line 2911) }
            DoActions(PlayWAV("staredit\\wav\\barbarian.ogg"))
            # (Line 2912) if(
        EUDEndIf()
        _t73 = EUDIf()
        # (Line 2913) RandomOption[i] == 35
        # (Line 2914) ){
        if _t73(RandomOption[i] == 35):
            # (Line 2915) DisplayText("\x13\x1F[ 바바리안 ] \x04공격력 + 70", (0));
            # (Line 2916) continue;
            DoActions(DisplayText("\x13\x1F[ 바바리안 ] \x04공격력 + 70", (0)))
            EUDContinue()
            # (Line 2917) }
            # (Line 2920) if(
        EUDEndIf()
        _t74 = EUDIf()
        # (Line 2921) Roulette_Sound[getcurpl()] == 36
        # (Line 2922) ){
        if _t74(Roulette_Sound[f_getcurpl()] == 36):
            # (Line 2923) Roulette_Sound[getcurpl()] = 0;
            _ARRW(Roulette_Sound, f_getcurpl()) << (0)
            # (Line 2924) PlayWAV("sound\\Terran\\MARINE\\TMaPss00.WAV");
            # (Line 2925) }
            DoActions(PlayWAV("sound\\Terran\\MARINE\\TMaPss00.WAV"))
            # (Line 2926) if(
        EUDEndIf()
        _t75 = EUDIf()
        # (Line 2927) RandomOption[i] == 36
        # (Line 2928) ){
        if _t75(RandomOption[i] == 36):
            # (Line 2929) DisplayText("\x13\x18[ 생마린 ] \x04체력 +250, 체력회복 불가", (0));
            # (Line 2930) continue;
            DoActions(DisplayText("\x13\x18[ 생마린 ] \x04체력 +250, 체력회복 불가", (0)))
            EUDContinue()
            # (Line 2931) }
            # (Line 2934) if(
        EUDEndIf()
        _t76 = EUDIf()
        # (Line 2935) RandomOption[i] == 37 &&
        # (Line 2936) 포문개방취소 == 0
        # (Line 2937) ){
        if _t76(EUDSCAnd()(RandomOption[i] == 37)(포문개방취소 == 0)()):
            # (Line 2938) DisplayText("\x13\x1F[ 포문 개방 ] \x04공 +10%, 발사각 360°", (0));
            # (Line 2939) }
            DoActions(DisplayText("\x13\x1F[ 포문 개방 ] \x04공 +10%, 발사각 360°", (0)))
            # (Line 2940) if(
        EUDEndIf()
        _t77 = EUDIf()
        # (Line 2941) RandomOption[i] == 37 &&
        # (Line 2942) 포문개방취소 == 1
        # (Line 2943) ){
        if _t77(EUDSCAnd()(RandomOption[i] == 37)(포문개방취소 == 1)()):
            # (Line 2944) DisplayText("\x13\x1F[ 포문 개방 ] \x04공 +10%, \x05발사각 360°(취소됨)", (0));
            # (Line 2945) }
            DoActions(DisplayText("\x13\x1F[ 포문 개방 ] \x04공 +10%, \x05발사각 360°(취소됨)", (0)))
            # (Line 2946) if(
        EUDEndIf()
        _t78 = EUDIf()
        # (Line 2947) Roulette_Sound[getcurpl()] == 37
        # (Line 2948) ){
        if _t78(Roulette_Sound[f_getcurpl()] == 37):
            # (Line 2949) Roulette_Sound[getcurpl()] = 0;
            _ARRW(Roulette_Sound, f_getcurpl()) << (0)
            # (Line 2950) PlayWAV("sound\\Terran\\TANK\\TTaTra00.WAV");
            # (Line 2951) }
            DoActions(PlayWAV("sound\\Terran\\TANK\\TTaTra00.WAV"))
            # (Line 2954) if(
        EUDEndIf()
        _t79 = EUDIf()
        # (Line 2955) Roulette_Sound[getcurpl()] == 38
        # (Line 2956) ){
        if _t79(Roulette_Sound[f_getcurpl()] == 38):
            # (Line 2957) Roulette_Sound[getcurpl()] = 0;
            _ARRW(Roulette_Sound, f_getcurpl()) << (0)
            # (Line 2958) PlayWAV("staredit\\wav\\legendary drop.ogg");
            # (Line 2959) }
            DoActions(PlayWAV("staredit\\wav\\legendary drop.ogg"))
            # (Line 2960) if(
        EUDEndIf()
        _t80 = EUDIf()
        # (Line 2961) RandomOption[i] == 38
        # (Line 2962) ){
        if _t80(RandomOption[i] == 38):
            # (Line 2963) DisplayText("\x13\x07[ 정비공 ] \x11벌쳐 체력 + 75", (0));
            # (Line 2964) continue;
            DoActions(DisplayText("\x13\x07[ 정비공 ] \x11벌쳐 체력 + 75", (0)))
            EUDContinue()
            # (Line 2965) }
            # (Line 2968) if(
        EUDEndIf()
        _t81 = EUDIf()
        # (Line 2969) Roulette_Sound[getcurpl()] == 39
        # (Line 2970) ){
        if _t81(Roulette_Sound[f_getcurpl()] == 39):
            # (Line 2971) Roulette_Sound[getcurpl()] = 0;
            _ARRW(Roulette_Sound, f_getcurpl()) << (0)
            # (Line 2972) PlayWAV("staredit\\wav\\legendary drop.ogg");
            # (Line 2973) }
            DoActions(PlayWAV("staredit\\wav\\legendary drop.ogg"))
            # (Line 2974) if(
        EUDEndIf()
        _t82 = EUDIf()
        # (Line 2975) RandomOption[i] == 39
        # (Line 2976) ){
        if _t82(RandomOption[i] == 39):
            # (Line 2977) DisplayText("\x13\x07[ 관통상 ] \x11벌쳐 공격이 방어를 무시", (0));
            # (Line 2978) continue;
            DoActions(DisplayText("\x13\x07[ 관통상 ] \x11벌쳐 공격이 방어를 무시", (0)))
            EUDContinue()
            # (Line 2979) }
            # (Line 2982) if(
        EUDEndIf()
        _t83 = EUDIf()
        # (Line 2983) Roulette_Sound[getcurpl()] == 40
        # (Line 2984) ){
        if _t83(Roulette_Sound[f_getcurpl()] == 40):
            # (Line 2985) Roulette_Sound[getcurpl()] = 0;
            _ARRW(Roulette_Sound, f_getcurpl()) << (0)
            # (Line 2986) PlayWAV("sound\\Bullet\\TNsFir00.wav");
            # (Line 2987) }
            DoActions(PlayWAV("sound\\Bullet\\TNsFir00.wav"))
            # (Line 2988) if(
        EUDEndIf()
        _t84 = EUDIf()
        # (Line 2989) RandomOption[i] == 40
        # (Line 2990) ){
        if _t84(RandomOption[i] == 40):
            # (Line 2991) DisplayText("\x13\x08[ 미련함 ] \x04체력 -15%, 이속 +60%", (0));
            # (Line 2992) continue;
            DoActions(DisplayText("\x13\x08[ 미련함 ] \x04체력 -15%, 이속 +60%", (0)))
            EUDContinue()
            # (Line 2993) }
            # (Line 2996) if(
        EUDEndIf()
        _t85 = EUDIf()
        # (Line 2997) Roulette_Sound[getcurpl()] == 41
        # (Line 2998) ){
        if _t85(Roulette_Sound[f_getcurpl()] == 41):
            # (Line 2999) Roulette_Sound[getcurpl()] = 0;
            _ARRW(Roulette_Sound, f_getcurpl()) << (0)
            # (Line 3000) PlayWAV("sound\\Bullet\\TNsFir00.wav");
            # (Line 3001) }
            DoActions(PlayWAV("sound\\Bullet\\TNsFir00.wav"))
            # (Line 3002) if(
        EUDEndIf()
        _t86 = EUDIf()
        # (Line 3003) RandomOption[i] == 41
        # (Line 3004) ){
        if _t86(RandomOption[i] == 41):
            # (Line 3005) DisplayText("\x13\x08[ 방탄복 ] \x04쉴드 + 300", (0));
            # (Line 3006) continue;
            DoActions(DisplayText("\x13\x08[ 방탄복 ] \x04쉴드 + 300", (0)))
            EUDContinue()
            # (Line 3007) }
            # (Line 3010) if(
        EUDEndIf()
        _t87 = EUDIf()
        # (Line 3011) Roulette_Sound[getcurpl()] == 42
        # (Line 3012) ){
        if _t87(Roulette_Sound[f_getcurpl()] == 42):
            # (Line 3013) Roulette_Sound[getcurpl()] = 0;
            _ARRW(Roulette_Sound, f_getcurpl()) << (0)
            # (Line 3014) PlayWAV("sound\\Zerg\\Hydra\\ZHyYes00.WAV");
            # (Line 3015) }
            DoActions(PlayWAV("sound\\Zerg\\Hydra\\ZHyYes00.WAV"))
            # (Line 3016) if(
        EUDEndIf()
        _t88 = EUDIf()
        # (Line 3017) RandomOption[i] == 42
        # (Line 3018) ){
        if _t88(RandomOption[i] == 42):
            # (Line 3019) DisplayText("\x13\x18[ 히드라 ] \x04사거리 +0.125, 지상화", (0));
            # (Line 3020) continue;
            DoActions(DisplayText("\x13\x18[ 히드라 ] \x04사거리 +0.125, 지상화", (0)))
            EUDContinue()
            # (Line 3021) }
            # (Line 3024) if(
        EUDEndIf()
        _t89 = EUDIf()
        # (Line 3025) Roulette_Sound[getcurpl()] == 43
        # (Line 3026) ){
        if _t89(Roulette_Sound[f_getcurpl()] == 43):
            # (Line 3027) Roulette_Sound[getcurpl()] = 0;
            _ARRW(Roulette_Sound, f_getcurpl()) << (0)
            # (Line 3028) PlayWAV("sound\\Protoss\\ZEALOT\\PZeYes00.WAV");
            # (Line 3029) }
            DoActions(PlayWAV("sound\\Protoss\\ZEALOT\\PZeYes00.WAV"))
            # (Line 3030) if(
        EUDEndIf()
        _t90 = EUDIf()
        # (Line 3031) RandomOption[i] == 43
        # (Line 3032) ){
        if _t90(RandomOption[i] == 43):
            # (Line 3033) DisplayText("\x13\x18[ 질럿 ] \x04체력 -20%, 쉴드 +50%", (0));
            # (Line 3034) continue;
            DoActions(DisplayText("\x13\x18[ 질럿 ] \x04체력 -20%, 쉴드 +50%", (0)))
            EUDContinue()
            # (Line 3035) }
            # (Line 3038) if(
        EUDEndIf()
        _t91 = EUDIf()
        # (Line 3039) Roulette_Sound[getcurpl()] == 44
        # (Line 3040) ){
        if _t91(Roulette_Sound[f_getcurpl()] == 44):
            # (Line 3041) Roulette_Sound[getcurpl()] = 0;
            _ARRW(Roulette_Sound, f_getcurpl()) << (0)
            # (Line 3042) PlayWAV("sound\\Bullet\\TTaFi200.wav");
            # (Line 3043) }
            DoActions(PlayWAV("sound\\Bullet\\TTaFi200.wav"))
            # (Line 3044) if(
        EUDEndIf()
        _t92 = EUDIf()
        # (Line 3045) RandomOption[i] == 44
        # (Line 3046) ){
        if _t92(RandomOption[i] == 44):
            # (Line 3047) DisplayText("\x13\x11[ 닌자 ] \x04공속&이속 +30%, 방어 -2", (0));
            # (Line 3048) continue;
            DoActions(DisplayText("\x13\x11[ 닌자 ] \x04공속&이속 +30%, 방어 -2", (0)))
            EUDContinue()
            # (Line 3049) }
            # (Line 3052) if(
        EUDEndIf()
        _t93 = EUDIf()
        # (Line 3053) Roulette_Sound[getcurpl()] == 45
        # (Line 3054) ){
        if _t93(Roulette_Sound[f_getcurpl()] == 45):
            # (Line 3055) Roulette_Sound[getcurpl()] = 0;
            _ARRW(Roulette_Sound, f_getcurpl()) << (0)
            # (Line 3056) PlayWAV("sound\\Bullet\\TTaFi200.wav");
            # (Line 3057) }
            DoActions(PlayWAV("sound\\Bullet\\TTaFi200.wav"))
            # (Line 3058) if(
        EUDEndIf()
        _t94 = EUDIf()
        # (Line 3059) RandomOption[i] == 45
        # (Line 3060) ){
        if _t94(RandomOption[i] == 45):
            # (Line 3061) DisplayText("\x13\x11[ 하이브리드 ] \x04체력 & 쉴드 + 100", (0));
            # (Line 3062) continue;
            DoActions(DisplayText("\x13\x11[ 하이브리드 ] \x04체력 & 쉴드 + 100", (0)))
            EUDContinue()
            # (Line 3063) }
            # (Line 3066) if(
        EUDEndIf()
        _t95 = EUDIf()
        # (Line 3067) Roulette_Sound[getcurpl()] == 46
        # (Line 3068) ){
        if _t95(Roulette_Sound[f_getcurpl()] == 46):
            # (Line 3069) Roulette_Sound[getcurpl()] = 0;
            _ARRW(Roulette_Sound, f_getcurpl()) << (0)
            # (Line 3070) PlayWAV("sound\\Zerg\\Mutalid\\ZMuWht00.WAV");
            # (Line 3071) }
            DoActions(PlayWAV("sound\\Zerg\\Mutalid\\ZMuWht00.WAV"))
            # (Line 3072) if(
        EUDEndIf()
        _t96 = EUDIf()
        # (Line 3073) RandomOption[i] == 46
        # (Line 3074) ){
        if _t96(RandomOption[i] == 46):
            # (Line 3075) DisplayText("\x13\x18[ 뮤탈 ] \x04방어 0 고정, 피 회복 +4/s", (0));
            # (Line 3076) continue;
            DoActions(DisplayText("\x13\x18[ 뮤탈 ] \x04방어 0 고정, 피 회복 +4/s", (0)))
            EUDContinue()
            # (Line 3077) }
            # (Line 3080) if(
        EUDEndIf()
        _t97 = EUDIf()
        # (Line 3081) Roulette_Sound[getcurpl()] == 47
        # (Line 3082) ){
        if _t97(Roulette_Sound[f_getcurpl()] == 47):
            # (Line 3083) Roulette_Sound[getcurpl()] = 0;
            _ARRW(Roulette_Sound, f_getcurpl()) << (0)
            # (Line 3084) PlayWAV("sound\\Zerg\\Ultra\\zulAtt01.WAV");
            # (Line 3085) }
            DoActions(PlayWAV("sound\\Zerg\\Ultra\\zulAtt01.WAV"))
            # (Line 3086) if(
        EUDEndIf()
        _t98 = EUDIf()
        # (Line 3087) RandomOption[i] == 47
        # (Line 3088) ){
        if _t98(RandomOption[i] == 47):
            # (Line 3089) DisplayText("\x13\x18[ 울트라 ] \x04쉴드를 모두 체력으로 전환", (0));
            # (Line 3090) continue;
            DoActions(DisplayText("\x13\x18[ 울트라 ] \x04쉴드를 모두 체력으로 전환", (0)))
            EUDContinue()
            # (Line 3091) }
            # (Line 3094) if(
        EUDEndIf()
        _t99 = EUDIf()
        # (Line 3095) Roulette_Sound[getcurpl()] == 48
        # (Line 3096) ){
        if _t99(Roulette_Sound[f_getcurpl()] == 48):
            # (Line 3097) Roulette_Sound[getcurpl()] = 0;
            _ARRW(Roulette_Sound, f_getcurpl()) << (0)
            # (Line 3098) PlayWAV("sound\\Zerg\\Guardian\\ZGuYes00.WAV");
            # (Line 3099) }
            DoActions(PlayWAV("sound\\Zerg\\Guardian\\ZGuYes00.WAV"))
            # (Line 3100) if(
        EUDEndIf()
        _t100 = EUDIf()
        # (Line 3101) RandomOption[i] == 48
        # (Line 3102) ){
        if _t100(RandomOption[i] == 48):
            # (Line 3103) DisplayText("\x13\x18[ 가디언 ] \x04이속 -20%, 사거리 +0.1875", (0));
            # (Line 3104) continue;
            DoActions(DisplayText("\x13\x18[ 가디언 ] \x04이속 -20%, 사거리 +0.1875", (0)))
            EUDContinue()
            # (Line 3105) }
            # (Line 3108) if(
        EUDEndIf()
        _t101 = EUDIf()
        # (Line 3109) Roulette_Sound[getcurpl()] == 49
        # (Line 3110) ){
        if _t101(Roulette_Sound[f_getcurpl()] == 49):
            # (Line 3111) Roulette_Sound[getcurpl()] = 0;
            _ARRW(Roulette_Sound, f_getcurpl()) << (0)
            # (Line 3112) PlayWAV("staredit\\wav\\huhhuhhuhhuh.ogg");
            # (Line 3113) }
            DoActions(PlayWAV("staredit\\wav\\huhhuhhuhhuh.ogg"))
            # (Line 3114) if(
        EUDEndIf()
        _t102 = EUDIf()
        # (Line 3115) RandomOption[i] == 49
        # (Line 3116) ){
        if _t102(RandomOption[i] == 49):
            # (Line 3117) DisplayText("\x13\x1F[ 중상 ] \x04벌쳐 체력 70% 감소", (0));
            # (Line 3118) continue;
            DoActions(DisplayText("\x13\x1F[ 중상 ] \x04벌쳐 체력 70% 감소", (0)))
            EUDContinue()
            # (Line 3119) }
            # (Line 3122) if(
        EUDEndIf()
        _t103 = EUDIf()
        # (Line 3123) Roulette_Sound[getcurpl()] == 50
        # (Line 3124) ){
        if _t103(Roulette_Sound[f_getcurpl()] == 50):
            # (Line 3125) Roulette_Sound[getcurpl()] = 0;
            _ARRW(Roulette_Sound, f_getcurpl()) << (0)
            # (Line 3126) PlayWAV("sound\\Bullet\\TTaFi200.wav");
            # (Line 3127) }
            DoActions(PlayWAV("sound\\Bullet\\TTaFi200.wav"))
            # (Line 3128) if(
        EUDEndIf()
        _t104 = EUDIf()
        # (Line 3129) RandomOption[i] == 50
        # (Line 3130) ){
        if _t104(RandomOption[i] == 50):
            # (Line 3131) DisplayText("\x13\x11[ 겁쟁이 ] \x04이속 +20%, 쉴드 +150", (0));
            # (Line 3132) continue;
            DoActions(DisplayText("\x13\x11[ 겁쟁이 ] \x04이속 +20%, 쉴드 +150", (0)))
            EUDContinue()
            # (Line 3133) }
            # (Line 3136) if(
        EUDEndIf()
        _t105 = EUDIf()
        # (Line 3137) Roulette_Sound[getcurpl()] == 51
        # (Line 3138) ){
        if _t105(Roulette_Sound[f_getcurpl()] == 51):
            # (Line 3139) Roulette_Sound[getcurpl()] = 0;
            _ARRW(Roulette_Sound, f_getcurpl()) << (0)
            # (Line 3140) PlayWAV("sound\\Misc\\ZRescue.wav");
            # (Line 3141) }
            DoActions(PlayWAV("sound\\Misc\\ZRescue.wav"))
            # (Line 3142) if(
        EUDEndIf()
        _t106 = EUDIf()
        # (Line 3143) RandomOption[i] == 51
        # (Line 3144) ){
        if _t106(RandomOption[i] == 51):
            # (Line 3145) DisplayText("\x13\x10[ 무대포 ] \x04브레이크 제거", (0));
            # (Line 3146) continue;
            DoActions(DisplayText("\x13\x10[ 무대포 ] \x04브레이크 제거", (0)))
            EUDContinue()
            # (Line 3147) }
            # (Line 3150) if(
        EUDEndIf()
        _t107 = EUDIf()
        # (Line 3151) Roulette_Sound[getcurpl()] == 52
        # (Line 3152) ){
        if _t107(Roulette_Sound[f_getcurpl()] == 52):
            # (Line 3153) Roulette_Sound[getcurpl()] = 0;
            _ARRW(Roulette_Sound, f_getcurpl()) << (0)
            # (Line 3154) PlayWAV("sound\\Bullet\\TTaFi200.wav");
            # (Line 3155) }
            DoActions(PlayWAV("sound\\Bullet\\TTaFi200.wav"))
            # (Line 3156) if(
        EUDEndIf()
        _t108 = EUDIf()
        # (Line 3157) RandomOption[i] == 52
        # (Line 3158) ){
        if _t108(RandomOption[i] == 52):
            # (Line 3159) DisplayText("\x13\x11[ 링거 ] \x04피 회복 + 3/s", (0));
            # (Line 3160) continue;
            DoActions(DisplayText("\x13\x11[ 링거 ] \x04피 회복 + 3/s", (0)))
            EUDContinue()
            # (Line 3161) }
            # (Line 3164) if(
        EUDEndIf()
        _t109 = EUDIf()
        # (Line 3165) Roulette_Sound[getcurpl()] == 53
        # (Line 3166) ){
        if _t109(Roulette_Sound[f_getcurpl()] == 53):
            # (Line 3167) Roulette_Sound[getcurpl()] = 0;
            _ARRW(Roulette_Sound, f_getcurpl()) << (0)
            # (Line 3168) PlayWAV("sound\\Bullet\\TNsFir00.wav");
            # (Line 3169) }
            DoActions(PlayWAV("sound\\Bullet\\TNsFir00.wav"))
            # (Line 3170) if(
        EUDEndIf()
        _t110 = EUDIf()
        # (Line 3171) RandomOption[i] == 53
        # (Line 3172) ){
        if _t110(RandomOption[i] == 53):
            # (Line 3173) DisplayText("\x13\x08[ 헬창 ] \x04체력 +20%, 공격력 +30%", (0));
            # (Line 3174) continue;
            DoActions(DisplayText("\x13\x08[ 헬창 ] \x04체력 +20%, 공격력 +30%", (0)))
            EUDContinue()
            # (Line 3175) }
            # (Line 3178) if(
        EUDEndIf()
        _t111 = EUDIf()
        # (Line 3179) Roulette_Sound[getcurpl()] == 54
        # (Line 3180) ){
        if _t111(Roulette_Sound[f_getcurpl()] == 54):
            # (Line 3181) Roulette_Sound[getcurpl()] = 0;
            _ARRW(Roulette_Sound, f_getcurpl()) << (0)
            # (Line 3182) PlayWAV("sound\\Bullet\\TNsFir00.wav");
            # (Line 3183) }
            DoActions(PlayWAV("sound\\Bullet\\TNsFir00.wav"))
            # (Line 3184) if(
        EUDEndIf()
        _t112 = EUDIf()
        # (Line 3185) RandomOption[i] == 54
        # (Line 3186) ){
        if _t112(RandomOption[i] == 54):
            # (Line 3187) DisplayText("\x13\x08[ 저격 ] \x04사거리 +0.1875, 공 +15", (0));
            # (Line 3188) continue;
            DoActions(DisplayText("\x13\x08[ 저격 ] \x04사거리 +0.1875, 공 +15", (0)))
            EUDContinue()
            # (Line 3189) }
            # (Line 3192) if(
        EUDEndIf()
        _t113 = EUDIf()
        # (Line 3193) Roulette_Sound[getcurpl()] == 55
        # (Line 3194) ){
        if _t113(Roulette_Sound[f_getcurpl()] == 55):
            # (Line 3195) Roulette_Sound[getcurpl()] = 0;
            _ARRW(Roulette_Sound, f_getcurpl()) << (0)
            # (Line 3196) PlayWAV("sound\\Bullet\\TNsFir00.wav");
            # (Line 3197) }
            DoActions(PlayWAV("sound\\Bullet\\TNsFir00.wav"))
            # (Line 3198) if(
        EUDEndIf()
        _t114 = EUDIf()
        # (Line 3199) RandomOption[i] == 55
        # (Line 3200) ){
        if _t114(RandomOption[i] == 55):
            # (Line 3201) DisplayText("\x13\x08[ 망원경 ] \x04사거리 +0.25, 발사각 -20%", (0));
            # (Line 3202) continue;
            DoActions(DisplayText("\x13\x08[ 망원경 ] \x04사거리 +0.25, 발사각 -20%", (0)))
            EUDContinue()
            # (Line 3203) }
            # (Line 3206) if(
        EUDEndIf()
        _t115 = EUDIf()
        # (Line 3207) Roulette_Sound[getcurpl()] == 56
        # (Line 3208) ){
        if _t115(Roulette_Sound[f_getcurpl()] == 56):
            # (Line 3209) Roulette_Sound[getcurpl()] = 0;
            _ARRW(Roulette_Sound, f_getcurpl()) << (0)
            # (Line 3210) PlayWAV("staredit\\wav\\legendary drop.ogg");
            # (Line 3211) }
            DoActions(PlayWAV("staredit\\wav\\legendary drop.ogg"))
            # (Line 3212) if(
        EUDEndIf()
        _t116 = EUDIf()
        # (Line 3213) RandomOption[i] == 56
        # (Line 3214) ){
        if _t116(RandomOption[i] == 56):
            # (Line 3215) DisplayText("\x13\x07[ 난사 ] \x11벌쳐가 탄환을 두 배로 발사", (0));
            # (Line 3216) continue;
            DoActions(DisplayText("\x13\x07[ 난사 ] \x11벌쳐가 탄환을 두 배로 발사", (0)))
            EUDContinue()
            # (Line 3217) }
            # (Line 3220) if(
        EUDEndIf()
        _t117 = EUDIf()
        # (Line 3221) Roulette_Sound[getcurpl()] == 57
        # (Line 3222) ){
        if _t117(Roulette_Sound[f_getcurpl()] == 57):
            # (Line 3223) Roulette_Sound[getcurpl()] = 0;
            _ARRW(Roulette_Sound, f_getcurpl()) << (0)
            # (Line 3224) PlayWAV("sound\\bullet\\psibolt.wav");
            # (Line 3225) }
            DoActions(PlayWAV("sound\\bullet\\psibolt.wav"))
            # (Line 3226) if(
        EUDEndIf()
        _t118 = EUDIf()
        # (Line 3227) RandomOption[i] == 57
        # (Line 3228) ){
        if _t118(RandomOption[i] == 57):
            # (Line 3229) DisplayText("\x13\x18[ 인터셉터 ] \x04이속 + 30%", (0));
            # (Line 3230) continue;
            DoActions(DisplayText("\x13\x18[ 인터셉터 ] \x04이속 + 30%", (0)))
            EUDContinue()
            # (Line 3231) }
            # (Line 3234) if(
        EUDEndIf()
        _t119 = EUDIf()
        # (Line 3235) Roulette_Sound[getcurpl()] == 58
        # (Line 3236) ){
        if _t119(Roulette_Sound[f_getcurpl()] == 58):
            # (Line 3237) Roulette_Sound[getcurpl()] = 0;
            _ARRW(Roulette_Sound, f_getcurpl()) << (0)
            # (Line 3238) PlayWAV("sound\\Bullet\\LASRHIT1.wav");
            # (Line 3239) }
            DoActions(PlayWAV("sound\\Bullet\\LASRHIT1.wav"))
            # (Line 3240) if(
        EUDEndIf()
        _t120 = EUDIf()
        # (Line 3241) RandomOption[i] == 58
        # (Line 3242) ){
        if _t120(RandomOption[i] == 58):
            # (Line 3243) DisplayText("\x13\x17[ 목검 ] \x1E공격력 + 7", (0));
            # (Line 3244) continue;
            DoActions(DisplayText("\x13\x17[ 목검 ] \x1E공격력 + 7", (0)))
            EUDContinue()
            # (Line 3245) }
            # (Line 3248) if(
        EUDEndIf()
        _t121 = EUDIf()
        # (Line 3249) Roulette_Sound[getcurpl()] == 59
        # (Line 3250) ){
        if _t121(Roulette_Sound[f_getcurpl()] == 59):
            # (Line 3251) Roulette_Sound[getcurpl()] = 0;
            _ARRW(Roulette_Sound, f_getcurpl()) << (0)
            # (Line 3252) PlayWAV("sound\\Bullet\\LASRHIT1.wav");
            # (Line 3253) }
            DoActions(PlayWAV("sound\\Bullet\\LASRHIT1.wav"))
            # (Line 3254) if(
        EUDEndIf()
        _t122 = EUDIf()
        # (Line 3255) RandomOption[i] == 59
        # (Line 3256) ){
        if _t122(RandomOption[i] == 59):
            # (Line 3257) DisplayText("\x13\x17[ 약골 ] \x1E체력 - 40", (0));
            # (Line 3258) continue;
            DoActions(DisplayText("\x13\x17[ 약골 ] \x1E체력 - 40", (0)))
            EUDContinue()
            # (Line 3259) }
            # (Line 3262) if(
        EUDEndIf()
        _t123 = EUDIf()
        # (Line 3263) Roulette_Sound[getcurpl()] == 60
        # (Line 3264) ){
        if _t123(Roulette_Sound[f_getcurpl()] == 60):
            # (Line 3265) Roulette_Sound[getcurpl()] = 0;
            _ARRW(Roulette_Sound, f_getcurpl()) << (0)
            # (Line 3266) PlayWAV("sound\\protoss\\archon\\parwht02.wav");
            # (Line 3267) }
            DoActions(PlayWAV("sound\\protoss\\archon\\parwht02.wav"))
            # (Line 3268) if(
        EUDEndIf()
        _t124 = EUDIf()
        # (Line 3269) RandomOption[i] == 60
        # (Line 3270) ){
        if _t124(RandomOption[i] == 60):
            # (Line 3271) DisplayText("\x13\x18[ 아칸 ] \x04체력을 모두 쉴드로 전환, 쉴드 +20%", (0));
            # (Line 3272) continue;
            DoActions(DisplayText("\x13\x18[ 아칸 ] \x04체력을 모두 쉴드로 전환, 쉴드 +20%", (0)))
            EUDContinue()
            # (Line 3273) }
            # (Line 3278) if(
        EUDEndIf()
        _t125 = EUDIf()
        # (Line 3279) Roulette_Sound[getcurpl()] == 61
        # (Line 3280) ){
        if _t125(Roulette_Sound[f_getcurpl()] == 61):
            # (Line 3281) Roulette_Sound[getcurpl()] = 0;
            _ARRW(Roulette_Sound, f_getcurpl()) << (0)
            # (Line 3282) PlayWAV("sound\\Bullet\\TNsFir00.wav");
            # (Line 3283) }
            DoActions(PlayWAV("sound\\Bullet\\TNsFir00.wav"))
            # (Line 3284) if(
        EUDEndIf()
        _t126 = EUDIf()
        # (Line 3285) RandomOption[i] == 61
        # (Line 3286) ){
        if _t126(RandomOption[i] == 61):
            # (Line 3287) DisplayText("\x13\x08[ 기마병 ] \x04사거리 +0.125, 이속 +40%", (0));
            # (Line 3288) continue;
            DoActions(DisplayText("\x13\x08[ 기마병 ] \x04사거리 +0.125, 이속 +40%", (0)))
            EUDContinue()
            # (Line 3289) }
            # (Line 3292) if(
        EUDEndIf()
        _t127 = EUDIf()
        # (Line 3293) Roulette_Sound[getcurpl()] == 62
        # (Line 3294) ){
        if _t127(Roulette_Sound[f_getcurpl()] == 62):
            # (Line 3295) Roulette_Sound[getcurpl()] = 0;
            _ARRW(Roulette_Sound, f_getcurpl()) << (0)
            # (Line 3296) PlayWAV("staredit\\wav\\UniqueDropOGG.ogg");
            # (Line 3297) }
            DoActions(PlayWAV("staredit\\wav\\UniqueDropOGG.ogg"))
            # (Line 3298) if(
        EUDEndIf()
        _t128 = EUDIf()
        # (Line 3299) RandomOption[i] == 62
        # (Line 3300) ){
        if _t128(RandomOption[i] == 62):
            # (Line 3301) DisplayText("\x13\x08[ \x04아칸 오라 \x08] \x1FF10 + J 참고", (0));
            # (Line 3302) continue;
            DoActions(DisplayText("\x13\x08[ \x04아칸 오라 \x08] \x1FF10 + J 참고", (0)))
            EUDContinue()
            # (Line 3303) }
            # (Line 3306) if(
        EUDEndIf()
        _t129 = EUDIf()
        # (Line 3307) Roulette_Sound[getcurpl()] == 63
        # (Line 3308) ){
        if _t129(Roulette_Sound[f_getcurpl()] == 63):
            # (Line 3309) Roulette_Sound[getcurpl()] = 0;
            _ARRW(Roulette_Sound, f_getcurpl()) << (0)
            # (Line 3310) PlayWAV("staredit\\wav\\UniqueDropOGG.ogg");
            # (Line 3311) }
            DoActions(PlayWAV("staredit\\wav\\UniqueDropOGG.ogg"))
            # (Line 3312) if(
        EUDEndIf()
        _t130 = EUDIf()
        # (Line 3313) RandomOption[i] == 63
        # (Line 3314) ){
        if _t130(RandomOption[i] == 63):
            # (Line 3315) DisplayText("\x13\x08[ \x04레이스 스킨 \x08] \x1FF10 + J 참고", (0));
            # (Line 3316) continue;
            DoActions(DisplayText("\x13\x08[ \x04레이스 스킨 \x08] \x1FF10 + J 참고", (0)))
            EUDContinue()
            # (Line 3317) }
            # (Line 3320) if(
        EUDEndIf()
        _t131 = EUDIf()
        # (Line 3321) Roulette_Sound[getcurpl()] == 64
        # (Line 3322) ){
        if _t131(Roulette_Sound[f_getcurpl()] == 64):
            # (Line 3323) Roulette_Sound[getcurpl()] = 0;
            _ARRW(Roulette_Sound, f_getcurpl()) << (0)
            # (Line 3324) PlayWAV("sound\\terran\\phoenix\\tphwht03.wav");
            # (Line 3325) }
            DoActions(PlayWAV("sound\\terran\\phoenix\\tphwht03.wav"))
            # (Line 3326) if(
        EUDEndIf()
        _t132 = EUDIf()
        # (Line 3327) RandomOption[i] == 64
        # (Line 3328) ){
        if _t132(RandomOption[i] == 64):
            # (Line 3329) DisplayText("\x13\x18[ 레이스 ] \x04체력 -150, 이속 +40%", (0));
            # (Line 3330) continue;
            DoActions(DisplayText("\x13\x18[ 레이스 ] \x04체력 -150, 이속 +40%", (0)))
            EUDContinue()
            # (Line 3331) }
            # (Line 3334) if(
        EUDEndIf()
        _t133 = EUDIf()
        # (Line 3335) Roulette_Sound[getcurpl()] == 65
        # (Line 3336) ){
        if _t133(Roulette_Sound[f_getcurpl()] == 65):
            # (Line 3337) Roulette_Sound[getcurpl()] = 0;
            _ARRW(Roulette_Sound, f_getcurpl()) << (0)
            # (Line 3338) PlayWAV("staredit\\wav\\UniqueDropOGG.ogg");
            # (Line 3339) }
            DoActions(PlayWAV("staredit\\wav\\UniqueDropOGG.ogg"))
            # (Line 3340) if(
        EUDEndIf()
        _t134 = EUDIf()
        # (Line 3341) RandomOption[i] == 65
        # (Line 3342) ){
        if _t134(RandomOption[i] == 65):
            # (Line 3343) DisplayText("\x13\x08[ \x04뮤탈 스킨 \x08] \x1FF10 + J 참고", (0));
            # (Line 3344) continue;
            DoActions(DisplayText("\x13\x08[ \x04뮤탈 스킨 \x08] \x1FF10 + J 참고", (0)))
            EUDContinue()
            # (Line 3345) }
            # (Line 3348) if(
        EUDEndIf()
        _t135 = EUDIf()
        # (Line 3349) Roulette_Sound[getcurpl()] == 66
        # (Line 3350) ){
        if _t135(Roulette_Sound[f_getcurpl()] == 66):
            # (Line 3351) Roulette_Sound[getcurpl()] = 0;
            _ARRW(Roulette_Sound, f_getcurpl()) << (0)
            # (Line 3352) PlayWAV("staredit\\wav\\UniqueDropOGG.ogg");
            # (Line 3353) }
            DoActions(PlayWAV("staredit\\wav\\UniqueDropOGG.ogg"))
            # (Line 3354) if(
        EUDEndIf()
        _t136 = EUDIf()
        # (Line 3355) RandomOption[i] == 66
        # (Line 3356) ){
        if _t136(RandomOption[i] == 66):
            # (Line 3357) DisplayText("\x13\x08[ \x04마엘 오라 \x08] \x1FF10 + J 참고", (0));
            # (Line 3358) continue;
            DoActions(DisplayText("\x13\x08[ \x04마엘 오라 \x08] \x1FF10 + J 참고", (0)))
            EUDContinue()
            # (Line 3359) }
            # (Line 3362) if(
        EUDEndIf()
        _t137 = EUDIf()
        # (Line 3363) Roulette_Sound[getcurpl()] == 67
        # (Line 3364) ){
        if _t137(Roulette_Sound[f_getcurpl()] == 67):
            # (Line 3365) Roulette_Sound[getcurpl()] = 0;
            _ARRW(Roulette_Sound, f_getcurpl()) << (0)
            # (Line 3366) PlayWAV("sound\\terran\\ghost\\tghyes01.wav");
            # (Line 3367) }
            DoActions(PlayWAV("sound\\terran\\ghost\\tghyes01.wav"))
            # (Line 3368) if(
        EUDEndIf()
        _t138 = EUDIf()
        # (Line 3369) RandomOption[i] == 67
        # (Line 3370) ){
        if _t138(RandomOption[i] == 67):
            # (Line 3371) DisplayText("\x13\x18[ 고스트 ] \x04체력 -150, 공 +25", (0));
            # (Line 3372) continue;
            DoActions(DisplayText("\x13\x18[ 고스트 ] \x04체력 -150, 공 +25", (0)))
            EUDContinue()
            # (Line 3373) }
            # (Line 3376) if(
        EUDEndIf()
        _t139 = EUDIf()
        # (Line 3377) Roulette_Sound[getcurpl()] == 68
        # (Line 3378) ){
        if _t139(Roulette_Sound[f_getcurpl()] == 68):
            # (Line 3379) Roulette_Sound[getcurpl()] = 0;
            _ARRW(Roulette_Sound, f_getcurpl()) << (0)
            # (Line 3380) PlayWAV("sound\\zerg\\zergling\\zzeyes00.wav");
            # (Line 3381) }
            DoActions(PlayWAV("sound\\zerg\\zergling\\zzeyes00.wav"))
            # (Line 3382) if(
        EUDEndIf()
        _t140 = EUDIf()
        # (Line 3383) RandomOption[i] == 68
        # (Line 3384) ){
        if _t140(RandomOption[i] == 68):
            # (Line 3385) DisplayText("\x13\x18[ 저글링 ] \x04공속 & 이속 +25%", (0));
            # (Line 3386) continue;
            DoActions(DisplayText("\x13\x18[ 저글링 ] \x04공속 & 이속 +25%", (0)))
            EUDContinue()
            # (Line 3387) }
            # (Line 3390) if(
        EUDEndIf()
        _t141 = EUDIf()
        # (Line 3391) Roulette_Sound[getcurpl()] == 69
        # (Line 3392) ){
        if _t141(Roulette_Sound[f_getcurpl()] == 69):
            # (Line 3393) Roulette_Sound[getcurpl()] = 0;
            _ARRW(Roulette_Sound, f_getcurpl()) << (0)
            # (Line 3394) PlayWAV("staredit\\wav\\power up.ogg");
            # (Line 3395) }
            DoActions(PlayWAV("staredit\\wav\\power up.ogg"))
            # (Line 3396) if(
        EUDEndIf()
        _t142 = EUDIf()
        # (Line 3397) RandomOption[i] == 69
        # (Line 3398) ){
        if _t142(RandomOption[i] == 69):
            # (Line 3399) DisplayText("\x13\x1F[ Lv+4 ] \x04공 +25, 체 +150, 이속 +45%, 방+2", (0));
            # (Line 3400) continue;
            DoActions(DisplayText("\x13\x1F[ Lv+4 ] \x04공 +25, 체 +150, 이속 +45%, 방+2", (0)))
            EUDContinue()
            # (Line 3401) }
            # (Line 3404) if(
        EUDEndIf()
        _t143 = EUDIf()
        # (Line 3405) Roulette_Sound[getcurpl()] == 70
        # (Line 3406) ){
        if _t143(Roulette_Sound[f_getcurpl()] == 70):
            # (Line 3407) Roulette_Sound[getcurpl()] = 0;
            _ARRW(Roulette_Sound, f_getcurpl()) << (0)
            # (Line 3408) PlayWAV("sound\\Bullet\\LASRHIT1.wav");
            # (Line 3409) }
            DoActions(PlayWAV("sound\\Bullet\\LASRHIT1.wav"))
            # (Line 3410) if(
        EUDEndIf()
        _t144 = EUDIf()
        # (Line 3411) RandomOption[i] == 70
        # (Line 3412) ){
        if _t144(RandomOption[i] == 70):
            # (Line 3413) DisplayText("\x13\x17[ 물주먹 ] \x1E공격력 - 5", (0));
            # (Line 3414) continue;
            DoActions(DisplayText("\x13\x17[ 물주먹 ] \x1E공격력 - 5", (0)))
            EUDContinue()
            # (Line 3415) }
            # (Line 3418) if(
        EUDEndIf()
        _t145 = EUDIf()
        # (Line 3419) Roulette_Sound[getcurpl()] == 71
        # (Line 3420) ){
        if _t145(Roulette_Sound[f_getcurpl()] == 71):
            # (Line 3421) Roulette_Sound[getcurpl()] = 0;
            _ARRW(Roulette_Sound, f_getcurpl()) << (0)
            # (Line 3422) PlayWAV("sound\\zerg\\drone\\zdrwht04.wav");
            # (Line 3423) }
            DoActions(PlayWAV("sound\\zerg\\drone\\zdrwht04.wav"))
            # (Line 3424) if(
        EUDEndIf()
        _t146 = EUDIf()
        # (Line 3425) RandomOption[i] == 71
        # (Line 3426) ){
        if _t146(RandomOption[i] == 71):
            # (Line 3427) DisplayText("\x13\x18[ 드론 ] \x04체력 -50%, 방어 5 고정", (0));
            # (Line 3428) continue;
            DoActions(DisplayText("\x13\x18[ 드론 ] \x04체력 -50%, 방어 5 고정", (0)))
            EUDContinue()
            # (Line 3429) }
            # (Line 3432) if(
        EUDEndIf()
        _t147 = EUDIf()
        # (Line 3433) Roulette_Sound[getcurpl()] == 72
        # (Line 3434) ){
        if _t147(Roulette_Sound[f_getcurpl()] == 72):
            # (Line 3435) Roulette_Sound[getcurpl()] = 0;
            _ARRW(Roulette_Sound, f_getcurpl()) << (0)
            # (Line 3436) PlayWAV("sound\\protoss\\scout\\pscwht02.wav");
            # (Line 3437) }
            DoActions(PlayWAV("sound\\protoss\\scout\\pscwht02.wav"))
            # (Line 3438) if(
        EUDEndIf()
        _t148 = EUDIf()
        # (Line 3439) RandomOption[i] == 72
        # (Line 3440) ){
        if _t148(RandomOption[i] == 72):
            # (Line 3441) DisplayText("\x13\x18[ 스카웃 ] \x04이속 +30%, 쉴드 +100", (0));
            # (Line 3442) continue;
            DoActions(DisplayText("\x13\x18[ 스카웃 ] \x04이속 +30%, 쉴드 +100", (0)))
            EUDContinue()
            # (Line 3443) }
            # (Line 3446) if(
        EUDEndIf()
        _t149 = EUDIf()
        # (Line 3447) Roulette_Sound[getcurpl()] == 73
        # (Line 3448) ){
        if _t149(Roulette_Sound[f_getcurpl()] == 73):
            # (Line 3449) Roulette_Sound[getcurpl()] = 0;
            _ARRW(Roulette_Sound, f_getcurpl()) << (0)
            # (Line 3450) PlayWAV("sound\\zerg\\mutalid\\zmupss00.wav");
            # (Line 3451) PlayWAV("sound\\zerg\\mutalid\\zmupss01.wav");
            DoActions(PlayWAV("sound\\zerg\\mutalid\\zmupss00.wav"))
            # (Line 3452) }
            DoActions(PlayWAV("sound\\zerg\\mutalid\\zmupss01.wav"))
            # (Line 3453) if(
        EUDEndIf()
        _t150 = EUDIf()
        # (Line 3454) RandomOption[i] == 73
        # (Line 3455) ){
        if _t150(RandomOption[i] == 73):
            # (Line 3456) DisplayText("\x13\x08{ \x1F쿠쿨자 \x08} \x11방어 1 고정, 피 회복 +6/s, 공 +30", (0));
            # (Line 3457) continue;
            DoActions(DisplayText("\x13\x08{ \x1F쿠쿨자 \x08} \x11방어 1 고정, 피 회복 +6/s, 공 +30", (0)))
            EUDContinue()
            # (Line 3458) }
            # (Line 3461) if(
        EUDEndIf()
        _t151 = EUDIf()
        # (Line 3462) Roulette_Sound[getcurpl()] == 74
        # (Line 3463) ){
        if _t151(Roulette_Sound[f_getcurpl()] == 74):
            # (Line 3464) Roulette_Sound[getcurpl()] = 0;
            _ARRW(Roulette_Sound, f_getcurpl()) << (0)
            # (Line 3465) PlayWAV("sound\\protoss\\artanis\\patwht00.wav");
            # (Line 3466) }
            DoActions(PlayWAV("sound\\protoss\\artanis\\patwht00.wav"))
            # (Line 3467) if(
        EUDEndIf()
        _t152 = EUDIf()
        # (Line 3468) RandomOption[i] == 74
        # (Line 3469) ){
        if _t152(RandomOption[i] == 74):
            # (Line 3470) DisplayText("\x13\x08{ \x1F아르타니스 \x08} \x11이속 +45%, 쉴드 +150, 사거리 +0.125", (0));
            # (Line 3471) continue;
            DoActions(DisplayText("\x13\x08{ \x1F아르타니스 \x08} \x11이속 +45%, 쉴드 +150, 사거리 +0.125", (0)))
            EUDContinue()
            # (Line 3472) }
            # (Line 3475) if(
        EUDEndIf()
        _t153 = EUDIf()
        # (Line 3476) Roulette_Sound[getcurpl()] == 75
        # (Line 3477) ){
        if _t153(Roulette_Sound[f_getcurpl()] == 75):
            # (Line 3478) Roulette_Sound[getcurpl()] = 0;
            _ARRW(Roulette_Sound, f_getcurpl()) << (0)
            # (Line 3479) PlayWAV("staredit\\wav\\ang.ogg");
            # (Line 3480) }
            DoActions(PlayWAV("staredit\\wav\\ang.ogg"))
            # (Line 3481) if(
        EUDEndIf()
        _t154 = EUDIf()
        # (Line 3482) RandomOption[i] == 75
        # (Line 3483) ){
        if _t154(RandomOption[i] == 75):
            # (Line 3484) DisplayText("\x13\x08{ \x1F형님 \x08} \x11이속 +40%, 공격력 +50%, 2회 타격", (0));
            # (Line 3485) continue;
            DoActions(DisplayText("\x13\x08{ \x1F형님 \x08} \x11이속 +40%, 공격력 +50%, 2회 타격", (0)))
            EUDContinue()
            # (Line 3486) }
            # (Line 3489) if(
        EUDEndIf()
        _t155 = EUDIf()
        # (Line 3490) Roulette_Sound[getcurpl()] == 76
        # (Line 3491) ){
        if _t155(Roulette_Sound[f_getcurpl()] == 76):
            # (Line 3492) Roulette_Sound[getcurpl()] = 0;
            _ARRW(Roulette_Sound, f_getcurpl()) << (0)
            # (Line 3493) PlayWAV("sound\\Bullet\\TNsFir00.wav");
            # (Line 3494) }
            DoActions(PlayWAV("sound\\Bullet\\TNsFir00.wav"))
            # (Line 3495) if(
        EUDEndIf()
        _t156 = EUDIf()
        # (Line 3496) RandomOption[i] == 76
        # (Line 3497) ){
        if _t156(RandomOption[i] == 76):
            # (Line 3498) DisplayText("\x13\x08[ 광폭 ] \x04방어 -3, 공격력 +70%", (0));
            # (Line 3499) continue;
            DoActions(DisplayText("\x13\x08[ 광폭 ] \x04방어 -3, 공격력 +70%", (0)))
            EUDContinue()
            # (Line 3500) }
            # (Line 3503) if(
        EUDEndIf()
        _t157 = EUDIf()
        # (Line 3504) Roulette_Sound[getcurpl()] == 77
        # (Line 3505) ){
        if _t157(Roulette_Sound[f_getcurpl()] == 77):
            # (Line 3506) Roulette_Sound[getcurpl()] = 0;
            _ARRW(Roulette_Sound, f_getcurpl()) << (0)
            # (Line 3507) PlayWAV("sound\\terran\\phoenix\\tphpss04.wav");
            # (Line 3508) }
            DoActions(PlayWAV("sound\\terran\\phoenix\\tphpss04.wav"))
            # (Line 3509) if(
        EUDEndIf()
        _t158 = EUDIf()
        # (Line 3510) RandomOption[i] == 77
        # (Line 3511) ){
        if _t158(RandomOption[i] == 77):
            # (Line 3512) DisplayText("\x13\x08{ \x1F톰 카잔스키 \x08} \x11이속 +70%, 공 +30, 체력 -10%", (0));
            # (Line 3513) continue;
            DoActions(DisplayText("\x13\x08{ \x1F톰 카잔스키 \x08} \x11이속 +70%, 공 +30, 체력 -10%", (0)))
            EUDContinue()
            # (Line 3514) }
            # (Line 3517) if(
        EUDEndIf()
        _t159 = EUDIf()
        # (Line 3518) Roulette_Sound[getcurpl()] == 78
        # (Line 3519) ){
        if _t159(Roulette_Sound[f_getcurpl()] == 78):
            # (Line 3520) Roulette_Sound[getcurpl()] = 0;
            _ARRW(Roulette_Sound, f_getcurpl()) << (0)
            # (Line 3521) PlayWAV("sound\\Bullet\\TNsFir00.wav");
            # (Line 3522) }
            DoActions(PlayWAV("sound\\Bullet\\TNsFir00.wav"))
            # (Line 3523) if(
        EUDEndIf()
        _t160 = EUDIf()
        # (Line 3524) RandomOption[i] == 78
        # (Line 3525) ){
        if _t160(RandomOption[i] == 78):
            # (Line 3526) DisplayText("\x13\x08[ 보험 ] \x04체력 -25%, 쉴드 +75%", (0));
            # (Line 3527) continue;
            DoActions(DisplayText("\x13\x08[ 보험 ] \x04체력 -25%, 쉴드 +75%", (0)))
            EUDContinue()
            # (Line 3528) }
            # (Line 3531) if(
        EUDEndIf()
        _t161 = EUDIf()
        # (Line 3532) Roulette_Sound[getcurpl()] == 79
        # (Line 3533) ){
        if _t161(Roulette_Sound[f_getcurpl()] == 79):
            # (Line 3534) Roulette_Sound[getcurpl()] = 0;
            _ARRW(Roulette_Sound, f_getcurpl()) << (0)
            # (Line 3535) PlayWAV("sound\\Bullet\\TTaFi200.wav");
            # (Line 3536) }
            DoActions(PlayWAV("sound\\Bullet\\TTaFi200.wav"))
            # (Line 3537) if(
        EUDEndIf()
        _t162 = EUDIf()
        # (Line 3538) RandomOption[i] == 79
        # (Line 3539) ){
        if _t162(RandomOption[i] == 79):
            # (Line 3540) DisplayText("\x13\x11[ 가시 ] \x04공 + 15, 공 + 10%", (0));
            # (Line 3541) continue;
            DoActions(DisplayText("\x13\x11[ 가시 ] \x04공 + 15, 공 + 10%", (0)))
            EUDContinue()
            # (Line 3542) }
            # (Line 3545) }
        EUDEndIf()
        # (Line 3546) }
        EUDSetContinuePoint()
        _t2()
    EUDEndWhile()
    # (Line 3547) function RewardDescribe() {

@EUDFunc
def RewardDescribe():
    # (Line 3550) if(
    _t1 = EUDIf()
    # (Line 3551) RewardOption == 0
    # (Line 3552) ){
    if _t1(RewardOption == 0):
        # (Line 3553) DisplayText(" ", (0));
        # (Line 3554) }
        DoActions(DisplayText(" ", (0)))
        # (Line 3557) if(
    EUDEndIf()
    _t2 = EUDIf()
    # (Line 3558) Reward_Sound[getcurpl()] == 1
    # (Line 3559) ){
    if _t2(Reward_Sound[f_getcurpl()] == 1):
        # (Line 3560) Reward_Sound[getcurpl()] = 0;
        _ARRW(Reward_Sound, f_getcurpl()) << (0)
        # (Line 3561) PlayWAV("staredit\\wav\\legendary drop.ogg");
        # (Line 3562) }
        DoActions(PlayWAV("staredit\\wav\\legendary drop.ogg"))
        # (Line 3563) if(
    EUDEndIf()
    _t3 = EUDIf()
    # (Line 3564) RewardOption == 1
    # (Line 3565) ){
    if _t3(RewardOption == 1):
        # (Line 3566) DisplayText("\x13\x07[ 작은 행운 ] \x11스킨/오라 등장확률 + 5% \x04(영구)", (0));
        # (Line 3567) }
        DoActions(DisplayText("\x13\x07[ 작은 행운 ] \x11스킨/오라 등장확률 + 5% \x04(영구)", (0)))
        # (Line 3570) if(
    EUDEndIf()
    _t4 = EUDIf()
    # (Line 3571) Reward_Sound[getcurpl()] == 2
    # (Line 3572) ){
    if _t4(Reward_Sound[f_getcurpl()] == 2):
        # (Line 3573) Reward_Sound[getcurpl()] = 0;
        _ARRW(Reward_Sound, f_getcurpl()) << (0)
        # (Line 3574) PlayWAV("staredit\\wav\\legendary drop.ogg");
        # (Line 3575) }
        DoActions(PlayWAV("staredit\\wav\\legendary drop.ogg"))
        # (Line 3576) if(
    EUDEndIf()
    _t5 = EUDIf()
    # (Line 3577) RewardOption == 2
    # (Line 3578) ){
    if _t5(RewardOption == 2):
        # (Line 3579) DisplayText("\x13\x07[ 행운 ] \x11스킨/오라 등장확률 + 10% \x04(영구)", (0));
        # (Line 3580) }
        DoActions(DisplayText("\x13\x07[ 행운 ] \x11스킨/오라 등장확률 + 10% \x04(영구)", (0)))
        # (Line 3583) if(
    EUDEndIf()
    _t6 = EUDIf()
    # (Line 3584) Reward_Sound[getcurpl()] == 3
    # (Line 3585) ){
    if _t6(Reward_Sound[f_getcurpl()] == 3):
        # (Line 3586) Reward_Sound[getcurpl()] = 0;
        _ARRW(Reward_Sound, f_getcurpl()) << (0)
        # (Line 3587) PlayWAV("staredit\\wav\\legendary drop.ogg");
        # (Line 3588) }
        DoActions(PlayWAV("staredit\\wav\\legendary drop.ogg"))
        # (Line 3589) if(
    EUDEndIf()
    _t7 = EUDIf()
    # (Line 3590) RewardOption == 3
    # (Line 3591) ){
    if _t7(RewardOption == 3):
        # (Line 3592) DisplayText("\x13\x07[ 용접 ] \x11벌쳐 체력 + 50 \x04(1회)", (0));
        # (Line 3593) }
        DoActions(DisplayText("\x13\x07[ 용접 ] \x11벌쳐 체력 + 50 \x04(1회)", (0)))
        # (Line 3596) if(
    EUDEndIf()
    _t8 = EUDIf()
    # (Line 3597) Reward_Sound[getcurpl()] == 4
    # (Line 3598) ){
    if _t8(Reward_Sound[f_getcurpl()] == 4):
        # (Line 3599) Reward_Sound[getcurpl()] = 0;
        _ARRW(Reward_Sound, f_getcurpl()) << (0)
        # (Line 3600) PlayWAV("staredit\\wav\\legendary drop.ogg");
        # (Line 3601) }
        DoActions(PlayWAV("staredit\\wav\\legendary drop.ogg"))
        # (Line 3602) if(
    EUDEndIf()
    _t9 = EUDIf()
    # (Line 3603) RewardOption == 4
    # (Line 3604) ){
    if _t9(RewardOption == 4):
        # (Line 3605) DisplayText("\x13\x07[ 합금 ] \x11벌쳐 체력 + 100 \x04(1회)", (0));
        # (Line 3606) }
        DoActions(DisplayText("\x13\x07[ 합금 ] \x11벌쳐 체력 + 100 \x04(1회)", (0)))
        # (Line 3609) if(
    EUDEndIf()
    _t10 = EUDIf()
    # (Line 3610) Reward_Sound[getcurpl()] == 5
    # (Line 3611) ){
    if _t10(Reward_Sound[f_getcurpl()] == 5):
        # (Line 3612) Reward_Sound[getcurpl()] = 0;
        _ARRW(Reward_Sound, f_getcurpl()) << (0)
        # (Line 3613) PlayWAV("staredit\\wav\\legendary drop.ogg");
        # (Line 3614) }
        DoActions(PlayWAV("staredit\\wav\\legendary drop.ogg"))
        # (Line 3615) if(
    EUDEndIf()
    _t11 = EUDIf()
    # (Line 3616) RewardOption == 5
    # (Line 3617) ){
    if _t11(RewardOption == 5):
        # (Line 3618) DisplayText("\x13\x07[ 총기 개조 ] \x11벌쳐 공격력 + 5 \x04(2회)", (0));
        # (Line 3619) }
        DoActions(DisplayText("\x13\x07[ 총기 개조 ] \x11벌쳐 공격력 + 5 \x04(2회)", (0)))
        # (Line 3622) if(
    EUDEndIf()
    _t12 = EUDIf()
    # (Line 3623) Reward_Sound[getcurpl()] == 6
    # (Line 3624) ){
    if _t12(Reward_Sound[f_getcurpl()] == 6):
        # (Line 3625) Reward_Sound[getcurpl()] = 0;
        _ARRW(Reward_Sound, f_getcurpl()) << (0)
        # (Line 3626) PlayWAV("staredit\\wav\\legendary drop.ogg");
        # (Line 3627) }
        DoActions(PlayWAV("staredit\\wav\\legendary drop.ogg"))
        # (Line 3628) if(
    EUDEndIf()
    _t13 = EUDIf()
    # (Line 3629) RewardOption == 6
    # (Line 3630) ){
    if _t13(RewardOption == 6):
        # (Line 3631) DisplayText("\x13\x07[ 팔라딘 ] \x11벌쳐 체력 + 25 \x04(3회)", (0));
        # (Line 3632) }
        DoActions(DisplayText("\x13\x07[ 팔라딘 ] \x11벌쳐 체력 + 25 \x04(3회)", (0)))
        # (Line 3635) if(
    EUDEndIf()
    _t14 = EUDIf()
    # (Line 3636) Reward_Sound[getcurpl()] == 7
    # (Line 3637) ){
    if _t14(Reward_Sound[f_getcurpl()] == 7):
        # (Line 3638) Reward_Sound[getcurpl()] = 0;
        _ARRW(Reward_Sound, f_getcurpl()) << (0)
        # (Line 3639) PlayWAV("staredit\\wav\\legendary drop.ogg");
        # (Line 3640) }
        DoActions(PlayWAV("staredit\\wav\\legendary drop.ogg"))
        # (Line 3641) if(
    EUDEndIf()
    _t15 = EUDIf()
    # (Line 3642) RewardOption == 7
    # (Line 3643) ){
    if _t15(RewardOption == 7):
        # (Line 3644) DisplayText("\x13\x07[ 약화 ] \x11적 체력 - 20% \x04(3회)", (0));
        # (Line 3645) }
        DoActions(DisplayText("\x13\x07[ 약화 ] \x11적 체력 - 20% \x04(3회)", (0)))
        # (Line 3648) if(
    EUDEndIf()
    _t16 = EUDIf()
    # (Line 3649) Reward_Sound[getcurpl()] == 8
    # (Line 3650) ){
    if _t16(Reward_Sound[f_getcurpl()] == 8):
        # (Line 3651) Reward_Sound[getcurpl()] = 0;
        _ARRW(Reward_Sound, f_getcurpl()) << (0)
        # (Line 3652) PlayWAV("staredit\\wav\\legendary drop.ogg");
        # (Line 3653) }
        DoActions(PlayWAV("staredit\\wav\\legendary drop.ogg"))
        # (Line 3654) if(
    EUDEndIf()
    _t17 = EUDIf()
    # (Line 3655) RewardOption == 8
    # (Line 3656) ){
    if _t17(RewardOption == 8):
        # (Line 3657) DisplayText("\x13\x07[ 잔상 ] \x11적 공격력 - 30% \x04(2회)", (0));
        # (Line 3658) }
        DoActions(DisplayText("\x13\x07[ 잔상 ] \x11적 공격력 - 30% \x04(2회)", (0)))
        # (Line 3661) if(
    EUDEndIf()
    _t18 = EUDIf()
    # (Line 3662) Reward_Sound[getcurpl()] == 9
    # (Line 3663) ){
    if _t18(Reward_Sound[f_getcurpl()] == 9):
        # (Line 3664) Reward_Sound[getcurpl()] = 0;
        _ARRW(Reward_Sound, f_getcurpl()) << (0)
        # (Line 3665) PlayWAV("staredit\\wav\\UniqueDropOGG.ogg");
        # (Line 3666) }
        DoActions(PlayWAV("staredit\\wav\\UniqueDropOGG.ogg"))
        # (Line 3667) if(
    EUDEndIf()
    _t19 = EUDIf()
    # (Line 3668) RewardOption == 9
    # (Line 3669) ){
    if _t19(RewardOption == 9):
        # (Line 3670) DisplayText("\x13\x08[ \x04글레이브 웜 \x08] \x1FF10 + J 참고", (0));
        # (Line 3671) }
        DoActions(DisplayText("\x13\x08[ \x04글레이브 웜 \x08] \x1FF10 + J 참고", (0)))
        # (Line 3674) if(
    EUDEndIf()
    _t20 = EUDIf()
    # (Line 3675) Reward_Sound[getcurpl()] == 10
    # (Line 3676) ){
    if _t20(Reward_Sound[f_getcurpl()] == 10):
        # (Line 3677) Reward_Sound[getcurpl()] = 0;
        _ARRW(Reward_Sound, f_getcurpl()) << (0)
        # (Line 3678) PlayWAV("staredit\\wav\\legendary drop.ogg");
        # (Line 3679) }
        DoActions(PlayWAV("staredit\\wav\\legendary drop.ogg"))
        # (Line 3680) if(
    EUDEndIf()
    _t21 = EUDIf()
    # (Line 3681) RewardOption == 10
    # (Line 3682) ){
    if _t21(RewardOption == 10):
        # (Line 3683) DisplayText("\x13\x07[ 강화탄 ] \x11벌쳐 공격력 + 7 \x04(1회)", (0));
        # (Line 3684) }
        DoActions(DisplayText("\x13\x07[ 강화탄 ] \x11벌쳐 공격력 + 7 \x04(1회)", (0)))
        # (Line 3687) if(
    EUDEndIf()
    _t22 = EUDIf()
    # (Line 3688) Reward_Sound[getcurpl()] == 11
    # (Line 3689) ){
    if _t22(Reward_Sound[f_getcurpl()] == 11):
        # (Line 3690) Reward_Sound[getcurpl()] = 0;
        _ARRW(Reward_Sound, f_getcurpl()) << (0)
        # (Line 3691) PlayWAV("staredit\\wav\\UniqueDropOGG.ogg");
        # (Line 3692) }
        DoActions(PlayWAV("staredit\\wav\\UniqueDropOGG.ogg"))
        # (Line 3693) if(
    EUDEndIf()
    _t23 = EUDIf()
    # (Line 3694) RewardOption == 11
    # (Line 3695) ){
    if _t23(RewardOption == 11):
        # (Line 3696) DisplayText("\x13\x08[ \x04펄스 캐넌 \x08] \x1FF10 + J 참고", (0));
        # (Line 3697) }
        DoActions(DisplayText("\x13\x08[ \x04펄스 캐넌 \x08] \x1FF10 + J 참고", (0)))
        # (Line 3700) if(
    EUDEndIf()
    _t24 = EUDIf()
    # (Line 3701) Reward_Sound[getcurpl()] == 12
    # (Line 3702) ){
    if _t24(Reward_Sound[f_getcurpl()] == 12):
        # (Line 3703) Reward_Sound[getcurpl()] = 0;
        _ARRW(Reward_Sound, f_getcurpl()) << (0)
        # (Line 3704) PlayWAV("staredit\\wav\\legendary drop.ogg");
        # (Line 3705) }
        DoActions(PlayWAV("staredit\\wav\\legendary drop.ogg"))
        # (Line 3706) if(
    EUDEndIf()
    _t25 = EUDIf()
    # (Line 3707) RewardOption == 12
    # (Line 3708) ){
    if _t25(RewardOption == 12):
        # (Line 3709) DisplayText("\x13\x07[ 일격 ] \x11벌쳐 공격력 + 15 \x04(1회)", (0));
        # (Line 3710) }
        DoActions(DisplayText("\x13\x07[ 일격 ] \x11벌쳐 공격력 + 15 \x04(1회)", (0)))
        # (Line 3713) if(
    EUDEndIf()
    _t26 = EUDIf()
    # (Line 3714) Reward_Sound[getcurpl()] == 13
    # (Line 3715) ){
    if _t26(Reward_Sound[f_getcurpl()] == 13):
        # (Line 3716) Reward_Sound[getcurpl()] = 0;
        _ARRW(Reward_Sound, f_getcurpl()) << (0)
        # (Line 3717) PlayWAV("staredit\\wav\\legendary drop.ogg");
        # (Line 3718) }
        DoActions(PlayWAV("staredit\\wav\\legendary drop.ogg"))
        # (Line 3719) if(
    EUDEndIf()
    _t27 = EUDIf()
    # (Line 3720) RewardOption == 13
    # (Line 3721) ){
    if _t27(RewardOption == 13):
        # (Line 3722) DisplayText("\x13\x07[ 네잎클로버 ] \x11스킨/오라 등장확률 + 20% \x04(영구)", (0));
        # (Line 3723) }
        DoActions(DisplayText("\x13\x07[ 네잎클로버 ] \x11스킨/오라 등장확률 + 20% \x04(영구)", (0)))
        # (Line 3726) if(
    EUDEndIf()
    _t28 = EUDIf()
    # (Line 3727) Reward_Sound[getcurpl()] == 14
    # (Line 3728) ){
    if _t28(Reward_Sound[f_getcurpl()] == 14):
        # (Line 3729) Reward_Sound[getcurpl()] = 0;
        _ARRW(Reward_Sound, f_getcurpl()) << (0)
        # (Line 3730) PlayWAV("staredit\\wav\\legendary drop.ogg");
        # (Line 3731) }
        DoActions(PlayWAV("staredit\\wav\\legendary drop.ogg"))
        # (Line 3732) if(
    EUDEndIf()
    _t29 = EUDIf()
    # (Line 3733) RewardOption == 14
    # (Line 3734) ){
    if _t29(RewardOption == 14):
        # (Line 3735) DisplayText("\x13\x07[ 티켓 ] \x11룰렛 초기화 기회 + 1", (0));
        # (Line 3736) }
        DoActions(DisplayText("\x13\x07[ 티켓 ] \x11룰렛 초기화 기회 + 1", (0)))
        # (Line 3739) if(
    EUDEndIf()
    _t30 = EUDIf()
    # (Line 3740) Reward_Sound[getcurpl()] == 15
    # (Line 3741) ){
    if _t30(Reward_Sound[f_getcurpl()] == 15):
        # (Line 3742) Reward_Sound[getcurpl()] = 0;
        _ARRW(Reward_Sound, f_getcurpl()) << (0)
        # (Line 3743) PlayWAV("staredit\\wav\\UniqueDropOGG.ogg");
        # (Line 3744) }
        DoActions(PlayWAV("staredit\\wav\\UniqueDropOGG.ogg"))
        # (Line 3745) if(
    EUDEndIf()
    _t31 = EUDIf()
    # (Line 3746) RewardOption == 15
    # (Line 3747) ){
    if _t31(RewardOption == 15):
        # (Line 3748) DisplayText("\x13\x08[ \x04버스트 레이저 \x08] \x1FF10 + J 참고", (0));
        # (Line 3749) }
        DoActions(DisplayText("\x13\x08[ \x04버스트 레이저 \x08] \x1FF10 + J 참고", (0)))
        # (Line 3752) }
    EUDEndIf()
    # (Line 3754) function ClassicTriggerExec() {

@EUDFunc
def ClassicTriggerExec():
    # (Line 3755) }
    # (Line 3756) function ClassicTriggerStarter() {
    pass

@EUDFunc
def ClassicTriggerStarter():
    # (Line 3758) if (playerexist(0)){
    if EUDIf()(f_playerexist(0)):
        # (Line 3759) setcurpl(0);
        f_setcurpl(0)
        # (Line 3760) }
        # (Line 3762) if (playerexist(1)){
    EUDEndIf()
    if EUDIf()(f_playerexist(1)):
        # (Line 3763) setcurpl(1);
        f_setcurpl(1)
        # (Line 3764) }
        # (Line 3766) if (playerexist(2)){
    EUDEndIf()
    if EUDIf()(f_playerexist(2)):
        # (Line 3767) setcurpl(2);
        f_setcurpl(2)
        # (Line 3768) }
        # (Line 3770) if (playerexist(3)){
    EUDEndIf()
    if EUDIf()(f_playerexist(3)):
        # (Line 3771) setcurpl(3);
        f_setcurpl(3)
        # (Line 3772) }
        # (Line 3774) if (playerexist(4)){
    EUDEndIf()
    if EUDIf()(f_playerexist(4)):
        # (Line 3775) setcurpl(4);
        f_setcurpl(4)
        # (Line 3776) }
        # (Line 3778) if (playerexist(5)){
    EUDEndIf()
    if EUDIf()(f_playerexist(5)):
        # (Line 3779) setcurpl(5);
        f_setcurpl(5)
        # (Line 3780) }
        # (Line 3782) if (playerexist(6)){
    EUDEndIf()
    if EUDIf()(f_playerexist(6)):
        # (Line 3783) setcurpl(6);
        f_setcurpl(6)
        # (Line 3784) }
        # (Line 3786) if (playerexist(7)){
    EUDEndIf()
    if EUDIf()(f_playerexist(7)):
        # (Line 3787) setcurpl(7);
        f_setcurpl(7)
        # (Line 3788) }
        # (Line 3789) }
    EUDEndIf()
    # (Line 3790) function WaitableTriggerExec() {

@EUDFunc
def WaitableTriggerExec():
    # (Line 3791) }
    # (Line 3792) function onPluginStart() {
    pass

@EUDFunc
def onPluginStart():
    # (Line 3793) sca.Init();
    sca.Init()
    # (Line 3794) randomize();
    f_randomize()
    # (Line 3796) OptionCount = 78;
    OptionCount << (78)
    # (Line 3797) RewardCount = 14;
    RewardCount << (14)
    # (Line 3800) auralist.auralists();
    auralist.f_auralists()
    # (Line 3803) EUDPlayerLoop()();
    EUDPlayerLoop()()
    # (Line 3804) if (getcurpl() == 0) {
    if EUDIf()(f_getcurpl() == 0):
        # (Line 3805) MachineShop[getcurpl()] = epdread_epd(EPD(0x628438));
        _ARRW(MachineShop, f_getcurpl()) << (f_epdread_epd(EPD(0x628438)))
        # (Line 3806) CreateUnitWithProperties(1, (120), (53), (13), UnitProperty(hitpoint = 100, shield = 100, energy = 50, resource = 0, hanger = 0, cloaked = False, burrowed = False, intransit = False, hallucinated = False, invincible = True));
        # (Line 3807) hotkeyUnitEPD(MachineShop[getcurpl()],getcurpl(),2,0);
        DoActions(CreateUnitWithProperties(1, (120), (53), (13), UnitProperty(hitpoint=100, shield=100, energy=50, resource=0, hanger=0, cloaked=False, burrowed=False, intransit=False, hallucinated=False, invincible=True)))
        f_hotkeyUnitEPD(MachineShop[f_getcurpl()], f_getcurpl(), 2, 0)
        # (Line 3808) hotkeyUnitEPD(MachineShop[getcurpl()],getcurpl(),3,0);
        f_hotkeyUnitEPD(MachineShop[f_getcurpl()], f_getcurpl(), 3, 0)
        # (Line 3809) }
        # (Line 3810) EUDEndPlayerLoop();
    EUDEndIf()
    EUDEndPlayerLoop()
    # (Line 3813) EUDPlayerLoop()();
    EUDPlayerLoop()()
    # (Line 3814) if (getcurpl() == 0 || getcurpl() == 1 || getcurpl() == 2 || getcurpl() == 3 || getcurpl() == 4 || getcurpl() == 5) {
    if EUDIf()(EUDSCOr()(f_getcurpl() == 0)(f_getcurpl() == 1)(f_getcurpl() == 2)(f_getcurpl() == 3)(f_getcurpl() == 4)(f_getcurpl() == 5)()):
        # (Line 3815) Vulture_Booster[getcurpl()] = 1;
        _ARRW(Vulture_Booster, f_getcurpl()) << (1)
        # (Line 3816) }
        # (Line 3817) EUDEndPlayerLoop();
    EUDEndIf()
    EUDEndPlayerLoop()
    # (Line 3820) bwrite(0x666778 + 14000 + 256 * 1, 10);
    f_bwrite(0x666778 + 14000 + 256 * 1, 10)
    # (Line 3821) dwwrite(0x666778 + 34000 + 256 * 4, 362);
    f_dwwrite(0x666778 + 34000 + 256 * 4, 362)
    # (Line 3822) SkinBlackVulture = epdread_epd(EPD(0x628438));
    SkinBlackVulture << (f_epdread_epd(EPD(0x628438)))
    # (Line 3823) CreateUnit(1, (167), (26), (7));
    # (Line 3824) bwrite(0x666778 + 14000 + 256 * 1, 0);
    DoActions(CreateUnit(1, (167), (26), (7)))
    f_bwrite(0x666778 + 14000 + 256 * 1, 0)
    # (Line 3825) dwwrite(0x666778 + 34000 + 256 * 4, 86);
    f_dwwrite(0x666778 + 34000 + 256 * 4, 86)
    # (Line 3826) 팔레트(7,928,25);
    f_팔레트(7, 928, 25)
    # (Line 3827) bwrite(0x666778 + 14000 + 928 * 1, 16);
    f_bwrite(0x666778 + 14000 + 928 * 1, 16)
    # (Line 3828) dwwrite(0x666778 + 34000 + 928 * 4, 368);
    f_dwwrite(0x666778 + 34000 + 928 * 4, 368)
    # (Line 3829) if(
    _t3 = EUDIf()
    # (Line 3830) Bring((7), (0), 1, (167), (64))
    # (Line 3831) ){
    if _t3(Bring((7), (0), 1, (167), (64))):
        # (Line 3832) if(
        _t4 = EUDIf()
        # (Line 3833) SkinBlackVulture == EPD(0x59CCA8)
        # (Line 3834) ){
        if _t4(SkinBlackVulture == EPD(0x59CCA8)):
            # (Line 3835) BlackVultureIndex = 0;
            BlackVultureIndex << (0)
            # (Line 3836) }
            # (Line 3837) else{
        if EUDElse()():
            # (Line 3838) BlackVultureIndex = (EPD(0x628298) - SkinBlackVulture)/84;
            BlackVultureIndex << ((EPD(0x628298) - SkinBlackVulture) // 84)
            # (Line 3839) }
            # (Line 3840) }
        EUDEndIf()
        # (Line 3843) bwrite(0x666778 + 14000 + 256 * 1, 0);
    EUDEndIf()
    f_bwrite(0x666778 + 14000 + 256 * 1, 0)
    # (Line 3844) dwwrite(0x666778 + 34000 + 256 * 4, 86);
    f_dwwrite(0x666778 + 34000 + 256 * 4, 86)
    # (Line 3845) SkinRainbow = epdread_epd(EPD(0x628438));
    SkinRainbow << (f_epdread_epd(EPD(0x628438)))
    # (Line 3846) CreateUnit(1, (167), (39), (7));
    # (Line 3847) if(
    DoActions(CreateUnit(1, (167), (39), (7)))
    _t5 = EUDIf()
    # (Line 3848) Bring((7), (0), 1, (167), (64))
    # (Line 3849) ){
    if _t5(Bring((7), (0), 1, (167), (64))):
        # (Line 3850) if(
        _t6 = EUDIf()
        # (Line 3851) SkinRainbow == EPD(0x59CCA8)
        # (Line 3852) ){
        if _t6(SkinRainbow == EPD(0x59CCA8)):
            # (Line 3853) SkinRainbowIndex = 0;
            SkinRainbowIndex << (0)
            # (Line 3854) }
            # (Line 3855) else{
        if EUDElse()():
            # (Line 3856) SkinRainbowIndex = (EPD(0x628298) - SkinRainbow)/84;
            SkinRainbowIndex << ((EPD(0x628298) - SkinRainbow) // 84)
            # (Line 3857) }
            # (Line 3858) }
        EUDEndIf()
        # (Line 3861) wwrite(0x665AC0 + 1696 + 244 * 2, 136);
    EUDEndIf()
    f_wwrite(0x665AC0 + 1696 + 244 * 2, 136)
    # (Line 3862) AuraRainbowArchon = epdread_epd(EPD(0x628438));
    AuraRainbowArchon << (f_epdread_epd(EPD(0x628438)))
    # (Line 3863) CreateUnit(1, (167), (40), (7));
    # (Line 3864) if(
    DoActions(CreateUnit(1, (167), (40), (7)))
    _t7 = EUDIf()
    # (Line 3865) Bring((7), (0), 1, (167), (64))
    # (Line 3866) ){
    if _t7(Bring((7), (0), 1, (167), (64))):
        # (Line 3867) if(
        _t8 = EUDIf()
        # (Line 3868) AuraRainbowArchon == EPD(0x59CCA8)
        # (Line 3869) ){
        if _t8(AuraRainbowArchon == EPD(0x59CCA8)):
            # (Line 3870) AuraRainbowArchonIndex = 0;
            AuraRainbowArchonIndex << (0)
            # (Line 3871) }
            # (Line 3872) else{
        if EUDElse()():
            # (Line 3873) AuraRainbowArchonIndex = (EPD(0x628298) - AuraRainbowArchon)/84;
            AuraRainbowArchonIndex << ((EPD(0x628298) - AuraRainbowArchon) // 84)
            # (Line 3874) }
            # (Line 3875) }
        EUDEndIf()
        # (Line 3876) wwrite(0x665AC0 + 1696 + 244 * 2, 256);
    EUDEndIf()
    f_wwrite(0x665AC0 + 1696 + 244 * 2, 256)
    # (Line 3877) bwrite(0x666778 + 14000 + 256 * 1, 0);
    f_bwrite(0x666778 + 14000 + 256 * 1, 0)
    # (Line 3878) dwwrite(0x666778 + 34000 + 256 * 4, 86);
    f_dwwrite(0x666778 + 34000 + 256 * 4, 86)
    # (Line 3881) bwrite(0x666778 + 14000 + 983 * 1, 16);
    f_bwrite(0x666778 + 14000 + 983 * 1, 16)
    # (Line 3882) AuraVIP = epdread_epd(EPD(0x628438));
    AuraVIP << (f_epdread_epd(EPD(0x628438)))
    # (Line 3883) CreateUnit(1, (113), (45), (7));
    # (Line 3884) bwrite(0x666778 + 14000 + 983 * 1, 9);
    DoActions(CreateUnit(1, (113), (45), (7)))
    f_bwrite(0x666778 + 14000 + 983 * 1, 9)
    # (Line 3887) }
    # (Line 3888) function beforeTriggerExec() {

@EUDFunc
def beforeTriggerExec():
    # (Line 3889) EUDPlayerLoop()();
    EUDPlayerLoop()()
    # (Line 3890) WaitableTriggerExec();
    WaitableTriggerExec()
    # (Line 3891) ClassicTriggerExec();
    ClassicTriggerExec()
    # (Line 3892) EUDEndPlayerLoop();
    EUDEndPlayerLoop()
    # (Line 3893) ClassicTriggerStarter();
    ClassicTriggerStarter()
    # (Line 3895) if(
    _t1 = EUDIf()
    # (Line 3896) SkinRainbow != 0
    # (Line 3897) ){
    if _t1(SkinRainbow == 0, neg=True):
        # (Line 3898) colorComputer += 1;
        colorComputer.__iadd__(1)
        # (Line 3899) if(
        _t2 = EUDIf()
        # (Line 3900) colorComputer >= 13
        # (Line 3901) ){
        if _t2(colorComputer >= 13):
            # (Line 3902) colorComputer = 0;
            colorComputer << (0)
            # (Line 3903) }
            # (Line 3904) SetUnitColorEPD(SkinRainbow,colorComputer);
        EUDEndIf()
        SetUnitColorEPD(SkinRainbow, colorComputer)
        # (Line 3905) SetUnitColorEPD(AuraRainbowArchon,colorComputer);
        SetUnitColorEPD(AuraRainbowArchon, colorComputer)
        # (Line 3906) }
        # (Line 3907) EUDPlayerLoop()();
    EUDEndIf()
    EUDPlayerLoop()()
    # (Line 3908) if (getcurpl() == 0 || getcurpl() == 1 || getcurpl() == 2 || getcurpl() == 3 || getcurpl() == 4 || getcurpl() == 5) {
    if EUDIf()(EUDSCOr()(f_getcurpl() == 0)(f_getcurpl() == 1)(f_getcurpl() == 2)(f_getcurpl() == 3)(f_getcurpl() == 4)(f_getcurpl() == 5)()):
        # (Line 3909) if(
        _t4 = EUDIf()
        # (Line 3910) Vulture[getcurpl()] != 0 &&
        # (Line 3911) Bring((13), (0), 1, (PVulture[getcurpl()]), (64))
        # (Line 3912) ){
        if _t4(EUDSCAnd()(Vulture[f_getcurpl()] == 0, neg=True)(Bring((13), (0), 1, (PVulture[f_getcurpl()]), (64)))()):
            # (Line 3913) if(
            _t5 = EUDIf()
            # (Line 3914) RainbowEnabled[getcurpl()] == 1 ||
            # (Line 3915) Aura_RainbowArchonEnabled[getcurpl()] == 1
            # (Line 3916) ){
            if _t5(EUDSCOr()(RainbowEnabled[f_getcurpl()] == 1)(Aura_RainbowArchonEnabled[f_getcurpl()] == 1)()):
                # (Line 3917) color[getcurpl()] += 1;
                _ARRW(color, f_getcurpl()).__iadd__(1)
                # (Line 3918) if(
                _t6 = EUDIf()
                # (Line 3919) color[getcurpl()] >= 13
                # (Line 3920) ){
                if _t6(color[f_getcurpl()] >= 13):
                    # (Line 3921) color[getcurpl()] = 0;
                    _ARRW(color, f_getcurpl()) << (0)
                    # (Line 3922) }
                    # (Line 3923) }
                EUDEndIf()
                # (Line 3924) if(
            EUDEndIf()
            _t7 = EUDIf()
            # (Line 3925) RainbowEnabled[getcurpl()] == 1
            # (Line 3926) ){
            if _t7(RainbowEnabled[f_getcurpl()] == 1):
                # (Line 3927) SetUnitColorEPD(Vulture[getcurpl()],color[getcurpl()]);
                SetUnitColorEPD(Vulture[f_getcurpl()], color[f_getcurpl()])
                # (Line 3928) }
                # (Line 3929) if(
            EUDEndIf()
            _t8 = EUDIf()
            # (Line 3930) Aura_RainbowArchonEnabled[getcurpl()] == 1
            # (Line 3931) ){
            if _t8(Aura_RainbowArchonEnabled[f_getcurpl()] == 1):
                # (Line 3932) if(
                _t9 = EUDIf()
                # (Line 3933) Bring((13), (0), 1, (114), (64)) &&
                # (Line 3934) Aura_RainbowArchonP[getcurpl()] != 0 &&
                # (Line 3935) Aura_RainbowArchonEnabled[getcurpl()] == 1
                # (Line 3936) ){
                if _t9(EUDSCAnd()(Bring((13), (0), 1, (114), (64)))(Aura_RainbowArchonP[f_getcurpl()] == 0, neg=True)(Aura_RainbowArchonEnabled[f_getcurpl()] == 1)()):
                    # (Line 3937) SetUnitColorEPD(Aura_RainbowArchonP[getcurpl()],color[getcurpl()]);
                    SetUnitColorEPD(Aura_RainbowArchonP[f_getcurpl()], color[f_getcurpl()])
                    # (Line 3938) }
                    # (Line 3939) }
                EUDEndIf()
                # (Line 3940) }
            EUDEndIf()
            # (Line 3941) }
        EUDEndIf()
        # (Line 3942) EUDEndPlayerLoop();
    EUDEndIf()
    EUDEndPlayerLoop()
    # (Line 3944) EUDPlayerLoop()();
    EUDPlayerLoop()()
    # (Line 3945) if (getcurpl() == 0) {
    if EUDIf()(f_getcurpl() == 0):
        # (Line 3946) if(
        _t11 = EUDIf()
        # (Line 3947) Deaths((13), (10), 1, (132)) &&
        # (Line 3948) Deaths((13), (10), 1, (209)) &&
        # (Line 3949) Deaths((13), (10), 1, (90))
        # (Line 3950) ){
        if _t11(EUDSCAnd()(Deaths((13), (10), 1, (132)))(Deaths((13), (10), 1, (209)))(Deaths((13), (10), 1, (90)))()):
            # (Line 3951) RandomOption[0] = 60;
            _ARRW(RandomOption, 0) << (60)
            # (Line 3952) }
            # (Line 3953) }
        EUDEndIf()
        # (Line 3954) EUDEndPlayerLoop();
    EUDEndIf()
    EUDEndPlayerLoop()
    # (Line 3956) EUDPlayerLoop()();
    EUDPlayerLoop()()
    # (Line 3957) if (getcurpl() == 0 || getcurpl() == 1 || getcurpl() == 2 || getcurpl() == 3 || getcurpl() == 4 || getcurpl() == 5) {
    if EUDIf()(EUDSCOr()(f_getcurpl() == 0)(f_getcurpl() == 1)(f_getcurpl() == 2)(f_getcurpl() == 3)(f_getcurpl() == 4)(f_getcurpl() == 5)()):
        # (Line 3959) if(
        _t13 = EUDIf()
        # (Line 3960) SuzumuraAlrI[getcurpl()] == 1 &&
        # (Line 3961) bread(0x65FD00 + 14776 + PVulture[getcurpl()] * 1) == 53
        # (Line 3962) ){
        if _t13(EUDSCAnd()(SuzumuraAlrI[f_getcurpl()] == 1)(f_bread(0x65FD00 + 14776 + PVulture[f_getcurpl()] * 1) == 53)()):
            # (Line 3963) if(
            _t14 = EUDIf()
            # (Line 3964) bread_epd(Vulture[getcurpl()] + 0x04D / 4,  0x04D % 4) == 107 ||
            # (Line 3965) bread_epd(Vulture[getcurpl()] + 0x04D / 4,  0x04D % 4) == 10
            # (Line 3966) ){
            if _t14(EUDSCOr()(f_bread_epd(Vulture[f_getcurpl()] + 0x04D // 4, 0x04D % 4) == 107)(f_bread_epd(Vulture[f_getcurpl()] + 0x04D // 4, 0x04D % 4) == 10)()):
                # (Line 3967) TargetUnitPositionX = wread_epd(Vulture[getcurpl()] + 0x058 / 4,  0x058 % 4);
                TargetUnitPositionX << (f_wread_epd(Vulture[f_getcurpl()] + 0x058 // 4, 0x058 % 4))
                # (Line 3968) TargetUnitPositionY = wread_epd(Vulture[getcurpl()] + 0x05A / 4,  0x05A % 4);
                TargetUnitPositionY << (f_wread_epd(Vulture[f_getcurpl()] + 0x05A // 4, 0x05A % 4))
                # (Line 3969) }
                # (Line 3970) if(
            EUDEndIf()
            _t15 = EUDIf()
            # (Line 3971) bread_epd(Vulture[getcurpl()] + 0x055 / 4,  0x055 % 4) == 21
            # (Line 3972) ){
            if _t15(f_bread_epd(Vulture[f_getcurpl()] + 0x055 // 4, 0x055 % 4) == 21):
                # (Line 3973) dwwrite(0x666778 + 34000 + 506 * 4, 380);
                f_dwwrite(0x666778 + 34000 + 506 * 4, 380)
                # (Line 3974) for(var i = 0 ; i < 4 ; i++){
                i = EUDVariable()
                i << (0)
                if EUDWhile()(i >= 4, neg=True):
                    def _t17():
                        i.__iadd__(1)
                    # (Line 3975) SetLocation(15,TargetUnitPositionX + 16 * (1 + i),TargetUnitPositionY + 16 * (1 + i),57,57);
                    SetLocation(15, TargetUnitPositionX + 16 * (1 + i), TargetUnitPositionY + 16 * (1 + i), 57, 57)
                    # (Line 3976) 팔레트(getcurpl(),506,15);
                    f_팔레트(f_getcurpl(), 506, 15)
                    # (Line 3977) SetLocation(15,TargetUnitPositionX - 16 * (1 + i),TargetUnitPositionY + 16 * (1 + i),57,57);
                    SetLocation(15, TargetUnitPositionX - 16 * (1 + i), TargetUnitPositionY + 16 * (1 + i), 57, 57)
                    # (Line 3978) 팔레트(getcurpl(),506,15);
                    f_팔레트(f_getcurpl(), 506, 15)
                    # (Line 3979) SetLocation(15,TargetUnitPositionX + 16 * (1 + i),TargetUnitPositionY - 16 * (1 + i),57,57);
                    SetLocation(15, TargetUnitPositionX + 16 * (1 + i), TargetUnitPositionY - 16 * (1 + i), 57, 57)
                    # (Line 3980) 팔레트(getcurpl(),506,15);
                    f_팔레트(f_getcurpl(), 506, 15)
                    # (Line 3981) SetLocation(15,TargetUnitPositionX - 16 * (1 + i),TargetUnitPositionY - 16 * (1 + i),57,57);
                    SetLocation(15, TargetUnitPositionX - 16 * (1 + i), TargetUnitPositionY - 16 * (1 + i), 57, 57)
                    # (Line 3982) 팔레트(getcurpl(),506,15);
                    f_팔레트(f_getcurpl(), 506, 15)
                    # (Line 3983) }
                    # (Line 3984) dwwrite(0x666778 + 34000 + 506 * 4, 258);
                    EUDSetContinuePoint()
                    _t17()
                EUDEndWhile()
                f_dwwrite(0x666778 + 34000 + 506 * 4, 258)
                # (Line 3985) }
                # (Line 3986) if(
            EUDEndIf()
            _t18 = EUDIf()
            # (Line 3987) Bring((13), (0), 1, (PHoldFire[getcurpl()]), (24)) &&
            # (Line 3988) bread_epd(Hold_fireunit[getcurpl()] + 0x055 / 4,  0x055 % 4) >= 21
            # (Line 3989) ){
            if _t18(EUDSCAnd()(Bring((13), (0), 1, (PHoldFire[f_getcurpl()]), (24)))(f_bread_epd(Hold_fireunit[f_getcurpl()] + 0x055 // 4, 0x055 % 4) >= 21)()):
                # (Line 3990) TargetUnitPositionX = wread_epd(Hold_fireunit[getcurpl()] + 0x058 / 4,  0x058 % 4);
                TargetUnitPositionX << (f_wread_epd(Hold_fireunit[f_getcurpl()] + 0x058 // 4, 0x058 % 4))
                # (Line 3991) TargetUnitPositionY = wread_epd(Hold_fireunit[getcurpl()] + 0x05A / 4,  0x05A % 4);
                TargetUnitPositionY << (f_wread_epd(Hold_fireunit[f_getcurpl()] + 0x05A // 4, 0x05A % 4))
                # (Line 3992) dwwrite(0x666778 + 34000 + 506 * 4, 380);
                f_dwwrite(0x666778 + 34000 + 506 * 4, 380)
                # (Line 3993) for(var i = 0 ; i < 4 ; i++){
                i = EUDVariable()
                i << (0)
                if EUDWhile()(i >= 4, neg=True):
                    def _t20():
                        i.__iadd__(1)
                    # (Line 3994) SetLocation(15,TargetUnitPositionX + 16 * (1 + i),TargetUnitPositionY + 16 * (1 + i),57,57);
                    SetLocation(15, TargetUnitPositionX + 16 * (1 + i), TargetUnitPositionY + 16 * (1 + i), 57, 57)
                    # (Line 3995) 팔레트(getcurpl(),506,15);
                    f_팔레트(f_getcurpl(), 506, 15)
                    # (Line 3996) SetLocation(15,TargetUnitPositionX - 16 * (1 + i),TargetUnitPositionY + 16 * (1 + i),57,57);
                    SetLocation(15, TargetUnitPositionX - 16 * (1 + i), TargetUnitPositionY + 16 * (1 + i), 57, 57)
                    # (Line 3997) 팔레트(getcurpl(),506,15);
                    f_팔레트(f_getcurpl(), 506, 15)
                    # (Line 3998) SetLocation(15,TargetUnitPositionX + 16 * (1 + i),TargetUnitPositionY - 16 * (1 + i),57,57);
                    SetLocation(15, TargetUnitPositionX + 16 * (1 + i), TargetUnitPositionY - 16 * (1 + i), 57, 57)
                    # (Line 3999) 팔레트(getcurpl(),506,15);
                    f_팔레트(f_getcurpl(), 506, 15)
                    # (Line 4000) SetLocation(15,TargetUnitPositionX - 16 * (1 + i),TargetUnitPositionY - 16 * (1 + i),57,57);
                    SetLocation(15, TargetUnitPositionX - 16 * (1 + i), TargetUnitPositionY - 16 * (1 + i), 57, 57)
                    # (Line 4001) 팔레트(getcurpl(),506,15);
                    f_팔레트(f_getcurpl(), 506, 15)
                    # (Line 4002) }
                    # (Line 4003) dwwrite(0x666778 + 34000 + 506 * 4, 258);
                    EUDSetContinuePoint()
                    _t20()
                EUDEndWhile()
                f_dwwrite(0x666778 + 34000 + 506 * 4, 258)
                # (Line 4004) }
                # (Line 4005) }
            EUDEndIf()
            # (Line 4008) if(
        EUDEndIf()
        _t21 = EUDIf()
        # (Line 4009) IGO_Sera[getcurpl()] == 1
        # (Line 4010) ){
        if _t21(IGO_Sera[f_getcurpl()] == 1):
            # (Line 4011) if(
            _t22 = EUDIf()
            # (Line 4012) bread(0x65FD00 + 14776 + PVulture[getcurpl()] * 1) == 28
            # (Line 4013) ){
            if _t22(f_bread(0x65FD00 + 14776 + PVulture[f_getcurpl()] * 1) == 28):
                # (Line 4014) if(
                _t23 = EUDIf()
                # (Line 4015) IGO_Sera_Attack == 0
                # (Line 4016) ){
                if _t23(IGO_Sera_Attack == 0):
                    # (Line 4017) if(
                    _t24 = EUDIf()
                    # (Line 4018) bread_epd(Vulture[getcurpl()] + 0x04D / 4,  0x04D % 4) == 107 ||
                    # (Line 4019) bread_epd(Vulture[getcurpl()] + 0x04D / 4,  0x04D % 4) == 10
                    # (Line 4020) ){
                    if _t24(EUDSCOr()(f_bread_epd(Vulture[f_getcurpl()] + 0x04D // 4, 0x04D % 4) == 107)(f_bread_epd(Vulture[f_getcurpl()] + 0x04D // 4, 0x04D % 4) == 10)()):
                        # (Line 4021) TargetUnitPositionX = wread_epd(Vulture[getcurpl()] + 0x058 / 4,  0x058 % 4);
                        TargetUnitPositionX << (f_wread_epd(Vulture[f_getcurpl()] + 0x058 // 4, 0x058 % 4))
                        # (Line 4022) TargetUnitPositionY = wread_epd(Vulture[getcurpl()] + 0x05A / 4,  0x05A % 4);
                        TargetUnitPositionY << (f_wread_epd(Vulture[f_getcurpl()] + 0x05A // 4, 0x05A % 4))
                        # (Line 4023) }
                        # (Line 4024) if(
                    EUDEndIf()
                    _t25 = EUDIf()
                    # (Line 4025) bread_epd(Vulture[getcurpl()] + 0x055 / 4,  0x055 % 4) == 20
                    # (Line 4026) ){
                    if _t25(f_bread_epd(Vulture[f_getcurpl()] + 0x055 // 4, 0x055 % 4) == 20):
                        # (Line 4027) IGO_Sera_Attack = 1;
                        IGO_Sera_Attack << (1)
                        # (Line 4028) EUDPlayerLoop()();
                        EUDPlayerLoop()()
                        # (Line 4029) if (getcurpl() == 0 || getcurpl() == 1 || getcurpl() == 2 || getcurpl() == 3 || getcurpl() == 4 || getcurpl() == 5) {
                        if EUDIf()(EUDSCOr()(f_getcurpl() == 0)(f_getcurpl() == 1)(f_getcurpl() == 2)(f_getcurpl() == 3)(f_getcurpl() == 4)(f_getcurpl() == 5)()):
                            # (Line 4030) PlayWAV("sound\\Misc\\Explo5.wav");
                            # (Line 4031) PlayWAV("sound\\Misc\\Explo5.wav");
                            DoActions(PlayWAV("sound\\Misc\\Explo5.wav"))
                            # (Line 4032) }
                            DoActions(PlayWAV("sound\\Misc\\Explo5.wav"))
                            # (Line 4033) EUDEndPlayerLoop();
                        EUDEndIf()
                        EUDEndPlayerLoop()
                        # (Line 4034) }
                        # (Line 4035) if(
                    EUDEndIf()
                    _t27 = EUDIf()
                    # (Line 4036) bread_epd(Hold_fireunit[getcurpl()] + 0x055 / 4,  0x055 % 4) == 20 &&
                    # (Line 4037) Bring((13), (0), 1, (PHoldFire[getcurpl()]), (24))
                    # (Line 4038) ){
                    if _t27(EUDSCAnd()(f_bread_epd(Hold_fireunit[f_getcurpl()] + 0x055 // 4, 0x055 % 4) == 20)(Bring((13), (0), 1, (PHoldFire[f_getcurpl()]), (24)))()):
                        # (Line 4039) IGO_Sera_Attack = 1;
                        IGO_Sera_Attack << (1)
                        # (Line 4040) EUDPlayerLoop()();
                        EUDPlayerLoop()()
                        # (Line 4041) if (getcurpl() == 0 || getcurpl() == 1 || getcurpl() == 2 || getcurpl() == 3 || getcurpl() == 4 || getcurpl() == 5) {
                        if EUDIf()(EUDSCOr()(f_getcurpl() == 0)(f_getcurpl() == 1)(f_getcurpl() == 2)(f_getcurpl() == 3)(f_getcurpl() == 4)(f_getcurpl() == 5)()):
                            # (Line 4042) PlayWAV("sound\\Misc\\Explo5.wav");
                            # (Line 4043) PlayWAV("sound\\Misc\\Explo5.wav");
                            DoActions(PlayWAV("sound\\Misc\\Explo5.wav"))
                            # (Line 4044) }
                            DoActions(PlayWAV("sound\\Misc\\Explo5.wav"))
                            # (Line 4045) EUDEndPlayerLoop();
                        EUDEndIf()
                        EUDEndPlayerLoop()
                        # (Line 4046) }
                        # (Line 4047) }
                    EUDEndIf()
                    # (Line 4048) }
                EUDEndIf()
                # (Line 4049) if(
            EUDEndIf()
            _t29 = EUDIf()
            # (Line 4050) bread(0x65FD00 + 14776 + PVulture[getcurpl()] * 1) == 28 &&
            # (Line 4051) IGO_Sera_Attack >= 1
            # (Line 4052) ){
            if _t29(EUDSCAnd()(f_bread(0x65FD00 + 14776 + PVulture[f_getcurpl()] * 1) == 28)(IGO_Sera_Attack >= 1)()):
                # (Line 4053) IGO_Sera_Attack += 1;
                IGO_Sera_Attack.__iadd__(1)
                # (Line 4054) if(
                _t30 = EUDIf()
                # (Line 4055) IGO_Sera_Attack >= 13
                # (Line 4056) ){
                if _t30(IGO_Sera_Attack >= 13):
                    # (Line 4057) IGO_Sera_Attack = 0;
                    IGO_Sera_Attack << (0)
                    # (Line 4058) }
                    # (Line 4059) for(var i = 0 ; i < 5 ; i++){
                EUDEndIf()
                i = EUDVariable()
                i << (0)
                if EUDWhile()(i >= 5, neg=True):
                    def _t32():
                        i.__iadd__(1)
                    # (Line 4060) if(
                    _t33 = EUDIf()
                    # (Line 4061) IGO_Sera_Attack == 3 + 2 * i
                    # (Line 4062) ){
                    if _t33(IGO_Sera_Attack == 3 + 2 * i):
                        # (Line 4063) dwwrite(0x666778 + 34000 + 533 * 4, 144);
                        f_dwwrite(0x666778 + 34000 + 533 * 4, 144)
                        # (Line 4064) SetLocation(15,TargetUnitPositionX + 25 * (1 + i),TargetUnitPositionY,57,57);
                        SetLocation(15, TargetUnitPositionX + 25 * (1 + i), TargetUnitPositionY, 57, 57)
                        # (Line 4065) 팔레트(getcurpl(),533,15);
                        f_팔레트(f_getcurpl(), 533, 15)
                        # (Line 4066) SetLocation(15,TargetUnitPositionX,TargetUnitPositionY + 25 * (1 + i),57,57);
                        SetLocation(15, TargetUnitPositionX, TargetUnitPositionY + 25 * (1 + i), 57, 57)
                        # (Line 4067) 팔레트(getcurpl(),533,15);
                        f_팔레트(f_getcurpl(), 533, 15)
                        # (Line 4068) SetLocation(15,TargetUnitPositionX,TargetUnitPositionY - 25 * (1 + i),57,57);
                        SetLocation(15, TargetUnitPositionX, TargetUnitPositionY - 25 * (1 + i), 57, 57)
                        # (Line 4069) 팔레트(getcurpl(),533,15);
                        f_팔레트(f_getcurpl(), 533, 15)
                        # (Line 4070) SetLocation(15,TargetUnitPositionX - 25 * (1 + i),TargetUnitPositionY,57,57);
                        SetLocation(15, TargetUnitPositionX - 25 * (1 + i), TargetUnitPositionY, 57, 57)
                        # (Line 4071) 팔레트(getcurpl(),533,15);
                        f_팔레트(f_getcurpl(), 533, 15)
                        # (Line 4072) dwwrite(0x666778 + 34000 + 533 * 4, 246);
                        f_dwwrite(0x666778 + 34000 + 533 * 4, 246)
                        # (Line 4073) }
                        # (Line 4074) }
                    EUDEndIf()
                    # (Line 4075) }
                    EUDSetContinuePoint()
                    _t32()
                EUDEndWhile()
                # (Line 4076) }
            EUDEndIf()
            # (Line 4078) }
        EUDEndIf()
        # (Line 4079) EUDEndPlayerLoop();
    EUDEndIf()
    EUDEndPlayerLoop()
    # (Line 4082) EUDPlayerLoop()();
    EUDPlayerLoop()()
    # (Line 4083) if (getcurpl() == 0 || getcurpl() == 1 || getcurpl() == 2 || getcurpl() == 3 || getcurpl() == 4 || getcurpl() == 5) {
    if EUDIf()(EUDSCOr()(f_getcurpl() == 0)(f_getcurpl() == 1)(f_getcurpl() == 2)(f_getcurpl() == 3)(f_getcurpl() == 4)(f_getcurpl() == 5)()):
        # (Line 4084) if(
        _t35 = EUDIf()
        # (Line 4085) Bring((13), (10), 1, (PVulture[getcurpl()]), (24))
        # (Line 4086) ){
        if _t35(Bring((13), (10), 1, (PVulture[f_getcurpl()]), (24))):
            # (Line 4087) MoveLocation((PLoc[getcurpl()]), (PVulture[getcurpl()]), (13), (24));
            # (Line 4088) ModifyUnitShields(255, (PVulture[getcurpl()]), (13), (24), 100);
            DoActions(MoveLocation((PLoc[f_getcurpl()]), (PVulture[f_getcurpl()]), (13), (24)))
            # (Line 4089) if(
            DoActions(ModifyUnitShields(255, (PVulture[f_getcurpl()]), (13), (24), 100))
            _t36 = EUDIf()
            # (Line 4090) Deaths((13), (10), 1, (130))
            # (Line 4091) ){
            if _t36(Deaths((13), (10), 1, (130))):
                # (Line 4092) MoveLocation((5), (PVulture[getcurpl()]), (13), (24));
                # (Line 4093) }
                DoActions(MoveLocation((5), (PVulture[f_getcurpl()]), (13), (24)))
                # (Line 4094) }
            EUDEndIf()
            # (Line 4095) }
        EUDEndIf()
        # (Line 4096) EUDEndPlayerLoop();
    EUDEndIf()
    EUDEndPlayerLoop()
    # (Line 4099) if(
    _t37 = EUDIf()
    # (Line 4100) Switch((1), (2))
    # (Line 4101) ){
    if _t37(Switch((1), (2))):
        # (Line 4104) if(
        _t38 = EUDIf()
        # (Line 4105) dwread(0x6564E0 + 3984 + 19 * 4) > 153
        # (Line 4106) ){
        if _t38(f_dwread(0x6564E0 + 3984 + 19 * 4) <= 153, neg=True):
            # (Line 4107) dwwrite(0x6564E0 + 3984 + 19 * 4, 153);
            f_dwwrite(0x6564E0 + 3984 + 19 * 4, 153)
            # (Line 4108) EUDPlayerLoop()();
            EUDPlayerLoop()()
            # (Line 4109) if (getcurpl() == 0 || getcurpl() == 1 || getcurpl() == 2 || getcurpl() == 3 || getcurpl() == 4 || getcurpl() == 5) {
            if EUDIf()(EUDSCOr()(f_getcurpl() == 0)(f_getcurpl() == 1)(f_getcurpl() == 2)(f_getcurpl() == 3)(f_getcurpl() == 4)(f_getcurpl() == 5)()):
                # (Line 4110) Stat_RangeL = dwread(0x6564E0 + 3984 + 19 * 4);
                Stat_RangeL << (f_dwread(0x6564E0 + 3984 + 19 * 4))
                # (Line 4111) Stat_RangeR = dwread(0x6564E0 + 3984 + 19 * 4);
                Stat_RangeR << (f_dwread(0x6564E0 + 3984 + 19 * 4))
                # (Line 4112) Stat_RangeL = Stat_RangeL * 10000 / 32 / 10000;
                Stat_RangeL << (Stat_RangeL * 10000 // 32 // 10000)
                # (Line 4113) Stat_RangeR = (Stat_RangeR * 10000 / 32) % 10000;
                Stat_RangeR << ((Stat_RangeR * 10000 // 32) % 10000)
                # (Line 4115) RangeDisplay = dwread(0x6564E0 + 3984 + 19 * 4);
                RangeDisplay << (f_dwread(0x6564E0 + 3984 + 19 * 4))
                # (Line 4116) tct.setTbl((247), 25, 1, "\x0D");
                tct.f_setTbl((247), 25, 1, "\x0D")
                # (Line 4117) tct.setTbl((247), 25, 1, RangeDisplay * 10000 / 32 / 10000);
                tct.f_setTbl((247), 25, 1, RangeDisplay * 10000 // 32 // 10000)
                # (Line 4118) tct.setTbl((247), 27, 7, "\x0D\x0D\x0D\x0D\x0D\x0D\x0D");
                tct.f_setTbl((247), 27, 7, "\x0D\x0D\x0D\x0D\x0D\x0D\x0D")
                # (Line 4119) tct.setTbl((247), 27, 7, RangeDisplay * 10000 / 32 % 10000);
                tct.f_setTbl((247), 27, 7, RangeDisplay * 10000 // 32 % 10000)
                # (Line 4121) DisplayText("\x13\x07사거리\x04가 상한선을 초과하여 \x1F4.78125 \x04로 고정됩니다.", (0));
                # (Line 4122) PlayWAV("staredit\\wav\\siren.wav");
                DoActions(DisplayText("\x13\x07사거리\x04가 상한선을 초과하여 \x1F4.78125 \x04로 고정됩니다.", (0)))
                # (Line 4123) }
                DoActions(PlayWAV("staredit\\wav\\siren.wav"))
                # (Line 4124) EUDEndPlayerLoop();
            EUDEndIf()
            EUDEndPlayerLoop()
            # (Line 4125) }
            # (Line 4128) if(
        EUDEndIf()
        _t40 = EUDIf()
        # (Line 4129) bread(0x65FD00 + 456 + 12 * 1) > 8
        # (Line 4130) ){
        if _t40(f_bread(0x65FD00 + 456 + 12 * 1) <= 8, neg=True):
            # (Line 4131) bwrite(0x65FD00 + 456 + 12 * 1, 8);
            f_bwrite(0x65FD00 + 456 + 12 * 1, 8)
            # (Line 4132) EUDPlayerLoop()();
            EUDPlayerLoop()()
            # (Line 4133) if (getcurpl() == 0 || getcurpl() == 1 || getcurpl() == 2 || getcurpl() == 3 || getcurpl() == 4 || getcurpl() == 5) {
            if EUDIf()(EUDSCOr()(f_getcurpl() == 0)(f_getcurpl() == 1)(f_getcurpl() == 2)(f_getcurpl() == 3)(f_getcurpl() == 4)(f_getcurpl() == 5)()):
                # (Line 4134) Stat_Armor = bread(0x65FD00 + 456 + 12 * 1);
                Stat_Armor << (f_bread(0x65FD00 + 456 + 12 * 1))
                # (Line 4135) DisplayText("\x13\x07방어\x04가 상한선을 초과하여 \x1F8 \x04로 고정됩니다.", (0));
                # (Line 4136) PlayWAV("staredit\\wav\\siren.wav");
                DoActions(DisplayText("\x13\x07방어\x04가 상한선을 초과하여 \x1F8 \x04로 고정됩니다.", (0)))
                # (Line 4137) }
                DoActions(PlayWAV("staredit\\wav\\siren.wav"))
                # (Line 4138) EUDEndPlayerLoop();
            EUDEndIf()
            EUDEndPlayerLoop()
            # (Line 4139) }
            # (Line 4142) if(
        EUDEndIf()
        _t42 = EUDIf()
        # (Line 4143) dwread(0x6C9858 + 1696 + 70 * 4) > 1382
        # (Line 4144) ){
        if _t42(f_dwread(0x6C9858 + 1696 + 70 * 4) <= 1382, neg=True):
            # (Line 4145) dwwrite(0x6C9858 + 1696 + 70 * 4, 1382);
            f_dwwrite(0x6C9858 + 1696 + 70 * 4, 1382)
            # (Line 4146) EUDPlayerLoop()();
            EUDPlayerLoop()()
            # (Line 4147) if (getcurpl() == 0 || getcurpl() == 1 || getcurpl() == 2 || getcurpl() == 3 || getcurpl() == 4 || getcurpl() == 5) {
            if EUDIf()(EUDSCOr()(f_getcurpl() == 0)(f_getcurpl() == 1)(f_getcurpl() == 2)(f_getcurpl() == 3)(f_getcurpl() == 4)(f_getcurpl() == 5)()):
                # (Line 4148) Stat_Speed = dwread(0x6C9858 + 1696 + 70 * 4);
                Stat_Speed << (f_dwread(0x6C9858 + 1696 + 70 * 4))
                # (Line 4149) Stat_Speed = Stat_Speed * 100 / 325;
                Stat_Speed << (Stat_Speed * 100 // 325)
                # (Line 4150) DisplayText("\x13\x07이동속도\x04가 상한선을 초과하여 \x1F425% \x04로 고정됩니다.", (0));
                # (Line 4151) PlayWAV("staredit\\wav\\siren.wav");
                DoActions(DisplayText("\x13\x07이동속도\x04가 상한선을 초과하여 \x1F425% \x04로 고정됩니다.", (0)))
                # (Line 4152) }
                DoActions(PlayWAV("staredit\\wav\\siren.wav"))
                # (Line 4153) EUDEndPlayerLoop();
            EUDEndIf()
            EUDEndPlayerLoop()
            # (Line 4154) }
            # (Line 4158) if(
        EUDEndIf()
        _t44 = EUDIf()
        # (Line 4159) !MemoryEPD(Unit + 0x008 / 4, AtMost, HealthTotal)
        # (Line 4160) ){
        if _t44(MemoryEPD(Unit + 0x008 // 4, AtMost, HealthTotal), neg=True):
            # (Line 4161) SetMemoryEPD(Unit + 0x008 / 4, SetTo, HealthTotal);
            # (Line 4162) }
            DoActions(SetMemoryEPD(Unit + 0x008 // 4, SetTo, HealthTotal))
            # (Line 4163) if(
        EUDEndIf()
        _t45 = EUDIf()
        # (Line 4164) 체력회복불가 == 0
        # (Line 4165) ){
        if _t45(체력회복불가 == 0):
            # (Line 4166) if(
            _t46 = EUDIf()
            # (Line 4167) !MemoryEPD(Unit + 0x008 / 4, AtLeast, HealthTotal)
            # (Line 4168) ){
            if _t46(MemoryEPD(Unit + 0x008 // 4, AtLeast, HealthTotal), neg=True):
                # (Line 4169) SetMemoryEPD(Unit + 0x008 / 4, Add, HealthRegen * 1);
                # (Line 4170) }
                DoActions(SetMemoryEPD(Unit + 0x008 // 4, Add, HealthRegen * 1))
                # (Line 4171) }
            EUDEndIf()
            # (Line 4174) if(
        EUDEndIf()
        _t47 = EUDIf()
        # (Line 4175) !MemoryEPD(Unit + 0x060 / 4, AtMost, ShieldTotal)
        # (Line 4176) ){
        if _t47(MemoryEPD(Unit + 0x060 // 4, AtMost, ShieldTotal), neg=True):
            # (Line 4177) SetMemoryEPD(Unit + 0x060 / 4, SetTo, ShieldTotal);
            # (Line 4178) }
            DoActions(SetMemoryEPD(Unit + 0x060 // 4, SetTo, ShieldTotal))
            # (Line 4180) if(
        EUDEndIf()
        _t48 = EUDIf()
        # (Line 4181) 건전지 == 1 &&
        # (Line 4182) !MemoryEPD(Unit + 0x060 / 4, AtLeast, ShieldTotal)
        # (Line 4183) ){
        if _t48(EUDSCAnd()(건전지 == 1)(MemoryEPD(Unit + 0x060 // 4, AtLeast, ShieldTotal), neg=True)()):
            # (Line 4184) SetMemoryEPD(Unit + 0x060 / 4, Add, 21 * 1);
            # (Line 4185) }
            DoActions(SetMemoryEPD(Unit + 0x060 // 4, Add, 21 * 1))
            # (Line 4189) if(
        EUDEndIf()
        _t49 = EUDIf()
        # (Line 4190) 러시안룰렛 >= 1
        # (Line 4191) ){
        if _t49(러시안룰렛 >= 1):
            # (Line 4192) 러시안룰렛 += 1;
            러시안룰렛.__iadd__(1)
            # (Line 4193) EUDPlayerLoop()();
            EUDPlayerLoop()()
            # (Line 4194) if (getcurpl() == 0 || getcurpl() == 1 || getcurpl() == 2 || getcurpl() == 3 || getcurpl() == 4 || getcurpl() == 5) {
            if EUDIf()(EUDSCOr()(f_getcurpl() == 0)(f_getcurpl() == 1)(f_getcurpl() == 2)(f_getcurpl() == 3)(f_getcurpl() == 4)(f_getcurpl() == 5)()):
                # (Line 4195) SetMemoryEPD(Vulture[getcurpl()] + 0x034 / 4, SetTo, 1);
                # (Line 4196) }
                DoActions(SetMemoryEPD(Vulture[f_getcurpl()] + 0x034 // 4, SetTo, 1))
                # (Line 4197) EUDEndPlayerLoop();
            EUDEndIf()
            EUDEndPlayerLoop()
            # (Line 4198) }
            # (Line 4199) if(
        EUDEndIf()
        _t51 = EUDIf()
        # (Line 4200) 러시안룰렛 == 60
        # (Line 4201) ){
        if _t51(러시안룰렛 == 60):
            # (Line 4202) EUDPlayerLoop()();
            EUDPlayerLoop()()
            # (Line 4203) if (getcurpl() == 0 || getcurpl() == 1 || getcurpl() == 2 || getcurpl() == 3 || getcurpl() == 4 || getcurpl() == 5) {
            if EUDIf()(EUDSCOr()(f_getcurpl() == 0)(f_getcurpl() == 1)(f_getcurpl() == 2)(f_getcurpl() == 3)(f_getcurpl() == 4)(f_getcurpl() == 5)()):
                # (Line 4204) DisplayText("\n\n\n\n\x13\x1F[ 러시안 룰렛 ] \x04의 효과가 곧 발동합니다.\n\n\n\n\n\n", (0));
                # (Line 4205) PlayWAV("staredit\\wav\\reloading.ogg");
                DoActions(DisplayText("\n\n\n\n\x13\x1F[ 러시안 룰렛 ] \x04의 효과가 곧 발동합니다.\n\n\n\n\n\n", (0)))
                # (Line 4206) }
                DoActions(PlayWAV("staredit\\wav\\reloading.ogg"))
                # (Line 4207) EUDEndPlayerLoop();
            EUDEndIf()
            EUDEndPlayerLoop()
            # (Line 4208) }
            # (Line 4209) if(
        EUDEndIf()
        _t53 = EUDIf()
        # (Line 4210) 러시안룰렛 == 100
        # (Line 4211) ){
        if _t53(러시안룰렛 == 100):
            # (Line 4212) EUDPlayerLoop()();
            EUDPlayerLoop()()
            # (Line 4213) if (getcurpl() == 0 || getcurpl() == 1 || getcurpl() == 2 || getcurpl() == 3 || getcurpl() == 4 || getcurpl() == 5) {
            if EUDIf()(EUDSCOr()(f_getcurpl() == 0)(f_getcurpl() == 1)(f_getcurpl() == 2)(f_getcurpl() == 3)(f_getcurpl() == 4)(f_getcurpl() == 5)()):
                # (Line 4214) DisplayText("\n\n\n\n\x13\x17[ 3 ]\n\n\n\n\n\n", (0));
                # (Line 4215) PlayWAV("staredit\\wav\\3s.wav");
                DoActions(DisplayText("\n\n\n\n\x13\x17[ 3 ]\n\n\n\n\n\n", (0)))
                # (Line 4216) }
                DoActions(PlayWAV("staredit\\wav\\3s.wav"))
                # (Line 4217) EUDEndPlayerLoop();
            EUDEndIf()
            EUDEndPlayerLoop()
            # (Line 4218) }
            # (Line 4219) if(
        EUDEndIf()
        _t55 = EUDIf()
        # (Line 4220) 러시안룰렛 == 140
        # (Line 4221) ){
        if _t55(러시안룰렛 == 140):
            # (Line 4222) EUDPlayerLoop()();
            EUDPlayerLoop()()
            # (Line 4223) if (getcurpl() == 0 || getcurpl() == 1 || getcurpl() == 2 || getcurpl() == 3 || getcurpl() == 4 || getcurpl() == 5) {
            if EUDIf()(EUDSCOr()(f_getcurpl() == 0)(f_getcurpl() == 1)(f_getcurpl() == 2)(f_getcurpl() == 3)(f_getcurpl() == 4)(f_getcurpl() == 5)()):
                # (Line 4224) DisplayText("\n\n\n\n\x13\x11[ 2 ]\n\n\n\n\n\n", (0));
                # (Line 4225) PlayWAV("staredit\\wav\\2s.wav");
                DoActions(DisplayText("\n\n\n\n\x13\x11[ 2 ]\n\n\n\n\n\n", (0)))
                # (Line 4226) }
                DoActions(PlayWAV("staredit\\wav\\2s.wav"))
                # (Line 4227) EUDEndPlayerLoop();
            EUDEndIf()
            EUDEndPlayerLoop()
            # (Line 4228) }
            # (Line 4229) if(
        EUDEndIf()
        _t57 = EUDIf()
        # (Line 4230) 러시안룰렛 == 180
        # (Line 4231) ){
        if _t57(러시안룰렛 == 180):
            # (Line 4232) EUDPlayerLoop()();
            EUDPlayerLoop()()
            # (Line 4233) if (getcurpl() == 0 || getcurpl() == 1 || getcurpl() == 2 || getcurpl() == 3 || getcurpl() == 4 || getcurpl() == 5) {
            if EUDIf()(EUDSCOr()(f_getcurpl() == 0)(f_getcurpl() == 1)(f_getcurpl() == 2)(f_getcurpl() == 3)(f_getcurpl() == 4)(f_getcurpl() == 5)()):
                # (Line 4234) DisplayText("\n\n\n\n\x13\x08[ 1 ]\n\n\n\n\n\n", (0));
                # (Line 4235) PlayWAV("staredit\\wav\\1s.wav");
                DoActions(DisplayText("\n\n\n\n\x13\x08[ 1 ]\n\n\n\n\n\n", (0)))
                # (Line 4236) }
                DoActions(PlayWAV("staredit\\wav\\1s.wav"))
                # (Line 4237) EUDEndPlayerLoop();
            EUDEndIf()
            EUDEndPlayerLoop()
            # (Line 4238) }
            # (Line 4239) if(
        EUDEndIf()
        _t59 = EUDIf()
        # (Line 4240) 러시안룰렛 == 220
        # (Line 4241) ){
        if _t59(러시안룰렛 == 220):
            # (Line 4242) for(var i=0 ; i<6 ; i++){
            i = EUDVariable()
            i << (0)
            if EUDWhile()(i >= 6, neg=True):
                def _t61():
                    i.__iadd__(1)
                # (Line 4243) RandomNum = dwrand() % (5 + 1);
                RandomNum << (f_dwrand() % (5 + 1))
                # (Line 4244) if(
                _t62 = EUDIf()
                # (Line 4245) Bring((RandomNum), (0), 1, (230), (24))
                # (Line 4246) ){
                if _t62(Bring((RandomNum), (0), 1, (230), (24))):
                    # (Line 4247) KillUnitAt(255, (230), (24), (RandomNum));
                    # (Line 4248) 러시안룰렛 = 0;
                    DoActions(KillUnitAt(255, (230), (24), (RandomNum)))
                    러시안룰렛 << (0)
                    # (Line 4249) EUDPlayerLoop()();
                    EUDPlayerLoop()()
                    # (Line 4250) if (getcurpl() == 0 || getcurpl() == 1 || getcurpl() == 2 || getcurpl() == 3 || getcurpl() == 4 || getcurpl() == 5) {
                    if EUDIf()(EUDSCOr()(f_getcurpl() == 0)(f_getcurpl() == 1)(f_getcurpl() == 2)(f_getcurpl() == 3)(f_getcurpl() == 4)(f_getcurpl() == 5)()):
                        # (Line 4251) if(
                        _t64 = EUDIf()
                        # (Line 4252) RandomNum == 0
                        # (Line 4253) ){
                        if _t64(RandomNum == 0):
                            # (Line 4254) tct.print("\n\n\n\n\n\x13\x07", tct.str(0x57EEEB + 36 * 0), " \x04님이 \x08총에 맞았습니다.\n\n\n\n\n");
                            tct.f_print("\n\n\n\n\n\x13\x07", tct.f_str(0x57EEEB + 36 * 0), " \x04님이 \x08총에 맞았습니다.\n\n\n\n\n")
                            # (Line 4255) }
                            # (Line 4256) else{
                        if EUDElse()():
                            # (Line 4257) if(
                            _t65 = EUDIf()
                            # (Line 4258) RandomNum == 1
                            # (Line 4259) ){
                            if _t65(RandomNum == 1):
                                # (Line 4260) tct.print("\n\n\n\n\n\x13\x07", tct.str(0x57EEEB + 36 * 1), " \x04님이 \x08총에 맞았습니다.\n\n\n\n\n");
                                tct.f_print("\n\n\n\n\n\x13\x07", tct.f_str(0x57EEEB + 36 * 1), " \x04님이 \x08총에 맞았습니다.\n\n\n\n\n")
                                # (Line 4261) }
                                # (Line 4262) else{
                            if EUDElse()():
                                # (Line 4263) if(
                                _t66 = EUDIf()
                                # (Line 4264) RandomNum == 2
                                # (Line 4265) ){
                                if _t66(RandomNum == 2):
                                    # (Line 4266) tct.print("\n\n\n\n\n\x13\x07", tct.str(0x57EEEB + 36 * 2), " \x04님이 \x08총에 맞았습니다.\n\n\n\n\n");
                                    tct.f_print("\n\n\n\n\n\x13\x07", tct.f_str(0x57EEEB + 36 * 2), " \x04님이 \x08총에 맞았습니다.\n\n\n\n\n")
                                    # (Line 4267) }
                                    # (Line 4268) else{
                                if EUDElse()():
                                    # (Line 4269) if(
                                    _t67 = EUDIf()
                                    # (Line 4270) RandomNum == 3
                                    # (Line 4271) ){
                                    if _t67(RandomNum == 3):
                                        # (Line 4272) tct.print("\n\n\n\n\n\x13\x07", tct.str(0x57EEEB + 36 * 3), " \x04님이 \x08총에 맞았습니다.\n\n\n\n\n");
                                        tct.f_print("\n\n\n\n\n\x13\x07", tct.f_str(0x57EEEB + 36 * 3), " \x04님이 \x08총에 맞았습니다.\n\n\n\n\n")
                                        # (Line 4273) }
                                        # (Line 4274) else{
                                    if EUDElse()():
                                        # (Line 4275) if(
                                        _t68 = EUDIf()
                                        # (Line 4276) RandomNum == 4
                                        # (Line 4277) ){
                                        if _t68(RandomNum == 4):
                                            # (Line 4278) tct.print("\n\n\n\n\n\x13\x07", tct.str(0x57EEEB + 36 * 4), " \x04님이 \x08총에 맞았습니다.\n\n\n\n\n");
                                            tct.f_print("\n\n\n\n\n\x13\x07", tct.f_str(0x57EEEB + 36 * 4), " \x04님이 \x08총에 맞았습니다.\n\n\n\n\n")
                                            # (Line 4279) }
                                            # (Line 4280) else{
                                        if EUDElse()():
                                            # (Line 4281) tct.print("\n\n\n\n\n\x13\x07", tct.str(0x57EEEB + 36 * 5), " \x04님이 \x08총에 맞았습니다.\n\n\n\n\n");
                                            tct.f_print("\n\n\n\n\n\x13\x07", tct.f_str(0x57EEEB + 36 * 5), " \x04님이 \x08총에 맞았습니다.\n\n\n\n\n")
                                            # (Line 4282) }
                                            # (Line 4283) }
                                        EUDEndIf()
                                        # (Line 4284) }
                                    EUDEndIf()
                                    # (Line 4285) }
                                EUDEndIf()
                                # (Line 4286) }
                            EUDEndIf()
                            # (Line 4287) }
                        EUDEndIf()
                        # (Line 4288) EUDEndPlayerLoop();
                    EUDEndIf()
                    EUDEndPlayerLoop()
                    # (Line 4289) break;
                    EUDBreak()
                    # (Line 4290) }
                    # (Line 4291) i--;
                EUDEndIf()
                i.__isub__(1)
                # (Line 4292) }
                # (Line 4293) EUDPlayerLoop()();
                EUDSetContinuePoint()
                _t61()
            EUDEndWhile()
            EUDPlayerLoop()()
            # (Line 4294) if (getcurpl() == 0 || getcurpl() == 1 || getcurpl() == 2 || getcurpl() == 3 || getcurpl() == 4 || getcurpl() == 5) {
            if EUDIf()(EUDSCOr()(f_getcurpl() == 0)(f_getcurpl() == 1)(f_getcurpl() == 2)(f_getcurpl() == 3)(f_getcurpl() == 4)(f_getcurpl() == 5)()):
                # (Line 4295) SetMemoryEPD(Vulture[getcurpl()] + 0x034 / 4, SetTo, 1575);
                # (Line 4296) PlayWAV("staredit\\wav\\pistol fire.ogg");
                DoActions(SetMemoryEPD(Vulture[f_getcurpl()] + 0x034 // 4, SetTo, 1575))
                # (Line 4297) PlayWAV("staredit\\wav\\scream.ogg");
                DoActions(PlayWAV("staredit\\wav\\pistol fire.ogg"))
                # (Line 4298) }
                DoActions(PlayWAV("staredit\\wav\\scream.ogg"))
                # (Line 4299) EUDEndPlayerLoop();
            EUDEndIf()
            EUDEndPlayerLoop()
            # (Line 4300) }
            # (Line 4303) if(
        EUDEndIf()
        _t70 = EUDIf()
        # (Line 4304) dwread(0x6C9858 + 1696 + 70 * 4) > 1300 &&
        # (Line 4305) bread(0x6564E0 + 1200 + 19 * 1) == 127
        # (Line 4306) ){
        if _t70(EUDSCAnd()(f_dwread(0x6C9858 + 1696 + 70 * 4) <= 1300, neg=True)(f_bread(0x6564E0 + 1200 + 19 * 1) == 127)()):
            # (Line 4307) EUDPlayerLoop()();
            EUDPlayerLoop()()
            # (Line 4308) if (getcurpl() == 0 || getcurpl() == 1 || getcurpl() == 2 || getcurpl() == 3 || getcurpl() == 4 || getcurpl() == 5) {
            if EUDIf()(EUDSCOr()(f_getcurpl() == 0)(f_getcurpl() == 1)(f_getcurpl() == 2)(f_getcurpl() == 3)(f_getcurpl() == 4)(f_getcurpl() == 5)()):
                # (Line 4309) PlayWAV("sound\\Terran\\TANK\\TTaTra01.WAV");
                # (Line 4310) DisplayText("\x13\x04이동 속도가 \x07400% \x04를 돌파하여 \x1F포문을 접습니다.", (0));
                DoActions(PlayWAV("sound\\Terran\\TANK\\TTaTra01.WAV"))
                # (Line 4311) }
                DoActions(DisplayText("\x13\x04이동 속도가 \x07400% \x04를 돌파하여 \x1F포문을 접습니다.", (0)))
                # (Line 4312) EUDEndPlayerLoop();
            EUDEndIf()
            EUDEndPlayerLoop()
            # (Line 4313) bwrite(0x6564E0 + 1200 + 19 * 1, 20);
            f_bwrite(0x6564E0 + 1200 + 19 * 1, 20)
            # (Line 4314) 포문개방취소 = 1;
            포문개방취소 << (1)
            # (Line 4315) }
            # (Line 4318) if(
        EUDEndIf()
        _t72 = EUDIf()
        # (Line 4319) 중상 == 1 &&
        # (Line 4320) Bring((18), (0), 1, (230), (24))
        # (Line 4321) ){
        if _t72(EUDSCAnd()(중상 == 1)(Bring((18), (0), 1, (230), (24)))()):
            # (Line 4322) 중상 = 0;
            중상 << (0)
            # (Line 4323) ModifyUnitHitPoints(255, (230), (18), (24), 30);
            # (Line 4324) }
            DoActions(ModifyUnitHitPoints(255, (230), (18), (24), 30))
            # (Line 4327) if(
        EUDEndIf()
        _t73 = EUDIf()
        # (Line 4328) 형님 == 1
        # (Line 4329) ){
        if _t73(형님 == 1):
            # (Line 4330) EUDPlayerLoop()();
            EUDPlayerLoop()()
            # (Line 4331) if (getcurpl() == 0 || getcurpl() == 1 || getcurpl() == 2 || getcurpl() == 3 || getcurpl() == 4 || getcurpl() == 5) {
            if EUDIf()(EUDSCOr()(f_getcurpl() == 0)(f_getcurpl() == 1)(f_getcurpl() == 2)(f_getcurpl() == 3)(f_getcurpl() == 4)(f_getcurpl() == 5)()):
                # (Line 4332) if(
                _t75 = EUDIf()
                # (Line 4333) Deaths((18), (0), 1, (PVulture[getcurpl()]))
                # (Line 4334) ){
                if _t75(Deaths((18), (0), 1, (PVulture[f_getcurpl()]))):
                    # (Line 4335) SetDeaths((18), (7), 0, (PVulture[getcurpl()]));
                    # (Line 4336) RandomNum = dwrand() % (2 + 1);
                    DoActions(SetDeaths((18), (7), 0, (PVulture[f_getcurpl()])))
                    RandomNum << (f_dwrand() % (2 + 1))
                    # (Line 4337) if(
                    _t76 = EUDIf()
                    # (Line 4338) RandomNum == 0
                    # (Line 4339) ){
                    if _t76(RandomNum == 0):
                        # (Line 4340) EUDPlayerLoop()();
                        EUDPlayerLoop()()
                        # (Line 4341) if (getcurpl() == 0 || getcurpl() == 1 || getcurpl() == 2 || getcurpl() == 3 || getcurpl() == 4 || getcurpl() == 5) {
                        if EUDIf()(EUDSCOr()(f_getcurpl() == 0)(f_getcurpl() == 1)(f_getcurpl() == 2)(f_getcurpl() == 3)(f_getcurpl() == 4)(f_getcurpl() == 5)()):
                            # (Line 4342) PlayWAV("staredit\\wav\\manScream1.ogg");
                            # (Line 4343) }
                            DoActions(PlayWAV("staredit\\wav\\manScream1.ogg"))
                            # (Line 4344) EUDEndPlayerLoop();
                        EUDEndIf()
                        EUDEndPlayerLoop()
                        # (Line 4345) }
                        # (Line 4346) else{
                    if EUDElse()():
                        # (Line 4347) if(
                        _t78 = EUDIf()
                        # (Line 4348) RandomNum == 1
                        # (Line 4349) ){
                        if _t78(RandomNum == 1):
                            # (Line 4350) EUDPlayerLoop()();
                            EUDPlayerLoop()()
                            # (Line 4351) if (getcurpl() == 0 || getcurpl() == 1 || getcurpl() == 2 || getcurpl() == 3 || getcurpl() == 4 || getcurpl() == 5) {
                            if EUDIf()(EUDSCOr()(f_getcurpl() == 0)(f_getcurpl() == 1)(f_getcurpl() == 2)(f_getcurpl() == 3)(f_getcurpl() == 4)(f_getcurpl() == 5)()):
                                # (Line 4352) PlayWAV("staredit\\wav\\manScream2.ogg");
                                # (Line 4353) }
                                DoActions(PlayWAV("staredit\\wav\\manScream2.ogg"))
                                # (Line 4354) EUDEndPlayerLoop();
                            EUDEndIf()
                            EUDEndPlayerLoop()
                            # (Line 4355) }
                            # (Line 4356) else{
                        if EUDElse()():
                            # (Line 4357) EUDPlayerLoop()();
                            EUDPlayerLoop()()
                            # (Line 4358) if (getcurpl() == 0 || getcurpl() == 1 || getcurpl() == 2 || getcurpl() == 3 || getcurpl() == 4 || getcurpl() == 5) {
                            if EUDIf()(EUDSCOr()(f_getcurpl() == 0)(f_getcurpl() == 1)(f_getcurpl() == 2)(f_getcurpl() == 3)(f_getcurpl() == 4)(f_getcurpl() == 5)()):
                                # (Line 4359) PlayWAV("staredit\\wav\\manScream3.ogg");
                                # (Line 4360) }
                                DoActions(PlayWAV("staredit\\wav\\manScream3.ogg"))
                                # (Line 4361) EUDEndPlayerLoop();
                            EUDEndIf()
                            EUDEndPlayerLoop()
                            # (Line 4362) }
                            # (Line 4363) }
                        EUDEndIf()
                        # (Line 4364) }
                    EUDEndIf()
                    # (Line 4365) }
                EUDEndIf()
                # (Line 4366) EUDEndPlayerLoop();
            EUDEndIf()
            EUDEndPlayerLoop()
            # (Line 4367) if(
            _t81 = EUDIf()
            # (Line 4368) bread_epd(Unit + 0x055 / 4,  0x055 % 4) >= 1 &&
            # (Line 4369) 형님공격 == 0
            # (Line 4370) ){
            if _t81(EUDSCAnd()(f_bread_epd(Unit + 0x055 // 4, 0x055 % 4) >= 1)(형님공격 == 0)()):
                # (Line 4371) 형님공격 = 1;
                형님공격 << (1)
                # (Line 4372) RandomNum = dwrand() % (1 + 1);
                RandomNum << (f_dwrand() % (1 + 1))
                # (Line 4373) if(
                _t82 = EUDIf()
                # (Line 4374) RandomNum == 0
                # (Line 4375) ){
                if _t82(RandomNum == 0):
                    # (Line 4376) EUDPlayerLoop()();
                    EUDPlayerLoop()()
                    # (Line 4377) if (getcurpl() == 0 || getcurpl() == 1 || getcurpl() == 2 || getcurpl() == 3 || getcurpl() == 4 || getcurpl() == 5) {
                    if EUDIf()(EUDSCOr()(f_getcurpl() == 0)(f_getcurpl() == 1)(f_getcurpl() == 2)(f_getcurpl() == 3)(f_getcurpl() == 4)(f_getcurpl() == 5)()):
                        # (Line 4378) PlayWAV("staredit\\wav\\assattack.ogg");
                        # (Line 4379) }
                        DoActions(PlayWAV("staredit\\wav\\assattack.ogg"))
                        # (Line 4380) EUDEndPlayerLoop();
                    EUDEndIf()
                    EUDEndPlayerLoop()
                    # (Line 4381) }
                    # (Line 4382) else{
                if EUDElse()():
                    # (Line 4383) EUDPlayerLoop()();
                    EUDPlayerLoop()()
                    # (Line 4384) if (getcurpl() == 0 || getcurpl() == 1 || getcurpl() == 2 || getcurpl() == 3 || getcurpl() == 4 || getcurpl() == 5) {
                    if EUDIf()(EUDSCOr()(f_getcurpl() == 0)(f_getcurpl() == 1)(f_getcurpl() == 2)(f_getcurpl() == 3)(f_getcurpl() == 4)(f_getcurpl() == 5)()):
                        # (Line 4385) PlayWAV("staredit\\wav\\assattack2.ogg");
                        # (Line 4386) }
                        DoActions(PlayWAV("staredit\\wav\\assattack2.ogg"))
                        # (Line 4387) EUDEndPlayerLoop();
                    EUDEndIf()
                    EUDEndPlayerLoop()
                    # (Line 4388) }
                    # (Line 4389) }
                EUDEndIf()
                # (Line 4390) if(
            EUDEndIf()
            _t85 = EUDIf()
            # (Line 4391) bread_epd(Unit + 0x055 / 4,  0x055 % 4) == 0
            # (Line 4392) ){
            if _t85(f_bread_epd(Unit + 0x055 // 4, 0x055 % 4) == 0):
                # (Line 4393) 형님공격 = 0;
                형님공격 << (0)
                # (Line 4394) }
                # (Line 4395) }
            EUDEndIf()
            # (Line 4397) }
        EUDEndIf()
        # (Line 4401) if(
    EUDEndIf()
    _t86 = EUDIf()
    # (Line 4402) Bring((7), (0), 1, (113), (64)) &&
    # (Line 4403) AuraVIPIndex <= 1
    # (Line 4404) ){
    if _t86(EUDSCAnd()(Bring((7), (0), 1, (113), (64)))(AuraVIPIndex <= 1)()):
        # (Line 4405) if(
        _t87 = EUDIf()
        # (Line 4406) AuraVIP == EPD(0x59CCA8)
        # (Line 4407) ){
        if _t87(AuraVIP == EPD(0x59CCA8)):
            # (Line 4408) AuraVIPIndex = 0;
            AuraVIPIndex << (0)
            # (Line 4409) }
            # (Line 4410) else{
        if EUDElse()():
            # (Line 4411) AuraVIPIndex = (EPD(0x628298) - AuraVIP)/84;
            AuraVIPIndex << ((EPD(0x628298) - AuraVIP) // 84)
            # (Line 4412) }
            # (Line 4413) }
        EUDEndIf()
        # (Line 4416) if(
    EUDEndIf()
    _t88 = EUDIf()
    # (Line 4417) ElapsedTime((10), 10)
    # (Line 4418) ){
    if _t88(ElapsedTime((10), 10)):
        # (Line 4419) dwwrite(0x666778 + 34000 + 511 * 4, 264);
        f_dwwrite(0x666778 + 34000 + 511 * 4, 264)
        # (Line 4420) dwwrite(0x666778 + 34000 + 522 * 4, 233);
        f_dwwrite(0x666778 + 34000 + 522 * 4, 233)
        # (Line 4421) dwwrite(0x666778 + 34000 + 535 * 4, 243);
        f_dwwrite(0x666778 + 34000 + 535 * 4, 243)
        # (Line 4422) bwrite(0x666778 + 14000 + 535 * 1, 17);
        f_bwrite(0x666778 + 14000 + 535 * 1, 17)
        # (Line 4423) }
        # (Line 4427) if(
    EUDEndIf()
    _t89 = EUDIf()
    # (Line 4428) Switch((15), (2))
    # (Line 4429) ){
    if _t89(Switch((15), (2))):
        # (Line 4430) var Loading;
        Loading = EUDVariable()
        # (Line 4431) EUDPlayerLoop()();
        EUDPlayerLoop()()
        # (Line 4432) if (getcurpl() == 0 || getcurpl() == 1 || getcurpl() == 2 || getcurpl() == 3 || getcurpl() == 4 || getcurpl() == 5) {
        if EUDIf()(EUDSCOr()(f_getcurpl() == 0)(f_getcurpl() == 1)(f_getcurpl() == 2)(f_getcurpl() == 3)(f_getcurpl() == 4)(f_getcurpl() == 5)()):
            # (Line 4433) if(
            _t91 = EUDIf()
            # (Line 4434) Loading == 0
            # (Line 4435) ){
            if _t91(Loading == 0):
                # (Line 4436) if(
                _t92 = EUDIf()
                # (Line 4437) autoStart >= 1
                # (Line 4438) ){
                if _t92(autoStart >= 1):
                    # (Line 4439) autoStartDisplay = 10 - autoStart / 48;
                    autoStartDisplay << (10 - autoStart // 48)
                    # (Line 4440) Roulette_Again_Display = Roulette_Again / 137;
                    Roulette_Again_Display << (Roulette_Again // 137)
                    # (Line 4441) tct.chatAnnouncement("\x08", tct.str(0x57EEEB + 36 * 0), "\x04은(는) \x07X\x04 를 꾹 눌러 시작하세요 \x07", autoStartDisplay, "초          \x11다시 굴리기 \x04: \x07E \x04(남은 기회 : \x17", Roulette_Again_Display, "\x04)");
                    tct.f_chatAnnouncement("\x08", tct.f_str(0x57EEEB + 36 * 0), "\x04은(는) \x07X\x04 를 꾹 눌러 시작하세요 \x07", autoStartDisplay, "초          \x11다시 굴리기 \x04: \x07E \x04(남은 기회 : \x17", Roulette_Again_Display, "\x04)")
                    # (Line 4442) }
                    # (Line 4443) else{
                if EUDElse()():
                    # (Line 4444) tct.chatAnnouncement("\x08", tct.str(0x57EEEB + 36 * 0), "\x04은(는) \x07X\x04 를 꾹 눌러 시작하세요          \x11다시 굴리기 \x04: \x07E \x04(남은 기회 : \x17", Roulette_Again_Display, "\x04)");
                    tct.f_chatAnnouncement("\x08", tct.f_str(0x57EEEB + 36 * 0), "\x04은(는) \x07X\x04 를 꾹 눌러 시작하세요          \x11다시 굴리기 \x04: \x07E \x04(남은 기회 : \x17", Roulette_Again_Display, "\x04)")
                    # (Line 4445) }
                    # (Line 4446) }
                EUDEndIf()
                # (Line 4447) if(
            EUDEndIf()
            _t93 = EUDIf()
            # (Line 4448) Loading >= 1
            # (Line 4449) ){
            if _t93(Loading >= 1):
                # (Line 4450) tct.chatAnnouncement("\x07Loading : \x04", Loading, "%");
                tct.f_chatAnnouncement("\x07Loading : \x04", Loading, "%")
                # (Line 4451) }
                # (Line 4452) }
            EUDEndIf()
            # (Line 4453) EUDEndPlayerLoop();
        EUDEndIf()
        EUDEndPlayerLoop()
        # (Line 4454) if(
        _t94 = EUDIf()
        # (Line 4455) Deaths((0), (10), 1, (209))
        # (Line 4456) ){
        if _t94(Deaths((0), (10), 1, (209))):
            # (Line 4457) Loading += 4;
            Loading.__iadd__(4)
            # (Line 4458) autoStart = 0;
            autoStart << (0)
            # (Line 4459) }
            # (Line 4460) else{
        if EUDElse()():
            # (Line 4461) for(var i = 0 ; i < 4 ; i++){
            i = EUDVariable()
            i << (0)
            if EUDWhile()(i >= 4, neg=True):
                def _t96():
                    i.__iadd__(1)
                # (Line 4462) if(
                _t97 = EUDIf()
                # (Line 4463) Loading >= 1
                # (Line 4464) ){
                if _t97(Loading >= 1):
                    # (Line 4465) Loading -= 1;
                    Loading.__isub__(1)
                    # (Line 4466) }
                    # (Line 4467) }
                EUDEndIf()
                # (Line 4468) }
                EUDSetContinuePoint()
                _t96()
            EUDEndWhile()
            # (Line 4469) if(
        EUDEndIf()
        _t98 = EUDIf()
        # (Line 4470) Loading >= 100 ||
        # (Line 4471) autoStart >= 480
        # (Line 4472) ){
        if _t98(EUDSCOr()(Loading >= 100)(autoStart >= 480)()):
            # (Line 4473) SetSwitch((15), (5));
            # (Line 4474) SetSwitch((16), (5));
            DoActions(SetSwitch((15), (5)))
            # (Line 4475) SetSwitch((1), (4));
            DoActions(SetSwitch((16), (5)))
            # (Line 4476) Loading = 0;
            DoActions(SetSwitch((1), (4)))
            Loading << (0)
            # (Line 4477) }
            # (Line 4478) if(
        EUDEndIf()
        _t99 = EUDIf()
        # (Line 4479) autoStart >= 1
        # (Line 4480) ){
        if _t99(autoStart >= 1):
            # (Line 4481) autoStart += 1;
            autoStart.__iadd__(1)
            # (Line 4482) }
            # (Line 4483) if(
        EUDEndIf()
        _t100 = EUDIf()
        # (Line 4484) Deaths((0), (10), 4, (207)) &&
        # (Line 4485) Roulette_Again >= 137
        # (Line 4486) ){
        if _t100(EUDSCAnd()(Deaths((0), (10), 4, (207)))(Roulette_Again >= 137)()):
            # (Line 4487) Roulette_Again -= 137;
            Roulette_Again.__isub__(137)
            # (Line 4488) SetSwitch((16), (4));
            # (Line 4489) SetSwitch((15), (5));
            DoActions(SetSwitch((16), (4)))
            # (Line 4490) Roulette_Timer = 0;
            DoActions(SetSwitch((15), (5)))
            Roulette_Timer << (0)
            # (Line 4491) for(var i = 0 ; i < 8 ; i++){
            i = EUDVariable()
            i << (0)
            if EUDWhile()(i >= 8, neg=True):
                def _t102():
                    i.__iadd__(1)
                # (Line 4492) RandomOption[i] = 0;
                _ARRW(RandomOption, i) << (0)
                # (Line 4493) }
                # (Line 4494) }
                EUDSetContinuePoint()
                _t102()
            EUDEndWhile()
            # (Line 4495) }
        EUDEndIf()
        # (Line 4498) EUDPlayerLoop()();
    EUDEndIf()
    EUDPlayerLoop()()
    # (Line 4499) if (getcurpl() == 0 || getcurpl() == 1 || getcurpl() == 2 || getcurpl() == 3 || getcurpl() == 4 || getcurpl() == 5) {
    if EUDIf()(EUDSCOr()(f_getcurpl() == 0)(f_getcurpl() == 1)(f_getcurpl() == 2)(f_getcurpl() == 3)(f_getcurpl() == 4)(f_getcurpl() == 5)()):
        # (Line 4500) if(
        _t104 = EUDIf()
        # (Line 4501) Bring((13), (10), 1, (19), (24))
        # (Line 4502) ){
        if _t104(Bring((13), (10), 1, (19), (24))):
            # (Line 4504) if(
            _t105 = EUDIf()
            # (Line 4505) Bring((6), (0), 1, (195), (PLoc[getcurpl()]))
            # (Line 4506) ){
            if _t105(Bring((6), (0), 1, (195), (PLoc[f_getcurpl()]))):
                # (Line 4507) if(
                _t106 = EUDIf()
                # (Line 4508) Deaths((6), (10), 3, (193))
                # (Line 4509) ){
                if _t106(Deaths((6), (10), 3, (193))):
                    # (Line 4510) KillUnitAt(255, (195), (PLoc[getcurpl()]), (6));
                    # (Line 4511) SetDeaths((13), (8), 25, (197));
                    DoActions(KillUnitAt(255, (195), (PLoc[f_getcurpl()]), (6)))
                    # (Line 4512) wwrite(0x665AC0 + 1696 + 380 * 2, 427);
                    DoActions(SetDeaths((13), (8), 25, (197)))
                    f_wwrite(0x665AC0 + 1696 + 380 * 2, 427)
                    # (Line 4513) CreateUnit(1, (33), (PLoc[getcurpl()]), (6));
                    # (Line 4514) KillUnit((33), (6));
                    DoActions(CreateUnit(1, (33), (PLoc[f_getcurpl()]), (6)))
                    # (Line 4515) }
                    DoActions(KillUnit((33), (6)))
                    # (Line 4516) }
                EUDEndIf()
                # (Line 4517) if(
            EUDEndIf()
            _t107 = EUDIf()
            # (Line 4518) MemoryEPD(Vulture[getcurpl()] + 0x08/4, (1), 128)
            # (Line 4519) ){
            if _t107(MemoryEPD(Vulture[f_getcurpl()] + 0x08 // 4, (1), 128)):
                # (Line 4520) SetDeaths((13), (7), 0, (197));
                # (Line 4521) KillUnitAt(1, (19), (24), (13));
                DoActions(SetDeaths((13), (7), 0, (197)))
                # (Line 4522) SetDeaths((13), (8), 1, (19));
                DoActions(KillUnitAt(1, (19), (24), (13)))
                # (Line 4523) }
                DoActions(SetDeaths((13), (8), 1, (19)))
                # (Line 4524) if(
            EUDEndIf()
            _t108 = EUDIf()
            # (Line 4525) Deaths((13), (0), 10, (197))
            # (Line 4526) ){
            if _t108(Deaths((13), (0), 10, (197))):
                # (Line 4527) while(
                _t109 = EUDWhile()
                # (Line 4528) Deaths((13), (0), 10, (197))
                # (Line 4529) ){
                if _t109(Deaths((13), (0), 10, (197))):
                    # (Line 4530) SetDeaths((13), (9), 10, (197));
                    # (Line 4531) SetMemoryEPD(Vulture[getcurpl()] + 0x08/4, (9), 2560);
                    DoActions(SetDeaths((13), (9), 10, (197)))
                    # (Line 4532) }
                    DoActions(SetMemoryEPD(Vulture[f_getcurpl()] + 0x08 // 4, (9), 2560))
                    # (Line 4533) }
                EUDEndWhile()
                # (Line 4534) else{
            if EUDElse()():
                # (Line 4535) while(
                _t110 = EUDWhile()
                # (Line 4536) Deaths((13), (0), 1, (197))
                # (Line 4537) ){
                if _t110(Deaths((13), (0), 1, (197))):
                    # (Line 4538) SetDeaths((13), (9), 1, (197));
                    # (Line 4539) SetMemoryEPD(Vulture[getcurpl()] + 0x08/4, (9), 256);
                    DoActions(SetDeaths((13), (9), 1, (197)))
                    # (Line 4540) }
                    DoActions(SetMemoryEPD(Vulture[f_getcurpl()] + 0x08 // 4, (9), 256))
                    # (Line 4541) }
                EUDEndWhile()
                # (Line 4543) }
            EUDEndIf()
            # (Line 4544) }
        EUDEndIf()
        # (Line 4545) EUDEndPlayerLoop();
    EUDEndIf()
    EUDEndPlayerLoop()
    # (Line 4548) EUDPlayerLoop()();
    EUDPlayerLoop()()
    # (Line 4549) if (getcurpl() == 0 || getcurpl() == 1 || getcurpl() == 2 || getcurpl() == 3 || getcurpl() == 4 || getcurpl() == 5) {
    if EUDIf()(EUDSCOr()(f_getcurpl() == 0)(f_getcurpl() == 1)(f_getcurpl() == 2)(f_getcurpl() == 3)(f_getcurpl() == 4)(f_getcurpl() == 5)()):
        # (Line 4551) if(
        _t112 = EUDIf()
        # (Line 4552) UnitClickCheck(getcurpl(),200)
        # (Line 4553) ){
        if _t112(UnitClickCheck(f_getcurpl(), 200)):
            # (Line 4554) if(
            _t113 = EUDIf()
            # (Line 4555) Deaths((13), (0), 1, (179))
            # (Line 4556) ){
            if _t113(Deaths((13), (0), 1, (179))):
                # (Line 4557) SetDeaths((13), (7), 0, (179));
                # (Line 4558) SetDeaths((13), (7), 1, (180));
                DoActions(SetDeaths((13), (7), 0, (179)))
                # (Line 4559) GiveUnits(1, (230), (7), (51), (6));
                DoActions(SetDeaths((13), (7), 1, (180)))
                # (Line 4560) GiveUnits(1, (230), (6), (51), (7));
                DoActions(GiveUnits(1, (230), (7), (51), (6)))
                # (Line 4561) PlayWAV("sound\\Misc\\PBldgPlc.wav");
                DoActions(GiveUnits(1, (230), (6), (51), (7)))
                # (Line 4562) if(
                DoActions(PlayWAV("sound\\Misc\\PBldgPlc.wav"))
                _t114 = EUDIf()
                # (Line 4563) Bring((13), (0), 1, (230), (24))
                # (Line 4564) ){
                if _t114(Bring((13), (0), 1, (230), (24))):
                    # (Line 4565) CenterView((PLoc[getcurpl()]));
                    # (Line 4566) }
                    DoActions(CenterView((PLoc[f_getcurpl()])))
                    # (Line 4567) DisplayText("\x13\x1C오라\x04가 \x08해제\x04되었습니다.", (0));
                EUDEndIf()
                # (Line 4568) }
                DoActions(DisplayText("\x13\x1C오라\x04가 \x08해제\x04되었습니다.", (0)))
                # (Line 4569) else{
            if EUDElse()():
                # (Line 4570) GiveUnits(1, (230), (7), (51), (6));
                # (Line 4571) GiveUnits(1, (230), (6), (51), (7));
                DoActions(GiveUnits(1, (230), (7), (51), (6)))
                # (Line 4572) PlayWAV("sound\\Misc\\PError.WAV");
                DoActions(GiveUnits(1, (230), (6), (51), (7)))
                # (Line 4573) DisplayText("\x13\x07장착\x04된 \x1C오라\x04가 없습니다.", (0));
                DoActions(PlayWAV("sound\\Misc\\PError.WAV"))
                # (Line 4574) }
                DoActions(DisplayText("\x13\x07장착\x04된 \x1C오라\x04가 없습니다.", (0)))
                # (Line 4575) }
            EUDEndIf()
            # (Line 4578) if(
        EUDEndIf()
        _t115 = EUDIf()
        # (Line 4579) UnitClickCheck(getcurpl(),201)
        # (Line 4580) ){
        if _t115(UnitClickCheck(f_getcurpl(), 201)):
            # (Line 4581) if(
            _t116 = EUDIf()
            # (Line 4582) Deaths((13), (10), 1, (109))
            # (Line 4583) ){
            if _t116(Deaths((13), (10), 1, (109))):
                # (Line 4584) SetDeaths((13), (7), 1, (179));
                # (Line 4585) SetDeaths((13), (7), 1, (180));
                DoActions(SetDeaths((13), (7), 1, (179)))
                # (Line 4586) GiveUnits(1, (230), (7), (60), (6));
                DoActions(SetDeaths((13), (7), 1, (180)))
                # (Line 4587) GiveUnits(1, (230), (6), (60), (7));
                DoActions(GiveUnits(1, (230), (7), (60), (6)))
                # (Line 4588) PlayWAV("sound\\Misc\\PBldgPlc.wav");
                DoActions(GiveUnits(1, (230), (6), (60), (7)))
                # (Line 4589) if(
                DoActions(PlayWAV("sound\\Misc\\PBldgPlc.wav"))
                _t117 = EUDIf()
                # (Line 4590) Bring((13), (0), 1, (230), (24))
                # (Line 4591) ){
                if _t117(Bring((13), (0), 1, (230), (24))):
                    # (Line 4592) CenterView((PLoc[getcurpl()]));
                    # (Line 4593) }
                    DoActions(CenterView((PLoc[f_getcurpl()])))
                    # (Line 4594) DisplayText("\x13\x1C오라\x04가 \x07장착\x04되었습니다.", (0));
                EUDEndIf()
                # (Line 4595) }
                DoActions(DisplayText("\x13\x1C오라\x04가 \x07장착\x04되었습니다.", (0)))
                # (Line 4596) else{
            if EUDElse()():
                # (Line 4597) GiveUnits(1, (230), (7), (60), (6));
                # (Line 4598) GiveUnits(1, (230), (6), (60), (7));
                DoActions(GiveUnits(1, (230), (7), (60), (6)))
                # (Line 4599) PlayWAV("sound\\Misc\\PError.WAV");
                DoActions(GiveUnits(1, (230), (6), (60), (7)))
                # (Line 4600) DisplayText("\n\x13\x04이 \x1C오라\x04를 \x07장착\x04할 수 없습니다.\n\x13\x1C획득 조건 \x04- \x08[ \x04마엘 오라 \x08] \x04옵션이 뜬 라운드의 클리어 영상을 인증받음\n\n", (0));
                DoActions(PlayWAV("sound\\Misc\\PError.WAV"))
                # (Line 4601) }
                DoActions(DisplayText("\n\x13\x04이 \x1C오라\x04를 \x07장착\x04할 수 없습니다.\n\x13\x1C획득 조건 \x04- \x08[ \x04마엘 오라 \x08] \x04옵션이 뜬 라운드의 클리어 영상을 인증받음\n\n", (0)))
                # (Line 4602) }
            EUDEndIf()
            # (Line 4605) if(
        EUDEndIf()
        _t118 = EUDIf()
        # (Line 4606) UnitClickCheck(getcurpl(),202)
        # (Line 4607) ){
        if _t118(UnitClickCheck(f_getcurpl(), 202)):
            # (Line 4608) if(
            _t119 = EUDIf()
            # (Line 4609) Deaths((13), (10), 1, (114))
            # (Line 4610) ){
            if _t119(Deaths((13), (10), 1, (114))):
                # (Line 4611) SetDeaths((13), (7), 2, (179));
                # (Line 4612) SetDeaths((13), (7), 1, (180));
                DoActions(SetDeaths((13), (7), 2, (179)))
                # (Line 4613) GiveUnits(1, (230), (7), (61), (6));
                DoActions(SetDeaths((13), (7), 1, (180)))
                # (Line 4614) GiveUnits(1, (230), (6), (61), (7));
                DoActions(GiveUnits(1, (230), (7), (61), (6)))
                # (Line 4615) PlayWAV("sound\\Misc\\PBldgPlc.wav");
                DoActions(GiveUnits(1, (230), (6), (61), (7)))
                # (Line 4616) if(
                DoActions(PlayWAV("sound\\Misc\\PBldgPlc.wav"))
                _t120 = EUDIf()
                # (Line 4617) Bring((13), (0), 1, (230), (24))
                # (Line 4618) ){
                if _t120(Bring((13), (0), 1, (230), (24))):
                    # (Line 4619) CenterView((PLoc[getcurpl()]));
                    # (Line 4620) }
                    DoActions(CenterView((PLoc[f_getcurpl()])))
                    # (Line 4621) Aura_RainbowArchonEnabled[getcurpl()] = 0;
                EUDEndIf()
                _ARRW(Aura_RainbowArchonEnabled, f_getcurpl()) << (0)
                # (Line 4622) DisplayText("\x13\x1C오라\x04가 \x07장착\x04되었습니다.", (0));
                # (Line 4623) }
                DoActions(DisplayText("\x13\x1C오라\x04가 \x07장착\x04되었습니다.", (0)))
                # (Line 4624) else{
            if EUDElse()():
                # (Line 4625) GiveUnits(1, (230), (7), (61), (6));
                # (Line 4626) GiveUnits(1, (230), (6), (61), (7));
                DoActions(GiveUnits(1, (230), (7), (61), (6)))
                # (Line 4627) PlayWAV("sound\\Misc\\PError.WAV");
                DoActions(GiveUnits(1, (230), (6), (61), (7)))
                # (Line 4628) DisplayText("\n\x13\x04이 \x1C오라\x04를 \x07장착\x04할 수 없습니다.\n\x13\x1C획득 조건 \x04- \x11\x08[ \x04아칸 오라 \x08] \x04옵션이 뜬 라운드의 클리어 영상을 인증받음\n", (0));
                DoActions(PlayWAV("sound\\Misc\\PError.WAV"))
                # (Line 4629) }
                DoActions(DisplayText("\n\x13\x04이 \x1C오라\x04를 \x07장착\x04할 수 없습니다.\n\x13\x1C획득 조건 \x04- \x11\x08[ \x04아칸 오라 \x08] \x04옵션이 뜬 라운드의 클리어 영상을 인증받음\n", (0)))
                # (Line 4630) }
            EUDEndIf()
            # (Line 4631) if(
        EUDEndIf()
        _t121 = EUDIf()
        # (Line 4632) ClassO[getcurpl()] == 1
        # (Line 4633) ){
        if _t121(ClassO[f_getcurpl()] == 1):
            # (Line 4634) if(
            _t122 = EUDIf()
            # (Line 4635) ClassOEffect >= 1
            # (Line 4636) ){
            if _t122(ClassOEffect >= 1):
                # (Line 4637) ClassOEffect -= 1;
                ClassOEffect.__isub__(1)
                # (Line 4638) }
                # (Line 4639) if(
            EUDEndIf()
            _t123 = EUDIf()
            # (Line 4640) Bring((13), (0), 1, (114), (24)) &&
            # (Line 4641) MemoryEPD(Vulture[getcurpl()] + 0x038 / 4, AtLeast, 870) &&
            # (Line 4642) ClassOEffect == 0
            # (Line 4643) ){
            if _t123(EUDSCAnd()(Bring((13), (0), 1, (114), (24)))(MemoryEPD(Vulture[f_getcurpl()] + 0x038 // 4, AtLeast, 870))(ClassOEffect == 0)()):
                # (Line 4644) ClassOEffect = 24;
                ClassOEffect << (24)
                # (Line 4645) wwrite(0x665AC0 + 1696 + 380 * 2, 391);
                f_wwrite(0x665AC0 + 1696 + 380 * 2, 391)
                # (Line 4646) CreateUnit(1, (33), (PLoc[getcurpl()]), (13));
                # (Line 4647) KillUnit((33), (13));
                DoActions(CreateUnit(1, (33), (PLoc[f_getcurpl()]), (13)))
                # (Line 4648) }
                DoActions(KillUnit((33), (13)))
                # (Line 4649) }
            EUDEndIf()
            # (Line 4652) if(
        EUDEndIf()
        _t124 = EUDIf()
        # (Line 4653) UnitClickCheck(getcurpl(),203)
        # (Line 4654) ){
        if _t124(UnitClickCheck(f_getcurpl(), 203)):
            # (Line 4655) if(
            _t125 = EUDIf()
            # (Line 4656) Deaths((13), (10), 1, (123))
            # (Line 4657) ){
            if _t125(Deaths((13), (10), 1, (123))):
                # (Line 4658) SetDeaths((13), (7), 3, (179));
                # (Line 4659) SetDeaths((13), (7), 1, (180));
                DoActions(SetDeaths((13), (7), 3, (179)))
                # (Line 4660) GiveUnits(1, (230), (7), (62), (6));
                DoActions(SetDeaths((13), (7), 1, (180)))
                # (Line 4661) GiveUnits(1, (230), (6), (62), (7));
                DoActions(GiveUnits(1, (230), (7), (62), (6)))
                # (Line 4663) if(
                DoActions(GiveUnits(1, (230), (6), (62), (7)))
                _t126 = EUDIf()
                # (Line 4664) SuzumuraAlrI[getcurpl()] == 1
                # (Line 4665) ){
                if _t126(SuzumuraAlrI[f_getcurpl()] == 1):
                    # (Line 4666) bwrite(0x65FD00 + 14776 + PVulture[getcurpl()] * 1, 53);
                    f_bwrite(0x65FD00 + 14776 + PVulture[f_getcurpl()] * 1, 53)
                    # (Line 4667) bwrite(0x65FD00 + 14776 + PHoldFire[getcurpl()] * 1, 53);
                    f_bwrite(0x65FD00 + 14776 + PHoldFire[f_getcurpl()] * 1, 53)
                    # (Line 4668) }
                    # (Line 4671) if(
                EUDEndIf()
                _t127 = EUDIf()
                # (Line 4672) IGO_Sera[getcurpl()] == 1
                # (Line 4673) ){
                if _t127(IGO_Sera[f_getcurpl()] == 1):
                    # (Line 4674) bwrite(0x65FD00 + 14776 + PVulture[getcurpl()] * 1, 28);
                    f_bwrite(0x65FD00 + 14776 + PVulture[f_getcurpl()] * 1, 28)
                    # (Line 4675) bwrite(0x65FD00 + 14776 + PHoldFire[getcurpl()] * 1, 28);
                    f_bwrite(0x65FD00 + 14776 + PHoldFire[f_getcurpl()] * 1, 28)
                    # (Line 4676) }
                    # (Line 4678) PlayWAV("sound\\Misc\\PBldgPlc.wav");
                EUDEndIf()
                # (Line 4679) if(
                DoActions(PlayWAV("sound\\Misc\\PBldgPlc.wav"))
                _t128 = EUDIf()
                # (Line 4680) Bring((13), (0), 1, (230), (24))
                # (Line 4681) ){
                if _t128(Bring((13), (0), 1, (230), (24))):
                    # (Line 4682) CenterView((PLoc[getcurpl()]));
                    # (Line 4683) }
                    DoActions(CenterView((PLoc[f_getcurpl()])))
                    # (Line 4684) DisplayText("\x13\x1C오라\x04가 \x07장착\x04되었습니다.", (0));
                EUDEndIf()
                # (Line 4685) }
                DoActions(DisplayText("\x13\x1C오라\x04가 \x07장착\x04되었습니다.", (0)))
                # (Line 4686) else{
            if EUDElse()():
                # (Line 4687) GiveUnits(1, (230), (7), (62), (6));
                # (Line 4688) GiveUnits(1, (230), (6), (62), (7));
                DoActions(GiveUnits(1, (230), (7), (62), (6)))
                # (Line 4689) PlayWAV("sound\\Misc\\PError.WAV");
                DoActions(GiveUnits(1, (230), (6), (62), (7)))
                # (Line 4690) DisplayText("\n\x13\x04이 \x1C오라\x04를 \x07장착\x04할 수 없습니다.\n\x13\x1C획득 조건 \x04- 맵 테스트 지속적인 참여, 버그 제보 등 맵 제작에 기여\n", (0));
                DoActions(PlayWAV("sound\\Misc\\PError.WAV"))
                # (Line 4691) }
                DoActions(DisplayText("\n\x13\x04이 \x1C오라\x04를 \x07장착\x04할 수 없습니다.\n\x13\x1C획득 조건 \x04- 맵 테스트 지속적인 참여, 버그 제보 등 맵 제작에 기여\n", (0)))
                # (Line 4692) }
            EUDEndIf()
            # (Line 4695) if(
        EUDEndIf()
        _t129 = EUDIf()
        # (Line 4696) UnitClickCheck(getcurpl(),204)
        # (Line 4697) ){
        if _t129(UnitClickCheck(f_getcurpl(), 204)):
            # (Line 4698) if(
            _t130 = EUDIf()
            # (Line 4699) Deaths((13), (10), 1, (111))
            # (Line 4700) ){
            if _t130(Deaths((13), (10), 1, (111))):
                # (Line 4701) SetDeaths((13), (7), 4, (179));
                # (Line 4702) SetDeaths((13), (7), 1, (180));
                DoActions(SetDeaths((13), (7), 4, (179)))
                # (Line 4703) GiveUnits(1, (230), (7), (15), (6));
                DoActions(SetDeaths((13), (7), 1, (180)))
                # (Line 4704) GiveUnits(1, (230), (6), (15), (7));
                DoActions(GiveUnits(1, (230), (7), (15), (6)))
                # (Line 4705) PlayWAV("sound\\Misc\\PBldgPlc.wav");
                DoActions(GiveUnits(1, (230), (6), (15), (7)))
                # (Line 4706) if(
                DoActions(PlayWAV("sound\\Misc\\PBldgPlc.wav"))
                _t131 = EUDIf()
                # (Line 4707) Bring((13), (0), 1, (230), (24))
                # (Line 4708) ){
                if _t131(Bring((13), (0), 1, (230), (24))):
                    # (Line 4709) CenterView((PLoc[getcurpl()]));
                    # (Line 4710) }
                    DoActions(CenterView((PLoc[f_getcurpl()])))
                    # (Line 4711) DisplayText("\x13\x1C오라\x04가 \x07장착\x04되었습니다.", (0));
                EUDEndIf()
                # (Line 4712) }
                DoActions(DisplayText("\x13\x1C오라\x04가 \x07장착\x04되었습니다.", (0)))
                # (Line 4713) else{
            if EUDElse()():
                # (Line 4714) GiveUnits(1, (230), (7), (15), (6));
                # (Line 4715) GiveUnits(1, (230), (6), (15), (7));
                DoActions(GiveUnits(1, (230), (7), (15), (6)))
                # (Line 4716) PlayWAV("sound\\Misc\\PError.WAV");
                DoActions(GiveUnits(1, (230), (6), (15), (7)))
                # (Line 4717) DisplayText("\n\x13\x04이 \x1C오라\x04를 \x07장착\x04할 수 없습니다.\n\x13\x1C획득 조건 \x04- 맵 테스트 지속적인 참여, 버그 제보 등 맵 제작에 \x1F큰 \x04기여\n", (0));
                DoActions(PlayWAV("sound\\Misc\\PError.WAV"))
                # (Line 4718) }
                DoActions(DisplayText("\n\x13\x04이 \x1C오라\x04를 \x07장착\x04할 수 없습니다.\n\x13\x1C획득 조건 \x04- 맵 테스트 지속적인 참여, 버그 제보 등 맵 제작에 \x1F큰 \x04기여\n", (0)))
                # (Line 4719) }
            EUDEndIf()
            # (Line 4722) if(
        EUDEndIf()
        _t132 = EUDIf()
        # (Line 4723) UnitClickCheck(getcurpl(),AuraVIPIndex)
        # (Line 4724) ){
        if _t132(UnitClickCheck(f_getcurpl(), AuraVIPIndex)):
            # (Line 4725) if(
            _t133 = EUDIf()
            # (Line 4726) Deaths((13), (10), 1, (113))
            # (Line 4727) ){
            if _t133(Deaths((13), (10), 1, (113))):
                # (Line 4728) SetDeaths((13), (7), 5, (179));
                # (Line 4729) SetDeaths((13), (7), 1, (180));
                DoActions(SetDeaths((13), (7), 5, (179)))
                # (Line 4730) GiveUnits(1, (230), (7), (45), (6));
                DoActions(SetDeaths((13), (7), 1, (180)))
                # (Line 4731) GiveUnits(1, (230), (6), (45), (7));
                DoActions(GiveUnits(1, (230), (7), (45), (6)))
                # (Line 4732) PlayWAV("sound\\Misc\\PBldgPlc.wav");
                DoActions(GiveUnits(1, (230), (6), (45), (7)))
                # (Line 4733) if(
                DoActions(PlayWAV("sound\\Misc\\PBldgPlc.wav"))
                _t134 = EUDIf()
                # (Line 4734) Bring((13), (0), 1, (230), (24))
                # (Line 4735) ){
                if _t134(Bring((13), (0), 1, (230), (24))):
                    # (Line 4736) CenterView((PLoc[getcurpl()]));
                    # (Line 4737) }
                    DoActions(CenterView((PLoc[f_getcurpl()])))
                    # (Line 4738) DisplayText("\x13\x1C오라\x04가 \x07장착\x04되었습니다.", (0));
                EUDEndIf()
                # (Line 4739) }
                DoActions(DisplayText("\x13\x1C오라\x04가 \x07장착\x04되었습니다.", (0)))
                # (Line 4740) else{
            if EUDElse()():
                # (Line 4741) GiveUnits(1, (230), (7), (45), (6));
                # (Line 4742) GiveUnits(1, (230), (6), (45), (7));
                DoActions(GiveUnits(1, (230), (7), (45), (6)))
                # (Line 4743) PlayWAV("sound\\Misc\\PError.WAV");
                DoActions(GiveUnits(1, (230), (6), (45), (7)))
                # (Line 4744) DisplayText("\n\x13\x04이 \x1C오라\x04를 \x07장착\x04할 수 없습니다.\n\x13\x1C획득 조건 \x04- \x11블랙벌쳐, 아칸오라, 마엘오라, 뮤탈 및 레이스 스킨 모두 소유\n", (0));
                DoActions(PlayWAV("sound\\Misc\\PError.WAV"))
                # (Line 4745) }
                DoActions(DisplayText("\n\x13\x04이 \x1C오라\x04를 \x07장착\x04할 수 없습니다.\n\x13\x1C획득 조건 \x04- \x11블랙벌쳐, 아칸오라, 마엘오라, 뮤탈 및 레이스 스킨 모두 소유\n", (0)))
                # (Line 4746) }
            EUDEndIf()
            # (Line 4749) if(
        EUDEndIf()
        _t135 = EUDIf()
        # (Line 4750) UnitClickCheck(getcurpl(),299)
        # (Line 4751) ){
        if _t135(UnitClickCheck(f_getcurpl(), 299)):
            # (Line 4752) if(
            _t136 = EUDIf()
            # (Line 4753) Skin_Select[getcurpl()] >= 1 ||
            # (Line 4754) RainbowEnabled[getcurpl()] >= 1
            # (Line 4755) ){
            if _t136(EUDSCOr()(Skin_Select[f_getcurpl()] >= 1)(RainbowEnabled[f_getcurpl()] >= 1)()):
                # (Line 4756) Skin_Select[getcurpl()] = 0;
                _ARRW(Skin_Select, f_getcurpl()) << (0)
                # (Line 4757) RainbowEnabled[getcurpl()] = 0;
                _ARRW(RainbowEnabled, f_getcurpl()) << (0)
                # (Line 4758) GiveUnits(1, (230), (7), (68), (6));
                # (Line 4759) GiveUnits(1, (230), (6), (68), (7));
                DoActions(GiveUnits(1, (230), (7), (68), (6)))
                # (Line 4760) PlayWAV("sound\\Misc\\PBldgPlc.wav");
                DoActions(GiveUnits(1, (230), (6), (68), (7)))
                # (Line 4761) DisplayText("\x13\x1C스킨\x04이 \x08해제\x04되었습니다.", (0));
                DoActions(PlayWAV("sound\\Misc\\PBldgPlc.wav"))
                # (Line 4762) if(
                DoActions(DisplayText("\x13\x1C스킨\x04이 \x08해제\x04되었습니다.", (0)))
                _t137 = EUDIf()
                # (Line 4763) Vulture[getcurpl()] != 0 &&
                # (Line 4764) Bring((13), (0), 1, (PVulture[getcurpl()]), (64))
                # (Line 4765) ){
                if _t137(EUDSCAnd()(Vulture[f_getcurpl()] == 0, neg=True)(Bring((13), (0), 1, (PVulture[f_getcurpl()]), (64)))()):
                    # (Line 4766) SetUnitColorEPD(Vulture[getcurpl()],Pcolor[getcurpl()]);
                    SetUnitColorEPD(Vulture[f_getcurpl()], Pcolor[f_getcurpl()])
                    # (Line 4767) }
                    # (Line 4769) if(
                EUDEndIf()
                _t138 = EUDIf()
                # (Line 4770) Bring((13), (0), 1, (230), (24))
                # (Line 4771) ){
                if _t138(Bring((13), (0), 1, (230), (24))):
                    # (Line 4772) Vulture_Hitpoints[getcurpl()] = dwread_epd(Vulture[getcurpl()] + 0x008 / 4);
                    _ARRW(Vulture_Hitpoints, f_getcurpl()) << (f_dwread_epd(Vulture[f_getcurpl()] + 0x008 // 4))
                    # (Line 4773) RemoveUnit((PVulture[getcurpl()]), (13));
                    # (Line 4774) Vulture[getcurpl()] = epdread_epd(EPD(0x628438));
                    DoActions(RemoveUnit((PVulture[f_getcurpl()]), (13)))
                    _ARRW(Vulture, f_getcurpl()) << (f_epdread_epd(EPD(0x628438)))
                    # (Line 4775) wwrite(0x665AC0 + 1696 + 244 * 2, 256);
                    f_wwrite(0x665AC0 + 1696 + 244 * 2, 256)
                    # (Line 4776) bwrite(0x666778 + 14000 + 256 * 1, 0);
                    f_bwrite(0x666778 + 14000 + 256 * 1, 0)
                    # (Line 4777) dwwrite(0x666778 + 34000 + 256 * 4, 86);
                    f_dwwrite(0x666778 + 34000 + 256 * 4, 86)
                    # (Line 4778) CreateUnit(1, (PVulture[getcurpl()]), (PLoc[getcurpl()]), (13));
                    # (Line 4779) SetMemoryEPD(Vulture[getcurpl()] + 0x008 / 4, SetTo, Vulture_Hitpoints[getcurpl()]);
                    DoActions(CreateUnit(1, (PVulture[f_getcurpl()]), (PLoc[f_getcurpl()]), (13)))
                    # (Line 4780) if(
                    DoActions(SetMemoryEPD(Vulture[f_getcurpl()] + 0x008 // 4, SetTo, Vulture_Hitpoints[f_getcurpl()]))
                    _t139 = EUDIf()
                    # (Line 4781) Bring((13), (0), 1, (230), (24))
                    # (Line 4782) ){
                    if _t139(Bring((13), (0), 1, (230), (24))):
                        # (Line 4783) CenterView((PLoc[getcurpl()]));
                        # (Line 4784) }
                        DoActions(CenterView((PLoc[f_getcurpl()])))
                        # (Line 4786) if(
                    EUDEndIf()
                    _t140 = EUDIf()
                    # (Line 4787) Vulture_Booster[getcurpl()] == 1
                    # (Line 4788) ){
                    if _t140(Vulture_Booster[f_getcurpl()] == 1):
                        # (Line 4789) SetMemoryEPD(Vulture[getcurpl()] + 0x034 / 4, SetTo, 1575);
                        # (Line 4790) wwrite_epd(Vulture[getcurpl()] + 0x048 / 4,  0x048 % 4, 46);
                        DoActions(SetMemoryEPD(Vulture[f_getcurpl()] + 0x034 // 4, SetTo, 1575))
                        f_wwrite_epd(Vulture[f_getcurpl()] + 0x048 // 4, 0x048 % 4, 46)
                        # (Line 4791) bwrite_epd(Vulture[getcurpl()] + 0x022 / 4,  0x022 % 4, 50);
                        f_bwrite_epd(Vulture[f_getcurpl()] + 0x022 // 4, 0x022 % 4, 50)
                        # (Line 4792) if(
                        _t141 = EUDIf()
                        # (Line 4793) Memory(0x57F1B0, Exactly, (getcurpl()))
                        # (Line 4794) ){
                        if _t141(Memory(0x57F1B0, Exactly, (f_getcurpl()))):
                            # (Line 4795) btnPtr, btnPos = EPD(0x5187EC) + 57, 5 * 5;
                            _SV([btnPtr, btnPos], [EPD(0x5187EC) + 57, 5 * 5])
                            # (Line 4796) dwadd_epd(btnPtr, 0);
                            f_dwadd_epd(btnPtr, 0)
                            # (Line 4797) btnPos += epdread_epd(btnPtr);
                            btnPos.__iadd__(f_epdread_epd(btnPtr))
                            # (Line 4798) oldCP = getcurpl();
                            oldCP << (f_getcurpl())
                            # (Line 4799) DoActions(list(
                            # (Line 4800) SetMemory(0x6509B0, SetTo, btnPos),
                            # (Line 4801) SetDeaths(CurrentPlayer, SetTo, 24576007, 0),
                            # (Line 4802) SetMemory(0x6509B0, Add, 1),
                            # (Line 4803) SetDeaths(CurrentPlayer, SetTo, 4361824, 0),
                            # (Line 4804) SetMemory(0x6509B0, Add, 1),
                            # (Line 4805) SetDeaths(CurrentPlayer, SetTo, 4338864, 0),
                            # (Line 4806) SetMemory(0x6509B0, Add, 1),
                            # (Line 4807) SetDeaths(CurrentPlayer, SetTo, 327685, 0),
                            # (Line 4808) SetMemory(0x6509B0, Add, 1),
                            # (Line 4809) SetDeaths(CurrentPlayer, SetTo, 1396, 0),
                            # (Line 4810) SetMemory(0x6509B0, SetTo, oldCP),
                            # (Line 4811) ));
                            DoActions(FlattenList([SetMemory(0x6509B0, SetTo, btnPos), SetDeaths(CurrentPlayer, SetTo, 24576007, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 4361824, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 4338864, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 327685, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 1396, 0), SetMemory(0x6509B0, SetTo, oldCP)]))
                            # (Line 4812) }
                            # (Line 4813) }
                        EUDEndIf()
                        # (Line 4814) else{
                    if EUDElse()():
                        # (Line 4815) SetMemoryEPD(Vulture[getcurpl()] + 0x034 / 4, SetTo, 1050);
                        # (Line 4816) wwrite_epd(Vulture[getcurpl()] + 0x048 / 4,  0x048 % 4, 23);
                        DoActions(SetMemoryEPD(Vulture[f_getcurpl()] + 0x034 // 4, SetTo, 1050))
                        f_wwrite_epd(Vulture[f_getcurpl()] + 0x048 // 4, 0x048 % 4, 23)
                        # (Line 4817) bwrite_epd(Vulture[getcurpl()] + 0x022 / 4,  0x022 % 4, 25);
                        f_bwrite_epd(Vulture[f_getcurpl()] + 0x022 // 4, 0x022 % 4, 25)
                        # (Line 4818) if(
                        _t142 = EUDIf()
                        # (Line 4819) Memory(0x57F1B0, Exactly, (getcurpl()))
                        # (Line 4820) ){
                        if _t142(Memory(0x57F1B0, Exactly, (f_getcurpl()))):
                            # (Line 4821) btnPtr, btnPos = EPD(0x5187EC) + 57, 5 * 5;
                            _SV([btnPtr, btnPos], [EPD(0x5187EC) + 57, 5 * 5])
                            # (Line 4822) dwadd_epd(btnPtr, 0);
                            f_dwadd_epd(btnPtr, 0)
                            # (Line 4823) btnPos += epdread_epd(btnPtr);
                            btnPos.__iadd__(f_epdread_epd(btnPtr))
                            # (Line 4824) oldCP = getcurpl();
                            oldCP << (f_getcurpl())
                            # (Line 4825) DoActions(list(
                            # (Line 4826) SetMemory(0x6509B0, SetTo, btnPos),
                            # (Line 4827) SetDeaths(CurrentPlayer, SetTo, 24510471, 0),
                            # (Line 4828) SetMemory(0x6509B0, Add, 1),
                            # (Line 4829) SetDeaths(CurrentPlayer, SetTo, 4361824, 0),
                            # (Line 4830) SetMemory(0x6509B0, Add, 1),
                            # (Line 4831) SetDeaths(CurrentPlayer, SetTo, 4338864, 0),
                            # (Line 4832) SetMemory(0x6509B0, Add, 1),
                            # (Line 4833) SetDeaths(CurrentPlayer, SetTo, 327685, 0),
                            # (Line 4834) SetMemory(0x6509B0, Add, 1),
                            # (Line 4835) SetDeaths(CurrentPlayer, SetTo, 1395, 0),
                            # (Line 4836) SetMemory(0x6509B0, SetTo, oldCP),
                            # (Line 4837) ));
                            DoActions(FlattenList([SetMemory(0x6509B0, SetTo, btnPos), SetDeaths(CurrentPlayer, SetTo, 24510471, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 4361824, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 4338864, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 327685, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 1395, 0), SetMemory(0x6509B0, SetTo, oldCP)]))
                            # (Line 4838) }
                            # (Line 4839) }
                        EUDEndIf()
                        # (Line 4841) hotkeyUnitEPD(Vulture[getcurpl()],getcurpl(),1,0);
                    EUDEndIf()
                    f_hotkeyUnitEPD(Vulture[f_getcurpl()], f_getcurpl(), 1, 0)
                    # (Line 4842) }
                    # (Line 4844) }
                EUDEndIf()
                # (Line 4845) else{
            if EUDElse()():
                # (Line 4846) GiveUnits(1, (230), (7), (68), (6));
                # (Line 4847) GiveUnits(1, (230), (6), (68), (7));
                DoActions(GiveUnits(1, (230), (7), (68), (6)))
                # (Line 4848) PlayWAV("sound\\Misc\\PError.WAV");
                DoActions(GiveUnits(1, (230), (6), (68), (7)))
                # (Line 4849) DisplayText("\x13\x07장착\x04된 \x1C스킨\x04이 없습니다.", (0));
                DoActions(PlayWAV("sound\\Misc\\PError.WAV"))
                # (Line 4850) }
                DoActions(DisplayText("\x13\x07장착\x04된 \x1C스킨\x04이 없습니다.", (0)))
                # (Line 4851) }
            EUDEndIf()
            # (Line 4854) if(
        EUDEndIf()
        _t143 = EUDIf()
        # (Line 4855) UnitClickCheck(getcurpl(),300)
        # (Line 4856) ){
        if _t143(UnitClickCheck(f_getcurpl(), 300)):
            # (Line 4857) if(
            _t144 = EUDIf()
            # (Line 4858) Skin_Scout[getcurpl()] >= 0
            # (Line 4859) ){
            if _t144(Skin_Scout[f_getcurpl()] >= 0):
                # (Line 4860) Skin_Select[getcurpl()] = 1;
                _ARRW(Skin_Select, f_getcurpl()) << (1)
                # (Line 4861) GiveUnits(1, (230), (7), (67), (6));
                # (Line 4862) GiveUnits(1, (230), (6), (67), (7));
                DoActions(GiveUnits(1, (230), (7), (67), (6)))
                # (Line 4863) PlayWAV("sound\\Misc\\PBldgPlc.wav");
                DoActions(GiveUnits(1, (230), (6), (67), (7)))
                # (Line 4864) DisplayText("\x13\x1C스킨\x04이 \x07장착\x04되었습니다.", (0));
                DoActions(PlayWAV("sound\\Misc\\PBldgPlc.wav"))
                # (Line 4866) if(
                DoActions(DisplayText("\x13\x1C스킨\x04이 \x07장착\x04되었습니다.", (0)))
                _t145 = EUDIf()
                # (Line 4867) Bring((13), (0), 1, (230), (24))
                # (Line 4868) ){
                if _t145(Bring((13), (0), 1, (230), (24))):
                    # (Line 4869) Vulture_Hitpoints[getcurpl()] = dwread_epd(Vulture[getcurpl()] + 0x008 / 4);
                    _ARRW(Vulture_Hitpoints, f_getcurpl()) << (f_dwread_epd(Vulture[f_getcurpl()] + 0x008 // 4))
                    # (Line 4870) RemoveUnit((PVulture[getcurpl()]), (13));
                    # (Line 4871) Vulture[getcurpl()] = epdread_epd(EPD(0x628438));
                    DoActions(RemoveUnit((PVulture[f_getcurpl()]), (13)))
                    _ARRW(Vulture, f_getcurpl()) << (f_epdread_epd(EPD(0x628438)))
                    # (Line 4872) wwrite(0x665AC0 + 1696 + 244 * 2, 140);
                    f_wwrite(0x665AC0 + 1696 + 244 * 2, 140)
                    # (Line 4874) if(
                    _t146 = EUDIf()
                    # (Line 4875) IGO_Sera[getcurpl()] == 1
                    # (Line 4876) ){
                    if _t146(IGO_Sera[f_getcurpl()] == 1):
                        # (Line 4877) bwrite(0x666778 + 14000 + 929 * 1, 16);
                        f_bwrite(0x666778 + 14000 + 929 * 1, 16)
                        # (Line 4878) wwrite(0x665AC0 + 1696 + 244 * 2, 929);
                        f_wwrite(0x665AC0 + 1696 + 244 * 2, 929)
                        # (Line 4879) dwwrite(0x666778 + 34000 + 141 * 4, 269);
                        f_dwwrite(0x666778 + 34000 + 141 * 4, 269)
                        # (Line 4880) }
                        # (Line 4882) CreateUnit(1, (PVulture[getcurpl()]), (PLoc[getcurpl()]), (13));
                    EUDEndIf()
                    # (Line 4883) dwwrite(0x666778 + 34000 + 141 * 4, 275);
                    DoActions(CreateUnit(1, (PVulture[f_getcurpl()]), (PLoc[f_getcurpl()]), (13)))
                    f_dwwrite(0x666778 + 34000 + 141 * 4, 275)
                    # (Line 4884) wwrite(0x665AC0 + 1696 + 244 * 2, 256);
                    f_wwrite(0x665AC0 + 1696 + 244 * 2, 256)
                    # (Line 4885) SetMemoryEPD(Vulture[getcurpl()] + 0x008 / 4, SetTo, Vulture_Hitpoints[getcurpl()]);
                    # (Line 4886) if(
                    DoActions(SetMemoryEPD(Vulture[f_getcurpl()] + 0x008 // 4, SetTo, Vulture_Hitpoints[f_getcurpl()]))
                    _t147 = EUDIf()
                    # (Line 4887) Bring((13), (0), 1, (230), (24))
                    # (Line 4888) ){
                    if _t147(Bring((13), (0), 1, (230), (24))):
                        # (Line 4889) CenterView((PLoc[getcurpl()]));
                        # (Line 4890) }
                        DoActions(CenterView((PLoc[f_getcurpl()])))
                        # (Line 4892) if(
                    EUDEndIf()
                    _t148 = EUDIf()
                    # (Line 4893) Vulture_Booster[getcurpl()] == 1
                    # (Line 4894) ){
                    if _t148(Vulture_Booster[f_getcurpl()] == 1):
                        # (Line 4895) SetMemoryEPD(Vulture[getcurpl()] + 0x034 / 4, SetTo, 1575);
                        # (Line 4896) wwrite_epd(Vulture[getcurpl()] + 0x048 / 4,  0x048 % 4, 46);
                        DoActions(SetMemoryEPD(Vulture[f_getcurpl()] + 0x034 // 4, SetTo, 1575))
                        f_wwrite_epd(Vulture[f_getcurpl()] + 0x048 // 4, 0x048 % 4, 46)
                        # (Line 4897) bwrite_epd(Vulture[getcurpl()] + 0x022 / 4,  0x022 % 4, 60);
                        f_bwrite_epd(Vulture[f_getcurpl()] + 0x022 // 4, 0x022 % 4, 60)
                        # (Line 4898) if(
                        _t149 = EUDIf()
                        # (Line 4899) Memory(0x57F1B0, Exactly, (getcurpl()))
                        # (Line 4900) ){
                        if _t149(Memory(0x57F1B0, Exactly, (f_getcurpl()))):
                            # (Line 4901) btnPtr, btnPos = EPD(0x5187EC) + 57, 5 * 5;
                            _SV([btnPtr, btnPos], [EPD(0x5187EC) + 57, 5 * 5])
                            # (Line 4902) dwadd_epd(btnPtr, 0);
                            f_dwadd_epd(btnPtr, 0)
                            # (Line 4903) btnPos += epdread_epd(btnPtr);
                            btnPos.__iadd__(f_epdread_epd(btnPtr))
                            # (Line 4904) oldCP = getcurpl();
                            oldCP << (f_getcurpl())
                            # (Line 4905) DoActions(list(
                            # (Line 4906) SetMemory(0x6509B0, SetTo, btnPos),
                            # (Line 4907) SetDeaths(CurrentPlayer, SetTo, 24576007, 0),
                            # (Line 4908) SetMemory(0x6509B0, Add, 1),
                            # (Line 4909) SetDeaths(CurrentPlayer, SetTo, 4361824, 0),
                            # (Line 4910) SetMemory(0x6509B0, Add, 1),
                            # (Line 4911) SetDeaths(CurrentPlayer, SetTo, 4338864, 0),
                            # (Line 4912) SetMemory(0x6509B0, Add, 1),
                            # (Line 4913) SetDeaths(CurrentPlayer, SetTo, 327685, 0),
                            # (Line 4914) SetMemory(0x6509B0, Add, 1),
                            # (Line 4915) SetDeaths(CurrentPlayer, SetTo, 1396, 0),
                            # (Line 4916) SetMemory(0x6509B0, SetTo, oldCP),
                            # (Line 4917) ));
                            DoActions(FlattenList([SetMemory(0x6509B0, SetTo, btnPos), SetDeaths(CurrentPlayer, SetTo, 24576007, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 4361824, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 4338864, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 327685, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 1396, 0), SetMemory(0x6509B0, SetTo, oldCP)]))
                            # (Line 4918) }
                            # (Line 4919) }
                        EUDEndIf()
                        # (Line 4920) else{
                    if EUDElse()():
                        # (Line 4921) SetMemoryEPD(Vulture[getcurpl()] + 0x034 / 4, SetTo, 1050);
                        # (Line 4922) wwrite_epd(Vulture[getcurpl()] + 0x048 / 4,  0x048 % 4, 23);
                        DoActions(SetMemoryEPD(Vulture[f_getcurpl()] + 0x034 // 4, SetTo, 1050))
                        f_wwrite_epd(Vulture[f_getcurpl()] + 0x048 // 4, 0x048 % 4, 23)
                        # (Line 4923) bwrite_epd(Vulture[getcurpl()] + 0x022 / 4,  0x022 % 4, 28);
                        f_bwrite_epd(Vulture[f_getcurpl()] + 0x022 // 4, 0x022 % 4, 28)
                        # (Line 4924) if(
                        _t150 = EUDIf()
                        # (Line 4925) Memory(0x57F1B0, Exactly, (getcurpl()))
                        # (Line 4926) ){
                        if _t150(Memory(0x57F1B0, Exactly, (f_getcurpl()))):
                            # (Line 4927) btnPtr, btnPos = EPD(0x5187EC) + 57, 5 * 5;
                            _SV([btnPtr, btnPos], [EPD(0x5187EC) + 57, 5 * 5])
                            # (Line 4928) dwadd_epd(btnPtr, 0);
                            f_dwadd_epd(btnPtr, 0)
                            # (Line 4929) btnPos += epdread_epd(btnPtr);
                            btnPos.__iadd__(f_epdread_epd(btnPtr))
                            # (Line 4930) oldCP = getcurpl();
                            oldCP << (f_getcurpl())
                            # (Line 4931) DoActions(list(
                            # (Line 4932) SetMemory(0x6509B0, SetTo, btnPos),
                            # (Line 4933) SetDeaths(CurrentPlayer, SetTo, 24510471, 0),
                            # (Line 4934) SetMemory(0x6509B0, Add, 1),
                            # (Line 4935) SetDeaths(CurrentPlayer, SetTo, 4361824, 0),
                            # (Line 4936) SetMemory(0x6509B0, Add, 1),
                            # (Line 4937) SetDeaths(CurrentPlayer, SetTo, 4338864, 0),
                            # (Line 4938) SetMemory(0x6509B0, Add, 1),
                            # (Line 4939) SetDeaths(CurrentPlayer, SetTo, 327685, 0),
                            # (Line 4940) SetMemory(0x6509B0, Add, 1),
                            # (Line 4941) SetDeaths(CurrentPlayer, SetTo, 1395, 0),
                            # (Line 4942) SetMemory(0x6509B0, SetTo, oldCP),
                            # (Line 4943) ));
                            DoActions(FlattenList([SetMemory(0x6509B0, SetTo, btnPos), SetDeaths(CurrentPlayer, SetTo, 24510471, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 4361824, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 4338864, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 327685, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 1395, 0), SetMemory(0x6509B0, SetTo, oldCP)]))
                            # (Line 4944) }
                            # (Line 4945) }
                        EUDEndIf()
                        # (Line 4947) hotkeyUnitEPD(Vulture[getcurpl()],getcurpl(),1,0);
                    EUDEndIf()
                    f_hotkeyUnitEPD(Vulture[f_getcurpl()], f_getcurpl(), 1, 0)
                    # (Line 4948) }
                    # (Line 4950) }
                EUDEndIf()
                # (Line 4951) else{
            if EUDElse()():
                # (Line 4952) GiveUnits(1, (230), (7), (67), (6));
                # (Line 4953) GiveUnits(1, (230), (6), (67), (7));
                DoActions(GiveUnits(1, (230), (7), (67), (6)))
                # (Line 4954) PlayWAV("sound\\Misc\\PError.WAV");
                DoActions(GiveUnits(1, (230), (6), (67), (7)))
                # (Line 4955) DisplayText("\n\x13\x04이 \x1C스킨\x04을 \x07장착\x04할 수 없습니다.\n\x13\x1C획득 조건 \x04- 미정\n", (0));
                DoActions(PlayWAV("sound\\Misc\\PError.WAV"))
                # (Line 4956) }
                DoActions(DisplayText("\n\x13\x04이 \x1C스킨\x04을 \x07장착\x04할 수 없습니다.\n\x13\x1C획득 조건 \x04- 미정\n", (0)))
                # (Line 4957) }
            EUDEndIf()
            # (Line 4958) if(
        EUDEndIf()
        _t151 = EUDIf()
        # (Line 4959) Skin_Scout_Effect[getcurpl()] >= 1
        # (Line 4960) ){
        if _t151(Skin_Scout_Effect[f_getcurpl()] >= 1):
            # (Line 4961) Skin_Scout_Effect[getcurpl()] -= 1;
            _ARRW(Skin_Scout_Effect, f_getcurpl()).__isub__(1)
            # (Line 4962) }
            # (Line 4963) if(
        EUDEndIf()
        _t152 = EUDIf()
        # (Line 4964) Skin_Select[getcurpl()] == 1 &&
        # (Line 4965) Bring((13), (0), 1, (230), (24)) &&
        # (Line 4966) MemoryEPD(Vulture[getcurpl()] + 0x038 / 4, AtLeast, 870) &&
        # (Line 4967) Skin_Scout_Effect[getcurpl()] == 0 &&
        # (Line 4968) Bring((13), (10), 1, (113), (64))
        # (Line 4969) ){
        if _t152(EUDSCAnd()(Skin_Select[f_getcurpl()] == 1)(Bring((13), (0), 1, (230), (24)))(MemoryEPD(Vulture[f_getcurpl()] + 0x038 // 4, AtLeast, 870))(Skin_Scout_Effect[f_getcurpl()] == 0)(Bring((13), (10), 1, (113), (64)))()):
            # (Line 4970) Skin_Scout_Effect[getcurpl()] = 5;
            _ARRW(Skin_Scout_Effect, f_getcurpl()) << (5)
            # (Line 4971) wwrite(0x665AC0 + 1696 + 380 * 2, 512);
            f_wwrite(0x665AC0 + 1696 + 380 * 2, 512)
            # (Line 4972) bwrite(0x666778 + 14000 + 512 * 1, 16);
            f_bwrite(0x666778 + 14000 + 512 * 1, 16)
            # (Line 4973) CreateUnit(1, (33), (PLoc[getcurpl()]), (13));
            # (Line 4974) bwrite(0x666778 + 14000 + 512 * 1, 13);
            DoActions(CreateUnit(1, (33), (PLoc[f_getcurpl()]), (13)))
            f_bwrite(0x666778 + 14000 + 512 * 1, 13)
            # (Line 4975) KillUnit((33), (13));
            # (Line 4976) }
            DoActions(KillUnit((33), (13)))
            # (Line 4979) if(
        EUDEndIf()
        _t153 = EUDIf()
        # (Line 4980) UnitClickCheck(getcurpl(),301)
        # (Line 4981) ){
        if _t153(UnitClickCheck(f_getcurpl(), 301)):
            # (Line 4982) if(
            _t154 = EUDIf()
            # (Line 4983) Skin_Wraith[getcurpl()] == 1
            # (Line 4984) ){
            if _t154(Skin_Wraith[f_getcurpl()] == 1):
                # (Line 4985) Skin_Select[getcurpl()] = 2;
                _ARRW(Skin_Select, f_getcurpl()) << (2)
                # (Line 4986) GiveUnits(1, (230), (7), (70), (6));
                # (Line 4987) GiveUnits(1, (230), (6), (70), (7));
                DoActions(GiveUnits(1, (230), (7), (70), (6)))
                # (Line 4988) PlayWAV("sound\\Misc\\PBldgPlc.wav");
                DoActions(GiveUnits(1, (230), (6), (70), (7)))
                # (Line 4989) DisplayText("\x13\x1C스킨\x04이 \x07장착\x04되었습니다.", (0));
                DoActions(PlayWAV("sound\\Misc\\PBldgPlc.wav"))
                # (Line 4991) if(
                DoActions(DisplayText("\x13\x1C스킨\x04이 \x07장착\x04되었습니다.", (0)))
                _t155 = EUDIf()
                # (Line 4992) Bring((13), (0), 1, (230), (24))
                # (Line 4993) ){
                if _t155(Bring((13), (0), 1, (230), (24))):
                    # (Line 4994) Vulture_Hitpoints[getcurpl()] = dwread_epd(Vulture[getcurpl()] + 0x008 / 4);
                    _ARRW(Vulture_Hitpoints, f_getcurpl()) << (f_dwread_epd(Vulture[f_getcurpl()] + 0x008 // 4))
                    # (Line 4995) RemoveUnit((PVulture[getcurpl()]), (13));
                    # (Line 4996) Vulture[getcurpl()] = epdread_epd(EPD(0x628438));
                    DoActions(RemoveUnit((PVulture[f_getcurpl()]), (13)))
                    _ARRW(Vulture, f_getcurpl()) << (f_epdread_epd(EPD(0x628438)))
                    # (Line 4997) wwrite(0x665AC0 + 1696 + 244 * 2, 243);
                    f_wwrite(0x665AC0 + 1696 + 244 * 2, 243)
                    # (Line 4998) CreateUnit(1, (PVulture[getcurpl()]), (PLoc[getcurpl()]), (13));
                    # (Line 4999) wwrite(0x665AC0 + 1696 + 244 * 2, 256);
                    DoActions(CreateUnit(1, (PVulture[f_getcurpl()]), (PLoc[f_getcurpl()]), (13)))
                    f_wwrite(0x665AC0 + 1696 + 244 * 2, 256)
                    # (Line 5000) SetMemoryEPD(Vulture[getcurpl()] + 0x008 / 4, SetTo, Vulture_Hitpoints[getcurpl()]);
                    # (Line 5001) if(
                    DoActions(SetMemoryEPD(Vulture[f_getcurpl()] + 0x008 // 4, SetTo, Vulture_Hitpoints[f_getcurpl()]))
                    _t156 = EUDIf()
                    # (Line 5002) Bring((13), (0), 1, (230), (24))
                    # (Line 5003) ){
                    if _t156(Bring((13), (0), 1, (230), (24))):
                        # (Line 5004) CenterView((PLoc[getcurpl()]));
                        # (Line 5005) }
                        DoActions(CenterView((PLoc[f_getcurpl()])))
                        # (Line 5007) if(
                    EUDEndIf()
                    _t157 = EUDIf()
                    # (Line 5008) Vulture_Booster[getcurpl()] == 1
                    # (Line 5009) ){
                    if _t157(Vulture_Booster[f_getcurpl()] == 1):
                        # (Line 5010) SetMemoryEPD(Vulture[getcurpl()] + 0x034 / 4, SetTo, 1575);
                        # (Line 5011) wwrite_epd(Vulture[getcurpl()] + 0x048 / 4,  0x048 % 4, 46);
                        DoActions(SetMemoryEPD(Vulture[f_getcurpl()] + 0x034 // 4, SetTo, 1575))
                        f_wwrite_epd(Vulture[f_getcurpl()] + 0x048 // 4, 0x048 % 4, 46)
                        # (Line 5012) bwrite_epd(Vulture[getcurpl()] + 0x022 / 4,  0x022 % 4, 60);
                        f_bwrite_epd(Vulture[f_getcurpl()] + 0x022 // 4, 0x022 % 4, 60)
                        # (Line 5013) if(
                        _t158 = EUDIf()
                        # (Line 5014) Memory(0x57F1B0, Exactly, (getcurpl()))
                        # (Line 5015) ){
                        if _t158(Memory(0x57F1B0, Exactly, (f_getcurpl()))):
                            # (Line 5016) btnPtr, btnPos = EPD(0x5187EC) + 57, 5 * 5;
                            _SV([btnPtr, btnPos], [EPD(0x5187EC) + 57, 5 * 5])
                            # (Line 5017) dwadd_epd(btnPtr, 0);
                            f_dwadd_epd(btnPtr, 0)
                            # (Line 5018) btnPos += epdread_epd(btnPtr);
                            btnPos.__iadd__(f_epdread_epd(btnPtr))
                            # (Line 5019) oldCP = getcurpl();
                            oldCP << (f_getcurpl())
                            # (Line 5020) DoActions(list(
                            # (Line 5021) SetMemory(0x6509B0, SetTo, btnPos),
                            # (Line 5022) SetDeaths(CurrentPlayer, SetTo, 24576007, 0),
                            # (Line 5023) SetMemory(0x6509B0, Add, 1),
                            # (Line 5024) SetDeaths(CurrentPlayer, SetTo, 4361824, 0),
                            # (Line 5025) SetMemory(0x6509B0, Add, 1),
                            # (Line 5026) SetDeaths(CurrentPlayer, SetTo, 4338864, 0),
                            # (Line 5027) SetMemory(0x6509B0, Add, 1),
                            # (Line 5028) SetDeaths(CurrentPlayer, SetTo, 327685, 0),
                            # (Line 5029) SetMemory(0x6509B0, Add, 1),
                            # (Line 5030) SetDeaths(CurrentPlayer, SetTo, 1396, 0),
                            # (Line 5031) SetMemory(0x6509B0, SetTo, oldCP),
                            # (Line 5032) ));
                            DoActions(FlattenList([SetMemory(0x6509B0, SetTo, btnPos), SetDeaths(CurrentPlayer, SetTo, 24576007, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 4361824, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 4338864, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 327685, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 1396, 0), SetMemory(0x6509B0, SetTo, oldCP)]))
                            # (Line 5033) }
                            # (Line 5034) }
                        EUDEndIf()
                        # (Line 5035) else{
                    if EUDElse()():
                        # (Line 5036) SetMemoryEPD(Vulture[getcurpl()] + 0x034 / 4, SetTo, 1050);
                        # (Line 5037) wwrite_epd(Vulture[getcurpl()] + 0x048 / 4,  0x048 % 4, 23);
                        DoActions(SetMemoryEPD(Vulture[f_getcurpl()] + 0x034 // 4, SetTo, 1050))
                        f_wwrite_epd(Vulture[f_getcurpl()] + 0x048 // 4, 0x048 % 4, 23)
                        # (Line 5038) bwrite_epd(Vulture[getcurpl()] + 0x022 / 4,  0x022 % 4, 28);
                        f_bwrite_epd(Vulture[f_getcurpl()] + 0x022 // 4, 0x022 % 4, 28)
                        # (Line 5039) if(
                        _t159 = EUDIf()
                        # (Line 5040) Memory(0x57F1B0, Exactly, (getcurpl()))
                        # (Line 5041) ){
                        if _t159(Memory(0x57F1B0, Exactly, (f_getcurpl()))):
                            # (Line 5042) btnPtr, btnPos = EPD(0x5187EC) + 57, 5 * 5;
                            _SV([btnPtr, btnPos], [EPD(0x5187EC) + 57, 5 * 5])
                            # (Line 5043) dwadd_epd(btnPtr, 0);
                            f_dwadd_epd(btnPtr, 0)
                            # (Line 5044) btnPos += epdread_epd(btnPtr);
                            btnPos.__iadd__(f_epdread_epd(btnPtr))
                            # (Line 5045) oldCP = getcurpl();
                            oldCP << (f_getcurpl())
                            # (Line 5046) DoActions(list(
                            # (Line 5047) SetMemory(0x6509B0, SetTo, btnPos),
                            # (Line 5048) SetDeaths(CurrentPlayer, SetTo, 24510471, 0),
                            # (Line 5049) SetMemory(0x6509B0, Add, 1),
                            # (Line 5050) SetDeaths(CurrentPlayer, SetTo, 4361824, 0),
                            # (Line 5051) SetMemory(0x6509B0, Add, 1),
                            # (Line 5052) SetDeaths(CurrentPlayer, SetTo, 4338864, 0),
                            # (Line 5053) SetMemory(0x6509B0, Add, 1),
                            # (Line 5054) SetDeaths(CurrentPlayer, SetTo, 327685, 0),
                            # (Line 5055) SetMemory(0x6509B0, Add, 1),
                            # (Line 5056) SetDeaths(CurrentPlayer, SetTo, 1395, 0),
                            # (Line 5057) SetMemory(0x6509B0, SetTo, oldCP),
                            # (Line 5058) ));
                            DoActions(FlattenList([SetMemory(0x6509B0, SetTo, btnPos), SetDeaths(CurrentPlayer, SetTo, 24510471, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 4361824, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 4338864, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 327685, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 1395, 0), SetMemory(0x6509B0, SetTo, oldCP)]))
                            # (Line 5059) }
                            # (Line 5060) }
                        EUDEndIf()
                        # (Line 5062) hotkeyUnitEPD(Vulture[getcurpl()],getcurpl(),1,0);
                    EUDEndIf()
                    f_hotkeyUnitEPD(Vulture[f_getcurpl()], f_getcurpl(), 1, 0)
                    # (Line 5063) }
                    # (Line 5065) }
                EUDEndIf()
                # (Line 5066) else{
            if EUDElse()():
                # (Line 5067) GiveUnits(1, (230), (7), (70), (6));
                # (Line 5068) GiveUnits(1, (230), (6), (70), (7));
                DoActions(GiveUnits(1, (230), (7), (70), (6)))
                # (Line 5069) PlayWAV("sound\\Misc\\PError.WAV");
                DoActions(GiveUnits(1, (230), (6), (70), (7)))
                # (Line 5070) DisplayText("\n\x13\x04이 \x1C스킨\x04을 \x07장착\x04할 수 없습니다.\n\x13\x1C획득 조건 \x04- \x08[ \x04레이스 스킨 \x08] \x04옵션이 뜬 라운드의 클리어 영상을 인증받음\n", (0));
                DoActions(PlayWAV("sound\\Misc\\PError.WAV"))
                # (Line 5071) }
                DoActions(DisplayText("\n\x13\x04이 \x1C스킨\x04을 \x07장착\x04할 수 없습니다.\n\x13\x1C획득 조건 \x04- \x08[ \x04레이스 스킨 \x08] \x04옵션이 뜬 라운드의 클리어 영상을 인증받음\n", (0)))
                # (Line 5072) }
            EUDEndIf()
            # (Line 5073) if(
        EUDEndIf()
        _t160 = EUDIf()
        # (Line 5074) Skin_Wraith_Smoke[getcurpl()] >= 1
        # (Line 5075) ){
        if _t160(Skin_Wraith_Smoke[f_getcurpl()] >= 1):
            # (Line 5076) Skin_Wraith_Smoke[getcurpl()] -= 1;
            _ARRW(Skin_Wraith_Smoke, f_getcurpl()).__isub__(1)
            # (Line 5077) }
            # (Line 5078) if(
        EUDEndIf()
        _t161 = EUDIf()
        # (Line 5079) Skin_Select[getcurpl()] == 2 &&
        # (Line 5080) Bring((13), (0), 1, (230), (24)) &&
        # (Line 5081) MemoryEPD(Vulture[getcurpl()] + 0x038 / 4, AtLeast, 870) &&
        # (Line 5082) Skin_Wraith_Smoke[getcurpl()] == 0
        # (Line 5083) ){
        if _t161(EUDSCAnd()(Skin_Select[f_getcurpl()] == 2)(Bring((13), (0), 1, (230), (24)))(MemoryEPD(Vulture[f_getcurpl()] + 0x038 // 4, AtLeast, 870))(Skin_Wraith_Smoke[f_getcurpl()] == 0)()):
            # (Line 5084) Skin_Wraith_Smoke[getcurpl()] = 5;
            _ARRW(Skin_Wraith_Smoke, f_getcurpl()) << (5)
            # (Line 5085) wwrite(0x665AC0 + 1696 + 380 * 2, 441);
            f_wwrite(0x665AC0 + 1696 + 380 * 2, 441)
            # (Line 5086) CreateUnit(1, (33), (PLoc[getcurpl()]), (13));
            # (Line 5087) KillUnit((33), (13));
            DoActions(CreateUnit(1, (33), (PLoc[f_getcurpl()]), (13)))
            # (Line 5088) }
            DoActions(KillUnit((33), (13)))
            # (Line 5091) if(
        EUDEndIf()
        _t162 = EUDIf()
        # (Line 5092) UnitClickCheck(getcurpl(),302)
        # (Line 5093) ){
        if _t162(UnitClickCheck(f_getcurpl(), 302)):
            # (Line 5094) if(
            _t163 = EUDIf()
            # (Line 5095) Skin_Mutalisk[getcurpl()] == 1
            # (Line 5096) ){
            if _t163(Skin_Mutalisk[f_getcurpl()] == 1):
                # (Line 5097) Skin_Select[getcurpl()] = 3;
                _ARRW(Skin_Select, f_getcurpl()) << (3)
                # (Line 5098) GiveUnits(1, (230), (7), (22), (6));
                # (Line 5099) GiveUnits(1, (230), (6), (22), (7));
                DoActions(GiveUnits(1, (230), (7), (22), (6)))
                # (Line 5100) PlayWAV("sound\\Misc\\PBldgPlc.wav");
                DoActions(GiveUnits(1, (230), (6), (22), (7)))
                # (Line 5101) DisplayText("\x13\x1C스킨\x04이 \x07장착\x04되었습니다.", (0));
                DoActions(PlayWAV("sound\\Misc\\PBldgPlc.wav"))
                # (Line 5103) if(
                DoActions(DisplayText("\x13\x1C스킨\x04이 \x07장착\x04되었습니다.", (0)))
                _t164 = EUDIf()
                # (Line 5104) Bring((13), (0), 1, (230), (24))
                # (Line 5105) ){
                if _t164(Bring((13), (0), 1, (230), (24))):
                    # (Line 5106) Vulture_Hitpoints[getcurpl()] = dwread_epd(Vulture[getcurpl()] + 0x008 / 4);
                    _ARRW(Vulture_Hitpoints, f_getcurpl()) << (f_dwread_epd(Vulture[f_getcurpl()] + 0x008 // 4))
                    # (Line 5107) RemoveUnit((PVulture[getcurpl()]), (13));
                    # (Line 5108) Vulture[getcurpl()] = epdread_epd(EPD(0x628438));
                    DoActions(RemoveUnit((PVulture[f_getcurpl()]), (13)))
                    _ARRW(Vulture, f_getcurpl()) << (f_epdread_epd(EPD(0x628438)))
                    # (Line 5109) wwrite(0x665AC0 + 1696 + 244 * 2, 38);
                    f_wwrite(0x665AC0 + 1696 + 244 * 2, 38)
                    # (Line 5110) CreateUnit(1, (PVulture[getcurpl()]), (PLoc[getcurpl()]), (13));
                    # (Line 5111) wwrite(0x665AC0 + 1696 + 244 * 2, 256);
                    DoActions(CreateUnit(1, (PVulture[f_getcurpl()]), (PLoc[f_getcurpl()]), (13)))
                    f_wwrite(0x665AC0 + 1696 + 244 * 2, 256)
                    # (Line 5112) SetMemoryEPD(Vulture[getcurpl()] + 0x008 / 4, SetTo, Vulture_Hitpoints[getcurpl()]);
                    # (Line 5113) if(
                    DoActions(SetMemoryEPD(Vulture[f_getcurpl()] + 0x008 // 4, SetTo, Vulture_Hitpoints[f_getcurpl()]))
                    _t165 = EUDIf()
                    # (Line 5114) Bring((13), (0), 1, (230), (24))
                    # (Line 5115) ){
                    if _t165(Bring((13), (0), 1, (230), (24))):
                        # (Line 5116) CenterView((PLoc[getcurpl()]));
                        # (Line 5117) }
                        DoActions(CenterView((PLoc[f_getcurpl()])))
                        # (Line 5119) if(
                    EUDEndIf()
                    _t166 = EUDIf()
                    # (Line 5120) Vulture_Booster[getcurpl()] == 1
                    # (Line 5121) ){
                    if _t166(Vulture_Booster[f_getcurpl()] == 1):
                        # (Line 5122) SetMemoryEPD(Vulture[getcurpl()] + 0x034 / 4, SetTo, 1575);
                        # (Line 5123) wwrite_epd(Vulture[getcurpl()] + 0x048 / 4,  0x048 % 4, 46);
                        DoActions(SetMemoryEPD(Vulture[f_getcurpl()] + 0x034 // 4, SetTo, 1575))
                        f_wwrite_epd(Vulture[f_getcurpl()] + 0x048 // 4, 0x048 % 4, 46)
                        # (Line 5124) bwrite_epd(Vulture[getcurpl()] + 0x022 / 4,  0x022 % 4, 60);
                        f_bwrite_epd(Vulture[f_getcurpl()] + 0x022 // 4, 0x022 % 4, 60)
                        # (Line 5125) if(
                        _t167 = EUDIf()
                        # (Line 5126) Memory(0x57F1B0, Exactly, (getcurpl()))
                        # (Line 5127) ){
                        if _t167(Memory(0x57F1B0, Exactly, (f_getcurpl()))):
                            # (Line 5128) btnPtr, btnPos = EPD(0x5187EC) + 57, 5 * 5;
                            _SV([btnPtr, btnPos], [EPD(0x5187EC) + 57, 5 * 5])
                            # (Line 5129) dwadd_epd(btnPtr, 0);
                            f_dwadd_epd(btnPtr, 0)
                            # (Line 5130) btnPos += epdread_epd(btnPtr);
                            btnPos.__iadd__(f_epdread_epd(btnPtr))
                            # (Line 5131) oldCP = getcurpl();
                            oldCP << (f_getcurpl())
                            # (Line 5132) DoActions(list(
                            # (Line 5133) SetMemory(0x6509B0, SetTo, btnPos),
                            # (Line 5134) SetDeaths(CurrentPlayer, SetTo, 24576007, 0),
                            # (Line 5135) SetMemory(0x6509B0, Add, 1),
                            # (Line 5136) SetDeaths(CurrentPlayer, SetTo, 4361824, 0),
                            # (Line 5137) SetMemory(0x6509B0, Add, 1),
                            # (Line 5138) SetDeaths(CurrentPlayer, SetTo, 4338864, 0),
                            # (Line 5139) SetMemory(0x6509B0, Add, 1),
                            # (Line 5140) SetDeaths(CurrentPlayer, SetTo, 327685, 0),
                            # (Line 5141) SetMemory(0x6509B0, Add, 1),
                            # (Line 5142) SetDeaths(CurrentPlayer, SetTo, 1396, 0),
                            # (Line 5143) SetMemory(0x6509B0, SetTo, oldCP),
                            # (Line 5144) ));
                            DoActions(FlattenList([SetMemory(0x6509B0, SetTo, btnPos), SetDeaths(CurrentPlayer, SetTo, 24576007, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 4361824, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 4338864, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 327685, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 1396, 0), SetMemory(0x6509B0, SetTo, oldCP)]))
                            # (Line 5145) }
                            # (Line 5146) }
                        EUDEndIf()
                        # (Line 5147) else{
                    if EUDElse()():
                        # (Line 5148) SetMemoryEPD(Vulture[getcurpl()] + 0x034 / 4, SetTo, 1050);
                        # (Line 5149) wwrite_epd(Vulture[getcurpl()] + 0x048 / 4,  0x048 % 4, 23);
                        DoActions(SetMemoryEPD(Vulture[f_getcurpl()] + 0x034 // 4, SetTo, 1050))
                        f_wwrite_epd(Vulture[f_getcurpl()] + 0x048 // 4, 0x048 % 4, 23)
                        # (Line 5150) bwrite_epd(Vulture[getcurpl()] + 0x022 / 4,  0x022 % 4, 28);
                        f_bwrite_epd(Vulture[f_getcurpl()] + 0x022 // 4, 0x022 % 4, 28)
                        # (Line 5151) if(
                        _t168 = EUDIf()
                        # (Line 5152) Memory(0x57F1B0, Exactly, (getcurpl()))
                        # (Line 5153) ){
                        if _t168(Memory(0x57F1B0, Exactly, (f_getcurpl()))):
                            # (Line 5154) btnPtr, btnPos = EPD(0x5187EC) + 57, 5 * 5;
                            _SV([btnPtr, btnPos], [EPD(0x5187EC) + 57, 5 * 5])
                            # (Line 5155) dwadd_epd(btnPtr, 0);
                            f_dwadd_epd(btnPtr, 0)
                            # (Line 5156) btnPos += epdread_epd(btnPtr);
                            btnPos.__iadd__(f_epdread_epd(btnPtr))
                            # (Line 5157) oldCP = getcurpl();
                            oldCP << (f_getcurpl())
                            # (Line 5158) DoActions(list(
                            # (Line 5159) SetMemory(0x6509B0, SetTo, btnPos),
                            # (Line 5160) SetDeaths(CurrentPlayer, SetTo, 24510471, 0),
                            # (Line 5161) SetMemory(0x6509B0, Add, 1),
                            # (Line 5162) SetDeaths(CurrentPlayer, SetTo, 4361824, 0),
                            # (Line 5163) SetMemory(0x6509B0, Add, 1),
                            # (Line 5164) SetDeaths(CurrentPlayer, SetTo, 4338864, 0),
                            # (Line 5165) SetMemory(0x6509B0, Add, 1),
                            # (Line 5166) SetDeaths(CurrentPlayer, SetTo, 327685, 0),
                            # (Line 5167) SetMemory(0x6509B0, Add, 1),
                            # (Line 5168) SetDeaths(CurrentPlayer, SetTo, 1395, 0),
                            # (Line 5169) SetMemory(0x6509B0, SetTo, oldCP),
                            # (Line 5170) ));
                            DoActions(FlattenList([SetMemory(0x6509B0, SetTo, btnPos), SetDeaths(CurrentPlayer, SetTo, 24510471, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 4361824, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 4338864, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 327685, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 1395, 0), SetMemory(0x6509B0, SetTo, oldCP)]))
                            # (Line 5171) }
                            # (Line 5172) }
                        EUDEndIf()
                        # (Line 5174) hotkeyUnitEPD(Vulture[getcurpl()],getcurpl(),1,0);
                    EUDEndIf()
                    f_hotkeyUnitEPD(Vulture[f_getcurpl()], f_getcurpl(), 1, 0)
                    # (Line 5175) }
                    # (Line 5177) }
                EUDEndIf()
                # (Line 5178) else{
            if EUDElse()():
                # (Line 5179) GiveUnits(1, (230), (7), (22), (6));
                # (Line 5180) GiveUnits(1, (230), (6), (22), (7));
                DoActions(GiveUnits(1, (230), (7), (22), (6)))
                # (Line 5181) PlayWAV("sound\\Misc\\PError.WAV");
                DoActions(GiveUnits(1, (230), (6), (22), (7)))
                # (Line 5182) DisplayText("\n\x13\x04이 \x1C스킨\x04을 \x07장착\x04할 수 없습니다.\n\x13\x1C획득 조건 \x04- \x08[ \x04뮤탈 스킨 \x08] \x04옵션이 뜬 라운드의 클리어 영상을 인증받음\n", (0));
                DoActions(PlayWAV("sound\\Misc\\PError.WAV"))
                # (Line 5183) }
                DoActions(DisplayText("\n\x13\x04이 \x1C스킨\x04을 \x07장착\x04할 수 없습니다.\n\x13\x1C획득 조건 \x04- \x08[ \x04뮤탈 스킨 \x08] \x04옵션이 뜬 라운드의 클리어 영상을 인증받음\n", (0)))
                # (Line 5184) }
            EUDEndIf()
            # (Line 5185) if(
        EUDEndIf()
        _t169 = EUDIf()
        # (Line 5186) Skin_Mutalisk_Effect[getcurpl()] >= 1
        # (Line 5187) ){
        if _t169(Skin_Mutalisk_Effect[f_getcurpl()] >= 1):
            # (Line 5188) Skin_Mutalisk_Effect[getcurpl()] -= 1;
            _ARRW(Skin_Mutalisk_Effect, f_getcurpl()).__isub__(1)
            # (Line 5189) }
            # (Line 5190) if(
        EUDEndIf()
        _t170 = EUDIf()
        # (Line 5191) Skin_Select[getcurpl()] == 3 &&
        # (Line 5192) Bring((13), (0), 1, (230), (24)) &&
        # (Line 5193) MemoryEPD(Vulture[getcurpl()] + 0x038 / 4, AtLeast, 870) &&
        # (Line 5194) Skin_Mutalisk_Effect[getcurpl()] == 0
        # (Line 5195) ){
        if _t170(EUDSCAnd()(Skin_Select[f_getcurpl()] == 3)(Bring((13), (0), 1, (230), (24)))(MemoryEPD(Vulture[f_getcurpl()] + 0x038 // 4, AtLeast, 870))(Skin_Mutalisk_Effect[f_getcurpl()] == 0)()):
            # (Line 5196) Skin_Mutalisk_Effect[getcurpl()] = 5;
            _ARRW(Skin_Mutalisk_Effect, f_getcurpl()) << (5)
            # (Line 5197) wwrite(0x665AC0 + 1696 + 380 * 2, 37);
            f_wwrite(0x665AC0 + 1696 + 380 * 2, 37)
            # (Line 5198) CreateUnit(1, (33), (PLoc[getcurpl()]), (13));
            # (Line 5199) KillUnit((33), (13));
            DoActions(CreateUnit(1, (33), (PLoc[f_getcurpl()]), (13)))
            # (Line 5200) }
            DoActions(KillUnit((33), (13)))
            # (Line 5203) if(
        EUDEndIf()
        _t171 = EUDIf()
        # (Line 5204) UnitClickCheck(getcurpl(),BlackVultureIndex)
        # (Line 5205) ){
        if _t171(UnitClickCheck(f_getcurpl(), BlackVultureIndex)):
            # (Line 5206) if(
            _t172 = EUDIf()
            # (Line 5207) Skin_BlackVulture[getcurpl()] == 1
            # (Line 5208) ){
            if _t172(Skin_BlackVulture[f_getcurpl()] == 1):
                # (Line 5209) Skin_Select[getcurpl()] = 4;
                _ARRW(Skin_Select, f_getcurpl()) << (4)
                # (Line 5210) GiveUnits(1, (230), (7), (26), (6));
                # (Line 5211) GiveUnits(1, (230), (6), (26), (7));
                DoActions(GiveUnits(1, (230), (7), (26), (6)))
                # (Line 5212) PlayWAV("sound\\Misc\\PBldgPlc.wav");
                DoActions(GiveUnits(1, (230), (6), (26), (7)))
                # (Line 5213) DisplayText("\x13\x1C스킨\x04이 \x07장착\x04되었습니다.", (0));
                DoActions(PlayWAV("sound\\Misc\\PBldgPlc.wav"))
                # (Line 5215) if(
                DoActions(DisplayText("\x13\x1C스킨\x04이 \x07장착\x04되었습니다.", (0)))
                _t173 = EUDIf()
                # (Line 5216) Bring((13), (0), 1, (230), (24))
                # (Line 5217) ){
                if _t173(Bring((13), (0), 1, (230), (24))):
                    # (Line 5218) Vulture_Hitpoints[getcurpl()] = dwread_epd(Vulture[getcurpl()] + 0x008 / 4);
                    _ARRW(Vulture_Hitpoints, f_getcurpl()) << (f_dwread_epd(Vulture[f_getcurpl()] + 0x008 // 4))
                    # (Line 5219) RemoveUnit((PVulture[getcurpl()]), (13));
                    # (Line 5220) Vulture[getcurpl()] = epdread_epd(EPD(0x628438));
                    DoActions(RemoveUnit((PVulture[f_getcurpl()]), (13)))
                    _ARRW(Vulture, f_getcurpl()) << (f_epdread_epd(EPD(0x628438)))
                    # (Line 5221) wwrite(0x665AC0 + 1696 + 244 * 2, 256);
                    f_wwrite(0x665AC0 + 1696 + 244 * 2, 256)
                    # (Line 5222) bwrite(0x666778 + 14000 + 256 * 1, 10);
                    f_bwrite(0x666778 + 14000 + 256 * 1, 10)
                    # (Line 5223) dwwrite(0x666778 + 34000 + 256 * 4, 362);
                    f_dwwrite(0x666778 + 34000 + 256 * 4, 362)
                    # (Line 5224) dwwrite(0x666778 + 34000 + 940 * 4, 269);
                    f_dwwrite(0x666778 + 34000 + 940 * 4, 269)
                    # (Line 5225) CreateUnit(1, (PVulture[getcurpl()]), (PLoc[getcurpl()]), (13));
                    # (Line 5226) bwrite(0x666778 + 14000 + 256 * 1, 0);
                    DoActions(CreateUnit(1, (PVulture[f_getcurpl()]), (PLoc[f_getcurpl()]), (13)))
                    f_bwrite(0x666778 + 14000 + 256 * 1, 0)
                    # (Line 5227) dwwrite(0x666778 + 34000 + 256 * 4, 86);
                    f_dwwrite(0x666778 + 34000 + 256 * 4, 86)
                    # (Line 5228) SetMemoryEPD(Vulture[getcurpl()] + 0x008 / 4, SetTo, Vulture_Hitpoints[getcurpl()]);
                    # (Line 5229) if(
                    DoActions(SetMemoryEPD(Vulture[f_getcurpl()] + 0x008 // 4, SetTo, Vulture_Hitpoints[f_getcurpl()]))
                    _t174 = EUDIf()
                    # (Line 5230) Bring((13), (0), 1, (230), (24))
                    # (Line 5231) ){
                    if _t174(Bring((13), (0), 1, (230), (24))):
                        # (Line 5232) CenterView((PLoc[getcurpl()]));
                        # (Line 5233) }
                        DoActions(CenterView((PLoc[f_getcurpl()])))
                        # (Line 5235) if(
                    EUDEndIf()
                    _t175 = EUDIf()
                    # (Line 5236) Vulture_Booster[getcurpl()] == 1
                    # (Line 5237) ){
                    if _t175(Vulture_Booster[f_getcurpl()] == 1):
                        # (Line 5238) SetMemoryEPD(Vulture[getcurpl()] + 0x034 / 4, SetTo, 1575);
                        # (Line 5239) wwrite_epd(Vulture[getcurpl()] + 0x048 / 4,  0x048 % 4, 46);
                        DoActions(SetMemoryEPD(Vulture[f_getcurpl()] + 0x034 // 4, SetTo, 1575))
                        f_wwrite_epd(Vulture[f_getcurpl()] + 0x048 // 4, 0x048 % 4, 46)
                        # (Line 5240) bwrite_epd(Vulture[getcurpl()] + 0x022 / 4,  0x022 % 4, 60);
                        f_bwrite_epd(Vulture[f_getcurpl()] + 0x022 // 4, 0x022 % 4, 60)
                        # (Line 5241) if(
                        _t176 = EUDIf()
                        # (Line 5242) Memory(0x57F1B0, Exactly, (getcurpl()))
                        # (Line 5243) ){
                        if _t176(Memory(0x57F1B0, Exactly, (f_getcurpl()))):
                            # (Line 5244) btnPtr, btnPos = EPD(0x5187EC) + 57, 5 * 5;
                            _SV([btnPtr, btnPos], [EPD(0x5187EC) + 57, 5 * 5])
                            # (Line 5245) dwadd_epd(btnPtr, 0);
                            f_dwadd_epd(btnPtr, 0)
                            # (Line 5246) btnPos += epdread_epd(btnPtr);
                            btnPos.__iadd__(f_epdread_epd(btnPtr))
                            # (Line 5247) oldCP = getcurpl();
                            oldCP << (f_getcurpl())
                            # (Line 5248) DoActions(list(
                            # (Line 5249) SetMemory(0x6509B0, SetTo, btnPos),
                            # (Line 5250) SetDeaths(CurrentPlayer, SetTo, 24576007, 0),
                            # (Line 5251) SetMemory(0x6509B0, Add, 1),
                            # (Line 5252) SetDeaths(CurrentPlayer, SetTo, 4361824, 0),
                            # (Line 5253) SetMemory(0x6509B0, Add, 1),
                            # (Line 5254) SetDeaths(CurrentPlayer, SetTo, 4338864, 0),
                            # (Line 5255) SetMemory(0x6509B0, Add, 1),
                            # (Line 5256) SetDeaths(CurrentPlayer, SetTo, 327685, 0),
                            # (Line 5257) SetMemory(0x6509B0, Add, 1),
                            # (Line 5258) SetDeaths(CurrentPlayer, SetTo, 1396, 0),
                            # (Line 5259) SetMemory(0x6509B0, SetTo, oldCP),
                            # (Line 5260) ));
                            DoActions(FlattenList([SetMemory(0x6509B0, SetTo, btnPos), SetDeaths(CurrentPlayer, SetTo, 24576007, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 4361824, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 4338864, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 327685, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 1396, 0), SetMemory(0x6509B0, SetTo, oldCP)]))
                            # (Line 5261) }
                            # (Line 5262) }
                        EUDEndIf()
                        # (Line 5263) else{
                    if EUDElse()():
                        # (Line 5264) SetMemoryEPD(Vulture[getcurpl()] + 0x034 / 4, SetTo, 1050);
                        # (Line 5265) wwrite_epd(Vulture[getcurpl()] + 0x048 / 4,  0x048 % 4, 23);
                        DoActions(SetMemoryEPD(Vulture[f_getcurpl()] + 0x034 // 4, SetTo, 1050))
                        f_wwrite_epd(Vulture[f_getcurpl()] + 0x048 // 4, 0x048 % 4, 23)
                        # (Line 5266) bwrite_epd(Vulture[getcurpl()] + 0x022 / 4,  0x022 % 4, 28);
                        f_bwrite_epd(Vulture[f_getcurpl()] + 0x022 // 4, 0x022 % 4, 28)
                        # (Line 5267) if(
                        _t177 = EUDIf()
                        # (Line 5268) Memory(0x57F1B0, Exactly, (getcurpl()))
                        # (Line 5269) ){
                        if _t177(Memory(0x57F1B0, Exactly, (f_getcurpl()))):
                            # (Line 5270) btnPtr, btnPos = EPD(0x5187EC) + 57, 5 * 5;
                            _SV([btnPtr, btnPos], [EPD(0x5187EC) + 57, 5 * 5])
                            # (Line 5271) dwadd_epd(btnPtr, 0);
                            f_dwadd_epd(btnPtr, 0)
                            # (Line 5272) btnPos += epdread_epd(btnPtr);
                            btnPos.__iadd__(f_epdread_epd(btnPtr))
                            # (Line 5273) oldCP = getcurpl();
                            oldCP << (f_getcurpl())
                            # (Line 5274) DoActions(list(
                            # (Line 5275) SetMemory(0x6509B0, SetTo, btnPos),
                            # (Line 5276) SetDeaths(CurrentPlayer, SetTo, 24510471, 0),
                            # (Line 5277) SetMemory(0x6509B0, Add, 1),
                            # (Line 5278) SetDeaths(CurrentPlayer, SetTo, 4361824, 0),
                            # (Line 5279) SetMemory(0x6509B0, Add, 1),
                            # (Line 5280) SetDeaths(CurrentPlayer, SetTo, 4338864, 0),
                            # (Line 5281) SetMemory(0x6509B0, Add, 1),
                            # (Line 5282) SetDeaths(CurrentPlayer, SetTo, 327685, 0),
                            # (Line 5283) SetMemory(0x6509B0, Add, 1),
                            # (Line 5284) SetDeaths(CurrentPlayer, SetTo, 1395, 0),
                            # (Line 5285) SetMemory(0x6509B0, SetTo, oldCP),
                            # (Line 5286) ));
                            DoActions(FlattenList([SetMemory(0x6509B0, SetTo, btnPos), SetDeaths(CurrentPlayer, SetTo, 24510471, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 4361824, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 4338864, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 327685, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 1395, 0), SetMemory(0x6509B0, SetTo, oldCP)]))
                            # (Line 5287) }
                            # (Line 5288) }
                        EUDEndIf()
                        # (Line 5290) hotkeyUnitEPD(Vulture[getcurpl()],getcurpl(),1,0);
                    EUDEndIf()
                    f_hotkeyUnitEPD(Vulture[f_getcurpl()], f_getcurpl(), 1, 0)
                    # (Line 5291) }
                    # (Line 5293) }
                EUDEndIf()
                # (Line 5294) else{
            if EUDElse()():
                # (Line 5295) GiveUnits(1, (230), (7), (26), (6));
                # (Line 5296) GiveUnits(1, (230), (6), (26), (7));
                DoActions(GiveUnits(1, (230), (7), (26), (6)))
                # (Line 5297) PlayWAV("sound\\Misc\\PError.WAV");
                DoActions(GiveUnits(1, (230), (6), (26), (7)))
                # (Line 5298) DisplayText("\n\x13\x04이 \x1C스킨\x04을 \x07장착\x04할 수 없습니다.\n\x13\x1C획득 조건 \x04- \x04룰렛 옵션이 \x08모두 빨강 \x04혹은 \x087 빨강 \x04& \x181 외형(or영웅외형)\x04인 채로 클리어 인증\n", (0));
                DoActions(PlayWAV("sound\\Misc\\PError.WAV"))
                # (Line 5299) }
                DoActions(DisplayText("\n\x13\x04이 \x1C스킨\x04을 \x07장착\x04할 수 없습니다.\n\x13\x1C획득 조건 \x04- \x04룰렛 옵션이 \x08모두 빨강 \x04혹은 \x087 빨강 \x04& \x181 외형(or영웅외형)\x04인 채로 클리어 인증\n", (0)))
                # (Line 5300) }
            EUDEndIf()
            # (Line 5303) if(
        EUDEndIf()
        _t178 = EUDIf()
        # (Line 5304) UnitClickCheck(getcurpl(),SkinRainbowIndex)
        # (Line 5305) ){
        if _t178(UnitClickCheck(f_getcurpl(), SkinRainbowIndex)):
            # (Line 5306) if(
            _t179 = EUDIf()
            # (Line 5307) Skin_Rainbow[getcurpl()] == 1
            # (Line 5308) ){
            if _t179(Skin_Rainbow[f_getcurpl()] == 1):
                # (Line 5309) GiveUnits(1, (230), (7), (39), (6));
                # (Line 5310) GiveUnits(1, (230), (6), (39), (7));
                DoActions(GiveUnits(1, (230), (7), (39), (6)))
                # (Line 5311) PlayWAV("sound\\Misc\\PBldgPlc.wav");
                DoActions(GiveUnits(1, (230), (6), (39), (7)))
                # (Line 5312) if(
                DoActions(PlayWAV("sound\\Misc\\PBldgPlc.wav"))
                _t180 = EUDIf()
                # (Line 5313) RainbowEnabled[getcurpl()] == 0
                # (Line 5314) ){
                if _t180(RainbowEnabled[f_getcurpl()] == 0):
                    # (Line 5315) RainbowEnabled[getcurpl()] = 1;
                    _ARRW(RainbowEnabled, f_getcurpl()) << (1)
                    # (Line 5316) DisplayText("\x13\x1C이펙트\x04가 \x07장착\x04되었습니다.", (0));
                    # (Line 5317) }
                    DoActions(DisplayText("\x13\x1C이펙트\x04가 \x07장착\x04되었습니다.", (0)))
                    # (Line 5318) else{
                if EUDElse()():
                    # (Line 5319) RainbowEnabled[getcurpl()] = 0;
                    _ARRW(RainbowEnabled, f_getcurpl()) << (0)
                    # (Line 5320) DisplayText("\x13\x1C이펙트\x04가 \x07해제\x04되었습니다.", (0));
                    # (Line 5321) if(
                    DoActions(DisplayText("\x13\x1C이펙트\x04가 \x07해제\x04되었습니다.", (0)))
                    _t181 = EUDIf()
                    # (Line 5322) Vulture[getcurpl()] != 0 &&
                    # (Line 5323) Bring((13), (0), 1, (PVulture[getcurpl()]), (64))
                    # (Line 5324) ){
                    if _t181(EUDSCAnd()(Vulture[f_getcurpl()] == 0, neg=True)(Bring((13), (0), 1, (PVulture[f_getcurpl()]), (64)))()):
                        # (Line 5325) SetUnitColorEPD(Vulture[getcurpl()],Pcolor[getcurpl()]);
                        SetUnitColorEPD(Vulture[f_getcurpl()], Pcolor[f_getcurpl()])
                        # (Line 5326) }
                        # (Line 5327) }
                    EUDEndIf()
                    # (Line 5328) if(
                EUDEndIf()
                _t182 = EUDIf()
                # (Line 5329) Bring((13), (0), 1, (230), (24))
                # (Line 5330) ){
                if _t182(Bring((13), (0), 1, (230), (24))):
                    # (Line 5331) CenterView((PLoc[getcurpl()]));
                    # (Line 5332) }
                    DoActions(CenterView((PLoc[f_getcurpl()])))
                    # (Line 5333) }
                EUDEndIf()
                # (Line 5334) else{
            if EUDElse()():
                # (Line 5335) GiveUnits(1, (230), (7), (39), (6));
                # (Line 5336) GiveUnits(1, (230), (6), (39), (7));
                DoActions(GiveUnits(1, (230), (7), (39), (6)))
                # (Line 5337) PlayWAV("sound\\Misc\\PError.WAV");
                DoActions(GiveUnits(1, (230), (6), (39), (7)))
                # (Line 5338) DisplayText("\n\x13\x04이 \x1C이펙트\x04를 \x07장착\x04할 수 없습니다.\n\x13\x1C획득 조건 \x04- \x1146 ~ 50 라운드 \x04클리어 영상을 인증 받음\n", (0));
                DoActions(PlayWAV("sound\\Misc\\PError.WAV"))
                # (Line 5339) }
                DoActions(DisplayText("\n\x13\x04이 \x1C이펙트\x04를 \x07장착\x04할 수 없습니다.\n\x13\x1C획득 조건 \x04- \x1146 ~ 50 라운드 \x04클리어 영상을 인증 받음\n", (0)))
                # (Line 5340) }
            EUDEndIf()
            # (Line 5343) if(
        EUDEndIf()
        _t183 = EUDIf()
        # (Line 5344) UnitClickCheck(getcurpl(),AuraRainbowArchonIndex)
        # (Line 5345) ){
        if _t183(UnitClickCheck(f_getcurpl(), AuraRainbowArchonIndex)):
            # (Line 5346) if(
            _t184 = EUDIf()
            # (Line 5347) Aura_RainbowArchon[getcurpl()] == 1
            # (Line 5348) ){
            if _t184(Aura_RainbowArchon[f_getcurpl()] == 1):
                # (Line 5349) GiveUnits(1, (230), (7), (40), (6));
                # (Line 5350) GiveUnits(1, (230), (6), (40), (7));
                DoActions(GiveUnits(1, (230), (7), (40), (6)))
                # (Line 5351) SetDeaths((13), (7), 2, (179));
                DoActions(GiveUnits(1, (230), (6), (40), (7)))
                # (Line 5352) SetDeaths((13), (7), 1, (180));
                DoActions(SetDeaths((13), (7), 2, (179)))
                # (Line 5353) PlayWAV("sound\\Misc\\PBldgPlc.wav");
                DoActions(SetDeaths((13), (7), 1, (180)))
                # (Line 5354) Aura_RainbowArchonEnabled[getcurpl()] = 1;
                DoActions(PlayWAV("sound\\Misc\\PBldgPlc.wav"))
                _ARRW(Aura_RainbowArchonEnabled, f_getcurpl()) << (1)
                # (Line 5355) DisplayText("\x13\x1C오라\x04가 \x07장착\x04되었습니다.", (0));
                # (Line 5356) if(
                DoActions(DisplayText("\x13\x1C오라\x04가 \x07장착\x04되었습니다.", (0)))
                _t185 = EUDIf()
                # (Line 5357) Bring((13), (0), 1, (230), (24))
                # (Line 5358) ){
                if _t185(Bring((13), (0), 1, (230), (24))):
                    # (Line 5359) CenterView((PLoc[getcurpl()]));
                    # (Line 5360) }
                    DoActions(CenterView((PLoc[f_getcurpl()])))
                    # (Line 5361) }
                EUDEndIf()
                # (Line 5362) else{
            if EUDElse()():
                # (Line 5363) GiveUnits(1, (230), (7), (40), (6));
                # (Line 5364) GiveUnits(1, (230), (6), (40), (7));
                DoActions(GiveUnits(1, (230), (7), (40), (6)))
                # (Line 5365) PlayWAV("sound\\Misc\\PError.WAV");
                DoActions(GiveUnits(1, (230), (6), (40), (7)))
                # (Line 5366) DisplayText("\n\x13\x04이 \x1C오라\x04를 \x07장착\x04할 수 없습니다.\n\x13\x1C획득 조건 \x04- \x04업데이트 예정\n", (0));
                DoActions(PlayWAV("sound\\Misc\\PError.WAV"))
                # (Line 5367) }
                DoActions(DisplayText("\n\x13\x04이 \x1C오라\x04를 \x07장착\x04할 수 없습니다.\n\x13\x1C획득 조건 \x04- \x04업데이트 예정\n", (0)))
                # (Line 5368) }
            EUDEndIf()
            # (Line 5371) if(
        EUDEndIf()
        _t186 = EUDIf()
        # (Line 5372) UnitClickCheck(getcurpl(),399)
        # (Line 5373) ){
        if _t186(UnitClickCheck(f_getcurpl(), 399)):
            # (Line 5374) if(
            _t187 = EUDIf()
            # (Line 5375) WeaponSkin_Select[getcurpl()] >= 1
            # (Line 5376) ){
            if _t187(WeaponSkin_Select[f_getcurpl()] >= 1):
                # (Line 5377) WeaponSkin_Select[getcurpl()] = 0;
                _ARRW(WeaponSkin_Select, f_getcurpl()) << (0)
                # (Line 5378) bwrite(0x65FD00 + 14776 + PVulture[getcurpl()] * 1, 5);
                f_bwrite(0x65FD00 + 14776 + PVulture[f_getcurpl()] * 1, 5)
                # (Line 5379) bwrite(0x65FD00 + 14776 + PHoldFire[getcurpl()] * 1, 5);
                f_bwrite(0x65FD00 + 14776 + PHoldFire[f_getcurpl()] * 1, 5)
                # (Line 5380) if(
                _t188 = EUDIf()
                # (Line 5381) ClassO[getcurpl()] == 1
                # (Line 5382) ){
                if _t188(ClassO[f_getcurpl()] == 1):
                    # (Line 5383) bwrite(0x65FD00 + 14776 + PVulture[getcurpl()] * 1, 15);
                    f_bwrite(0x65FD00 + 14776 + PVulture[f_getcurpl()] * 1, 15)
                    # (Line 5384) bwrite(0x65FD00 + 14776 + PHoldFire[getcurpl()] * 1, 15);
                    f_bwrite(0x65FD00 + 14776 + PHoldFire[f_getcurpl()] * 1, 15)
                    # (Line 5385) }
                    # (Line 5386) GiveUnits(1, (230), (7), (17), (6));
                EUDEndIf()
                # (Line 5387) GiveUnits(1, (230), (6), (17), (7));
                DoActions(GiveUnits(1, (230), (7), (17), (6)))
                # (Line 5388) PlayWAV("sound\\Misc\\PBldgPlc.wav");
                DoActions(GiveUnits(1, (230), (6), (17), (7)))
                # (Line 5389) DisplayText("\x13\x07무기스킨\x04이 \x08해제\x04되었습니다.", (0));
                DoActions(PlayWAV("sound\\Misc\\PBldgPlc.wav"))
                # (Line 5391) if(
                DoActions(DisplayText("\x13\x07무기스킨\x04이 \x08해제\x04되었습니다.", (0)))
                _t189 = EUDIf()
                # (Line 5392) Bring((13), (0), 1, (230), (24))
                # (Line 5393) ){
                if _t189(Bring((13), (0), 1, (230), (24))):
                    # (Line 5394) CenterView((PLoc[getcurpl()]));
                    # (Line 5395) }
                    DoActions(CenterView((PLoc[f_getcurpl()])))
                    # (Line 5397) }
                EUDEndIf()
                # (Line 5398) else{
            if EUDElse()():
                # (Line 5399) GiveUnits(1, (230), (7), (17), (6));
                # (Line 5400) GiveUnits(1, (230), (6), (17), (7));
                DoActions(GiveUnits(1, (230), (7), (17), (6)))
                # (Line 5401) PlayWAV("sound\\Misc\\PError.WAV");
                DoActions(GiveUnits(1, (230), (6), (17), (7)))
                # (Line 5402) DisplayText("\x13\x1C장착\x04된 \x07무기스킨\x04이 없습니다.", (0));
                DoActions(PlayWAV("sound\\Misc\\PError.WAV"))
                # (Line 5403) if(
                DoActions(DisplayText("\x13\x1C장착\x04된 \x07무기스킨\x04이 없습니다.", (0)))
                _t190 = EUDIf()
                # (Line 5404) ClassO[getcurpl()] == 1
                # (Line 5405) ){
                if _t190(ClassO[f_getcurpl()] == 1):
                    # (Line 5406) bwrite(0x65FD00 + 14776 + PVulture[getcurpl()] * 1, 15);
                    f_bwrite(0x65FD00 + 14776 + PVulture[f_getcurpl()] * 1, 15)
                    # (Line 5407) bwrite(0x65FD00 + 14776 + PHoldFire[getcurpl()] * 1, 15);
                    f_bwrite(0x65FD00 + 14776 + PHoldFire[f_getcurpl()] * 1, 15)
                    # (Line 5408) }
                    # (Line 5409) }
                EUDEndIf()
                # (Line 5410) }
            EUDEndIf()
            # (Line 5413) if(
        EUDEndIf()
        _t191 = EUDIf()
        # (Line 5414) UnitClickCheck(getcurpl(),400)
        # (Line 5415) ){
        if _t191(UnitClickCheck(f_getcurpl(), 400)):
            # (Line 5416) if(
            _t192 = EUDIf()
            # (Line 5417) WeaponSkin1[getcurpl()] == 1
            # (Line 5418) ){
            if _t192(WeaponSkin1[f_getcurpl()] == 1):
                # (Line 5419) WeaponSkin_Select[getcurpl()] = 1;
                _ARRW(WeaponSkin_Select, f_getcurpl()) << (1)
                # (Line 5420) bwrite(0x65FD00 + 14776 + PVulture[getcurpl()] * 1, 48);
                f_bwrite(0x65FD00 + 14776 + PVulture[f_getcurpl()] * 1, 48)
                # (Line 5421) bwrite(0x65FD00 + 14776 + PHoldFire[getcurpl()] * 1, 48);
                f_bwrite(0x65FD00 + 14776 + PHoldFire[f_getcurpl()] * 1, 48)
                # (Line 5422) GiveUnits(1, (230), (7), (35), (6));
                # (Line 5423) GiveUnits(1, (230), (6), (35), (7));
                DoActions(GiveUnits(1, (230), (7), (35), (6)))
                # (Line 5424) PlayWAV("sound\\Misc\\PBldgPlc.wav");
                DoActions(GiveUnits(1, (230), (6), (35), (7)))
                # (Line 5425) if(
                DoActions(PlayWAV("sound\\Misc\\PBldgPlc.wav"))
                _t193 = EUDIf()
                # (Line 5426) Bring((13), (0), 1, (230), (24))
                # (Line 5427) ){
                if _t193(Bring((13), (0), 1, (230), (24))):
                    # (Line 5428) CenterView((PLoc[getcurpl()]));
                    # (Line 5429) }
                    DoActions(CenterView((PLoc[f_getcurpl()])))
                    # (Line 5430) DisplayText("\x13\x1C무기스킨\x04이 \x07장착\x04되었습니다.", (0));
                EUDEndIf()
                # (Line 5431) }
                DoActions(DisplayText("\x13\x1C무기스킨\x04이 \x07장착\x04되었습니다.", (0)))
                # (Line 5432) else{
            if EUDElse()():
                # (Line 5433) GiveUnits(1, (230), (7), (35), (6));
                # (Line 5434) GiveUnits(1, (230), (6), (35), (7));
                DoActions(GiveUnits(1, (230), (7), (35), (6)))
                # (Line 5435) PlayWAV("sound\\Misc\\PError.WAV");
                DoActions(GiveUnits(1, (230), (6), (35), (7)))
                # (Line 5436) DisplayText("\n\x13\x04이 \x1C무기스킨\x04을 \x07장착\x04할 수 없습니다.\n\x13\x1C획득 조건 \x04- \x1F쿠쿨자 \x04보상 \x08[ \x04글레이브 웜 \x08] \x04부터 직후 라운드까지 클리어 인증\n", (0));
                DoActions(PlayWAV("sound\\Misc\\PError.WAV"))
                # (Line 5437) }
                DoActions(DisplayText("\n\x13\x04이 \x1C무기스킨\x04을 \x07장착\x04할 수 없습니다.\n\x13\x1C획득 조건 \x04- \x1F쿠쿨자 \x04보상 \x08[ \x04글레이브 웜 \x08] \x04부터 직후 라운드까지 클리어 인증\n", (0)))
                # (Line 5438) }
            EUDEndIf()
            # (Line 5441) if(
        EUDEndIf()
        _t194 = EUDIf()
        # (Line 5442) UnitClickCheck(getcurpl(),401)
        # (Line 5443) ){
        if _t194(UnitClickCheck(f_getcurpl(), 401)):
            # (Line 5444) if(
            _t195 = EUDIf()
            # (Line 5445) WeaponSkin2[getcurpl()] == 1
            # (Line 5446) ){
            if _t195(WeaponSkin2[f_getcurpl()] == 1):
                # (Line 5447) WeaponSkin_Select[getcurpl()] = 1;
                _ARRW(WeaponSkin_Select, f_getcurpl()) << (1)
                # (Line 5448) bwrite(0x65FD00 + 14776 + PVulture[getcurpl()] * 1, 79);
                f_bwrite(0x65FD00 + 14776 + PVulture[f_getcurpl()] * 1, 79)
                # (Line 5449) bwrite(0x65FD00 + 14776 + PHoldFire[getcurpl()] * 1, 79);
                f_bwrite(0x65FD00 + 14776 + PHoldFire[f_getcurpl()] * 1, 79)
                # (Line 5450) GiveUnits(1, (230), (7), (36), (6));
                # (Line 5451) GiveUnits(1, (230), (6), (36), (7));
                DoActions(GiveUnits(1, (230), (7), (36), (6)))
                # (Line 5452) PlayWAV("sound\\Misc\\PBldgPlc.wav");
                DoActions(GiveUnits(1, (230), (6), (36), (7)))
                # (Line 5453) if(
                DoActions(PlayWAV("sound\\Misc\\PBldgPlc.wav"))
                _t196 = EUDIf()
                # (Line 5454) Bring((13), (0), 1, (230), (24))
                # (Line 5455) ){
                if _t196(Bring((13), (0), 1, (230), (24))):
                    # (Line 5456) CenterView((PLoc[getcurpl()]));
                    # (Line 5457) }
                    DoActions(CenterView((PLoc[f_getcurpl()])))
                    # (Line 5458) DisplayText("\x13\x1C무기스킨\x04이 \x07장착\x04되었습니다.", (0));
                EUDEndIf()
                # (Line 5459) }
                DoActions(DisplayText("\x13\x1C무기스킨\x04이 \x07장착\x04되었습니다.", (0)))
                # (Line 5460) else{
            if EUDElse()():
                # (Line 5461) GiveUnits(1, (230), (7), (36), (6));
                # (Line 5462) GiveUnits(1, (230), (6), (36), (7));
                DoActions(GiveUnits(1, (230), (7), (36), (6)))
                # (Line 5463) PlayWAV("sound\\Misc\\PError.WAV");
                DoActions(GiveUnits(1, (230), (6), (36), (7)))
                # (Line 5464) DisplayText("\n\x13\x04이 \x1C무기스킨\x04을 \x07장착\x04할 수 없습니다.\n\x13\x1C획득 조건 \x04- \x1F영웅 외형 \x04등장부터 \x08[ \x04펄스 캐넌 \x08] \x04보상까지의 영상 인증\n", (0));
                DoActions(PlayWAV("sound\\Misc\\PError.WAV"))
                # (Line 5465) }
                DoActions(DisplayText("\n\x13\x04이 \x1C무기스킨\x04을 \x07장착\x04할 수 없습니다.\n\x13\x1C획득 조건 \x04- \x1F영웅 외형 \x04등장부터 \x08[ \x04펄스 캐넌 \x08] \x04보상까지의 영상 인증\n", (0)))
                # (Line 5466) }
            EUDEndIf()
            # (Line 5469) if(
        EUDEndIf()
        _t197 = EUDIf()
        # (Line 5470) UnitClickCheck(getcurpl(),402)
        # (Line 5471) ){
        if _t197(UnitClickCheck(f_getcurpl(), 402)):
            # (Line 5472) if(
            _t198 = EUDIf()
            # (Line 5473) WeaponSkin3[getcurpl()] == 1
            # (Line 5474) ){
            if _t198(WeaponSkin3[f_getcurpl()] == 1):
                # (Line 5475) WeaponSkin_Select[getcurpl()] = 1;
                _ARRW(WeaponSkin_Select, f_getcurpl()) << (1)
                # (Line 5476) bwrite(0x65FD00 + 14776 + PVulture[getcurpl()] * 1, 16);
                f_bwrite(0x65FD00 + 14776 + PVulture[f_getcurpl()] * 1, 16)
                # (Line 5477) bwrite(0x65FD00 + 14776 + PHoldFire[getcurpl()] * 1, 16);
                f_bwrite(0x65FD00 + 14776 + PHoldFire[f_getcurpl()] * 1, 16)
                # (Line 5478) GiveUnits(1, (230), (7), (37), (6));
                # (Line 5479) GiveUnits(1, (230), (6), (37), (7));
                DoActions(GiveUnits(1, (230), (7), (37), (6)))
                # (Line 5480) PlayWAV("sound\\Misc\\PBldgPlc.wav");
                DoActions(GiveUnits(1, (230), (6), (37), (7)))
                # (Line 5481) if(
                DoActions(PlayWAV("sound\\Misc\\PBldgPlc.wav"))
                _t199 = EUDIf()
                # (Line 5482) Bring((13), (0), 1, (230), (24))
                # (Line 5483) ){
                if _t199(Bring((13), (0), 1, (230), (24))):
                    # (Line 5484) CenterView((PLoc[getcurpl()]));
                    # (Line 5485) }
                    DoActions(CenterView((PLoc[f_getcurpl()])))
                    # (Line 5486) DisplayText("\x13\x1C무기스킨\x04이 \x07장착\x04되었습니다.", (0));
                EUDEndIf()
                # (Line 5487) }
                DoActions(DisplayText("\x13\x1C무기스킨\x04이 \x07장착\x04되었습니다.", (0)))
                # (Line 5488) else{
            if EUDElse()():
                # (Line 5489) GiveUnits(1, (230), (7), (37), (6));
                # (Line 5490) GiveUnits(1, (230), (6), (37), (7));
                DoActions(GiveUnits(1, (230), (7), (37), (6)))
                # (Line 5491) PlayWAV("sound\\Misc\\PError.WAV");
                DoActions(GiveUnits(1, (230), (6), (37), (7)))
                # (Line 5492) DisplayText("\n\x13\x04이 \x1C무기스킨\x04을 \x07장착\x04할 수 없습니다.\n\x13\x1C획득 조건 \x04- \x1F톰 카잔스키 \x04보상 \x08[ \x04버스트 레이저 \x08] \x04부터 직후 라운드까지 클리어 인증\n", (0));
                DoActions(PlayWAV("sound\\Misc\\PError.WAV"))
                # (Line 5493) }
                DoActions(DisplayText("\n\x13\x04이 \x1C무기스킨\x04을 \x07장착\x04할 수 없습니다.\n\x13\x1C획득 조건 \x04- \x1F톰 카잔스키 \x04보상 \x08[ \x04버스트 레이저 \x08] \x04부터 직후 라운드까지 클리어 인증\n", (0)))
                # (Line 5494) }
            EUDEndIf()
            # (Line 5496) }
        EUDEndIf()
        # (Line 5497) EUDEndPlayerLoop();
    EUDEndIf()
    EUDEndPlayerLoop()
    # (Line 5500) EUDPlayerLoop()();
    EUDPlayerLoop()()
    # (Line 5501) if (getcurpl() == 0 || getcurpl() == 1 || getcurpl() == 2 || getcurpl() == 3 || getcurpl() == 4 || getcurpl() == 5) {
    if EUDIf()(EUDSCOr()(f_getcurpl() == 0)(f_getcurpl() == 1)(f_getcurpl() == 2)(f_getcurpl() == 3)(f_getcurpl() == 4)(f_getcurpl() == 5)()):
        # (Line 5503) if(
        _t201 = EUDIf()
        # (Line 5504) Deaths((13), (10), 3, (179)) &&
        # (Line 5505) Bring((13), (0), 1, (230), (24)) &&
        # (Line 5506) Bring((13), (10), 0, (123), (64))
        # (Line 5507) ){
        if _t201(EUDSCAnd()(Deaths((13), (10), 3, (179)))(Bring((13), (0), 1, (230), (24)))(Bring((13), (10), 0, (123), (64)))()):
            # (Line 5508) var aura;
            aura = EUDVariable()
            # (Line 5509) aura = epdread_epd(EPD(0x628438));
            aura << (f_epdread_epd(EPD(0x628438)))
            # (Line 5510) CreateUnitWithProperties(1, (123), (1), (13), UnitProperty(hitpoint = 100, shield = 100, energy = 50, resource = 0, hanger = 0, cloaked = False, burrowed = False, intransit = False, hallucinated = False, invincible = True));
            # (Line 5511) SetMemoryEPD(aura + 0x0DC / 4, Add, 2048 * 1);
            DoActions(CreateUnitWithProperties(1, (123), (1), (13), UnitProperty(hitpoint=100, shield=100, energy=50, resource=0, hanger=0, cloaked=False, burrowed=False, intransit=False, hallucinated=False, invincible=True)))
            # (Line 5512) SetMemoryEPD(aura + 0x0DC / 4, Add, 512 * 1);
            DoActions(SetMemoryEPD(aura + 0x0DC // 4, Add, 2048 * 1))
            # (Line 5513) }
            DoActions(SetMemoryEPD(aura + 0x0DC // 4, Add, 512 * 1))
            # (Line 5516) if(
        EUDEndIf()
        _t202 = EUDIf()
        # (Line 5517) Deaths((13), (10), 4, (179)) &&
        # (Line 5518) Bring((13), (0), 1, (230), (24)) &&
        # (Line 5519) Bring((13), (10), 0, (111), (64))
        # (Line 5520) ){
        if _t202(EUDSCAnd()(Deaths((13), (10), 4, (179)))(Bring((13), (0), 1, (230), (24)))(Bring((13), (10), 0, (111), (64)))()):
            # (Line 5521) var aura;
            aura = EUDVariable()
            # (Line 5522) aura = epdread_epd(EPD(0x628438));
            aura << (f_epdread_epd(EPD(0x628438)))
            # (Line 5523) CreateUnitWithProperties(1, (111), (1), (13), UnitProperty(hitpoint = 100, shield = 100, energy = 50, resource = 0, hanger = 0, cloaked = False, burrowed = False, intransit = False, hallucinated = False, invincible = False));
            # (Line 5524) SetMemoryEPD(aura + 0x0DC / 4, Add, 2048 * 1);
            DoActions(CreateUnitWithProperties(1, (111), (1), (13), UnitProperty(hitpoint=100, shield=100, energy=50, resource=0, hanger=0, cloaked=False, burrowed=False, intransit=False, hallucinated=False, invincible=False)))
            # (Line 5525) SetMemoryEPD(aura + 0x0DC / 4, Add, 512 * 1);
            DoActions(SetMemoryEPD(aura + 0x0DC // 4, Add, 2048 * 1))
            # (Line 5526) }
            DoActions(SetMemoryEPD(aura + 0x0DC // 4, Add, 512 * 1))
            # (Line 5529) if(
        EUDEndIf()
        _t203 = EUDIf()
        # (Line 5530) Deaths((13), (10), 2, (179)) &&
        # (Line 5531) Bring((13), (0), 1, (230), (24)) &&
        # (Line 5532) Bring((13), (10), 0, (114), (64))
        # (Line 5533) ){
        if _t203(EUDSCAnd()(Deaths((13), (10), 2, (179)))(Bring((13), (0), 1, (230), (24)))(Bring((13), (10), 0, (114), (64)))()):
            # (Line 5534) var aura;
            aura = EUDVariable()
            # (Line 5535) aura = epdread_epd(EPD(0x628438));
            aura << (f_epdread_epd(EPD(0x628438)))
            # (Line 5536) Aura_RainbowArchonP[getcurpl()] = epdread_epd(EPD(0x628438));
            _ARRW(Aura_RainbowArchonP, f_getcurpl()) << (f_epdread_epd(EPD(0x628438)))
            # (Line 5537) CreateUnitWithProperties(1, (114), (1), (13), UnitProperty(hitpoint = 100, shield = 100, energy = 50, resource = 0, hanger = 0, cloaked = False, burrowed = False, intransit = False, hallucinated = False, invincible = True));
            # (Line 5538) SetMemoryEPD(aura + 0x0DC / 4, Add, 2048 * 1);
            DoActions(CreateUnitWithProperties(1, (114), (1), (13), UnitProperty(hitpoint=100, shield=100, energy=50, resource=0, hanger=0, cloaked=False, burrowed=False, intransit=False, hallucinated=False, invincible=True)))
            # (Line 5539) SetMemoryEPD(aura + 0x0DC / 4, Add, 512 * 1);
            DoActions(SetMemoryEPD(aura + 0x0DC // 4, Add, 2048 * 1))
            # (Line 5540) }
            DoActions(SetMemoryEPD(aura + 0x0DC // 4, Add, 512 * 1))
            # (Line 5543) if(
        EUDEndIf()
        _t204 = EUDIf()
        # (Line 5544) Deaths((13), (10), 1, (179)) &&
        # (Line 5545) Bring((13), (0), 1, (230), (24)) &&
        # (Line 5546) Bring((13), (10), 0, (109), (64))
        # (Line 5547) ){
        if _t204(EUDSCAnd()(Deaths((13), (10), 1, (179)))(Bring((13), (0), 1, (230), (24)))(Bring((13), (10), 0, (109), (64)))()):
            # (Line 5548) bwrite(0x666778 + 14000 + 983 * 1, 9);
            f_bwrite(0x666778 + 14000 + 983 * 1, 9)
            # (Line 5549) var aura;
            aura = EUDVariable()
            # (Line 5550) aura = epdread_epd(EPD(0x628438));
            aura << (f_epdread_epd(EPD(0x628438)))
            # (Line 5551) CreateUnitWithProperties(1, (109), (1), (13), UnitProperty(hitpoint = 100, shield = 100, energy = 50, resource = 0, hanger = 0, cloaked = False, burrowed = False, intransit = False, hallucinated = False, invincible = True));
            # (Line 5552) SetMemoryEPD(aura + 0x0DC / 4, Add, 2048 * 1);
            DoActions(CreateUnitWithProperties(1, (109), (1), (13), UnitProperty(hitpoint=100, shield=100, energy=50, resource=0, hanger=0, cloaked=False, burrowed=False, intransit=False, hallucinated=False, invincible=True)))
            # (Line 5553) SetMemoryEPD(aura + 0x0DC / 4, Add, 512 * 1);
            DoActions(SetMemoryEPD(aura + 0x0DC // 4, Add, 2048 * 1))
            # (Line 5554) }
            DoActions(SetMemoryEPD(aura + 0x0DC // 4, Add, 512 * 1))
            # (Line 5557) if(
        EUDEndIf()
        _t205 = EUDIf()
        # (Line 5558) Deaths((13), (10), 5, (179)) &&
        # (Line 5559) Bring((13), (0), 1, (230), (24)) &&
        # (Line 5560) Bring((13), (10), 0, (113), (64))
        # (Line 5561) ){
        if _t205(EUDSCAnd()(Deaths((13), (10), 5, (179)))(Bring((13), (0), 1, (230), (24)))(Bring((13), (10), 0, (113), (64)))()):
            # (Line 5562) bwrite(0x666778 + 14000 + 983 * 1, 16);
            f_bwrite(0x666778 + 14000 + 983 * 1, 16)
            # (Line 5563) var aura;
            aura = EUDVariable()
            # (Line 5564) aura = epdread_epd(EPD(0x628438));
            aura << (f_epdread_epd(EPD(0x628438)))
            # (Line 5565) CreateUnitWithProperties(1, (113), (1), (13), UnitProperty(hitpoint = 100, shield = 100, energy = 50, resource = 0, hanger = 0, cloaked = False, burrowed = False, intransit = False, hallucinated = False, invincible = True));
            # (Line 5566) SetMemoryEPD(aura + 0x0DC / 4, Add, 2048 * 1);
            DoActions(CreateUnitWithProperties(1, (113), (1), (13), UnitProperty(hitpoint=100, shield=100, energy=50, resource=0, hanger=0, cloaked=False, burrowed=False, intransit=False, hallucinated=False, invincible=True)))
            # (Line 5567) SetMemoryEPD(aura + 0x0DC / 4, Add, 512 * 1);
            DoActions(SetMemoryEPD(aura + 0x0DC // 4, Add, 2048 * 1))
            # (Line 5568) }
            DoActions(SetMemoryEPD(aura + 0x0DC // 4, Add, 512 * 1))
            # (Line 5570) MoveUnit(1, (123), (13), (64), (PLoc[getcurpl()]));
        EUDEndIf()
        # (Line 5571) MoveUnit(1, (111), (13), (64), (PLoc[getcurpl()]));
        DoActions(MoveUnit(1, (123), (13), (64), (PLoc[f_getcurpl()])))
        # (Line 5572) MoveUnit(1, (114), (13), (64), (PLoc[getcurpl()]));
        DoActions(MoveUnit(1, (111), (13), (64), (PLoc[f_getcurpl()])))
        # (Line 5573) MoveUnit(1, (109), (13), (64), (PLoc[getcurpl()]));
        DoActions(MoveUnit(1, (114), (13), (64), (PLoc[f_getcurpl()])))
        # (Line 5574) MoveUnit(1, (113), (13), (64), (PLoc[getcurpl()]));
        DoActions(MoveUnit(1, (109), (13), (64), (PLoc[f_getcurpl()])))
        # (Line 5575) if(
        DoActions(MoveUnit(1, (113), (13), (64), (PLoc[f_getcurpl()])))
        _t206 = EUDIf()
        # (Line 5576) Bring((13), (10), 0, (PVulture[getcurpl()]), (24))
        # (Line 5577) ){
        if _t206(Bring((13), (10), 0, (PVulture[f_getcurpl()]), (24))):
            # (Line 5578) RemoveUnit((123), (13));
            # (Line 5579) RemoveUnit((111), (13));
            DoActions(RemoveUnit((123), (13)))
            # (Line 5580) RemoveUnit((114), (13));
            DoActions(RemoveUnit((111), (13)))
            # (Line 5581) RemoveUnit((109), (13));
            DoActions(RemoveUnit((114), (13)))
            # (Line 5582) RemoveUnit((113), (13));
            DoActions(RemoveUnit((109), (13)))
            # (Line 5583) }
            DoActions(RemoveUnit((113), (13)))
            # (Line 5584) }
        EUDEndIf()
        # (Line 5585) EUDEndPlayerLoop();
    EUDEndIf()
    EUDEndPlayerLoop()
    # (Line 5590) if(
    _t207 = EUDIf()
    # (Line 5591) Switch((1), (2)) &&
    # (Line 5592) Switch((16), (3))
    # (Line 5593) ){
    if _t207(EUDSCAnd()(Switch((1), (2)))(Switch((16), (3)))()):
        # (Line 5594) EUDPlayerLoop()();
        EUDPlayerLoop()()
        # (Line 5595) if (getcurpl() == 0 || getcurpl() == 1 || getcurpl() == 2 || getcurpl() == 3 || getcurpl() == 4 || getcurpl() == 5) {
        if EUDIf()(EUDSCOr()(f_getcurpl() == 0)(f_getcurpl() == 1)(f_getcurpl() == 2)(f_getcurpl() == 3)(f_getcurpl() == 4)(f_getcurpl() == 5)()):
            # (Line 5596) if(
            _t209 = EUDIf()
            # (Line 5597) OpTimer[getcurpl()] >= 1
            # (Line 5598) ){
            if _t209(OpTimer[f_getcurpl()] >= 1):
                # (Line 5599) OpTimer[getcurpl()] -= 1;
                _ARRW(OpTimer, f_getcurpl()).__isub__(1)
                # (Line 5600) }
                # (Line 5601) if(
            EUDEndIf()
            _t210 = EUDIf()
            # (Line 5602) OpTimer[getcurpl()] == 0 &&
            # (Line 5603) Deaths((13), (10), 2, (207))
            # (Line 5604) ){
            if _t210(EUDSCAnd()(OpTimer[f_getcurpl()] == 0)(Deaths((13), (10), 2, (207)))()):
                # (Line 5605) OpTimer[getcurpl()] = 30;
                _ARRW(OpTimer, f_getcurpl()) << (30)
                # (Line 5606) DisplayText("\n\n\n\n\n", (0));
                # (Line 5607) OptionDescribe();
                DoActions(DisplayText("\n\n\n\n\n", (0)))
                OptionDescribe()
                # (Line 5608) PlayWAV("staredit\\wav\\paper.wav");
                # (Line 5609) }
                DoActions(PlayWAV("staredit\\wav\\paper.wav"))
                # (Line 5610) }
            EUDEndIf()
            # (Line 5611) EUDEndPlayerLoop();
        EUDEndIf()
        EUDEndPlayerLoop()
        # (Line 5612) }
        # (Line 5614) if(
    EUDEndIf()
    _t211 = EUDIf()
    # (Line 5615) Switch((16), (2)) &&
    # (Line 5616) Switch((15), (3))
    # (Line 5617) ){
    if _t211(EUDSCAnd()(Switch((16), (2)))(Switch((15), (3)))()):
        # (Line 5618) EUDPlayerLoop()();
        EUDPlayerLoop()()
        # (Line 5619) if (getcurpl() == 0 || getcurpl() == 1 || getcurpl() == 2 || getcurpl() == 3 || getcurpl() == 4 || getcurpl() == 5) {
        if EUDIf()(EUDSCOr()(f_getcurpl() == 0)(f_getcurpl() == 1)(f_getcurpl() == 2)(f_getcurpl() == 3)(f_getcurpl() == 4)(f_getcurpl() == 5)()):
            # (Line 5620) tct.chatAnnouncement(" ");
            tct.f_chatAnnouncement(" ")
            # (Line 5621) }
            # (Line 5622) EUDEndPlayerLoop();
        EUDEndIf()
        EUDEndPlayerLoop()
        # (Line 5624) if(
        _t213 = EUDIf()
        # (Line 5625) Roulette_Timer >= 30
        # (Line 5626) ){
        if _t213(Roulette_Timer >= 30):
            # (Line 5627) Roulette_Timer = 0;
            Roulette_Timer << (0)
            # (Line 5628) for(var i=0; i<Roulette_Count+1; i++){
            i = EUDVariable()
            i << (0)
            if EUDWhile()(i >= Roulette_Count + 1, neg=True):
                def _t215():
                    i.__iadd__(1)
                # (Line 5629) if(
                _t216 = EUDIf()
                # (Line 5630) i == Roulette_Count
                # (Line 5631) ){
                if _t216(i == Roulette_Count):
                    # (Line 5632) SetSwitch((15), (4));
                    # (Line 5633) autoStart = 1;
                    DoActions(SetSwitch((15), (4)))
                    autoStart << (1)
                    # (Line 5634) break;
                    EUDBreak()
                    # (Line 5635) }
                    # (Line 5636) if(
                EUDEndIf()
                _t217 = EUDIf()
                # (Line 5637) RandomOption[i] == 0
                # (Line 5638) ){
                if _t217(RandomOption[i] == 0):
                    # (Line 5639) RandomOption[i] = dwrand() % (OptionCount + 1);
                    _ARRW(RandomOption, i) << (f_dwrand() % (OptionCount + 1))
                    # (Line 5640) RandomOption[i] += 1;
                    _ARRW(RandomOption, i).__iadd__(1)
                    # (Line 5641) for(var k=0; k<i || i==0; ){
                    k = EUDVariable()
                    k << (0)
                    if EUDWhile()(EUDSCOr()(k >= i, neg=True)(i == 0)()):
                        def _t219():
                            pass
                        # (Line 5642) if(
                        _t220 = EUDIf()
                        # (Line 5643) i != 0
                        # (Line 5644) ){
                        if _t220(i == 0, neg=True):
                            # (Line 5645) if(
                            _t221 = EUDIf()
                            # (Line 5646) RandomOption[i] != RandomOption[k]
                            # (Line 5647) ){
                            if _t221(RandomOption[i] == RandomOption[k], neg=True):
                                # (Line 5648) k += 1;
                                k.__iadd__(1)
                                # (Line 5649) }
                                # (Line 5650) else{
                            if EUDElse()():
                                # (Line 5651) RandomOption[i] = 0;
                                _ARRW(RandomOption, i) << (0)
                                # (Line 5652) i--;
                                i.__isub__(1)
                                # (Line 5653) break;
                                EUDBreak()
                                # (Line 5654) }
                                # (Line 5655) }
                            EUDEndIf()
                            # (Line 5656) if(
                        EUDEndIf()
                        _t222 = EUDIf()
                        # (Line 5657) i == k
                        # (Line 5658) ){
                        if _t222(i == k):
                            # (Line 5661) if(
                            _t223 = EUDIf()
                            # (Line 5662) RandomOption[i] == 15
                            # (Line 5663) ){
                            if _t223(RandomOption[i] == 15):
                                # (Line 5664) RandomNum = dwrand() % (2 + 1);
                                RandomNum << (f_dwrand() % (2 + 1))
                                # (Line 5665) if(
                                _t224 = EUDIf()
                                # (Line 5666) RandomNum != 0
                                # (Line 5667) ){
                                if _t224(RandomNum == 0, neg=True):
                                    # (Line 5668) RandomOption[i] = 0;
                                    _ARRW(RandomOption, i) << (0)
                                    # (Line 5669) i--;
                                    i.__isub__(1)
                                    # (Line 5670) break;
                                    EUDBreak()
                                    # (Line 5671) }
                                    # (Line 5672) }
                                EUDEndIf()
                                # (Line 5675) if(
                            EUDEndIf()
                            _t225 = EUDIf()
                            # (Line 5676) RandomOption[i] == 23
                            # (Line 5677) ){
                            if _t225(RandomOption[i] == 23):
                                # (Line 5678) RandomNum = dwrand() % (2 + 1);
                                RandomNum << (f_dwrand() % (2 + 1))
                                # (Line 5679) if(
                                _t226 = EUDIf()
                                # (Line 5680) RandomNum != 0
                                # (Line 5681) ){
                                if _t226(RandomNum == 0, neg=True):
                                    # (Line 5682) RandomOption[i] = 0;
                                    _ARRW(RandomOption, i) << (0)
                                    # (Line 5683) i--;
                                    i.__isub__(1)
                                    # (Line 5684) break;
                                    EUDBreak()
                                    # (Line 5685) }
                                    # (Line 5686) }
                                EUDEndIf()
                                # (Line 5689) if(
                            EUDEndIf()
                            _t227 = EUDIf()
                            # (Line 5690) RandomOption[i] == 28
                            # (Line 5691) ){
                            if _t227(RandomOption[i] == 28):
                                # (Line 5692) if(
                                _t228 = EUDIf()
                                # (Line 5693) Deaths((6), (1), 15, (193))
                                # (Line 5694) ){
                                if _t228(Deaths((6), (1), 15, (193))):
                                    # (Line 5695) RandomNum = dwrand() % (3 + 1);
                                    RandomNum << (f_dwrand() % (3 + 1))
                                    # (Line 5696) }
                                    # (Line 5697) if(
                                EUDEndIf()
                                _t229 = EUDIf()
                                # (Line 5698) Deaths((6), (0), 16, (193))
                                # (Line 5699) ){
                                if _t229(Deaths((6), (0), 16, (193))):
                                    # (Line 5700) RandomNum = dwrand() % (1 + 1);
                                    RandomNum << (f_dwrand() % (1 + 1))
                                    # (Line 5701) }
                                    # (Line 5702) if(
                                EUDEndIf()
                                _t230 = EUDIf()
                                # (Line 5703) RandomNum != 0
                                # (Line 5704) ){
                                if _t230(RandomNum == 0, neg=True):
                                    # (Line 5705) RandomOption[i] = 0;
                                    _ARRW(RandomOption, i) << (0)
                                    # (Line 5706) i--;
                                    i.__isub__(1)
                                    # (Line 5707) break;
                                    EUDBreak()
                                    # (Line 5708) }
                                    # (Line 5709) }
                                EUDEndIf()
                                # (Line 5712) if(
                            EUDEndIf()
                            _t231 = EUDIf()
                            # (Line 5713) RandomOption[i] == 29
                            # (Line 5714) ){
                            if _t231(RandomOption[i] == 29):
                                # (Line 5715) if(
                                _t232 = EUDIf()
                                # (Line 5716) Bring((18), (1), 3, (230), (52))
                                # (Line 5717) ){
                                if _t232(Bring((18), (1), 3, (230), (52))):
                                    # (Line 5718) RandomOption[i] = 0;
                                    _ARRW(RandomOption, i) << (0)
                                    # (Line 5719) i--;
                                    i.__isub__(1)
                                    # (Line 5720) break;
                                    EUDBreak()
                                    # (Line 5721) }
                                    # (Line 5722) RandomNum = dwrand() % (10 + 1);
                                EUDEndIf()
                                RandomNum << (f_dwrand() % (10 + 1))
                                # (Line 5723) if(
                                _t233 = EUDIf()
                                # (Line 5724) RandomNum != 0
                                # (Line 5725) ){
                                if _t233(RandomNum == 0, neg=True):
                                    # (Line 5726) RandomOption[i] = 0;
                                    _ARRW(RandomOption, i) << (0)
                                    # (Line 5727) i--;
                                    i.__isub__(1)
                                    # (Line 5728) break;
                                    EUDBreak()
                                    # (Line 5729) }
                                    # (Line 5730) }
                                EUDEndIf()
                                # (Line 5733) if(
                            EUDEndIf()
                            _t234 = EUDIf()
                            # (Line 5734) RandomOption[i] == 31
                            # (Line 5735) ){
                            if _t234(RandomOption[i] == 31):
                                # (Line 5736) RandomNum = dwrand() % (10 + 1);
                                RandomNum << (f_dwrand() % (10 + 1))
                                # (Line 5737) if(
                                _t235 = EUDIf()
                                # (Line 5738) RandomNum != 0
                                # (Line 5739) ){
                                if _t235(RandomNum == 0, neg=True):
                                    # (Line 5740) RandomOption[i] = 0;
                                    _ARRW(RandomOption, i) << (0)
                                    # (Line 5741) i--;
                                    i.__isub__(1)
                                    # (Line 5742) break;
                                    EUDBreak()
                                    # (Line 5743) }
                                    # (Line 5744) }
                                EUDEndIf()
                                # (Line 5747) if(
                            EUDEndIf()
                            _t236 = EUDIf()
                            # (Line 5748) RandomOption[i] == 34
                            # (Line 5749) ){
                            if _t236(RandomOption[i] == 34):
                                # (Line 5750) RandomNum = dwrand() % (2 + 1);
                                RandomNum << (f_dwrand() % (2 + 1))
                                # (Line 5751) if(
                                _t237 = EUDIf()
                                # (Line 5752) RandomNum != 0
                                # (Line 5753) ){
                                if _t237(RandomNum == 0, neg=True):
                                    # (Line 5754) RandomOption[i] = 0;
                                    _ARRW(RandomOption, i) << (0)
                                    # (Line 5755) i--;
                                    i.__isub__(1)
                                    # (Line 5756) break;
                                    EUDBreak()
                                    # (Line 5757) }
                                    # (Line 5758) }
                                EUDEndIf()
                                # (Line 5761) if(
                            EUDEndIf()
                            _t238 = EUDIf()
                            # (Line 5762) RandomOption[i] == 35
                            # (Line 5763) ){
                            if _t238(RandomOption[i] == 35):
                                # (Line 5764) if(
                                _t239 = EUDIf()
                                # (Line 5765) Deaths((6), (1), 15, (193))
                                # (Line 5766) ){
                                if _t239(Deaths((6), (1), 15, (193))):
                                    # (Line 5767) RandomNum = dwrand() % (3 + 1);
                                    RandomNum << (f_dwrand() % (3 + 1))
                                    # (Line 5768) }
                                    # (Line 5769) if(
                                EUDEndIf()
                                _t240 = EUDIf()
                                # (Line 5770) Deaths((6), (0), 16, (193))
                                # (Line 5771) ){
                                if _t240(Deaths((6), (0), 16, (193))):
                                    # (Line 5772) RandomNum = dwrand() % (1 + 1);
                                    RandomNum << (f_dwrand() % (1 + 1))
                                    # (Line 5773) }
                                    # (Line 5774) if(
                                EUDEndIf()
                                _t241 = EUDIf()
                                # (Line 5775) RandomNum != 0
                                # (Line 5776) ){
                                if _t241(RandomNum == 0, neg=True):
                                    # (Line 5777) RandomOption[i] = 0;
                                    _ARRW(RandomOption, i) << (0)
                                    # (Line 5778) i--;
                                    i.__isub__(1)
                                    # (Line 5779) break;
                                    EUDBreak()
                                    # (Line 5780) }
                                    # (Line 5781) }
                                EUDEndIf()
                                # (Line 5784) if(
                            EUDEndIf()
                            _t242 = EUDIf()
                            # (Line 5785) RandomOption[i] == 37
                            # (Line 5786) ){
                            if _t242(RandomOption[i] == 37):
                                # (Line 5787) if(
                                _t243 = EUDIf()
                                # (Line 5788) Deaths((6), (1), 15, (193))
                                # (Line 5789) ){
                                if _t243(Deaths((6), (1), 15, (193))):
                                    # (Line 5790) RandomNum = dwrand() % (3 + 1);
                                    RandomNum << (f_dwrand() % (3 + 1))
                                    # (Line 5791) }
                                    # (Line 5792) if(
                                EUDEndIf()
                                _t244 = EUDIf()
                                # (Line 5793) Deaths((6), (0), 16, (193))
                                # (Line 5794) ){
                                if _t244(Deaths((6), (0), 16, (193))):
                                    # (Line 5795) RandomNum = dwrand() % (1 + 1);
                                    RandomNum << (f_dwrand() % (1 + 1))
                                    # (Line 5796) }
                                    # (Line 5797) if(
                                EUDEndIf()
                                _t245 = EUDIf()
                                # (Line 5798) RandomNum != 0
                                # (Line 5799) ){
                                if _t245(RandomNum == 0, neg=True):
                                    # (Line 5800) RandomOption[i] = 0;
                                    _ARRW(RandomOption, i) << (0)
                                    # (Line 5801) i--;
                                    i.__isub__(1)
                                    # (Line 5802) break;
                                    EUDBreak()
                                    # (Line 5803) }
                                    # (Line 5804) }
                                EUDEndIf()
                                # (Line 5807) if(
                            EUDEndIf()
                            _t246 = EUDIf()
                            # (Line 5808) RandomOption[i] == 38
                            # (Line 5809) ){
                            if _t246(RandomOption[i] == 38):
                                # (Line 5810) RandomNum = dwrand() % (8 + 1);
                                RandomNum << (f_dwrand() % (8 + 1))
                                # (Line 5811) if(
                                _t247 = EUDIf()
                                # (Line 5812) RandomNum != 0
                                # (Line 5813) ){
                                if _t247(RandomNum == 0, neg=True):
                                    # (Line 5814) RandomOption[i] = 0;
                                    _ARRW(RandomOption, i) << (0)
                                    # (Line 5815) i--;
                                    i.__isub__(1)
                                    # (Line 5816) break;
                                    EUDBreak()
                                    # (Line 5817) }
                                    # (Line 5818) }
                                EUDEndIf()
                                # (Line 5821) if(
                            EUDEndIf()
                            _t248 = EUDIf()
                            # (Line 5822) RandomOption[i] == 39
                            # (Line 5823) ){
                            if _t248(RandomOption[i] == 39):
                                # (Line 5824) RandomNum = dwrand() % (8 + 1);
                                RandomNum << (f_dwrand() % (8 + 1))
                                # (Line 5825) if(
                                _t249 = EUDIf()
                                # (Line 5826) RandomNum != 0
                                # (Line 5827) ){
                                if _t249(RandomNum == 0, neg=True):
                                    # (Line 5828) RandomOption[i] = 0;
                                    _ARRW(RandomOption, i) << (0)
                                    # (Line 5829) i--;
                                    i.__isub__(1)
                                    # (Line 5830) break;
                                    EUDBreak()
                                    # (Line 5831) }
                                    # (Line 5832) }
                                EUDEndIf()
                                # (Line 5835) if(
                            EUDEndIf()
                            _t250 = EUDIf()
                            # (Line 5836) RandomOption[i] == 49
                            # (Line 5837) ){
                            if _t250(RandomOption[i] == 49):
                                # (Line 5838) if(
                                _t251 = EUDIf()
                                # (Line 5839) Deaths((6), (1), 15, (193))
                                # (Line 5840) ){
                                if _t251(Deaths((6), (1), 15, (193))):
                                    # (Line 5841) RandomNum = dwrand() % (3 + 1);
                                    RandomNum << (f_dwrand() % (3 + 1))
                                    # (Line 5842) }
                                    # (Line 5843) if(
                                EUDEndIf()
                                _t252 = EUDIf()
                                # (Line 5844) Deaths((6), (0), 16, (193))
                                # (Line 5845) ){
                                if _t252(Deaths((6), (0), 16, (193))):
                                    # (Line 5846) RandomNum = dwrand() % (1 + 1);
                                    RandomNum << (f_dwrand() % (1 + 1))
                                    # (Line 5847) }
                                    # (Line 5848) if(
                                EUDEndIf()
                                _t253 = EUDIf()
                                # (Line 5849) RandomNum != 0
                                # (Line 5850) ){
                                if _t253(RandomNum == 0, neg=True):
                                    # (Line 5851) RandomOption[i] = 0;
                                    _ARRW(RandomOption, i) << (0)
                                    # (Line 5852) i--;
                                    i.__isub__(1)
                                    # (Line 5853) break;
                                    EUDBreak()
                                    # (Line 5854) }
                                    # (Line 5855) }
                                EUDEndIf()
                                # (Line 5858) if(
                            EUDEndIf()
                            _t254 = EUDIf()
                            # (Line 5859) RandomOption[i] == 51
                            # (Line 5860) ){
                            if _t254(RandomOption[i] == 51):
                                # (Line 5861) RandomNum = dwrand() % (2 + 1);
                                RandomNum << (f_dwrand() % (2 + 1))
                                # (Line 5862) if(
                                _t255 = EUDIf()
                                # (Line 5863) RandomNum != 0
                                # (Line 5864) ){
                                if _t255(RandomNum == 0, neg=True):
                                    # (Line 5865) RandomOption[i] = 0;
                                    _ARRW(RandomOption, i) << (0)
                                    # (Line 5866) i--;
                                    i.__isub__(1)
                                    # (Line 5867) break;
                                    EUDBreak()
                                    # (Line 5868) }
                                    # (Line 5869) }
                                EUDEndIf()
                                # (Line 5872) if(
                            EUDEndIf()
                            _t256 = EUDIf()
                            # (Line 5873) RandomOption[i] == 56
                            # (Line 5874) ){
                            if _t256(RandomOption[i] == 56):
                                # (Line 5875) RandomNum = dwrand() % (11 + 1);
                                RandomNum << (f_dwrand() % (11 + 1))
                                # (Line 5876) if(
                                _t257 = EUDIf()
                                # (Line 5877) RandomNum != 0
                                # (Line 5878) ){
                                if _t257(RandomNum == 0, neg=True):
                                    # (Line 5879) RandomOption[i] = 0;
                                    _ARRW(RandomOption, i) << (0)
                                    # (Line 5880) i--;
                                    i.__isub__(1)
                                    # (Line 5881) break;
                                    EUDBreak()
                                    # (Line 5882) }
                                    # (Line 5883) }
                                EUDEndIf()
                                # (Line 5886) if(
                            EUDEndIf()
                            _t258 = EUDIf()
                            # (Line 5887) RandomOption[i] == 62
                            # (Line 5888) ){
                            if _t258(RandomOption[i] == 62):
                                # (Line 5889) if(
                                _t259 = EUDIf()
                                # (Line 5890) Deaths((6), (1), 6, (193))
                                # (Line 5891) ){
                                if _t259(Deaths((6), (1), 6, (193))):
                                    # (Line 5892) RandomOption[i] = 0;
                                    _ARRW(RandomOption, i) << (0)
                                    # (Line 5893) i--;
                                    i.__isub__(1)
                                    # (Line 5894) break;
                                    EUDBreak()
                                    # (Line 5895) }
                                    # (Line 5896) RandomNum = dwrand() % (50 * 100 / (91 + ProbPlus + dwread_epd(EPD(0x58A364 + 48 * 193 + 4 * 6))) + 1);
                                EUDEndIf()
                                RandomNum << (f_dwrand() % (50 * 100 // (91 + ProbPlus + f_dwread_epd(EPD(0x58A364 + 48 * 193 + 4 * 6))) + 1))
                                # (Line 5897) if(
                                _t260 = EUDIf()
                                # (Line 5898) RandomNum != 0
                                # (Line 5899) ){
                                if _t260(RandomNum == 0, neg=True):
                                    # (Line 5900) RandomOption[i] = 0;
                                    _ARRW(RandomOption, i) << (0)
                                    # (Line 5901) i--;
                                    i.__isub__(1)
                                    # (Line 5902) break;
                                    EUDBreak()
                                    # (Line 5903) }
                                    # (Line 5904) }
                                EUDEndIf()
                                # (Line 5907) if(
                            EUDEndIf()
                            _t261 = EUDIf()
                            # (Line 5908) RandomOption[i] == 63
                            # (Line 5909) ){
                            if _t261(RandomOption[i] == 63):
                                # (Line 5910) if(
                                _t262 = EUDIf()
                                # (Line 5911) Deaths((6), (1), 6, (193))
                                # (Line 5912) ){
                                if _t262(Deaths((6), (1), 6, (193))):
                                    # (Line 5913) RandomOption[i] = 0;
                                    _ARRW(RandomOption, i) << (0)
                                    # (Line 5914) i--;
                                    i.__isub__(1)
                                    # (Line 5915) break;
                                    EUDBreak()
                                    # (Line 5916) }
                                    # (Line 5917) RandomNum = dwrand() % (50 * 100 / (91 + ProbPlus + dwread_epd(EPD(0x58A364 + 48 * 193 + 4 * 6))) + 1);
                                EUDEndIf()
                                RandomNum << (f_dwrand() % (50 * 100 // (91 + ProbPlus + f_dwread_epd(EPD(0x58A364 + 48 * 193 + 4 * 6))) + 1))
                                # (Line 5918) if(
                                _t263 = EUDIf()
                                # (Line 5919) RandomNum != 0
                                # (Line 5920) ){
                                if _t263(RandomNum == 0, neg=True):
                                    # (Line 5921) RandomOption[i] = 0;
                                    _ARRW(RandomOption, i) << (0)
                                    # (Line 5922) i--;
                                    i.__isub__(1)
                                    # (Line 5923) break;
                                    EUDBreak()
                                    # (Line 5924) }
                                    # (Line 5925) }
                                EUDEndIf()
                                # (Line 5928) if(
                            EUDEndIf()
                            _t264 = EUDIf()
                            # (Line 5929) RandomOption[i] == 65
                            # (Line 5930) ){
                            if _t264(RandomOption[i] == 65):
                                # (Line 5931) if(
                                _t265 = EUDIf()
                                # (Line 5932) Deaths((6), (1), 6, (193))
                                # (Line 5933) ){
                                if _t265(Deaths((6), (1), 6, (193))):
                                    # (Line 5934) RandomOption[i] = 0;
                                    _ARRW(RandomOption, i) << (0)
                                    # (Line 5935) i--;
                                    i.__isub__(1)
                                    # (Line 5936) break;
                                    EUDBreak()
                                    # (Line 5937) }
                                    # (Line 5938) RandomNum = dwrand() % (100 * 100 / (91 + ProbPlus + dwread_epd(EPD(0x58A364 + 48 * 193 + 4 * 6))) + 1);
                                EUDEndIf()
                                RandomNum << (f_dwrand() % (100 * 100 // (91 + ProbPlus + f_dwread_epd(EPD(0x58A364 + 48 * 193 + 4 * 6))) + 1))
                                # (Line 5939) if(
                                _t266 = EUDIf()
                                # (Line 5940) RandomNum != 0
                                # (Line 5941) ){
                                if _t266(RandomNum == 0, neg=True):
                                    # (Line 5942) RandomOption[i] = 0;
                                    _ARRW(RandomOption, i) << (0)
                                    # (Line 5943) i--;
                                    i.__isub__(1)
                                    # (Line 5944) break;
                                    EUDBreak()
                                    # (Line 5945) }
                                    # (Line 5946) }
                                EUDEndIf()
                                # (Line 5949) if(
                            EUDEndIf()
                            _t267 = EUDIf()
                            # (Line 5950) RandomOption[i] == 66
                            # (Line 5951) ){
                            if _t267(RandomOption[i] == 66):
                                # (Line 5952) if(
                                _t268 = EUDIf()
                                # (Line 5953) Deaths((6), (1), 6, (193))
                                # (Line 5954) ){
                                if _t268(Deaths((6), (1), 6, (193))):
                                    # (Line 5955) RandomOption[i] = 0;
                                    _ARRW(RandomOption, i) << (0)
                                    # (Line 5956) i--;
                                    i.__isub__(1)
                                    # (Line 5957) break;
                                    EUDBreak()
                                    # (Line 5958) }
                                    # (Line 5959) RandomNum = dwrand() % (100 * 100 / (91 + ProbPlus + dwread_epd(EPD(0x58A364 + 48 * 193 + 4 * 6))) + 1);
                                EUDEndIf()
                                RandomNum << (f_dwrand() % (100 * 100 // (91 + ProbPlus + f_dwread_epd(EPD(0x58A364 + 48 * 193 + 4 * 6))) + 1))
                                # (Line 5960) if(
                                _t269 = EUDIf()
                                # (Line 5961) RandomNum != 0
                                # (Line 5962) ){
                                if _t269(RandomNum == 0, neg=True):
                                    # (Line 5963) RandomOption[i] = 0;
                                    _ARRW(RandomOption, i) << (0)
                                    # (Line 5964) i--;
                                    i.__isub__(1)
                                    # (Line 5965) break;
                                    EUDBreak()
                                    # (Line 5966) }
                                    # (Line 5967) }
                                EUDEndIf()
                                # (Line 5970) if(
                            EUDEndIf()
                            _t270 = EUDIf()
                            # (Line 5971) RandomOption[i] == 69
                            # (Line 5972) ){
                            if _t270(RandomOption[i] == 69):
                                # (Line 5973) if(
                                _t271 = EUDIf()
                                # (Line 5974) Deaths((6), (1), 15, (193))
                                # (Line 5975) ){
                                if _t271(Deaths((6), (1), 15, (193))):
                                    # (Line 5976) RandomNum = dwrand() % (3 + 1);
                                    RandomNum << (f_dwrand() % (3 + 1))
                                    # (Line 5977) }
                                    # (Line 5978) if(
                                EUDEndIf()
                                _t272 = EUDIf()
                                # (Line 5979) Deaths((6), (0), 16, (193))
                                # (Line 5980) ){
                                if _t272(Deaths((6), (0), 16, (193))):
                                    # (Line 5981) RandomNum = dwrand() % (1 + 1);
                                    RandomNum << (f_dwrand() % (1 + 1))
                                    # (Line 5982) }
                                    # (Line 5983) if(
                                EUDEndIf()
                                _t273 = EUDIf()
                                # (Line 5984) RandomNum != 0
                                # (Line 5985) ){
                                if _t273(RandomNum == 0, neg=True):
                                    # (Line 5986) RandomOption[i] = 0;
                                    _ARRW(RandomOption, i) << (0)
                                    # (Line 5987) i--;
                                    i.__isub__(1)
                                    # (Line 5988) break;
                                    EUDBreak()
                                    # (Line 5989) }
                                    # (Line 5990) }
                                EUDEndIf()
                                # (Line 5995) if(
                            EUDEndIf()
                            _t274 = EUDIf()
                            # (Line 5996) Deaths((6), (0), 7, (193))
                            # (Line 5997) ){
                            if _t274(Deaths((6), (0), 7, (193))):
                                # (Line 5998) if(
                                _t275 = EUDIf()
                                # (Line 5999) RandomOption[i] == 1 ||
                                # (Line 6000) RandomOption[i] == 2 ||
                                # (Line 6001) RandomOption[i] == 59
                                # (Line 6002) ){
                                if _t275(EUDSCOr()(RandomOption[i] == 1)(RandomOption[i] == 2)(RandomOption[i] == 59)()):
                                    # (Line 6003) RandomNum = dwrand() % (1 + 1);
                                    RandomNum << (f_dwrand() % (1 + 1))
                                    # (Line 6004) if(
                                    _t276 = EUDIf()
                                    # (Line 6005) RandomNum != 0
                                    # (Line 6006) ){
                                    if _t276(RandomNum == 0, neg=True):
                                        # (Line 6007) RandomOption[i] = 0;
                                        _ARRW(RandomOption, i) << (0)
                                        # (Line 6008) i--;
                                        i.__isub__(1)
                                        # (Line 6009) break;
                                        EUDBreak()
                                        # (Line 6010) }
                                        # (Line 6011) }
                                    EUDEndIf()
                                    # (Line 6012) }
                                EUDEndIf()
                                # (Line 6015) if(
                            EUDEndIf()
                            _t277 = EUDIf()
                            # (Line 6016) Deaths((6), (0), 8, (193))
                            # (Line 6017) ){
                            if _t277(Deaths((6), (0), 8, (193))):
                                # (Line 6018) if(
                                _t278 = EUDIf()
                                # (Line 6019) RandomOption[i] == 1 ||
                                # (Line 6020) RandomOption[i] == 2 ||
                                # (Line 6021) RandomOption[i] == 3 ||
                                # (Line 6022) RandomOption[i] == 4 ||
                                # (Line 6023) RandomOption[i] == 59
                                # (Line 6024) ){
                                if _t278(EUDSCOr()(RandomOption[i] == 1)(RandomOption[i] == 2)(RandomOption[i] == 3)(RandomOption[i] == 4)(RandomOption[i] == 59)()):
                                    # (Line 6025) RandomNum = dwrand() % (1 + 1);
                                    RandomNum << (f_dwrand() % (1 + 1))
                                    # (Line 6026) if(
                                    _t279 = EUDIf()
                                    # (Line 6027) RandomNum != 0
                                    # (Line 6028) ){
                                    if _t279(RandomNum == 0, neg=True):
                                        # (Line 6029) RandomOption[i] = 0;
                                        _ARRW(RandomOption, i) << (0)
                                        # (Line 6030) i--;
                                        i.__isub__(1)
                                        # (Line 6031) break;
                                        EUDBreak()
                                        # (Line 6032) }
                                        # (Line 6033) }
                                    EUDEndIf()
                                    # (Line 6034) }
                                EUDEndIf()
                                # (Line 6037) if(
                            EUDEndIf()
                            _t280 = EUDIf()
                            # (Line 6038) Deaths((6), (0), 9, (193))
                            # (Line 6039) ){
                            if _t280(Deaths((6), (0), 9, (193))):
                                # (Line 6040) if(
                                _t281 = EUDIf()
                                # (Line 6041) RandomOption[i] == 1 ||
                                # (Line 6042) RandomOption[i] == 2 ||
                                # (Line 6043) RandomOption[i] == 3 ||
                                # (Line 6044) RandomOption[i] == 4 ||
                                # (Line 6045) RandomOption[i] == 6 ||
                                # (Line 6046) RandomOption[i] == 10 ||
                                # (Line 6047) RandomOption[i] == 58 ||
                                # (Line 6048) RandomOption[i] == 59 ||
                                # (Line 6049) RandomOption[i] == 70
                                # (Line 6050) ){
                                if _t281(EUDSCOr()(RandomOption[i] == 1)(RandomOption[i] == 2)(RandomOption[i] == 3)(RandomOption[i] == 4)(RandomOption[i] == 6)(RandomOption[i] == 10)(RandomOption[i] == 58)(RandomOption[i] == 59)(RandomOption[i] == 70)()):
                                    # (Line 6051) RandomNum = dwrand() % (1 + 1);
                                    RandomNum << (f_dwrand() % (1 + 1))
                                    # (Line 6052) if(
                                    _t282 = EUDIf()
                                    # (Line 6053) RandomNum != 0
                                    # (Line 6054) ){
                                    if _t282(RandomNum == 0, neg=True):
                                        # (Line 6055) RandomOption[i] = 0;
                                        _ARRW(RandomOption, i) << (0)
                                        # (Line 6056) i--;
                                        i.__isub__(1)
                                        # (Line 6057) break;
                                        EUDBreak()
                                        # (Line 6058) }
                                        # (Line 6059) }
                                    EUDEndIf()
                                    # (Line 6060) }
                                EUDEndIf()
                                # (Line 6063) if(
                            EUDEndIf()
                            _t283 = EUDIf()
                            # (Line 6064) Deaths((6), (0), 10, (193))
                            # (Line 6065) ){
                            if _t283(Deaths((6), (0), 10, (193))):
                                # (Line 6066) if(
                                _t284 = EUDIf()
                                # (Line 6067) RandomOption[i] == 1 ||
                                # (Line 6068) RandomOption[i] == 2 ||
                                # (Line 6069) RandomOption[i] == 3 ||
                                # (Line 6070) RandomOption[i] == 4 ||
                                # (Line 6071) RandomOption[i] == 5 ||
                                # (Line 6072) RandomOption[i] == 6 ||
                                # (Line 6073) RandomOption[i] == 7 ||
                                # (Line 6074) RandomOption[i] == 8 ||
                                # (Line 6075) RandomOption[i] == 10 ||
                                # (Line 6076) RandomOption[i] == 19 ||
                                # (Line 6077) RandomOption[i] == 25 ||
                                # (Line 6078) RandomOption[i] == 58 ||
                                # (Line 6079) RandomOption[i] == 59 ||
                                # (Line 6080) RandomOption[i] == 70
                                # (Line 6081) ){
                                if _t284(EUDSCOr()(RandomOption[i] == 1)(RandomOption[i] == 2)(RandomOption[i] == 3)(RandomOption[i] == 4)(RandomOption[i] == 5)(RandomOption[i] == 6)(RandomOption[i] == 7)(RandomOption[i] == 8)(RandomOption[i] == 10)(RandomOption[i] == 19)(RandomOption[i] == 25)(RandomOption[i] == 58)(RandomOption[i] == 59)(RandomOption[i] == 70)()):
                                    # (Line 6082) RandomNum = dwrand() % (1 + 1);
                                    RandomNum << (f_dwrand() % (1 + 1))
                                    # (Line 6083) if(
                                    _t285 = EUDIf()
                                    # (Line 6084) RandomNum != 0
                                    # (Line 6085) ){
                                    if _t285(RandomNum == 0, neg=True):
                                        # (Line 6086) RandomOption[i] = 0;
                                        _ARRW(RandomOption, i) << (0)
                                        # (Line 6087) i--;
                                        i.__isub__(1)
                                        # (Line 6088) break;
                                        EUDBreak()
                                        # (Line 6089) }
                                        # (Line 6090) }
                                    EUDEndIf()
                                    # (Line 6091) }
                                EUDEndIf()
                                # (Line 6094) if(
                            EUDEndIf()
                            _t286 = EUDIf()
                            # (Line 6095) Deaths((6), (0), 11, (193))
                            # (Line 6096) ){
                            if _t286(Deaths((6), (0), 11, (193))):
                                # (Line 6097) if(
                                _t287 = EUDIf()
                                # (Line 6098) RandomOption[i] <= 10 ||
                                # (Line 6099) RandomOption[i] == 19 ||
                                # (Line 6100) RandomOption[i] == 22 ||
                                # (Line 6101) RandomOption[i] == 25 ||
                                # (Line 6102) RandomOption[i] == 26 ||
                                # (Line 6103) RandomOption[i] == 58 ||
                                # (Line 6104) RandomOption[i] == 59 ||
                                # (Line 6105) RandomOption[i] == 70 ||
                                # (Line 6106) RandomOption[i] == 79
                                # (Line 6107) ){
                                if _t287(EUDSCOr()(RandomOption[i] <= 10)(RandomOption[i] == 19)(RandomOption[i] == 22)(RandomOption[i] == 25)(RandomOption[i] == 26)(RandomOption[i] == 58)(RandomOption[i] == 59)(RandomOption[i] == 70)(RandomOption[i] == 79)()):
                                    # (Line 6108) RandomNum = dwrand() % (1 + 1);
                                    RandomNum << (f_dwrand() % (1 + 1))
                                    # (Line 6109) if(
                                    _t288 = EUDIf()
                                    # (Line 6110) RandomNum != 0
                                    # (Line 6111) ){
                                    if _t288(RandomNum == 0, neg=True):
                                        # (Line 6112) RandomOption[i] = 0;
                                        _ARRW(RandomOption, i) << (0)
                                        # (Line 6113) i--;
                                        i.__isub__(1)
                                        # (Line 6114) break;
                                        EUDBreak()
                                        # (Line 6115) }
                                        # (Line 6116) }
                                    EUDEndIf()
                                    # (Line 6117) }
                                EUDEndIf()
                                # (Line 6120) if(
                            EUDEndIf()
                            _t289 = EUDIf()
                            # (Line 6121) Deaths((6), (0), 12, (193))
                            # (Line 6122) ){
                            if _t289(Deaths((6), (0), 12, (193))):
                                # (Line 6123) if(
                                _t290 = EUDIf()
                                # (Line 6124) RandomOption[i] <= 10 ||
                                # (Line 6125) RandomOption[i] == 19 ||
                                # (Line 6126) RandomOption[i] == 22 ||
                                # (Line 6127) RandomOption[i] == 25 ||
                                # (Line 6128) RandomOption[i] == 26 ||
                                # (Line 6129) RandomOption[i] == 33 ||
                                # (Line 6130) RandomOption[i] == 45 ||
                                # (Line 6131) RandomOption[i] == 58 ||
                                # (Line 6132) RandomOption[i] == 59 ||
                                # (Line 6133) RandomOption[i] == 70 ||
                                # (Line 6134) RandomOption[i] == 79
                                # (Line 6135) ){
                                if _t290(EUDSCOr()(RandomOption[i] <= 10)(RandomOption[i] == 19)(RandomOption[i] == 22)(RandomOption[i] == 25)(RandomOption[i] == 26)(RandomOption[i] == 33)(RandomOption[i] == 45)(RandomOption[i] == 58)(RandomOption[i] == 59)(RandomOption[i] == 70)(RandomOption[i] == 79)()):
                                    # (Line 6136) RandomNum = dwrand() % (1 + 1);
                                    RandomNum << (f_dwrand() % (1 + 1))
                                    # (Line 6137) if(
                                    _t291 = EUDIf()
                                    # (Line 6138) RandomNum != 0
                                    # (Line 6139) ){
                                    if _t291(RandomNum == 0, neg=True):
                                        # (Line 6140) RandomOption[i] = 0;
                                        _ARRW(RandomOption, i) << (0)
                                        # (Line 6141) i--;
                                        i.__isub__(1)
                                        # (Line 6142) break;
                                        EUDBreak()
                                        # (Line 6143) }
                                        # (Line 6144) }
                                    EUDEndIf()
                                    # (Line 6145) }
                                EUDEndIf()
                                # (Line 6148) if(
                            EUDEndIf()
                            _t292 = EUDIf()
                            # (Line 6149) Deaths((6), (0), 13, (193))
                            # (Line 6150) ){
                            if _t292(Deaths((6), (0), 13, (193))):
                                # (Line 6151) if(
                                _t293 = EUDIf()
                                # (Line 6152) RandomOption[i] <= 10 ||
                                # (Line 6153) RandomOption[i] == 19 ||
                                # (Line 6154) RandomOption[i] == 22 ||
                                # (Line 6155) RandomOption[i] == 25 ||
                                # (Line 6156) RandomOption[i] == 26 ||
                                # (Line 6157) RandomOption[i] == 30 ||
                                # (Line 6158) RandomOption[i] == 33 ||
                                # (Line 6159) RandomOption[i] == 45 ||
                                # (Line 6160) RandomOption[i] == 50 ||
                                # (Line 6161) RandomOption[i] == 58 ||
                                # (Line 6162) RandomOption[i] == 59 ||
                                # (Line 6163) RandomOption[i] == 70 ||
                                # (Line 6164) RandomOption[i] == 79
                                # (Line 6165) ){
                                if _t293(EUDSCOr()(RandomOption[i] <= 10)(RandomOption[i] == 19)(RandomOption[i] == 22)(RandomOption[i] == 25)(RandomOption[i] == 26)(RandomOption[i] == 30)(RandomOption[i] == 33)(RandomOption[i] == 45)(RandomOption[i] == 50)(RandomOption[i] == 58)(RandomOption[i] == 59)(RandomOption[i] == 70)(RandomOption[i] == 79)()):
                                    # (Line 6166) RandomNum = dwrand() % (1 + 1);
                                    RandomNum << (f_dwrand() % (1 + 1))
                                    # (Line 6167) if(
                                    _t294 = EUDIf()
                                    # (Line 6168) RandomNum != 0
                                    # (Line 6169) ){
                                    if _t294(RandomNum == 0, neg=True):
                                        # (Line 6170) RandomOption[i] = 0;
                                        _ARRW(RandomOption, i) << (0)
                                        # (Line 6171) i--;
                                        i.__isub__(1)
                                        # (Line 6172) break;
                                        EUDBreak()
                                        # (Line 6173) }
                                        # (Line 6174) }
                                    EUDEndIf()
                                    # (Line 6175) }
                                EUDEndIf()
                                # (Line 6179) if(
                            EUDEndIf()
                            _t295 = EUDIf()
                            # (Line 6180) Deaths((6), (1), 13, (193))
                            # (Line 6181) ){
                            if _t295(Deaths((6), (1), 13, (193))):
                                # (Line 6182) if(
                                _t296 = EUDIf()
                                # (Line 6183) RandomOption[i] == 73 ||
                                # (Line 6184) RandomOption[i] == 74 ||
                                # (Line 6185) RandomOption[i] == 75 ||
                                # (Line 6186) RandomOption[i] == 77
                                # (Line 6187) ){
                                if _t296(EUDSCOr()(RandomOption[i] == 73)(RandomOption[i] == 74)(RandomOption[i] == 75)(RandomOption[i] == 77)()):
                                    # (Line 6188) RandomOption[i] = 0;
                                    _ARRW(RandomOption, i) << (0)
                                    # (Line 6189) i--;
                                    i.__isub__(1)
                                    # (Line 6190) break;
                                    EUDBreak()
                                    # (Line 6191) }
                                    # (Line 6192) }
                                EUDEndIf()
                                # (Line 6195) if(
                            EUDEndIf()
                            _t297 = EUDIf()
                            # (Line 6196) RandomOption[i] == 32 ||
                            # (Line 6197) RandomOption[i] == 36 ||
                            # (Line 6198) RandomOption[i] == 42 ||
                            # (Line 6199) RandomOption[i] == 43 ||
                            # (Line 6200) RandomOption[i] == 46 ||
                            # (Line 6201) RandomOption[i] == 47 ||
                            # (Line 6202) RandomOption[i] == 48 ||
                            # (Line 6203) RandomOption[i] == 57 ||
                            # (Line 6204) RandomOption[i] == 60 ||
                            # (Line 6205) RandomOption[i] == 64 ||
                            # (Line 6206) RandomOption[i] == 67 ||
                            # (Line 6207) RandomOption[i] == 68 ||
                            # (Line 6208) RandomOption[i] == 71 ||
                            # (Line 6209) RandomOption[i] == 72 ||
                            # (Line 6210) RandomOption[i] == 73 ||
                            # (Line 6211) RandomOption[i] == 74 ||
                            # (Line 6212) RandomOption[i] == 75 ||
                            # (Line 6213) RandomOption[i] == 77
                            # (Line 6214) ){
                            if _t297(EUDSCOr()(RandomOption[i] == 32)(RandomOption[i] == 36)(RandomOption[i] == 42)(RandomOption[i] == 43)(RandomOption[i] == 46)(RandomOption[i] == 47)(RandomOption[i] == 48)(RandomOption[i] == 57)(RandomOption[i] == 60)(RandomOption[i] == 64)(RandomOption[i] == 67)(RandomOption[i] == 68)(RandomOption[i] == 71)(RandomOption[i] == 72)(RandomOption[i] == 73)(RandomOption[i] == 74)(RandomOption[i] == 75)(RandomOption[i] == 77)()):
                                # (Line 6215) if(
                                _t298 = EUDIf()
                                # (Line 6216) GraphicChange == 0
                                # (Line 6217) ){
                                if _t298(GraphicChange == 0):
                                    # (Line 6218) GraphicChange = 1;
                                    GraphicChange << (1)
                                    # (Line 6219) }
                                    # (Line 6220) else{
                                if EUDElse()():
                                    # (Line 6221) RandomOption[i] = 0;
                                    _ARRW(RandomOption, i) << (0)
                                    # (Line 6222) i--;
                                    i.__isub__(1)
                                    # (Line 6223) break;
                                    EUDBreak()
                                    # (Line 6224) }
                                    # (Line 6225) }
                                EUDEndIf()
                                # (Line 6227) EUDPlayerLoop()();
                            EUDEndIf()
                            EUDPlayerLoop()()
                            # (Line 6228) if (getcurpl() == 0 || getcurpl() == 1 || getcurpl() == 2 || getcurpl() == 3 || getcurpl() == 4 || getcurpl() == 5) {
                            if EUDIf()(EUDSCOr()(f_getcurpl() == 0)(f_getcurpl() == 1)(f_getcurpl() == 2)(f_getcurpl() == 3)(f_getcurpl() == 4)(f_getcurpl() == 5)()):
                                # (Line 6229) Roulette_Sound[getcurpl()] = RandomOption[i];
                                _ARRW(Roulette_Sound, f_getcurpl()) << (RandomOption[i])
                                # (Line 6230) }
                                # (Line 6231) EUDEndPlayerLoop();
                            EUDEndIf()
                            EUDEndPlayerLoop()
                            # (Line 6232) i = 9999;
                            i << (9999)
                            # (Line 6233) break;
                            EUDBreak()
                            # (Line 6234) }
                            # (Line 6235) }
                        EUDEndIf()
                        # (Line 6236) }
                        EUDSetContinuePoint()
                        _t219()
                    EUDEndWhile()
                    # (Line 6237) }
                EUDEndIf()
                # (Line 6238) }
                EUDSetContinuePoint()
                _t215()
            EUDEndWhile()
            # (Line 6240) }
        EUDEndIf()
        # (Line 6241) if(
    EUDEndIf()
    _t300 = EUDIf()
    # (Line 6242) Switch((16), (2))
    # (Line 6243) ){
    if _t300(Switch((16), (2))):
        # (Line 6244) Roulette_Timer += 1;
        Roulette_Timer.__iadd__(1)
        # (Line 6245) EUDPlayerLoop()();
        EUDPlayerLoop()()
        # (Line 6246) if (getcurpl() == 0 || getcurpl() == 1 || getcurpl() == 2 || getcurpl() == 3 || getcurpl() == 4 || getcurpl() == 5) {
        if EUDIf()(EUDSCOr()(f_getcurpl() == 0)(f_getcurpl() == 1)(f_getcurpl() == 2)(f_getcurpl() == 3)(f_getcurpl() == 4)(f_getcurpl() == 5)()):
            # (Line 6247) CenterView((4));
            # (Line 6248) }
            DoActions(CenterView((4)))
            # (Line 6249) EUDEndPlayerLoop();
        EUDEndIf()
        EUDEndPlayerLoop()
        # (Line 6251) if(
        _t302 = EUDIf()
        # (Line 6252) Roulette_Timer % 2 == 1
        # (Line 6253) ){
        if _t302(Roulette_Timer % 2 == 1):
            # (Line 6254) EUDPlayerLoop()();
            EUDPlayerLoop()()
            # (Line 6255) if (getcurpl() == 0 || getcurpl() == 1 || getcurpl() == 2 || getcurpl() == 3 || getcurpl() == 4 || getcurpl() == 5) {
            if EUDIf()(EUDSCOr()(f_getcurpl() == 0)(f_getcurpl() == 1)(f_getcurpl() == 2)(f_getcurpl() == 3)(f_getcurpl() == 4)(f_getcurpl() == 5)()):
                # (Line 6256) txtPtr = dwread_epd_safe(EPD(0x640B58));
                txtPtr << (f_dwread_epd_safe(EPD(0x640B58)))
                # (Line 6257) DisplayText("\x13\x07룰렛\x04을 돌립니다.", (0));
                # (Line 6258) OptionDescribe();
                DoActions(DisplayText("\x13\x07룰렛\x04을 돌립니다.", (0)))
                OptionDescribe()
                # (Line 6259) SetMemory(0x640B58, SetTo, txtPtr);
                # (Line 6260) }
                DoActions(SetMemory(0x640B58, SetTo, txtPtr))
                # (Line 6261) EUDEndPlayerLoop();
            EUDEndIf()
            EUDEndPlayerLoop()
            # (Line 6262) }
            # (Line 6264) }
        EUDEndIf()
        # (Line 6266) if(
    EUDEndIf()
    _t304 = EUDIf()
    # (Line 6267) Switch((1), (2))
    # (Line 6268) ){
    if _t304(Switch((1), (2))):
        # (Line 6270) if(
        _t305 = EUDIf()
        # (Line 6271) Bring((18), (10), 0, (230), (24)) &&
        # (Line 6272) Bring((6), (0), 1, (230), (64)) &&
        # (Line 6273) TrainingMode == 0
        # (Line 6274) ){
        if _t305(EUDSCAnd()(Bring((18), (10), 0, (230), (24)))(Bring((6), (0), 1, (230), (64)))(TrainingMode == 0)()):
            # (Line 6275) Defeated = 1;
            Defeated << (1)
            # (Line 6276) EUDPlayerLoop()();
            EUDPlayerLoop()()
            # (Line 6277) if (getcurpl() == 0 || getcurpl() == 1 || getcurpl() == 2 || getcurpl() == 3 || getcurpl() == 4 || getcurpl() == 5) {
            if EUDIf()(EUDSCOr()(f_getcurpl() == 0)(f_getcurpl() == 1)(f_getcurpl() == 2)(f_getcurpl() == 3)(f_getcurpl() == 4)(f_getcurpl() == 5)()):
                # (Line 6278) DisplayText("\x13\x08패배\x04하였습니다.", (0));
                # (Line 6279) Defeat();
                DoActions(DisplayText("\x13\x08패배\x04하였습니다.", (0)))
                # (Line 6280) }
                DoActions(Defeat())
                # (Line 6281) EUDEndPlayerLoop();
            EUDEndIf()
            EUDEndPlayerLoop()
            # (Line 6282) }
            # (Line 6285) if(
        EUDEndIf()
        _t307 = EUDIf()
        # (Line 6286) Defeated == 0
        # (Line 6287) ){
        if _t307(Defeated == 0):
            # (Line 6288) if(
            _t308 = EUDIf()
            # (Line 6289) Bring((6), (10), 0, (230), (64)) &&
            # (Line 6290) Bring((18), (10), 0, (230), (24))
            # (Line 6291) ){
            if _t308(EUDSCAnd()(Bring((6), (10), 0, (230), (64)))(Bring((18), (10), 0, (230), (24)))()):
                # (Line 6292) RemoveUnitAt(255, (229), (24), (6));
                # (Line 6293) SetBossStats();
                DoActions(RemoveUnitAt(255, (229), (24), (6)))
                SetBossStats()
                # (Line 6294) Unit = epdread_epd(EPD(0x628438));
                Unit << (f_epdread_epd(EPD(0x628438)))
                # (Line 6295) EnemyCreateOne(12,1);
                EnemyCreateOne(12, 1)
                # (Line 6296) VultureSkinCreate();
                VultureSkinCreate()
                # (Line 6297) Roulette_Timer = 0;
                Roulette_Timer << (0)
                # (Line 6299) if(
                _t309 = EUDIf()
                # (Line 6300) 형님 == 1
                # (Line 6301) ){
                if _t309(형님 == 1):
                    # (Line 6302) EUDPlayerLoop()();
                    EUDPlayerLoop()()
                    # (Line 6303) if (getcurpl() == 0 || getcurpl() == 1 || getcurpl() == 2 || getcurpl() == 3 || getcurpl() == 4 || getcurpl() == 5) {
                    if EUDIf()(EUDSCOr()(f_getcurpl() == 0)(f_getcurpl() == 1)(f_getcurpl() == 2)(f_getcurpl() == 3)(f_getcurpl() == 4)(f_getcurpl() == 5)()):
                        # (Line 6304) PlayWAV("staredit\\wav\\sonofbitch.ogg");
                        # (Line 6305) }
                        DoActions(PlayWAV("staredit\\wav\\sonofbitch.ogg"))
                        # (Line 6306) EUDEndPlayerLoop();
                    EUDEndIf()
                    EUDEndPlayerLoop()
                    # (Line 6307) }
                    # (Line 6310) StageDisplay = dwread_epd(EPD(0x58A364 + 48 * 193 + 4 * 6)) + 1;
                EUDEndIf()
                StageDisplay << (f_dwread_epd(EPD(0x58A364 + 48 * 193 + 4 * 6)) + 1)
                # (Line 6311) tct.setTbl((1346), 8, 3, "\x0D\x0D\x0D");
                tct.f_setTbl((1346), 8, 3, "\x0D\x0D\x0D")
                # (Line 6312) tct.setTbl((1346), 8, 3, StageDisplay);
                tct.f_setTbl((1346), 8, 3, StageDisplay)
                # (Line 6313) Stat_Health = dwread(0x65FD00 + 9808 + 12 * 4);
                Stat_Health << (f_dwread(0x65FD00 + 9808 + 12 * 4))
                # (Line 6314) Stat_Health /= 256;
                Stat_Health.__ifloordiv__(256)
                # (Line 6315) Stat_Armor = bread(0x65FD00 + 456 + 12 * 1);
                Stat_Armor << (f_bread(0x65FD00 + 456 + 12 * 1))
                # (Line 6316) Stat_Damage = wread(0x6564E0 + 2512 + 19 * 2);
                Stat_Damage << (f_wread(0x6564E0 + 2512 + 19 * 2))
                # (Line 6317) Stat_Speed = dwread(0x6C9858 + 1696 + 70 * 4);
                Stat_Speed << (f_dwread(0x6C9858 + 1696 + 70 * 4))
                # (Line 6318) Stat_Speed = Stat_Speed  * 100 / 325;
                Stat_Speed << (Stat_Speed * 100 // 325)
                # (Line 6319) Stat_RangeL = dwread(0x6564E0 + 3984 + 19 * 4);
                Stat_RangeL << (f_dwread(0x6564E0 + 3984 + 19 * 4))
                # (Line 6320) Stat_RangeR = dwread(0x6564E0 + 3984 + 19 * 4);
                Stat_RangeR << (f_dwread(0x6564E0 + 3984 + 19 * 4))
                # (Line 6321) Stat_RangeL = Stat_RangeL * 10000 / 32 / 10000;
                Stat_RangeL << (Stat_RangeL * 10000 // 32 // 10000)
                # (Line 6322) if(
                _t311 = EUDIf()
                # (Line 6323) dwread(0x6564E0 + 3984 + 19 * 4) >= 129 &&
                # (Line 6324) dwread(0x6564E0 + 3984 + 19 * 4) <= 131
                # (Line 6325) ){
                if _t311(EUDSCAnd()(f_dwread(0x6564E0 + 3984 + 19 * 4) >= 129)(f_dwread(0x6564E0 + 3984 + 19 * 4) <= 131)()):
                    # (Line 6326) Stat_RangeR = (Stat_RangeR * 10000 / 32) % 1000;
                    Stat_RangeR << ((Stat_RangeR * 10000 // 32) % 1000)
                    # (Line 6327) }
                    # (Line 6328) else{
                if EUDElse()():
                    # (Line 6329) Stat_RangeR = (Stat_RangeR * 10000 / 32) % 10000;
                    Stat_RangeR << ((Stat_RangeR * 10000 // 32) % 10000)
                    # (Line 6330) }
                    # (Line 6331) Stat_Shield = ShieldTotal;
                EUDEndIf()
                Stat_Shield << (ShieldTotal)
                # (Line 6332) Stat_Shield /= 256;
                Stat_Shield.__ifloordiv__(256)
                # (Line 6333) EUDPlayerLoop()();
                EUDPlayerLoop()()
                # (Line 6334) if (getcurpl() == 0 || getcurpl() == 1 || getcurpl() == 2 || getcurpl() == 3 || getcurpl() == 4 || getcurpl() == 5) {
                if EUDIf()(EUDSCOr()(f_getcurpl() == 0)(f_getcurpl() == 1)(f_getcurpl() == 2)(f_getcurpl() == 3)(f_getcurpl() == 4)(f_getcurpl() == 5)()):
                    # (Line 6335) if(
                    _t313 = EUDIf()
                    # (Line 6336) dwread(0x6564E0 + 3984 + 19 * 4) >= 129 &&
                    # (Line 6337) dwread(0x6564E0 + 3984 + 19 * 4) <= 131
                    # (Line 6338) ){
                    if _t313(EUDSCAnd()(f_dwread(0x6564E0 + 3984 + 19 * 4) >= 129)(f_dwread(0x6564E0 + 3984 + 19 * 4) <= 131)()):
                        # (Line 6339) tct.print("\n\n\x13\x08스\x04테이지 \x08", StageDisplay, "\n\n\x13\x04 체력/쉴드 : \x07", Stat_Health, "\x04/\x1F", Stat_Shield, "\n\x13\x04 데미지 : \x07", Stat_Damage, "\n\x13\x04 사거리 : \x07", Stat_RangeL, ".0", Stat_RangeR, "\n\x13\x04 이동속도 : \x07", Stat_Speed, "\x04%\n\x13\x04 방어력 : \x07", Stat_Armor, "\n");
                        tct.f_print("\n\n\x13\x08스\x04테이지 \x08", StageDisplay, "\n\n\x13\x04 체력/쉴드 : \x07", Stat_Health, "\x04/\x1F", Stat_Shield, "\n\x13\x04 데미지 : \x07", Stat_Damage, "\n\x13\x04 사거리 : \x07", Stat_RangeL, ".0", Stat_RangeR, "\n\x13\x04 이동속도 : \x07", Stat_Speed, "\x04%\n\x13\x04 방어력 : \x07", Stat_Armor, "\n")
                        # (Line 6340) }
                        # (Line 6341) else{
                    if EUDElse()():
                        # (Line 6342) tct.print("\n\n\x13\x08스\x04테이지 \x08", StageDisplay, "\n\n\x13\x04 체력/쉴드 : \x07", Stat_Health, "\x04/\x1F", Stat_Shield, "\n\x13\x04 데미지 : \x07", Stat_Damage, "\n\x13\x04 사거리 : \x07", Stat_RangeL, ".", Stat_RangeR, "\n\x13\x04 이동속도 : \x07", Stat_Speed, "\x04%\n\x13\x04 방어력 : \x07", Stat_Armor, "\n");
                        tct.f_print("\n\n\x13\x08스\x04테이지 \x08", StageDisplay, "\n\n\x13\x04 체력/쉴드 : \x07", Stat_Health, "\x04/\x1F", Stat_Shield, "\n\x13\x04 데미지 : \x07", Stat_Damage, "\n\x13\x04 사거리 : \x07", Stat_RangeL, ".", Stat_RangeR, "\n\x13\x04 이동속도 : \x07", Stat_Speed, "\x04%\n\x13\x04 방어력 : \x07", Stat_Armor, "\n")
                        # (Line 6343) }
                        # (Line 6344) }
                    EUDEndIf()
                    # (Line 6345) EUDEndPlayerLoop();
                EUDEndIf()
                EUDEndPlayerLoop()
                # (Line 6347) }
                # (Line 6348) }
            EUDEndIf()
            # (Line 6350) }
        EUDEndIf()
        # (Line 6352) if(
    EUDEndIf()
    _t314 = EUDIf()
    # (Line 6353) Switch((1), (2)) &&
    # (Line 6354) Bring((18), (0), 1, (230), (24)) &&
    # (Line 6355) Bring((6), (10), 0, (230), (64))
    # (Line 6356) ){
    if _t314(EUDSCAnd()(Switch((1), (2)))(Bring((18), (0), 1, (230), (24)))(Bring((6), (10), 0, (230), (64)))()):
        # (Line 6357) 포문개방취소 = 0;
        포문개방취소 << (0)
        # (Line 6358) 형님 = 0;
        형님 << (0)
        # (Line 6359) SetDeaths((6), (8), 1, (193));
        # (Line 6360) KillUnitAt(255, (230), (24), (18));
        DoActions(SetDeaths((6), (8), 1, (193)))
        # (Line 6361) SetResources((18), (7), 0, (1));
        DoActions(KillUnitAt(255, (230), (24), (18)))
        # (Line 6362) SetSwitch((1), (5));
        DoActions(SetResources((18), (7), 0, (1)))
        # (Line 6363) if(
        DoActions(SetSwitch((1), (5)))
        _t315 = EUDIf()
        # (Line 6364) Roulette_Count < 8
        # (Line 6365) ){
        if _t315(Roulette_Count >= 8, neg=True):
            # (Line 6366) Roulette_Count += 1;
            Roulette_Count.__iadd__(1)
            # (Line 6367) }
            # (Line 6368) for(var i = 0 ; i < 8 ; i++){
        EUDEndIf()
        i = EUDVariable()
        i << (0)
        if EUDWhile()(i >= 8, neg=True):
            def _t317():
                i.__iadd__(1)
            # (Line 6369) RandomOption[i] = 0;
            _ARRW(RandomOption, i) << (0)
            # (Line 6370) }
            # (Line 6371) SetSwitch((17), (4));
            EUDSetContinuePoint()
            _t317()
        EUDEndWhile()
        # (Line 6372) }
        DoActions(SetSwitch((17), (4)))
        # (Line 6375) if(
    EUDEndIf()
    _t318 = EUDIf()
    # (Line 6376) Switch((17), (2))
    # (Line 6377) ){
    if _t318(Switch((17), (2))):
        # (Line 6378) Roulette_Timer += 1;
        Roulette_Timer.__iadd__(1)
        # (Line 6379) if(
        _t319 = EUDIf()
        # (Line 6380) BossReward >= 1
        # (Line 6381) ){
        if _t319(BossReward >= 1):
            # (Line 6382) EUDPlayerLoop()();
            EUDPlayerLoop()()
            # (Line 6383) if (getcurpl() == 0 || getcurpl() == 1 || getcurpl() == 2 || getcurpl() == 3 || getcurpl() == 4 || getcurpl() == 5) {
            if EUDIf()(EUDSCOr()(f_getcurpl() == 0)(f_getcurpl() == 1)(f_getcurpl() == 2)(f_getcurpl() == 3)(f_getcurpl() == 4)(f_getcurpl() == 5)()):
                # (Line 6384) CenterView((4));
                # (Line 6385) }
                DoActions(CenterView((4)))
                # (Line 6386) EUDEndPlayerLoop();
            EUDEndIf()
            EUDEndPlayerLoop()
            # (Line 6388) if(
            _t321 = EUDIf()
            # (Line 6389) Roulette_Timer % 2 == 1
            # (Line 6390) ){
            if _t321(Roulette_Timer % 2 == 1):
                # (Line 6391) if(
                _t322 = EUDIf()
                # (Line 6392) Roulette_Timer <= 68
                # (Line 6393) ){
                if _t322(Roulette_Timer <= 68):
                    # (Line 6394) RewardOption = dwrand() % (RewardCount + 1);
                    RewardOption << (f_dwrand() % (RewardCount + 1))
                    # (Line 6395) RewardOption += 1;
                    RewardOption.__iadd__(1)
                    # (Line 6396) }
                    # (Line 6397) EUDPlayerLoop()();
                EUDEndIf()
                EUDPlayerLoop()()
                # (Line 6398) if (getcurpl() == 0 || getcurpl() == 1 || getcurpl() == 2 || getcurpl() == 3 || getcurpl() == 4 || getcurpl() == 5) {
                if EUDIf()(EUDSCOr()(f_getcurpl() == 0)(f_getcurpl() == 1)(f_getcurpl() == 2)(f_getcurpl() == 3)(f_getcurpl() == 4)(f_getcurpl() == 5)()):
                    # (Line 6399) txtPtr = dwread_epd_safe(EPD(0x640B58));
                    txtPtr << (f_dwread_epd_safe(EPD(0x640B58)))
                    # (Line 6400) DisplayText("\x13\x11보상\x04을 뽑습니다.", (0));
                    # (Line 6401) RewardDescribe();
                    DoActions(DisplayText("\x13\x11보상\x04을 뽑습니다.", (0)))
                    RewardDescribe()
                    # (Line 6402) DisplayText("\n\n\n\n\n\n", (0));
                    # (Line 6403) SetMemory(0x640B58, SetTo, txtPtr);
                    DoActions(DisplayText("\n\n\n\n\n\n", (0)))
                    # (Line 6404) }
                    DoActions(SetMemory(0x640B58, SetTo, txtPtr))
                    # (Line 6405) EUDEndPlayerLoop();
                EUDEndIf()
                EUDEndPlayerLoop()
                # (Line 6406) }
                # (Line 6407) if(
            EUDEndIf()
            _t324 = EUDIf()
            # (Line 6408) Roulette_Timer == 69
            # (Line 6409) ){
            if _t324(Roulette_Timer == 69):
                # (Line 6410) RewardOption = 0;
                RewardOption << (0)
                # (Line 6411) }
                # (Line 6413) if(
            EUDEndIf()
            _t325 = EUDIf()
            # (Line 6414) Roulette_Timer >= 70 &&
            # (Line 6415) RewardOption == 0
            # (Line 6416) ){
            if _t325(EUDSCAnd()(Roulette_Timer >= 70)(RewardOption == 0)()):
                # (Line 6417) for(var i=0;i>=0;){
                i = EUDVariable()
                i << (0)
                if EUDWhile()(i >= 0):
                    def _t327():
                        pass
                    # (Line 6418) RewardOption = dwrand() % (RewardCount + 1);
                    RewardOption << (f_dwrand() % (RewardCount + 1))
                    # (Line 6419) RewardOption += 1;
                    RewardOption.__iadd__(1)
                    # (Line 6421) if(
                    _t328 = EUDIf()
                    # (Line 6422) RewardOption == 9
                    # (Line 6423) ){
                    if _t328(RewardOption == 9):
                        # (Line 6424) if(
                        _t329 = EUDIf()
                        # (Line 6425) KukulzaReward == 0
                        # (Line 6426) ){
                        if _t329(KukulzaReward == 0):
                            # (Line 6427) continue;
                            EUDContinue()
                            # (Line 6428) }
                            # (Line 6429) else{
                        if EUDElse()():
                            # (Line 6430) RandomNum = dwrand() % (3 + 1);
                            RandomNum << (f_dwrand() % (3 + 1))
                            # (Line 6431) if(
                            _t330 = EUDIf()
                            # (Line 6432) RandomNum != 0
                            # (Line 6433) ){
                            if _t330(RandomNum == 0, neg=True):
                                # (Line 6434) continue;
                                EUDContinue()
                                # (Line 6435) }
                                # (Line 6436) break;
                            EUDEndIf()
                            EUDBreak()
                            # (Line 6437) }
                            # (Line 6438) }
                        EUDEndIf()
                        # (Line 6441) if(
                    EUDEndIf()
                    _t331 = EUDIf()
                    # (Line 6442) RewardOption == 11
                    # (Line 6443) ){
                    if _t331(RewardOption == 11):
                        # (Line 6444) RandomNum = dwrand() % (5 + 1);
                        RandomNum << (f_dwrand() % (5 + 1))
                        # (Line 6445) if(
                        _t332 = EUDIf()
                        # (Line 6446) RandomNum != 0
                        # (Line 6447) ){
                        if _t332(RandomNum == 0, neg=True):
                            # (Line 6448) continue;
                            EUDContinue()
                            # (Line 6449) }
                            # (Line 6450) break;
                        EUDEndIf()
                        EUDBreak()
                        # (Line 6451) }
                        # (Line 6454) if(
                    EUDEndIf()
                    _t333 = EUDIf()
                    # (Line 6455) RewardOption == 15
                    # (Line 6456) ){
                    if _t333(RewardOption == 15):
                        # (Line 6457) if(
                        _t334 = EUDIf()
                        # (Line 6458) TomReward == 0
                        # (Line 6459) ){
                        if _t334(TomReward == 0):
                            # (Line 6460) continue;
                            EUDContinue()
                            # (Line 6461) }
                            # (Line 6462) else{
                        if EUDElse()():
                            # (Line 6463) RandomNum = dwrand() % (3 + 1);
                            RandomNum << (f_dwrand() % (3 + 1))
                            # (Line 6464) if(
                            _t335 = EUDIf()
                            # (Line 6465) RandomNum != 0
                            # (Line 6466) ){
                            if _t335(RandomNum == 0, neg=True):
                                # (Line 6467) continue;
                                EUDContinue()
                                # (Line 6468) }
                                # (Line 6469) break;
                            EUDEndIf()
                            EUDBreak()
                            # (Line 6470) }
                            # (Line 6471) }
                        EUDEndIf()
                        # (Line 6473) break;
                    EUDEndIf()
                    EUDBreak()
                    # (Line 6474) }
                    # (Line 6475) EUDPlayerLoop()();
                    EUDSetContinuePoint()
                    _t327()
                EUDEndWhile()
                EUDPlayerLoop()()
                # (Line 6476) if (getcurpl() == 0 || getcurpl() == 1 || getcurpl() == 2 || getcurpl() == 3 || getcurpl() == 4 || getcurpl() == 5) {
                if EUDIf()(EUDSCOr()(f_getcurpl() == 0)(f_getcurpl() == 1)(f_getcurpl() == 2)(f_getcurpl() == 3)(f_getcurpl() == 4)(f_getcurpl() == 5)()):
                    # (Line 6477) Reward_Sound[getcurpl()] = RewardOption;
                    _ARRW(Reward_Sound, f_getcurpl()) << (RewardOption)
                    # (Line 6478) }
                    # (Line 6479) EUDEndPlayerLoop();
                EUDEndIf()
                EUDEndPlayerLoop()
                # (Line 6480) KukulzaReward = 0;
                KukulzaReward << (0)
                # (Line 6481) TomReward = 0;
                TomReward << (0)
                # (Line 6482) }
                # (Line 6483) if(
            EUDEndIf()
            _t337 = EUDIf()
            # (Line 6484) Roulette_Timer >= 120
            # (Line 6485) ){
            if _t337(Roulette_Timer >= 120):
                # (Line 6486) SetSwitch((18), (4));
                # (Line 6487) autoStart = 1;
                DoActions(SetSwitch((18), (4)))
                autoStart << (1)
                # (Line 6488) }
                # (Line 6489) }
            EUDEndIf()
            # (Line 6490) else{
        if EUDElse()():
            # (Line 6491) SetSwitch((16), (4));
            # (Line 6492) SetSwitch((17), (5));
            DoActions(SetSwitch((16), (4)))
            # (Line 6493) }
            DoActions(SetSwitch((17), (5)))
            # (Line 6495) if(
        EUDEndIf()
        _t338 = EUDIf()
        # (Line 6496) Switch((18), (2))
        # (Line 6497) ){
        if _t338(Switch((18), (2))):
            # (Line 6498) var Loading;
            Loading = EUDVariable()
            # (Line 6499) EUDPlayerLoop()();
            EUDPlayerLoop()()
            # (Line 6500) if (getcurpl() == 0 || getcurpl() == 1 || getcurpl() == 2 || getcurpl() == 3 || getcurpl() == 4 || getcurpl() == 5) {
            if EUDIf()(EUDSCOr()(f_getcurpl() == 0)(f_getcurpl() == 1)(f_getcurpl() == 2)(f_getcurpl() == 3)(f_getcurpl() == 4)(f_getcurpl() == 5)()):
                # (Line 6501) if(
                _t340 = EUDIf()
                # (Line 6502) Loading == 0
                # (Line 6503) ){
                if _t340(Loading == 0):
                    # (Line 6504) if(
                    _t341 = EUDIf()
                    # (Line 6505) autoStart >= 1
                    # (Line 6506) ){
                    if _t341(autoStart >= 1):
                        # (Line 6507) autoStartDisplay = 10 - autoStart / 48;
                        autoStartDisplay << (10 - autoStart // 48)
                        # (Line 6508) tct.chatAnnouncement("\x08", tct.str(0x57EEEB + 36 * 0), "\x04은(는) \x07X\x04 를 꾹 눌러 시작하세요 \x07", autoStartDisplay, "초");
                        tct.f_chatAnnouncement("\x08", tct.f_str(0x57EEEB + 36 * 0), "\x04은(는) \x07X\x04 를 꾹 눌러 시작하세요 \x07", autoStartDisplay, "초")
                        # (Line 6509) }
                        # (Line 6510) else{
                    if EUDElse()():
                        # (Line 6511) tct.chatAnnouncement("\x08", tct.str(0x57EEEB + 36 * 0), "\x04은(는) \x07X\x04 를 꾹 눌러 시작하세요");
                        tct.f_chatAnnouncement("\x08", tct.f_str(0x57EEEB + 36 * 0), "\x04은(는) \x07X\x04 를 꾹 눌러 시작하세요")
                        # (Line 6512) }
                        # (Line 6513) }
                    EUDEndIf()
                    # (Line 6514) if(
                EUDEndIf()
                _t342 = EUDIf()
                # (Line 6515) Loading >= 1
                # (Line 6516) ){
                if _t342(Loading >= 1):
                    # (Line 6517) tct.chatAnnouncement("\x07Loading : \x04", Loading, "%");
                    tct.f_chatAnnouncement("\x07Loading : \x04", Loading, "%")
                    # (Line 6518) }
                    # (Line 6519) }
                EUDEndIf()
                # (Line 6520) EUDEndPlayerLoop();
            EUDEndIf()
            EUDEndPlayerLoop()
            # (Line 6521) if(
            _t343 = EUDIf()
            # (Line 6522) Deaths((0), (10), 1, (209))
            # (Line 6523) ){
            if _t343(Deaths((0), (10), 1, (209))):
                # (Line 6524) Loading += 4;
                Loading.__iadd__(4)
                # (Line 6525) autoStart = 0;
                autoStart << (0)
                # (Line 6526) }
                # (Line 6527) else{
            if EUDElse()():
                # (Line 6528) for(var i = 0 ; i < 4 ; i++){
                i = EUDVariable()
                i << (0)
                if EUDWhile()(i >= 4, neg=True):
                    def _t345():
                        i.__iadd__(1)
                    # (Line 6529) if(
                    _t346 = EUDIf()
                    # (Line 6530) Loading >= 1
                    # (Line 6531) ){
                    if _t346(Loading >= 1):
                        # (Line 6532) Loading -= 1;
                        Loading.__isub__(1)
                        # (Line 6533) }
                        # (Line 6534) }
                    EUDEndIf()
                    # (Line 6535) }
                    EUDSetContinuePoint()
                    _t345()
                EUDEndWhile()
                # (Line 6536) if(
            EUDEndIf()
            _t347 = EUDIf()
            # (Line 6537) Loading >= 100 ||
            # (Line 6538) autoStart >= 480
            # (Line 6539) ){
            if _t347(EUDSCOr()(Loading >= 100)(autoStart >= 480)()):
                # (Line 6540) BossReward = 0;
                BossReward << (0)
                # (Line 6541) SetSwitch((18), (5));
                # (Line 6542) SetSwitch((17), (5));
                DoActions(SetSwitch((18), (5)))
                # (Line 6543) SetSwitch((16), (4));
                DoActions(SetSwitch((17), (5)))
                # (Line 6544) Loading = 0;
                DoActions(SetSwitch((16), (4)))
                Loading << (0)
                # (Line 6545) Roulette_Timer = 0;
                Roulette_Timer << (0)
                # (Line 6546) }
                # (Line 6547) if(
            EUDEndIf()
            _t348 = EUDIf()
            # (Line 6548) autoStart >= 1
            # (Line 6549) ){
            if _t348(autoStart >= 1):
                # (Line 6550) autoStart += 1;
                autoStart.__iadd__(1)
                # (Line 6551) }
                # (Line 6552) }
            EUDEndIf()
            # (Line 6554) }
        EUDEndIf()
        # (Line 6556) EUDPlayerLoop()();
    EUDEndIf()
    EUDPlayerLoop()()
    # (Line 6557) if (getcurpl() == 0 || getcurpl() == 1 || getcurpl() == 2 || getcurpl() == 3 || getcurpl() == 4 || getcurpl() == 5) {
    if EUDIf()(EUDSCOr()(f_getcurpl() == 0)(f_getcurpl() == 1)(f_getcurpl() == 2)(f_getcurpl() == 3)(f_getcurpl() == 4)(f_getcurpl() == 5)()):
        # (Line 6559) if(
        _t350 = EUDIf()
        # (Line 6560) Switch((1), (2))
        # (Line 6561) ){
        if _t350(Switch((1), (2))):
            # (Line 6563) if(
            _t351 = EUDIf()
            # (Line 6564) ChartCheckTimer[getcurpl()] >= 1
            # (Line 6565) ){
            if _t351(ChartCheckTimer[f_getcurpl()] >= 1):
                # (Line 6566) ChartCheckTimer[getcurpl()] -= 1;
                _ARRW(ChartCheckTimer, f_getcurpl()).__isub__(1)
                # (Line 6567) }
                # (Line 6570) if(
            EUDEndIf()
            _t352 = EUDIf()
            # (Line 6571) Deaths((13), (10), 1, (207)) &&
            # (Line 6572) ChartCheckTimer[getcurpl()] == 0
            # (Line 6573) ){
            if _t352(EUDSCAnd()(Deaths((13), (10), 1, (207)))(ChartCheckTimer[f_getcurpl()] == 0)()):
                # (Line 6574) ChartCheckTimer[getcurpl()] = 15;
                _ARRW(ChartCheckTimer, f_getcurpl()) << (15)
                # (Line 6575) PlayWAV("staredit\\wav\\paper.wav");
                # (Line 6576) if(
                DoActions(PlayWAV("staredit\\wav\\paper.wav"))
                _t353 = EUDIf()
                # (Line 6577) dwread(0x6564E0 + 3984 + 19 * 4) >= 129 &&
                # (Line 6578) dwread(0x6564E0 + 3984 + 19 * 4) <= 131
                # (Line 6579) ){
                if _t353(EUDSCAnd()(f_dwread(0x6564E0 + 3984 + 19 * 4) >= 129)(f_dwread(0x6564E0 + 3984 + 19 * 4) <= 131)()):
                    # (Line 6580) tct.print("\n\n\x13\x08스\x04테이지 \x08", StageDisplay, "\n\n\x13\x04 체력/쉴드 : \x07", Stat_Health, "\x04/\x1F", Stat_Shield, "\n\x13\x04 데미지 : \x07", Stat_Damage, "\n\x13\x04 사거리 : \x07", Stat_RangeL, ".0", Stat_RangeR, "\n\x13\x04 이동속도 : \x07", Stat_Speed, "\x04%\n\x13\x04 방어력 : \x07", Stat_Armor, "\n");
                    tct.f_print("\n\n\x13\x08스\x04테이지 \x08", StageDisplay, "\n\n\x13\x04 체력/쉴드 : \x07", Stat_Health, "\x04/\x1F", Stat_Shield, "\n\x13\x04 데미지 : \x07", Stat_Damage, "\n\x13\x04 사거리 : \x07", Stat_RangeL, ".0", Stat_RangeR, "\n\x13\x04 이동속도 : \x07", Stat_Speed, "\x04%\n\x13\x04 방어력 : \x07", Stat_Armor, "\n")
                    # (Line 6581) }
                    # (Line 6582) else{
                if EUDElse()():
                    # (Line 6583) tct.print("\n\n\x13\x08스\x04테이지 \x08", StageDisplay, "\n\n\x13\x04 체력/쉴드 : \x07", Stat_Health, "\x04/\x1F", Stat_Shield, "\n\x13\x04 데미지 : \x07", Stat_Damage, "\n\x13\x04 사거리 : \x07", Stat_RangeL, ".", Stat_RangeR, "\n\x13\x04 이동속도 : \x07", Stat_Speed, "\x04%\n\x13\x04 방어력 : \x07", Stat_Armor, "\n");
                    tct.f_print("\n\n\x13\x08스\x04테이지 \x08", StageDisplay, "\n\n\x13\x04 체력/쉴드 : \x07", Stat_Health, "\x04/\x1F", Stat_Shield, "\n\x13\x04 데미지 : \x07", Stat_Damage, "\n\x13\x04 사거리 : \x07", Stat_RangeL, ".", Stat_RangeR, "\n\x13\x04 이동속도 : \x07", Stat_Speed, "\x04%\n\x13\x04 방어력 : \x07", Stat_Armor, "\n")
                    # (Line 6584) }
                    # (Line 6585) }
                EUDEndIf()
                # (Line 6588) if(
            EUDEndIf()
            _t354 = EUDIf()
            # (Line 6589) CTimer == 0 &&
            # (Line 6590) ChartCheck[getcurpl()] == 0
            # (Line 6591) ){
            if _t354(EUDSCAnd()(CTimer == 0)(ChartCheck[f_getcurpl()] == 0)()):
                # (Line 6592) txtPtr = dwread_epd(EPD(0x640B58));
                txtPtr << (f_dwread_epd(EPD(0x640B58)))
                # (Line 6593) tct.print("\x12\x07스테이지 정보\x04: ]\n\x12\x07룰렛옵션 보기\x04: [");
                tct.f_print("\x12\x07스테이지 정보\x04: ]\n\x12\x07룰렛옵션 보기\x04: [")
                # (Line 6594) SetMemory(0x640B58, SetTo, txtPtr);
                # (Line 6595) }
                DoActions(SetMemory(0x640B58, SetTo, txtPtr))
                # (Line 6597) }
            EUDEndIf()
            # (Line 6599) }
        EUDEndIf()
        # (Line 6600) EUDEndPlayerLoop();
    EUDEndIf()
    EUDEndPlayerLoop()
    # (Line 6603) EUDPlayerLoop()();
    EUDPlayerLoop()()
    # (Line 6604) if (getcurpl() == 0 || getcurpl() == 1 || getcurpl() == 2 || getcurpl() == 3 || getcurpl() == 4 || getcurpl() == 5) {
    if EUDIf()(EUDSCOr()(f_getcurpl() == 0)(f_getcurpl() == 1)(f_getcurpl() == 2)(f_getcurpl() == 3)(f_getcurpl() == 4)(f_getcurpl() == 5)()):
        # (Line 6605) SetResources((13), (9), 1, (1));
        # (Line 6606) if(
        DoActions(SetResources((13), (9), 1, (1)))
        _t356 = EUDIf()
        # (Line 6607) Bring((13), (10), 1, (230), (38))
        # (Line 6608) ){
        if _t356(Bring((13), (10), 1, (230), (38))):
            # (Line 6609) if(
            _t357 = EUDIf()
            # (Line 6610) Accumulate((13), (10), 0, (1))
            # (Line 6611) ){
            if _t357(Accumulate((13), (10), 0, (1))):
                # (Line 6612) MoveUnit(255, (230), (13), (24), (18));
                # (Line 6613) CenterView((18));
                DoActions(MoveUnit(255, (230), (13), (24), (18)))
                # (Line 6614) PlayWAV("sound\\Bullet\\LASRHIT1.wav");
                DoActions(CenterView((18)))
                # (Line 6615) DisplayText("\n\n\x13\x1C텔레포트\x04하였습니다.\n\x13\x17쿨타임 + 5초 \x07(가스)\n\n", (0));
                DoActions(PlayWAV("sound\\Bullet\\LASRHIT1.wav"))
                # (Line 6616) SetResources((13), (7), 240, (1));
                DoActions(DisplayText("\n\n\x13\x1C텔레포트\x04하였습니다.\n\x13\x17쿨타임 + 5초 \x07(가스)\n\n", (0)))
                # (Line 6617) }
                DoActions(SetResources((13), (7), 240, (1)))
                # (Line 6618) else{
            if EUDElse()():
                # (Line 6619) MoveLocation((41), (230), (13), (24));
                # (Line 6620) EUDMoveLocation(40,0,-32);
                DoActions(MoveLocation((41), (230), (13), (24)))
                EUDMoveLocation(40, 0, -32)
                # (Line 6621) MoveUnit(255, (230), (13), (24), (41));
                # (Line 6622) CenterView((41));
                DoActions(MoveUnit(255, (230), (13), (24), (41)))
                # (Line 6623) PlayWAV("sound\\Bullet\\LASRHIT1.wav");
                DoActions(CenterView((41)))
                # (Line 6624) DisplayText("\n\n\x13\x1C텔레포트\x04가 \x08불가능\x04합니다.\n\x13\x07가스\x04가 \x11남아\x04있습니다.\n\n", (0));
                DoActions(PlayWAV("sound\\Bullet\\LASRHIT1.wav"))
                # (Line 6625) }
                DoActions(DisplayText("\n\n\x13\x1C텔레포트\x04가 \x08불가능\x04합니다.\n\x13\x07가스\x04가 \x11남아\x04있습니다.\n\n", (0)))
                # (Line 6626) }
            EUDEndIf()
            # (Line 6627) if(
        EUDEndIf()
        _t358 = EUDIf()
        # (Line 6628) Bring((13), (10), 1, (230), (42))
        # (Line 6629) ){
        if _t358(Bring((13), (10), 1, (230), (42))):
            # (Line 6630) if(
            _t359 = EUDIf()
            # (Line 6631) Accumulate((13), (10), 0, (1))
            # (Line 6632) ){
            if _t359(Accumulate((13), (10), 0, (1))):
                # (Line 6633) MoveUnit(255, (230), (13), (24), (19));
                # (Line 6634) CenterView((19));
                DoActions(MoveUnit(255, (230), (13), (24), (19)))
                # (Line 6635) PlayWAV("sound\\Bullet\\LASRHIT1.wav");
                DoActions(CenterView((19)))
                # (Line 6636) DisplayText("\n\n\x13\x1C텔레포트\x04하였습니다.\n\x13\x17쿨타임 + 5초 \x07(가스)\n\n", (0));
                DoActions(PlayWAV("sound\\Bullet\\LASRHIT1.wav"))
                # (Line 6637) SetResources((13), (7), 240, (1));
                DoActions(DisplayText("\n\n\x13\x1C텔레포트\x04하였습니다.\n\x13\x17쿨타임 + 5초 \x07(가스)\n\n", (0)))
                # (Line 6638) }
                DoActions(SetResources((13), (7), 240, (1)))
                # (Line 6639) else{
            if EUDElse()():
                # (Line 6640) MoveLocation((41), (230), (13), (24));
                # (Line 6641) EUDMoveLocation(40,-32,0);
                DoActions(MoveLocation((41), (230), (13), (24)))
                EUDMoveLocation(40, -32, 0)
                # (Line 6642) MoveUnit(255, (230), (13), (24), (41));
                # (Line 6643) CenterView((41));
                DoActions(MoveUnit(255, (230), (13), (24), (41)))
                # (Line 6644) PlayWAV("sound\\Bullet\\LASRHIT1.wav");
                DoActions(CenterView((41)))
                # (Line 6645) DisplayText("\n\n\x13\x1C텔레포트\x04가 \x08불가능\x04합니다.\n\x13\x07가스\x04가 \x11남아\x04있습니다.\n\n", (0));
                DoActions(PlayWAV("sound\\Bullet\\LASRHIT1.wav"))
                # (Line 6646) }
                DoActions(DisplayText("\n\n\x13\x1C텔레포트\x04가 \x08불가능\x04합니다.\n\x13\x07가스\x04가 \x11남아\x04있습니다.\n\n", (0)))
                # (Line 6647) }
            EUDEndIf()
            # (Line 6648) if(
        EUDEndIf()
        _t360 = EUDIf()
        # (Line 6649) Bring((13), (10), 1, (230), (44))
        # (Line 6650) ){
        if _t360(Bring((13), (10), 1, (230), (44))):
            # (Line 6651) if(
            _t361 = EUDIf()
            # (Line 6652) Accumulate((13), (10), 0, (1))
            # (Line 6653) ){
            if _t361(Accumulate((13), (10), 0, (1))):
                # (Line 6654) MoveUnit(255, (230), (13), (24), (20));
                # (Line 6655) CenterView((20));
                DoActions(MoveUnit(255, (230), (13), (24), (20)))
                # (Line 6656) PlayWAV("sound\\Bullet\\LASRHIT1.wav");
                DoActions(CenterView((20)))
                # (Line 6657) DisplayText("\n\n\x13\x1C텔레포트\x04하였습니다.\n\x13\x17쿨타임 + 5초 \x07(가스)\n\n", (0));
                DoActions(PlayWAV("sound\\Bullet\\LASRHIT1.wav"))
                # (Line 6658) SetResources((13), (7), 240, (1));
                DoActions(DisplayText("\n\n\x13\x1C텔레포트\x04하였습니다.\n\x13\x17쿨타임 + 5초 \x07(가스)\n\n", (0)))
                # (Line 6659) }
                DoActions(SetResources((13), (7), 240, (1)))
                # (Line 6660) else{
            if EUDElse()():
                # (Line 6661) MoveLocation((41), (230), (13), (24));
                # (Line 6662) EUDMoveLocation(40,0,32);
                DoActions(MoveLocation((41), (230), (13), (24)))
                EUDMoveLocation(40, 0, 32)
                # (Line 6663) MoveUnit(255, (230), (13), (24), (41));
                # (Line 6664) CenterView((41));
                DoActions(MoveUnit(255, (230), (13), (24), (41)))
                # (Line 6665) PlayWAV("sound\\Bullet\\LASRHIT1.wav");
                DoActions(CenterView((41)))
                # (Line 6666) DisplayText("\n\n\x13\x1C텔레포트\x04가 \x08불가능\x04합니다.\n\x13\x07가스\x04가 \x11남아\x04있습니다.\n\n", (0));
                DoActions(PlayWAV("sound\\Bullet\\LASRHIT1.wav"))
                # (Line 6667) }
                DoActions(DisplayText("\n\n\x13\x1C텔레포트\x04가 \x08불가능\x04합니다.\n\x13\x07가스\x04가 \x11남아\x04있습니다.\n\n", (0)))
                # (Line 6668) }
            EUDEndIf()
            # (Line 6669) if(
        EUDEndIf()
        _t362 = EUDIf()
        # (Line 6670) Bring((13), (10), 1, (230), (47))
        # (Line 6671) ){
        if _t362(Bring((13), (10), 1, (230), (47))):
            # (Line 6672) if(
            _t363 = EUDIf()
            # (Line 6673) Accumulate((13), (10), 0, (1))
            # (Line 6674) ){
            if _t363(Accumulate((13), (10), 0, (1))):
                # (Line 6675) MoveUnit(255, (230), (13), (24), (21));
                # (Line 6676) CenterView((21));
                DoActions(MoveUnit(255, (230), (13), (24), (21)))
                # (Line 6677) PlayWAV("sound\\Bullet\\LASRHIT1.wav");
                DoActions(CenterView((21)))
                # (Line 6678) DisplayText("\n\n\x13\x1C텔레포트\x04하였습니다.\n\x13\x17쿨타임 + 5초 \x07(가스)\n\n", (0));
                DoActions(PlayWAV("sound\\Bullet\\LASRHIT1.wav"))
                # (Line 6679) SetResources((13), (7), 240, (1));
                DoActions(DisplayText("\n\n\x13\x1C텔레포트\x04하였습니다.\n\x13\x17쿨타임 + 5초 \x07(가스)\n\n", (0)))
                # (Line 6680) }
                DoActions(SetResources((13), (7), 240, (1)))
                # (Line 6681) else{
            if EUDElse()():
                # (Line 6682) MoveLocation((41), (230), (13), (24));
                # (Line 6683) EUDMoveLocation(40,32,0);
                DoActions(MoveLocation((41), (230), (13), (24)))
                EUDMoveLocation(40, 32, 0)
                # (Line 6684) MoveUnit(255, (230), (13), (24), (41));
                # (Line 6685) CenterView((41));
                DoActions(MoveUnit(255, (230), (13), (24), (41)))
                # (Line 6686) PlayWAV("sound\\Bullet\\LASRHIT1.wav");
                DoActions(CenterView((41)))
                # (Line 6687) DisplayText("\n\n\x13\x1C텔레포트\x04가 \x08불가능\x04합니다.\n\x13\x07가스\x04가 \x11남아\x04있습니다.\n\n", (0));
                DoActions(PlayWAV("sound\\Bullet\\LASRHIT1.wav"))
                # (Line 6688) }
                DoActions(DisplayText("\n\n\x13\x1C텔레포트\x04가 \x08불가능\x04합니다.\n\x13\x07가스\x04가 \x11남아\x04있습니다.\n\n", (0)))
                # (Line 6689) }
            EUDEndIf()
            # (Line 6690) }
        EUDEndIf()
        # (Line 6691) EUDEndPlayerLoop();
    EUDEndIf()
    EUDEndPlayerLoop()
    # (Line 6694) EUDPlayerLoop()();
    EUDPlayerLoop()()
    # (Line 6695) if (getcurpl() == 0 || getcurpl() == 1 || getcurpl() == 2 || getcurpl() == 3 || getcurpl() == 4 || getcurpl() == 5) {
    if EUDIf()(EUDSCOr()(f_getcurpl() == 0)(f_getcurpl() == 1)(f_getcurpl() == 2)(f_getcurpl() == 3)(f_getcurpl() == 4)(f_getcurpl() == 5)()):
        # (Line 6697) if(
        _t365 = EUDIf()
        # (Line 6698) CamTimer[getcurpl()] >= 1
        # (Line 6699) ){
        if _t365(CamTimer[f_getcurpl()] >= 1):
            # (Line 6700) CamTimer[getcurpl()] -= 1;
            _ARRW(CamTimer, f_getcurpl()).__isub__(1)
            # (Line 6701) }
            # (Line 6703) if(
        EUDEndIf()
        _t366 = EUDIf()
        # (Line 6704) Bring((13), (0), 1, (230), (24)) &&
        # (Line 6705) Deaths((13), (10), 1, (95)) &&
        # (Line 6706) CamTimer[getcurpl()] == 0 &&
        # (Line 6707) Deaths((13), (10), 0, (130)) &&
        # (Line 6708) Memory(0x57F1B0, Exactly, (getcurpl()))
        # (Line 6709) ){
        if _t366(EUDSCAnd()(Bring((13), (0), 1, (230), (24)))(Deaths((13), (10), 1, (95)))(CamTimer[f_getcurpl()] == 0)(Deaths((13), (10), 0, (130)))(Memory(0x57F1B0, Exactly, (f_getcurpl())))()):
            # (Line 6710) CamTimer[getcurpl()] = 48;
            _ARRW(CamTimer, f_getcurpl()) << (48)
            # (Line 6711) SetDeaths((13), (7), 1, (130));
            # (Line 6712) PlayWAV("staredit\\wav\\Camera on.wav");
            DoActions(SetDeaths((13), (7), 1, (130)))
            # (Line 6713) DisplayText("\n\n\n\n\n\n\x13\x1C카메라\x04를 \x11적용\x04합니다.\n\n\n\n", (0));
            DoActions(PlayWAV("staredit\\wav\\Camera on.wav"))
            # (Line 6714) SetSwitch((0), (4));
            DoActions(DisplayText("\n\n\n\n\n\n\x13\x1C카메라\x04를 \x11적용\x04합니다.\n\n\n\n", (0)))
            # (Line 6715) }
            DoActions(SetSwitch((0), (4)))
            # (Line 6716) if(
        EUDEndIf()
        _t367 = EUDIf()
        # (Line 6717) Deaths((13), (10), 1, (95)) &&
        # (Line 6718) CamTimer[getcurpl()] == 0 &&
        # (Line 6719) Deaths((13), (10), 1, (130)) &&
        # (Line 6720) Memory(0x57F1B0, Exactly, (getcurpl()))
        # (Line 6721) ){
        if _t367(EUDSCAnd()(Deaths((13), (10), 1, (95)))(CamTimer[f_getcurpl()] == 0)(Deaths((13), (10), 1, (130)))(Memory(0x57F1B0, Exactly, (f_getcurpl())))()):
            # (Line 6722) CamTimer[getcurpl()] = 48;
            _ARRW(CamTimer, f_getcurpl()) << (48)
            # (Line 6723) SetDeaths((13), (7), 0, (130));
            # (Line 6724) PlayWAV("staredit\\wav\\Camera off.wav");
            DoActions(SetDeaths((13), (7), 0, (130)))
            # (Line 6725) DisplayText("\n\n\n\n\n\n\x13\x1C카메라\x04를 \x08해제\x04합니다.\n\n\n\n", (0));
            DoActions(PlayWAV("staredit\\wav\\Camera off.wav"))
            # (Line 6726) SetSwitch((0), (5));
            DoActions(DisplayText("\n\n\n\n\n\n\x13\x1C카메라\x04를 \x08해제\x04합니다.\n\n\n\n", (0)))
            # (Line 6727) }
            DoActions(SetSwitch((0), (5)))
            # (Line 6728) if(
        EUDEndIf()
        _t368 = EUDIf()
        # (Line 6729) Bring((13), (10), 0, (230), (24)) &&
        # (Line 6730) Deaths((13), (10), 1, (130)) &&
        # (Line 6731) Memory(0x57F1B0, Exactly, (getcurpl()))
        # (Line 6732) ){
        if _t368(EUDSCAnd()(Bring((13), (10), 0, (230), (24)))(Deaths((13), (10), 1, (130)))(Memory(0x57F1B0, Exactly, (f_getcurpl())))()):
            # (Line 6733) CamTimer[getcurpl()] = 48;
            _ARRW(CamTimer, f_getcurpl()) << (48)
            # (Line 6734) SetDeaths((13), (7), 0, (130));
            # (Line 6735) PlayWAV("staredit\\wav\\Camera off.wav");
            DoActions(SetDeaths((13), (7), 0, (130)))
            # (Line 6736) DisplayText("\n\x13\x1C카메라\x04를 \x08해제\x04합니다.\n", (0));
            DoActions(PlayWAV("staredit\\wav\\Camera off.wav"))
            # (Line 6737) SetSwitch((0), (5));
            DoActions(DisplayText("\n\x13\x1C카메라\x04를 \x08해제\x04합니다.\n", (0)))
            # (Line 6738) }
            DoActions(SetSwitch((0), (5)))
            # (Line 6739) }
        EUDEndIf()
        # (Line 6740) EUDEndPlayerLoop();
    EUDEndIf()
    EUDEndPlayerLoop()
    # (Line 6743) EUDPlayerLoop()();
    EUDPlayerLoop()()
    # (Line 6744) if (getcurpl() == 0 || getcurpl() == 1 || getcurpl() == 2 || getcurpl() == 3 || getcurpl() == 4 || getcurpl() == 5) {
    if EUDIf()(EUDSCOr()(f_getcurpl() == 0)(f_getcurpl() == 1)(f_getcurpl() == 2)(f_getcurpl() == 3)(f_getcurpl() == 4)(f_getcurpl() == 5)()):
        # (Line 6745) if(
        _t370 = EUDIf()
        # (Line 6746) Deaths((13), (10), 1, (132))
        # (Line 6747) ){
        if _t370(Deaths((13), (10), 1, (132))):
            # (Line 6748) for(var i = 0 ; i < 6 ; i++){
            i = EUDVariable()
            i << (0)
            if EUDWhile()(i >= 6, neg=True):
                def _t372():
                    i.__iadd__(1)
                # (Line 6749) if(
                _t373 = EUDIf()
                # (Line 6750) Deaths((13), (10), KeyP[i], (205)) &&
                # (Line 6751) Deaths((13), (10), 1, (209)) &&
                # (Line 6752) Bring((i), (10), 0, (230), (24)) &&
                # (Line 6753) Bring((i), (10), 1, (230), (52))
                # (Line 6754) ){
                if _t373(EUDSCAnd()(Deaths((13), (10), KeyP[i], (205)))(Deaths((13), (10), 1, (209)))(Bring((i), (10), 0, (230), (24)))(Bring((i), (10), 1, (230), (52)))()):
                    # (Line 6755) Vulture[i] = epdread_epd(EPD(0x628438));
                    _ARRW(Vulture, i) << (f_epdread_epd(EPD(0x628438)))
                    # (Line 6756) if(
                    _t374 = EUDIf()
                    # (Line 6757) ControlDirection == 0
                    # (Line 6758) ){
                    if _t374(ControlDirection == 0):
                        # (Line 6759) if(
                        _t375 = EUDIf()
                        # (Line 6760) Skin_Select[i] == 1
                        # (Line 6761) ){
                        if _t375(Skin_Select[i] == 1):
                            # (Line 6762) wwrite(0x665AC0 + 1696 + 244 * 2, 140);
                            f_wwrite(0x665AC0 + 1696 + 244 * 2, 140)
                            # (Line 6763) CreateUnit(1, (PVulture[i]), (6), (i));
                            # (Line 6764) }
                            DoActions(CreateUnit(1, (PVulture[i]), (6), (i)))
                            # (Line 6765) else{
                        if EUDElse()():
                            # (Line 6766) if(
                            _t376 = EUDIf()
                            # (Line 6767) Skin_Select[i] == 2
                            # (Line 6768) ){
                            if _t376(Skin_Select[i] == 2):
                                # (Line 6769) wwrite(0x665AC0 + 1696 + 244 * 2, 243);
                                f_wwrite(0x665AC0 + 1696 + 244 * 2, 243)
                                # (Line 6770) CreateUnit(1, (PVulture[i]), (6), (i));
                                # (Line 6771) }
                                DoActions(CreateUnit(1, (PVulture[i]), (6), (i)))
                                # (Line 6772) else{
                            if EUDElse()():
                                # (Line 6773) if(
                                _t377 = EUDIf()
                                # (Line 6774) Skin_Select[i] == 3
                                # (Line 6775) ){
                                if _t377(Skin_Select[i] == 3):
                                    # (Line 6776) wwrite(0x665AC0 + 1696 + 244 * 2, 38);
                                    f_wwrite(0x665AC0 + 1696 + 244 * 2, 38)
                                    # (Line 6777) CreateUnit(1, (PVulture[i]), (6), (i));
                                    # (Line 6778) }
                                    DoActions(CreateUnit(1, (PVulture[i]), (6), (i)))
                                    # (Line 6779) else{
                                if EUDElse()():
                                    # (Line 6780) if(
                                    _t378 = EUDIf()
                                    # (Line 6781) Skin_Select[i] == 4
                                    # (Line 6782) ){
                                    if _t378(Skin_Select[i] == 4):
                                        # (Line 6783) wwrite(0x665AC0 + 1696 + 244 * 2, 256);
                                        f_wwrite(0x665AC0 + 1696 + 244 * 2, 256)
                                        # (Line 6784) bwrite(0x666778 + 14000 + 256 * 1, 10);
                                        f_bwrite(0x666778 + 14000 + 256 * 1, 10)
                                        # (Line 6785) dwwrite(0x666778 + 34000 + 256 * 4, 362);
                                        f_dwwrite(0x666778 + 34000 + 256 * 4, 362)
                                        # (Line 6786) CreateUnit(1, (PVulture[i]), (6), (i));
                                        # (Line 6787) }
                                        DoActions(CreateUnit(1, (PVulture[i]), (6), (i)))
                                        # (Line 6788) else{
                                    if EUDElse()():
                                        # (Line 6789) wwrite(0x665AC0 + 1696 + 244 * 2, 256);
                                        f_wwrite(0x665AC0 + 1696 + 244 * 2, 256)
                                        # (Line 6790) bwrite(0x666778 + 14000 + 256 * 1, 0);
                                        f_bwrite(0x666778 + 14000 + 256 * 1, 0)
                                        # (Line 6791) dwwrite(0x666778 + 34000 + 256 * 4, 86);
                                        f_dwwrite(0x666778 + 34000 + 256 * 4, 86)
                                        # (Line 6792) CreateUnit(1, (PVulture[i]), (6), (i));
                                        # (Line 6793) }
                                        DoActions(CreateUnit(1, (PVulture[i]), (6), (i)))
                                        # (Line 6794) }
                                    EUDEndIf()
                                    # (Line 6795) }
                                EUDEndIf()
                                # (Line 6796) }
                            EUDEndIf()
                            # (Line 6797) }
                        EUDEndIf()
                        # (Line 6798) else{
                    if EUDElse()():
                        # (Line 6799) if(
                        _t379 = EUDIf()
                        # (Line 6800) Skin_Select[i] == 1
                        # (Line 6801) ){
                        if _t379(Skin_Select[i] == 1):
                            # (Line 6802) wwrite(0x665AC0 + 1696 + 244 * 2, 140);
                            f_wwrite(0x665AC0 + 1696 + 244 * 2, 140)
                            # (Line 6803) CreateUnit(1, (PVulture[i]), (8), (i));
                            # (Line 6804) }
                            DoActions(CreateUnit(1, (PVulture[i]), (8), (i)))
                            # (Line 6805) else{
                        if EUDElse()():
                            # (Line 6806) if(
                            _t380 = EUDIf()
                            # (Line 6807) Skin_Select[i] == 2
                            # (Line 6808) ){
                            if _t380(Skin_Select[i] == 2):
                                # (Line 6809) wwrite(0x665AC0 + 1696 + 244 * 2, 243);
                                f_wwrite(0x665AC0 + 1696 + 244 * 2, 243)
                                # (Line 6810) CreateUnit(1, (PVulture[i]), (8), (i));
                                # (Line 6811) }
                                DoActions(CreateUnit(1, (PVulture[i]), (8), (i)))
                                # (Line 6812) else{
                            if EUDElse()():
                                # (Line 6813) if(
                                _t381 = EUDIf()
                                # (Line 6814) Skin_Select[i] == 3
                                # (Line 6815) ){
                                if _t381(Skin_Select[i] == 3):
                                    # (Line 6816) wwrite(0x665AC0 + 1696 + 244 * 2, 38);
                                    f_wwrite(0x665AC0 + 1696 + 244 * 2, 38)
                                    # (Line 6817) CreateUnit(1, (PVulture[i]), (8), (i));
                                    # (Line 6818) }
                                    DoActions(CreateUnit(1, (PVulture[i]), (8), (i)))
                                    # (Line 6819) else{
                                if EUDElse()():
                                    # (Line 6820) if(
                                    _t382 = EUDIf()
                                    # (Line 6821) Skin_Select[i] == 4
                                    # (Line 6822) ){
                                    if _t382(Skin_Select[i] == 4):
                                        # (Line 6823) wwrite(0x665AC0 + 1696 + 244 * 2, 256);
                                        f_wwrite(0x665AC0 + 1696 + 244 * 2, 256)
                                        # (Line 6824) bwrite(0x666778 + 14000 + 256 * 1, 10);
                                        f_bwrite(0x666778 + 14000 + 256 * 1, 10)
                                        # (Line 6825) dwwrite(0x666778 + 34000 + 256 * 4, 362);
                                        f_dwwrite(0x666778 + 34000 + 256 * 4, 362)
                                        # (Line 6826) CreateUnit(1, (PVulture[i]), (8), (i));
                                        # (Line 6827) }
                                        DoActions(CreateUnit(1, (PVulture[i]), (8), (i)))
                                        # (Line 6828) else{
                                    if EUDElse()():
                                        # (Line 6829) wwrite(0x665AC0 + 1696 + 244 * 2, 256);
                                        f_wwrite(0x665AC0 + 1696 + 244 * 2, 256)
                                        # (Line 6830) bwrite(0x666778 + 14000 + 256 * 1, 0);
                                        f_bwrite(0x666778 + 14000 + 256 * 1, 0)
                                        # (Line 6831) dwwrite(0x666778 + 34000 + 256 * 4, 86);
                                        f_dwwrite(0x666778 + 34000 + 256 * 4, 86)
                                        # (Line 6832) CreateUnit(1, (PVulture[i]), (8), (i));
                                        # (Line 6833) }
                                        DoActions(CreateUnit(1, (PVulture[i]), (8), (i)))
                                        # (Line 6834) }
                                    EUDEndIf()
                                    # (Line 6835) }
                                EUDEndIf()
                                # (Line 6836) }
                            EUDEndIf()
                            # (Line 6837) }
                        EUDEndIf()
                        # (Line 6838) if(
                    EUDEndIf()
                    _t383 = EUDIf()
                    # (Line 6839) Vulture_Booster[i] == 1
                    # (Line 6840) ){
                    if _t383(Vulture_Booster[i] == 1):
                        # (Line 6841) SetMemoryEPD(Vulture[i] + 0x034 / 4, SetTo, 1575);
                        # (Line 6842) wwrite_epd(Vulture[i] + 0x048 / 4,  0x048 % 4, 46);
                        DoActions(SetMemoryEPD(Vulture[i] + 0x034 // 4, SetTo, 1575))
                        f_wwrite_epd(Vulture[i] + 0x048 // 4, 0x048 % 4, 46)
                        # (Line 6843) bwrite_epd(Vulture[i] + 0x022 / 4,  0x022 % 4, 60);
                        f_bwrite_epd(Vulture[i] + 0x022 // 4, 0x022 % 4, 60)
                        # (Line 6844) if(
                        _t384 = EUDIf()
                        # (Line 6845) Memory(0x57F1B0, Exactly, (i))
                        # (Line 6846) ){
                        if _t384(Memory(0x57F1B0, Exactly, (i))):
                            # (Line 6847) btnPtr, btnPos = EPD(0x5187EC) + 57, 5 * 5;
                            _SV([btnPtr, btnPos], [EPD(0x5187EC) + 57, 5 * 5])
                            # (Line 6848) dwadd_epd(btnPtr, 0);
                            f_dwadd_epd(btnPtr, 0)
                            # (Line 6849) btnPos += epdread_epd(btnPtr);
                            btnPos.__iadd__(f_epdread_epd(btnPtr))
                            # (Line 6850) oldCP = getcurpl();
                            oldCP << (f_getcurpl())
                            # (Line 6851) DoActions(list(
                            # (Line 6852) SetMemory(0x6509B0, SetTo, btnPos),
                            # (Line 6853) SetDeaths(CurrentPlayer, SetTo, 24576007, 0),
                            # (Line 6854) SetMemory(0x6509B0, Add, 1),
                            # (Line 6855) SetDeaths(CurrentPlayer, SetTo, 4361824, 0),
                            # (Line 6856) SetMemory(0x6509B0, Add, 1),
                            # (Line 6857) SetDeaths(CurrentPlayer, SetTo, 4338864, 0),
                            # (Line 6858) SetMemory(0x6509B0, Add, 1),
                            # (Line 6859) SetDeaths(CurrentPlayer, SetTo, 327685, 0),
                            # (Line 6860) SetMemory(0x6509B0, Add, 1),
                            # (Line 6861) SetDeaths(CurrentPlayer, SetTo, 1396, 0),
                            # (Line 6862) SetMemory(0x6509B0, SetTo, oldCP),
                            # (Line 6863) ));
                            DoActions(FlattenList([SetMemory(0x6509B0, SetTo, btnPos), SetDeaths(CurrentPlayer, SetTo, 24576007, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 4361824, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 4338864, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 327685, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 1396, 0), SetMemory(0x6509B0, SetTo, oldCP)]))
                            # (Line 6864) }
                            # (Line 6865) }
                        EUDEndIf()
                        # (Line 6866) else{
                    if EUDElse()():
                        # (Line 6867) SetMemoryEPD(Vulture[i] + 0x034 / 4, SetTo, 1050);
                        # (Line 6868) wwrite_epd(Vulture[i] + 0x048 / 4,  0x048 % 4, 23);
                        DoActions(SetMemoryEPD(Vulture[i] + 0x034 // 4, SetTo, 1050))
                        f_wwrite_epd(Vulture[i] + 0x048 // 4, 0x048 % 4, 23)
                        # (Line 6869) bwrite_epd(Vulture[i] + 0x022 / 4,  0x022 % 4, 28);
                        f_bwrite_epd(Vulture[i] + 0x022 // 4, 0x022 % 4, 28)
                        # (Line 6870) if(
                        _t385 = EUDIf()
                        # (Line 6871) Memory(0x57F1B0, Exactly, (i))
                        # (Line 6872) ){
                        if _t385(Memory(0x57F1B0, Exactly, (i))):
                            # (Line 6873) btnPtr, btnPos = EPD(0x5187EC) + 57, 5 * 5;
                            _SV([btnPtr, btnPos], [EPD(0x5187EC) + 57, 5 * 5])
                            # (Line 6874) dwadd_epd(btnPtr, 0);
                            f_dwadd_epd(btnPtr, 0)
                            # (Line 6875) btnPos += epdread_epd(btnPtr);
                            btnPos.__iadd__(f_epdread_epd(btnPtr))
                            # (Line 6876) oldCP = getcurpl();
                            oldCP << (f_getcurpl())
                            # (Line 6877) DoActions(list(
                            # (Line 6878) SetMemory(0x6509B0, SetTo, btnPos),
                            # (Line 6879) SetDeaths(CurrentPlayer, SetTo, 24510471, 0),
                            # (Line 6880) SetMemory(0x6509B0, Add, 1),
                            # (Line 6881) SetDeaths(CurrentPlayer, SetTo, 4361824, 0),
                            # (Line 6882) SetMemory(0x6509B0, Add, 1),
                            # (Line 6883) SetDeaths(CurrentPlayer, SetTo, 4338864, 0),
                            # (Line 6884) SetMemory(0x6509B0, Add, 1),
                            # (Line 6885) SetDeaths(CurrentPlayer, SetTo, 327685, 0),
                            # (Line 6886) SetMemory(0x6509B0, Add, 1),
                            # (Line 6887) SetDeaths(CurrentPlayer, SetTo, 1395, 0),
                            # (Line 6888) SetMemory(0x6509B0, SetTo, oldCP),
                            # (Line 6889) ));
                            DoActions(FlattenList([SetMemory(0x6509B0, SetTo, btnPos), SetDeaths(CurrentPlayer, SetTo, 24510471, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 4361824, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 4338864, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 327685, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 1395, 0), SetMemory(0x6509B0, SetTo, oldCP)]))
                            # (Line 6890) }
                            # (Line 6891) }
                        EUDEndIf()
                        # (Line 6892) hotkeyUnitEPD(Vulture[i],i,1,0);
                    EUDEndIf()
                    f_hotkeyUnitEPD(Vulture[i], i, 1, 0)
                    # (Line 6893) }
                    # (Line 6894) }
                EUDEndIf()
                # (Line 6895) }
                EUDSetContinuePoint()
                _t372()
            EUDEndWhile()
            # (Line 6896) }
        EUDEndIf()
        # (Line 6897) EUDEndPlayerLoop();
    EUDEndIf()
    EUDEndPlayerLoop()
    # (Line 6899) }
    # (Line 6900) function afterTriggerExec() {

@EUDFunc
def afterTriggerExec():
    # (Line 6901) sca.Exec();
    sca.Exec()
    # (Line 6902) scaload.scaloading();
    scaload.f_scaloading()
    # (Line 6904) EUDPlayerLoop()();
    EUDPlayerLoop()()
    # (Line 6905) if (getcurpl() == 0 || getcurpl() == 1 || getcurpl() == 2 || getcurpl() == 3 || getcurpl() == 4 || getcurpl() == 5) {
    if EUDIf()(EUDSCOr()(f_getcurpl() == 0)(f_getcurpl() == 1)(f_getcurpl() == 2)(f_getcurpl() == 3)(f_getcurpl() == 4)(f_getcurpl() == 5)()):
        # (Line 6906) if(
        _t2 = EUDIf()
        # (Line 6907) Deaths((13), (10), 1, (132)) &&
        # (Line 6908) Bring((13), (10), 0, (120), (64))
        # (Line 6909) ){
        if _t2(EUDSCAnd()(Deaths((13), (10), 1, (132)))(Bring((13), (10), 0, (120), (64)))()):
            # (Line 6910) MachineShop[getcurpl()] = epdread_epd(EPD(0x628438));
            _ARRW(MachineShop, f_getcurpl()) << (f_epdread_epd(EPD(0x628438)))
            # (Line 6911) CreateUnitWithProperties(1, (120), (46), (13), UnitProperty(hitpoint = 100, shield = 100, energy = 50, resource = 0, hanger = 0, cloaked = False, burrowed = False, intransit = False, hallucinated = False, invincible = True));
            # (Line 6912) hotkeyUnitEPD(MachineShop[getcurpl()],getcurpl(),2,0);
            DoActions(CreateUnitWithProperties(1, (120), (46), (13), UnitProperty(hitpoint=100, shield=100, energy=50, resource=0, hanger=0, cloaked=False, burrowed=False, intransit=False, hallucinated=False, invincible=True)))
            f_hotkeyUnitEPD(MachineShop[f_getcurpl()], f_getcurpl(), 2, 0)
            # (Line 6913) hotkeyUnitEPD(MachineShop[getcurpl()],getcurpl(),3,0);
            f_hotkeyUnitEPD(MachineShop[f_getcurpl()], f_getcurpl(), 3, 0)
            # (Line 6914) }
            # (Line 6915) if(
        EUDEndIf()
        _t3 = EUDIf()
        # (Line 6916) MachineShop[getcurpl()] > 0
        # (Line 6917) ){
        if _t3(MachineShop[f_getcurpl()] <= 0, neg=True):
            # (Line 6919) if(
            _t4 = EUDIf()
            # (Line 6920) Deaths((13), (10), 1, (132)) &&
            # (Line 6921) Memory(0x57F1B0, Exactly, (getcurpl()))
            # (Line 6922) ){
            if _t4(EUDSCAnd()(Deaths((13), (10), 1, (132)))(Memory(0x57F1B0, Exactly, (f_getcurpl())))()):
                # (Line 6923) wwrite_epd(MachineShop[getcurpl()] + 0x094 / 4,  0x094 % 4, 121);
                f_wwrite_epd(MachineShop[f_getcurpl()] + 0x094 // 4, 0x094 % 4, 121)
                # (Line 6924) }
                # (Line 6927) if(
            EUDEndIf()
            _t5 = EUDIf()
            # (Line 6928) BuildCheckEPD(MachineShop[getcurpl()],0)
            # (Line 6929) ){
            if _t5(BuildCheckEPD(MachineShop[f_getcurpl()], 0)):
                # (Line 6930) BuildResetEPD(MachineShop[getcurpl()]);
                BuildResetEPD(MachineShop[f_getcurpl()])
                # (Line 6931) if(
                _t6 = EUDIf()
                # (Line 6932) SkipCooltime[getcurpl()] == 0
                # (Line 6933) ){
                if _t6(SkipCooltime[f_getcurpl()] == 0):
                    # (Line 6934) SkipCooltime[getcurpl()] = 5;
                    _ARRW(SkipCooltime, f_getcurpl()) << (5)
                    # (Line 6935) if(
                    _t7 = EUDIf()
                    # (Line 6936) Deaths((6), (0), 1, (193))
                    # (Line 6937) ){
                    if _t7(Deaths((6), (0), 1, (193))):
                        # (Line 6938) PlayWAV("sound\\Bullet\\LASRHIT1.wav");
                        # (Line 6939) SetDeaths((6), (9), 1, (193));
                        DoActions(PlayWAV("sound\\Bullet\\LASRHIT1.wav"))
                        # (Line 6940) RemoveUnit((19), (18));
                        DoActions(SetDeaths((6), (9), 1, (193)))
                        # (Line 6941) RemoveUnitAt(255, (229), (24), (6));
                        DoActions(RemoveUnit((19), (18)))
                        # (Line 6942) if(
                        DoActions(RemoveUnitAt(255, (229), (24), (6)))
                        _t8 = EUDIf()
                        # (Line 6943) Switch((1), (3))
                        # (Line 6944) ){
                        if _t8(Switch((1), (3))):
                            # (Line 6945) const ChangeStageBeforeStart = [0, 0, 0, 0, 0, 0, 0, 0];
                            ChangeStageBeforeStart = _ARR(FlattenList([0, 0, 0, 0, 0, 0, 0, 0]))
                            # (Line 6946) ChangeStageBeforeStart[getcurpl()] = dwread_epd(EPD(0x58A364 + 48 * 193 + 4 * 6));
                            _ARRW(ChangeStageBeforeStart, f_getcurpl()) << (f_dwread_epd(EPD(0x58A364 + 48 * 193 + 4 * 6)))
                            # (Line 6947) tct.chatAnnouncement("\x04", ChangeStageBeforeStart[getcurpl()], "");
                            tct.f_chatAnnouncement("\x04", ChangeStageBeforeStart[f_getcurpl()], "")
                            # (Line 6948) }
                            # (Line 6949) }
                        EUDEndIf()
                        # (Line 6950) else{
                    if EUDElse()():
                        # (Line 6951) DisplayText("\n\n\n\n\n\n\x13\x08[ 오류 ] \x04첫 스테이지입니다.\n\n\n\n", (0));
                        # (Line 6952) PlayWAV("sound\\Misc\\PError.WAV");
                        DoActions(DisplayText("\n\n\n\n\n\n\x13\x08[ 오류 ] \x04첫 스테이지입니다.\n\n\n\n", (0)))
                        # (Line 6953) }
                        DoActions(PlayWAV("sound\\Misc\\PError.WAV"))
                        # (Line 6954) }
                    EUDEndIf()
                    # (Line 6955) else{
                if EUDElse()():
                    # (Line 6956) PlayWAV("staredit\\wav\\no sound.wav");
                    # (Line 6957) }
                    DoActions(PlayWAV("staredit\\wav\\no sound.wav"))
                    # (Line 6958) }
                EUDEndIf()
                # (Line 6961) if(
            EUDEndIf()
            _t9 = EUDIf()
            # (Line 6962) BuildCheckEPD(MachineShop[getcurpl()],1)
            # (Line 6963) ){
            if _t9(BuildCheckEPD(MachineShop[f_getcurpl()], 1)):
                # (Line 6964) BuildResetEPD(MachineShop[getcurpl()]);
                BuildResetEPD(MachineShop[f_getcurpl()])
                # (Line 6965) if(
                _t10 = EUDIf()
                # (Line 6966) SkipCooltime[getcurpl()] == 0
                # (Line 6967) ){
                if _t10(SkipCooltime[f_getcurpl()] == 0):
                    # (Line 6968) SkipCooltime[getcurpl()] = 5;
                    _ARRW(SkipCooltime, f_getcurpl()) << (5)
                    # (Line 6969) PlayWAV("sound\\Bullet\\LASRHIT1.wav");
                    # (Line 6970) SetDeaths((6), (8), 1, (193));
                    DoActions(PlayWAV("sound\\Bullet\\LASRHIT1.wav"))
                    # (Line 6971) RemoveUnit((19), (18));
                    DoActions(SetDeaths((6), (8), 1, (193)))
                    # (Line 6972) RemoveUnitAt(255, (229), (24), (6));
                    DoActions(RemoveUnit((19), (18)))
                    # (Line 6973) if(
                    DoActions(RemoveUnitAt(255, (229), (24), (6)))
                    _t11 = EUDIf()
                    # (Line 6974) Switch((1), (3))
                    # (Line 6975) ){
                    if _t11(Switch((1), (3))):
                        # (Line 6976) const ChangeStageBeforeStart = [0, 0, 0, 0, 0, 0, 0, 0];
                        ChangeStageBeforeStart = _ARR(FlattenList([0, 0, 0, 0, 0, 0, 0, 0]))
                        # (Line 6977) ChangeStageBeforeStart[getcurpl()] = dwread_epd(EPD(0x58A364 + 48 * 193 + 4 * 6));
                        _ARRW(ChangeStageBeforeStart, f_getcurpl()) << (f_dwread_epd(EPD(0x58A364 + 48 * 193 + 4 * 6)))
                        # (Line 6978) tct.chatAnnouncement("\x04", ChangeStageBeforeStart[getcurpl()], "");
                        tct.f_chatAnnouncement("\x04", ChangeStageBeforeStart[f_getcurpl()], "")
                        # (Line 6979) }
                        # (Line 6980) }
                    EUDEndIf()
                    # (Line 6981) else{
                if EUDElse()():
                    # (Line 6982) PlayWAV("staredit\\wav\\no sound.wav");
                    # (Line 6983) }
                    DoActions(PlayWAV("staredit\\wav\\no sound.wav"))
                    # (Line 6984) }
                EUDEndIf()
                # (Line 6987) if(
            EUDEndIf()
            _t12 = EUDIf()
            # (Line 6988) BuildCheckEPD(MachineShop[getcurpl()],3)
            # (Line 6989) ){
            if _t12(BuildCheckEPD(MachineShop[f_getcurpl()], 3)):
                # (Line 6990) BuildResetEPD(MachineShop[getcurpl()]);
                BuildResetEPD(MachineShop[f_getcurpl()])
                # (Line 6991) if(
                _t13 = EUDIf()
                # (Line 6992) SkipCooltime[getcurpl()] == 0
                # (Line 6993) ){
                if _t13(SkipCooltime[f_getcurpl()] == 0):
                    # (Line 6994) SkipCooltime[getcurpl()] = 5;
                    _ARRW(SkipCooltime, f_getcurpl()) << (5)
                    # (Line 6995) if(
                    _t14 = EUDIf()
                    # (Line 6996) ControlDirection == 0
                    # (Line 6997) ){
                    if _t14(ControlDirection == 0):
                        # (Line 6998) ControlDirection = 1;
                        ControlDirection << (1)
                        # (Line 6999) EUDPlayerLoop()();
                        EUDPlayerLoop()()
                        # (Line 7000) if (getcurpl() == 0 || getcurpl() == 1 || getcurpl() == 2 || getcurpl() == 3 || getcurpl() == 4 || getcurpl() == 5) {
                        if EUDIf()(EUDSCOr()(f_getcurpl() == 0)(f_getcurpl() == 1)(f_getcurpl() == 2)(f_getcurpl() == 3)(f_getcurpl() == 4)(f_getcurpl() == 5)()):
                            # (Line 7001) DisplayText("\x13\x04다음부터 벌쳐가 \x07오른쪽\x04에서 \x17생산\x04됩니다.", (0));
                            # (Line 7002) PlayWAV("sound\\Misc\\PBldgPlc.wav");
                            DoActions(DisplayText("\x13\x04다음부터 벌쳐가 \x07오른쪽\x04에서 \x17생산\x04됩니다.", (0)))
                            # (Line 7003) }
                            DoActions(PlayWAV("sound\\Misc\\PBldgPlc.wav"))
                            # (Line 7004) EUDEndPlayerLoop();
                        EUDEndIf()
                        EUDEndPlayerLoop()
                        # (Line 7005) }
                        # (Line 7006) else{
                    if EUDElse()():
                        # (Line 7007) ControlDirection = 0;
                        ControlDirection << (0)
                        # (Line 7008) EUDPlayerLoop()();
                        EUDPlayerLoop()()
                        # (Line 7009) if (getcurpl() == 0 || getcurpl() == 1 || getcurpl() == 2 || getcurpl() == 3 || getcurpl() == 4 || getcurpl() == 5) {
                        if EUDIf()(EUDSCOr()(f_getcurpl() == 0)(f_getcurpl() == 1)(f_getcurpl() == 2)(f_getcurpl() == 3)(f_getcurpl() == 4)(f_getcurpl() == 5)()):
                            # (Line 7010) DisplayText("\x13\x04다음부터 벌쳐가 \x07왼쪽\x04에서 \x17생산\x04됩니다.", (0));
                            # (Line 7011) PlayWAV("sound\\Misc\\PBldgPlc.wav");
                            DoActions(DisplayText("\x13\x04다음부터 벌쳐가 \x07왼쪽\x04에서 \x17생산\x04됩니다.", (0)))
                            # (Line 7012) }
                            DoActions(PlayWAV("sound\\Misc\\PBldgPlc.wav"))
                            # (Line 7013) EUDEndPlayerLoop();
                        EUDEndIf()
                        EUDEndPlayerLoop()
                        # (Line 7014) }
                        # (Line 7015) }
                    EUDEndIf()
                    # (Line 7016) else{
                if EUDElse()():
                    # (Line 7017) PlayWAV("staredit\\wav\\no sound.wav");
                    # (Line 7018) }
                    DoActions(PlayWAV("staredit\\wav\\no sound.wav"))
                    # (Line 7019) }
                EUDEndIf()
                # (Line 7022) if(
            EUDEndIf()
            _t17 = EUDIf()
            # (Line 7023) BuildCheckEPD(MachineShop[getcurpl()],2)
            # (Line 7024) ){
            if _t17(BuildCheckEPD(MachineShop[f_getcurpl()], 2)):
                # (Line 7025) BuildResetEPD(MachineShop[getcurpl()]);
                BuildResetEPD(MachineShop[f_getcurpl()])
                # (Line 7026) if(
                _t18 = EUDIf()
                # (Line 7027) SkipCooltime[getcurpl()] == 0
                # (Line 7028) ){
                if _t18(SkipCooltime[f_getcurpl()] == 0):
                    # (Line 7029) SkipCooltime[getcurpl()] = 5;
                    _ARRW(SkipCooltime, f_getcurpl()) << (5)
                    # (Line 7030) if(
                    _t19 = EUDIf()
                    # (Line 7031) TrainingMode == 0
                    # (Line 7032) ){
                    if _t19(TrainingMode == 0):
                        # (Line 7033) TrainingMode = 1;
                        TrainingMode << (1)
                        # (Line 7034) EUDPlayerLoop()();
                        EUDPlayerLoop()()
                        # (Line 7035) if (getcurpl() == 0 || getcurpl() == 1 || getcurpl() == 2 || getcurpl() == 3 || getcurpl() == 4 || getcurpl() == 5) {
                        if EUDIf()(EUDSCOr()(f_getcurpl() == 0)(f_getcurpl() == 1)(f_getcurpl() == 2)(f_getcurpl() == 3)(f_getcurpl() == 4)(f_getcurpl() == 5)()):
                            # (Line 7036) DisplayText("\x13\x07트레이닝 모드\x04가 \x1F활성화 \x04되었습니다.", (0));
                            # (Line 7037) PlayWAV("sound\\Misc\\PBldgPlc.wav");
                            DoActions(DisplayText("\x13\x07트레이닝 모드\x04가 \x1F활성화 \x04되었습니다.", (0)))
                            # (Line 7038) }
                            DoActions(PlayWAV("sound\\Misc\\PBldgPlc.wav"))
                            # (Line 7039) EUDEndPlayerLoop();
                        EUDEndIf()
                        EUDEndPlayerLoop()
                        # (Line 7040) }
                        # (Line 7041) else{
                    if EUDElse()():
                        # (Line 7042) TrainingMode = 0;
                        TrainingMode << (0)
                        # (Line 7043) EUDPlayerLoop()();
                        EUDPlayerLoop()()
                        # (Line 7044) if (getcurpl() == 0 || getcurpl() == 1 || getcurpl() == 2 || getcurpl() == 3 || getcurpl() == 4 || getcurpl() == 5) {
                        if EUDIf()(EUDSCOr()(f_getcurpl() == 0)(f_getcurpl() == 1)(f_getcurpl() == 2)(f_getcurpl() == 3)(f_getcurpl() == 4)(f_getcurpl() == 5)()):
                            # (Line 7045) DisplayText("\x13\x07트레이닝 모드\x04가 \x08비활성화 \x04되었습니다.", (0));
                            # (Line 7046) PlayWAV("sound\\Misc\\PBldgPlc.wav");
                            DoActions(DisplayText("\x13\x07트레이닝 모드\x04가 \x08비활성화 \x04되었습니다.", (0)))
                            # (Line 7047) }
                            DoActions(PlayWAV("sound\\Misc\\PBldgPlc.wav"))
                            # (Line 7048) EUDEndPlayerLoop();
                        EUDEndIf()
                        EUDEndPlayerLoop()
                        # (Line 7049) }
                        # (Line 7050) }
                    EUDEndIf()
                    # (Line 7051) else{
                if EUDElse()():
                    # (Line 7052) PlayWAV("staredit\\wav\\no sound.wav");
                    # (Line 7053) }
                    DoActions(PlayWAV("staredit\\wav\\no sound.wav"))
                    # (Line 7054) }
                EUDEndIf()
                # (Line 7057) if(
            EUDEndIf()
            _t22 = EUDIf()
            # (Line 7058) BuildCheckEPD(MachineShop[getcurpl()],5)
            # (Line 7059) ){
            if _t22(BuildCheckEPD(MachineShop[f_getcurpl()], 5)):
                # (Line 7060) BuildResetEPD(MachineShop[getcurpl()]);
                BuildResetEPD(MachineShop[f_getcurpl()])
                # (Line 7061) if(
                _t23 = EUDIf()
                # (Line 7062) SkipCooltime[getcurpl()] == 0
                # (Line 7063) ){
                if _t23(SkipCooltime[f_getcurpl()] == 0):
                    # (Line 7064) SkipCooltime[getcurpl()] = 5;
                    _ARRW(SkipCooltime, f_getcurpl()) << (5)
                    # (Line 7065) Roulette_Again += 137;
                    Roulette_Again.__iadd__(137)
                    # (Line 7066) EUDPlayerLoop()();
                    EUDPlayerLoop()()
                    # (Line 7067) if (getcurpl() == 0 || getcurpl() == 1 || getcurpl() == 2 || getcurpl() == 3 || getcurpl() == 4 || getcurpl() == 5) {
                    if EUDIf()(EUDSCOr()(f_getcurpl() == 0)(f_getcurpl() == 1)(f_getcurpl() == 2)(f_getcurpl() == 3)(f_getcurpl() == 4)(f_getcurpl() == 5)()):
                        # (Line 7068) DisplayText("\x13\x07룰렛 초기화 기회\x04를 \x1F획득\x04하였습니다.", (0));
                        # (Line 7069) PlayWAV("sound\\Misc\\TRescue.wav");
                        DoActions(DisplayText("\x13\x07룰렛 초기화 기회\x04를 \x1F획득\x04하였습니다.", (0)))
                        # (Line 7070) }
                        DoActions(PlayWAV("sound\\Misc\\TRescue.wav"))
                        # (Line 7071) EUDEndPlayerLoop();
                    EUDEndIf()
                    EUDEndPlayerLoop()
                    # (Line 7072) }
                    # (Line 7073) else{
                if EUDElse()():
                    # (Line 7074) PlayWAV("staredit\\wav\\no sound.wav");
                    # (Line 7075) }
                    DoActions(PlayWAV("staredit\\wav\\no sound.wav"))
                    # (Line 7076) }
                EUDEndIf()
                # (Line 7078) }
            EUDEndIf()
            # (Line 7079) }
        EUDEndIf()
        # (Line 7080) EUDEndPlayerLoop();
    EUDEndIf()
    EUDEndPlayerLoop()
    # (Line 7081) EUDPlayerLoop()();
    EUDPlayerLoop()()
    # (Line 7082) if (getcurpl() == 0 || getcurpl() == 1 || getcurpl() == 2 || getcurpl() == 3 || getcurpl() == 4 || getcurpl() == 5) {
    if EUDIf()(EUDSCOr()(f_getcurpl() == 0)(f_getcurpl() == 1)(f_getcurpl() == 2)(f_getcurpl() == 3)(f_getcurpl() == 4)(f_getcurpl() == 5)()):
        # (Line 7084) if(
        _t26 = EUDIf()
        # (Line 7085) SkipCooltime[getcurpl()] >= 1
        # (Line 7086) ){
        if _t26(SkipCooltime[f_getcurpl()] >= 1):
            # (Line 7087) SkipCooltime[getcurpl()] -= 1;
            _ARRW(SkipCooltime, f_getcurpl()).__isub__(1)
            # (Line 7088) }
            # (Line 7090) if(
        EUDEndIf()
        _t27 = EUDIf()
        # (Line 7091) Vulture[getcurpl()] > 0
        # (Line 7092) ){
        if _t27(Vulture[f_getcurpl()] <= 0, neg=True):
            # (Line 7094) if(
            _t28 = EUDIf()
            # (Line 7095) BuildCheckEPD(Vulture[getcurpl()],5)
            # (Line 7096) ){
            if _t28(BuildCheckEPD(Vulture[f_getcurpl()], 5)):
                # (Line 7097) BuildResetEPD(Vulture[getcurpl()]);
                BuildResetEPD(Vulture[f_getcurpl()])
                # (Line 7098) if(
                _t29 = EUDIf()
                # (Line 7099) SkipCooltime[getcurpl()] == 0
                # (Line 7100) ){
                if _t29(SkipCooltime[f_getcurpl()] == 0):
                    # (Line 7101) SkipCooltime[getcurpl()] = 15;
                    _ARRW(SkipCooltime, f_getcurpl()) << (15)
                    # (Line 7102) if(
                    _t30 = EUDIf()
                    # (Line 7103) Vulture_Booster[getcurpl()] == 0
                    # (Line 7104) ){
                    if _t30(Vulture_Booster[f_getcurpl()] == 0):
                        # (Line 7105) Vulture_Booster[getcurpl()] = 1;
                        _ARRW(Vulture_Booster, f_getcurpl()) << (1)
                        # (Line 7106) SetMemoryEPD(Vulture[getcurpl()] + 0x034 / 4, SetTo, 1575);
                        # (Line 7107) wwrite_epd(Vulture[getcurpl()] + 0x048 / 4,  0x048 % 4, 46);
                        DoActions(SetMemoryEPD(Vulture[f_getcurpl()] + 0x034 // 4, SetTo, 1575))
                        f_wwrite_epd(Vulture[f_getcurpl()] + 0x048 // 4, 0x048 % 4, 46)
                        # (Line 7108) bwrite_epd(Vulture[getcurpl()] + 0x022 / 4,  0x022 % 4, 55);
                        f_bwrite_epd(Vulture[f_getcurpl()] + 0x022 // 4, 0x022 % 4, 55)
                        # (Line 7109) DisplayText("\n\n\n\n\n\n\x13\x04부스터 활성화\n\n\n\n", (0));
                        # (Line 7110) PlayWAV("staredit\\wav\\AfterOn.wav");
                        DoActions(DisplayText("\n\n\n\n\n\n\x13\x04부스터 활성화\n\n\n\n", (0)))
                        # (Line 7111) if(
                        DoActions(PlayWAV("staredit\\wav\\AfterOn.wav"))
                        _t31 = EUDIf()
                        # (Line 7112) Memory(0x57F1B0, Exactly, (getcurpl()))
                        # (Line 7113) ){
                        if _t31(Memory(0x57F1B0, Exactly, (f_getcurpl()))):
                            # (Line 7114) btnPtr, btnPos = EPD(0x5187EC) + 0, 5 * 5;
                            _SV([btnPtr, btnPos], [EPD(0x5187EC) + 0, 5 * 5])
                            # (Line 7115) dwadd_epd(btnPtr, 0);
                            f_dwadd_epd(btnPtr, 0)
                            # (Line 7116) btnPos += epdread_epd(btnPtr);
                            btnPos.__iadd__(f_epdread_epd(btnPtr))
                            # (Line 7117) oldCP = getcurpl();
                            oldCP << (f_getcurpl())
                            # (Line 7118) DoActions(list(
                            # (Line 7119) SetMemory(0x6509B0, SetTo, btnPos),
                            # (Line 7120) SetDeaths(CurrentPlayer, SetTo, 24576007, 0),
                            # (Line 7121) SetMemory(0x6509B0, Add, 1),
                            # (Line 7122) SetDeaths(CurrentPlayer, SetTo, 4361824, 0),
                            # (Line 7123) SetMemory(0x6509B0, Add, 1),
                            # (Line 7124) SetDeaths(CurrentPlayer, SetTo, 4338864, 0),
                            # (Line 7125) SetMemory(0x6509B0, Add, 1),
                            # (Line 7126) SetDeaths(CurrentPlayer, SetTo, 327685, 0),
                            # (Line 7127) SetMemory(0x6509B0, Add, 1),
                            # (Line 7128) SetDeaths(CurrentPlayer, SetTo, 1396, 0),
                            # (Line 7129) SetMemory(0x6509B0, SetTo, oldCP),
                            # (Line 7130) ));
                            DoActions(FlattenList([SetMemory(0x6509B0, SetTo, btnPos), SetDeaths(CurrentPlayer, SetTo, 24576007, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 4361824, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 4338864, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 327685, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 1396, 0), SetMemory(0x6509B0, SetTo, oldCP)]))
                            # (Line 7131) btnPtr, btnPos = EPD(0x5187EC) + 3, 5 * 5;
                            _SV([btnPtr, btnPos], [EPD(0x5187EC) + 3, 5 * 5])
                            # (Line 7132) dwadd_epd(btnPtr, 0);
                            f_dwadd_epd(btnPtr, 0)
                            # (Line 7133) btnPos += epdread_epd(btnPtr);
                            btnPos.__iadd__(f_epdread_epd(btnPtr))
                            # (Line 7134) oldCP = getcurpl();
                            oldCP << (f_getcurpl())
                            # (Line 7135) DoActions(list(
                            # (Line 7136) SetMemory(0x6509B0, SetTo, btnPos),
                            # (Line 7137) SetDeaths(CurrentPlayer, SetTo, 24576007, 0),
                            # (Line 7138) SetMemory(0x6509B0, Add, 1),
                            # (Line 7139) SetDeaths(CurrentPlayer, SetTo, 4361824, 0),
                            # (Line 7140) SetMemory(0x6509B0, Add, 1),
                            # (Line 7141) SetDeaths(CurrentPlayer, SetTo, 4338864, 0),
                            # (Line 7142) SetMemory(0x6509B0, Add, 1),
                            # (Line 7143) SetDeaths(CurrentPlayer, SetTo, 327685, 0),
                            # (Line 7144) SetMemory(0x6509B0, Add, 1),
                            # (Line 7145) SetDeaths(CurrentPlayer, SetTo, 1396, 0),
                            # (Line 7146) SetMemory(0x6509B0, SetTo, oldCP),
                            # (Line 7147) ));
                            DoActions(FlattenList([SetMemory(0x6509B0, SetTo, btnPos), SetDeaths(CurrentPlayer, SetTo, 24576007, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 4361824, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 4338864, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 327685, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 1396, 0), SetMemory(0x6509B0, SetTo, oldCP)]))
                            # (Line 7148) btnPtr, btnPos = EPD(0x5187EC) + 6, 5 * 5;
                            _SV([btnPtr, btnPos], [EPD(0x5187EC) + 6, 5 * 5])
                            # (Line 7149) dwadd_epd(btnPtr, 0);
                            f_dwadd_epd(btnPtr, 0)
                            # (Line 7150) btnPos += epdread_epd(btnPtr);
                            btnPos.__iadd__(f_epdread_epd(btnPtr))
                            # (Line 7151) oldCP = getcurpl();
                            oldCP << (f_getcurpl())
                            # (Line 7152) DoActions(list(
                            # (Line 7153) SetMemory(0x6509B0, SetTo, btnPos),
                            # (Line 7154) SetDeaths(CurrentPlayer, SetTo, 24576007, 0),
                            # (Line 7155) SetMemory(0x6509B0, Add, 1),
                            # (Line 7156) SetDeaths(CurrentPlayer, SetTo, 4361824, 0),
                            # (Line 7157) SetMemory(0x6509B0, Add, 1),
                            # (Line 7158) SetDeaths(CurrentPlayer, SetTo, 4338864, 0),
                            # (Line 7159) SetMemory(0x6509B0, Add, 1),
                            # (Line 7160) SetDeaths(CurrentPlayer, SetTo, 327685, 0),
                            # (Line 7161) SetMemory(0x6509B0, Add, 1),
                            # (Line 7162) SetDeaths(CurrentPlayer, SetTo, 1396, 0),
                            # (Line 7163) SetMemory(0x6509B0, SetTo, oldCP),
                            # (Line 7164) ));
                            DoActions(FlattenList([SetMemory(0x6509B0, SetTo, btnPos), SetDeaths(CurrentPlayer, SetTo, 24576007, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 4361824, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 4338864, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 327685, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 1396, 0), SetMemory(0x6509B0, SetTo, oldCP)]))
                            # (Line 7165) btnPtr, btnPos = EPD(0x5187EC) + 21, 5 * 5;
                            _SV([btnPtr, btnPos], [EPD(0x5187EC) + 21, 5 * 5])
                            # (Line 7166) dwadd_epd(btnPtr, 0);
                            f_dwadd_epd(btnPtr, 0)
                            # (Line 7167) btnPos += epdread_epd(btnPtr);
                            btnPos.__iadd__(f_epdread_epd(btnPtr))
                            # (Line 7168) oldCP = getcurpl();
                            oldCP << (f_getcurpl())
                            # (Line 7169) DoActions(list(
                            # (Line 7170) SetMemory(0x6509B0, SetTo, btnPos),
                            # (Line 7171) SetDeaths(CurrentPlayer, SetTo, 24576007, 0),
                            # (Line 7172) SetMemory(0x6509B0, Add, 1),
                            # (Line 7173) SetDeaths(CurrentPlayer, SetTo, 4361824, 0),
                            # (Line 7174) SetMemory(0x6509B0, Add, 1),
                            # (Line 7175) SetDeaths(CurrentPlayer, SetTo, 4338864, 0),
                            # (Line 7176) SetMemory(0x6509B0, Add, 1),
                            # (Line 7177) SetDeaths(CurrentPlayer, SetTo, 327685, 0),
                            # (Line 7178) SetMemory(0x6509B0, Add, 1),
                            # (Line 7179) SetDeaths(CurrentPlayer, SetTo, 1396, 0),
                            # (Line 7180) SetMemory(0x6509B0, SetTo, oldCP),
                            # (Line 7181) ));
                            DoActions(FlattenList([SetMemory(0x6509B0, SetTo, btnPos), SetDeaths(CurrentPlayer, SetTo, 24576007, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 4361824, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 4338864, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 327685, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 1396, 0), SetMemory(0x6509B0, SetTo, oldCP)]))
                            # (Line 7182) btnPtr, btnPos = EPD(0x5187EC) + 24, 5 * 5;
                            _SV([btnPtr, btnPos], [EPD(0x5187EC) + 24, 5 * 5])
                            # (Line 7183) dwadd_epd(btnPtr, 0);
                            f_dwadd_epd(btnPtr, 0)
                            # (Line 7184) btnPos += epdread_epd(btnPtr);
                            btnPos.__iadd__(f_epdread_epd(btnPtr))
                            # (Line 7185) oldCP = getcurpl();
                            oldCP << (f_getcurpl())
                            # (Line 7186) DoActions(list(
                            # (Line 7187) SetMemory(0x6509B0, SetTo, btnPos),
                            # (Line 7188) SetDeaths(CurrentPlayer, SetTo, 24576007, 0),
                            # (Line 7189) SetMemory(0x6509B0, Add, 1),
                            # (Line 7190) SetDeaths(CurrentPlayer, SetTo, 4361824, 0),
                            # (Line 7191) SetMemory(0x6509B0, Add, 1),
                            # (Line 7192) SetDeaths(CurrentPlayer, SetTo, 4338864, 0),
                            # (Line 7193) SetMemory(0x6509B0, Add, 1),
                            # (Line 7194) SetDeaths(CurrentPlayer, SetTo, 327685, 0),
                            # (Line 7195) SetMemory(0x6509B0, Add, 1),
                            # (Line 7196) SetDeaths(CurrentPlayer, SetTo, 1396, 0),
                            # (Line 7197) SetMemory(0x6509B0, SetTo, oldCP),
                            # (Line 7198) ));
                            DoActions(FlattenList([SetMemory(0x6509B0, SetTo, btnPos), SetDeaths(CurrentPlayer, SetTo, 24576007, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 4361824, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 4338864, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 327685, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 1396, 0), SetMemory(0x6509B0, SetTo, oldCP)]))
                            # (Line 7199) btnPtr, btnPos = EPD(0x5187EC) + 57, 5 * 5;
                            _SV([btnPtr, btnPos], [EPD(0x5187EC) + 57, 5 * 5])
                            # (Line 7200) dwadd_epd(btnPtr, 0);
                            f_dwadd_epd(btnPtr, 0)
                            # (Line 7201) btnPos += epdread_epd(btnPtr);
                            btnPos.__iadd__(f_epdread_epd(btnPtr))
                            # (Line 7202) oldCP = getcurpl();
                            oldCP << (f_getcurpl())
                            # (Line 7203) DoActions(list(
                            # (Line 7204) SetMemory(0x6509B0, SetTo, btnPos),
                            # (Line 7205) SetDeaths(CurrentPlayer, SetTo, 24576007, 0),
                            # (Line 7206) SetMemory(0x6509B0, Add, 1),
                            # (Line 7207) SetDeaths(CurrentPlayer, SetTo, 4361824, 0),
                            # (Line 7208) SetMemory(0x6509B0, Add, 1),
                            # (Line 7209) SetDeaths(CurrentPlayer, SetTo, 4338864, 0),
                            # (Line 7210) SetMemory(0x6509B0, Add, 1),
                            # (Line 7211) SetDeaths(CurrentPlayer, SetTo, 327685, 0),
                            # (Line 7212) SetMemory(0x6509B0, Add, 1),
                            # (Line 7213) SetDeaths(CurrentPlayer, SetTo, 1396, 0),
                            # (Line 7214) SetMemory(0x6509B0, SetTo, oldCP),
                            # (Line 7215) ));
                            DoActions(FlattenList([SetMemory(0x6509B0, SetTo, btnPos), SetDeaths(CurrentPlayer, SetTo, 24576007, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 4361824, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 4338864, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 327685, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 1396, 0), SetMemory(0x6509B0, SetTo, oldCP)]))
                            # (Line 7216) }
                            # (Line 7217) }
                        EUDEndIf()
                        # (Line 7218) else{
                    if EUDElse()():
                        # (Line 7219) Vulture_Booster[getcurpl()] = 0;
                        _ARRW(Vulture_Booster, f_getcurpl()) << (0)
                        # (Line 7220) SetMemoryEPD(Vulture[getcurpl()] + 0x034 / 4, SetTo, 1050);
                        # (Line 7221) wwrite_epd(Vulture[getcurpl()] + 0x048 / 4,  0x048 % 4, 23);
                        DoActions(SetMemoryEPD(Vulture[f_getcurpl()] + 0x034 // 4, SetTo, 1050))
                        f_wwrite_epd(Vulture[f_getcurpl()] + 0x048 // 4, 0x048 % 4, 23)
                        # (Line 7222) bwrite_epd(Vulture[getcurpl()] + 0x022 / 4,  0x022 % 4, 28);
                        f_bwrite_epd(Vulture[f_getcurpl()] + 0x022 // 4, 0x022 % 4, 28)
                        # (Line 7223) DisplayText("\n\n\n\n\n\n\x13\x04부스터 비활성화\n\n\n\n", (0));
                        # (Line 7224) PlayWAV("staredit\\wav\\AfterOff.wav");
                        DoActions(DisplayText("\n\n\n\n\n\n\x13\x04부스터 비활성화\n\n\n\n", (0)))
                        # (Line 7225) if(
                        DoActions(PlayWAV("staredit\\wav\\AfterOff.wav"))
                        _t32 = EUDIf()
                        # (Line 7226) Memory(0x57F1B0, Exactly, (getcurpl()))
                        # (Line 7227) ){
                        if _t32(Memory(0x57F1B0, Exactly, (f_getcurpl()))):
                            # (Line 7228) btnPtr, btnPos = EPD(0x5187EC) + 0, 5 * 5;
                            _SV([btnPtr, btnPos], [EPD(0x5187EC) + 0, 5 * 5])
                            # (Line 7229) dwadd_epd(btnPtr, 0);
                            f_dwadd_epd(btnPtr, 0)
                            # (Line 7230) btnPos += epdread_epd(btnPtr);
                            btnPos.__iadd__(f_epdread_epd(btnPtr))
                            # (Line 7231) oldCP = getcurpl();
                            oldCP << (f_getcurpl())
                            # (Line 7232) DoActions(list(
                            # (Line 7233) SetMemory(0x6509B0, SetTo, btnPos),
                            # (Line 7234) SetDeaths(CurrentPlayer, SetTo, 24510471, 0),
                            # (Line 7235) SetMemory(0x6509B0, Add, 1),
                            # (Line 7236) SetDeaths(CurrentPlayer, SetTo, 4361824, 0),
                            # (Line 7237) SetMemory(0x6509B0, Add, 1),
                            # (Line 7238) SetDeaths(CurrentPlayer, SetTo, 4338864, 0),
                            # (Line 7239) SetMemory(0x6509B0, Add, 1),
                            # (Line 7240) SetDeaths(CurrentPlayer, SetTo, 327685, 0),
                            # (Line 7241) SetMemory(0x6509B0, Add, 1),
                            # (Line 7242) SetDeaths(CurrentPlayer, SetTo, 1395, 0),
                            # (Line 7243) SetMemory(0x6509B0, SetTo, oldCP),
                            # (Line 7244) ));
                            DoActions(FlattenList([SetMemory(0x6509B0, SetTo, btnPos), SetDeaths(CurrentPlayer, SetTo, 24510471, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 4361824, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 4338864, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 327685, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 1395, 0), SetMemory(0x6509B0, SetTo, oldCP)]))
                            # (Line 7245) btnPtr, btnPos = EPD(0x5187EC) + 3, 5 * 5;
                            _SV([btnPtr, btnPos], [EPD(0x5187EC) + 3, 5 * 5])
                            # (Line 7246) dwadd_epd(btnPtr, 0);
                            f_dwadd_epd(btnPtr, 0)
                            # (Line 7247) btnPos += epdread_epd(btnPtr);
                            btnPos.__iadd__(f_epdread_epd(btnPtr))
                            # (Line 7248) oldCP = getcurpl();
                            oldCP << (f_getcurpl())
                            # (Line 7249) DoActions(list(
                            # (Line 7250) SetMemory(0x6509B0, SetTo, btnPos),
                            # (Line 7251) SetDeaths(CurrentPlayer, SetTo, 24510471, 0),
                            # (Line 7252) SetMemory(0x6509B0, Add, 1),
                            # (Line 7253) SetDeaths(CurrentPlayer, SetTo, 4361824, 0),
                            # (Line 7254) SetMemory(0x6509B0, Add, 1),
                            # (Line 7255) SetDeaths(CurrentPlayer, SetTo, 4338864, 0),
                            # (Line 7256) SetMemory(0x6509B0, Add, 1),
                            # (Line 7257) SetDeaths(CurrentPlayer, SetTo, 327685, 0),
                            # (Line 7258) SetMemory(0x6509B0, Add, 1),
                            # (Line 7259) SetDeaths(CurrentPlayer, SetTo, 1395, 0),
                            # (Line 7260) SetMemory(0x6509B0, SetTo, oldCP),
                            # (Line 7261) ));
                            DoActions(FlattenList([SetMemory(0x6509B0, SetTo, btnPos), SetDeaths(CurrentPlayer, SetTo, 24510471, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 4361824, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 4338864, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 327685, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 1395, 0), SetMemory(0x6509B0, SetTo, oldCP)]))
                            # (Line 7262) btnPtr, btnPos = EPD(0x5187EC) + 6, 5 * 5;
                            _SV([btnPtr, btnPos], [EPD(0x5187EC) + 6, 5 * 5])
                            # (Line 7263) dwadd_epd(btnPtr, 0);
                            f_dwadd_epd(btnPtr, 0)
                            # (Line 7264) btnPos += epdread_epd(btnPtr);
                            btnPos.__iadd__(f_epdread_epd(btnPtr))
                            # (Line 7265) oldCP = getcurpl();
                            oldCP << (f_getcurpl())
                            # (Line 7266) DoActions(list(
                            # (Line 7267) SetMemory(0x6509B0, SetTo, btnPos),
                            # (Line 7268) SetDeaths(CurrentPlayer, SetTo, 24510471, 0),
                            # (Line 7269) SetMemory(0x6509B0, Add, 1),
                            # (Line 7270) SetDeaths(CurrentPlayer, SetTo, 4361824, 0),
                            # (Line 7271) SetMemory(0x6509B0, Add, 1),
                            # (Line 7272) SetDeaths(CurrentPlayer, SetTo, 4338864, 0),
                            # (Line 7273) SetMemory(0x6509B0, Add, 1),
                            # (Line 7274) SetDeaths(CurrentPlayer, SetTo, 327685, 0),
                            # (Line 7275) SetMemory(0x6509B0, Add, 1),
                            # (Line 7276) SetDeaths(CurrentPlayer, SetTo, 1395, 0),
                            # (Line 7277) SetMemory(0x6509B0, SetTo, oldCP),
                            # (Line 7278) ));
                            DoActions(FlattenList([SetMemory(0x6509B0, SetTo, btnPos), SetDeaths(CurrentPlayer, SetTo, 24510471, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 4361824, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 4338864, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 327685, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 1395, 0), SetMemory(0x6509B0, SetTo, oldCP)]))
                            # (Line 7279) btnPtr, btnPos = EPD(0x5187EC) + 21, 5 * 5;
                            _SV([btnPtr, btnPos], [EPD(0x5187EC) + 21, 5 * 5])
                            # (Line 7280) dwadd_epd(btnPtr, 0);
                            f_dwadd_epd(btnPtr, 0)
                            # (Line 7281) btnPos += epdread_epd(btnPtr);
                            btnPos.__iadd__(f_epdread_epd(btnPtr))
                            # (Line 7282) oldCP = getcurpl();
                            oldCP << (f_getcurpl())
                            # (Line 7283) DoActions(list(
                            # (Line 7284) SetMemory(0x6509B0, SetTo, btnPos),
                            # (Line 7285) SetDeaths(CurrentPlayer, SetTo, 24510471, 0),
                            # (Line 7286) SetMemory(0x6509B0, Add, 1),
                            # (Line 7287) SetDeaths(CurrentPlayer, SetTo, 4361824, 0),
                            # (Line 7288) SetMemory(0x6509B0, Add, 1),
                            # (Line 7289) SetDeaths(CurrentPlayer, SetTo, 4338864, 0),
                            # (Line 7290) SetMemory(0x6509B0, Add, 1),
                            # (Line 7291) SetDeaths(CurrentPlayer, SetTo, 327685, 0),
                            # (Line 7292) SetMemory(0x6509B0, Add, 1),
                            # (Line 7293) SetDeaths(CurrentPlayer, SetTo, 1395, 0),
                            # (Line 7294) SetMemory(0x6509B0, SetTo, oldCP),
                            # (Line 7295) ));
                            DoActions(FlattenList([SetMemory(0x6509B0, SetTo, btnPos), SetDeaths(CurrentPlayer, SetTo, 24510471, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 4361824, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 4338864, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 327685, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 1395, 0), SetMemory(0x6509B0, SetTo, oldCP)]))
                            # (Line 7296) btnPtr, btnPos = EPD(0x5187EC) + 24, 5 * 5;
                            _SV([btnPtr, btnPos], [EPD(0x5187EC) + 24, 5 * 5])
                            # (Line 7297) dwadd_epd(btnPtr, 0);
                            f_dwadd_epd(btnPtr, 0)
                            # (Line 7298) btnPos += epdread_epd(btnPtr);
                            btnPos.__iadd__(f_epdread_epd(btnPtr))
                            # (Line 7299) oldCP = getcurpl();
                            oldCP << (f_getcurpl())
                            # (Line 7300) DoActions(list(
                            # (Line 7301) SetMemory(0x6509B0, SetTo, btnPos),
                            # (Line 7302) SetDeaths(CurrentPlayer, SetTo, 24510471, 0),
                            # (Line 7303) SetMemory(0x6509B0, Add, 1),
                            # (Line 7304) SetDeaths(CurrentPlayer, SetTo, 4361824, 0),
                            # (Line 7305) SetMemory(0x6509B0, Add, 1),
                            # (Line 7306) SetDeaths(CurrentPlayer, SetTo, 4338864, 0),
                            # (Line 7307) SetMemory(0x6509B0, Add, 1),
                            # (Line 7308) SetDeaths(CurrentPlayer, SetTo, 327685, 0),
                            # (Line 7309) SetMemory(0x6509B0, Add, 1),
                            # (Line 7310) SetDeaths(CurrentPlayer, SetTo, 1395, 0),
                            # (Line 7311) SetMemory(0x6509B0, SetTo, oldCP),
                            # (Line 7312) ));
                            DoActions(FlattenList([SetMemory(0x6509B0, SetTo, btnPos), SetDeaths(CurrentPlayer, SetTo, 24510471, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 4361824, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 4338864, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 327685, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 1395, 0), SetMemory(0x6509B0, SetTo, oldCP)]))
                            # (Line 7313) btnPtr, btnPos = EPD(0x5187EC) + 57, 5 * 5;
                            _SV([btnPtr, btnPos], [EPD(0x5187EC) + 57, 5 * 5])
                            # (Line 7314) dwadd_epd(btnPtr, 0);
                            f_dwadd_epd(btnPtr, 0)
                            # (Line 7315) btnPos += epdread_epd(btnPtr);
                            btnPos.__iadd__(f_epdread_epd(btnPtr))
                            # (Line 7316) oldCP = getcurpl();
                            oldCP << (f_getcurpl())
                            # (Line 7317) DoActions(list(
                            # (Line 7318) SetMemory(0x6509B0, SetTo, btnPos),
                            # (Line 7319) SetDeaths(CurrentPlayer, SetTo, 24510471, 0),
                            # (Line 7320) SetMemory(0x6509B0, Add, 1),
                            # (Line 7321) SetDeaths(CurrentPlayer, SetTo, 4361824, 0),
                            # (Line 7322) SetMemory(0x6509B0, Add, 1),
                            # (Line 7323) SetDeaths(CurrentPlayer, SetTo, 4338864, 0),
                            # (Line 7324) SetMemory(0x6509B0, Add, 1),
                            # (Line 7325) SetDeaths(CurrentPlayer, SetTo, 327685, 0),
                            # (Line 7326) SetMemory(0x6509B0, Add, 1),
                            # (Line 7327) SetDeaths(CurrentPlayer, SetTo, 1395, 0),
                            # (Line 7328) SetMemory(0x6509B0, SetTo, oldCP),
                            # (Line 7329) ));
                            DoActions(FlattenList([SetMemory(0x6509B0, SetTo, btnPos), SetDeaths(CurrentPlayer, SetTo, 24510471, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 4361824, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 4338864, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 327685, 0), SetMemory(0x6509B0, Add, 1), SetDeaths(CurrentPlayer, SetTo, 1395, 0), SetMemory(0x6509B0, SetTo, oldCP)]))
                            # (Line 7330) }
                            # (Line 7331) }
                        EUDEndIf()
                        # (Line 7332) }
                    EUDEndIf()
                    # (Line 7333) else{
                if EUDElse()():
                    # (Line 7334) PlayWAV("staredit\\wav\\no sound.wav");
                    # (Line 7335) }
                    DoActions(PlayWAV("staredit\\wav\\no sound.wav"))
                    # (Line 7336) }
                EUDEndIf()
                # (Line 7338) }
            EUDEndIf()
            # (Line 7339) }
        EUDEndIf()
        # (Line 7340) EUDEndPlayerLoop();
    EUDEndIf()
    EUDEndPlayerLoop()
    # (Line 7344) if(
    _t33 = EUDIf()
    # (Line 7345) CTimer == 0
    # (Line 7346) ){
    if _t33(CTimer == 0):
        # (Line 7347) CTimer = 2;
        CTimer << (2)
        # (Line 7348) }
        # (Line 7349) if(
    EUDEndIf()
    _t34 = EUDIf()
    # (Line 7350) CTimer >= 1
    # (Line 7351) ){
    if _t34(CTimer >= 1):
        # (Line 7352) CTimer -= 1;
        CTimer.__isub__(1)
        # (Line 7353) }
        # (Line 7355) EUDPlayerLoop()();
    EUDEndIf()
    EUDPlayerLoop()()
    # (Line 7356) if (getcurpl() == 0 || getcurpl() == 1 || getcurpl() == 2 || getcurpl() == 3 || getcurpl() == 4 || getcurpl() == 5) {
    if EUDIf()(EUDSCOr()(f_getcurpl() == 0)(f_getcurpl() == 1)(f_getcurpl() == 2)(f_getcurpl() == 3)(f_getcurpl() == 4)(f_getcurpl() == 5)()):
        # (Line 7357) if(
        _t36 = EUDIf()
        # (Line 7358) Switch((1), (2)) &&
        # (Line 7359) CTimer == 0
        # (Line 7360) ){
        if _t36(EUDSCAnd()(Switch((1), (2)))(CTimer == 0)()):
            # (Line 7361) if(
            _t37 = EUDIf()
            # (Line 7362) Switch((1), (2))
            # (Line 7363) ){
            if _t37(Switch((1), (2))):
                # (Line 7364) Health = dwread_epd(Unit + 0x008 / 4);
                Health << (f_dwread_epd(Unit + 0x008 // 4))
                # (Line 7365) Shield = dwread_epd(Unit + 0x060 / 4);
                Shield << (f_dwread_epd(Unit + 0x060 // 4))
                # (Line 7366) Health = Health / 256;
                Health << (Health // 256)
                # (Line 7367) Shield = Shield / 256;
                Shield << (Shield // 256)
                # (Line 7368) tct.chatAnnouncement("\x04남은 체력 \x04: \x17", Health, " \x04/ \x1F", Shield, "");
                tct.f_chatAnnouncement("\x04남은 체력 \x04: \x17", Health, " \x04/ \x1F", Shield, "")
                # (Line 7369) }
                # (Line 7370) }
            EUDEndIf()
            # (Line 7371) }
        EUDEndIf()
        # (Line 7372) EUDEndPlayerLoop();
    EUDEndIf()
    EUDEndPlayerLoop()
    # (Line 7375) EUDPlayerLoop()();
    EUDPlayerLoop()()
    # (Line 7376) if (getcurpl() == 1 || getcurpl() == 2 || getcurpl() == 3 || getcurpl() == 4 || getcurpl() == 5) {
    if EUDIf()(EUDSCOr()(f_getcurpl() == 1)(f_getcurpl() == 2)(f_getcurpl() == 3)(f_getcurpl() == 4)(f_getcurpl() == 5)()):
        # (Line 7377) if(
        _t39 = EUDIf()
        # (Line 7378) Bring((13), (10), 0, (64), (52)) &&
        # (Line 7379) Ban[getcurpl()] == 0
        # (Line 7380) ){
        if _t39(EUDSCAnd()(Bring((13), (10), 0, (64), (52)))(Ban[f_getcurpl()] == 0)()):
            # (Line 7381) Ban[getcurpl()] = 1;
            _ARRW(Ban, f_getcurpl()) << (1)
            # (Line 7382) if(
            _t40 = EUDIf()
            # (Line 7383) Memory(0x57F1B0, Exactly, (getcurpl()))
            # (Line 7384) ){
            if _t40(Memory(0x57F1B0, Exactly, (f_getcurpl()))):
                # (Line 7385) DisplayText("\n\n\n\n\n\n\n\n\x13\x08강퇴\x04당했습니다.\n\n", (0));
                # (Line 7386) SetResources((13), (8), 500, (1));
                DoActions(DisplayText("\n\n\n\n\n\n\n\n\x13\x08강퇴\x04당했습니다.\n\n", (0)))
                # (Line 7387) }
                DoActions(SetResources((13), (8), 500, (1)))
                # (Line 7388) }
            EUDEndIf()
            # (Line 7389) }
        EUDEndIf()
        # (Line 7390) EUDEndPlayerLoop();
    EUDEndIf()
    EUDEndPlayerLoop()
    # (Line 7393) EUDPlayerLoop()();
    EUDPlayerLoop()()
    # (Line 7394) if (getcurpl() == 0 || getcurpl() == 1 || getcurpl() == 2 || getcurpl() == 3 || getcurpl() == 4 || getcurpl() == 5) {
    if EUDIf()(EUDSCOr()(f_getcurpl() == 0)(f_getcurpl() == 1)(f_getcurpl() == 2)(f_getcurpl() == 3)(f_getcurpl() == 4)(f_getcurpl() == 5)()):
        # (Line 7395) if(
        _t42 = EUDIf()
        # (Line 7396) Bring((13), (0), 1, (230), (24))
        # (Line 7397) ){
        if _t42(Bring((13), (0), 1, (230), (24))):
            # (Line 7398) if(
            _t43 = EUDIf()
            # (Line 7399) bread_epd(Vulture[getcurpl()] + 0x04D / 4,  0x04D % 4) == 107 ||
            # (Line 7400) bread_epd(Vulture[getcurpl()] + 0x04D / 4,  0x04D % 4) == 152
            # (Line 7401) ){
            if _t43(EUDSCOr()(f_bread_epd(Vulture[f_getcurpl()] + 0x04D // 4, 0x04D % 4) == 107)(f_bread_epd(Vulture[f_getcurpl()] + 0x04D // 4, 0x04D % 4) == 152)()):
                # (Line 7402) if(
                _t44 = EUDIf()
                # (Line 7403) Hold_on[getcurpl()] == 0
                # (Line 7404) ){
                if _t44(Hold_on[f_getcurpl()] == 0):
                    # (Line 7405) Hold_firecount[getcurpl()] = 3;
                    _ARRW(Hold_firecount, f_getcurpl()) << (3)
                    # (Line 7406) Hold_on[getcurpl()] = 1;
                    _ARRW(Hold_on, f_getcurpl()) << (1)
                    # (Line 7407) }
                    # (Line 7408) }
                EUDEndIf()
                # (Line 7409) else{
            if EUDElse()():
                # (Line 7410) Hold_firecount[getcurpl()] = 0;
                _ARRW(Hold_firecount, f_getcurpl()) << (0)
                # (Line 7411) if(
                _t45 = EUDIf()
                # (Line 7412) bread_epd(Vulture[getcurpl()] + 0x055 / 4,  0x055 % 4) == 0
                # (Line 7413) ){
                if _t45(f_bread_epd(Vulture[f_getcurpl()] + 0x055 // 4, 0x055 % 4) == 0):
                    # (Line 7414) Hold_on[getcurpl()] = 0;
                    _ARRW(Hold_on, f_getcurpl()) << (0)
                    # (Line 7415) }
                    # (Line 7416) }
                EUDEndIf()
                # (Line 7417) if(
            EUDEndIf()
            _t46 = EUDIf()
            # (Line 7418) Hold_Firetimer[getcurpl()] == 0
            # (Line 7419) ){
            if _t46(Hold_Firetimer[f_getcurpl()] == 0):
                # (Line 7420) RemoveUnit((PHoldFire[getcurpl()]), (13));
                # (Line 7421) Hold_fireunit[getcurpl()] = 0;
                DoActions(RemoveUnit((PHoldFire[f_getcurpl()]), (13)))
                _ARRW(Hold_fireunit, f_getcurpl()) << (0)
                # (Line 7422) }
                # (Line 7423) if(
            EUDEndIf()
            _t47 = EUDIf()
            # (Line 7424) Hold_firecount[getcurpl()] >= 1 &&
            # (Line 7425) Hold_Firetimer[getcurpl()] == 0
            # (Line 7426) ){
            if _t47(EUDSCAnd()(Hold_firecount[f_getcurpl()] >= 1)(Hold_Firetimer[f_getcurpl()] == 0)()):
                # (Line 7427) Hold_Firetimer[getcurpl()] = 2;
                _ARRW(Hold_Firetimer, f_getcurpl()) << (2)
                # (Line 7428) Vulture_Direction[getcurpl()] = bread_epd(Vulture[getcurpl()] + 0x021 / 4,  0x021 % 4);
                _ARRW(Vulture_Direction, f_getcurpl()) << (f_bread_epd(Vulture[f_getcurpl()] + 0x021 // 4, 0x021 % 4))
                # (Line 7429) Hold_fireunit[getcurpl()] = epdread_epd(EPD(0x628438));
                _ARRW(Hold_fireunit, f_getcurpl()) << (f_epdread_epd(EPD(0x628438)))
                # (Line 7430) wwrite(0x665AC0 + 1696 + 244 * 2, 256);
                f_wwrite(0x665AC0 + 1696 + 244 * 2, 256)
                # (Line 7431) CreateUnitWithProperties(1, (PHoldFire[getcurpl()]), (PLoc[getcurpl()]), (13), UnitProperty(hitpoint = 100, shield = 100, energy = 50, resource = 0, hanger = 0, cloaked = False, burrowed = False, intransit = False, hallucinated = False, invincible = True));
                # (Line 7432) bwrite_epd(Hold_fireunit[getcurpl()] + 0x021 / 4,  0x021 % 4, Vulture_Direction[getcurpl()]);
                DoActions(CreateUnitWithProperties(1, (PHoldFire[f_getcurpl()]), (PLoc[f_getcurpl()]), (13), UnitProperty(hitpoint=100, shield=100, energy=50, resource=0, hanger=0, cloaked=False, burrowed=False, intransit=False, hallucinated=False, invincible=True)))
                f_bwrite_epd(Hold_fireunit[f_getcurpl()] + 0x021 // 4, 0x021 % 4, Vulture_Direction[f_getcurpl()])
                # (Line 7433) bwrite_epd(Hold_fireunit[getcurpl()] + 0x04A / 4,  0x04A % 4, Vulture_Direction[getcurpl()]);
                f_bwrite_epd(Hold_fireunit[f_getcurpl()] + 0x04A // 4, 0x04A % 4, Vulture_Direction[f_getcurpl()])
                # (Line 7434) bwrite_epd(Hold_fireunit[getcurpl()] + 0x023 / 4,  0x023 % 4, Vulture_Direction[getcurpl()]);
                f_bwrite_epd(Hold_fireunit[f_getcurpl()] + 0x023 // 4, 0x023 % 4, Vulture_Direction[f_getcurpl()])
                # (Line 7435) bwrite_epd(Hold_fireunit[getcurpl()] + 0x04B / 4,  0x04B % 4, Vulture_Direction[getcurpl()]);
                f_bwrite_epd(Hold_fireunit[f_getcurpl()] + 0x04B // 4, 0x04B % 4, Vulture_Direction[f_getcurpl()])
                # (Line 7436) Hold_firecount[getcurpl()] -= 1;
                _ARRW(Hold_firecount, f_getcurpl()).__isub__(1)
                # (Line 7437) bwrite_epd(Hold_fireunit[getcurpl()] + 0x04D / 4,  0x04D % 4, 107);
                f_bwrite_epd(Hold_fireunit[f_getcurpl()] + 0x04D // 4, 0x04D % 4, 107)
                # (Line 7438) }
                # (Line 7439) if(
            EUDEndIf()
            _t48 = EUDIf()
            # (Line 7440) Hold_Firetimer[getcurpl()] >= 1
            # (Line 7441) ){
            if _t48(Hold_Firetimer[f_getcurpl()] >= 1):
                # (Line 7442) Hold_Firetimer[getcurpl()] -= 1;
                _ARRW(Hold_Firetimer, f_getcurpl()).__isub__(1)
                # (Line 7443) }
                # (Line 7444) }
            EUDEndIf()
            # (Line 7445) if(
        EUDEndIf()
        _t49 = EUDIf()
        # (Line 7446) Bring((13), (10), 0, (230), (24))
        # (Line 7447) ){
        if _t49(Bring((13), (10), 0, (230), (24))):
            # (Line 7448) RemoveUnit((PHoldFire[getcurpl()]), (13));
            # (Line 7449) Hold_fireunit[getcurpl()] = 0;
            DoActions(RemoveUnit((PHoldFire[f_getcurpl()]), (13)))
            _ARRW(Hold_fireunit, f_getcurpl()) << (0)
            # (Line 7450) }
            # (Line 7451) }
        EUDEndIf()
        # (Line 7452) EUDEndPlayerLoop();
    EUDEndIf()
    EUDEndPlayerLoop()
    # (Line 7455) }
