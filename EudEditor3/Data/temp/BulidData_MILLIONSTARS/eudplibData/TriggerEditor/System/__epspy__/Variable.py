## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 2) const Round_Count = PVariable();
Round_Count = _CGFW(lambda: [PVariable()], 1)[0]
# (Line 4) const Mission_Check = PVariable();
Mission_Check = _CGFW(lambda: [PVariable()], 1)[0]
# (Line 6) const Mission1_Delay = PVariable();
Mission1_Delay = _CGFW(lambda: [PVariable()], 1)[0]
# (Line 7) const Mission2_Delay = PVariable();
Mission2_Delay = _CGFW(lambda: [PVariable()], 1)[0]
# (Line 8) const Mission3_Delay = PVariable();
Mission3_Delay = _CGFW(lambda: [PVariable()], 1)[0]
# (Line 10) const Mission_Time = PVariable();
Mission_Time = _CGFW(lambda: [PVariable()], 1)[0]
# (Line 11) const Mission_Effect = PVariable();
Mission_Effect = _CGFW(lambda: [PVariable()], 1)[0]
# (Line 13) const Mission_Text =
# (Line 14) [Db(u2b("\x04를 다시 할 수 있습니다.")),
# (Line 15) Db(u2b("\x04 남은 대기시간 : \x19")),
# (Line 16) Db(u2b(" \x04초")),
# (Line 17) Db(u2b(" \x04처리 보상 \x19100 골드, \x1B1 메달 티켓")),
# (Line 18) Db(u2b(" \x04처리 보상 \x0F1 가스, \x1B2 메달 티켓"))];
Mission_Text = _CGFW(lambda: [_ARR(FlattenList([Db(u2b("\x04를 다시 할 수 있습니다.")), Db(u2b("\x04 남은 대기시간 : \x19")), Db(u2b(" \x04초")), Db(u2b(" \x04처리 보상 \x19100 골드, \x1B1 메달 티켓")), Db(u2b(" \x04처리 보상 \x0F1 가스, \x1B2 메달 티켓"))]))], 1)[0]
# (Line 21) const Round_Hp =
# (Line 22) [80, 100, 190, 270, 350, 420, 510, 600, 700, 820, 6,
# (Line 23) 1120, 1310, 1540, 1800, 2100, 2450, 2840, 3290, 3790, 12,
# (Line 24) 4980, 5680, 6450, 7290, 8220, 9230, 10330, 11520, 12810, 18,
# (Line 25) 15690, 17290, 19000, 20830, 22780, 24850, 27050, 29390, 31860, 24,
# (Line 26) 37230, 40130, 43190, 46400, 49780, 53310, 57020, 60900, 64950, 30,
# (Line 27) 73610, 78220, 83020, 88020, 93210, 98620, 104230, 110050, 116090, 36,
# (Line 28) 128830, 135540, 142490, 149670, 157090, 164760, 172670, 180840, 189260, 42,
# (Line 29) 206890, 216110, 225600, 235360, 245410, 255740, 266360, 277270, 288480, 48];
Round_Hp = _CGFW(lambda: [_ARR(FlattenList([80, 100, 190, 270, 350, 420, 510, 600, 700, 820, 6, 1120, 1310, 1540, 1800, 2100, 2450, 2840, 3290, 3790, 12, 4980, 5680, 6450, 7290, 8220, 9230, 10330, 11520, 12810, 18, 15690, 17290, 19000, 20830, 22780, 24850, 27050, 29390, 31860, 24, 37230, 40130, 43190, 46400, 49780, 53310, 57020, 60900, 64950, 30, 73610, 78220, 83020, 88020, 93210, 98620, 104230, 110050, 116090, 36, 128830, 135540, 142490, 149670, 157090, 164760, 172670, 180840, 189260, 42, 206890, 216110, 225600, 235360, 245410, 255740, 266360, 277270, 288480, 48]))], 1)[0]
# (Line 31) const Boss_Hp =
# (Line 32) [20000, 40000, 70000, 110000, 160000, 220000, 290000];
Boss_Hp = _CGFW(lambda: [_ARR(FlattenList([20000, 40000, 70000, 110000, 160000, 220000, 290000]))], 1)[0]
# (Line 34) const Round_Type =
# (Line 35) [Db("\x1B댄스 [프린세스]"),
# (Line 36) Db("\x1C보컬 [페어리]"),
# (Line 37) Db("\x19비쥬얼 [엔젤]"),
# (Line 38) Db("\x0FAllType [모든 타입]")];
Round_Type = _CGFW(lambda: [_ARR(FlattenList([Db("\x1B댄스 [프린세스]"), Db("\x1C보컬 [페어리]"), Db("\x19비쥬얼 [엔젤]"), Db("\x0FAllType [모든 타입]")]))], 1)[0]
# (Line 40) const Music_Number =
# (Line 41) [0, 17, 27, 46, 13, 28, 44, 11, 31, 42, 52,
# (Line 42) 15, 24, 49, 7, 30, 47, 14, 25, 40, 999,
# (Line 43) 10, 33, 50, 5, 22, 39, 16, 23, 48, 999,
# (Line 44) 12, 29, 45, 8, 26, 41, 9, 32, 51, 999,
# (Line 45) 6, 34, 43, 2, 21, 37, 3, 19, 38, 999,
# (Line 46) 1, 20, 36, 4, 18, 35];
Music_Number = _CGFW(lambda: [_ARR(FlattenList([0, 17, 27, 46, 13, 28, 44, 11, 31, 42, 52, 15, 24, 49, 7, 30, 47, 14, 25, 40, 999, 10, 33, 50, 5, 22, 39, 16, 23, 48, 999, 12, 29, 45, 8, 26, 41, 9, 32, 51, 999, 6, 34, 43, 2, 21, 37, 3, 19, 38, 999, 1, 20, 36, 4, 18, 35]))], 1)[0]
# (Line 48) const music_name =
# (Line 49) [Db("\x04재생중인 음악이 없습니다"),
# (Line 50) Db("\x1B아마미 하루카\x04 - 반짝임 진행형"),
# (Line 51) Db("\x1B하기와라 유키호\x04 - 허밍 로드"),
# (Line 52) Db("\x1B키쿠치 마코토\x04 - 자전거"),
# (Line 53) Db("\x1B가나하 히비키\x04 - smiley days"),
# (Line 54) Db("\x1B카스가 미라이\x04 - 미래 비행"),
# (Line 55) Db("\x1B타나카 코토하\x04 - 실루엣"),
# (Line 56) Db("\x1B사타케 미나코\x04 - 스마일 최고"),
# (Line 57) Db("\x1B토쿠가와 마츠리\x04 - 페스타 일루미네이션"),
# (Line 58) Db("\x1B나나오 유리코\x04 - 투명한 프롤로그"),
# (Line 59) Db("\x1B타카야마 사요코\x04 - vivid color"),
# (Line 60) Db("\x1B마츠다 아리사\x04 - 초자연 현상 아이돌짱!"),
# (Line 61) Db("\x1B코사카 우미\x04 - 연애 로드러너"),
# (Line 62) Db("\x1B나카타니 이쿠\x04 - 가끔은 시소"),
# (Line 63) Db("\x1B에밀리 스튜어트\x04 - 꽃의 가락"),
# (Line 64) Db("\x1B야부키 카나\x04 - 주문"),
# (Line 65) Db("\x1B요코야마 나오\x04 - Super Lover"),
# (Line 66) Db("\x1B후쿠다 노리코\x04 - WE ARE ONE!!"),
# (Line 67) Db("\x1C키사라기 치하야\x04 - Just be myself!!"),
# (Line 68) Db("\x1C미나세 이오리\x04 - 프라이빗 로드쇼"),
# (Line 69) Db("\x1C시죠 타카네\x04 - addicted"),
# (Line 70) Db("\x1C아키즈키 리츠코\x04 - Liar's good bye"),
# (Line 71) Db("\x1C모가미 시즈카\x04 - Catch my dream"),
# (Line 72) Db("\x1C토코로 메구미\x04 - 애프터 스쿨 파티 타임"),
# (Line 73) Db("\x1C로코\x04 - ART NEEDS HEART BEATS"),
# (Line 74) Db("\x1C텐쿠바시 토모카\x04 - Maria Trap"),
# (Line 75) Db("\x1C키타자와 시호\x04 - 그림책"),
# (Line 76) Db("\x1C마이하마 아유무\x04 - Get My Shinin'"),
# (Line 77) Db("\x1C니카이도 치즈루\x04 - 사랑의 음색 라인"),
# (Line 78) Db("\x1C마카베 미즈키\x04 - ...In The Name Of。 …LOVE?"),
# (Line 79) Db("\x1C모모세 리오\x04 - Be My Baby"),
# (Line 80) Db("\x1C나가요시 스바루\x04 - 비기너즈☆스트라이크"),
# (Line 81) Db("\x1C스오 모모코\x04 - 롤링△삼각"),
# (Line 82) Db("\x1C줄리아\x04 - 유성군"),
# (Line 83) Db("\x1C시라이시 츠무기\x04 - 유리색 금붕어와 꽃창포"),
# (Line 84) Db("\x19호시이 미키\x04 - 추억의 샌드글라스"),
# (Line 85) Db("\x19타카츠키 야요이\x04 - 스트로베리 큐피드"),
# (Line 86) Db("\x19미우라 아즈사\x04 - 한탄의 FRACTION"),
# (Line 87) Db("\x19후타미 아미/마미\x04 - TODAY with ME"),
# (Line 88) Db("\x19이부키 츠바사\x04 - 아일"),
# (Line 89) Db("\x19시마바라 엘레나\x04 - 판타지스타 카니발"),
# (Line 90) Db("\x19하코자키 세리카\x04 - Come on a Tea Party!"),
# (Line 91) Db("\x19노노하라 아카네\x04 - AIKANE?"),
# (Line 92) Db("\x19모치즈키 안나\x04 - ENTER→PLEASURE"),
# (Line 93) Db("\x19키노시타 히나타\x04 - 스노우레터"),
# (Line 94) Db("\x19바바 코노미\x04 - dear..."),
# (Line 95) Db("\x19오오가미 타마키\x04 - BOUNCING♪ SMILE!"),
# (Line 96) Db("\x19토요카와 후카\x04 - 기도의 날개"),
# (Line 97) Db("\x19미야오 미야\x04 - 첫사랑 버터플라이"),
# (Line 98) Db("\x19시노미야 카렌\x04 - 알려줘 last note..."),
# (Line 99) Db("\x19키타카미 레이카\x04 - 서머☆트리 ~Summer trip~"),
# (Line 100) Db("\x19사쿠라모리 카오리\x04 - 허밍 버드"),
# (Line 101) Db("\x19765PRO \x04 - Wellcome!!")];
music_name = _CGFW(lambda: [_ARR(FlattenList([Db("\x04재생중인 음악이 없습니다"), Db("\x1B아마미 하루카\x04 - 반짝임 진행형"), Db("\x1B하기와라 유키호\x04 - 허밍 로드"), Db("\x1B키쿠치 마코토\x04 - 자전거"), Db("\x1B가나하 히비키\x04 - smiley days"), Db("\x1B카스가 미라이\x04 - 미래 비행"), Db("\x1B타나카 코토하\x04 - 실루엣"), Db("\x1B사타케 미나코\x04 - 스마일 최고"), Db("\x1B토쿠가와 마츠리\x04 - 페스타 일루미네이션"), Db("\x1B나나오 유리코\x04 - 투명한 프롤로그"), Db("\x1B타카야마 사요코\x04 - vivid color"), Db("\x1B마츠다 아리사\x04 - 초자연 현상 아이돌짱!"), Db("\x1B코사카 우미\x04 - 연애 로드러너"), Db("\x1B나카타니 이쿠\x04 - 가끔은 시소"), Db("\x1B에밀리 스튜어트\x04 - 꽃의 가락"), Db("\x1B야부키 카나\x04 - 주문"), Db("\x1B요코야마 나오\x04 - Super Lover"), Db("\x1B후쿠다 노리코\x04 - WE ARE ONE!!"), Db("\x1C키사라기 치하야\x04 - Just be myself!!"), Db("\x1C미나세 이오리\x04 - 프라이빗 로드쇼"), Db("\x1C시죠 타카네\x04 - addicted"), Db("\x1C아키즈키 리츠코\x04 - Liar's good bye"), Db("\x1C모가미 시즈카\x04 - Catch my dream"), Db("\x1C토코로 메구미\x04 - 애프터 스쿨 파티 타임"), Db("\x1C로코\x04 - ART NEEDS HEART BEATS"), Db("\x1C텐쿠바시 토모카\x04 - Maria Trap"), Db("\x1C키타자와 시호\x04 - 그림책"), Db("\x1C마이하마 아유무\x04 - Get My Shinin'"), Db("\x1C니카이도 치즈루\x04 - 사랑의 음색 라인"), Db("\x1C마카베 미즈키\x04 - ...In The Name Of。 …LOVE?"), Db("\x1C모모세 리오\x04 - Be My Baby"), Db("\x1C나가요시 스바루\x04 - 비기너즈☆스트라이크"), Db("\x1C스오 모모코\x04 - 롤링△삼각"), Db("\x1C줄리아\x04 - 유성군"), Db("\x1C시라이시 츠무기\x04 - 유리색 금붕어와 꽃창포"), Db("\x19호시이 미키\x04 - 추억의 샌드글라스"), Db("\x19타카츠키 야요이\x04 - 스트로베리 큐피드"), Db("\x19미우라 아즈사\x04 - 한탄의 FRACTION"), Db("\x19후타미 아미/마미\x04 - TODAY with ME"), Db("\x19이부키 츠바사\x04 - 아일"), Db("\x19시마바라 엘레나\x04 - 판타지스타 카니발"), Db("\x19하코자키 세리카\x04 - Come on a Tea Party!"), Db("\x19노노하라 아카네\x04 - AIKANE?"), Db("\x19모치즈키 안나\x04 - ENTER→PLEASURE"), Db("\x19키노시타 히나타\x04 - 스노우레터"), Db("\x19바바 코노미\x04 - dear..."), Db("\x19오오가미 타마키\x04 - BOUNCING♪ SMILE!"), Db("\x19토요카와 후카\x04 - 기도의 날개"), Db("\x19미야오 미야\x04 - 첫사랑 버터플라이"), Db("\x19시노미야 카렌\x04 - 알려줘 last note..."), Db("\x19키타카미 레이카\x04 - 서머☆트리 ~Summer trip~"), Db("\x19사쿠라모리 카오리\x04 - 허밍 버드"), Db("\x19765PRO \x04 - Wellcome!!")]))], 1)[0]
