## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) const Round_Unit_Name =
# (Line 2) [Db(u2b("")),
# (Line 3) Db(u2b("\x1B후쿠다 노리코")),
# (Line 4) Db(u2b("\x1C마이하마 아유무")),
# (Line 5) Db(u2b("\x19오오가미 타마키")),
# (Line 6) Db(u2b("\x1B나가타니 이쿠")),
# (Line 7) Db(u2b("\x1C니카이도 치즈루")),
# (Line 8) Db(u2b("\x19키노시타 히나타")),
# (Line 9) Db(u2b("\x1B마츠다 아리사")),
# (Line 10) Db(u2b("\x1C나가요시 스바루")),
# (Line 11) Db(u2b("\x19노노하라 아카네")),
# (Line 12) Db(u2b("")),
# (Line 13) Db(u2b("\x1B야부키 카나")),
# (Line 14) Db(u2b("\x1C로코")),
# (Line 15) Db(u2b("\x19시노미야 카렌")),
# (Line 16) Db(u2b("\x1B사타케 미나코")),
# (Line 17) Db(u2b("\x1C모모세 리오")),
# (Line 18) Db(u2b("\x19토요카와 후카")),
# (Line 19) Db(u2b("\x1B에밀리 스튜어트")),
# (Line 20) Db(u2b("\x1C텐쿠바시 토모카")),
# (Line 21) Db(u2b("\x19시마바라 엘레나")),
# (Line 22) Db(u2b("")),
# (Line 23) Db(u2b("\x1B타카야마 사요코")),
# (Line 24) Db(u2b("\x1C줄리아")),
# (Line 25) Db(u2b("\x19키타카미 레이카")),
# (Line 26) Db(u2b("\x1B카스가 미라이")),
# (Line 27) Db(u2b("\x1C모가미 시즈카")),
# (Line 28) Db(u2b("\x19이부키 츠바사")),
# (Line 29) Db(u2b("\x1B요코야마 나오")),
# (Line 30) Db(u2b("\x1C토코로 메구미")),
# (Line 31) Db(u2b("\x19미야오 미야")),
# (Line 32) Db(u2b("")),
# (Line 33) Db(u2b("\x1B코사카 우미")),
# (Line 34) Db(u2b("\x1C마카베 미즈키")),
# (Line 35) Db(u2b("\x19바바 코노미")),
# (Line 36) Db(u2b("\x1B도쿠가와 마츠리")),
# (Line 37) Db(u2b("\x1C키타자와 시호")),
# (Line 38) Db(u2b("\x19하코자키 세리카")),
# (Line 39) Db(u2b("\x1B나나오 유리코")),
# (Line 40) Db(u2b("\x1C스오 모모코")),
# (Line 41) Db(u2b("\x19사쿠라모리 카오리")),
# (Line 42) Db(u2b("")),
# (Line 43) Db(u2b("\x1B타나카 코토하")),
# (Line 44) Db(u2b("\x1C시라이시 츠무기")),
# (Line 45) Db(u2b("\x19모치즈키 안나")),
# (Line 46) Db(u2b("\x1B하기와라 유키호")),
# (Line 47) Db(u2b("\x1C아키즈키 리츠코")),
# (Line 48) Db(u2b("\x19미우라 아즈사")),
# (Line 49) Db(u2b("\x1B키쿠치 마코토")),
# (Line 50) Db(u2b("\x1C미나세 이오리")),
# (Line 51) Db(u2b("\x19후타미 아미")),
# (Line 52) Db(u2b("")),
# (Line 53) Db(u2b("\x1B아마미 하루카")),
# (Line 54) Db(u2b("\x1C시죠 타카네")),
# (Line 55) Db(u2b("\x19타카츠키 야요이")),
# (Line 56) Db(u2b("\x1B가나하 히비키")),
# (Line 57) Db(u2b("\x1C키사라기 치하야")),
# (Line 58) Db(u2b("\x19호시이 미키"))];
Round_Unit_Name = _CGFW(lambda: [_ARR(FlattenList([Db(u2b("")), Db(u2b("\x1B후쿠다 노리코")), Db(u2b("\x1C마이하마 아유무")), Db(u2b("\x19오오가미 타마키")), Db(u2b("\x1B나가타니 이쿠")), Db(u2b("\x1C니카이도 치즈루")), Db(u2b("\x19키노시타 히나타")), Db(u2b("\x1B마츠다 아리사")), Db(u2b("\x1C나가요시 스바루")), Db(u2b("\x19노노하라 아카네")), Db(u2b("")), Db(u2b("\x1B야부키 카나")), Db(u2b("\x1C로코")), Db(u2b("\x19시노미야 카렌")), Db(u2b("\x1B사타케 미나코")), Db(u2b("\x1C모모세 리오")), Db(u2b("\x19토요카와 후카")), Db(u2b("\x1B에밀리 스튜어트")), Db(u2b("\x1C텐쿠바시 토모카")), Db(u2b("\x19시마바라 엘레나")), Db(u2b("")), Db(u2b("\x1B타카야마 사요코")), Db(u2b("\x1C줄리아")), Db(u2b("\x19키타카미 레이카")), Db(u2b("\x1B카스가 미라이")), Db(u2b("\x1C모가미 시즈카")), Db(u2b("\x19이부키 츠바사")), Db(u2b("\x1B요코야마 나오")), Db(u2b("\x1C토코로 메구미")), Db(u2b("\x19미야오 미야")), Db(u2b("")), Db(u2b("\x1B코사카 우미")), Db(u2b("\x1C마카베 미즈키")), Db(u2b("\x19바바 코노미")), Db(u2b("\x1B도쿠가와 마츠리")), Db(u2b("\x1C키타자와 시호")), Db(u2b("\x19하코자키 세리카")), Db(u2b("\x1B나나오 유리코")), Db(u2b("\x1C스오 모모코")), Db(u2b("\x19사쿠라모리 카오리")), Db(u2b("")), Db(u2b("\x1B타나카 코토하")), Db(u2b("\x1C시라이시 츠무기")), Db(u2b("\x19모치즈키 안나")), Db(u2b("\x1B하기와라 유키호")), Db(u2b("\x1C아키즈키 리츠코")), Db(u2b("\x19미우라 아즈사")), Db(u2b("\x1B키쿠치 마코토")), Db(u2b("\x1C미나세 이오리")), Db(u2b("\x19후타미 아미")), Db(u2b("")), Db(u2b("\x1B아마미 하루카")), Db(u2b("\x1C시죠 타카네")), Db(u2b("\x19타카츠키 야요이")), Db(u2b("\x1B가나하 히비키")), Db(u2b("\x1C키사라기 치하야")), Db(u2b("\x19호시이 미키"))]))], 1)[0]
# (Line 60) const End_Sound_Text =
# (Line 61) [Db(u2b("")),
# (Line 62) Db(u2b("하아.. 아무리 나라도 완전연소야! 엄청 즐거웠어!")),
# (Line 63) Db(u2b("나의 노래.. 들어줘서 고마워!")),
# (Line 64) Db(u2b("라이브, 굉장히 불타올랐네! 쿠후후♪")),
# (Line 65) Db(u2b("나, 굉장히 즐거웠어!")),
# (Line 66) Db(u2b("팬 여러분, 그리고 무대 뒤의 당신에게.. 이 노래가 전해졌다고 믿을게요.")),
# (Line 67) Db(u2b("모두에게 덕분에, 부를 수 있었어. 정말로 고마워요~")),
# (Line 68) Db(u2b("팬 모두가 기뻐해줘서 아리사 대만족이에요!")),
# (Line 69) Db(u2b("오늘의 프로듀서, 엄청 멋졌어! 하이터치하자, 하이터치!")),
# (Line 70) Db(u2b("아카네짱, 자신의 재능이 두려워!")),
# (Line 71) Db(u2b("")),
# (Line 72) Db(u2b("됐다! 저, 제대로 노래했어요! 레슨 열심히 해서 다행이야~")),
# (Line 73) Db(u2b("엑설런트에요! 이것이 로코의 스테이지에요!")),
# (Line 74) Db(u2b("저.. 이렇게나 잘 부를수 있게 되었네요.. 기뻐라..♪")),
# (Line 75) Db(u2b("해냈다! 연습 이상의 성과를 내버렸다구요!")),
# (Line 76) Db(u2b("후후, 완벽했었네~ 재능이 개화해버린건가~♪")),
# (Line 77) Db(u2b("노래 부른다는건, 이렇게나 기분 좋은 일이었네요. 또 노래하고 싶어요.")),
# (Line 78) Db(u2b("정말로 기뻐요! 여러분에게 감사드립니다!")),
# (Line 79) Db(u2b("굉장히 좋은 기분이네요. 우후후♪")),
# (Line 80) Db(u2b("팬들도 모두 웃는 얼굴이야~ 잘 부를 수 있어서 다행이야!")),
# (Line 81) Db(u2b("")),
# (Line 82) Db(u2b("제 마음, 제대로 모두에게 전할 수 있었어요. 왠지.. 굉장히 기뻐요!")),
# (Line 83) Db(u2b("최고로 달아올랐네, 프로듀서! 좋아, 모두 함께 축하하자!")),
# (Line 84) Db(u2b("오늘의 저는 무적이에요! 프로듀서씨의 하트도 단단히 록온이에요!")),
# (Line 85) Db(u2b("지금의 저, 절호조였네요! 모두도 즐겨준걸까~")),
# (Line 86) Db(u2b("연습의 성과가 제대로 발휘되었습니다!")),
# (Line 87) Db(u2b("모두 고마워~ 최고로 기분 좋은 라이브였네.")),
# (Line 88) Db(u2b("나의 가장 멋진 모습 봐주었을지도.. 모두, 고마워!")),
# (Line 89) Db(u2b("엄-청 즐거웠어! 좋은 느낌이잖아!")),
# (Line 90) Db(u2b("어쩜~ 멋있게 부를 수 있었어요~ 기쁜일이네요~ 후후♪")),
# (Line 91) Db(u2b("")),
# (Line 92) Db(u2b("나는 제법 잘 불렀던 것 같아! 어땠어? 프로듀서!")),
# (Line 93) Db(u2b("프로듀서. 방금 전의 라이브, 잘 부를 수 있었습니다. 힘내서 다행이야.")),
# (Line 94) Db(u2b("에헤헤, 나의 어덜티한 노랫소리에 모두 푹 빠져버렸네♪")),
# (Line 95) Db(u2b("원더호~한 스테이지에서 모두를 해피~하게 만드는 거에요!")),
# (Line 96) Db(u2b("해.. 해냈다..! 제 스스로는 잘 해냈다고 생각합니다.")),
# (Line 97) Db(u2b("지금, 굉장히 능숙하게 되었네요!")),
# (Line 98) Db(u2b("정말로 기뻐요! 가슴이 벅차서.. 말이 안나올 정도로!")),
# (Line 99) Db(u2b("해냈구나! 모두~ 응원 고마워~!")),
# (Line 100) Db(u2b("환상적인 시간을 여러분과 공유할 수 있어서, 저.. 행복해요!")),
# (Line 101) Db(u2b("")),
# (Line 102) Db(u2b("가르쳐 주셨던 것, 전부 할 수 있었다고 생각해요. 해냈어..!")),
# (Line 103) Db(u2b("가슴이 뜨거워서.. 뭐야.. 이 기분..")),
# (Line 104) Db(u2b("오늘의 안나, 비빗한 상태잖아! 이대로 계속 갈게!")),
# (Line 105) Db(u2b("저, 조금은 변할 수 있었을지도!")),
# (Line 106) Db(u2b("이런 퍼포먼스를 할 수 있다니.. 후훗, 우쭐해버릴 것 같아.")),
# (Line 107) Db(u2b("오늘은 무척 잘 노래할 수 있었다고 생각해요.")),
# (Line 108) Db(u2b("모두! 고맙습니다! 헤헷, 야리~!")),
# (Line 109) Db(u2b("해냈네! 다음에도 이 상태로 갈게!")),
# (Line 110) Db(u2b("회장의 오빠, 언니! 엄~청 사랑하니까~! 웅후후~")),
# (Line 111) Db(u2b("")),
# (Line 112) Db(u2b("모두의 덕분이네요! 정말로 감사했습니다!")),
# (Line 113) Db(u2b("모두의 가슴에 노래가 닿을 수 있었다면, 이보다 기쁜 일은 없습니다.")),
# (Line 114) Db(u2b("웃우! 프로듀서! 저, 할 수 있었어요!")),
# (Line 115) Db(u2b("완벽한 라이브였네! 자신을 좀 더 칭찬해줘, 프로듀서!")),
# (Line 116) Db(u2b("만족할만한 스테이지가 되었습니다. 후훗.")),
# (Line 117) Db(u2b("엄청 반짝반짝했네. 미키, 깜짝 놀랬어."))];
End_Sound_Text = _CGFW(lambda: [_ARR(FlattenList([Db(u2b("")), Db(u2b("하아.. 아무리 나라도 완전연소야! 엄청 즐거웠어!")), Db(u2b("나의 노래.. 들어줘서 고마워!")), Db(u2b("라이브, 굉장히 불타올랐네! 쿠후후♪")), Db(u2b("나, 굉장히 즐거웠어!")), Db(u2b("팬 여러분, 그리고 무대 뒤의 당신에게.. 이 노래가 전해졌다고 믿을게요.")), Db(u2b("모두에게 덕분에, 부를 수 있었어. 정말로 고마워요~")), Db(u2b("팬 모두가 기뻐해줘서 아리사 대만족이에요!")), Db(u2b("오늘의 프로듀서, 엄청 멋졌어! 하이터치하자, 하이터치!")), Db(u2b("아카네짱, 자신의 재능이 두려워!")), Db(u2b("")), Db(u2b("됐다! 저, 제대로 노래했어요! 레슨 열심히 해서 다행이야~")), Db(u2b("엑설런트에요! 이것이 로코의 스테이지에요!")), Db(u2b("저.. 이렇게나 잘 부를수 있게 되었네요.. 기뻐라..♪")), Db(u2b("해냈다! 연습 이상의 성과를 내버렸다구요!")), Db(u2b("후후, 완벽했었네~ 재능이 개화해버린건가~♪")), Db(u2b("노래 부른다는건, 이렇게나 기분 좋은 일이었네요. 또 노래하고 싶어요.")), Db(u2b("정말로 기뻐요! 여러분에게 감사드립니다!")), Db(u2b("굉장히 좋은 기분이네요. 우후후♪")), Db(u2b("팬들도 모두 웃는 얼굴이야~ 잘 부를 수 있어서 다행이야!")), Db(u2b("")), Db(u2b("제 마음, 제대로 모두에게 전할 수 있었어요. 왠지.. 굉장히 기뻐요!")), Db(u2b("최고로 달아올랐네, 프로듀서! 좋아, 모두 함께 축하하자!")), Db(u2b("오늘의 저는 무적이에요! 프로듀서씨의 하트도 단단히 록온이에요!")), Db(u2b("지금의 저, 절호조였네요! 모두도 즐겨준걸까~")), Db(u2b("연습의 성과가 제대로 발휘되었습니다!")), Db(u2b("모두 고마워~ 최고로 기분 좋은 라이브였네.")), Db(u2b("나의 가장 멋진 모습 봐주었을지도.. 모두, 고마워!")), Db(u2b("엄-청 즐거웠어! 좋은 느낌이잖아!")), Db(u2b("어쩜~ 멋있게 부를 수 있었어요~ 기쁜일이네요~ 후후♪")), Db(u2b("")), Db(u2b("나는 제법 잘 불렀던 것 같아! 어땠어? 프로듀서!")), Db(u2b("프로듀서. 방금 전의 라이브, 잘 부를 수 있었습니다. 힘내서 다행이야.")), Db(u2b("에헤헤, 나의 어덜티한 노랫소리에 모두 푹 빠져버렸네♪")), Db(u2b("원더호~한 스테이지에서 모두를 해피~하게 만드는 거에요!")), Db(u2b("해.. 해냈다..! 제 스스로는 잘 해냈다고 생각합니다.")), Db(u2b("지금, 굉장히 능숙하게 되었네요!")), Db(u2b("정말로 기뻐요! 가슴이 벅차서.. 말이 안나올 정도로!")), Db(u2b("해냈구나! 모두~ 응원 고마워~!")), Db(u2b("환상적인 시간을 여러분과 공유할 수 있어서, 저.. 행복해요!")), Db(u2b("")), Db(u2b("가르쳐 주셨던 것, 전부 할 수 있었다고 생각해요. 해냈어..!")), Db(u2b("가슴이 뜨거워서.. 뭐야.. 이 기분..")), Db(u2b("오늘의 안나, 비빗한 상태잖아! 이대로 계속 갈게!")), Db(u2b("저, 조금은 변할 수 있었을지도!")), Db(u2b("이런 퍼포먼스를 할 수 있다니.. 후훗, 우쭐해버릴 것 같아.")), Db(u2b("오늘은 무척 잘 노래할 수 있었다고 생각해요.")), Db(u2b("모두! 고맙습니다! 헤헷, 야리~!")), Db(u2b("해냈네! 다음에도 이 상태로 갈게!")), Db(u2b("회장의 오빠, 언니! 엄~청 사랑하니까~! 웅후후~")), Db(u2b("")), Db(u2b("모두의 덕분이네요! 정말로 감사했습니다!")), Db(u2b("모두의 가슴에 노래가 닿을 수 있었다면, 이보다 기쁜 일은 없습니다.")), Db(u2b("웃우! 프로듀서! 저, 할 수 있었어요!")), Db(u2b("완벽한 라이브였네! 자신을 좀 더 칭찬해줘, 프로듀서!")), Db(u2b("만족할만한 스테이지가 되었습니다. 후훗.")), Db(u2b("엄청 반짝반짝했네. 미키, 깜짝 놀랬어."))]))], 1)[0]
