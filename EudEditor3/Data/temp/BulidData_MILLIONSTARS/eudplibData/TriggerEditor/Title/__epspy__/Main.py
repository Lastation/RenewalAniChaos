## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import getunitID as id;
import getunitID as id
# (Line 2) import Title.Variable as v;
from Title import Variable as v
# (Line 3) import Title.Effect as e;
from Title import Effect as e
# (Line 5) function Init();
# (Line 6) function FixedUpdate();
# (Line 7) function PlayerUpdate(cp);
# (Line 9) function Title_Text(cp);
# (Line 10) function Text_Auto(cp, value, index);
# (Line 12) function Title_Check(cp);
# (Line 13) function Check_Auto(cp, index);
# (Line 15) const s = StringBuffer();
s = _CGFW(lambda: [StringBuffer()], 1)[0]
# (Line 16) var label;
label = EUDVariable()
# (Line 17) var value;
value = EUDVariable()
# (Line 18) var index;
index = EUDVariable()
# (Line 19) var isHave;
isHave = EUDVariable()
# (Line 21) function Init()
# (Line 22) {
@EUDFunc
def Init():
    # (Line 24) }
    # (Line 26) function FixedUpdate()
    pass

# (Line 27) {
@EUDFunc
def FixedUpdate():
    # (Line 28) e.FixedUpdate();
    e.FixedUpdate()
    # (Line 29) }
    # (Line 31) function PlayerUpdate(cp)

# (Line 32) {
@EUDFunc
def PlayerUpdate(cp):
    # (Line 33) Title_Text(cp);
    Title_Text(cp)
    # (Line 34) Title_Check(cp);
    Title_Check(cp)
    # (Line 35) }
    # (Line 37) function Title_Text(cp)

# (Line 38) {
@EUDFunc
def Title_Text(cp):
    # (Line 39) index = 0;
    index << (0)
    # (Line 41) switch(id.Unit_ID[cp])
    EUDSwitch(id.Unit_ID[cp])
    # (Line 42) {
    # (Line 43) case 175:
    _t1 = EUDSwitchCase()
    # (Line 44) s.printAt(0, "\n\x13\x1F -- ", ptr2s(GetTBLAddr(id.Unit_ID[cp] + 1)), " \x1F-- \n");
    if _t1(175):
        s.printAt(0, "\n\x13\x1F -- ", ptr2s(GetTBLAddr(id.Unit_ID[cp] + 1)), " \x1F-- \n")
        # (Line 46) value = v.Title_Flag[v.Title_Star_1[index]];
        value << (v.Title_Flag[v.Title_Star_1[index]])
        # (Line 47) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 48) index += 1;
        index.__iadd__(1)
        # (Line 50) value = v.Title_Flag[v.Title_Star_1[index]];
        value << (v.Title_Flag[v.Title_Star_1[index]])
        # (Line 51) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 52) index += 1;
        index.__iadd__(1)
        # (Line 54) value = v.Title_Flag[v.Title_Star_1[index]];
        value << (v.Title_Flag[v.Title_Star_1[index]])
        # (Line 55) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 56) index += 1;
        index.__iadd__(1)
        # (Line 58) s.printAt(index + 3,"\n\n\n");
        s.printAt(index + 3, "\n\n\n")
        # (Line 59) id.Unit_ID[cp] = 1000;
        _ARRW(id.Unit_ID, cp) << (1000)
        # (Line 60) break;
        EUDBreak()
        # (Line 61) case 174:
    _t2 = EUDSwitchCase()
    # (Line 62) s.printAt(0, "\n\x13\x1F -- ", ptr2s(GetTBLAddr(id.Unit_ID[cp] + 1)), " \x1F-- \n");
    if _t2(174):
        s.printAt(0, "\n\x13\x1F -- ", ptr2s(GetTBLAddr(id.Unit_ID[cp] + 1)), " \x1F-- \n")
        # (Line 64) value = v.Title_Flag[v.Title_Star_2[index]];
        value << (v.Title_Flag[v.Title_Star_2[index]])
        # (Line 65) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 66) index += 1;
        index.__iadd__(1)
        # (Line 68) value = v.Title_Flag[v.Title_Star_2[index]];
        value << (v.Title_Flag[v.Title_Star_2[index]])
        # (Line 69) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 70) index += 1;
        index.__iadd__(1)
        # (Line 72) value = v.Title_Flag[v.Title_Star_2[index]];
        value << (v.Title_Flag[v.Title_Star_2[index]])
        # (Line 73) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 74) index += 1;
        index.__iadd__(1)
        # (Line 76) s.printAt(index + 3,"\n\n\n");
        s.printAt(index + 3, "\n\n\n")
        # (Line 77) id.Unit_ID[cp] = 1000;
        _ARRW(id.Unit_ID, cp) << (1000)
        # (Line 78) break;
        EUDBreak()
        # (Line 79) case 173:
    _t3 = EUDSwitchCase()
    # (Line 80) s.printAt(0, "\n\x13\x1F -- ", ptr2s(GetTBLAddr(id.Unit_ID[cp] + 1)), " \x1F-- \n");
    if _t3(173):
        s.printAt(0, "\n\x13\x1F -- ", ptr2s(GetTBLAddr(id.Unit_ID[cp] + 1)), " \x1F-- \n")
        # (Line 82) value = v.Title_Flag[v.Title_Star_3[index]];
        value << (v.Title_Flag[v.Title_Star_3[index]])
        # (Line 83) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 84) index += 1;
        index.__iadd__(1)
        # (Line 86) value = v.Title_Flag[v.Title_Star_3[index]];
        value << (v.Title_Flag[v.Title_Star_3[index]])
        # (Line 87) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 88) index += 1;
        index.__iadd__(1)
        # (Line 90) value = v.Title_Flag[v.Title_Star_3[index]];
        value << (v.Title_Flag[v.Title_Star_3[index]])
        # (Line 91) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 92) index += 1;
        index.__iadd__(1)
        # (Line 94) s.printAt(index + 3,"\n\n\n");
        s.printAt(index + 3, "\n\n\n")
        # (Line 95) id.Unit_ID[cp] = 1000;
        _ARRW(id.Unit_ID, cp) << (1000)
        # (Line 96) break;
        EUDBreak()
        # (Line 97) case 172:
    _t4 = EUDSwitchCase()
    # (Line 98) s.printAt(0, "\n\x13\x1F -- ", ptr2s(GetTBLAddr(id.Unit_ID[cp] + 1)), " \x1F-- \n");
    if _t4(172):
        s.printAt(0, "\n\x13\x1F -- ", ptr2s(GetTBLAddr(id.Unit_ID[cp] + 1)), " \x1F-- \n")
        # (Line 100) value = v.Title_Flag[v.Title_Star_4[index]];
        value << (v.Title_Flag[v.Title_Star_4[index]])
        # (Line 101) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 102) index += 1;
        index.__iadd__(1)
        # (Line 104) value = v.Title_Flag[v.Title_Star_4[index]];
        value << (v.Title_Flag[v.Title_Star_4[index]])
        # (Line 105) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 106) index += 1;
        index.__iadd__(1)
        # (Line 108) value = v.Title_Flag[v.Title_Star_4[index]];
        value << (v.Title_Flag[v.Title_Star_4[index]])
        # (Line 109) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 110) index += 1;
        index.__iadd__(1)
        # (Line 112) s.printAt(index + 3,"\n\n\n");
        s.printAt(index + 3, "\n\n\n")
        # (Line 113) id.Unit_ID[cp] = 1000;
        _ARRW(id.Unit_ID, cp) << (1000)
        # (Line 114) break;
        EUDBreak()
        # (Line 115) case 171:
    _t5 = EUDSwitchCase()
    # (Line 116) s.printAt(0, "\n\x13\x1F -- ", ptr2s(GetTBLAddr(id.Unit_ID[cp] + 1)), " \x1F-- \n");
    if _t5(171):
        s.printAt(0, "\n\x13\x1F -- ", ptr2s(GetTBLAddr(id.Unit_ID[cp] + 1)), " \x1F-- \n")
        # (Line 118) value = v.Title_Flag[v.Title_Star_5[index]];
        value << (v.Title_Flag[v.Title_Star_5[index]])
        # (Line 119) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 120) index += 1;
        index.__iadd__(1)
        # (Line 122) value = v.Title_Flag[v.Title_Star_5[index]];
        value << (v.Title_Flag[v.Title_Star_5[index]])
        # (Line 123) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 124) index += 1;
        index.__iadd__(1)
        # (Line 126) value = v.Title_Flag[v.Title_Star_5[index]];
        value << (v.Title_Flag[v.Title_Star_5[index]])
        # (Line 127) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 128) index += 1;
        index.__iadd__(1)
        # (Line 130) s.printAt(index + 3,"\n\n\n");
        s.printAt(index + 3, "\n\n\n")
        # (Line 131) id.Unit_ID[cp] = 1000;
        _ARRW(id.Unit_ID, cp) << (1000)
        # (Line 132) break;
        EUDBreak()
        # (Line 133) case 170:
    _t6 = EUDSwitchCase()
    # (Line 134) s.printAt(0, "\n\x13\x1F -- ", ptr2s(GetTBLAddr(id.Unit_ID[cp] + 1)), " \x1F-- \n");
    if _t6(170):
        s.printAt(0, "\n\x13\x1F -- ", ptr2s(GetTBLAddr(id.Unit_ID[cp] + 1)), " \x1F-- \n")
        # (Line 136) value = v.Title_Flag[v.Title_Star_6[index]];
        value << (v.Title_Flag[v.Title_Star_6[index]])
        # (Line 137) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 138) index += 1;
        index.__iadd__(1)
        # (Line 140) value = v.Title_Flag[v.Title_Star_6[index]];
        value << (v.Title_Flag[v.Title_Star_6[index]])
        # (Line 141) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 142) index += 1;
        index.__iadd__(1)
        # (Line 144) value = v.Title_Flag[v.Title_Star_6[index]];
        value << (v.Title_Flag[v.Title_Star_6[index]])
        # (Line 145) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 146) index += 1;
        index.__iadd__(1)
        # (Line 148) s.printAt(index + 3,"\n\n\n");
        s.printAt(index + 3, "\n\n\n")
        # (Line 149) id.Unit_ID[cp] = 1000;
        _ARRW(id.Unit_ID, cp) << (1000)
        # (Line 150) break;
        EUDBreak()
        # (Line 151) case 169:
    _t7 = EUDSwitchCase()
    # (Line 152) s.printAt(0, "\n\x13\x1F -- ", ptr2s(GetTBLAddr(id.Unit_ID[cp] + 1)), " \x1F-- \n");
    if _t7(169):
        s.printAt(0, "\n\x13\x1F -- ", ptr2s(GetTBLAddr(id.Unit_ID[cp] + 1)), " \x1F-- \n")
        # (Line 154) value = v.Title_Flag[v.Title_Star_7[index]];
        value << (v.Title_Flag[v.Title_Star_7[index]])
        # (Line 155) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 156) index += 1;
        index.__iadd__(1)
        # (Line 158) value = v.Title_Flag[v.Title_Star_7[index]];
        value << (v.Title_Flag[v.Title_Star_7[index]])
        # (Line 159) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 160) index += 1;
        index.__iadd__(1)
        # (Line 162) value = v.Title_Flag[v.Title_Star_7[index]];
        value << (v.Title_Flag[v.Title_Star_7[index]])
        # (Line 163) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 164) index += 1;
        index.__iadd__(1)
        # (Line 166) s.printAt(index + 3,"\n\n\n");
        s.printAt(index + 3, "\n\n\n")
        # (Line 167) id.Unit_ID[cp] = 1000;
        _ARRW(id.Unit_ID, cp) << (1000)
        # (Line 168) break;
        EUDBreak()
        # (Line 169) case 168:
    _t8 = EUDSwitchCase()
    # (Line 170) s.printAt(0, "\n\x13\x1F -- ", ptr2s(GetTBLAddr(id.Unit_ID[cp] + 1)), " \x1F-- \n");
    if _t8(168):
        s.printAt(0, "\n\x13\x1F -- ", ptr2s(GetTBLAddr(id.Unit_ID[cp] + 1)), " \x1F-- \n")
        # (Line 172) value = v.Title_Flag[v.Title_Star_8[index]];
        value << (v.Title_Flag[v.Title_Star_8[index]])
        # (Line 173) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 174) index += 1;
        index.__iadd__(1)
        # (Line 176) value = v.Title_Flag[v.Title_Star_8[index]];
        value << (v.Title_Flag[v.Title_Star_8[index]])
        # (Line 177) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 178) index += 1;
        index.__iadd__(1)
        # (Line 180) value = v.Title_Flag[v.Title_Star_8[index]];
        value << (v.Title_Flag[v.Title_Star_8[index]])
        # (Line 181) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 182) index += 1;
        index.__iadd__(1)
        # (Line 184) s.printAt(index + 3,"\n\n\n");
        s.printAt(index + 3, "\n\n\n")
        # (Line 185) id.Unit_ID[cp] = 1000;
        _ARRW(id.Unit_ID, cp) << (1000)
        # (Line 186) break;
        EUDBreak()
        # (Line 187) case 167:
    _t9 = EUDSwitchCase()
    # (Line 188) s.printAt(0, "\n\x13\x1F -- ", ptr2s(GetTBLAddr(id.Unit_ID[cp] + 1)), " \x1F-- \n");
    if _t9(167):
        s.printAt(0, "\n\x13\x1F -- ", ptr2s(GetTBLAddr(id.Unit_ID[cp] + 1)), " \x1F-- \n")
        # (Line 190) value = v.Title_Flag[v.Title_Star_9[index]];
        value << (v.Title_Flag[v.Title_Star_9[index]])
        # (Line 191) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 192) index += 1;
        index.__iadd__(1)
        # (Line 194) value = v.Title_Flag[v.Title_Star_9[index]];
        value << (v.Title_Flag[v.Title_Star_9[index]])
        # (Line 195) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 196) index += 1;
        index.__iadd__(1)
        # (Line 198) value = v.Title_Flag[v.Title_Star_9[index]];
        value << (v.Title_Flag[v.Title_Star_9[index]])
        # (Line 199) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 200) index += 1;
        index.__iadd__(1)
        # (Line 202) s.printAt(index + 3,"\n\n\n");
        s.printAt(index + 3, "\n\n\n")
        # (Line 203) id.Unit_ID[cp] = 1000;
        _ARRW(id.Unit_ID, cp) << (1000)
        # (Line 204) break;
        EUDBreak()
        # (Line 205) case 166:
    _t10 = EUDSwitchCase()
    # (Line 206) s.printAt(0, "\n\x13\x1F -- ", ptr2s(GetTBLAddr(id.Unit_ID[cp] + 1)), " \x1F-- \n");
    if _t10(166):
        s.printAt(0, "\n\x13\x1F -- ", ptr2s(GetTBLAddr(id.Unit_ID[cp] + 1)), " \x1F-- \n")
        # (Line 208) value = v.Title_Flag[v.Title_Star_10[index]];
        value << (v.Title_Flag[v.Title_Star_10[index]])
        # (Line 209) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 210) index += 1;
        index.__iadd__(1)
        # (Line 212) value = v.Title_Flag[v.Title_Star_10[index]];
        value << (v.Title_Flag[v.Title_Star_10[index]])
        # (Line 213) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 214) index += 1;
        index.__iadd__(1)
        # (Line 216) value = v.Title_Flag[v.Title_Star_10[index]];
        value << (v.Title_Flag[v.Title_Star_10[index]])
        # (Line 217) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 218) index += 1;
        index.__iadd__(1)
        # (Line 220) s.printAt(index + 3,"\n\n\n");
        s.printAt(index + 3, "\n\n\n")
        # (Line 221) id.Unit_ID[cp] = 1000;
        _ARRW(id.Unit_ID, cp) << (1000)
        # (Line 222) break;
        EUDBreak()
        # (Line 223) case 165:
    _t11 = EUDSwitchCase()
    # (Line 224) s.printAt(0, "\n\x13\x1F -- ", ptr2s(GetTBLAddr(id.Unit_ID[cp] + 1)), " \x1F-- \n");
    if _t11(165):
        s.printAt(0, "\n\x13\x1F -- ", ptr2s(GetTBLAddr(id.Unit_ID[cp] + 1)), " \x1F-- \n")
        # (Line 226) value = v.Title_Flag[v.Title_Star_11[index]];
        value << (v.Title_Flag[v.Title_Star_11[index]])
        # (Line 227) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 228) index += 1;
        index.__iadd__(1)
        # (Line 230) value = v.Title_Flag[v.Title_Star_11[index]];
        value << (v.Title_Flag[v.Title_Star_11[index]])
        # (Line 231) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 232) index += 1;
        index.__iadd__(1)
        # (Line 234) value = v.Title_Flag[v.Title_Star_11[index]];
        value << (v.Title_Flag[v.Title_Star_11[index]])
        # (Line 235) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 236) index += 1;
        index.__iadd__(1)
        # (Line 238) s.printAt(index + 3,"\n\n\n");
        s.printAt(index + 3, "\n\n\n")
        # (Line 239) id.Unit_ID[cp] = 1000;
        _ARRW(id.Unit_ID, cp) << (1000)
        # (Line 240) break;
        EUDBreak()
        # (Line 241) case 164:
    _t12 = EUDSwitchCase()
    # (Line 242) s.printAt(0, "\n\x13\x1F -- ", ptr2s(GetTBLAddr(id.Unit_ID[cp] + 1)), " \x1F-- \n");
    if _t12(164):
        s.printAt(0, "\n\x13\x1F -- ", ptr2s(GetTBLAddr(id.Unit_ID[cp] + 1)), " \x1F-- \n")
        # (Line 244) value = v.Title_Flag[v.Title_Star_12[index]];
        value << (v.Title_Flag[v.Title_Star_12[index]])
        # (Line 245) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 246) index += 1;
        index.__iadd__(1)
        # (Line 248) value = v.Title_Flag[v.Title_Star_12[index]];
        value << (v.Title_Flag[v.Title_Star_12[index]])
        # (Line 249) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 250) index += 1;
        index.__iadd__(1)
        # (Line 252) value = v.Title_Flag[v.Title_Star_12[index]];
        value << (v.Title_Flag[v.Title_Star_12[index]])
        # (Line 253) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 254) index += 1;
        index.__iadd__(1)
        # (Line 256) value = v.Title_Flag[v.Title_Star_12[index]];
        value << (v.Title_Flag[v.Title_Star_12[index]])
        # (Line 257) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 258) index += 1;
        index.__iadd__(1)
        # (Line 260) s.printAt(index + 3,"\n\n");
        s.printAt(index + 3, "\n\n")
        # (Line 261) id.Unit_ID[cp] = 1000;
        _ARRW(id.Unit_ID, cp) << (1000)
        # (Line 262) break;
        EUDBreak()
        # (Line 265) case 163:
    _t13 = EUDSwitchCase()
    # (Line 266) s.printAt(0, "\n\x13\x1F -- ", ptr2s(GetTBLAddr(id.Unit_ID[cp] + 1)), " \x1F-- \n");
    if _t13(163):
        s.printAt(0, "\n\x13\x1F -- ", ptr2s(GetTBLAddr(id.Unit_ID[cp] + 1)), " \x1F-- \n")
        # (Line 268) value = v.Title_Flag[v.Title_Prin_1[index]];
        value << (v.Title_Flag[v.Title_Prin_1[index]])
        # (Line 269) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 270) index += 1;
        index.__iadd__(1)
        # (Line 272) value = v.Title_Flag[v.Title_Prin_1[index]];
        value << (v.Title_Flag[v.Title_Prin_1[index]])
        # (Line 273) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 274) index += 1;
        index.__iadd__(1)
        # (Line 276) s.printAt(index + 3,"\n\n\n\n");
        s.printAt(index + 3, "\n\n\n\n")
        # (Line 277) id.Unit_ID[cp] = 1000;
        _ARRW(id.Unit_ID, cp) << (1000)
        # (Line 278) break;
        EUDBreak()
        # (Line 279) case 160:
    _t14 = EUDSwitchCase()
    # (Line 280) s.printAt(0, "\n\x13\x1F -- ", ptr2s(GetTBLAddr(id.Unit_ID[cp] + 1)), " \x1F-- \n");
    if _t14(160):
        s.printAt(0, "\n\x13\x1F -- ", ptr2s(GetTBLAddr(id.Unit_ID[cp] + 1)), " \x1F-- \n")
        # (Line 282) value = v.Title_Flag[v.Title_Prin_2[index]];
        value << (v.Title_Flag[v.Title_Prin_2[index]])
        # (Line 283) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 284) index += 1;
        index.__iadd__(1)
        # (Line 286) value = v.Title_Flag[v.Title_Prin_2[index]];
        value << (v.Title_Flag[v.Title_Prin_2[index]])
        # (Line 287) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 288) index += 1;
        index.__iadd__(1)
        # (Line 290) value = v.Title_Flag[v.Title_Prin_2[index]];
        value << (v.Title_Flag[v.Title_Prin_2[index]])
        # (Line 291) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 292) index += 1;
        index.__iadd__(1)
        # (Line 294) s.printAt(index + 3,"\n\n\n");
        s.printAt(index + 3, "\n\n\n")
        # (Line 295) id.Unit_ID[cp] = 1000;
        _ARRW(id.Unit_ID, cp) << (1000)
        # (Line 296) break;
        EUDBreak()
        # (Line 297) case 159:
    _t15 = EUDSwitchCase()
    # (Line 298) s.printAt(0, "\n\x13\x1F -- ", ptr2s(GetTBLAddr(id.Unit_ID[cp] + 1)), " \x1F-- \n");
    if _t15(159):
        s.printAt(0, "\n\x13\x1F -- ", ptr2s(GetTBLAddr(id.Unit_ID[cp] + 1)), " \x1F-- \n")
        # (Line 300) value = v.Title_Flag[v.Title_Prin_3[index]];
        value << (v.Title_Flag[v.Title_Prin_3[index]])
        # (Line 301) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 302) index += 1;
        index.__iadd__(1)
        # (Line 304) value = v.Title_Flag[v.Title_Prin_3[index]];
        value << (v.Title_Flag[v.Title_Prin_3[index]])
        # (Line 305) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 306) index += 1;
        index.__iadd__(1)
        # (Line 308) value = v.Title_Flag[v.Title_Prin_3[index]];
        value << (v.Title_Flag[v.Title_Prin_3[index]])
        # (Line 309) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 310) index += 1;
        index.__iadd__(1)
        # (Line 312) s.printAt(index + 3,"\n\n\n");
        s.printAt(index + 3, "\n\n\n")
        # (Line 313) id.Unit_ID[cp] = 1000;
        _ARRW(id.Unit_ID, cp) << (1000)
        # (Line 314) break;
        EUDBreak()
        # (Line 315) case 136:
    _t16 = EUDSwitchCase()
    # (Line 316) s.printAt(0, "\n\x13\x1F -- ", ptr2s(GetTBLAddr(id.Unit_ID[cp] + 1)), " \x1F-- \n");
    if _t16(136):
        s.printAt(0, "\n\x13\x1F -- ", ptr2s(GetTBLAddr(id.Unit_ID[cp] + 1)), " \x1F-- \n")
        # (Line 318) value = v.Title_Flag[v.Title_Prin_4[index]];
        value << (v.Title_Flag[v.Title_Prin_4[index]])
        # (Line 319) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 320) index += 1;
        index.__iadd__(1)
        # (Line 322) value = v.Title_Flag[v.Title_Prin_4[index]];
        value << (v.Title_Flag[v.Title_Prin_4[index]])
        # (Line 323) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 324) index += 1;
        index.__iadd__(1)
        # (Line 326) value = v.Title_Flag[v.Title_Prin_4[index]];
        value << (v.Title_Flag[v.Title_Prin_4[index]])
        # (Line 327) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 328) index += 1;
        index.__iadd__(1)
        # (Line 330) value = v.Title_Flag[v.Title_Prin_4[index]];
        value << (v.Title_Flag[v.Title_Prin_4[index]])
        # (Line 331) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 332) index += 1;
        index.__iadd__(1)
        # (Line 334) value = v.Title_Flag[v.Title_Prin_4[index]];
        value << (v.Title_Flag[v.Title_Prin_4[index]])
        # (Line 335) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 336) index += 1;
        index.__iadd__(1)
        # (Line 338) s.printAt(index + 3,"\n");
        s.printAt(index + 3, "\n")
        # (Line 339) id.Unit_ID[cp] = 1000;
        _ARRW(id.Unit_ID, cp) << (1000)
        # (Line 340) break;
        EUDBreak()
        # (Line 343) case 154:
    _t17 = EUDSwitchCase()
    # (Line 344) s.printAt(0, "\n\x13\x1F -- ", ptr2s(GetTBLAddr(id.Unit_ID[cp] + 1)), " \x1F-- \n");
    if _t17(154):
        s.printAt(0, "\n\x13\x1F -- ", ptr2s(GetTBLAddr(id.Unit_ID[cp] + 1)), " \x1F-- \n")
        # (Line 346) value = v.Title_Flag[v.Title_Fair_1[index]];
        value << (v.Title_Flag[v.Title_Fair_1[index]])
        # (Line 347) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 348) index += 1;
        index.__iadd__(1)
        # (Line 350) value = v.Title_Flag[v.Title_Fair_1[index]];
        value << (v.Title_Flag[v.Title_Fair_1[index]])
        # (Line 351) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 352) index += 1;
        index.__iadd__(1)
        # (Line 354) s.printAt(index + 3,"\n\n\n\n");
        s.printAt(index + 3, "\n\n\n\n")
        # (Line 355) id.Unit_ID[cp] = 1000;
        _ARRW(id.Unit_ID, cp) << (1000)
        # (Line 356) break;
        EUDBreak()
        # (Line 357) case 152:
    _t18 = EUDSwitchCase()
    # (Line 358) s.printAt(0, "\n\x13\x1F -- ", ptr2s(GetTBLAddr(id.Unit_ID[cp] + 1)), " \x1F-- \n");
    if _t18(152):
        s.printAt(0, "\n\x13\x1F -- ", ptr2s(GetTBLAddr(id.Unit_ID[cp] + 1)), " \x1F-- \n")
        # (Line 360) value = v.Title_Flag[v.Title_Fair_2[index]];
        value << (v.Title_Flag[v.Title_Fair_2[index]])
        # (Line 361) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 362) index += 1;
        index.__iadd__(1)
        # (Line 364) value = v.Title_Flag[v.Title_Fair_2[index]];
        value << (v.Title_Flag[v.Title_Fair_2[index]])
        # (Line 365) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 366) index += 1;
        index.__iadd__(1)
        # (Line 368) value = v.Title_Flag[v.Title_Fair_2[index]];
        value << (v.Title_Flag[v.Title_Fair_2[index]])
        # (Line 369) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 370) index += 1;
        index.__iadd__(1)
        # (Line 372) s.printAt(index + 3,"\n\n\n");
        s.printAt(index + 3, "\n\n\n")
        # (Line 373) id.Unit_ID[cp] = 1000;
        _ARRW(id.Unit_ID, cp) << (1000)
        # (Line 374) break;
        EUDBreak()
        # (Line 375) case 151:
    _t19 = EUDSwitchCase()
    # (Line 376) s.printAt(0, "\n\x13\x1F -- ", ptr2s(GetTBLAddr(id.Unit_ID[cp] + 1)), " \x1F-- \n");
    if _t19(151):
        s.printAt(0, "\n\x13\x1F -- ", ptr2s(GetTBLAddr(id.Unit_ID[cp] + 1)), " \x1F-- \n")
        # (Line 378) value = v.Title_Flag[v.Title_Fair_3[index]];
        value << (v.Title_Flag[v.Title_Fair_3[index]])
        # (Line 379) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 380) index += 1;
        index.__iadd__(1)
        # (Line 382) value = v.Title_Flag[v.Title_Fair_3[index]];
        value << (v.Title_Flag[v.Title_Fair_3[index]])
        # (Line 383) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 384) index += 1;
        index.__iadd__(1)
        # (Line 386) value = v.Title_Flag[v.Title_Fair_3[index]];
        value << (v.Title_Flag[v.Title_Fair_3[index]])
        # (Line 387) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 388) index += 1;
        index.__iadd__(1)
        # (Line 390) value = v.Title_Flag[v.Title_Fair_3[index]];
        value << (v.Title_Flag[v.Title_Fair_3[index]])
        # (Line 391) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 392) index += 1;
        index.__iadd__(1)
        # (Line 394) s.printAt(index + 3,"\n\n");
        s.printAt(index + 3, "\n\n")
        # (Line 395) id.Unit_ID[cp] = 1000;
        _ARRW(id.Unit_ID, cp) << (1000)
        # (Line 396) break;
        EUDBreak()
        # (Line 397) case 148:
    _t20 = EUDSwitchCase()
    # (Line 398) s.printAt(0, "\n\x13\x1F -- ", ptr2s(GetTBLAddr(id.Unit_ID[cp] + 1)), " \x1F-- \n");
    if _t20(148):
        s.printAt(0, "\n\x13\x1F -- ", ptr2s(GetTBLAddr(id.Unit_ID[cp] + 1)), " \x1F-- \n")
        # (Line 400) value = v.Title_Flag[v.Title_Fair_4[index]];
        value << (v.Title_Flag[v.Title_Fair_4[index]])
        # (Line 401) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 402) index += 1;
        index.__iadd__(1)
        # (Line 404) value = v.Title_Flag[v.Title_Fair_4[index]];
        value << (v.Title_Flag[v.Title_Fair_4[index]])
        # (Line 405) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 406) index += 1;
        index.__iadd__(1)
        # (Line 408) value = v.Title_Flag[v.Title_Fair_4[index]];
        value << (v.Title_Flag[v.Title_Fair_4[index]])
        # (Line 409) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 410) index += 1;
        index.__iadd__(1)
        # (Line 412) value = v.Title_Flag[v.Title_Fair_4[index]];
        value << (v.Title_Flag[v.Title_Fair_4[index]])
        # (Line 413) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 414) index += 1;
        index.__iadd__(1)
        # (Line 416) s.printAt(index + 3,"\n\n");
        s.printAt(index + 3, "\n\n")
        # (Line 417) id.Unit_ID[cp] = 1000;
        _ARRW(id.Unit_ID, cp) << (1000)
        # (Line 418) break;
        EUDBreak()
        # (Line 421) case 147:
    _t21 = EUDSwitchCase()
    # (Line 422) s.printAt(0, "\n\x13\x1F -- ", ptr2s(GetTBLAddr(id.Unit_ID[cp] + 1)), " \x1F-- \n");
    if _t21(147):
        s.printAt(0, "\n\x13\x1F -- ", ptr2s(GetTBLAddr(id.Unit_ID[cp] + 1)), " \x1F-- \n")
        # (Line 424) value = v.Title_Flag[v.Title_Angel_1[index]];
        value << (v.Title_Flag[v.Title_Angel_1[index]])
        # (Line 425) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 426) index += 1;
        index.__iadd__(1)
        # (Line 428) value = v.Title_Flag[v.Title_Angel_1[index]];
        value << (v.Title_Flag[v.Title_Angel_1[index]])
        # (Line 429) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 430) index += 1;
        index.__iadd__(1)
        # (Line 432) s.printAt(index + 3,"\n\n\n\n");
        s.printAt(index + 3, "\n\n\n\n")
        # (Line 433) id.Unit_ID[cp] = 1000;
        _ARRW(id.Unit_ID, cp) << (1000)
        # (Line 434) break;
        EUDBreak()
        # (Line 435) case 142:
    _t22 = EUDSwitchCase()
    # (Line 436) s.printAt(0, "\n\x13\x1F -- ", ptr2s(GetTBLAddr(id.Unit_ID[cp] + 1)), " \x1F-- \n");
    if _t22(142):
        s.printAt(0, "\n\x13\x1F -- ", ptr2s(GetTBLAddr(id.Unit_ID[cp] + 1)), " \x1F-- \n")
        # (Line 438) value = v.Title_Flag[v.Title_Angel_2[index]];
        value << (v.Title_Flag[v.Title_Angel_2[index]])
        # (Line 439) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 440) index += 1;
        index.__iadd__(1)
        # (Line 442) value = v.Title_Flag[v.Title_Angel_2[index]];
        value << (v.Title_Flag[v.Title_Angel_2[index]])
        # (Line 443) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 444) index += 1;
        index.__iadd__(1)
        # (Line 446) value = v.Title_Flag[v.Title_Angel_2[index]];
        value << (v.Title_Flag[v.Title_Angel_2[index]])
        # (Line 447) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 448) index += 1;
        index.__iadd__(1)
        # (Line 450) value = v.Title_Flag[v.Title_Angel_2[index]];
        value << (v.Title_Flag[v.Title_Angel_2[index]])
        # (Line 451) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 452) index += 1;
        index.__iadd__(1)
        # (Line 454) s.printAt(index + 3,"\n\n");
        s.printAt(index + 3, "\n\n")
        # (Line 455) id.Unit_ID[cp] = 1000;
        _ARRW(id.Unit_ID, cp) << (1000)
        # (Line 456) break;
        EUDBreak()
        # (Line 457) case 140:
    _t23 = EUDSwitchCase()
    # (Line 458) s.printAt(0, "\n\x13\x1F -- ", ptr2s(GetTBLAddr(id.Unit_ID[cp] + 1)), " \x1F-- \n");
    if _t23(140):
        s.printAt(0, "\n\x13\x1F -- ", ptr2s(GetTBLAddr(id.Unit_ID[cp] + 1)), " \x1F-- \n")
        # (Line 460) value = v.Title_Flag[v.Title_Angel_3[index]];
        value << (v.Title_Flag[v.Title_Angel_3[index]])
        # (Line 461) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 462) index += 1;
        index.__iadd__(1)
        # (Line 464) value = v.Title_Flag[v.Title_Angel_3[index]];
        value << (v.Title_Flag[v.Title_Angel_3[index]])
        # (Line 465) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 466) index += 1;
        index.__iadd__(1)
        # (Line 468) value = v.Title_Flag[v.Title_Angel_3[index]];
        value << (v.Title_Flag[v.Title_Angel_3[index]])
        # (Line 469) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 470) index += 1;
        index.__iadd__(1)
        # (Line 472) s.printAt(index + 3,"\n\n\n");
        s.printAt(index + 3, "\n\n\n")
        # (Line 473) id.Unit_ID[cp] = 1000;
        _ARRW(id.Unit_ID, cp) << (1000)
        # (Line 474) break;
        EUDBreak()
        # (Line 475) case 139:
    _t24 = EUDSwitchCase()
    # (Line 476) s.printAt(0, "\n\x13\x1F -- ", ptr2s(GetTBLAddr(id.Unit_ID[cp] + 1)), " \x1F-- \n");
    if _t24(139):
        s.printAt(0, "\n\x13\x1F -- ", ptr2s(GetTBLAddr(id.Unit_ID[cp] + 1)), " \x1F-- \n")
        # (Line 478) value = v.Title_Flag[v.Title_Angel_4[index]];
        value << (v.Title_Flag[v.Title_Angel_4[index]])
        # (Line 479) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 480) index += 1;
        index.__iadd__(1)
        # (Line 482) value = v.Title_Flag[v.Title_Angel_4[index]];
        value << (v.Title_Flag[v.Title_Angel_4[index]])
        # (Line 483) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 484) index += 1;
        index.__iadd__(1)
        # (Line 486) value = v.Title_Flag[v.Title_Angel_4[index]];
        value << (v.Title_Flag[v.Title_Angel_4[index]])
        # (Line 487) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 488) index += 1;
        index.__iadd__(1)
        # (Line 490) value = v.Title_Flag[v.Title_Angel_4[index]];
        value << (v.Title_Flag[v.Title_Angel_4[index]])
        # (Line 491) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 492) index += 1;
        index.__iadd__(1)
        # (Line 494) s.printAt(index + 3,"\n\n");
        s.printAt(index + 3, "\n\n")
        # (Line 495) id.Unit_ID[cp] = 1000;
        _ARRW(id.Unit_ID, cp) << (1000)
        # (Line 496) break;
        EUDBreak()
        # (Line 499) case 137:
    _t25 = EUDSwitchCase()
    # (Line 500) s.printAt(0, "\n\x13\x1F -- ", ptr2s(GetTBLAddr(id.Unit_ID[cp] + 1)), " \x1F-- \n");
    if _t25(137):
        s.printAt(0, "\n\x13\x1F -- ", ptr2s(GetTBLAddr(id.Unit_ID[cp] + 1)), " \x1F-- \n")
        # (Line 502) value = v.Title_Flag[v.Title_Leader_1[index]];
        value << (v.Title_Flag[v.Title_Leader_1[index]])
        # (Line 503) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 504) index += 1;
        index.__iadd__(1)
        # (Line 506) value = v.Title_Flag[v.Title_Leader_1[index]];
        value << (v.Title_Flag[v.Title_Leader_1[index]])
        # (Line 507) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 508) index += 1;
        index.__iadd__(1)
        # (Line 510) value = v.Title_Flag[v.Title_Leader_1[index]];
        value << (v.Title_Flag[v.Title_Leader_1[index]])
        # (Line 511) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 512) index += 1;
        index.__iadd__(1)
        # (Line 514) s.printAt(index + 3,"\n\n");
        s.printAt(index + 3, "\n\n")
        # (Line 515) id.Unit_ID[cp] = 1000;
        _ARRW(id.Unit_ID, cp) << (1000)
        # (Line 516) break;
        EUDBreak()
        # (Line 517) case 138:
    _t26 = EUDSwitchCase()
    # (Line 518) s.printAt(0, "\n\x13\x1F -- ", ptr2s(GetTBLAddr(id.Unit_ID[cp] + 1)), " \x1F-- \n");
    if _t26(138):
        s.printAt(0, "\n\x13\x1F -- ", ptr2s(GetTBLAddr(id.Unit_ID[cp] + 1)), " \x1F-- \n")
        # (Line 520) value = v.Title_Flag[v.Title_Leader_2[index]];
        value << (v.Title_Flag[v.Title_Leader_2[index]])
        # (Line 521) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 522) index += 1;
        index.__iadd__(1)
        # (Line 524) value = v.Title_Flag[v.Title_Leader_2[index]];
        value << (v.Title_Flag[v.Title_Leader_2[index]])
        # (Line 525) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 526) index += 1;
        index.__iadd__(1)
        # (Line 528) value = v.Title_Flag[v.Title_Leader_2[index]];
        value << (v.Title_Flag[v.Title_Leader_2[index]])
        # (Line 529) Text_Auto(cp, value, index);
        Text_Auto(cp, value, index)
        # (Line 530) index += 1;
        index.__iadd__(1)
        # (Line 532) s.printAt(index + 3,"\n\n");
        s.printAt(index + 3, "\n\n")
        # (Line 533) id.Unit_ID[cp] = 1000;
        _ARRW(id.Unit_ID, cp) << (1000)
        # (Line 534) break;
        EUDBreak()
        # (Line 535) }
    # (Line 536) }
    EUDEndSwitch()
    # (Line 538) function Text_Auto(cp, value, index)

# (Line 539) {
@EUDFunc
def Text_Auto(cp, value_1, index_1):
    # (Line 540) if (Bring(cp, AtLeast, 1, value, "Anywhere"))
    if EUDIf()(Bring(cp, AtLeast, 1, value_1, "Anywhere")):
        # (Line 541) { isHave = 1; }
        isHave << (1)
        # (Line 542) else
        # (Line 543) { isHave = 0; }
    if EUDElse()():
        isHave << (0)
        # (Line 545) label = bread(0x65FD00 + 16592 + value * 1) + 1302;
    EUDEndIf()
    label << (f_bread(0x65FD00 + 16592 + value_1 * 1) + 1302)
    # (Line 546) if(value > 1000) { s.printAt(index + 3, "\x13\x05", ptr2s(GetTBLAddr(value - 999))); }
    if EUDIf()(value_1 <= 1000, neg=True):
        s.printAt(index_1 + 3, "\x13\x05", ptr2s(GetTBLAddr(value_1 - 999)))
        # (Line 547) else { s.printAt(index + 3, "\x13", ptr2s(GetTBLAddr(label)), " ", ptr2s(GetTBLAddr(value+1)), " ", ptr2s(v.Title_Db[isHave])); }
    if EUDElse()():
        s.printAt(index_1 + 3, "\x13", ptr2s(GetTBLAddr(label)), " ", ptr2s(GetTBLAddr(value_1 + 1)), " ", ptr2s(v.Title_Db[isHave]))
        # (Line 548) }
    EUDEndIf()
    # (Line 550) function Title_Check(cp)

# (Line 551) {
@EUDFunc
def Title_Check(cp):
    # (Line 552) if (Bring(cp, AtLeast, 1, "(men)", "lounge_Puzzle"))
    if EUDIf()(Bring(cp, AtLeast, 1, "(men)", "lounge_Puzzle")):
        # (Line 553) {
        # (Line 554) Check_Auto(cp, 0);
        Check_Auto(cp, 0)
        # (Line 555) Check_Auto(cp, 1);
        Check_Auto(cp, 1)
        # (Line 556) Check_Auto(cp, 2);
        Check_Auto(cp, 2)
        # (Line 557) Check_Auto(cp, 3);
        Check_Auto(cp, 3)
        # (Line 558) Check_Auto(cp, 4);
        Check_Auto(cp, 4)
        # (Line 559) Check_Auto(cp, 5);
        Check_Auto(cp, 5)
        # (Line 560) Check_Auto(cp, 6);
        Check_Auto(cp, 6)
        # (Line 561) Check_Auto(cp, 7);
        Check_Auto(cp, 7)
        # (Line 562) Check_Auto(cp, 8);
        Check_Auto(cp, 8)
        # (Line 563) Check_Auto(cp, 9);
        Check_Auto(cp, 9)
        # (Line 564) Check_Auto(cp, 10);
        Check_Auto(cp, 10)
        # (Line 565) Check_Auto(cp, 11);
        Check_Auto(cp, 11)
        # (Line 566) Check_Auto(cp, 12);
        Check_Auto(cp, 12)
        # (Line 567) Check_Auto(cp, 13);
        Check_Auto(cp, 13)
        # (Line 568) Check_Auto(cp, 14);
        Check_Auto(cp, 14)
        # (Line 569) Check_Auto(cp, 15);
        Check_Auto(cp, 15)
        # (Line 570) Check_Auto(cp, 16);
        Check_Auto(cp, 16)
        # (Line 571) Check_Auto(cp, 17);
        Check_Auto(cp, 17)
        # (Line 572) Check_Auto(cp, 18);
        Check_Auto(cp, 18)
        # (Line 573) Check_Auto(cp, 19);
        Check_Auto(cp, 19)
        # (Line 574) Check_Auto(cp, 20);
        Check_Auto(cp, 20)
        # (Line 575) Check_Auto(cp, 21);
        Check_Auto(cp, 21)
        # (Line 576) Check_Auto(cp, 22);
        Check_Auto(cp, 22)
        # (Line 577) Check_Auto(cp, 23);
        Check_Auto(cp, 23)
        # (Line 578) Check_Auto(cp, 24);
        Check_Auto(cp, 24)
        # (Line 579) Check_Auto(cp, 25);
        Check_Auto(cp, 25)
        # (Line 580) Check_Auto(cp, 26);
        Check_Auto(cp, 26)
        # (Line 581) Check_Auto(cp, 27);
        Check_Auto(cp, 27)
        # (Line 582) Check_Auto(cp, 28);
        Check_Auto(cp, 28)
        # (Line 583) Check_Auto(cp, 29);
        Check_Auto(cp, 29)
        # (Line 584) Check_Auto(cp, 30);
        Check_Auto(cp, 30)
        # (Line 585) Check_Auto(cp, 31);
        Check_Auto(cp, 31)
        # (Line 586) Check_Auto(cp, 32);
        Check_Auto(cp, 32)
        # (Line 587) Check_Auto(cp, 33);
        Check_Auto(cp, 33)
        # (Line 588) Check_Auto(cp, 34);
        Check_Auto(cp, 34)
        # (Line 589) Check_Auto(cp, 35);
        Check_Auto(cp, 35)
        # (Line 590) Check_Auto(cp, 36);
        Check_Auto(cp, 36)
        # (Line 591) Check_Auto(cp, 37);
        Check_Auto(cp, 37)
        # (Line 592) Check_Auto(cp, 38);
        Check_Auto(cp, 38)
        # (Line 593) Check_Auto(cp, 39);
        Check_Auto(cp, 39)
        # (Line 594) Check_Auto(cp, 40);
        Check_Auto(cp, 40)
        # (Line 595) Check_Auto(cp, 41);
        Check_Auto(cp, 41)
        # (Line 596) Check_Auto(cp, 42);
        Check_Auto(cp, 42)
        # (Line 597) Check_Auto(cp, 43);
        Check_Auto(cp, 43)
        # (Line 598) Check_Auto(cp, 44);
        Check_Auto(cp, 44)
        # (Line 599) Check_Auto(cp, 45);
        Check_Auto(cp, 45)
        # (Line 600) Check_Auto(cp, 46);
        Check_Auto(cp, 46)
        # (Line 601) Check_Auto(cp, 47);
        Check_Auto(cp, 47)
        # (Line 602) Check_Auto(cp, 48);
        Check_Auto(cp, 48)
        # (Line 603) Check_Auto(cp, 49);
        Check_Auto(cp, 49)
        # (Line 604) Check_Auto(cp, 50);
        Check_Auto(cp, 50)
        # (Line 605) Check_Auto(cp, 51);
        Check_Auto(cp, 51)
        # (Line 606) Check_Auto(cp, 52);
        Check_Auto(cp, 52)
        # (Line 607) Check_Auto(cp, 53);
        Check_Auto(cp, 53)
        # (Line 608) Check_Auto(cp, 54);
        Check_Auto(cp, 54)
        # (Line 609) Check_Auto(cp, 55);
        Check_Auto(cp, 55)
        # (Line 610) }
        # (Line 611) }
    EUDEndIf()
    # (Line 613) function Check_Auto(cp, index)

# (Line 614) {
@EUDFunc
def Check_Auto(cp, index_1):
    # (Line 615) if (Bring(cp, AtLeast, 1, v.Title_Flag[index], "lounge_Puzzle"))
    if EUDIf()(Bring(cp, AtLeast, 1, v.Title_Flag[index_1], "lounge_Puzzle")):
        # (Line 616) {
        # (Line 617) s.print("\n\x13", ptr2s(GetTBLAddr(v.Title_Flag[index] + 1)), ptr2s(v.Title_Db[2]), "\n");
        s.print("\n\x13", ptr2s(GetTBLAddr(v.Title_Flag[index_1] + 1)), ptr2s(v.Title_Db[2]), "\n")
        # (Line 618) RemoveUnitAt(1, v.Title_Flag[index], "lounge_Puzzle", cp);
        # (Line 619) v.Title_Flag[index] += 1000;
        DoActions(RemoveUnitAt(1, v.Title_Flag[index_1], "lounge_Puzzle", cp))
        _ARRW(v.Title_Flag, index_1).__iadd__(1000)
        # (Line 620) e.Title_Complete_Check();
        e.Title_Complete_Check()
        # (Line 621) }
        # (Line 622) }
    EUDEndIf()
