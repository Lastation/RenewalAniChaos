## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import Princess.Variable as pv;
from Princess import Variable as pv
# (Line 2) import Fairy.Variable as fv;
from Fairy import Variable as fv
# (Line 3) import Angel.Variable as av;
from Angel import Variable as av
# (Line 5) import Princess.ButtonText as pt;
from Princess import ButtonText as pt
# (Line 6) import Fairy.ButtonText as ft;
from Fairy import ButtonText as ft
# (Line 7) import Angel.ButtonText as at;
from Angel import ButtonText as at
# (Line 9) const s = StringBuffer();
s = _CGFW(lambda: [StringBuffer()], 1)[0]
# (Line 11) function Lesson_Unit(cp);
# (Line 12) function Lesson_Apply(type, id, cp);
# (Line 14) function Lesson_Unit(cp)
# (Line 15) {
@EUDFunc
def Lesson_Unit(cp):
    # (Line 16) if (Bring(cp, AtLeast, 1, 111, "MedalGacha Step 1") && Bring(cp, Exactly, 1, "(men)", "lounge_Cloth"))
    if EUDIf()(EUDSCAnd()(Bring(cp, AtLeast, 1, 111, "MedalGacha Step 1"))(Bring(cp, Exactly, 1, "(men)", "lounge_Cloth"))()):
        # (Line 17) {
        # (Line 19) if (Bring(cp, AtLeast, 1, pv.Unit_ID[0], "lounge_Cloth")) { Lesson_Apply(0, 0, cp); }
        if EUDIf()(Bring(cp, AtLeast, 1, pv.Unit_ID[0], "lounge_Cloth")):
            Lesson_Apply(0, 0, cp)
            # (Line 20) if (Bring(cp, AtLeast, 1, pv.Unit_ID[1], "lounge_Cloth")) { Lesson_Apply(0, 1, cp); }
        EUDEndIf()
        if EUDIf()(Bring(cp, AtLeast, 1, pv.Unit_ID[1], "lounge_Cloth")):
            Lesson_Apply(0, 1, cp)
            # (Line 21) if (Bring(cp, AtLeast, 1, pv.Unit_ID[2], "lounge_Cloth")) { Lesson_Apply(0, 2, cp); }
        EUDEndIf()
        if EUDIf()(Bring(cp, AtLeast, 1, pv.Unit_ID[2], "lounge_Cloth")):
            Lesson_Apply(0, 2, cp)
            # (Line 22) if (Bring(cp, AtLeast, 1, pv.Unit_ID[3], "lounge_Cloth")) { Lesson_Apply(0, 3, cp); }
        EUDEndIf()
        if EUDIf()(Bring(cp, AtLeast, 1, pv.Unit_ID[3], "lounge_Cloth")):
            Lesson_Apply(0, 3, cp)
            # (Line 23) if (Bring(cp, AtLeast, 1, pv.Unit_ID[4], "lounge_Cloth")) { Lesson_Apply(0, 4, cp); }
        EUDEndIf()
        if EUDIf()(Bring(cp, AtLeast, 1, pv.Unit_ID[4], "lounge_Cloth")):
            Lesson_Apply(0, 4, cp)
            # (Line 24) if (Bring(cp, AtLeast, 1, pv.Unit_ID[5], "lounge_Cloth")) { Lesson_Apply(0, 5, cp); }
        EUDEndIf()
        if EUDIf()(Bring(cp, AtLeast, 1, pv.Unit_ID[5], "lounge_Cloth")):
            Lesson_Apply(0, 5, cp)
            # (Line 25) if (Bring(cp, AtLeast, 1, pv.Unit_ID[6], "lounge_Cloth")) { Lesson_Apply(0, 6, cp); }
        EUDEndIf()
        if EUDIf()(Bring(cp, AtLeast, 1, pv.Unit_ID[6], "lounge_Cloth")):
            Lesson_Apply(0, 6, cp)
            # (Line 26) if (Bring(cp, AtLeast, 1, pv.Unit_ID[7], "lounge_Cloth")) { Lesson_Apply(0, 7, cp); }
        EUDEndIf()
        if EUDIf()(Bring(cp, AtLeast, 1, pv.Unit_ID[7], "lounge_Cloth")):
            Lesson_Apply(0, 7, cp)
            # (Line 27) if (Bring(cp, AtLeast, 1, pv.Unit_ID[8], "lounge_Cloth")) { Lesson_Apply(0, 8, cp); }
        EUDEndIf()
        if EUDIf()(Bring(cp, AtLeast, 1, pv.Unit_ID[8], "lounge_Cloth")):
            Lesson_Apply(0, 8, cp)
            # (Line 28) if (Bring(cp, AtLeast, 1, pv.Unit_ID[9], "lounge_Cloth")) { Lesson_Apply(0, 9, cp); }
        EUDEndIf()
        if EUDIf()(Bring(cp, AtLeast, 1, pv.Unit_ID[9], "lounge_Cloth")):
            Lesson_Apply(0, 9, cp)
            # (Line 29) if (Bring(cp, AtLeast, 1, pv.Unit_ID[10], "lounge_Cloth")) { Lesson_Apply(0, 10, cp); }
        EUDEndIf()
        if EUDIf()(Bring(cp, AtLeast, 1, pv.Unit_ID[10], "lounge_Cloth")):
            Lesson_Apply(0, 10, cp)
            # (Line 30) if (Bring(cp, AtLeast, 1, pv.Unit_ID[11], "lounge_Cloth")) { Lesson_Apply(0, 11, cp); }
        EUDEndIf()
        if EUDIf()(Bring(cp, AtLeast, 1, pv.Unit_ID[11], "lounge_Cloth")):
            Lesson_Apply(0, 11, cp)
            # (Line 31) if (Bring(cp, AtLeast, 1, pv.Unit_ID[12], "lounge_Cloth")) { Lesson_Apply(0, 12, cp); }
        EUDEndIf()
        if EUDIf()(Bring(cp, AtLeast, 1, pv.Unit_ID[12], "lounge_Cloth")):
            Lesson_Apply(0, 12, cp)
            # (Line 34) if (Bring(cp, AtLeast, 1, fv.Unit_ID[0], "lounge_Cloth")) { Lesson_Apply(1, 0, cp); }
        EUDEndIf()
        if EUDIf()(Bring(cp, AtLeast, 1, fv.Unit_ID[0], "lounge_Cloth")):
            Lesson_Apply(1, 0, cp)
            # (Line 35) if (Bring(cp, AtLeast, 1, fv.Unit_ID[1], "lounge_Cloth")) { Lesson_Apply(1, 1, cp); }
        EUDEndIf()
        if EUDIf()(Bring(cp, AtLeast, 1, fv.Unit_ID[1], "lounge_Cloth")):
            Lesson_Apply(1, 1, cp)
            # (Line 36) if (Bring(cp, AtLeast, 1, fv.Unit_ID[2], "lounge_Cloth")) { Lesson_Apply(1, 2, cp); }
        EUDEndIf()
        if EUDIf()(Bring(cp, AtLeast, 1, fv.Unit_ID[2], "lounge_Cloth")):
            Lesson_Apply(1, 2, cp)
            # (Line 37) if (Bring(cp, AtLeast, 1, fv.Unit_ID[3], "lounge_Cloth")) { Lesson_Apply(1, 3, cp); }
        EUDEndIf()
        if EUDIf()(Bring(cp, AtLeast, 1, fv.Unit_ID[3], "lounge_Cloth")):
            Lesson_Apply(1, 3, cp)
            # (Line 38) if (Bring(cp, AtLeast, 1, fv.Unit_ID[4], "lounge_Cloth")) { Lesson_Apply(1, 4, cp); }
        EUDEndIf()
        if EUDIf()(Bring(cp, AtLeast, 1, fv.Unit_ID[4], "lounge_Cloth")):
            Lesson_Apply(1, 4, cp)
            # (Line 39) if (Bring(cp, AtLeast, 1, fv.Unit_ID[5], "lounge_Cloth")) { Lesson_Apply(1, 5, cp); }
        EUDEndIf()
        if EUDIf()(Bring(cp, AtLeast, 1, fv.Unit_ID[5], "lounge_Cloth")):
            Lesson_Apply(1, 5, cp)
            # (Line 40) if (Bring(cp, AtLeast, 1, fv.Unit_ID[6], "lounge_Cloth")) { Lesson_Apply(1, 6, cp); }
        EUDEndIf()
        if EUDIf()(Bring(cp, AtLeast, 1, fv.Unit_ID[6], "lounge_Cloth")):
            Lesson_Apply(1, 6, cp)
            # (Line 41) if (Bring(cp, AtLeast, 1, fv.Unit_ID[7], "lounge_Cloth")) { Lesson_Apply(1, 7, cp); }
        EUDEndIf()
        if EUDIf()(Bring(cp, AtLeast, 1, fv.Unit_ID[7], "lounge_Cloth")):
            Lesson_Apply(1, 7, cp)
            # (Line 42) if (Bring(cp, AtLeast, 1, fv.Unit_ID[8], "lounge_Cloth")) { Lesson_Apply(1, 8, cp); }
        EUDEndIf()
        if EUDIf()(Bring(cp, AtLeast, 1, fv.Unit_ID[8], "lounge_Cloth")):
            Lesson_Apply(1, 8, cp)
            # (Line 43) if (Bring(cp, AtLeast, 1, fv.Unit_ID[9], "lounge_Cloth")) { Lesson_Apply(1, 9, cp); }
        EUDEndIf()
        if EUDIf()(Bring(cp, AtLeast, 1, fv.Unit_ID[9], "lounge_Cloth")):
            Lesson_Apply(1, 9, cp)
            # (Line 44) if (Bring(cp, AtLeast, 1, fv.Unit_ID[10], "lounge_Cloth")) { Lesson_Apply(1, 10, cp); }
        EUDEndIf()
        if EUDIf()(Bring(cp, AtLeast, 1, fv.Unit_ID[10], "lounge_Cloth")):
            Lesson_Apply(1, 10, cp)
            # (Line 45) if (Bring(cp, AtLeast, 1, fv.Unit_ID[11], "lounge_Cloth")) { Lesson_Apply(1, 11, cp); }
        EUDEndIf()
        if EUDIf()(Bring(cp, AtLeast, 1, fv.Unit_ID[11], "lounge_Cloth")):
            Lesson_Apply(1, 11, cp)
            # (Line 46) if (Bring(cp, AtLeast, 1, fv.Unit_ID[12], "lounge_Cloth")) { Lesson_Apply(1, 12, cp); }
        EUDEndIf()
        if EUDIf()(Bring(cp, AtLeast, 1, fv.Unit_ID[12], "lounge_Cloth")):
            Lesson_Apply(1, 12, cp)
            # (Line 49) if (Bring(cp, AtLeast, 1, av.Unit_ID[0], "lounge_Cloth")) { Lesson_Apply(2, 0, cp); }
        EUDEndIf()
        if EUDIf()(Bring(cp, AtLeast, 1, av.Unit_ID[0], "lounge_Cloth")):
            Lesson_Apply(2, 0, cp)
            # (Line 50) if (Bring(cp, AtLeast, 1, av.Unit_ID[1], "lounge_Cloth")) { Lesson_Apply(2, 1, cp); }
        EUDEndIf()
        if EUDIf()(Bring(cp, AtLeast, 1, av.Unit_ID[1], "lounge_Cloth")):
            Lesson_Apply(2, 1, cp)
            # (Line 51) if (Bring(cp, AtLeast, 1, av.Unit_ID[2], "lounge_Cloth")) { Lesson_Apply(2, 2, cp); }
        EUDEndIf()
        if EUDIf()(Bring(cp, AtLeast, 1, av.Unit_ID[2], "lounge_Cloth")):
            Lesson_Apply(2, 2, cp)
            # (Line 52) if (Bring(cp, AtLeast, 1, av.Unit_ID[3], "lounge_Cloth")) { Lesson_Apply(2, 3, cp); }
        EUDEndIf()
        if EUDIf()(Bring(cp, AtLeast, 1, av.Unit_ID[3], "lounge_Cloth")):
            Lesson_Apply(2, 3, cp)
            # (Line 53) if (Bring(cp, AtLeast, 1, av.Unit_ID[4], "lounge_Cloth")) { Lesson_Apply(2, 4, cp); }
        EUDEndIf()
        if EUDIf()(Bring(cp, AtLeast, 1, av.Unit_ID[4], "lounge_Cloth")):
            Lesson_Apply(2, 4, cp)
            # (Line 54) if (Bring(cp, AtLeast, 1, av.Unit_ID[5], "lounge_Cloth")) { Lesson_Apply(2, 5, cp); }
        EUDEndIf()
        if EUDIf()(Bring(cp, AtLeast, 1, av.Unit_ID[5], "lounge_Cloth")):
            Lesson_Apply(2, 5, cp)
            # (Line 55) if (Bring(cp, AtLeast, 1, av.Unit_ID[6], "lounge_Cloth")) { Lesson_Apply(2, 6, cp); }
        EUDEndIf()
        if EUDIf()(Bring(cp, AtLeast, 1, av.Unit_ID[6], "lounge_Cloth")):
            Lesson_Apply(2, 6, cp)
            # (Line 56) if (Bring(cp, AtLeast, 1, av.Unit_ID[7], "lounge_Cloth")) { Lesson_Apply(2, 7, cp); }
        EUDEndIf()
        if EUDIf()(Bring(cp, AtLeast, 1, av.Unit_ID[7], "lounge_Cloth")):
            Lesson_Apply(2, 7, cp)
            # (Line 57) if (Bring(cp, AtLeast, 1, av.Unit_ID[8], "lounge_Cloth")) { Lesson_Apply(2, 8, cp); }
        EUDEndIf()
        if EUDIf()(Bring(cp, AtLeast, 1, av.Unit_ID[8], "lounge_Cloth")):
            Lesson_Apply(2, 8, cp)
            # (Line 58) if (Bring(cp, AtLeast, 1, av.Unit_ID[9], "lounge_Cloth")) { Lesson_Apply(2, 9, cp); }
        EUDEndIf()
        if EUDIf()(Bring(cp, AtLeast, 1, av.Unit_ID[9], "lounge_Cloth")):
            Lesson_Apply(2, 9, cp)
            # (Line 59) if (Bring(cp, AtLeast, 1, av.Unit_ID[10], "lounge_Cloth")) { Lesson_Apply(2, 10, cp); }
        EUDEndIf()
        if EUDIf()(Bring(cp, AtLeast, 1, av.Unit_ID[10], "lounge_Cloth")):
            Lesson_Apply(2, 10, cp)
            # (Line 60) if (Bring(cp, AtLeast, 1, av.Unit_ID[11], "lounge_Cloth")) { Lesson_Apply(2, 11, cp); }
        EUDEndIf()
        if EUDIf()(Bring(cp, AtLeast, 1, av.Unit_ID[11], "lounge_Cloth")):
            Lesson_Apply(2, 11, cp)
            # (Line 61) if (Bring(cp, AtLeast, 1, av.Unit_ID[12], "lounge_Cloth")) { Lesson_Apply(2, 12, cp); }
        EUDEndIf()
        if EUDIf()(Bring(cp, AtLeast, 1, av.Unit_ID[12], "lounge_Cloth")):
            Lesson_Apply(2, 12, cp)
            # (Line 62) }
        EUDEndIf()
        # (Line 63) else if (Bring(cp, AtLeast, 2, "(men)", "lounge_Cloth"))
    if EUDElseIf()(Bring(cp, AtLeast, 2, "(men)", "lounge_Cloth")):
        # (Line 64) {
        # (Line 65) s.print("\x13\x04한명의 아이돌 에게만 사용 가능합니다.");
        s.print("\x13\x04한명의 아이돌 에게만 사용 가능합니다.")
        # (Line 66) MoveUnit(All, "(men)", cp, "lounge_Cloth", "Center_lounge");
        # (Line 67) }
        DoActions(MoveUnit(All, "(men)", cp, "lounge_Cloth", "Center_lounge"))
        # (Line 68) }
    EUDEndIf()
    # (Line 70) function Lesson_Apply(type, id, cp)

# (Line 71) {
@EUDFunc
def Lesson_Apply(type, id, cp):
    # (Line 72) switch(type)
    EUDSwitch(type)
    # (Line 73) {
    # (Line 74) case 0:
    _t1 = EUDSwitchCase()
    # (Line 75) if (pv.Album_Level[id] < 10)
    if _t1(0):
        if EUDIf()(pv.Album_Level[id] >= 10, neg=True):
            # (Line 76) {
            # (Line 77) pt.Add_AlbumNow(id , 1);
            pt.Add_AlbumNow(id, 1)
            # (Line 78) RemoveUnitAt(1, 111, "MedalGacha Step 1", cp);
            # (Line 79) }
            DoActions(RemoveUnitAt(1, 111, "MedalGacha Step 1", cp))
            # (Line 80) break;
        EUDEndIf()
        EUDBreak()
        # (Line 81) case 1:
    _t3 = EUDSwitchCase()
    # (Line 82) if (fv.Album_Level[id] < 10)
    if _t3(1):
        if EUDIf()(fv.Album_Level[id] >= 10, neg=True):
            # (Line 83) {
            # (Line 84) ft.Add_AlbumNow(id , 1);
            ft.Add_AlbumNow(id, 1)
            # (Line 85) RemoveUnitAt(1, 111, "MedalGacha Step 1", cp);
            # (Line 86) }
            DoActions(RemoveUnitAt(1, 111, "MedalGacha Step 1", cp))
            # (Line 87) break;
        EUDEndIf()
        EUDBreak()
        # (Line 88) case 2:
    _t5 = EUDSwitchCase()
    # (Line 89) if (av.Album_Level[id] < 10)
    if _t5(2):
        if EUDIf()(av.Album_Level[id] >= 10, neg=True):
            # (Line 90) {
            # (Line 91) at.Add_AlbumNow(id , 1);
            at.Add_AlbumNow(id, 1)
            # (Line 92) RemoveUnitAt(1, 111, "MedalGacha Step 1", cp);
            # (Line 93) }
            DoActions(RemoveUnitAt(1, 111, "MedalGacha Step 1", cp))
            # (Line 94) break;
        EUDEndIf()
        EUDBreak()
        # (Line 95) }
    # (Line 96) }
    EUDEndSwitch()
