## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import variable_data as vd;
import variable_data as vd
# (Line 2) import variable_round as vr;
import variable_round as vr
# (Line 4) const s = StringBuffer();
s = _CGFW(lambda: [StringBuffer()], 1)[0]
# (Line 6) function Event_Print(cp);
# (Line 7) function Trainning_Ticket();
# (Line 8) function Cloth_Ticket();
# (Line 9) function Album_Ticket();
# (Line 10) function Event_Unit(top, down);
# (Line 12) function event_score(cp)
# (Line 13) {
@EUDFunc
def f_event_score(cp):
    # (Line 14) if (Kills(cp, AtLeast, 1, 90))
    if EUDIf()(Kills(cp, AtLeast, 1, 90)):
        # (Line 15) {
        # (Line 16) SetDeaths(P6, Add,150 +  dwrand() % 30, "Event_Score");
        # (Line 17) SetKills(cp, Subtract, 1, 90);
        DoActions(SetDeaths(P6, Add, 150 + f_dwrand() % 30, "Event_Score"))
        # (Line 18) }
        DoActions(SetKills(cp, Subtract, 1, 90))
        # (Line 20) if (Deaths(P6, AtLeast, 1000, "Event_Score") && Deaths(P7, AtMost, 0, "Event_Score"))
    EUDEndIf()
    if EUDIf()(EUDSCAnd()(Deaths(P6, AtLeast, 1000, "Event_Score"))(Deaths(P7, AtMost, 0, "Event_Score"))()):
        # (Line 21) {
        # (Line 22) SetDeaths(Force1, SetTo, 1, "Event_Score");
        # (Line 23) SetDeaths(P7, Add, 1, "Event_Score");
        DoActions(SetDeaths(Force1, SetTo, 1, "Event_Score"))
        # (Line 24) SetResources(Force1, Add, 100, Ore);
        DoActions(SetDeaths(P7, Add, 1, "Event_Score"))
        # (Line 25) }
        DoActions(SetResources(Force1, Add, 100, Ore))
        # (Line 26) if (Deaths(P6, AtLeast, 3000, "Event_Score") && Deaths(P7, AtMost, 1, "Event_Score"))
    EUDEndIf()
    if EUDIf()(EUDSCAnd()(Deaths(P6, AtLeast, 3000, "Event_Score"))(Deaths(P7, AtMost, 1, "Event_Score"))()):
        # (Line 27) {
        # (Line 28) SetDeaths(Force1, SetTo, 2, "Event_Score");
        # (Line 29) SetDeaths(P7, Add, 1, "Event_Score");
        DoActions(SetDeaths(Force1, SetTo, 2, "Event_Score"))
        # (Line 30) SetResources(Force1, Add, 1, Gas);
        DoActions(SetDeaths(P7, Add, 1, "Event_Score"))
        # (Line 31) }
        DoActions(SetResources(Force1, Add, 1, Gas))
        # (Line 32) if (Deaths(P6, AtLeast, 5000, "Event_Score") && Deaths(P7, AtMost, 2, "Event_Score"))
    EUDEndIf()
    if EUDIf()(EUDSCAnd()(Deaths(P6, AtLeast, 5000, "Event_Score"))(Deaths(P7, AtMost, 2, "Event_Score"))()):
        # (Line 33) {
        # (Line 34) SetDeaths(Force1, SetTo, 3, "Event_Score");
        # (Line 35) SetDeaths(P7, Add, 1, "Event_Score");
        DoActions(SetDeaths(Force1, SetTo, 3, "Event_Score"))
        # (Line 36) CreateUnit(1, 64, "MedalGacha", Force1);
        DoActions(SetDeaths(P7, Add, 1, "Event_Score"))
        # (Line 37) }
        DoActions(CreateUnit(1, 64, "MedalGacha", Force1))
        # (Line 38) if (Deaths(P6, AtLeast, 7500, "Event_Score") && Deaths(P7, AtMost, 3, "Event_Score"))
    EUDEndIf()
    if EUDIf()(EUDSCAnd()(Deaths(P6, AtLeast, 7500, "Event_Score"))(Deaths(P7, AtMost, 3, "Event_Score"))()):
        # (Line 39) {
        # (Line 40) SetDeaths(Force1, SetTo, 4, "Event_Score");
        # (Line 41) SetDeaths(P7, Add, 1, "Event_Score");
        DoActions(SetDeaths(Force1, SetTo, 4, "Event_Score"))
        # (Line 42) Album_Ticket();
        DoActions(SetDeaths(P7, Add, 1, "Event_Score"))
        Album_Ticket()
        # (Line 43) }
        # (Line 44) if (Deaths(P6, AtLeast, 10000, "Event_Score") && Deaths(P7, AtMost, 4, "Event_Score"))
    EUDEndIf()
    if EUDIf()(EUDSCAnd()(Deaths(P6, AtLeast, 10000, "Event_Score"))(Deaths(P7, AtMost, 4, "Event_Score"))()):
        # (Line 45) {
        # (Line 46) SetDeaths(Force1, SetTo, 5, "Event_Score");
        # (Line 47) SetDeaths(P7, Add, 1, "Event_Score");
        DoActions(SetDeaths(Force1, SetTo, 5, "Event_Score"))
        # (Line 48) CreateUnit(1, 7, "MedalGacha", Force1);
        DoActions(SetDeaths(P7, Add, 1, "Event_Score"))
        # (Line 49) }
        DoActions(CreateUnit(1, 7, "MedalGacha", Force1))
        # (Line 50) if (Deaths(P6, AtLeast, 11000, "Event_Score") && Deaths(P7, AtMost, 5, "Event_Score"))
    EUDEndIf()
    if EUDIf()(EUDSCAnd()(Deaths(P6, AtLeast, 11000, "Event_Score"))(Deaths(P7, AtMost, 5, "Event_Score"))()):
        # (Line 51) {
        # (Line 52) SetDeaths(Force1, SetTo, 6, "Event_Score");
        # (Line 53) SetDeaths(P7, Add, 1, "Event_Score");
        DoActions(SetDeaths(Force1, SetTo, 6, "Event_Score"))
        # (Line 54) SetResources(Force1, Add, 200, Ore);
        DoActions(SetDeaths(P7, Add, 1, "Event_Score"))
        # (Line 55) }
        DoActions(SetResources(Force1, Add, 200, Ore))
        # (Line 56) if (Deaths(P6, AtLeast, 12000, "Event_Score") && Deaths(P7, AtMost, 6, "Event_Score"))
    EUDEndIf()
    if EUDIf()(EUDSCAnd()(Deaths(P6, AtLeast, 12000, "Event_Score"))(Deaths(P7, AtMost, 6, "Event_Score"))()):
        # (Line 57) {
        # (Line 58) SetDeaths(Force1, SetTo, 7, "Event_Score");
        # (Line 59) SetDeaths(P7, Add, 1, "Event_Score");
        DoActions(SetDeaths(Force1, SetTo, 7, "Event_Score"))
        # (Line 60) SetResources(Force1, Add, 2, Gas);
        DoActions(SetDeaths(P7, Add, 1, "Event_Score"))
        # (Line 61) }
        DoActions(SetResources(Force1, Add, 2, Gas))
        # (Line 62) if (Deaths(P6, AtLeast, 13000, "Event_Score") && Deaths(P7, AtMost, 7, "Event_Score"))
    EUDEndIf()
    if EUDIf()(EUDSCAnd()(Deaths(P6, AtLeast, 13000, "Event_Score"))(Deaths(P7, AtMost, 7, "Event_Score"))()):
        # (Line 63) {
        # (Line 64) SetDeaths(Force1, SetTo, 8, "Event_Score");
        # (Line 65) SetDeaths(P7, Add, 1, "Event_Score");
        DoActions(SetDeaths(Force1, SetTo, 8, "Event_Score"))
        # (Line 66) SetResources(Force1, Add, 300, Ore);
        DoActions(SetDeaths(P7, Add, 1, "Event_Score"))
        # (Line 67) }
        DoActions(SetResources(Force1, Add, 300, Ore))
        # (Line 68) if (Deaths(P6, AtLeast, 14000, "Event_Score") && Deaths(P7, AtMost, 8, "Event_Score"))
    EUDEndIf()
    if EUDIf()(EUDSCAnd()(Deaths(P6, AtLeast, 14000, "Event_Score"))(Deaths(P7, AtMost, 8, "Event_Score"))()):
        # (Line 69) {
        # (Line 70) SetDeaths(Force1, SetTo, 9, "Event_Score");
        # (Line 71) SetDeaths(P7, Add, 1, "Event_Score");
        DoActions(SetDeaths(Force1, SetTo, 9, "Event_Score"))
        # (Line 72) SetResources(Force1, Add, 3, Gas);
        DoActions(SetDeaths(P7, Add, 1, "Event_Score"))
        # (Line 73) }
        DoActions(SetResources(Force1, Add, 3, Gas))
        # (Line 74) if (Deaths(P6, AtLeast, 15000, "Event_Score") && Deaths(P7, AtMost, 9, "Event_Score"))
    EUDEndIf()
    if EUDIf()(EUDSCAnd()(Deaths(P6, AtLeast, 15000, "Event_Score"))(Deaths(P7, AtMost, 9, "Event_Score"))()):
        # (Line 75) {
        # (Line 76) SetDeaths(Force1, SetTo, 10, "Event_Score");
        # (Line 77) SetDeaths(P7, Add, 1, "Event_Score");
        DoActions(SetDeaths(Force1, SetTo, 10, "Event_Score"))
        # (Line 78) CreateUnit(1, 7, "MedalGacha", Force1);
        DoActions(SetDeaths(P7, Add, 1, "Event_Score"))
        # (Line 79) }
        DoActions(CreateUnit(1, 7, "MedalGacha", Force1))
        # (Line 81) if (Deaths(P6, Exactly, 2, "Round"))
    EUDEndIf()
    if EUDIf()(Deaths(P6, Exactly, 2, "Round")):
        # (Line 82) {
        # (Line 83) const event = dwread_epd(182 * 12 + 5);
        event = f_dwread_epd(182 * 12 + 5)
        # (Line 84) Event_Unit(vr.event_Top[event], vr.event_Down[event]);
        Event_Unit(vr.event_Top[event], vr.event_Down[event])
        # (Line 85) }
        # (Line 87) Event_Print(cp);
    EUDEndIf()
    Event_Print(cp)
    # (Line 88) }
    # (Line 90) function Event_Print(cp)

# (Line 91) {
@EUDFunc
def Event_Print(cp):
    # (Line 92) if (cp < 5)
    if EUDIf()(cp >= 5, neg=True):
        # (Line 93) {
        # (Line 94) if (Deaths(cp, Exactly, 1, "Event_Score"))	{ s.print("\n\x13\x04이벤트 점수 \x0F1000\x04점 달성 보상 - 100 \x0F골드\n"); SetDeaths(cp, SetTo, 0, "Event_Score"); }
        if EUDIf()(Deaths(cp, Exactly, 1, "Event_Score")):
            s.print("\n\x13\x04이벤트 점수 \x0F1000\x04점 달성 보상 - 100 \x0F골드\n")
            DoActions(SetDeaths(cp, SetTo, 0, "Event_Score"))
            # (Line 95) if (Deaths(cp, Exactly, 2, "Event_Score"))	{ s.print("\n\x13\x04이벤트 점수 \x0F3000\x04점 달성 보상 - 1 \x0FGas\n"); SetDeaths(cp, SetTo, 0, "Event_Score"); }
        EUDEndIf()
        if EUDIf()(Deaths(cp, Exactly, 2, "Event_Score")):
            s.print("\n\x13\x04이벤트 점수 \x0F3000\x04점 달성 보상 - 1 \x0FGas\n")
            DoActions(SetDeaths(cp, SetTo, 0, "Event_Score"))
            # (Line 96) if (Deaths(cp, Exactly, 3, "Event_Score"))	{ s.print("\n\x13\x04이벤트 점수 \x0F5000\x04점 달성 보상 - 1 \x0F메달 티켓\n"); SetDeaths(cp, SetTo, 0, "Event_Score"); }
        EUDEndIf()
        if EUDIf()(Deaths(cp, Exactly, 3, "Event_Score")):
            s.print("\n\x13\x04이벤트 점수 \x0F5000\x04점 달성 보상 - 1 \x0F메달 티켓\n")
            DoActions(SetDeaths(cp, SetTo, 0, "Event_Score"))
            # (Line 97) if (Deaths(cp, Exactly, 4, "Event_Score"))	{ s.print("\n\x13\x04이벤트 점수 \x0F7500\x04점 달성 보상 - 1 \x0F앨범 티켓\n"); SetDeaths(cp, SetTo, 0, "Event_Score"); }
        EUDEndIf()
        if EUDIf()(Deaths(cp, Exactly, 4, "Event_Score")):
            s.print("\n\x13\x04이벤트 점수 \x0F7500\x04점 달성 보상 - 1 \x0F앨범 티켓\n")
            DoActions(SetDeaths(cp, SetTo, 0, "Event_Score"))
            # (Line 98) if (Deaths(cp, Exactly, 5, "Event_Score"))	{ s.print("\n\x13\x04이벤트 점수 \x0F10000\x04점 달성 보상 - 1 \x0F플레티넘 티켓\n"); SetDeaths(cp, SetTo, 0, "Event_Score"); }
        EUDEndIf()
        if EUDIf()(Deaths(cp, Exactly, 5, "Event_Score")):
            s.print("\n\x13\x04이벤트 점수 \x0F10000\x04점 달성 보상 - 1 \x0F플레티넘 티켓\n")
            DoActions(SetDeaths(cp, SetTo, 0, "Event_Score"))
            # (Line 99) if (Deaths(cp, Exactly, 6, "Event_Score"))	{ s.print("\n\x13\x04이벤트 점수 \x0F11000\x04점 달성 보상 - 200 \x0F골드\n"); SetDeaths(cp, SetTo, 0, "Event_Score"); }
        EUDEndIf()
        if EUDIf()(Deaths(cp, Exactly, 6, "Event_Score")):
            s.print("\n\x13\x04이벤트 점수 \x0F11000\x04점 달성 보상 - 200 \x0F골드\n")
            DoActions(SetDeaths(cp, SetTo, 0, "Event_Score"))
            # (Line 100) if (Deaths(cp, Exactly, 7, "Event_Score"))	{ s.print("\n\x13\x04이벤트 점수 \x0F12000\x04점 달성 보상 - 2 \x0FGas\n"); SetDeaths(cp, SetTo, 0, "Event_Score"); }
        EUDEndIf()
        if EUDIf()(Deaths(cp, Exactly, 7, "Event_Score")):
            s.print("\n\x13\x04이벤트 점수 \x0F12000\x04점 달성 보상 - 2 \x0FGas\n")
            DoActions(SetDeaths(cp, SetTo, 0, "Event_Score"))
            # (Line 101) if (Deaths(cp, Exactly, 8, "Event_Score"))	{ s.print("\n\x13\x04이벤트 점수 \x0F13000\x04점 달성 보상 - 300 \x0F골드\n"); SetDeaths(cp, SetTo, 0, "Event_Score"); }
        EUDEndIf()
        if EUDIf()(Deaths(cp, Exactly, 8, "Event_Score")):
            s.print("\n\x13\x04이벤트 점수 \x0F13000\x04점 달성 보상 - 300 \x0F골드\n")
            DoActions(SetDeaths(cp, SetTo, 0, "Event_Score"))
            # (Line 102) if (Deaths(cp, Exactly, 9, "Event_Score"))	{ s.print("\n\x13\x04이벤트 점수 \x0F14000\x04점 달성 보상 - 3 \x0FGas\n"); SetDeaths(cp, SetTo, 0, "Event_Score"); }
        EUDEndIf()
        if EUDIf()(Deaths(cp, Exactly, 9, "Event_Score")):
            s.print("\n\x13\x04이벤트 점수 \x0F14000\x04점 달성 보상 - 3 \x0FGas\n")
            DoActions(SetDeaths(cp, SetTo, 0, "Event_Score"))
            # (Line 103) if (Deaths(cp, Exactly, 10, "Event_Score"))	{ s.print("\n\x13\x04이벤트 점수 \x0F15000\x04점 달성 보상 - 1 \x0F플레티넘 티켓\n"); SetDeaths(cp, SetTo, 0, "Event_Score"); }
        EUDEndIf()
        if EUDIf()(Deaths(cp, Exactly, 10, "Event_Score")):
            s.print("\n\x13\x04이벤트 점수 \x0F15000\x04점 달성 보상 - 1 \x0F플레티넘 티켓\n")
            DoActions(SetDeaths(cp, SetTo, 0, "Event_Score"))
            # (Line 104) }
        EUDEndIf()
        # (Line 105) }
    EUDEndIf()
    # (Line 107) function Trainning_Ticket()

# (Line 108) {
@EUDFunc
def Trainning_Ticket():
    # (Line 109) var random = dwrand() % 3;
    random = EUDVariable()
    random << (f_dwrand() % 3)
    # (Line 111) switch(random)
    EUDSwitch(random)
    # (Line 112) {
    # (Line 113) case 0:
    _t1 = EUDSwitchCase()
    # (Line 114) CreateUnit(1, 126, "JewelGacha", Force1);
    if _t1(0):
        # (Line 115) break;
        DoActions(CreateUnit(1, 126, "JewelGacha", Force1))
        EUDBreak()
        # (Line 116) case 1:
    _t2 = EUDSwitchCase()
    # (Line 117) CreateUnit(1, 127, "JewelGacha", Force1);
    if _t2(1):
        # (Line 118) break;
        DoActions(CreateUnit(1, 127, "JewelGacha", Force1))
        EUDBreak()
        # (Line 119) case 2:
    _t3 = EUDSwitchCase()
    # (Line 120) CreateUnit(1, 135, "JewelGacha", Force1);
    if _t3(2):
        # (Line 121) break;
        DoActions(CreateUnit(1, 135, "JewelGacha", Force1))
        EUDBreak()
        # (Line 122) }
    # (Line 123) }
    EUDEndSwitch()
    # (Line 125) function Cloth_Ticket()

# (Line 126) {
@EUDFunc
def Cloth_Ticket():
    # (Line 127) var random = dwrand() % 3;
    random = EUDVariable()
    random << (f_dwrand() % 3)
    # (Line 129) switch(random)
    EUDSwitch(random)
    # (Line 130) {
    # (Line 131) case 0:
    _t1 = EUDSwitchCase()
    # (Line 132) CreateUnit(1, 116, "JewelGacha", Force1);
    if _t1(0):
        # (Line 133) break;
        DoActions(CreateUnit(1, 116, "JewelGacha", Force1))
        EUDBreak()
        # (Line 134) case 1:
    _t2 = EUDSwitchCase()
    # (Line 135) CreateUnit(1, 122, "JewelGacha", Force1);
    if _t2(1):
        # (Line 136) break;
        DoActions(CreateUnit(1, 122, "JewelGacha", Force1))
        EUDBreak()
        # (Line 137) case 2:
    _t3 = EUDSwitchCase()
    # (Line 138) CreateUnit(1, 123, "JewelGacha", Force1);
    if _t3(2):
        # (Line 139) break;
        DoActions(CreateUnit(1, 123, "JewelGacha", Force1))
        EUDBreak()
        # (Line 140) }
    # (Line 141) }
    EUDEndSwitch()
    # (Line 143) function Album_Ticket()

# (Line 144) {
@EUDFunc
def Album_Ticket():
    # (Line 145) CreateUnit(1, 136 + dwrand() % 3, "JewelGacha", Force1);
    # (Line 146) }
    DoActions(CreateUnit(1, 136 + f_dwrand() % 3, "JewelGacha", Force1))
    # (Line 148) function Event_Unit(top, down)

# (Line 149) {
@EUDFunc
def Event_Unit(top, down):
    # (Line 150) if (Deaths(P6, AtLeast, 0, "Event_Score") && Deaths(P6, AtMost, 4999, "Event_Score"))
    if EUDIf()(EUDSCAnd()(Deaths(P6, AtLeast, 0, "Event_Score"))(Deaths(P6, AtMost, 4999, "Event_Score"))()):
        # (Line 151) {
        # (Line 152) SetDeaths(P6, SetTo, 0, "Round");
        # (Line 153) SetDeaths(P6, SetTo, 0, "Event_Score");
        DoActions(SetDeaths(P6, SetTo, 0, "Round"))
        # (Line 154) SetDeaths(P7, SetTo, 0, "Event_Score");
        DoActions(SetDeaths(P6, SetTo, 0, "Event_Score"))
        # (Line 155) SetDeaths(AllPlayers, SetTo, 0, "event_index");
        DoActions(SetDeaths(P7, SetTo, 0, "Event_Score"))
        # (Line 156) }
        DoActions(SetDeaths(AllPlayers, SetTo, 0, "event_index"))
        # (Line 157) else if (Deaths(P6, AtLeast, 5000, "Event_Score") && Deaths(P6, AtMost, 11999, "Event_Score"))
    if EUDElseIf()(EUDSCAnd()(Deaths(P6, AtLeast, 5000, "Event_Score"))(Deaths(P6, AtMost, 11999, "Event_Score"))()):
        # (Line 158) {
        # (Line 159) if (down  == 999)
        if EUDIf()(down == 999):
            # (Line 160) {
            # (Line 161) var random = dwrand()%12 + 4;
            random = EUDVariable()
            random << (f_dwrand() % 12 + 4)
            # (Line 162) var type = dwrand()%3;
            type = EUDVariable()
            type << (f_dwrand() % 3)
            # (Line 164) switch(type)
            EUDSwitch(type)
            # (Line 165) {
            # (Line 166) case 0:
            _t4 = EUDSwitchCase()
            # (Line 167) CreateUnit(1, vd.Princess_Unit_Index[random], "MedalGacha Create", Force1);
            if _t4(0):
                # (Line 168) break;
                DoActions(CreateUnit(1, vd.Princess_Unit_Index[random], "MedalGacha Create", Force1))
                EUDBreak()
                # (Line 169) case 1:
            _t5 = EUDSwitchCase()
            # (Line 170) CreateUnit(1, vd.Fairy_Unit_Index[random], "MedalGacha Create", Force1);
            if _t5(1):
                # (Line 171) break;
                DoActions(CreateUnit(1, vd.Fairy_Unit_Index[random], "MedalGacha Create", Force1))
                EUDBreak()
                # (Line 172) case 2:
            _t6 = EUDSwitchCase()
            # (Line 173) CreateUnit(1, vd.Angel_Unit_Index[random], "MedalGacha Create", Force1);
            if _t6(2):
                # (Line 174) break;
                DoActions(CreateUnit(1, vd.Angel_Unit_Index[random], "MedalGacha Create", Force1))
                EUDBreak()
                # (Line 175) }
            # (Line 176) }
            EUDEndSwitch()
            # (Line 177) else
            # (Line 178) { CreateUnit(1, down, "MedalGacha Create", Force1); }
        if EUDElse()():
            DoActions(CreateUnit(1, down, "MedalGacha Create", Force1))
            # (Line 180) SetDeaths(P6, SetTo, 0, "Round");
        EUDEndIf()
        # (Line 181) SetDeaths(P6, SetTo, 0, "Event_Score");
        DoActions(SetDeaths(P6, SetTo, 0, "Round"))
        # (Line 182) SetDeaths(P7, SetTo, 0, "Event_Score");
        DoActions(SetDeaths(P6, SetTo, 0, "Event_Score"))
        # (Line 183) SetDeaths(AllPlayers, SetTo, 0, "event_index");
        DoActions(SetDeaths(P7, SetTo, 0, "Event_Score"))
        # (Line 184) }
        DoActions(SetDeaths(AllPlayers, SetTo, 0, "event_index"))
        # (Line 185) else if (Deaths(P6, AtLeast, 12000, "Event_Score"))
    if EUDElseIf()(Deaths(P6, AtLeast, 12000, "Event_Score")):
        # (Line 186) {
        # (Line 187) if (top  == 1000)
        if EUDIf()(top == 1000):
            # (Line 188) {
            # (Line 189) var random = dwrand()%4;
            random = EUDVariable()
            random << (f_dwrand() % 4)
            # (Line 190) var type = dwrand()%3;
            type = EUDVariable()
            type << (f_dwrand() % 3)
            # (Line 192) switch(type)
            EUDSwitch(type)
            # (Line 193) {
            # (Line 194) case 0:
            _t9 = EUDSwitchCase()
            # (Line 195) CreateUnit(1, vd.Princess_Unit_Index[random], "MedalGacha Create", Force1);
            if _t9(0):
                # (Line 196) break;
                DoActions(CreateUnit(1, vd.Princess_Unit_Index[random], "MedalGacha Create", Force1))
                EUDBreak()
                # (Line 197) case 1:
            _t10 = EUDSwitchCase()
            # (Line 198) CreateUnit(1, vd.Fairy_Unit_Index[random], "MedalGacha Create", Force1);
            if _t10(1):
                # (Line 199) break;
                DoActions(CreateUnit(1, vd.Fairy_Unit_Index[random], "MedalGacha Create", Force1))
                EUDBreak()
                # (Line 200) case 2:
            _t11 = EUDSwitchCase()
            # (Line 201) CreateUnit(1, vd.Angel_Unit_Index[random], "MedalGacha Create", Force1);
            if _t11(2):
                # (Line 202) break;
                DoActions(CreateUnit(1, vd.Angel_Unit_Index[random], "MedalGacha Create", Force1))
                EUDBreak()
                # (Line 203) }
            # (Line 204) }
            EUDEndSwitch()
            # (Line 205) else
            # (Line 206) { CreateUnit(1, top, "MedalGacha Create", Force1); }
        if EUDElse()():
            DoActions(CreateUnit(1, top, "MedalGacha Create", Force1))
            # (Line 208) SetDeaths(P6, SetTo, 0, "Round");
        EUDEndIf()
        # (Line 209) SetDeaths(P6, SetTo, 0, "Event_Score");
        DoActions(SetDeaths(P6, SetTo, 0, "Round"))
        # (Line 210) SetDeaths(P7, SetTo, 0, "Event_Score");
        DoActions(SetDeaths(P6, SetTo, 0, "Event_Score"))
        # (Line 211) SetDeaths(AllPlayers, SetTo, 0, "event_index");
        DoActions(SetDeaths(P7, SetTo, 0, "Event_Score"))
        # (Line 212) }
        DoActions(SetDeaths(AllPlayers, SetTo, 0, "event_index"))
        # (Line 213) }
    EUDEndIf()
