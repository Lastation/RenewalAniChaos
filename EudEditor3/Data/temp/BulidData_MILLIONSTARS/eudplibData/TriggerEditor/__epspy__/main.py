## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import unit as ut;
import unit as ut
# (Line 2) import getunitID as id;
import getunitID as id
# (Line 3) import round as rd;
import round as rd
# (Line 4) import text_Announce as ta;
import text_Announce as ta
# (Line 5) import variable_data as vd;
import variable_data as vd
# (Line 6) import Player.playermain as pm;
from Player import playermain as pm
# (Line 8) const s = StringBuffer();
s = _CGFW(lambda: [StringBuffer()], 1)[0]
# (Line 10) function Start_Setting(cp);
# (Line 12) function onPluginStart()
# (Line 13) {
@EUDFunc
def onPluginStart():
    # (Line 14) randomize();
    f_randomize()
    # (Line 17) SetMemory(0x515BC8, SetTo, 256);	// 소형 - 프린세스 	100%
    # (Line 18) SetMemory(0x515BCC, SetTo, 128);	// 중형 - 페어리 		50%
    DoActions(SetMemory(0x515BC8, SetTo, 256))
    # (Line 19) SetMemory(0x515BD0, SetTo, 192);	// 대형 - 엔젤 		75%
    DoActions(SetMemory(0x515BCC, SetTo, 128))
    # (Line 22) SetMemory(0x515BA0, SetTo, 192);	// 소형 - 프린세스 	75%
    DoActions(SetMemory(0x515BD0, SetTo, 192))
    # (Line 23) SetMemory(0x515BA4, SetTo, 256);	// 중형 - 페어리 		100%
    DoActions(SetMemory(0x515BA0, SetTo, 192))
    # (Line 24) SetMemory(0x515BA8, SetTo, 128);	// 대형 - 엔젤 		50%
    DoActions(SetMemory(0x515BA4, SetTo, 256))
    # (Line 27) SetMemory(0x515BB4, SetTo, 128);	// 소형 - 프린세스 	50%
    DoActions(SetMemory(0x515BA8, SetTo, 128))
    # (Line 28) SetMemory(0x515BB8, SetTo, 192);	// 중형 - 페어리 		75%
    DoActions(SetMemory(0x515BB4, SetTo, 128))
    # (Line 29) SetMemory(0x515BBC, SetTo, 256);	// 대형 - 엔젤		100%
    DoActions(SetMemory(0x515BB8, SetTo, 192))
    # (Line 31) ut.Set_Info();
    DoActions(SetMemory(0x515BBC, SetTo, 256))
    ut.Set_Info()
    # (Line 33) if (Bring(P1, AtLeast, 1, 112, "Anywhere")){ CreateUnit(1, 64, "Center_Event", P1); }
    if EUDIf()(Bring(P1, AtLeast, 1, 112, "Anywhere")):
        DoActions(CreateUnit(1, 64, "Center_Event", P1))
        # (Line 34) if (Bring(P2, AtLeast, 1, 112, "Anywhere")){ CreateUnit(1, 64, "Center_Event", P2); }
    EUDEndIf()
    if EUDIf()(Bring(P2, AtLeast, 1, 112, "Anywhere")):
        DoActions(CreateUnit(1, 64, "Center_Event", P2))
        # (Line 35) if (Bring(P3, AtLeast, 1, 112, "Anywhere")){ CreateUnit(1, 64, "Center_Event", P3); }
    EUDEndIf()
    if EUDIf()(Bring(P3, AtLeast, 1, 112, "Anywhere")):
        DoActions(CreateUnit(1, 64, "Center_Event", P3))
        # (Line 36) if (Bring(P4, AtLeast, 1, 112, "Anywhere")){ CreateUnit(1, 64, "Center_Event", P4); }
    EUDEndIf()
    if EUDIf()(Bring(P4, AtLeast, 1, 112, "Anywhere")):
        DoActions(CreateUnit(1, 64, "Center_Event", P4))
        # (Line 37) if (Bring(P5, AtLeast, 1, 112, "Anywhere")){ CreateUnit(1, 64, "Center_Event", P5); }
    EUDEndIf()
    if EUDIf()(Bring(P5, AtLeast, 1, 112, "Anywhere")):
        DoActions(CreateUnit(1, 64, "Center_Event", P5))
        # (Line 39) CreateUnit(1, 109, "PrincessP", P8);
    EUDEndIf()
    # (Line 40) CreateUnit(1, 111, "FairyP", P8);
    DoActions(CreateUnit(1, 109, "PrincessP", P8))
    # (Line 41) CreateUnit(1, 113, "AngelP", P8);
    DoActions(CreateUnit(1, 111, "FairyP", P8))
    # (Line 43) CenterView("Center_Event");
    DoActions(CreateUnit(1, 113, "AngelP", P8))
    # (Line 44) }
    DoActions(CenterView("Center_Event"))
    # (Line 46) function beforeTriggerExec()

# (Line 47) {
@EUDFunc
def beforeTriggerExec():
    # (Line 48) EUDPlayerLoop()();
    EUDPlayerLoop()()
    # (Line 50) const cp = getcurpl();
    cp = f_getcurpl()
    # (Line 52) id.Get_UnitID(cp);
    id.Get_UnitID(cp)
    # (Line 54) if(Switch("Start", Set))
    if EUDIf()(Switch("Start", Set)):
        # (Line 55) {
        # (Line 56) pm.main(cp);
        pm.f_main(cp)
        # (Line 57) ta.Event_Announcement(cp);
        ta.Event_Announcement(cp)
        # (Line 58) }
        # (Line 59) else
        # (Line 60) {
    if EUDElse()():
        # (Line 61) Start_Setting(cp);
        Start_Setting(cp)
        # (Line 62) }
        # (Line 64) EUDEndPlayerLoop();
    EUDEndIf()
    EUDEndPlayerLoop()
    # (Line 66) rd.Set_Round_HP();
    rd.Set_Round_HP()
    # (Line 68) if (Bring(P12, AtLeast, 1, 112, "Anywhere"))
    if EUDIf()(Bring(P12, AtLeast, 1, 112, "Anywhere")):
        # (Line 69) { RemoveUnitAt(All, "(any unit)", "Anywhere", P12); }
        DoActions(RemoveUnitAt(All, "(any unit)", "Anywhere", P12))
        # (Line 70) }
    EUDEndIf()
    # (Line 72) function afterTriggerExec()

# (Line 73) {
@EUDFunc
def afterTriggerExec():
    # (Line 75) }
    # (Line 77) function Start_Setting(cp)
    pass

# (Line 78) {
@EUDFunc
def Start_Setting(cp):
    # (Line 79) if(Deaths(cp, Exactly, 2, 7) && Switch("Hard", Cleared))
    if EUDIf()(EUDSCAnd()(Deaths(cp, Exactly, 2, 7))(Switch("Hard", Cleared))()):
        # (Line 80) {
        # (Line 81) SetSwitch("Hard", Set);
        # (Line 82) }
        DoActions(SetSwitch("Hard", Set))
        # (Line 84) switch (id.Unit_ID[cp])
    EUDEndIf()
    EUDSwitch(id.Unit_ID[cp])
    # (Line 85) {
    # (Line 86) case 109:
    _t2 = EUDSwitchCase()
    # (Line 87) s.printAt(2, "\n");
    if _t2(109):
        s.printAt(2, "\n")
        # (Line 88) s.printAt(3, "\x13\x1BPrincess \x04프로듀서효과");
        s.printAt(3, "\x13\x1BPrincess \x04프로듀서효과")
        # (Line 89) s.printAt(4, "\n");
        s.printAt(4, "\n")
        # (Line 90) s.printAt(5, "\x13\x1BPrincess \x04맴버 일정시간마다 팬수 증가");
        s.printAt(5, "\x13\x1BPrincess \x04맴버 일정시간마다 팬수 증가")
        # (Line 91) s.printAt(6, "\x13\x1BPrincess \x04이벤트 점수 10% 추가 획득");
        s.printAt(6, "\x13\x1BPrincess \x04이벤트 점수 10% 추가 획득")
        # (Line 92) break;
        EUDBreak()
        # (Line 93) case 111:
    _t3 = EUDSwitchCase()
    # (Line 94) s.printAt(2, "\n");
    if _t3(111):
        s.printAt(2, "\n")
        # (Line 95) s.printAt(3, "\x13\x1CFairy \x04프로듀서효과");
        s.printAt(3, "\x13\x1CFairy \x04프로듀서효과")
        # (Line 96) s.printAt(4, "\n");
        s.printAt(4, "\n")
        # (Line 97) s.printAt(5, "\x13\x1CFairy \x04맴버 일정시간마다 팬수 증가");
        s.printAt(5, "\x13\x1CFairy \x04맴버 일정시간마다 팬수 증가")
        # (Line 98) s.printAt(6, "\x13\x1CFairy \x04이벤트 점수 10% 추가 획득");
        s.printAt(6, "\x13\x1CFairy \x04이벤트 점수 10% 추가 획득")
        # (Line 99) break;
        EUDBreak()
        # (Line 100) case 113:
    _t4 = EUDSwitchCase()
    # (Line 101) s.printAt(2, "\n");
    if _t4(113):
        s.printAt(2, "\n")
        # (Line 102) s.printAt(3, "\x13\x19Angel \x04프로듀서효과");
        s.printAt(3, "\x13\x19Angel \x04프로듀서효과")
        # (Line 103) s.printAt(4, "\n");
        s.printAt(4, "\n")
        # (Line 104) s.printAt(5, "\x13\x19Angel \x04맴버 일정시간마다 팬수 증가");
        s.printAt(5, "\x13\x19Angel \x04맴버 일정시간마다 팬수 증가")
        # (Line 105) s.printAt(6, "\x13\x19Angel \x04이벤트 점수 10% 추가 획득");
        s.printAt(6, "\x13\x19Angel \x04이벤트 점수 10% 추가 획득")
        # (Line 106) break;
        EUDBreak()
        # (Line 107) }
    # (Line 109) if (Bring(cp, AtLeast, 1, 64, "PrincessP"))
    EUDEndSwitch()
    if EUDIf()(Bring(cp, AtLeast, 1, 64, "PrincessP")):
        # (Line 110) {
        # (Line 111) KillUnitAt(1, 64, "PrincessP", cp);
        # (Line 112) CreateUnit(1, 109, "Center_Event", cp);
        DoActions(KillUnitAt(1, 64, "PrincessP", cp))
        # (Line 113) }
        DoActions(CreateUnit(1, 109, "Center_Event", cp))
        # (Line 114) if (Bring(cp, AtLeast, 1, 64, "FairyP"))
    EUDEndIf()
    if EUDIf()(Bring(cp, AtLeast, 1, 64, "FairyP")):
        # (Line 115) {
        # (Line 116) KillUnitAt(1, 64, "FairyP", cp);
        # (Line 117) CreateUnit(1, 111, "Center_Event", cp);
        DoActions(KillUnitAt(1, 64, "FairyP", cp))
        # (Line 118) }
        DoActions(CreateUnit(1, 111, "Center_Event", cp))
        # (Line 119) if (Bring(cp, AtLeast, 1, 64, "AngelP"))
    EUDEndIf()
    if EUDIf()(Bring(cp, AtLeast, 1, 64, "AngelP")):
        # (Line 120) {
        # (Line 121) KillUnitAt(1, 64, "AngelP", cp);
        # (Line 122) CreateUnit(1, 113, "Center_Event", cp);
        DoActions(KillUnitAt(1, 64, "AngelP", cp))
        # (Line 123) }
        DoActions(CreateUnit(1, 113, "Center_Event", cp))
        # (Line 125) if (Bring(Force1, Exactly, 0, 64, "Anywhere"))
    EUDEndIf()
    if EUDIf()(Bring(Force1, Exactly, 0, 64, "Anywhere")):
        # (Line 126) {
        # (Line 127) RemoveUnitAt(All, "Terran Beacon", "Anywhere", P8);
        # (Line 128) RemoveUnitAt(All, 109, "Anywhere", P8);
        DoActions(RemoveUnitAt(All, "Terran Beacon", "Anywhere", P8))
        # (Line 129) RemoveUnitAt(All, 111, "Anywhere", P8);
        DoActions(RemoveUnitAt(All, 109, "Anywhere", P8))
        # (Line 130) RemoveUnitAt(All, 113, "Anywhere", P8);
        DoActions(RemoveUnitAt(All, 111, "Anywhere", P8))
        # (Line 131) SetSwitch("Start", Set);
        DoActions(RemoveUnitAt(All, 113, "Anywhere", P8))
        # (Line 132) }
        DoActions(SetSwitch("Start", Set))
        # (Line 133) }
    EUDEndIf()
