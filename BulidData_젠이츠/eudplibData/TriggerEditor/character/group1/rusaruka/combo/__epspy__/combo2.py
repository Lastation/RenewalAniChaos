## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import PluginVariables as msqcvar;
import PluginVariables as msqcvar
# (Line 2) import variable as v;
import variable as v
# (Line 3) import func.trig as trg;
from func import trig as trg
# (Line 5) function ShapeA(playerID, x, y);
# (Line 6) function ShapeB(playerID, x, y);
# (Line 7) function ShapeC(playerID);
# (Line 9) function main(playerID)
# (Line 10) {
@EUDFunc
def f_main(playerID):
    # (Line 11) trg.Debuff_Stop();
    trg.Debuff_Stop()
    # (Line 12) trg.Debuff_BanReturn();
    trg.Debuff_BanReturn()
    # (Line 14) if (v.P_WaitMain[playerID] == 0)
    if EUDIf()(v.P_WaitMain[playerID] == 0):
        # (Line 15) {
        # (Line 16) MoveUnit(All, "50 + 1n Battlecruiser", playerID, "Anywhere", "[Skill]HoldPosition");
        # (Line 18) if(v.P_CountMain[playerID] == 0)
        DoActions(MoveUnit(All, "50 + 1n Battlecruiser", playerID, "Anywhere", "[Skill]HoldPosition"))
        if EUDIf()(v.P_CountMain[playerID] == 0):
            # (Line 19) {
            # (Line 20) if (v.P_LoopMain[playerID] == 0) 		{ ShapeA(playerID, -160, 0); }
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                ShapeA(playerID, -160, 0)
                # (Line 21) else if (v.P_LoopMain[playerID] == 1) 	{ ShapeA(playerID, 0, -160); }
            if EUDElseIf()(v.P_LoopMain[playerID] == 1):
                ShapeA(playerID, 0, -160)
                # (Line 22) else if (v.P_LoopMain[playerID] == 2) 	{ ShapeA(playerID, 160, 0); }
            if EUDElseIf()(v.P_LoopMain[playerID] == 2):
                ShapeA(playerID, 160, 0)
                # (Line 23) else if (v.P_LoopMain[playerID] == 3) 	{ ShapeA(playerID, 0, 160); }
            if EUDElseIf()(v.P_LoopMain[playerID] == 3):
                ShapeA(playerID, 0, 160)
                # (Line 24) else if (v.P_LoopMain[playerID] == 4) 	{ v.P_LoopMain[playerID] = 0; v.P_CountMain[playerID] += 1; }
            if EUDElseIf()(v.P_LoopMain[playerID] == 4):
                _ARRW(v.P_LoopMain, playerID) << (0)
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 25) }
            EUDEndIf()
            # (Line 26) else if (v.P_CountMain[playerID] == 1)
        if EUDElseIf()(v.P_CountMain[playerID] == 1):
            # (Line 27) {
            # (Line 28) if (v.P_LoopMain[playerID] == 0) 		{ ShapeB(playerID, -160, 0); }
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                ShapeB(playerID, -160, 0)
                # (Line 29) else if (v.P_LoopMain[playerID] == 1) 	{ ShapeB(playerID, 0, -160); }
            if EUDElseIf()(v.P_LoopMain[playerID] == 1):
                ShapeB(playerID, 0, -160)
                # (Line 30) else if (v.P_LoopMain[playerID] == 2) 	{ ShapeB(playerID, 160, 0); }
            if EUDElseIf()(v.P_LoopMain[playerID] == 2):
                ShapeB(playerID, 160, 0)
                # (Line 31) else if (v.P_LoopMain[playerID] == 3) 	{ ShapeB(playerID, 0, 160); }
            if EUDElseIf()(v.P_LoopMain[playerID] == 3):
                ShapeB(playerID, 0, 160)
                # (Line 32) else if (v.P_LoopMain[playerID] == 4) 	{ v.P_LoopMain[playerID] = 0; v.P_CountMain[playerID] += 1; }
            if EUDElseIf()(v.P_LoopMain[playerID] == 4):
                _ARRW(v.P_LoopMain, playerID) << (0)
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 33) }
            EUDEndIf()
            # (Line 34) else if(v.P_CountMain[playerID] == 2)
        if EUDElseIf()(v.P_CountMain[playerID] == 2):
            # (Line 35) {
            # (Line 36) if (v.P_LoopMain[playerID] == 0) 		{ ShapeA(playerID, 114, 114); }
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                ShapeA(playerID, 114, 114)
                # (Line 37) else if (v.P_LoopMain[playerID] == 1) 	{ ShapeA(playerID, 114, -114); }
            if EUDElseIf()(v.P_LoopMain[playerID] == 1):
                ShapeA(playerID, 114, -114)
                # (Line 38) else if (v.P_LoopMain[playerID] == 2) 	{ ShapeA(playerID, -114, -114); }
            if EUDElseIf()(v.P_LoopMain[playerID] == 2):
                ShapeA(playerID, -114, -114)
                # (Line 39) else if (v.P_LoopMain[playerID] == 3) 	{ ShapeA(playerID, -114, 114); }
            if EUDElseIf()(v.P_LoopMain[playerID] == 3):
                ShapeA(playerID, -114, 114)
                # (Line 40) else if (v.P_LoopMain[playerID] == 4) 	{ v.P_LoopMain[playerID] = 0; v.P_CountMain[playerID] += 1; }
            if EUDElseIf()(v.P_LoopMain[playerID] == 4):
                _ARRW(v.P_LoopMain, playerID) << (0)
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 41) }
            EUDEndIf()
            # (Line 42) else if (v.P_CountMain[playerID] == 3)
        if EUDElseIf()(v.P_CountMain[playerID] == 3):
            # (Line 43) {
            # (Line 44) if (v.P_LoopMain[playerID] == 0) 		{ ShapeB(playerID, 114, 114); }
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                ShapeB(playerID, 114, 114)
                # (Line 45) else if (v.P_LoopMain[playerID] == 1) 	{ ShapeB(playerID, 114, -114); }
            if EUDElseIf()(v.P_LoopMain[playerID] == 1):
                ShapeB(playerID, 114, -114)
                # (Line 46) else if (v.P_LoopMain[playerID] == 2) 	{ ShapeB(playerID, -114, -114); }
            if EUDElseIf()(v.P_LoopMain[playerID] == 2):
                ShapeB(playerID, -114, -114)
                # (Line 47) else if (v.P_LoopMain[playerID] == 3) 	{ ShapeB(playerID, -114, 114); }
            if EUDElseIf()(v.P_LoopMain[playerID] == 3):
                ShapeB(playerID, -114, 114)
                # (Line 48) else if (v.P_LoopMain[playerID] == 4) 	{ v.P_LoopMain[playerID] = 0; v.P_CountMain[playerID] += 1; }
            if EUDElseIf()(v.P_LoopMain[playerID] == 4):
                _ARRW(v.P_LoopMain, playerID) << (0)
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 49) }
            EUDEndIf()
            # (Line 50) else if (v.P_CountMain[playerID] == 4)
        if EUDElseIf()(v.P_CountMain[playerID] == 4):
            # (Line 51) {
            # (Line 52) trg.Main_Wait(200);
            trg.Main_Wait(200)
            # (Line 53) v.P_CountMain[playerID] += 1;
            _ARRW(v.P_CountMain, playerID).__iadd__(1)
            # (Line 54) }
            # (Line 55) else if (v.P_CountMain[playerID] == 5)
        if EUDElseIf()(v.P_CountMain[playerID] == 5):
            # (Line 56) {
            # (Line 57) if (v.P_LoopMain[playerID] < 8)
            if EUDIf()(v.P_LoopMain[playerID] >= 8, neg=True):
                # (Line 58) {
                # (Line 59) MoveLocation(v.P_LocationID[playerID], "50 + 1n Battlecruiser", playerID, "Anywhere");
                # (Line 60) RemoveUnitAt(1, "50 + 1n Battlecruiser", "Anywhere", playerID);
                DoActions(MoveLocation(v.P_LocationID[playerID], "50 + 1n Battlecruiser", playerID, "Anywhere"))
                # (Line 61) trg.SkillUnit(playerID, 1, "40 + 1n Gantrithor");
                DoActions(RemoveUnitAt(1, "50 + 1n Battlecruiser", "Anywhere", playerID))
                trg.SkillUnit(playerID, 1, "40 + 1n Gantrithor")
                # (Line 62) trg.SkillUnit(playerID, 8, "Protoss Dark Archon");
                trg.SkillUnit(playerID, 8, "Protoss Dark Archon")
                # (Line 63) KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID);
                # (Line 64) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID))
                # (Line 65) trg.Main_Wait(0);
                DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
                trg.Main_Wait(0)
                # (Line 66) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 67) }
                # (Line 68) else if (v.P_LoopMain[playerID] == 8)
            if EUDElseIf()(v.P_LoopMain[playerID] == 8):
                # (Line 69) {
                # (Line 70) v.P_LoopMain[playerID] = 0;
                _ARRW(v.P_LoopMain, playerID) << (0)
                # (Line 71) v.P_CountMain[playerID] += 1;
                _ARRW(v.P_CountMain, playerID).__iadd__(1)
                # (Line 72) }
                # (Line 73) }
            EUDEndIf()
            # (Line 74) else if (v.P_CountMain[playerID] == 6)
        if EUDElseIf()(v.P_CountMain[playerID] == 6):
            # (Line 75) {
            # (Line 76) if (v.P_LoopMain[playerID] == 0)
            if EUDIf()(v.P_LoopMain[playerID] == 0):
                # (Line 77) {
                # (Line 78) ShapeC(playerID);
                ShapeC(playerID)
                # (Line 79) }
                # (Line 80) else if (v.P_LoopMain[playerID] == 1)
            if EUDElseIf()(v.P_LoopMain[playerID] == 1):
                # (Line 81) {
                # (Line 82) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
                # (Line 83) KillUnitAt(All, "60 + 1n Danimoth", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                # (Line 84) KillUnitAt(All, "40 + 1n Mutalisk", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "60 + 1n Danimoth", "Anywhere", playerID))
                # (Line 85) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Mutalisk", "Anywhere", playerID))
                # (Line 86) KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID))
                # (Line 87) SetSwitch("Recall - Rusalka", Clear);
                DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID))
                # (Line 89) trg.Main_Wait(500);
                DoActions(SetSwitch("Recall - Rusalka", Clear))
                trg.Main_Wait(500)
                # (Line 90) v.P_LoopMain[playerID] += 1;
                _ARRW(v.P_LoopMain, playerID).__iadd__(1)
                # (Line 91) }
                # (Line 92) else if (v.P_LoopMain[playerID] == 2)
            if EUDElseIf()(v.P_LoopMain[playerID] == 2):
                # (Line 93) {
                # (Line 94) ShapeC(playerID);
                ShapeC(playerID)
                # (Line 95) }
                # (Line 96) else if (v.P_LoopMain[playerID] == 3)
            if EUDElseIf()(v.P_LoopMain[playerID] == 3):
                # (Line 97) {
                # (Line 98) KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID);
                # (Line 99) KillUnitAt(All, "60 + 1n Danimoth", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "50 + 1n Battlecruiser", "Anywhere", playerID))
                # (Line 100) KillUnitAt(All, "40 + 1n Mutalisk", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "60 + 1n Danimoth", "Anywhere", playerID))
                # (Line 101) KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Mutalisk", "Anywhere", playerID))
                # (Line 102) KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID);
                DoActions(KillUnitAt(All, "40 + 1n Guardian", "Anywhere", playerID))
                # (Line 103) SetSwitch("Recall - Rusalka", Clear);
                DoActions(KillUnitAt(All, "40 + 1n Mojo", "Anywhere", playerID))
                # (Line 105) trg.SkillEnd();
                DoActions(SetSwitch("Recall - Rusalka", Clear))
                trg.SkillEnd()
                # (Line 106) }
                # (Line 107) }
            EUDEndIf()
            # (Line 108) }
        EUDEndIf()
        # (Line 109) }
    EUDEndIf()
    # (Line 111) function ShapeA(playerID, x, y)

# (Line 112) {
@EUDFunc
def ShapeA(playerID, x, y):
    # (Line 113) trg.Shape_Dot(playerID, 1, "40 + 1n Gantrithor", x, y);
    trg.Shape_Dot(playerID, 1, "40 + 1n Gantrithor", x, y)
    # (Line 114) trg.Shape_Dot(playerID, 8, "Protoss Dark Archon", x, y);
    trg.Shape_Dot(playerID, 8, "Protoss Dark Archon", x, y)
    # (Line 115) KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID);
    # (Line 116) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
    DoActions(KillUnitAt(All, "40 + 1n Gantrithor", "Anywhere", playerID))
    # (Line 117) trg.Main_Wait(0);
    DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
    trg.Main_Wait(0)
    # (Line 118) v.P_LoopMain[playerID] += 1;
    _ARRW(v.P_LoopMain, playerID).__iadd__(1)
    # (Line 119) }
    # (Line 121) function ShapeB(playerID, x, y)

# (Line 122) {
@EUDFunc
def ShapeB(playerID, x, y):
    # (Line 123) trg.Shape_Dot(playerID, 1, "50 + 1n Battlecruiser", x, y);
    trg.Shape_Dot(playerID, 1, "50 + 1n Battlecruiser", x, y)
    # (Line 124) trg.Shape_Dot(playerID, 1, "Torrasque", x, y);
    trg.Shape_Dot(playerID, 1, "Torrasque", x, y)
    # (Line 125) trg.Shape_Dot(playerID, 8, "50 + 1n Tank", x, y);
    trg.Shape_Dot(playerID, 8, "50 + 1n Tank", x, y)
    # (Line 126) KillUnitAt(All, "Torrasque", "Anywhere", playerID);
    # (Line 127) KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID);
    DoActions(KillUnitAt(All, "Torrasque", "Anywhere", playerID))
    # (Line 128) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
    DoActions(KillUnitAt(All, "50 + 1n Tank", "Anywhere", playerID))
    # (Line 129) Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
    DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
    # (Line 130) trg.Main_Wait(0);
    DoActions(Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
    trg.Main_Wait(0)
    # (Line 131) v.P_LoopMain[playerID] += 1;
    _ARRW(v.P_LoopMain, playerID).__iadd__(1)
    # (Line 132) }
    # (Line 134) function ShapeC(playerID)

# (Line 135) {
@EUDFunc
def ShapeC(playerID):
    # (Line 136) trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 32, 32);
    trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 32, 32)
    # (Line 137) trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 64, 0);
    trg.Shape_Square(playerID, 1, "40 + 1n Mojo", 64, 0)
    # (Line 138) trg.Shape_Square(playerID, 1, "60 + 1n Danimoth", 128, 32);
    trg.Shape_Square(playerID, 1, "60 + 1n Danimoth", 128, 32)
    # (Line 139) trg.Shape_Square(playerID, 1, "60 + 1n Danimoth", 128, -32);
    trg.Shape_Square(playerID, 1, "60 + 1n Danimoth", 128, -32)
    # (Line 140) trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 160, 160);
    trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 160, 160)
    # (Line 141) trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 224, 0);
    trg.Shape_Square(playerID, 1, "50 + 1n Battlecruiser", 224, 0)
    # (Line 142) trg.Shape_Square(playerID, 1, "40 + 1n Mutalisk", 160, 64);
    trg.Shape_Square(playerID, 1, "40 + 1n Mutalisk", 160, 64)
    # (Line 143) trg.Shape_Square(playerID, 1, "40 + 1n Mutalisk", 160, -64);
    trg.Shape_Square(playerID, 1, "40 + 1n Mutalisk", 160, -64)
    # (Line 144) trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 128, 96);
    trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 128, 96)
    # (Line 145) trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 128, -96);
    trg.Shape_Square(playerID, 1, "40 + 1n Guardian", 128, -96)
    # (Line 147) trg.Shape_Square(playerID, 1, "60 + 1n Archon", 32, 32);
    trg.Shape_Square(playerID, 1, "60 + 1n Archon", 32, 32)
    # (Line 148) trg.Shape_Square(playerID, 1, "60 + 1n Archon", 64, 0);
    trg.Shape_Square(playerID, 1, "60 + 1n Archon", 64, 0)
    # (Line 149) trg.Shape_Square(playerID, 1, "60 + 1n Archon", 128, 32);
    trg.Shape_Square(playerID, 1, "60 + 1n Archon", 128, 32)
    # (Line 150) trg.Shape_Square(playerID, 1, "60 + 1n Archon", 128, -32);
    trg.Shape_Square(playerID, 1, "60 + 1n Archon", 128, -32)
    # (Line 151) trg.Shape_Square(playerID, 1, "60 + 1n Archon", 160, 160);
    trg.Shape_Square(playerID, 1, "60 + 1n Archon", 160, 160)
    # (Line 152) trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 224, 0);
    trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 224, 0)
    # (Line 153) trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 160, 64);
    trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 160, 64)
    # (Line 154) trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 160, -64);
    trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 160, -64)
    # (Line 155) trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 128, 96);
    trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 128, 96)
    # (Line 156) trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 128, -96);
    trg.Shape_Square(playerID, 1, "Protoss Dark Archon", 128, -96)
    # (Line 158) KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID);
    # (Line 159) KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID);
    DoActions(KillUnitAt(All, "Protoss Dark Archon", "Anywhere", playerID))
    # (Line 161) MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere");
    DoActions(KillUnitAt(All, "60 + 1n Archon", "Anywhere", playerID))
    # (Line 162) Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
    DoActions(MoveLocation(v.P_LocationID[playerID], v.P_UnitID[playerID], playerID, "Anywhere"))
    # (Line 163) Order("60 + 1n Danimoth", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
    DoActions(Order("50 + 1n Battlecruiser", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
    # (Line 164) Order("40 + 1n Mutalisk", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
    DoActions(Order("60 + 1n Danimoth", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
    # (Line 165) Order("40 + 1n Guardian", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
    DoActions(Order("40 + 1n Mutalisk", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
    # (Line 166) Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]);
    DoActions(Order("40 + 1n Guardian", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
    # (Line 167) trg.Main_Wait(130);
    DoActions(Order("40 + 1n Mojo", playerID, "Anywhere", Attack, v.P_LocationID[playerID]))
    trg.Main_Wait(130)
    # (Line 168) v.P_LoopMain[playerID] += 1;
    _ARRW(v.P_LoopMain, playerID).__iadd__(1)
    # (Line 169) }
